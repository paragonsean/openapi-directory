# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.db_instance_db_subnet_group import DBInstanceDBSubnetGroup
from openapi_server.models.db_instance_endpoint import DBInstanceEndpoint
from openapi_server.models.db_instance_pending_modified_values import DBInstancePendingModifiedValues
from openapi_server import util


class DBInstanceListInner(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, db_instance_identifier: str=None, db_instance_class: str=None, engine: str=None, db_instance_status: str=None, endpoint: DBInstanceEndpoint=None, instance_create_time: datetime=None, preferred_backup_window: str=None, backup_retention_period: int=None, vpc_security_groups: List=None, availability_zone: str=None, db_subnet_group: DBInstanceDBSubnetGroup=None, preferred_maintenance_window: str=None, pending_modified_values: DBInstancePendingModifiedValues=None, latest_restorable_time: datetime=None, engine_version: str=None, auto_minor_version_upgrade: bool=None, publicly_accessible: bool=None, status_infos: List=None, db_cluster_identifier: str=None, storage_encrypted: bool=None, kms_key_id: str=None, dbi_resource_id: str=None, ca_certificate_identifier: str=None, copy_tags_to_snapshot: bool=None, promotion_tier: int=None, db_instance_arn: str=None, enabled_cloudwatch_logs_exports: List=None):
        """DBInstanceListInner - a model defined in OpenAPI

        :param db_instance_identifier: The db_instance_identifier of this DBInstanceListInner.
        :param db_instance_class: The db_instance_class of this DBInstanceListInner.
        :param engine: The engine of this DBInstanceListInner.
        :param db_instance_status: The db_instance_status of this DBInstanceListInner.
        :param endpoint: The endpoint of this DBInstanceListInner.
        :param instance_create_time: The instance_create_time of this DBInstanceListInner.
        :param preferred_backup_window: The preferred_backup_window of this DBInstanceListInner.
        :param backup_retention_period: The backup_retention_period of this DBInstanceListInner.
        :param vpc_security_groups: The vpc_security_groups of this DBInstanceListInner.
        :param availability_zone: The availability_zone of this DBInstanceListInner.
        :param db_subnet_group: The db_subnet_group of this DBInstanceListInner.
        :param preferred_maintenance_window: The preferred_maintenance_window of this DBInstanceListInner.
        :param pending_modified_values: The pending_modified_values of this DBInstanceListInner.
        :param latest_restorable_time: The latest_restorable_time of this DBInstanceListInner.
        :param engine_version: The engine_version of this DBInstanceListInner.
        :param auto_minor_version_upgrade: The auto_minor_version_upgrade of this DBInstanceListInner.
        :param publicly_accessible: The publicly_accessible of this DBInstanceListInner.
        :param status_infos: The status_infos of this DBInstanceListInner.
        :param db_cluster_identifier: The db_cluster_identifier of this DBInstanceListInner.
        :param storage_encrypted: The storage_encrypted of this DBInstanceListInner.
        :param kms_key_id: The kms_key_id of this DBInstanceListInner.
        :param dbi_resource_id: The dbi_resource_id of this DBInstanceListInner.
        :param ca_certificate_identifier: The ca_certificate_identifier of this DBInstanceListInner.
        :param copy_tags_to_snapshot: The copy_tags_to_snapshot of this DBInstanceListInner.
        :param promotion_tier: The promotion_tier of this DBInstanceListInner.
        :param db_instance_arn: The db_instance_arn of this DBInstanceListInner.
        :param enabled_cloudwatch_logs_exports: The enabled_cloudwatch_logs_exports of this DBInstanceListInner.
        """
        self.openapi_types = {
            'db_instance_identifier': str,
            'db_instance_class': str,
            'engine': str,
            'db_instance_status': str,
            'endpoint': DBInstanceEndpoint,
            'instance_create_time': datetime,
            'preferred_backup_window': str,
            'backup_retention_period': int,
            'vpc_security_groups': List,
            'availability_zone': str,
            'db_subnet_group': DBInstanceDBSubnetGroup,
            'preferred_maintenance_window': str,
            'pending_modified_values': DBInstancePendingModifiedValues,
            'latest_restorable_time': datetime,
            'engine_version': str,
            'auto_minor_version_upgrade': bool,
            'publicly_accessible': bool,
            'status_infos': List,
            'db_cluster_identifier': str,
            'storage_encrypted': bool,
            'kms_key_id': str,
            'dbi_resource_id': str,
            'ca_certificate_identifier': str,
            'copy_tags_to_snapshot': bool,
            'promotion_tier': int,
            'db_instance_arn': str,
            'enabled_cloudwatch_logs_exports': List
        }

        self.attribute_map = {
            'db_instance_identifier': 'DBInstanceIdentifier',
            'db_instance_class': 'DBInstanceClass',
            'engine': 'Engine',
            'db_instance_status': 'DBInstanceStatus',
            'endpoint': 'Endpoint',
            'instance_create_time': 'InstanceCreateTime',
            'preferred_backup_window': 'PreferredBackupWindow',
            'backup_retention_period': 'BackupRetentionPeriod',
            'vpc_security_groups': 'VpcSecurityGroups',
            'availability_zone': 'AvailabilityZone',
            'db_subnet_group': 'DBSubnetGroup',
            'preferred_maintenance_window': 'PreferredMaintenanceWindow',
            'pending_modified_values': 'PendingModifiedValues',
            'latest_restorable_time': 'LatestRestorableTime',
            'engine_version': 'EngineVersion',
            'auto_minor_version_upgrade': 'AutoMinorVersionUpgrade',
            'publicly_accessible': 'PubliclyAccessible',
            'status_infos': 'StatusInfos',
            'db_cluster_identifier': 'DBClusterIdentifier',
            'storage_encrypted': 'StorageEncrypted',
            'kms_key_id': 'KmsKeyId',
            'dbi_resource_id': 'DbiResourceId',
            'ca_certificate_identifier': 'CACertificateIdentifier',
            'copy_tags_to_snapshot': 'CopyTagsToSnapshot',
            'promotion_tier': 'PromotionTier',
            'db_instance_arn': 'DBInstanceArn',
            'enabled_cloudwatch_logs_exports': 'EnabledCloudwatchLogsExports'
        }

        self._db_instance_identifier = db_instance_identifier
        self._db_instance_class = db_instance_class
        self._engine = engine
        self._db_instance_status = db_instance_status
        self._endpoint = endpoint
        self._instance_create_time = instance_create_time
        self._preferred_backup_window = preferred_backup_window
        self._backup_retention_period = backup_retention_period
        self._vpc_security_groups = vpc_security_groups
        self._availability_zone = availability_zone
        self._db_subnet_group = db_subnet_group
        self._preferred_maintenance_window = preferred_maintenance_window
        self._pending_modified_values = pending_modified_values
        self._latest_restorable_time = latest_restorable_time
        self._engine_version = engine_version
        self._auto_minor_version_upgrade = auto_minor_version_upgrade
        self._publicly_accessible = publicly_accessible
        self._status_infos = status_infos
        self._db_cluster_identifier = db_cluster_identifier
        self._storage_encrypted = storage_encrypted
        self._kms_key_id = kms_key_id
        self._dbi_resource_id = dbi_resource_id
        self._ca_certificate_identifier = ca_certificate_identifier
        self._copy_tags_to_snapshot = copy_tags_to_snapshot
        self._promotion_tier = promotion_tier
        self._db_instance_arn = db_instance_arn
        self._enabled_cloudwatch_logs_exports = enabled_cloudwatch_logs_exports

    @classmethod
    def from_dict(cls, dikt: dict) -> 'DBInstanceListInner':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The DBInstanceList_inner of this DBInstanceListInner.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def db_instance_identifier(self):
        """Gets the db_instance_identifier of this DBInstanceListInner.


        :return: The db_instance_identifier of this DBInstanceListInner.
        :rtype: str
        """
        return self._db_instance_identifier

    @db_instance_identifier.setter
    def db_instance_identifier(self, db_instance_identifier):
        """Sets the db_instance_identifier of this DBInstanceListInner.


        :param db_instance_identifier: The db_instance_identifier of this DBInstanceListInner.
        :type db_instance_identifier: str
        """

        self._db_instance_identifier = db_instance_identifier

    @property
    def db_instance_class(self):
        """Gets the db_instance_class of this DBInstanceListInner.


        :return: The db_instance_class of this DBInstanceListInner.
        :rtype: str
        """
        return self._db_instance_class

    @db_instance_class.setter
    def db_instance_class(self, db_instance_class):
        """Sets the db_instance_class of this DBInstanceListInner.


        :param db_instance_class: The db_instance_class of this DBInstanceListInner.
        :type db_instance_class: str
        """

        self._db_instance_class = db_instance_class

    @property
    def engine(self):
        """Gets the engine of this DBInstanceListInner.


        :return: The engine of this DBInstanceListInner.
        :rtype: str
        """
        return self._engine

    @engine.setter
    def engine(self, engine):
        """Sets the engine of this DBInstanceListInner.


        :param engine: The engine of this DBInstanceListInner.
        :type engine: str
        """

        self._engine = engine

    @property
    def db_instance_status(self):
        """Gets the db_instance_status of this DBInstanceListInner.


        :return: The db_instance_status of this DBInstanceListInner.
        :rtype: str
        """
        return self._db_instance_status

    @db_instance_status.setter
    def db_instance_status(self, db_instance_status):
        """Sets the db_instance_status of this DBInstanceListInner.


        :param db_instance_status: The db_instance_status of this DBInstanceListInner.
        :type db_instance_status: str
        """

        self._db_instance_status = db_instance_status

    @property
    def endpoint(self):
        """Gets the endpoint of this DBInstanceListInner.


        :return: The endpoint of this DBInstanceListInner.
        :rtype: DBInstanceEndpoint
        """
        return self._endpoint

    @endpoint.setter
    def endpoint(self, endpoint):
        """Sets the endpoint of this DBInstanceListInner.


        :param endpoint: The endpoint of this DBInstanceListInner.
        :type endpoint: DBInstanceEndpoint
        """

        self._endpoint = endpoint

    @property
    def instance_create_time(self):
        """Gets the instance_create_time of this DBInstanceListInner.


        :return: The instance_create_time of this DBInstanceListInner.
        :rtype: datetime
        """
        return self._instance_create_time

    @instance_create_time.setter
    def instance_create_time(self, instance_create_time):
        """Sets the instance_create_time of this DBInstanceListInner.


        :param instance_create_time: The instance_create_time of this DBInstanceListInner.
        :type instance_create_time: datetime
        """

        self._instance_create_time = instance_create_time

    @property
    def preferred_backup_window(self):
        """Gets the preferred_backup_window of this DBInstanceListInner.


        :return: The preferred_backup_window of this DBInstanceListInner.
        :rtype: str
        """
        return self._preferred_backup_window

    @preferred_backup_window.setter
    def preferred_backup_window(self, preferred_backup_window):
        """Sets the preferred_backup_window of this DBInstanceListInner.


        :param preferred_backup_window: The preferred_backup_window of this DBInstanceListInner.
        :type preferred_backup_window: str
        """

        self._preferred_backup_window = preferred_backup_window

    @property
    def backup_retention_period(self):
        """Gets the backup_retention_period of this DBInstanceListInner.


        :return: The backup_retention_period of this DBInstanceListInner.
        :rtype: int
        """
        return self._backup_retention_period

    @backup_retention_period.setter
    def backup_retention_period(self, backup_retention_period):
        """Sets the backup_retention_period of this DBInstanceListInner.


        :param backup_retention_period: The backup_retention_period of this DBInstanceListInner.
        :type backup_retention_period: int
        """

        self._backup_retention_period = backup_retention_period

    @property
    def vpc_security_groups(self):
        """Gets the vpc_security_groups of this DBInstanceListInner.


        :return: The vpc_security_groups of this DBInstanceListInner.
        :rtype: List
        """
        return self._vpc_security_groups

    @vpc_security_groups.setter
    def vpc_security_groups(self, vpc_security_groups):
        """Sets the vpc_security_groups of this DBInstanceListInner.


        :param vpc_security_groups: The vpc_security_groups of this DBInstanceListInner.
        :type vpc_security_groups: List
        """

        self._vpc_security_groups = vpc_security_groups

    @property
    def availability_zone(self):
        """Gets the availability_zone of this DBInstanceListInner.


        :return: The availability_zone of this DBInstanceListInner.
        :rtype: str
        """
        return self._availability_zone

    @availability_zone.setter
    def availability_zone(self, availability_zone):
        """Sets the availability_zone of this DBInstanceListInner.


        :param availability_zone: The availability_zone of this DBInstanceListInner.
        :type availability_zone: str
        """

        self._availability_zone = availability_zone

    @property
    def db_subnet_group(self):
        """Gets the db_subnet_group of this DBInstanceListInner.


        :return: The db_subnet_group of this DBInstanceListInner.
        :rtype: DBInstanceDBSubnetGroup
        """
        return self._db_subnet_group

    @db_subnet_group.setter
    def db_subnet_group(self, db_subnet_group):
        """Sets the db_subnet_group of this DBInstanceListInner.


        :param db_subnet_group: The db_subnet_group of this DBInstanceListInner.
        :type db_subnet_group: DBInstanceDBSubnetGroup
        """

        self._db_subnet_group = db_subnet_group

    @property
    def preferred_maintenance_window(self):
        """Gets the preferred_maintenance_window of this DBInstanceListInner.


        :return: The preferred_maintenance_window of this DBInstanceListInner.
        :rtype: str
        """
        return self._preferred_maintenance_window

    @preferred_maintenance_window.setter
    def preferred_maintenance_window(self, preferred_maintenance_window):
        """Sets the preferred_maintenance_window of this DBInstanceListInner.


        :param preferred_maintenance_window: The preferred_maintenance_window of this DBInstanceListInner.
        :type preferred_maintenance_window: str
        """

        self._preferred_maintenance_window = preferred_maintenance_window

    @property
    def pending_modified_values(self):
        """Gets the pending_modified_values of this DBInstanceListInner.


        :return: The pending_modified_values of this DBInstanceListInner.
        :rtype: DBInstancePendingModifiedValues
        """
        return self._pending_modified_values

    @pending_modified_values.setter
    def pending_modified_values(self, pending_modified_values):
        """Sets the pending_modified_values of this DBInstanceListInner.


        :param pending_modified_values: The pending_modified_values of this DBInstanceListInner.
        :type pending_modified_values: DBInstancePendingModifiedValues
        """

        self._pending_modified_values = pending_modified_values

    @property
    def latest_restorable_time(self):
        """Gets the latest_restorable_time of this DBInstanceListInner.


        :return: The latest_restorable_time of this DBInstanceListInner.
        :rtype: datetime
        """
        return self._latest_restorable_time

    @latest_restorable_time.setter
    def latest_restorable_time(self, latest_restorable_time):
        """Sets the latest_restorable_time of this DBInstanceListInner.


        :param latest_restorable_time: The latest_restorable_time of this DBInstanceListInner.
        :type latest_restorable_time: datetime
        """

        self._latest_restorable_time = latest_restorable_time

    @property
    def engine_version(self):
        """Gets the engine_version of this DBInstanceListInner.


        :return: The engine_version of this DBInstanceListInner.
        :rtype: str
        """
        return self._engine_version

    @engine_version.setter
    def engine_version(self, engine_version):
        """Sets the engine_version of this DBInstanceListInner.


        :param engine_version: The engine_version of this DBInstanceListInner.
        :type engine_version: str
        """

        self._engine_version = engine_version

    @property
    def auto_minor_version_upgrade(self):
        """Gets the auto_minor_version_upgrade of this DBInstanceListInner.


        :return: The auto_minor_version_upgrade of this DBInstanceListInner.
        :rtype: bool
        """
        return self._auto_minor_version_upgrade

    @auto_minor_version_upgrade.setter
    def auto_minor_version_upgrade(self, auto_minor_version_upgrade):
        """Sets the auto_minor_version_upgrade of this DBInstanceListInner.


        :param auto_minor_version_upgrade: The auto_minor_version_upgrade of this DBInstanceListInner.
        :type auto_minor_version_upgrade: bool
        """

        self._auto_minor_version_upgrade = auto_minor_version_upgrade

    @property
    def publicly_accessible(self):
        """Gets the publicly_accessible of this DBInstanceListInner.


        :return: The publicly_accessible of this DBInstanceListInner.
        :rtype: bool
        """
        return self._publicly_accessible

    @publicly_accessible.setter
    def publicly_accessible(self, publicly_accessible):
        """Sets the publicly_accessible of this DBInstanceListInner.


        :param publicly_accessible: The publicly_accessible of this DBInstanceListInner.
        :type publicly_accessible: bool
        """

        self._publicly_accessible = publicly_accessible

    @property
    def status_infos(self):
        """Gets the status_infos of this DBInstanceListInner.


        :return: The status_infos of this DBInstanceListInner.
        :rtype: List
        """
        return self._status_infos

    @status_infos.setter
    def status_infos(self, status_infos):
        """Sets the status_infos of this DBInstanceListInner.


        :param status_infos: The status_infos of this DBInstanceListInner.
        :type status_infos: List
        """

        self._status_infos = status_infos

    @property
    def db_cluster_identifier(self):
        """Gets the db_cluster_identifier of this DBInstanceListInner.


        :return: The db_cluster_identifier of this DBInstanceListInner.
        :rtype: str
        """
        return self._db_cluster_identifier

    @db_cluster_identifier.setter
    def db_cluster_identifier(self, db_cluster_identifier):
        """Sets the db_cluster_identifier of this DBInstanceListInner.


        :param db_cluster_identifier: The db_cluster_identifier of this DBInstanceListInner.
        :type db_cluster_identifier: str
        """

        self._db_cluster_identifier = db_cluster_identifier

    @property
    def storage_encrypted(self):
        """Gets the storage_encrypted of this DBInstanceListInner.


        :return: The storage_encrypted of this DBInstanceListInner.
        :rtype: bool
        """
        return self._storage_encrypted

    @storage_encrypted.setter
    def storage_encrypted(self, storage_encrypted):
        """Sets the storage_encrypted of this DBInstanceListInner.


        :param storage_encrypted: The storage_encrypted of this DBInstanceListInner.
        :type storage_encrypted: bool
        """

        self._storage_encrypted = storage_encrypted

    @property
    def kms_key_id(self):
        """Gets the kms_key_id of this DBInstanceListInner.


        :return: The kms_key_id of this DBInstanceListInner.
        :rtype: str
        """
        return self._kms_key_id

    @kms_key_id.setter
    def kms_key_id(self, kms_key_id):
        """Sets the kms_key_id of this DBInstanceListInner.


        :param kms_key_id: The kms_key_id of this DBInstanceListInner.
        :type kms_key_id: str
        """

        self._kms_key_id = kms_key_id

    @property
    def dbi_resource_id(self):
        """Gets the dbi_resource_id of this DBInstanceListInner.


        :return: The dbi_resource_id of this DBInstanceListInner.
        :rtype: str
        """
        return self._dbi_resource_id

    @dbi_resource_id.setter
    def dbi_resource_id(self, dbi_resource_id):
        """Sets the dbi_resource_id of this DBInstanceListInner.


        :param dbi_resource_id: The dbi_resource_id of this DBInstanceListInner.
        :type dbi_resource_id: str
        """

        self._dbi_resource_id = dbi_resource_id

    @property
    def ca_certificate_identifier(self):
        """Gets the ca_certificate_identifier of this DBInstanceListInner.


        :return: The ca_certificate_identifier of this DBInstanceListInner.
        :rtype: str
        """
        return self._ca_certificate_identifier

    @ca_certificate_identifier.setter
    def ca_certificate_identifier(self, ca_certificate_identifier):
        """Sets the ca_certificate_identifier of this DBInstanceListInner.


        :param ca_certificate_identifier: The ca_certificate_identifier of this DBInstanceListInner.
        :type ca_certificate_identifier: str
        """

        self._ca_certificate_identifier = ca_certificate_identifier

    @property
    def copy_tags_to_snapshot(self):
        """Gets the copy_tags_to_snapshot of this DBInstanceListInner.


        :return: The copy_tags_to_snapshot of this DBInstanceListInner.
        :rtype: bool
        """
        return self._copy_tags_to_snapshot

    @copy_tags_to_snapshot.setter
    def copy_tags_to_snapshot(self, copy_tags_to_snapshot):
        """Sets the copy_tags_to_snapshot of this DBInstanceListInner.


        :param copy_tags_to_snapshot: The copy_tags_to_snapshot of this DBInstanceListInner.
        :type copy_tags_to_snapshot: bool
        """

        self._copy_tags_to_snapshot = copy_tags_to_snapshot

    @property
    def promotion_tier(self):
        """Gets the promotion_tier of this DBInstanceListInner.


        :return: The promotion_tier of this DBInstanceListInner.
        :rtype: int
        """
        return self._promotion_tier

    @promotion_tier.setter
    def promotion_tier(self, promotion_tier):
        """Sets the promotion_tier of this DBInstanceListInner.


        :param promotion_tier: The promotion_tier of this DBInstanceListInner.
        :type promotion_tier: int
        """

        self._promotion_tier = promotion_tier

    @property
    def db_instance_arn(self):
        """Gets the db_instance_arn of this DBInstanceListInner.


        :return: The db_instance_arn of this DBInstanceListInner.
        :rtype: str
        """
        return self._db_instance_arn

    @db_instance_arn.setter
    def db_instance_arn(self, db_instance_arn):
        """Sets the db_instance_arn of this DBInstanceListInner.


        :param db_instance_arn: The db_instance_arn of this DBInstanceListInner.
        :type db_instance_arn: str
        """

        self._db_instance_arn = db_instance_arn

    @property
    def enabled_cloudwatch_logs_exports(self):
        """Gets the enabled_cloudwatch_logs_exports of this DBInstanceListInner.


        :return: The enabled_cloudwatch_logs_exports of this DBInstanceListInner.
        :rtype: List
        """
        return self._enabled_cloudwatch_logs_exports

    @enabled_cloudwatch_logs_exports.setter
    def enabled_cloudwatch_logs_exports(self, enabled_cloudwatch_logs_exports):
        """Sets the enabled_cloudwatch_logs_exports of this DBInstanceListInner.


        :param enabled_cloudwatch_logs_exports: The enabled_cloudwatch_logs_exports of this DBInstanceListInner.
        :type enabled_cloudwatch_logs_exports: List
        """

        self._enabled_cloudwatch_logs_exports = enabled_cloudwatch_logs_exports
