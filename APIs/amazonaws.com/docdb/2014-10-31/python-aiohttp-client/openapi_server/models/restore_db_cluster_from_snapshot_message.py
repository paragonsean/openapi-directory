# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class RestoreDBClusterFromSnapshotMessage(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, availability_zones: List=None, db_cluster_identifier: str=None, snapshot_identifier: str=None, engine: str=None, engine_version: str=None, port: int=None, db_subnet_group_name: str=None, vpc_security_group_ids: List=None, tags: List=None, kms_key_id: str=None, enable_cloudwatch_logs_exports: List=None, deletion_protection: bool=None, db_cluster_parameter_group_name: str=None):
        """RestoreDBClusterFromSnapshotMessage - a model defined in OpenAPI

        :param availability_zones: The availability_zones of this RestoreDBClusterFromSnapshotMessage.
        :param db_cluster_identifier: The db_cluster_identifier of this RestoreDBClusterFromSnapshotMessage.
        :param snapshot_identifier: The snapshot_identifier of this RestoreDBClusterFromSnapshotMessage.
        :param engine: The engine of this RestoreDBClusterFromSnapshotMessage.
        :param engine_version: The engine_version of this RestoreDBClusterFromSnapshotMessage.
        :param port: The port of this RestoreDBClusterFromSnapshotMessage.
        :param db_subnet_group_name: The db_subnet_group_name of this RestoreDBClusterFromSnapshotMessage.
        :param vpc_security_group_ids: The vpc_security_group_ids of this RestoreDBClusterFromSnapshotMessage.
        :param tags: The tags of this RestoreDBClusterFromSnapshotMessage.
        :param kms_key_id: The kms_key_id of this RestoreDBClusterFromSnapshotMessage.
        :param enable_cloudwatch_logs_exports: The enable_cloudwatch_logs_exports of this RestoreDBClusterFromSnapshotMessage.
        :param deletion_protection: The deletion_protection of this RestoreDBClusterFromSnapshotMessage.
        :param db_cluster_parameter_group_name: The db_cluster_parameter_group_name of this RestoreDBClusterFromSnapshotMessage.
        """
        self.openapi_types = {
            'availability_zones': List,
            'db_cluster_identifier': str,
            'snapshot_identifier': str,
            'engine': str,
            'engine_version': str,
            'port': int,
            'db_subnet_group_name': str,
            'vpc_security_group_ids': List,
            'tags': List,
            'kms_key_id': str,
            'enable_cloudwatch_logs_exports': List,
            'deletion_protection': bool,
            'db_cluster_parameter_group_name': str
        }

        self.attribute_map = {
            'availability_zones': 'AvailabilityZones',
            'db_cluster_identifier': 'DBClusterIdentifier',
            'snapshot_identifier': 'SnapshotIdentifier',
            'engine': 'Engine',
            'engine_version': 'EngineVersion',
            'port': 'Port',
            'db_subnet_group_name': 'DBSubnetGroupName',
            'vpc_security_group_ids': 'VpcSecurityGroupIds',
            'tags': 'Tags',
            'kms_key_id': 'KmsKeyId',
            'enable_cloudwatch_logs_exports': 'EnableCloudwatchLogsExports',
            'deletion_protection': 'DeletionProtection',
            'db_cluster_parameter_group_name': 'DBClusterParameterGroupName'
        }

        self._availability_zones = availability_zones
        self._db_cluster_identifier = db_cluster_identifier
        self._snapshot_identifier = snapshot_identifier
        self._engine = engine
        self._engine_version = engine_version
        self._port = port
        self._db_subnet_group_name = db_subnet_group_name
        self._vpc_security_group_ids = vpc_security_group_ids
        self._tags = tags
        self._kms_key_id = kms_key_id
        self._enable_cloudwatch_logs_exports = enable_cloudwatch_logs_exports
        self._deletion_protection = deletion_protection
        self._db_cluster_parameter_group_name = db_cluster_parameter_group_name

    @classmethod
    def from_dict(cls, dikt: dict) -> 'RestoreDBClusterFromSnapshotMessage':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The RestoreDBClusterFromSnapshotMessage of this RestoreDBClusterFromSnapshotMessage.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def availability_zones(self):
        """Gets the availability_zones of this RestoreDBClusterFromSnapshotMessage.


        :return: The availability_zones of this RestoreDBClusterFromSnapshotMessage.
        :rtype: List
        """
        return self._availability_zones

    @availability_zones.setter
    def availability_zones(self, availability_zones):
        """Sets the availability_zones of this RestoreDBClusterFromSnapshotMessage.


        :param availability_zones: The availability_zones of this RestoreDBClusterFromSnapshotMessage.
        :type availability_zones: List
        """

        self._availability_zones = availability_zones

    @property
    def db_cluster_identifier(self):
        """Gets the db_cluster_identifier of this RestoreDBClusterFromSnapshotMessage.


        :return: The db_cluster_identifier of this RestoreDBClusterFromSnapshotMessage.
        :rtype: str
        """
        return self._db_cluster_identifier

    @db_cluster_identifier.setter
    def db_cluster_identifier(self, db_cluster_identifier):
        """Sets the db_cluster_identifier of this RestoreDBClusterFromSnapshotMessage.


        :param db_cluster_identifier: The db_cluster_identifier of this RestoreDBClusterFromSnapshotMessage.
        :type db_cluster_identifier: str
        """
        if db_cluster_identifier is None:
            raise ValueError("Invalid value for `db_cluster_identifier`, must not be `None`")

        self._db_cluster_identifier = db_cluster_identifier

    @property
    def snapshot_identifier(self):
        """Gets the snapshot_identifier of this RestoreDBClusterFromSnapshotMessage.


        :return: The snapshot_identifier of this RestoreDBClusterFromSnapshotMessage.
        :rtype: str
        """
        return self._snapshot_identifier

    @snapshot_identifier.setter
    def snapshot_identifier(self, snapshot_identifier):
        """Sets the snapshot_identifier of this RestoreDBClusterFromSnapshotMessage.


        :param snapshot_identifier: The snapshot_identifier of this RestoreDBClusterFromSnapshotMessage.
        :type snapshot_identifier: str
        """
        if snapshot_identifier is None:
            raise ValueError("Invalid value for `snapshot_identifier`, must not be `None`")

        self._snapshot_identifier = snapshot_identifier

    @property
    def engine(self):
        """Gets the engine of this RestoreDBClusterFromSnapshotMessage.


        :return: The engine of this RestoreDBClusterFromSnapshotMessage.
        :rtype: str
        """
        return self._engine

    @engine.setter
    def engine(self, engine):
        """Sets the engine of this RestoreDBClusterFromSnapshotMessage.


        :param engine: The engine of this RestoreDBClusterFromSnapshotMessage.
        :type engine: str
        """
        if engine is None:
            raise ValueError("Invalid value for `engine`, must not be `None`")

        self._engine = engine

    @property
    def engine_version(self):
        """Gets the engine_version of this RestoreDBClusterFromSnapshotMessage.


        :return: The engine_version of this RestoreDBClusterFromSnapshotMessage.
        :rtype: str
        """
        return self._engine_version

    @engine_version.setter
    def engine_version(self, engine_version):
        """Sets the engine_version of this RestoreDBClusterFromSnapshotMessage.


        :param engine_version: The engine_version of this RestoreDBClusterFromSnapshotMessage.
        :type engine_version: str
        """

        self._engine_version = engine_version

    @property
    def port(self):
        """Gets the port of this RestoreDBClusterFromSnapshotMessage.


        :return: The port of this RestoreDBClusterFromSnapshotMessage.
        :rtype: int
        """
        return self._port

    @port.setter
    def port(self, port):
        """Sets the port of this RestoreDBClusterFromSnapshotMessage.


        :param port: The port of this RestoreDBClusterFromSnapshotMessage.
        :type port: int
        """

        self._port = port

    @property
    def db_subnet_group_name(self):
        """Gets the db_subnet_group_name of this RestoreDBClusterFromSnapshotMessage.


        :return: The db_subnet_group_name of this RestoreDBClusterFromSnapshotMessage.
        :rtype: str
        """
        return self._db_subnet_group_name

    @db_subnet_group_name.setter
    def db_subnet_group_name(self, db_subnet_group_name):
        """Sets the db_subnet_group_name of this RestoreDBClusterFromSnapshotMessage.


        :param db_subnet_group_name: The db_subnet_group_name of this RestoreDBClusterFromSnapshotMessage.
        :type db_subnet_group_name: str
        """

        self._db_subnet_group_name = db_subnet_group_name

    @property
    def vpc_security_group_ids(self):
        """Gets the vpc_security_group_ids of this RestoreDBClusterFromSnapshotMessage.


        :return: The vpc_security_group_ids of this RestoreDBClusterFromSnapshotMessage.
        :rtype: List
        """
        return self._vpc_security_group_ids

    @vpc_security_group_ids.setter
    def vpc_security_group_ids(self, vpc_security_group_ids):
        """Sets the vpc_security_group_ids of this RestoreDBClusterFromSnapshotMessage.


        :param vpc_security_group_ids: The vpc_security_group_ids of this RestoreDBClusterFromSnapshotMessage.
        :type vpc_security_group_ids: List
        """

        self._vpc_security_group_ids = vpc_security_group_ids

    @property
    def tags(self):
        """Gets the tags of this RestoreDBClusterFromSnapshotMessage.


        :return: The tags of this RestoreDBClusterFromSnapshotMessage.
        :rtype: List
        """
        return self._tags

    @tags.setter
    def tags(self, tags):
        """Sets the tags of this RestoreDBClusterFromSnapshotMessage.


        :param tags: The tags of this RestoreDBClusterFromSnapshotMessage.
        :type tags: List
        """

        self._tags = tags

    @property
    def kms_key_id(self):
        """Gets the kms_key_id of this RestoreDBClusterFromSnapshotMessage.


        :return: The kms_key_id of this RestoreDBClusterFromSnapshotMessage.
        :rtype: str
        """
        return self._kms_key_id

    @kms_key_id.setter
    def kms_key_id(self, kms_key_id):
        """Sets the kms_key_id of this RestoreDBClusterFromSnapshotMessage.


        :param kms_key_id: The kms_key_id of this RestoreDBClusterFromSnapshotMessage.
        :type kms_key_id: str
        """

        self._kms_key_id = kms_key_id

    @property
    def enable_cloudwatch_logs_exports(self):
        """Gets the enable_cloudwatch_logs_exports of this RestoreDBClusterFromSnapshotMessage.


        :return: The enable_cloudwatch_logs_exports of this RestoreDBClusterFromSnapshotMessage.
        :rtype: List
        """
        return self._enable_cloudwatch_logs_exports

    @enable_cloudwatch_logs_exports.setter
    def enable_cloudwatch_logs_exports(self, enable_cloudwatch_logs_exports):
        """Sets the enable_cloudwatch_logs_exports of this RestoreDBClusterFromSnapshotMessage.


        :param enable_cloudwatch_logs_exports: The enable_cloudwatch_logs_exports of this RestoreDBClusterFromSnapshotMessage.
        :type enable_cloudwatch_logs_exports: List
        """

        self._enable_cloudwatch_logs_exports = enable_cloudwatch_logs_exports

    @property
    def deletion_protection(self):
        """Gets the deletion_protection of this RestoreDBClusterFromSnapshotMessage.


        :return: The deletion_protection of this RestoreDBClusterFromSnapshotMessage.
        :rtype: bool
        """
        return self._deletion_protection

    @deletion_protection.setter
    def deletion_protection(self, deletion_protection):
        """Sets the deletion_protection of this RestoreDBClusterFromSnapshotMessage.


        :param deletion_protection: The deletion_protection of this RestoreDBClusterFromSnapshotMessage.
        :type deletion_protection: bool
        """

        self._deletion_protection = deletion_protection

    @property
    def db_cluster_parameter_group_name(self):
        """Gets the db_cluster_parameter_group_name of this RestoreDBClusterFromSnapshotMessage.


        :return: The db_cluster_parameter_group_name of this RestoreDBClusterFromSnapshotMessage.
        :rtype: str
        """
        return self._db_cluster_parameter_group_name

    @db_cluster_parameter_group_name.setter
    def db_cluster_parameter_group_name(self, db_cluster_parameter_group_name):
        """Sets the db_cluster_parameter_group_name of this RestoreDBClusterFromSnapshotMessage.


        :param db_cluster_parameter_group_name: The db_cluster_parameter_group_name of this RestoreDBClusterFromSnapshotMessage.
        :type db_cluster_parameter_group_name: str
        """

        self._db_cluster_parameter_group_name = db_cluster_parameter_group_name
