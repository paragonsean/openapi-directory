# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class GlobalClusterListInner(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, global_cluster_identifier: str=None, global_cluster_resource_id: str=None, global_cluster_arn: str=None, status: str=None, engine: str=None, engine_version: str=None, database_name: str=None, storage_encrypted: bool=None, deletion_protection: bool=None, global_cluster_members: List=None):
        """GlobalClusterListInner - a model defined in OpenAPI

        :param global_cluster_identifier: The global_cluster_identifier of this GlobalClusterListInner.
        :param global_cluster_resource_id: The global_cluster_resource_id of this GlobalClusterListInner.
        :param global_cluster_arn: The global_cluster_arn of this GlobalClusterListInner.
        :param status: The status of this GlobalClusterListInner.
        :param engine: The engine of this GlobalClusterListInner.
        :param engine_version: The engine_version of this GlobalClusterListInner.
        :param database_name: The database_name of this GlobalClusterListInner.
        :param storage_encrypted: The storage_encrypted of this GlobalClusterListInner.
        :param deletion_protection: The deletion_protection of this GlobalClusterListInner.
        :param global_cluster_members: The global_cluster_members of this GlobalClusterListInner.
        """
        self.openapi_types = {
            'global_cluster_identifier': str,
            'global_cluster_resource_id': str,
            'global_cluster_arn': str,
            'status': str,
            'engine': str,
            'engine_version': str,
            'database_name': str,
            'storage_encrypted': bool,
            'deletion_protection': bool,
            'global_cluster_members': List
        }

        self.attribute_map = {
            'global_cluster_identifier': 'GlobalClusterIdentifier',
            'global_cluster_resource_id': 'GlobalClusterResourceId',
            'global_cluster_arn': 'GlobalClusterArn',
            'status': 'Status',
            'engine': 'Engine',
            'engine_version': 'EngineVersion',
            'database_name': 'DatabaseName',
            'storage_encrypted': 'StorageEncrypted',
            'deletion_protection': 'DeletionProtection',
            'global_cluster_members': 'GlobalClusterMembers'
        }

        self._global_cluster_identifier = global_cluster_identifier
        self._global_cluster_resource_id = global_cluster_resource_id
        self._global_cluster_arn = global_cluster_arn
        self._status = status
        self._engine = engine
        self._engine_version = engine_version
        self._database_name = database_name
        self._storage_encrypted = storage_encrypted
        self._deletion_protection = deletion_protection
        self._global_cluster_members = global_cluster_members

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GlobalClusterListInner':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The GlobalClusterList_inner of this GlobalClusterListInner.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def global_cluster_identifier(self):
        """Gets the global_cluster_identifier of this GlobalClusterListInner.


        :return: The global_cluster_identifier of this GlobalClusterListInner.
        :rtype: str
        """
        return self._global_cluster_identifier

    @global_cluster_identifier.setter
    def global_cluster_identifier(self, global_cluster_identifier):
        """Sets the global_cluster_identifier of this GlobalClusterListInner.


        :param global_cluster_identifier: The global_cluster_identifier of this GlobalClusterListInner.
        :type global_cluster_identifier: str
        """

        self._global_cluster_identifier = global_cluster_identifier

    @property
    def global_cluster_resource_id(self):
        """Gets the global_cluster_resource_id of this GlobalClusterListInner.


        :return: The global_cluster_resource_id of this GlobalClusterListInner.
        :rtype: str
        """
        return self._global_cluster_resource_id

    @global_cluster_resource_id.setter
    def global_cluster_resource_id(self, global_cluster_resource_id):
        """Sets the global_cluster_resource_id of this GlobalClusterListInner.


        :param global_cluster_resource_id: The global_cluster_resource_id of this GlobalClusterListInner.
        :type global_cluster_resource_id: str
        """

        self._global_cluster_resource_id = global_cluster_resource_id

    @property
    def global_cluster_arn(self):
        """Gets the global_cluster_arn of this GlobalClusterListInner.


        :return: The global_cluster_arn of this GlobalClusterListInner.
        :rtype: str
        """
        return self._global_cluster_arn

    @global_cluster_arn.setter
    def global_cluster_arn(self, global_cluster_arn):
        """Sets the global_cluster_arn of this GlobalClusterListInner.


        :param global_cluster_arn: The global_cluster_arn of this GlobalClusterListInner.
        :type global_cluster_arn: str
        """

        self._global_cluster_arn = global_cluster_arn

    @property
    def status(self):
        """Gets the status of this GlobalClusterListInner.


        :return: The status of this GlobalClusterListInner.
        :rtype: str
        """
        return self._status

    @status.setter
    def status(self, status):
        """Sets the status of this GlobalClusterListInner.


        :param status: The status of this GlobalClusterListInner.
        :type status: str
        """

        self._status = status

    @property
    def engine(self):
        """Gets the engine of this GlobalClusterListInner.


        :return: The engine of this GlobalClusterListInner.
        :rtype: str
        """
        return self._engine

    @engine.setter
    def engine(self, engine):
        """Sets the engine of this GlobalClusterListInner.


        :param engine: The engine of this GlobalClusterListInner.
        :type engine: str
        """

        self._engine = engine

    @property
    def engine_version(self):
        """Gets the engine_version of this GlobalClusterListInner.


        :return: The engine_version of this GlobalClusterListInner.
        :rtype: str
        """
        return self._engine_version

    @engine_version.setter
    def engine_version(self, engine_version):
        """Sets the engine_version of this GlobalClusterListInner.


        :param engine_version: The engine_version of this GlobalClusterListInner.
        :type engine_version: str
        """

        self._engine_version = engine_version

    @property
    def database_name(self):
        """Gets the database_name of this GlobalClusterListInner.


        :return: The database_name of this GlobalClusterListInner.
        :rtype: str
        """
        return self._database_name

    @database_name.setter
    def database_name(self, database_name):
        """Sets the database_name of this GlobalClusterListInner.


        :param database_name: The database_name of this GlobalClusterListInner.
        :type database_name: str
        """

        self._database_name = database_name

    @property
    def storage_encrypted(self):
        """Gets the storage_encrypted of this GlobalClusterListInner.


        :return: The storage_encrypted of this GlobalClusterListInner.
        :rtype: bool
        """
        return self._storage_encrypted

    @storage_encrypted.setter
    def storage_encrypted(self, storage_encrypted):
        """Sets the storage_encrypted of this GlobalClusterListInner.


        :param storage_encrypted: The storage_encrypted of this GlobalClusterListInner.
        :type storage_encrypted: bool
        """

        self._storage_encrypted = storage_encrypted

    @property
    def deletion_protection(self):
        """Gets the deletion_protection of this GlobalClusterListInner.


        :return: The deletion_protection of this GlobalClusterListInner.
        :rtype: bool
        """
        return self._deletion_protection

    @deletion_protection.setter
    def deletion_protection(self, deletion_protection):
        """Sets the deletion_protection of this GlobalClusterListInner.


        :param deletion_protection: The deletion_protection of this GlobalClusterListInner.
        :type deletion_protection: bool
        """

        self._deletion_protection = deletion_protection

    @property
    def global_cluster_members(self):
        """Gets the global_cluster_members of this GlobalClusterListInner.


        :return: The global_cluster_members of this GlobalClusterListInner.
        :rtype: List
        """
        return self._global_cluster_members

    @global_cluster_members.setter
    def global_cluster_members(self, global_cluster_members):
        """Sets the global_cluster_members of this GlobalClusterListInner.


        :param global_cluster_members: The global_cluster_members of this GlobalClusterListInner.
        :type global_cluster_members: List
        """

        self._global_cluster_members = global_cluster_members
