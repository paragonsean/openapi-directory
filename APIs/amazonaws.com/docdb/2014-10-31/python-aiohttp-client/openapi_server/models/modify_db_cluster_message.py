# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.modify_db_cluster_message_cloudwatch_logs_export_configuration import ModifyDBClusterMessageCloudwatchLogsExportConfiguration
from openapi_server import util


class ModifyDBClusterMessage(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, db_cluster_identifier: str=None, new_db_cluster_identifier: str=None, apply_immediately: bool=None, backup_retention_period: int=None, db_cluster_parameter_group_name: str=None, vpc_security_group_ids: List=None, port: int=None, master_user_password: str=None, preferred_backup_window: str=None, preferred_maintenance_window: str=None, cloudwatch_logs_export_configuration: ModifyDBClusterMessageCloudwatchLogsExportConfiguration=None, engine_version: str=None, allow_major_version_upgrade: bool=None, deletion_protection: bool=None):
        """ModifyDBClusterMessage - a model defined in OpenAPI

        :param db_cluster_identifier: The db_cluster_identifier of this ModifyDBClusterMessage.
        :param new_db_cluster_identifier: The new_db_cluster_identifier of this ModifyDBClusterMessage.
        :param apply_immediately: The apply_immediately of this ModifyDBClusterMessage.
        :param backup_retention_period: The backup_retention_period of this ModifyDBClusterMessage.
        :param db_cluster_parameter_group_name: The db_cluster_parameter_group_name of this ModifyDBClusterMessage.
        :param vpc_security_group_ids: The vpc_security_group_ids of this ModifyDBClusterMessage.
        :param port: The port of this ModifyDBClusterMessage.
        :param master_user_password: The master_user_password of this ModifyDBClusterMessage.
        :param preferred_backup_window: The preferred_backup_window of this ModifyDBClusterMessage.
        :param preferred_maintenance_window: The preferred_maintenance_window of this ModifyDBClusterMessage.
        :param cloudwatch_logs_export_configuration: The cloudwatch_logs_export_configuration of this ModifyDBClusterMessage.
        :param engine_version: The engine_version of this ModifyDBClusterMessage.
        :param allow_major_version_upgrade: The allow_major_version_upgrade of this ModifyDBClusterMessage.
        :param deletion_protection: The deletion_protection of this ModifyDBClusterMessage.
        """
        self.openapi_types = {
            'db_cluster_identifier': str,
            'new_db_cluster_identifier': str,
            'apply_immediately': bool,
            'backup_retention_period': int,
            'db_cluster_parameter_group_name': str,
            'vpc_security_group_ids': List,
            'port': int,
            'master_user_password': str,
            'preferred_backup_window': str,
            'preferred_maintenance_window': str,
            'cloudwatch_logs_export_configuration': ModifyDBClusterMessageCloudwatchLogsExportConfiguration,
            'engine_version': str,
            'allow_major_version_upgrade': bool,
            'deletion_protection': bool
        }

        self.attribute_map = {
            'db_cluster_identifier': 'DBClusterIdentifier',
            'new_db_cluster_identifier': 'NewDBClusterIdentifier',
            'apply_immediately': 'ApplyImmediately',
            'backup_retention_period': 'BackupRetentionPeriod',
            'db_cluster_parameter_group_name': 'DBClusterParameterGroupName',
            'vpc_security_group_ids': 'VpcSecurityGroupIds',
            'port': 'Port',
            'master_user_password': 'MasterUserPassword',
            'preferred_backup_window': 'PreferredBackupWindow',
            'preferred_maintenance_window': 'PreferredMaintenanceWindow',
            'cloudwatch_logs_export_configuration': 'CloudwatchLogsExportConfiguration',
            'engine_version': 'EngineVersion',
            'allow_major_version_upgrade': 'AllowMajorVersionUpgrade',
            'deletion_protection': 'DeletionProtection'
        }

        self._db_cluster_identifier = db_cluster_identifier
        self._new_db_cluster_identifier = new_db_cluster_identifier
        self._apply_immediately = apply_immediately
        self._backup_retention_period = backup_retention_period
        self._db_cluster_parameter_group_name = db_cluster_parameter_group_name
        self._vpc_security_group_ids = vpc_security_group_ids
        self._port = port
        self._master_user_password = master_user_password
        self._preferred_backup_window = preferred_backup_window
        self._preferred_maintenance_window = preferred_maintenance_window
        self._cloudwatch_logs_export_configuration = cloudwatch_logs_export_configuration
        self._engine_version = engine_version
        self._allow_major_version_upgrade = allow_major_version_upgrade
        self._deletion_protection = deletion_protection

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ModifyDBClusterMessage':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ModifyDBClusterMessage of this ModifyDBClusterMessage.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def db_cluster_identifier(self):
        """Gets the db_cluster_identifier of this ModifyDBClusterMessage.


        :return: The db_cluster_identifier of this ModifyDBClusterMessage.
        :rtype: str
        """
        return self._db_cluster_identifier

    @db_cluster_identifier.setter
    def db_cluster_identifier(self, db_cluster_identifier):
        """Sets the db_cluster_identifier of this ModifyDBClusterMessage.


        :param db_cluster_identifier: The db_cluster_identifier of this ModifyDBClusterMessage.
        :type db_cluster_identifier: str
        """
        if db_cluster_identifier is None:
            raise ValueError("Invalid value for `db_cluster_identifier`, must not be `None`")

        self._db_cluster_identifier = db_cluster_identifier

    @property
    def new_db_cluster_identifier(self):
        """Gets the new_db_cluster_identifier of this ModifyDBClusterMessage.


        :return: The new_db_cluster_identifier of this ModifyDBClusterMessage.
        :rtype: str
        """
        return self._new_db_cluster_identifier

    @new_db_cluster_identifier.setter
    def new_db_cluster_identifier(self, new_db_cluster_identifier):
        """Sets the new_db_cluster_identifier of this ModifyDBClusterMessage.


        :param new_db_cluster_identifier: The new_db_cluster_identifier of this ModifyDBClusterMessage.
        :type new_db_cluster_identifier: str
        """

        self._new_db_cluster_identifier = new_db_cluster_identifier

    @property
    def apply_immediately(self):
        """Gets the apply_immediately of this ModifyDBClusterMessage.


        :return: The apply_immediately of this ModifyDBClusterMessage.
        :rtype: bool
        """
        return self._apply_immediately

    @apply_immediately.setter
    def apply_immediately(self, apply_immediately):
        """Sets the apply_immediately of this ModifyDBClusterMessage.


        :param apply_immediately: The apply_immediately of this ModifyDBClusterMessage.
        :type apply_immediately: bool
        """

        self._apply_immediately = apply_immediately

    @property
    def backup_retention_period(self):
        """Gets the backup_retention_period of this ModifyDBClusterMessage.


        :return: The backup_retention_period of this ModifyDBClusterMessage.
        :rtype: int
        """
        return self._backup_retention_period

    @backup_retention_period.setter
    def backup_retention_period(self, backup_retention_period):
        """Sets the backup_retention_period of this ModifyDBClusterMessage.


        :param backup_retention_period: The backup_retention_period of this ModifyDBClusterMessage.
        :type backup_retention_period: int
        """

        self._backup_retention_period = backup_retention_period

    @property
    def db_cluster_parameter_group_name(self):
        """Gets the db_cluster_parameter_group_name of this ModifyDBClusterMessage.


        :return: The db_cluster_parameter_group_name of this ModifyDBClusterMessage.
        :rtype: str
        """
        return self._db_cluster_parameter_group_name

    @db_cluster_parameter_group_name.setter
    def db_cluster_parameter_group_name(self, db_cluster_parameter_group_name):
        """Sets the db_cluster_parameter_group_name of this ModifyDBClusterMessage.


        :param db_cluster_parameter_group_name: The db_cluster_parameter_group_name of this ModifyDBClusterMessage.
        :type db_cluster_parameter_group_name: str
        """

        self._db_cluster_parameter_group_name = db_cluster_parameter_group_name

    @property
    def vpc_security_group_ids(self):
        """Gets the vpc_security_group_ids of this ModifyDBClusterMessage.


        :return: The vpc_security_group_ids of this ModifyDBClusterMessage.
        :rtype: List
        """
        return self._vpc_security_group_ids

    @vpc_security_group_ids.setter
    def vpc_security_group_ids(self, vpc_security_group_ids):
        """Sets the vpc_security_group_ids of this ModifyDBClusterMessage.


        :param vpc_security_group_ids: The vpc_security_group_ids of this ModifyDBClusterMessage.
        :type vpc_security_group_ids: List
        """

        self._vpc_security_group_ids = vpc_security_group_ids

    @property
    def port(self):
        """Gets the port of this ModifyDBClusterMessage.


        :return: The port of this ModifyDBClusterMessage.
        :rtype: int
        """
        return self._port

    @port.setter
    def port(self, port):
        """Sets the port of this ModifyDBClusterMessage.


        :param port: The port of this ModifyDBClusterMessage.
        :type port: int
        """

        self._port = port

    @property
    def master_user_password(self):
        """Gets the master_user_password of this ModifyDBClusterMessage.


        :return: The master_user_password of this ModifyDBClusterMessage.
        :rtype: str
        """
        return self._master_user_password

    @master_user_password.setter
    def master_user_password(self, master_user_password):
        """Sets the master_user_password of this ModifyDBClusterMessage.


        :param master_user_password: The master_user_password of this ModifyDBClusterMessage.
        :type master_user_password: str
        """

        self._master_user_password = master_user_password

    @property
    def preferred_backup_window(self):
        """Gets the preferred_backup_window of this ModifyDBClusterMessage.


        :return: The preferred_backup_window of this ModifyDBClusterMessage.
        :rtype: str
        """
        return self._preferred_backup_window

    @preferred_backup_window.setter
    def preferred_backup_window(self, preferred_backup_window):
        """Sets the preferred_backup_window of this ModifyDBClusterMessage.


        :param preferred_backup_window: The preferred_backup_window of this ModifyDBClusterMessage.
        :type preferred_backup_window: str
        """

        self._preferred_backup_window = preferred_backup_window

    @property
    def preferred_maintenance_window(self):
        """Gets the preferred_maintenance_window of this ModifyDBClusterMessage.


        :return: The preferred_maintenance_window of this ModifyDBClusterMessage.
        :rtype: str
        """
        return self._preferred_maintenance_window

    @preferred_maintenance_window.setter
    def preferred_maintenance_window(self, preferred_maintenance_window):
        """Sets the preferred_maintenance_window of this ModifyDBClusterMessage.


        :param preferred_maintenance_window: The preferred_maintenance_window of this ModifyDBClusterMessage.
        :type preferred_maintenance_window: str
        """

        self._preferred_maintenance_window = preferred_maintenance_window

    @property
    def cloudwatch_logs_export_configuration(self):
        """Gets the cloudwatch_logs_export_configuration of this ModifyDBClusterMessage.


        :return: The cloudwatch_logs_export_configuration of this ModifyDBClusterMessage.
        :rtype: ModifyDBClusterMessageCloudwatchLogsExportConfiguration
        """
        return self._cloudwatch_logs_export_configuration

    @cloudwatch_logs_export_configuration.setter
    def cloudwatch_logs_export_configuration(self, cloudwatch_logs_export_configuration):
        """Sets the cloudwatch_logs_export_configuration of this ModifyDBClusterMessage.


        :param cloudwatch_logs_export_configuration: The cloudwatch_logs_export_configuration of this ModifyDBClusterMessage.
        :type cloudwatch_logs_export_configuration: ModifyDBClusterMessageCloudwatchLogsExportConfiguration
        """

        self._cloudwatch_logs_export_configuration = cloudwatch_logs_export_configuration

    @property
    def engine_version(self):
        """Gets the engine_version of this ModifyDBClusterMessage.


        :return: The engine_version of this ModifyDBClusterMessage.
        :rtype: str
        """
        return self._engine_version

    @engine_version.setter
    def engine_version(self, engine_version):
        """Sets the engine_version of this ModifyDBClusterMessage.


        :param engine_version: The engine_version of this ModifyDBClusterMessage.
        :type engine_version: str
        """

        self._engine_version = engine_version

    @property
    def allow_major_version_upgrade(self):
        """Gets the allow_major_version_upgrade of this ModifyDBClusterMessage.


        :return: The allow_major_version_upgrade of this ModifyDBClusterMessage.
        :rtype: bool
        """
        return self._allow_major_version_upgrade

    @allow_major_version_upgrade.setter
    def allow_major_version_upgrade(self, allow_major_version_upgrade):
        """Sets the allow_major_version_upgrade of this ModifyDBClusterMessage.


        :param allow_major_version_upgrade: The allow_major_version_upgrade of this ModifyDBClusterMessage.
        :type allow_major_version_upgrade: bool
        """

        self._allow_major_version_upgrade = allow_major_version_upgrade

    @property
    def deletion_protection(self):
        """Gets the deletion_protection of this ModifyDBClusterMessage.


        :return: The deletion_protection of this ModifyDBClusterMessage.
        :rtype: bool
        """
        return self._deletion_protection

    @deletion_protection.setter
    def deletion_protection(self, deletion_protection):
        """Sets the deletion_protection of this ModifyDBClusterMessage.


        :param deletion_protection: The deletion_protection of this ModifyDBClusterMessage.
        :type deletion_protection: bool
        """

        self._deletion_protection = deletion_protection
