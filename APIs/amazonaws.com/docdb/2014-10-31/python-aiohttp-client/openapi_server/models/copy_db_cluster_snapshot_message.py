# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class CopyDBClusterSnapshotMessage(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, source_db_cluster_snapshot_identifier: str=None, target_db_cluster_snapshot_identifier: str=None, kms_key_id: str=None, pre_signed_url: str=None, copy_tags: bool=None, tags: List=None):
        """CopyDBClusterSnapshotMessage - a model defined in OpenAPI

        :param source_db_cluster_snapshot_identifier: The source_db_cluster_snapshot_identifier of this CopyDBClusterSnapshotMessage.
        :param target_db_cluster_snapshot_identifier: The target_db_cluster_snapshot_identifier of this CopyDBClusterSnapshotMessage.
        :param kms_key_id: The kms_key_id of this CopyDBClusterSnapshotMessage.
        :param pre_signed_url: The pre_signed_url of this CopyDBClusterSnapshotMessage.
        :param copy_tags: The copy_tags of this CopyDBClusterSnapshotMessage.
        :param tags: The tags of this CopyDBClusterSnapshotMessage.
        """
        self.openapi_types = {
            'source_db_cluster_snapshot_identifier': str,
            'target_db_cluster_snapshot_identifier': str,
            'kms_key_id': str,
            'pre_signed_url': str,
            'copy_tags': bool,
            'tags': List
        }

        self.attribute_map = {
            'source_db_cluster_snapshot_identifier': 'SourceDBClusterSnapshotIdentifier',
            'target_db_cluster_snapshot_identifier': 'TargetDBClusterSnapshotIdentifier',
            'kms_key_id': 'KmsKeyId',
            'pre_signed_url': 'PreSignedUrl',
            'copy_tags': 'CopyTags',
            'tags': 'Tags'
        }

        self._source_db_cluster_snapshot_identifier = source_db_cluster_snapshot_identifier
        self._target_db_cluster_snapshot_identifier = target_db_cluster_snapshot_identifier
        self._kms_key_id = kms_key_id
        self._pre_signed_url = pre_signed_url
        self._copy_tags = copy_tags
        self._tags = tags

    @classmethod
    def from_dict(cls, dikt: dict) -> 'CopyDBClusterSnapshotMessage':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The CopyDBClusterSnapshotMessage of this CopyDBClusterSnapshotMessage.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def source_db_cluster_snapshot_identifier(self):
        """Gets the source_db_cluster_snapshot_identifier of this CopyDBClusterSnapshotMessage.


        :return: The source_db_cluster_snapshot_identifier of this CopyDBClusterSnapshotMessage.
        :rtype: str
        """
        return self._source_db_cluster_snapshot_identifier

    @source_db_cluster_snapshot_identifier.setter
    def source_db_cluster_snapshot_identifier(self, source_db_cluster_snapshot_identifier):
        """Sets the source_db_cluster_snapshot_identifier of this CopyDBClusterSnapshotMessage.


        :param source_db_cluster_snapshot_identifier: The source_db_cluster_snapshot_identifier of this CopyDBClusterSnapshotMessage.
        :type source_db_cluster_snapshot_identifier: str
        """
        if source_db_cluster_snapshot_identifier is None:
            raise ValueError("Invalid value for `source_db_cluster_snapshot_identifier`, must not be `None`")

        self._source_db_cluster_snapshot_identifier = source_db_cluster_snapshot_identifier

    @property
    def target_db_cluster_snapshot_identifier(self):
        """Gets the target_db_cluster_snapshot_identifier of this CopyDBClusterSnapshotMessage.


        :return: The target_db_cluster_snapshot_identifier of this CopyDBClusterSnapshotMessage.
        :rtype: str
        """
        return self._target_db_cluster_snapshot_identifier

    @target_db_cluster_snapshot_identifier.setter
    def target_db_cluster_snapshot_identifier(self, target_db_cluster_snapshot_identifier):
        """Sets the target_db_cluster_snapshot_identifier of this CopyDBClusterSnapshotMessage.


        :param target_db_cluster_snapshot_identifier: The target_db_cluster_snapshot_identifier of this CopyDBClusterSnapshotMessage.
        :type target_db_cluster_snapshot_identifier: str
        """
        if target_db_cluster_snapshot_identifier is None:
            raise ValueError("Invalid value for `target_db_cluster_snapshot_identifier`, must not be `None`")

        self._target_db_cluster_snapshot_identifier = target_db_cluster_snapshot_identifier

    @property
    def kms_key_id(self):
        """Gets the kms_key_id of this CopyDBClusterSnapshotMessage.


        :return: The kms_key_id of this CopyDBClusterSnapshotMessage.
        :rtype: str
        """
        return self._kms_key_id

    @kms_key_id.setter
    def kms_key_id(self, kms_key_id):
        """Sets the kms_key_id of this CopyDBClusterSnapshotMessage.


        :param kms_key_id: The kms_key_id of this CopyDBClusterSnapshotMessage.
        :type kms_key_id: str
        """

        self._kms_key_id = kms_key_id

    @property
    def pre_signed_url(self):
        """Gets the pre_signed_url of this CopyDBClusterSnapshotMessage.


        :return: The pre_signed_url of this CopyDBClusterSnapshotMessage.
        :rtype: str
        """
        return self._pre_signed_url

    @pre_signed_url.setter
    def pre_signed_url(self, pre_signed_url):
        """Sets the pre_signed_url of this CopyDBClusterSnapshotMessage.


        :param pre_signed_url: The pre_signed_url of this CopyDBClusterSnapshotMessage.
        :type pre_signed_url: str
        """

        self._pre_signed_url = pre_signed_url

    @property
    def copy_tags(self):
        """Gets the copy_tags of this CopyDBClusterSnapshotMessage.


        :return: The copy_tags of this CopyDBClusterSnapshotMessage.
        :rtype: bool
        """
        return self._copy_tags

    @copy_tags.setter
    def copy_tags(self, copy_tags):
        """Sets the copy_tags of this CopyDBClusterSnapshotMessage.


        :param copy_tags: The copy_tags of this CopyDBClusterSnapshotMessage.
        :type copy_tags: bool
        """

        self._copy_tags = copy_tags

    @property
    def tags(self):
        """Gets the tags of this CopyDBClusterSnapshotMessage.


        :return: The tags of this CopyDBClusterSnapshotMessage.
        :rtype: List
        """
        return self._tags

    @tags.setter
    def tags(self, tags):
        """Sets the tags of this CopyDBClusterSnapshotMessage.


        :param tags: The tags of this CopyDBClusterSnapshotMessage.
        :type tags: List
        """

        self._tags = tags
