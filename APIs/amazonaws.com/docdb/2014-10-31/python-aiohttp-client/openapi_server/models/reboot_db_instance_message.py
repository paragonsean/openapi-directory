# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class RebootDBInstanceMessage(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, db_instance_identifier: str=None, force_failover: bool=None):
        """RebootDBInstanceMessage - a model defined in OpenAPI

        :param db_instance_identifier: The db_instance_identifier of this RebootDBInstanceMessage.
        :param force_failover: The force_failover of this RebootDBInstanceMessage.
        """
        self.openapi_types = {
            'db_instance_identifier': str,
            'force_failover': bool
        }

        self.attribute_map = {
            'db_instance_identifier': 'DBInstanceIdentifier',
            'force_failover': 'ForceFailover'
        }

        self._db_instance_identifier = db_instance_identifier
        self._force_failover = force_failover

    @classmethod
    def from_dict(cls, dikt: dict) -> 'RebootDBInstanceMessage':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The RebootDBInstanceMessage of this RebootDBInstanceMessage.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def db_instance_identifier(self):
        """Gets the db_instance_identifier of this RebootDBInstanceMessage.


        :return: The db_instance_identifier of this RebootDBInstanceMessage.
        :rtype: str
        """
        return self._db_instance_identifier

    @db_instance_identifier.setter
    def db_instance_identifier(self, db_instance_identifier):
        """Sets the db_instance_identifier of this RebootDBInstanceMessage.


        :param db_instance_identifier: The db_instance_identifier of this RebootDBInstanceMessage.
        :type db_instance_identifier: str
        """
        if db_instance_identifier is None:
            raise ValueError("Invalid value for `db_instance_identifier`, must not be `None`")

        self._db_instance_identifier = db_instance_identifier

    @property
    def force_failover(self):
        """Gets the force_failover of this RebootDBInstanceMessage.


        :return: The force_failover of this RebootDBInstanceMessage.
        :rtype: bool
        """
        return self._force_failover

    @force_failover.setter
    def force_failover(self, force_failover):
        """Sets the force_failover of this RebootDBInstanceMessage.


        :param force_failover: The force_failover of this RebootDBInstanceMessage.
        :type force_failover: bool
        """

        self._force_failover = force_failover
