/*
 * Amazon DocumentDB with MongoDB compatibility
 * Amazon DocumentDB is a fast, reliable, and fully managed database service. Amazon DocumentDB makes it easy to set up, operate, and scale MongoDB-compatible databases in the cloud. With Amazon DocumentDB, you can run the same application code and use the same drivers and tools that you use with MongoDB.
 *
 * The version of the OpenAPI document: 2014-10-31
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.time.OffsetDateTime;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.DBInstanceDBSubnetGroup;
import org.openapitools.client.model.DBInstanceEndpoint;
import org.openapitools.client.model.DBInstancePendingModifiedValues;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

/**
 * Model tests for DBInstanceListInner
 */
public class DBInstanceListInnerTest {
    private final DBInstanceListInner model = new DBInstanceListInner();

    /**
     * Model tests for DBInstanceListInner
     */
    @Test
    public void testDBInstanceListInner() {
        // TODO: test DBInstanceListInner
    }

    /**
     * Test the property 'dbInstanceIdentifier'
     */
    @Test
    public void dbInstanceIdentifierTest() {
        // TODO: test dbInstanceIdentifier
    }

    /**
     * Test the property 'dbInstanceClass'
     */
    @Test
    public void dbInstanceClassTest() {
        // TODO: test dbInstanceClass
    }

    /**
     * Test the property 'engine'
     */
    @Test
    public void engineTest() {
        // TODO: test engine
    }

    /**
     * Test the property 'dbInstanceStatus'
     */
    @Test
    public void dbInstanceStatusTest() {
        // TODO: test dbInstanceStatus
    }

    /**
     * Test the property 'endpoint'
     */
    @Test
    public void endpointTest() {
        // TODO: test endpoint
    }

    /**
     * Test the property 'instanceCreateTime'
     */
    @Test
    public void instanceCreateTimeTest() {
        // TODO: test instanceCreateTime
    }

    /**
     * Test the property 'preferredBackupWindow'
     */
    @Test
    public void preferredBackupWindowTest() {
        // TODO: test preferredBackupWindow
    }

    /**
     * Test the property 'backupRetentionPeriod'
     */
    @Test
    public void backupRetentionPeriodTest() {
        // TODO: test backupRetentionPeriod
    }

    /**
     * Test the property 'vpcSecurityGroups'
     */
    @Test
    public void vpcSecurityGroupsTest() {
        // TODO: test vpcSecurityGroups
    }

    /**
     * Test the property 'availabilityZone'
     */
    @Test
    public void availabilityZoneTest() {
        // TODO: test availabilityZone
    }

    /**
     * Test the property 'dbSubnetGroup'
     */
    @Test
    public void dbSubnetGroupTest() {
        // TODO: test dbSubnetGroup
    }

    /**
     * Test the property 'preferredMaintenanceWindow'
     */
    @Test
    public void preferredMaintenanceWindowTest() {
        // TODO: test preferredMaintenanceWindow
    }

    /**
     * Test the property 'pendingModifiedValues'
     */
    @Test
    public void pendingModifiedValuesTest() {
        // TODO: test pendingModifiedValues
    }

    /**
     * Test the property 'latestRestorableTime'
     */
    @Test
    public void latestRestorableTimeTest() {
        // TODO: test latestRestorableTime
    }

    /**
     * Test the property 'engineVersion'
     */
    @Test
    public void engineVersionTest() {
        // TODO: test engineVersion
    }

    /**
     * Test the property 'autoMinorVersionUpgrade'
     */
    @Test
    public void autoMinorVersionUpgradeTest() {
        // TODO: test autoMinorVersionUpgrade
    }

    /**
     * Test the property 'publiclyAccessible'
     */
    @Test
    public void publiclyAccessibleTest() {
        // TODO: test publiclyAccessible
    }

    /**
     * Test the property 'statusInfos'
     */
    @Test
    public void statusInfosTest() {
        // TODO: test statusInfos
    }

    /**
     * Test the property 'dbClusterIdentifier'
     */
    @Test
    public void dbClusterIdentifierTest() {
        // TODO: test dbClusterIdentifier
    }

    /**
     * Test the property 'storageEncrypted'
     */
    @Test
    public void storageEncryptedTest() {
        // TODO: test storageEncrypted
    }

    /**
     * Test the property 'kmsKeyId'
     */
    @Test
    public void kmsKeyIdTest() {
        // TODO: test kmsKeyId
    }

    /**
     * Test the property 'dbiResourceId'
     */
    @Test
    public void dbiResourceIdTest() {
        // TODO: test dbiResourceId
    }

    /**
     * Test the property 'caCertificateIdentifier'
     */
    @Test
    public void caCertificateIdentifierTest() {
        // TODO: test caCertificateIdentifier
    }

    /**
     * Test the property 'copyTagsToSnapshot'
     */
    @Test
    public void copyTagsToSnapshotTest() {
        // TODO: test copyTagsToSnapshot
    }

    /**
     * Test the property 'promotionTier'
     */
    @Test
    public void promotionTierTest() {
        // TODO: test promotionTier
    }

    /**
     * Test the property 'dbInstanceArn'
     */
    @Test
    public void dbInstanceArnTest() {
        // TODO: test dbInstanceArn
    }

    /**
     * Test the property 'enabledCloudwatchLogsExports'
     */
    @Test
    public void enabledCloudwatchLogsExportsTest() {
        // TODO: test enabledCloudwatchLogsExports
    }

}
