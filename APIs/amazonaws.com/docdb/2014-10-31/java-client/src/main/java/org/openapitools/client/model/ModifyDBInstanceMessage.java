/*
 * Amazon DocumentDB with MongoDB compatibility
 * Amazon DocumentDB is a fast, reliable, and fully managed database service. Amazon DocumentDB makes it easy to set up, operate, and scale MongoDB-compatible databases in the cloud. With Amazon DocumentDB, you can run the same application code and use the same drivers and tools that you use with MongoDB.
 *
 * The version of the OpenAPI document: 2014-10-31
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * Represents the input to &lt;a&gt;ModifyDBInstance&lt;/a&gt;.
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T12:02:37.919151-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class ModifyDBInstanceMessage {
  public static final String SERIALIZED_NAME_DB_INSTANCE_IDENTIFIER = "DBInstanceIdentifier";
  @SerializedName(SERIALIZED_NAME_DB_INSTANCE_IDENTIFIER)
  private String dbInstanceIdentifier;

  public static final String SERIALIZED_NAME_DB_INSTANCE_CLASS = "DBInstanceClass";
  @SerializedName(SERIALIZED_NAME_DB_INSTANCE_CLASS)
  private String dbInstanceClass;

  public static final String SERIALIZED_NAME_APPLY_IMMEDIATELY = "ApplyImmediately";
  @SerializedName(SERIALIZED_NAME_APPLY_IMMEDIATELY)
  private Boolean applyImmediately;

  public static final String SERIALIZED_NAME_PREFERRED_MAINTENANCE_WINDOW = "PreferredMaintenanceWindow";
  @SerializedName(SERIALIZED_NAME_PREFERRED_MAINTENANCE_WINDOW)
  private String preferredMaintenanceWindow;

  public static final String SERIALIZED_NAME_AUTO_MINOR_VERSION_UPGRADE = "AutoMinorVersionUpgrade";
  @SerializedName(SERIALIZED_NAME_AUTO_MINOR_VERSION_UPGRADE)
  private Boolean autoMinorVersionUpgrade;

  public static final String SERIALIZED_NAME_NEW_D_B_INSTANCE_IDENTIFIER = "NewDBInstanceIdentifier";
  @SerializedName(SERIALIZED_NAME_NEW_D_B_INSTANCE_IDENTIFIER)
  private String newDBInstanceIdentifier;

  public static final String SERIALIZED_NAME_CA_CERTIFICATE_IDENTIFIER = "CACertificateIdentifier";
  @SerializedName(SERIALIZED_NAME_CA_CERTIFICATE_IDENTIFIER)
  private String caCertificateIdentifier;

  public static final String SERIALIZED_NAME_COPY_TAGS_TO_SNAPSHOT = "CopyTagsToSnapshot";
  @SerializedName(SERIALIZED_NAME_COPY_TAGS_TO_SNAPSHOT)
  private Boolean copyTagsToSnapshot;

  public static final String SERIALIZED_NAME_PROMOTION_TIER = "PromotionTier";
  @SerializedName(SERIALIZED_NAME_PROMOTION_TIER)
  private Integer promotionTier;

  public static final String SERIALIZED_NAME_ENABLE_PERFORMANCE_INSIGHTS = "EnablePerformanceInsights";
  @SerializedName(SERIALIZED_NAME_ENABLE_PERFORMANCE_INSIGHTS)
  private Boolean enablePerformanceInsights;

  public static final String SERIALIZED_NAME_PERFORMANCE_INSIGHTS_K_M_S_KEY_ID = "PerformanceInsightsKMSKeyId";
  @SerializedName(SERIALIZED_NAME_PERFORMANCE_INSIGHTS_K_M_S_KEY_ID)
  private String performanceInsightsKMSKeyId;

  public ModifyDBInstanceMessage() {
  }

  public ModifyDBInstanceMessage dbInstanceIdentifier(String dbInstanceIdentifier) {
    this.dbInstanceIdentifier = dbInstanceIdentifier;
    return this;
  }

  /**
   * Get dbInstanceIdentifier
   * @return dbInstanceIdentifier
   */
  @javax.annotation.Nonnull
  public String getDbInstanceIdentifier() {
    return dbInstanceIdentifier;
  }

  public void setDbInstanceIdentifier(String dbInstanceIdentifier) {
    this.dbInstanceIdentifier = dbInstanceIdentifier;
  }


  public ModifyDBInstanceMessage dbInstanceClass(String dbInstanceClass) {
    this.dbInstanceClass = dbInstanceClass;
    return this;
  }

  /**
   * Get dbInstanceClass
   * @return dbInstanceClass
   */
  @javax.annotation.Nullable
  public String getDbInstanceClass() {
    return dbInstanceClass;
  }

  public void setDbInstanceClass(String dbInstanceClass) {
    this.dbInstanceClass = dbInstanceClass;
  }


  public ModifyDBInstanceMessage applyImmediately(Boolean applyImmediately) {
    this.applyImmediately = applyImmediately;
    return this;
  }

  /**
   * Get applyImmediately
   * @return applyImmediately
   */
  @javax.annotation.Nullable
  public Boolean getApplyImmediately() {
    return applyImmediately;
  }

  public void setApplyImmediately(Boolean applyImmediately) {
    this.applyImmediately = applyImmediately;
  }


  public ModifyDBInstanceMessage preferredMaintenanceWindow(String preferredMaintenanceWindow) {
    this.preferredMaintenanceWindow = preferredMaintenanceWindow;
    return this;
  }

  /**
   * Get preferredMaintenanceWindow
   * @return preferredMaintenanceWindow
   */
  @javax.annotation.Nullable
  public String getPreferredMaintenanceWindow() {
    return preferredMaintenanceWindow;
  }

  public void setPreferredMaintenanceWindow(String preferredMaintenanceWindow) {
    this.preferredMaintenanceWindow = preferredMaintenanceWindow;
  }


  public ModifyDBInstanceMessage autoMinorVersionUpgrade(Boolean autoMinorVersionUpgrade) {
    this.autoMinorVersionUpgrade = autoMinorVersionUpgrade;
    return this;
  }

  /**
   * Get autoMinorVersionUpgrade
   * @return autoMinorVersionUpgrade
   */
  @javax.annotation.Nullable
  public Boolean getAutoMinorVersionUpgrade() {
    return autoMinorVersionUpgrade;
  }

  public void setAutoMinorVersionUpgrade(Boolean autoMinorVersionUpgrade) {
    this.autoMinorVersionUpgrade = autoMinorVersionUpgrade;
  }


  public ModifyDBInstanceMessage newDBInstanceIdentifier(String newDBInstanceIdentifier) {
    this.newDBInstanceIdentifier = newDBInstanceIdentifier;
    return this;
  }

  /**
   * Get newDBInstanceIdentifier
   * @return newDBInstanceIdentifier
   */
  @javax.annotation.Nullable
  public String getNewDBInstanceIdentifier() {
    return newDBInstanceIdentifier;
  }

  public void setNewDBInstanceIdentifier(String newDBInstanceIdentifier) {
    this.newDBInstanceIdentifier = newDBInstanceIdentifier;
  }


  public ModifyDBInstanceMessage caCertificateIdentifier(String caCertificateIdentifier) {
    this.caCertificateIdentifier = caCertificateIdentifier;
    return this;
  }

  /**
   * Get caCertificateIdentifier
   * @return caCertificateIdentifier
   */
  @javax.annotation.Nullable
  public String getCaCertificateIdentifier() {
    return caCertificateIdentifier;
  }

  public void setCaCertificateIdentifier(String caCertificateIdentifier) {
    this.caCertificateIdentifier = caCertificateIdentifier;
  }


  public ModifyDBInstanceMessage copyTagsToSnapshot(Boolean copyTagsToSnapshot) {
    this.copyTagsToSnapshot = copyTagsToSnapshot;
    return this;
  }

  /**
   * Get copyTagsToSnapshot
   * @return copyTagsToSnapshot
   */
  @javax.annotation.Nullable
  public Boolean getCopyTagsToSnapshot() {
    return copyTagsToSnapshot;
  }

  public void setCopyTagsToSnapshot(Boolean copyTagsToSnapshot) {
    this.copyTagsToSnapshot = copyTagsToSnapshot;
  }


  public ModifyDBInstanceMessage promotionTier(Integer promotionTier) {
    this.promotionTier = promotionTier;
    return this;
  }

  /**
   * Get promotionTier
   * @return promotionTier
   */
  @javax.annotation.Nullable
  public Integer getPromotionTier() {
    return promotionTier;
  }

  public void setPromotionTier(Integer promotionTier) {
    this.promotionTier = promotionTier;
  }


  public ModifyDBInstanceMessage enablePerformanceInsights(Boolean enablePerformanceInsights) {
    this.enablePerformanceInsights = enablePerformanceInsights;
    return this;
  }

  /**
   * Get enablePerformanceInsights
   * @return enablePerformanceInsights
   */
  @javax.annotation.Nullable
  public Boolean getEnablePerformanceInsights() {
    return enablePerformanceInsights;
  }

  public void setEnablePerformanceInsights(Boolean enablePerformanceInsights) {
    this.enablePerformanceInsights = enablePerformanceInsights;
  }


  public ModifyDBInstanceMessage performanceInsightsKMSKeyId(String performanceInsightsKMSKeyId) {
    this.performanceInsightsKMSKeyId = performanceInsightsKMSKeyId;
    return this;
  }

  /**
   * Get performanceInsightsKMSKeyId
   * @return performanceInsightsKMSKeyId
   */
  @javax.annotation.Nullable
  public String getPerformanceInsightsKMSKeyId() {
    return performanceInsightsKMSKeyId;
  }

  public void setPerformanceInsightsKMSKeyId(String performanceInsightsKMSKeyId) {
    this.performanceInsightsKMSKeyId = performanceInsightsKMSKeyId;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ModifyDBInstanceMessage modifyDBInstanceMessage = (ModifyDBInstanceMessage) o;
    return Objects.equals(this.dbInstanceIdentifier, modifyDBInstanceMessage.dbInstanceIdentifier) &&
        Objects.equals(this.dbInstanceClass, modifyDBInstanceMessage.dbInstanceClass) &&
        Objects.equals(this.applyImmediately, modifyDBInstanceMessage.applyImmediately) &&
        Objects.equals(this.preferredMaintenanceWindow, modifyDBInstanceMessage.preferredMaintenanceWindow) &&
        Objects.equals(this.autoMinorVersionUpgrade, modifyDBInstanceMessage.autoMinorVersionUpgrade) &&
        Objects.equals(this.newDBInstanceIdentifier, modifyDBInstanceMessage.newDBInstanceIdentifier) &&
        Objects.equals(this.caCertificateIdentifier, modifyDBInstanceMessage.caCertificateIdentifier) &&
        Objects.equals(this.copyTagsToSnapshot, modifyDBInstanceMessage.copyTagsToSnapshot) &&
        Objects.equals(this.promotionTier, modifyDBInstanceMessage.promotionTier) &&
        Objects.equals(this.enablePerformanceInsights, modifyDBInstanceMessage.enablePerformanceInsights) &&
        Objects.equals(this.performanceInsightsKMSKeyId, modifyDBInstanceMessage.performanceInsightsKMSKeyId);
  }

  @Override
  public int hashCode() {
    return Objects.hash(dbInstanceIdentifier, dbInstanceClass, applyImmediately, preferredMaintenanceWindow, autoMinorVersionUpgrade, newDBInstanceIdentifier, caCertificateIdentifier, copyTagsToSnapshot, promotionTier, enablePerformanceInsights, performanceInsightsKMSKeyId);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ModifyDBInstanceMessage {\n");
    sb.append("    dbInstanceIdentifier: ").append(toIndentedString(dbInstanceIdentifier)).append("\n");
    sb.append("    dbInstanceClass: ").append(toIndentedString(dbInstanceClass)).append("\n");
    sb.append("    applyImmediately: ").append(toIndentedString(applyImmediately)).append("\n");
    sb.append("    preferredMaintenanceWindow: ").append(toIndentedString(preferredMaintenanceWindow)).append("\n");
    sb.append("    autoMinorVersionUpgrade: ").append(toIndentedString(autoMinorVersionUpgrade)).append("\n");
    sb.append("    newDBInstanceIdentifier: ").append(toIndentedString(newDBInstanceIdentifier)).append("\n");
    sb.append("    caCertificateIdentifier: ").append(toIndentedString(caCertificateIdentifier)).append("\n");
    sb.append("    copyTagsToSnapshot: ").append(toIndentedString(copyTagsToSnapshot)).append("\n");
    sb.append("    promotionTier: ").append(toIndentedString(promotionTier)).append("\n");
    sb.append("    enablePerformanceInsights: ").append(toIndentedString(enablePerformanceInsights)).append("\n");
    sb.append("    performanceInsightsKMSKeyId: ").append(toIndentedString(performanceInsightsKMSKeyId)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("DBInstanceIdentifier");
    openapiFields.add("DBInstanceClass");
    openapiFields.add("ApplyImmediately");
    openapiFields.add("PreferredMaintenanceWindow");
    openapiFields.add("AutoMinorVersionUpgrade");
    openapiFields.add("NewDBInstanceIdentifier");
    openapiFields.add("CACertificateIdentifier");
    openapiFields.add("CopyTagsToSnapshot");
    openapiFields.add("PromotionTier");
    openapiFields.add("EnablePerformanceInsights");
    openapiFields.add("PerformanceInsightsKMSKeyId");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
    openapiRequiredFields.add("DBInstanceIdentifier");
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to ModifyDBInstanceMessage
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!ModifyDBInstanceMessage.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in ModifyDBInstanceMessage is not found in the empty JSON string", ModifyDBInstanceMessage.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!ModifyDBInstanceMessage.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `ModifyDBInstanceMessage` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }

      // check to make sure all required properties/fields are present in the JSON string
      for (String requiredField : ModifyDBInstanceMessage.openapiRequiredFields) {
        if (jsonElement.getAsJsonObject().get(requiredField) == null) {
          throw new IllegalArgumentException(String.format("The required field `%s` is not found in the JSON string: %s", requiredField, jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // validate the required field `DBInstanceIdentifier`
      String.validateJsonElement(jsonObj.get("DBInstanceIdentifier"));
      // validate the optional field `DBInstanceClass`
      if (jsonObj.get("DBInstanceClass") != null && !jsonObj.get("DBInstanceClass").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("DBInstanceClass"));
      }
      // validate the optional field `ApplyImmediately`
      if (jsonObj.get("ApplyImmediately") != null && !jsonObj.get("ApplyImmediately").isJsonNull()) {
        Boolean.validateJsonElement(jsonObj.get("ApplyImmediately"));
      }
      // validate the optional field `PreferredMaintenanceWindow`
      if (jsonObj.get("PreferredMaintenanceWindow") != null && !jsonObj.get("PreferredMaintenanceWindow").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("PreferredMaintenanceWindow"));
      }
      // validate the optional field `AutoMinorVersionUpgrade`
      if (jsonObj.get("AutoMinorVersionUpgrade") != null && !jsonObj.get("AutoMinorVersionUpgrade").isJsonNull()) {
        Boolean.validateJsonElement(jsonObj.get("AutoMinorVersionUpgrade"));
      }
      // validate the optional field `NewDBInstanceIdentifier`
      if (jsonObj.get("NewDBInstanceIdentifier") != null && !jsonObj.get("NewDBInstanceIdentifier").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("NewDBInstanceIdentifier"));
      }
      // validate the optional field `CACertificateIdentifier`
      if (jsonObj.get("CACertificateIdentifier") != null && !jsonObj.get("CACertificateIdentifier").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("CACertificateIdentifier"));
      }
      // validate the optional field `CopyTagsToSnapshot`
      if (jsonObj.get("CopyTagsToSnapshot") != null && !jsonObj.get("CopyTagsToSnapshot").isJsonNull()) {
        Boolean.validateJsonElement(jsonObj.get("CopyTagsToSnapshot"));
      }
      // validate the optional field `PromotionTier`
      if (jsonObj.get("PromotionTier") != null && !jsonObj.get("PromotionTier").isJsonNull()) {
        Integer.validateJsonElement(jsonObj.get("PromotionTier"));
      }
      // validate the optional field `EnablePerformanceInsights`
      if (jsonObj.get("EnablePerformanceInsights") != null && !jsonObj.get("EnablePerformanceInsights").isJsonNull()) {
        Boolean.validateJsonElement(jsonObj.get("EnablePerformanceInsights"));
      }
      // validate the optional field `PerformanceInsightsKMSKeyId`
      if (jsonObj.get("PerformanceInsightsKMSKeyId") != null && !jsonObj.get("PerformanceInsightsKMSKeyId").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("PerformanceInsightsKMSKeyId"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!ModifyDBInstanceMessage.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'ModifyDBInstanceMessage' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<ModifyDBInstanceMessage> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(ModifyDBInstanceMessage.class));

       return (TypeAdapter<T>) new TypeAdapter<ModifyDBInstanceMessage>() {
           @Override
           public void write(JsonWriter out, ModifyDBInstanceMessage value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public ModifyDBInstanceMessage read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of ModifyDBInstanceMessage given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of ModifyDBInstanceMessage
   * @throws IOException if the JSON string is invalid with respect to ModifyDBInstanceMessage
   */
  public static ModifyDBInstanceMessage fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, ModifyDBInstanceMessage.class);
  }

  /**
   * Convert an instance of ModifyDBInstanceMessage to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

