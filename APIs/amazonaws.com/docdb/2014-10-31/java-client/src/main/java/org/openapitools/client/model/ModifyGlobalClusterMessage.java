/*
 * Amazon DocumentDB with MongoDB compatibility
 * Amazon DocumentDB is a fast, reliable, and fully managed database service. Amazon DocumentDB makes it easy to set up, operate, and scale MongoDB-compatible databases in the cloud. With Amazon DocumentDB, you can run the same application code and use the same drivers and tools that you use with MongoDB.
 *
 * The version of the OpenAPI document: 2014-10-31
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * Represents the input to &lt;a&gt;ModifyGlobalCluster&lt;/a&gt;.
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T12:02:37.919151-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class ModifyGlobalClusterMessage {
  public static final String SERIALIZED_NAME_GLOBAL_CLUSTER_IDENTIFIER = "GlobalClusterIdentifier";
  @SerializedName(SERIALIZED_NAME_GLOBAL_CLUSTER_IDENTIFIER)
  private String globalClusterIdentifier;

  public static final String SERIALIZED_NAME_NEW_GLOBAL_CLUSTER_IDENTIFIER = "NewGlobalClusterIdentifier";
  @SerializedName(SERIALIZED_NAME_NEW_GLOBAL_CLUSTER_IDENTIFIER)
  private String newGlobalClusterIdentifier;

  public static final String SERIALIZED_NAME_DELETION_PROTECTION = "DeletionProtection";
  @SerializedName(SERIALIZED_NAME_DELETION_PROTECTION)
  private Boolean deletionProtection;

  public ModifyGlobalClusterMessage() {
  }

  public ModifyGlobalClusterMessage globalClusterIdentifier(String globalClusterIdentifier) {
    this.globalClusterIdentifier = globalClusterIdentifier;
    return this;
  }

  /**
   * Get globalClusterIdentifier
   * @return globalClusterIdentifier
   */
  @javax.annotation.Nonnull
  public String getGlobalClusterIdentifier() {
    return globalClusterIdentifier;
  }

  public void setGlobalClusterIdentifier(String globalClusterIdentifier) {
    this.globalClusterIdentifier = globalClusterIdentifier;
  }


  public ModifyGlobalClusterMessage newGlobalClusterIdentifier(String newGlobalClusterIdentifier) {
    this.newGlobalClusterIdentifier = newGlobalClusterIdentifier;
    return this;
  }

  /**
   * Get newGlobalClusterIdentifier
   * @return newGlobalClusterIdentifier
   */
  @javax.annotation.Nullable
  public String getNewGlobalClusterIdentifier() {
    return newGlobalClusterIdentifier;
  }

  public void setNewGlobalClusterIdentifier(String newGlobalClusterIdentifier) {
    this.newGlobalClusterIdentifier = newGlobalClusterIdentifier;
  }


  public ModifyGlobalClusterMessage deletionProtection(Boolean deletionProtection) {
    this.deletionProtection = deletionProtection;
    return this;
  }

  /**
   * Get deletionProtection
   * @return deletionProtection
   */
  @javax.annotation.Nullable
  public Boolean getDeletionProtection() {
    return deletionProtection;
  }

  public void setDeletionProtection(Boolean deletionProtection) {
    this.deletionProtection = deletionProtection;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ModifyGlobalClusterMessage modifyGlobalClusterMessage = (ModifyGlobalClusterMessage) o;
    return Objects.equals(this.globalClusterIdentifier, modifyGlobalClusterMessage.globalClusterIdentifier) &&
        Objects.equals(this.newGlobalClusterIdentifier, modifyGlobalClusterMessage.newGlobalClusterIdentifier) &&
        Objects.equals(this.deletionProtection, modifyGlobalClusterMessage.deletionProtection);
  }

  @Override
  public int hashCode() {
    return Objects.hash(globalClusterIdentifier, newGlobalClusterIdentifier, deletionProtection);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ModifyGlobalClusterMessage {\n");
    sb.append("    globalClusterIdentifier: ").append(toIndentedString(globalClusterIdentifier)).append("\n");
    sb.append("    newGlobalClusterIdentifier: ").append(toIndentedString(newGlobalClusterIdentifier)).append("\n");
    sb.append("    deletionProtection: ").append(toIndentedString(deletionProtection)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("GlobalClusterIdentifier");
    openapiFields.add("NewGlobalClusterIdentifier");
    openapiFields.add("DeletionProtection");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
    openapiRequiredFields.add("GlobalClusterIdentifier");
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to ModifyGlobalClusterMessage
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!ModifyGlobalClusterMessage.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in ModifyGlobalClusterMessage is not found in the empty JSON string", ModifyGlobalClusterMessage.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!ModifyGlobalClusterMessage.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `ModifyGlobalClusterMessage` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }

      // check to make sure all required properties/fields are present in the JSON string
      for (String requiredField : ModifyGlobalClusterMessage.openapiRequiredFields) {
        if (jsonElement.getAsJsonObject().get(requiredField) == null) {
          throw new IllegalArgumentException(String.format("The required field `%s` is not found in the JSON string: %s", requiredField, jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // validate the required field `GlobalClusterIdentifier`
      String.validateJsonElement(jsonObj.get("GlobalClusterIdentifier"));
      // validate the optional field `NewGlobalClusterIdentifier`
      if (jsonObj.get("NewGlobalClusterIdentifier") != null && !jsonObj.get("NewGlobalClusterIdentifier").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("NewGlobalClusterIdentifier"));
      }
      // validate the optional field `DeletionProtection`
      if (jsonObj.get("DeletionProtection") != null && !jsonObj.get("DeletionProtection").isJsonNull()) {
        Boolean.validateJsonElement(jsonObj.get("DeletionProtection"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!ModifyGlobalClusterMessage.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'ModifyGlobalClusterMessage' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<ModifyGlobalClusterMessage> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(ModifyGlobalClusterMessage.class));

       return (TypeAdapter<T>) new TypeAdapter<ModifyGlobalClusterMessage>() {
           @Override
           public void write(JsonWriter out, ModifyGlobalClusterMessage value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public ModifyGlobalClusterMessage read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of ModifyGlobalClusterMessage given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of ModifyGlobalClusterMessage
   * @throws IOException if the JSON string is invalid with respect to ModifyGlobalClusterMessage
   */
  public static ModifyGlobalClusterMessage fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, ModifyGlobalClusterMessage.class);
  }

  /**
   * Convert an instance of ModifyGlobalClusterMessage to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

