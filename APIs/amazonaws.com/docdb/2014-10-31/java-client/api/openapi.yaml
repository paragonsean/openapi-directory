openapi: 3.0.0
info:
  contact:
    email: mike.ralphson@gmail.com
    name: Mike Ralphson
    url: https://github.com/mermade/aws2openapi
    x-twitter: PermittedSoc
  description: "Amazon DocumentDB is a fast, reliable, and fully managed database\
    \ service. Amazon DocumentDB makes it easy to set up, operate, and scale MongoDB-compatible\
    \ databases in the cloud. With Amazon DocumentDB, you can run the same application\
    \ code and use the same drivers and tools that you use with MongoDB."
  license:
    name: Apache 2.0 License
    url: http://www.apache.org/licenses/
  termsOfService: https://aws.amazon.com/service-terms/
  title: Amazon DocumentDB with MongoDB compatibility
  version: 2014-10-31
  x-release: v4
  x-logo:
    url: https://twitter.com/awscloud/profile_image?size=original
    backgroundColor: '#FFFFFF'
  x-providerName: amazonaws.com
  x-serviceName: docdb
  x-aws-signingName: rds
  x-origin:
  - contentType: application/json
    url: https://raw.githubusercontent.com/aws/aws-sdk-js/master/apis/docdb-2014-10-31.normal.json
    converter:
      url: https://github.com/mermade/aws2openapi
      version: 1.0.0
    x-apisguru-driver: external
  x-apiClientRegistration:
    url: https://portal.aws.amazon.com/gp/aws/developer/registration/index.html?nc2=h_ct
  x-apisguru-categories:
  - cloud
  x-preferred: true
externalDocs:
  description: Amazon Web Services documentation
  url: https://docs.aws.amazon.com/rds/
servers:
- description: The Amazon DocDB multi-region endpoint
  url: "http://rds.{region}.amazonaws.com"
  variables:
    region:
      default: us-east-1
      description: The AWS region
      enum:
      - us-east-1
      - us-east-2
      - us-west-1
      - us-west-2
      - us-gov-west-1
      - us-gov-east-1
      - ca-central-1
      - eu-north-1
      - eu-west-1
      - eu-west-2
      - eu-west-3
      - eu-central-1
      - eu-south-1
      - af-south-1
      - ap-northeast-1
      - ap-northeast-2
      - ap-northeast-3
      - ap-southeast-1
      - ap-southeast-2
      - ap-east-1
      - ap-south-1
      - sa-east-1
      - me-south-1
- description: The Amazon DocDB multi-region endpoint
  url: "https://rds.{region}.amazonaws.com"
  variables:
    region:
      default: us-east-1
      description: The AWS region
      enum:
      - us-east-1
      - us-east-2
      - us-west-1
      - us-west-2
      - us-gov-west-1
      - us-gov-east-1
      - ca-central-1
      - eu-north-1
      - eu-west-1
      - eu-west-2
      - eu-west-3
      - eu-central-1
      - eu-south-1
      - af-south-1
      - ap-northeast-1
      - ap-northeast-2
      - ap-northeast-3
      - ap-southeast-1
      - ap-southeast-2
      - ap-east-1
      - ap-south-1
      - sa-east-1
      - me-south-1
- description: The general Amazon DocDB multi-region endpoint
  url: http://rds.amazonaws.com
- description: The general Amazon DocDB multi-region endpoint
  url: https://rds.amazonaws.com
- description: The Amazon DocDB endpoint for China (Beijing) and China (Ningxia)
  url: "http://rds.{region}.amazonaws.com.cn"
  variables:
    region:
      default: cn-north-1
      description: The AWS region
      enum:
      - cn-north-1
      - cn-northwest-1
- description: The Amazon DocDB endpoint for China (Beijing) and China (Ningxia)
  url: "https://rds.{region}.amazonaws.com.cn"
  variables:
    region:
      default: cn-north-1
      description: The AWS region
      enum:
      - cn-north-1
      - cn-northwest-1
security:
- hmac: []
paths:
  /#Action=AddSourceIdentifierToSubscription:
    get:
      description: Adds a source identifier to an existing event notification subscription.
      operationId: GET_AddSourceIdentifierToSubscription
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The name of the Amazon DocumentDB event notification subscription
          that you want to add a source identifier to.
        explode: true
        in: query
        name: SubscriptionName
        required: true
        schema:
          type: string
        style: form
      - description: "<p>The identifier of the event source to be added:</p> <ul>\
          \ <li> <p>If the source type is an instance, a <code>DBInstanceIdentifier</code>\
          \ must be provided.</p> </li> <li> <p>If the source type is a security group,\
          \ a <code>DBSecurityGroupName</code> must be provided.</p> </li> <li> <p>If\
          \ the source type is a parameter group, a <code>DBParameterGroupName</code>\
          \ must be provided.</p> </li> <li> <p>If the source type is a snapshot,\
          \ a <code>DBSnapshotIdentifier</code> must be provided.</p> </li> </ul>"
        explode: true
        in: query
        name: SourceIdentifier
        required: true
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: Action
        required: true
        schema:
          enum:
          - AddSourceIdentifierToSubscription
          type: string
        style: form
      - explode: true
        in: query
        name: Version
        required: true
        schema:
          enum:
          - 2014-10-31
          type: string
        style: form
      responses:
        "200":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/AddSourceIdentifierToSubscriptionResult'
          description: Success
        "480":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/SubscriptionNotFoundFault'
          description: SubscriptionNotFoundFault
        "481":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/SourceNotFoundFault'
          description: SourceNotFoundFault
      x-aws-operation-name: AddSourceIdentifierToSubscription
      x-accepts:
      - text/xml
    post:
      description: Adds a source identifier to an existing event notification subscription.
      operationId: POST_AddSourceIdentifierToSubscription
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: true
        in: query
        name: Action
        required: true
        schema:
          enum:
          - AddSourceIdentifierToSubscription
          type: string
        style: form
      - explode: true
        in: query
        name: Version
        required: true
        schema:
          enum:
          - 2014-10-31
          type: string
        style: form
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/AddSourceIdentifierToSubscriptionMessage'
      responses:
        "200":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/AddSourceIdentifierToSubscriptionResult'
          description: Success
        "480":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/SubscriptionNotFoundFault'
          description: SubscriptionNotFoundFault
        "481":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/SourceNotFoundFault'
          description: SourceNotFoundFault
      x-aws-operation-name: AddSourceIdentifierToSubscription
      x-content-type: text/xml
      x-accepts:
      - text/xml
  /#Action=AddTagsToResource:
    get:
      description: Adds metadata tags to an Amazon DocumentDB resource. You can use
        these tags with cost allocation reporting to track costs that are associated
        with Amazon DocumentDB resources or in a <code>Condition</code> statement
        in an Identity and Access Management (IAM) policy for Amazon DocumentDB.
      operationId: GET_AddTagsToResource
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The Amazon DocumentDB resource that the tags are added to. This
          value is an Amazon Resource Name .
        explode: true
        in: query
        name: ResourceName
        required: true
        schema:
          type: string
        style: form
      - description: The tags to be assigned to the Amazon DocumentDB resource.
        explode: true
        in: query
        name: Tags
        required: true
        schema:
          items:
            $ref: '#/components/schemas/GET_AddTagsToResource_Tags_parameter_inner'
          type: array
        style: form
      - explode: true
        in: query
        name: Action
        required: true
        schema:
          enum:
          - AddTagsToResource
          type: string
        style: form
      - explode: true
        in: query
        name: Version
        required: true
        schema:
          enum:
          - 2014-10-31
          type: string
        style: form
      responses:
        "200":
          description: Success
        "480":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DBInstanceNotFoundFault'
          description: DBInstanceNotFoundFault
        "481":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DBSnapshotNotFoundFault'
          description: DBSnapshotNotFoundFault
        "482":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DBClusterNotFoundFault'
          description: DBClusterNotFoundFault
      x-aws-operation-name: AddTagsToResource
      x-accepts:
      - text/xml
    post:
      description: Adds metadata tags to an Amazon DocumentDB resource. You can use
        these tags with cost allocation reporting to track costs that are associated
        with Amazon DocumentDB resources or in a <code>Condition</code> statement
        in an Identity and Access Management (IAM) policy for Amazon DocumentDB.
      operationId: POST_AddTagsToResource
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: true
        in: query
        name: Action
        required: true
        schema:
          enum:
          - AddTagsToResource
          type: string
        style: form
      - explode: true
        in: query
        name: Version
        required: true
        schema:
          enum:
          - 2014-10-31
          type: string
        style: form
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/AddTagsToResourceMessage'
      responses:
        "200":
          description: Success
        "480":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DBInstanceNotFoundFault'
          description: DBInstanceNotFoundFault
        "481":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DBSnapshotNotFoundFault'
          description: DBSnapshotNotFoundFault
        "482":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DBClusterNotFoundFault'
          description: DBClusterNotFoundFault
      x-aws-operation-name: AddTagsToResource
      x-content-type: text/xml
      x-accepts:
      - text/xml
  /#Action=ApplyPendingMaintenanceAction:
    get:
      description: "Applies a pending maintenance action to a resource (for example,\
        \ to an Amazon DocumentDB instance)."
      operationId: GET_ApplyPendingMaintenanceAction
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The Amazon Resource Name (ARN) of the resource that the pending
          maintenance action applies to.
        explode: true
        in: query
        name: ResourceIdentifier
        required: true
        schema:
          type: string
        style: form
      - description: "<p>The pending maintenance action to apply to this resource.</p>\
          \ <p>Valid values: <code>system-update</code>, <code>db-upgrade</code> </p>"
        explode: true
        in: query
        name: ApplyAction
        required: true
        schema:
          type: string
        style: form
      - description: <p>A value that specifies the type of opt-in request or undoes
          an opt-in request. An opt-in request of type <code>immediate</code> can't
          be undone.</p> <p>Valid values:</p> <ul> <li> <p> <code>immediate</code>
          - Apply the maintenance action immediately.</p> </li> <li> <p> <code>next-maintenance</code>
          - Apply the maintenance action during the next maintenance window for the
          resource. </p> </li> <li> <p> <code>undo-opt-in</code> - Cancel any existing
          <code>next-maintenance</code> opt-in requests.</p> </li> </ul>
        explode: true
        in: query
        name: OptInType
        required: true
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: Action
        required: true
        schema:
          enum:
          - ApplyPendingMaintenanceAction
          type: string
        style: form
      - explode: true
        in: query
        name: Version
        required: true
        schema:
          enum:
          - 2014-10-31
          type: string
        style: form
      responses:
        "200":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ApplyPendingMaintenanceActionResult'
          description: Success
        "480":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundFault'
          description: ResourceNotFoundFault
        "481":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidDBClusterStateFault'
          description: InvalidDBClusterStateFault
        "482":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidDBInstanceStateFault'
          description: InvalidDBInstanceStateFault
      x-aws-operation-name: ApplyPendingMaintenanceAction
      x-accepts:
      - text/xml
    post:
      description: "Applies a pending maintenance action to a resource (for example,\
        \ to an Amazon DocumentDB instance)."
      operationId: POST_ApplyPendingMaintenanceAction
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: true
        in: query
        name: Action
        required: true
        schema:
          enum:
          - ApplyPendingMaintenanceAction
          type: string
        style: form
      - explode: true
        in: query
        name: Version
        required: true
        schema:
          enum:
          - 2014-10-31
          type: string
        style: form
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/ApplyPendingMaintenanceActionMessage'
      responses:
        "200":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ApplyPendingMaintenanceActionResult'
          description: Success
        "480":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundFault'
          description: ResourceNotFoundFault
        "481":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidDBClusterStateFault'
          description: InvalidDBClusterStateFault
        "482":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidDBInstanceStateFault'
          description: InvalidDBInstanceStateFault
      x-aws-operation-name: ApplyPendingMaintenanceAction
      x-content-type: text/xml
      x-accepts:
      - text/xml
  /#Action=CopyDBClusterParameterGroup:
    get:
      description: Copies the specified cluster parameter group.
      operationId: GET_CopyDBClusterParameterGroup
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: "<p>The identifier or Amazon Resource Name (ARN) for the source\
          \ cluster parameter group.</p> <p>Constraints:</p> <ul> <li> <p>Must specify\
          \ a valid cluster parameter group.</p> </li> <li> <p>If the source cluster\
          \ parameter group is in the same Amazon Web Services Region as the copy,\
          \ specify a valid parameter group identifier; for example, <code>my-db-cluster-param-group</code>,\
          \ or a valid ARN.</p> </li> <li> <p>If the source parameter group is in\
          \ a different Amazon Web Services Region than the copy, specify a valid\
          \ cluster parameter group ARN; for example, <code>arn:aws:rds:us-east-1:123456789012:sample-cluster:sample-parameter-group</code>.</p>\
          \ </li> </ul>"
        explode: true
        in: query
        name: SourceDBClusterParameterGroupIdentifier
        required: true
        schema:
          type: string
        style: form
      - description: "<p>The identifier for the copied cluster parameter group.</p>\
          \ <p>Constraints:</p> <ul> <li> <p>Cannot be null, empty, or blank.</p>\
          \ </li> <li> <p>Must contain from 1 to 255 letters, numbers, or hyphens.\
          \ </p> </li> <li> <p>The first character must be a letter.</p> </li> <li>\
          \ <p>Cannot end with a hyphen or contain two consecutive hyphens. </p> </li>\
          \ </ul> <p>Example: <code>my-cluster-param-group1</code> </p>"
        explode: true
        in: query
        name: TargetDBClusterParameterGroupIdentifier
        required: true
        schema:
          type: string
        style: form
      - description: A description for the copied cluster parameter group.
        explode: true
        in: query
        name: TargetDBClusterParameterGroupDescription
        required: true
        schema:
          type: string
        style: form
      - description: The tags that are to be assigned to the parameter group.
        explode: true
        in: query
        name: Tags
        required: false
        schema:
          items:
            $ref: '#/components/schemas/GET_AddTagsToResource_Tags_parameter_inner'
          type: array
        style: form
      - explode: true
        in: query
        name: Action
        required: true
        schema:
          enum:
          - CopyDBClusterParameterGroup
          type: string
        style: form
      - explode: true
        in: query
        name: Version
        required: true
        schema:
          enum:
          - 2014-10-31
          type: string
        style: form
      responses:
        "200":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/CopyDBClusterParameterGroupResult'
          description: Success
        "480":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DBParameterGroupNotFoundFault'
          description: DBParameterGroupNotFoundFault
        "481":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DBParameterGroupQuotaExceededFault'
          description: DBParameterGroupQuotaExceededFault
        "482":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DBParameterGroupAlreadyExistsFault'
          description: DBParameterGroupAlreadyExistsFault
      x-aws-operation-name: CopyDBClusterParameterGroup
      x-accepts:
      - text/xml
    post:
      description: Copies the specified cluster parameter group.
      operationId: POST_CopyDBClusterParameterGroup
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: true
        in: query
        name: Action
        required: true
        schema:
          enum:
          - CopyDBClusterParameterGroup
          type: string
        style: form
      - explode: true
        in: query
        name: Version
        required: true
        schema:
          enum:
          - 2014-10-31
          type: string
        style: form
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/CopyDBClusterParameterGroupMessage'
      responses:
        "200":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/CopyDBClusterParameterGroupResult'
          description: Success
        "480":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DBParameterGroupNotFoundFault'
          description: DBParameterGroupNotFoundFault
        "481":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DBParameterGroupQuotaExceededFault'
          description: DBParameterGroupQuotaExceededFault
        "482":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DBParameterGroupAlreadyExistsFault'
          description: DBParameterGroupAlreadyExistsFault
      x-aws-operation-name: CopyDBClusterParameterGroup
      x-content-type: text/xml
      x-accepts:
      - text/xml
  /#Action=CopyDBClusterSnapshot:
    get:
      description: "<p>Copies a snapshot of a cluster.</p> <p>To copy a cluster snapshot\
        \ from a shared manual cluster snapshot, <code>SourceDBClusterSnapshotIdentifier</code>\
        \ must be the Amazon Resource Name (ARN) of the shared cluster snapshot. You\
        \ can only copy a shared DB cluster snapshot, whether encrypted or not, in\
        \ the same Amazon Web Services Region.</p> <p>To cancel the copy operation\
        \ after it is in progress, delete the target cluster snapshot identified by\
        \ <code>TargetDBClusterSnapshotIdentifier</code> while that cluster snapshot\
        \ is in the <i>copying</i> status.</p>"
      operationId: GET_CopyDBClusterSnapshot
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: "<p>The identifier of the cluster snapshot to copy. This parameter\
          \ is not case sensitive.</p> <p>Constraints:</p> <ul> <li> <p>Must specify\
          \ a valid system snapshot in the <i>available</i> state.</p> </li> <li>\
          \ <p>If the source snapshot is in the same Amazon Web Services Region as\
          \ the copy, specify a valid snapshot identifier.</p> </li> <li> <p>If the\
          \ source snapshot is in a different Amazon Web Services Region than the\
          \ copy, specify a valid cluster snapshot ARN.</p> </li> </ul> <p>Example:\
          \ <code>my-cluster-snapshot1</code> </p>"
        explode: true
        in: query
        name: SourceDBClusterSnapshotIdentifier
        required: true
        schema:
          type: string
        style: form
      - description: "<p>The identifier of the new cluster snapshot to create from\
          \ the source cluster snapshot. This parameter is not case sensitive.</p>\
          \ <p>Constraints:</p> <ul> <li> <p>Must contain from 1 to 63 letters, numbers,\
          \ or hyphens. </p> </li> <li> <p>The first character must be a letter.</p>\
          \ </li> <li> <p>Cannot end with a hyphen or contain two consecutive hyphens.\
          \ </p> </li> </ul> <p>Example: <code>my-cluster-snapshot2</code> </p>"
        explode: true
        in: query
        name: TargetDBClusterSnapshotIdentifier
        required: true
        schema:
          type: string
        style: form
      - description: "<p>The KMS key ID for an encrypted cluster snapshot. The KMS\
          \ key ID is the Amazon Resource Name (ARN), KMS key identifier, or the KMS\
          \ key alias for the KMS encryption key. </p> <p>If you copy an encrypted\
          \ cluster snapshot from your Amazon Web Services account, you can specify\
          \ a value for <code>KmsKeyId</code> to encrypt the copy with a new KMS encryption\
          \ key. If you don't specify a value for <code>KmsKeyId</code>, then the\
          \ copy of the cluster snapshot is encrypted with the same KMS key as the\
          \ source cluster snapshot.</p> <p>If you copy an encrypted cluster snapshot\
          \ that is shared from another Amazon Web Services account, then you must\
          \ specify a value for <code>KmsKeyId</code>.</p> <p>To copy an encrypted\
          \ cluster snapshot to another Amazon Web Services Region, set <code>KmsKeyId</code>\
          \ to the KMS key ID that you want to use to encrypt the copy of the cluster\
          \ snapshot in the destination Region. KMS encryption keys are specific to\
          \ the Amazon Web Services Region that they are created in, and you can't\
          \ use encryption keys from one Amazon Web Services Region in another Amazon\
          \ Web Services Region.</p> <p>If you copy an unencrypted cluster snapshot\
          \ and specify a value for the <code>KmsKeyId</code> parameter, an error\
          \ is returned.</p>"
        explode: true
        in: query
        name: KmsKeyId
        required: false
        schema:
          type: string
        style: form
      - description: "<p>The URL that contains a Signature Version 4 signed request\
          \ for the<code>CopyDBClusterSnapshot</code> API action in the Amazon Web\
          \ Services Region that contains the source cluster snapshot to copy. You\
          \ must use the <code>PreSignedUrl</code> parameter when copying a cluster\
          \ snapshot from another Amazon Web Services Region.</p> <p>If you are using\
          \ an Amazon Web Services SDK tool or the CLI, you can specify <code>SourceRegion</code>\
          \ (or <code>--source-region</code> for the CLI) instead of specifying <code>PreSignedUrl</code>\
          \ manually. Specifying <code>SourceRegion</code> autogenerates a pre-signed\
          \ URL that is a valid request for the operation that can be executed in\
          \ the source Amazon Web Services Region.</p> <p>The presigned URL must be\
          \ a valid request for the <code>CopyDBClusterSnapshot</code> API action\
          \ that can be executed in the source Amazon Web Services Region that contains\
          \ the cluster snapshot to be copied. The presigned URL request must contain\
          \ the following parameter values:</p> <ul> <li> <p> <code>SourceRegion</code>\
          \ - The ID of the region that contains the snapshot to be copied.</p> </li>\
          \ <li> <p> <code>SourceDBClusterSnapshotIdentifier</code> - The identifier\
          \ for the the encrypted cluster snapshot to be copied. This identifier must\
          \ be in the Amazon Resource Name (ARN) format for the source Amazon Web\
          \ Services Region. For example, if you are copying an encrypted cluster\
          \ snapshot from the us-east-1 Amazon Web Services Region, then your <code>SourceDBClusterSnapshotIdentifier</code>\
          \ looks something like the following: <code>arn:aws:rds:us-east-1:12345678012:sample-cluster:sample-cluster-snapshot</code>.</p>\
          \ </li> <li> <p> <code>TargetDBClusterSnapshotIdentifier</code> - The identifier\
          \ for the new cluster snapshot to be created. This parameter isn't case\
          \ sensitive.</p> </li> </ul>"
        explode: true
        in: query
        name: PreSignedUrl
        required: false
        schema:
          type: string
        style: form
      - description: "Set to <code>true</code> to copy all tags from the source cluster\
          \ snapshot to the target cluster snapshot, and otherwise <code>false</code>.\
          \ The default is <code>false</code>."
        explode: true
        in: query
        name: CopyTags
        required: false
        schema:
          type: boolean
        style: form
      - description: The tags to be assigned to the cluster snapshot.
        explode: true
        in: query
        name: Tags
        required: false
        schema:
          items:
            $ref: '#/components/schemas/GET_AddTagsToResource_Tags_parameter_inner'
          type: array
        style: form
      - explode: true
        in: query
        name: Action
        required: true
        schema:
          enum:
          - CopyDBClusterSnapshot
          type: string
        style: form
      - explode: true
        in: query
        name: Version
        required: true
        schema:
          enum:
          - 2014-10-31
          type: string
        style: form
      responses:
        "200":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/CopyDBClusterSnapshotResult'
          description: Success
        "480":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DBClusterSnapshotAlreadyExistsFault'
          description: DBClusterSnapshotAlreadyExistsFault
        "481":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DBClusterSnapshotNotFoundFault'
          description: DBClusterSnapshotNotFoundFault
        "482":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidDBClusterStateFault'
          description: InvalidDBClusterStateFault
        "483":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidDBClusterSnapshotStateFault'
          description: InvalidDBClusterSnapshotStateFault
        "484":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/SnapshotQuotaExceededFault'
          description: SnapshotQuotaExceededFault
        "485":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/KMSKeyNotAccessibleFault'
          description: KMSKeyNotAccessibleFault
      x-aws-operation-name: CopyDBClusterSnapshot
      x-accepts:
      - text/xml
    post:
      description: "<p>Copies a snapshot of a cluster.</p> <p>To copy a cluster snapshot\
        \ from a shared manual cluster snapshot, <code>SourceDBClusterSnapshotIdentifier</code>\
        \ must be the Amazon Resource Name (ARN) of the shared cluster snapshot. You\
        \ can only copy a shared DB cluster snapshot, whether encrypted or not, in\
        \ the same Amazon Web Services Region.</p> <p>To cancel the copy operation\
        \ after it is in progress, delete the target cluster snapshot identified by\
        \ <code>TargetDBClusterSnapshotIdentifier</code> while that cluster snapshot\
        \ is in the <i>copying</i> status.</p>"
      operationId: POST_CopyDBClusterSnapshot
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: true
        in: query
        name: Action
        required: true
        schema:
          enum:
          - CopyDBClusterSnapshot
          type: string
        style: form
      - explode: true
        in: query
        name: Version
        required: true
        schema:
          enum:
          - 2014-10-31
          type: string
        style: form
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/CopyDBClusterSnapshotMessage'
      responses:
        "200":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/CopyDBClusterSnapshotResult'
          description: Success
        "480":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DBClusterSnapshotAlreadyExistsFault'
          description: DBClusterSnapshotAlreadyExistsFault
        "481":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DBClusterSnapshotNotFoundFault'
          description: DBClusterSnapshotNotFoundFault
        "482":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidDBClusterStateFault'
          description: InvalidDBClusterStateFault
        "483":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidDBClusterSnapshotStateFault'
          description: InvalidDBClusterSnapshotStateFault
        "484":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/SnapshotQuotaExceededFault'
          description: SnapshotQuotaExceededFault
        "485":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/KMSKeyNotAccessibleFault'
          description: KMSKeyNotAccessibleFault
      x-aws-operation-name: CopyDBClusterSnapshot
      x-content-type: text/xml
      x-accepts:
      - text/xml
  /#Action=CreateDBCluster:
    get:
      description: Creates a new Amazon DocumentDB cluster.
      operationId: GET_CreateDBCluster
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: A list of Amazon EC2 Availability Zones that instances in the
          cluster can be created in.
        explode: true
        in: query
        name: AvailabilityZones
        required: false
        schema:
          items:
            allOf:
            - $ref: '#/components/schemas/String'
            - xml:
                name: AvailabilityZone
          type: array
        style: form
      - description: "<p>The number of days for which automated backups are retained.\
          \ You must specify a minimum value of 1.</p> <p>Default: 1</p> <p>Constraints:</p>\
          \ <ul> <li> <p>Must be a value from 1 to 35.</p> </li> </ul>"
        explode: true
        in: query
        name: BackupRetentionPeriod
        required: false
        schema:
          type: integer
        style: form
      - description: "<p>The cluster identifier. This parameter is stored as a lowercase\
          \ string.</p> <p>Constraints:</p> <ul> <li> <p>Must contain from 1 to 63\
          \ letters, numbers, or hyphens. </p> </li> <li> <p>The first character must\
          \ be a letter.</p> </li> <li> <p>Cannot end with a hyphen or contain two\
          \ consecutive hyphens. </p> </li> </ul> <p>Example: <code>my-cluster</code>\
          \ </p>"
        explode: true
        in: query
        name: DBClusterIdentifier
        required: true
        schema:
          type: string
        style: form
      - description: The name of the cluster parameter group to associate with this
          cluster.
        explode: true
        in: query
        name: DBClusterParameterGroupName
        required: false
        schema:
          type: string
        style: form
      - description: 'A list of EC2 VPC security groups to associate with this cluster. '
        explode: true
        in: query
        name: VpcSecurityGroupIds
        required: false
        schema:
          items:
            allOf:
            - $ref: '#/components/schemas/String'
            - xml:
                name: VpcSecurityGroupId
          type: array
        style: form
      - description: "<p>A subnet group to associate with this cluster.</p> <p>Constraints:\
          \ Must match the name of an existing <code>DBSubnetGroup</code>. Must not\
          \ be default.</p> <p>Example: <code>mySubnetgroup</code> </p>"
        explode: true
        in: query
        name: DBSubnetGroupName
        required: false
        schema:
          type: string
        style: form
      - description: "<p>The name of the database engine to be used for this cluster.</p>\
          \ <p>Valid values: <code>docdb</code> </p>"
        explode: true
        in: query
        name: Engine
        required: true
        schema:
          type: string
        style: form
      - description: "The version number of the database engine to use. The <code>--engine-version</code>\
          \ will default to the latest major engine version. For production workloads,\
          \ we recommend explicitly declaring this parameter with the intended major\
          \ engine version."
        explode: true
        in: query
        name: EngineVersion
        required: false
        schema:
          type: string
        style: form
      - description: The port number on which the instances in the cluster accept
          connections.
        explode: true
        in: query
        name: Port
        required: false
        schema:
          type: integer
        style: form
      - description: <p>The name of the master user for the cluster.</p> <p>Constraints:</p>
          <ul> <li> <p>Must be from 1 to 63 letters or numbers.</p> </li> <li> <p>The
          first character must be a letter.</p> </li> <li> <p>Cannot be a reserved
          word for the chosen database engine. </p> </li> </ul>
        explode: true
        in: query
        name: MasterUsername
        required: false
        schema:
          type: string
        style: form
      - description: "<p>The password for the master database user. This password\
          \ can contain any printable ASCII character except forward slash (/), double\
          \ quote (\"), or the \"at\" symbol (@).</p> <p>Constraints: Must contain\
          \ from 8 to 100 characters.</p>"
        explode: true
        in: query
        name: MasterUserPassword
        required: false
        schema:
          type: string
        style: form
      - description: <p>The daily time range during which automated backups are created
          if automated backups are enabled using the <code>BackupRetentionPeriod</code>
          parameter. </p> <p>The default is a 30-minute window selected at random
          from an 8-hour block of time for each Amazon Web Services Region. </p> <p>Constraints:</p>
          <ul> <li> <p>Must be in the format <code>hh24:mi-hh24:mi</code>.</p> </li>
          <li> <p>Must be in Universal Coordinated Time (UTC).</p> </li> <li> <p>Must
          not conflict with the preferred maintenance window. </p> </li> <li> <p>Must
          be at least 30 minutes.</p> </li> </ul>
        explode: true
        in: query
        name: PreferredBackupWindow
        required: false
        schema:
          type: string
        style: form
      - description: "<p>The weekly time range during which system maintenance can\
          \ occur, in Universal Coordinated Time (UTC).</p> <p>Format: <code>ddd:hh24:mi-ddd:hh24:mi</code>\
          \ </p> <p>The default is a 30-minute window selected at random from an 8-hour\
          \ block of time for each Amazon Web Services Region, occurring on a random\
          \ day of the week.</p> <p>Valid days: Mon, Tue, Wed, Thu, Fri, Sat, Sun</p>\
          \ <p>Constraints: Minimum 30-minute window.</p>"
        explode: true
        in: query
        name: PreferredMaintenanceWindow
        required: false
        schema:
          type: string
        style: form
      - description: The tags to be assigned to the cluster.
        explode: true
        in: query
        name: Tags
        required: false
        schema:
          items:
            $ref: '#/components/schemas/GET_AddTagsToResource_Tags_parameter_inner'
          type: array
        style: form
      - description: Specifies whether the cluster is encrypted.
        explode: true
        in: query
        name: StorageEncrypted
        required: false
        schema:
          type: boolean
        style: form
      - description: "<p>The KMS key identifier for an encrypted cluster.</p> <p>The\
          \ KMS key identifier is the Amazon Resource Name (ARN) for the KMS encryption\
          \ key. If you are creating a cluster using the same Amazon Web Services\
          \ account that owns the KMS encryption key that is used to encrypt the new\
          \ cluster, you can use the KMS key alias instead of the ARN for the KMS\
          \ encryption key.</p> <p>If an encryption key is not specified in <code>KmsKeyId</code>:\
          \ </p> <ul> <li> <p>If the <code>StorageEncrypted</code> parameter is <code>true</code>,\
          \ Amazon DocumentDB uses your default encryption key. </p> </li> </ul> <p>KMS\
          \ creates the default encryption key for your Amazon Web Services account.\
          \ Your Amazon Web Services account has a different default encryption key\
          \ for each Amazon Web Services Regions.</p>"
        explode: true
        in: query
        name: KmsKeyId
        required: false
        schema:
          type: string
        style: form
      - description: 'Not currently supported. '
        explode: true
        in: query
        name: PreSignedUrl
        required: false
        schema:
          type: string
        style: form
      - description: "A list of log types that need to be enabled for exporting to\
          \ Amazon CloudWatch Logs. You can enable audit logs or profiler logs. For\
          \ more information, see <a href=\"https://docs.aws.amazon.com/documentdb/latest/developerguide/event-auditing.html\"\
          > Auditing Amazon DocumentDB Events</a> and <a href=\"https://docs.aws.amazon.com/documentdb/latest/developerguide/profiling.html\"\
          > Profiling Amazon DocumentDB Operations</a>. "
        explode: true
        in: query
        name: EnableCloudwatchLogsExports
        required: false
        schema:
          items:
            $ref: '#/components/schemas/String'
          type: array
        style: form
      - description: "Specifies whether this cluster can be deleted. If <code>DeletionProtection</code>\
          \ is enabled, the cluster cannot be deleted unless it is modified and <code>DeletionProtection</code>\
          \ is disabled. <code>DeletionProtection</code> protects clusters from being\
          \ accidentally deleted."
        explode: true
        in: query
        name: DeletionProtection
        required: false
        schema:
          type: boolean
        style: form
      - description: The cluster identifier of the new global cluster.
        explode: true
        in: query
        name: GlobalClusterIdentifier
        required: false
        schema:
          maxLength: 255
          minLength: 1
          pattern: "[A-Za-z][0-9A-Za-z-:._]*"
          type: string
        style: form
      - explode: true
        in: query
        name: Action
        required: true
        schema:
          enum:
          - CreateDBCluster
          type: string
        style: form
      - explode: true
        in: query
        name: Version
        required: true
        schema:
          enum:
          - 2014-10-31
          type: string
        style: form
      responses:
        "200":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/CreateDBClusterResult'
          description: Success
        "480":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DBClusterAlreadyExistsFault'
          description: DBClusterAlreadyExistsFault
        "481":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InsufficientStorageClusterCapacityFault'
          description: InsufficientStorageClusterCapacityFault
        "482":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DBClusterQuotaExceededFault'
          description: DBClusterQuotaExceededFault
        "483":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/StorageQuotaExceededFault'
          description: StorageQuotaExceededFault
        "484":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DBSubnetGroupNotFoundFault'
          description: DBSubnetGroupNotFoundFault
        "485":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidVPCNetworkStateFault'
          description: InvalidVPCNetworkStateFault
        "486":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidDBClusterStateFault'
          description: InvalidDBClusterStateFault
        "487":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidDBSubnetGroupStateFault'
          description: InvalidDBSubnetGroupStateFault
        "488":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidSubnet'
          description: InvalidSubnet
        "489":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidDBInstanceStateFault'
          description: InvalidDBInstanceStateFault
        "490":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DBClusterParameterGroupNotFoundFault'
          description: DBClusterParameterGroupNotFoundFault
        "491":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/KMSKeyNotAccessibleFault'
          description: KMSKeyNotAccessibleFault
        "492":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DBClusterNotFoundFault'
          description: DBClusterNotFoundFault
        "493":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DBInstanceNotFoundFault'
          description: DBInstanceNotFoundFault
        "494":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DBSubnetGroupDoesNotCoverEnoughAZs'
          description: DBSubnetGroupDoesNotCoverEnoughAZs
        "495":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/GlobalClusterNotFoundFault'
          description: GlobalClusterNotFoundFault
        "496":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidGlobalClusterStateFault'
          description: InvalidGlobalClusterStateFault
      x-aws-operation-name: CreateDBCluster
      x-accepts:
      - text/xml
    post:
      description: Creates a new Amazon DocumentDB cluster.
      operationId: POST_CreateDBCluster
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: true
        in: query
        name: Action
        required: true
        schema:
          enum:
          - CreateDBCluster
          type: string
        style: form
      - explode: true
        in: query
        name: Version
        required: true
        schema:
          enum:
          - 2014-10-31
          type: string
        style: form
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/CreateDBClusterMessage'
      responses:
        "200":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/CreateDBClusterResult'
          description: Success
        "480":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DBClusterAlreadyExistsFault'
          description: DBClusterAlreadyExistsFault
        "481":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InsufficientStorageClusterCapacityFault'
          description: InsufficientStorageClusterCapacityFault
        "482":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DBClusterQuotaExceededFault'
          description: DBClusterQuotaExceededFault
        "483":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/StorageQuotaExceededFault'
          description: StorageQuotaExceededFault
        "484":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DBSubnetGroupNotFoundFault'
          description: DBSubnetGroupNotFoundFault
        "485":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidVPCNetworkStateFault'
          description: InvalidVPCNetworkStateFault
        "486":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidDBClusterStateFault'
          description: InvalidDBClusterStateFault
        "487":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidDBSubnetGroupStateFault'
          description: InvalidDBSubnetGroupStateFault
        "488":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidSubnet'
          description: InvalidSubnet
        "489":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidDBInstanceStateFault'
          description: InvalidDBInstanceStateFault
        "490":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DBClusterParameterGroupNotFoundFault'
          description: DBClusterParameterGroupNotFoundFault
        "491":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/KMSKeyNotAccessibleFault'
          description: KMSKeyNotAccessibleFault
        "492":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DBClusterNotFoundFault'
          description: DBClusterNotFoundFault
        "493":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DBInstanceNotFoundFault'
          description: DBInstanceNotFoundFault
        "494":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DBSubnetGroupDoesNotCoverEnoughAZs'
          description: DBSubnetGroupDoesNotCoverEnoughAZs
        "495":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/GlobalClusterNotFoundFault'
          description: GlobalClusterNotFoundFault
        "496":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidGlobalClusterStateFault'
          description: InvalidGlobalClusterStateFault
      x-aws-operation-name: CreateDBCluster
      x-content-type: text/xml
      x-accepts:
      - text/xml
  /#Action=CreateDBClusterParameterGroup:
    get:
      description: "<p>Creates a new cluster parameter group.</p> <p>Parameters in\
        \ a cluster parameter group apply to all of the instances in a cluster.</p>\
        \ <p>A cluster parameter group is initially created with the default parameters\
        \ for the database engine used by instances in the cluster. In Amazon DocumentDB,\
        \ you cannot make modifications directly to the <code>default.docdb3.6</code>\
        \ cluster parameter group. If your Amazon DocumentDB cluster is using the\
        \ default cluster parameter group and you want to modify a value in it, you\
        \ must first <a href=\"https://docs.aws.amazon.com/documentdb/latest/developerguide/cluster_parameter_group-create.html\"\
        > create a new parameter group</a> or <a href=\"https://docs.aws.amazon.com/documentdb/latest/developerguide/cluster_parameter_group-copy.html\"\
        > copy an existing parameter group</a>, modify it, and then apply the modified\
        \ parameter group to your cluster. For the new cluster parameter group and\
        \ associated settings to take effect, you must then reboot the instances in\
        \ the cluster without failover. For more information, see <a href=\"https://docs.aws.amazon.com/documentdb/latest/developerguide/cluster_parameter_group-modify.html\"\
        > Modifying Amazon DocumentDB Cluster Parameter Groups</a>. </p>"
      operationId: GET_CreateDBClusterParameterGroup
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: <p>The name of the cluster parameter group.</p> <p>Constraints:</p>
          <ul> <li> <p>Must not match the name of an existing <code>DBClusterParameterGroup</code>.</p>
          </li> </ul> <note> <p>This value is stored as a lowercase string.</p> </note>
        explode: true
        in: query
        name: DBClusterParameterGroupName
        required: true
        schema:
          type: string
        style: form
      - description: The cluster parameter group family name.
        explode: true
        in: query
        name: DBParameterGroupFamily
        required: true
        schema:
          type: string
        style: form
      - description: The description for the cluster parameter group.
        explode: true
        in: query
        name: Description
        required: true
        schema:
          type: string
        style: form
      - description: The tags to be assigned to the cluster parameter group.
        explode: true
        in: query
        name: Tags
        required: false
        schema:
          items:
            $ref: '#/components/schemas/GET_AddTagsToResource_Tags_parameter_inner'
          type: array
        style: form
      - explode: true
        in: query
        name: Action
        required: true
        schema:
          enum:
          - CreateDBClusterParameterGroup
          type: string
        style: form
      - explode: true
        in: query
        name: Version
        required: true
        schema:
          enum:
          - 2014-10-31
          type: string
        style: form
      responses:
        "200":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/CreateDBClusterParameterGroupResult'
          description: Success
        "480":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DBParameterGroupQuotaExceededFault'
          description: DBParameterGroupQuotaExceededFault
        "481":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DBParameterGroupAlreadyExistsFault'
          description: DBParameterGroupAlreadyExistsFault
      x-aws-operation-name: CreateDBClusterParameterGroup
      x-accepts:
      - text/xml
    post:
      description: "<p>Creates a new cluster parameter group.</p> <p>Parameters in\
        \ a cluster parameter group apply to all of the instances in a cluster.</p>\
        \ <p>A cluster parameter group is initially created with the default parameters\
        \ for the database engine used by instances in the cluster. In Amazon DocumentDB,\
        \ you cannot make modifications directly to the <code>default.docdb3.6</code>\
        \ cluster parameter group. If your Amazon DocumentDB cluster is using the\
        \ default cluster parameter group and you want to modify a value in it, you\
        \ must first <a href=\"https://docs.aws.amazon.com/documentdb/latest/developerguide/cluster_parameter_group-create.html\"\
        > create a new parameter group</a> or <a href=\"https://docs.aws.amazon.com/documentdb/latest/developerguide/cluster_parameter_group-copy.html\"\
        > copy an existing parameter group</a>, modify it, and then apply the modified\
        \ parameter group to your cluster. For the new cluster parameter group and\
        \ associated settings to take effect, you must then reboot the instances in\
        \ the cluster without failover. For more information, see <a href=\"https://docs.aws.amazon.com/documentdb/latest/developerguide/cluster_parameter_group-modify.html\"\
        > Modifying Amazon DocumentDB Cluster Parameter Groups</a>. </p>"
      operationId: POST_CreateDBClusterParameterGroup
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: true
        in: query
        name: Action
        required: true
        schema:
          enum:
          - CreateDBClusterParameterGroup
          type: string
        style: form
      - explode: true
        in: query
        name: Version
        required: true
        schema:
          enum:
          - 2014-10-31
          type: string
        style: form
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/CreateDBClusterParameterGroupMessage'
      responses:
        "200":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/CreateDBClusterParameterGroupResult'
          description: Success
        "480":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DBParameterGroupQuotaExceededFault'
          description: DBParameterGroupQuotaExceededFault
        "481":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DBParameterGroupAlreadyExistsFault'
          description: DBParameterGroupAlreadyExistsFault
      x-aws-operation-name: CreateDBClusterParameterGroup
      x-content-type: text/xml
      x-accepts:
      - text/xml
  /#Action=CreateDBClusterSnapshot:
    get:
      description: 'Creates a snapshot of a cluster. '
      operationId: GET_CreateDBClusterSnapshot
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: "<p>The identifier of the cluster snapshot. This parameter is\
          \ stored as a lowercase string.</p> <p>Constraints:</p> <ul> <li> <p>Must\
          \ contain from 1 to 63 letters, numbers, or hyphens.</p> </li> <li> <p>The\
          \ first character must be a letter.</p> </li> <li> <p>Cannot end with a\
          \ hyphen or contain two consecutive hyphens. </p> </li> </ul> <p>Example:\
          \ <code>my-cluster-snapshot1</code> </p>"
        explode: true
        in: query
        name: DBClusterSnapshotIdentifier
        required: true
        schema:
          type: string
        style: form
      - description: "<p>The identifier of the cluster to create a snapshot for. This\
          \ parameter is not case sensitive.</p> <p>Constraints:</p> <ul> <li> <p>Must\
          \ match the identifier of an existing <code>DBCluster</code>.</p> </li>\
          \ </ul> <p>Example: <code>my-cluster</code> </p>"
        explode: true
        in: query
        name: DBClusterIdentifier
        required: true
        schema:
          type: string
        style: form
      - description: The tags to be assigned to the cluster snapshot.
        explode: true
        in: query
        name: Tags
        required: false
        schema:
          items:
            $ref: '#/components/schemas/GET_AddTagsToResource_Tags_parameter_inner'
          type: array
        style: form
      - explode: true
        in: query
        name: Action
        required: true
        schema:
          enum:
          - CreateDBClusterSnapshot
          type: string
        style: form
      - explode: true
        in: query
        name: Version
        required: true
        schema:
          enum:
          - 2014-10-31
          type: string
        style: form
      responses:
        "200":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/CreateDBClusterSnapshotResult'
          description: Success
        "480":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DBClusterSnapshotAlreadyExistsFault'
          description: DBClusterSnapshotAlreadyExistsFault
        "481":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidDBClusterStateFault'
          description: InvalidDBClusterStateFault
        "482":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DBClusterNotFoundFault'
          description: DBClusterNotFoundFault
        "483":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/SnapshotQuotaExceededFault'
          description: SnapshotQuotaExceededFault
        "484":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidDBClusterSnapshotStateFault'
          description: InvalidDBClusterSnapshotStateFault
      x-aws-operation-name: CreateDBClusterSnapshot
      x-accepts:
      - text/xml
    post:
      description: 'Creates a snapshot of a cluster. '
      operationId: POST_CreateDBClusterSnapshot
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: true
        in: query
        name: Action
        required: true
        schema:
          enum:
          - CreateDBClusterSnapshot
          type: string
        style: form
      - explode: true
        in: query
        name: Version
        required: true
        schema:
          enum:
          - 2014-10-31
          type: string
        style: form
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/CreateDBClusterSnapshotMessage'
      responses:
        "200":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/CreateDBClusterSnapshotResult'
          description: Success
        "480":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DBClusterSnapshotAlreadyExistsFault'
          description: DBClusterSnapshotAlreadyExistsFault
        "481":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidDBClusterStateFault'
          description: InvalidDBClusterStateFault
        "482":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DBClusterNotFoundFault'
          description: DBClusterNotFoundFault
        "483":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/SnapshotQuotaExceededFault'
          description: SnapshotQuotaExceededFault
        "484":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidDBClusterSnapshotStateFault'
          description: InvalidDBClusterSnapshotStateFault
      x-aws-operation-name: CreateDBClusterSnapshot
      x-content-type: text/xml
      x-accepts:
      - text/xml
  /#Action=CreateDBInstance:
    get:
      description: Creates a new instance.
      operationId: GET_CreateDBInstance
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: "<p>The instance identifier. This parameter is stored as a lowercase\
          \ string.</p> <p>Constraints:</p> <ul> <li> <p>Must contain from 1 to 63\
          \ letters, numbers, or hyphens.</p> </li> <li> <p>The first character must\
          \ be a letter.</p> </li> <li> <p>Cannot end with a hyphen or contain two\
          \ consecutive hyphens.</p> </li> </ul> <p>Example: <code>mydbinstance</code>\
          \ </p>"
        explode: true
        in: query
        name: DBInstanceIdentifier
        required: true
        schema:
          type: string
        style: form
      - description: "The compute and memory capacity of the instance; for example,\
          \ <code>db.r5.large</code>. "
        explode: true
        in: query
        name: DBInstanceClass
        required: true
        schema:
          type: string
        style: form
      - description: "<p>The name of the database engine to be used for this instance.</p>\
          \ <p>Valid value: <code>docdb</code> </p>"
        explode: true
        in: query
        name: Engine
        required: true
        schema:
          type: string
        style: form
      - description: "<p>The Amazon EC2 Availability Zone that the instance is created\
          \ in. </p> <p>Default: A random, system-chosen Availability Zone in the\
          \ endpoint's Amazon Web Services Region.</p> <p>Example: <code>us-east-1d</code>\
          \ </p>"
        explode: true
        in: query
        name: AvailabilityZone
        required: false
        schema:
          type: string
        style: form
      - description: "<p>The time range each week during which system maintenance\
          \ can occur, in Universal Coordinated Time (UTC).</p> <p> Format: <code>ddd:hh24:mi-ddd:hh24:mi</code>\
          \ </p> <p>The default is a 30-minute window selected at random from an 8-hour\
          \ block of time for each Amazon Web Services Region, occurring on a random\
          \ day of the week. </p> <p>Valid days: Mon, Tue, Wed, Thu, Fri, Sat, Sun</p>\
          \ <p>Constraints: Minimum 30-minute window.</p>"
        explode: true
        in: query
        name: PreferredMaintenanceWindow
        required: false
        schema:
          type: string
        style: form
      - description: "<p>This parameter does not apply to Amazon DocumentDB. Amazon\
          \ DocumentDB does not perform minor version upgrades regardless of the value\
          \ set.</p> <p>Default: <code>false</code> </p>"
        explode: true
        in: query
        name: AutoMinorVersionUpgrade
        required: false
        schema:
          type: boolean
        style: form
      - description: The tags to be assigned to the instance. You can assign up to
          10 tags to an instance.
        explode: true
        in: query
        name: Tags
        required: false
        schema:
          items:
            $ref: '#/components/schemas/GET_AddTagsToResource_Tags_parameter_inner'
          type: array
        style: form
      - description: The identifier of the cluster that the instance will belong to.
        explode: true
        in: query
        name: DBClusterIdentifier
        required: true
        schema:
          type: string
        style: form
      - description: "A value that indicates whether to copy tags from the DB instance\
          \ to snapshots of the DB instance. By default, tags are not copied."
        explode: true
        in: query
        name: CopyTagsToSnapshot
        required: false
        schema:
          type: boolean
        style: form
      - description: "<p>A value that specifies the order in which an Amazon DocumentDB\
          \ replica is promoted to the primary instance after a failure of the existing\
          \ primary instance.</p> <p>Default: 1</p> <p>Valid values: 0-15</p>"
        explode: true
        in: query
        name: PromotionTier
        required: false
        schema:
          type: integer
        style: form
      - description: "A value that indicates whether to enable Performance Insights\
          \ for the DB Instance. For more information, see <a href=\"https://docs.aws.amazon.com/documentdb/latest/developerguide/performance-insights.html\"\
          >Using Amazon Performance Insights</a>."
        explode: true
        in: query
        name: EnablePerformanceInsights
        required: false
        schema:
          type: boolean
        style: form
      - description: "<p>The KMS key identifier for encryption of Performance Insights\
          \ data.</p> <p>The KMS key identifier is the key ARN, key ID, alias ARN,\
          \ or alias name for the KMS key.</p> <p>If you do not specify a value for\
          \ PerformanceInsightsKMSKeyId, then Amazon DocumentDB uses your default\
          \ KMS key. There is a default KMS key for your Amazon Web Services account.\
          \ Your Amazon Web Services account has a different default KMS key for each\
          \ Amazon Web Services region.</p>"
        explode: true
        in: query
        name: PerformanceInsightsKMSKeyId
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: Action
        required: true
        schema:
          enum:
          - CreateDBInstance
          type: string
        style: form
      - explode: true
        in: query
        name: Version
        required: true
        schema:
          enum:
          - 2014-10-31
          type: string
        style: form
      responses:
        "200":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/CreateDBInstanceResult'
          description: Success
        "480":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DBInstanceAlreadyExistsFault'
          description: DBInstanceAlreadyExistsFault
        "481":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InsufficientDBInstanceCapacityFault'
          description: InsufficientDBInstanceCapacityFault
        "482":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DBParameterGroupNotFoundFault'
          description: DBParameterGroupNotFoundFault
        "483":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DBSecurityGroupNotFoundFault'
          description: DBSecurityGroupNotFoundFault
        "484":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InstanceQuotaExceededFault'
          description: InstanceQuotaExceededFault
        "485":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/StorageQuotaExceededFault'
          description: StorageQuotaExceededFault
        "486":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DBSubnetGroupNotFoundFault'
          description: DBSubnetGroupNotFoundFault
        "487":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DBSubnetGroupDoesNotCoverEnoughAZs'
          description: DBSubnetGroupDoesNotCoverEnoughAZs
        "488":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidDBClusterStateFault'
          description: InvalidDBClusterStateFault
        "489":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidSubnet'
          description: InvalidSubnet
        "490":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidVPCNetworkStateFault'
          description: InvalidVPCNetworkStateFault
        "491":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DBClusterNotFoundFault'
          description: DBClusterNotFoundFault
        "492":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/StorageTypeNotSupportedFault'
          description: StorageTypeNotSupportedFault
        "493":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/AuthorizationNotFoundFault'
          description: AuthorizationNotFoundFault
        "494":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/KMSKeyNotAccessibleFault'
          description: KMSKeyNotAccessibleFault
      x-aws-operation-name: CreateDBInstance
      x-accepts:
      - text/xml
    post:
      description: Creates a new instance.
      operationId: POST_CreateDBInstance
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: true
        in: query
        name: Action
        required: true
        schema:
          enum:
          - CreateDBInstance
          type: string
        style: form
      - explode: true
        in: query
        name: Version
        required: true
        schema:
          enum:
          - 2014-10-31
          type: string
        style: form
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/CreateDBInstanceMessage'
      responses:
        "200":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/CreateDBInstanceResult'
          description: Success
        "480":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DBInstanceAlreadyExistsFault'
          description: DBInstanceAlreadyExistsFault
        "481":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InsufficientDBInstanceCapacityFault'
          description: InsufficientDBInstanceCapacityFault
        "482":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DBParameterGroupNotFoundFault'
          description: DBParameterGroupNotFoundFault
        "483":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DBSecurityGroupNotFoundFault'
          description: DBSecurityGroupNotFoundFault
        "484":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InstanceQuotaExceededFault'
          description: InstanceQuotaExceededFault
        "485":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/StorageQuotaExceededFault'
          description: StorageQuotaExceededFault
        "486":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DBSubnetGroupNotFoundFault'
          description: DBSubnetGroupNotFoundFault
        "487":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DBSubnetGroupDoesNotCoverEnoughAZs'
          description: DBSubnetGroupDoesNotCoverEnoughAZs
        "488":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidDBClusterStateFault'
          description: InvalidDBClusterStateFault
        "489":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidSubnet'
          description: InvalidSubnet
        "490":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidVPCNetworkStateFault'
          description: InvalidVPCNetworkStateFault
        "491":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DBClusterNotFoundFault'
          description: DBClusterNotFoundFault
        "492":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/StorageTypeNotSupportedFault'
          description: StorageTypeNotSupportedFault
        "493":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/AuthorizationNotFoundFault'
          description: AuthorizationNotFoundFault
        "494":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/KMSKeyNotAccessibleFault'
          description: KMSKeyNotAccessibleFault
      x-aws-operation-name: CreateDBInstance
      x-content-type: text/xml
      x-accepts:
      - text/xml
  /#Action=CreateDBSubnetGroup:
    get:
      description: Creates a new subnet group. subnet groups must contain at least
        one subnet in at least two Availability Zones in the Amazon Web Services Region.
      operationId: GET_CreateDBSubnetGroup
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: "<p>The name for the subnet group. This value is stored as a\
          \ lowercase string.</p> <p>Constraints: Must contain no more than 255 letters,\
          \ numbers, periods, underscores, spaces, or hyphens. Must not be default.</p>\
          \ <p>Example: <code>mySubnetgroup</code> </p>"
        explode: true
        in: query
        name: DBSubnetGroupName
        required: true
        schema:
          type: string
        style: form
      - description: The description for the subnet group.
        explode: true
        in: query
        name: DBSubnetGroupDescription
        required: true
        schema:
          type: string
        style: form
      - description: The Amazon EC2 subnet IDs for the subnet group.
        explode: true
        in: query
        name: SubnetIds
        required: true
        schema:
          items:
            allOf:
            - $ref: '#/components/schemas/String'
            - xml:
                name: SubnetIdentifier
          type: array
        style: form
      - description: The tags to be assigned to the subnet group.
        explode: true
        in: query
        name: Tags
        required: false
        schema:
          items:
            $ref: '#/components/schemas/GET_AddTagsToResource_Tags_parameter_inner'
          type: array
        style: form
      - explode: true
        in: query
        name: Action
        required: true
        schema:
          enum:
          - CreateDBSubnetGroup
          type: string
        style: form
      - explode: true
        in: query
        name: Version
        required: true
        schema:
          enum:
          - 2014-10-31
          type: string
        style: form
      responses:
        "200":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/CreateDBSubnetGroupResult'
          description: Success
        "480":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DBSubnetGroupAlreadyExistsFault'
          description: DBSubnetGroupAlreadyExistsFault
        "481":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DBSubnetGroupQuotaExceededFault'
          description: DBSubnetGroupQuotaExceededFault
        "482":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DBSubnetQuotaExceededFault'
          description: DBSubnetQuotaExceededFault
        "483":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DBSubnetGroupDoesNotCoverEnoughAZs'
          description: DBSubnetGroupDoesNotCoverEnoughAZs
        "484":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidSubnet'
          description: InvalidSubnet
      x-aws-operation-name: CreateDBSubnetGroup
      x-accepts:
      - text/xml
    post:
      description: Creates a new subnet group. subnet groups must contain at least
        one subnet in at least two Availability Zones in the Amazon Web Services Region.
      operationId: POST_CreateDBSubnetGroup
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: true
        in: query
        name: Action
        required: true
        schema:
          enum:
          - CreateDBSubnetGroup
          type: string
        style: form
      - explode: true
        in: query
        name: Version
        required: true
        schema:
          enum:
          - 2014-10-31
          type: string
        style: form
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/CreateDBSubnetGroupMessage'
      responses:
        "200":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/CreateDBSubnetGroupResult'
          description: Success
        "480":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DBSubnetGroupAlreadyExistsFault'
          description: DBSubnetGroupAlreadyExistsFault
        "481":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DBSubnetGroupQuotaExceededFault'
          description: DBSubnetGroupQuotaExceededFault
        "482":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DBSubnetQuotaExceededFault'
          description: DBSubnetQuotaExceededFault
        "483":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DBSubnetGroupDoesNotCoverEnoughAZs'
          description: DBSubnetGroupDoesNotCoverEnoughAZs
        "484":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidSubnet'
          description: InvalidSubnet
      x-aws-operation-name: CreateDBSubnetGroup
      x-content-type: text/xml
      x-accepts:
      - text/xml
  /#Action=CreateEventSubscription:
    get:
      description: "<p>Creates an Amazon DocumentDB event notification subscription.\
        \ This action requires a topic Amazon Resource Name (ARN) created by using\
        \ the Amazon DocumentDB console, the Amazon SNS console, or the Amazon SNS\
        \ API. To obtain an ARN with Amazon SNS, you must create a topic in Amazon\
        \ SNS and subscribe to the topic. The ARN is displayed in the Amazon SNS console.</p>\
        \ <p>You can specify the type of source (<code>SourceType</code>) that you\
        \ want to be notified of. You can also provide a list of Amazon DocumentDB\
        \ sources (<code>SourceIds</code>) that trigger the events, and you can provide\
        \ a list of event categories (<code>EventCategories</code>) for events that\
        \ you want to be notified of. For example, you can specify <code>SourceType\
        \ = db-instance</code>, <code>SourceIds = mydbinstance1, mydbinstance2</code>\
        \ and <code>EventCategories = Availability, Backup</code>.</p> <p>If you specify\
        \ both the <code>SourceType</code> and <code>SourceIds</code> (such as <code>SourceType\
        \ = db-instance</code> and <code>SourceIdentifier = myDBInstance1</code>),\
        \ you are notified of all the <code>db-instance</code> events for the specified\
        \ source. If you specify a <code>SourceType</code> but do not specify a <code>SourceIdentifier</code>,\
        \ you receive notice of the events for that source type for all your Amazon\
        \ DocumentDB sources. If you do not specify either the <code>SourceType</code>\
        \ or the <code>SourceIdentifier</code>, you are notified of events generated\
        \ from all Amazon DocumentDB sources belonging to your customer account.</p>"
      operationId: GET_CreateEventSubscription
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: "<p>The name of the subscription.</p> <p>Constraints: The name\
          \ must be fewer than 255 characters.</p>"
        explode: true
        in: query
        name: SubscriptionName
        required: true
        schema:
          type: string
        style: form
      - description: The Amazon Resource Name (ARN) of the SNS topic created for event
          notification. Amazon SNS creates the ARN when you create a topic and subscribe
          to it.
        explode: true
        in: query
        name: SnsTopicArn
        required: true
        schema:
          type: string
        style: form
      - description: "<p>The type of source that is generating the events. For example,\
          \ if you want to be notified of events generated by an instance, you would\
          \ set this parameter to <code>db-instance</code>. If this value is not specified,\
          \ all events are returned.</p> <p>Valid values: <code>db-instance</code>,\
          \ <code>db-cluster</code>, <code>db-parameter-group</code>, <code>db-security-group</code>,\
          \ <code>db-cluster-snapshot</code> </p>"
        explode: true
        in: query
        name: SourceType
        required: false
        schema:
          type: string
        style: form
      - description: ' A list of event categories for a <code>SourceType</code> that
          you want to subscribe to. '
        explode: true
        in: query
        name: EventCategories
        required: false
        schema:
          items:
            allOf:
            - $ref: '#/components/schemas/String'
            - xml:
                name: EventCategory
          type: array
        style: form
      - description: "<p>The list of identifiers of the event sources for which events\
          \ are returned. If not specified, then all sources are included in the response.\
          \ An identifier must begin with a letter and must contain only ASCII letters,\
          \ digits, and hyphens; it can't end with a hyphen or contain two consecutive\
          \ hyphens.</p> <p>Constraints:</p> <ul> <li> <p>If <code>SourceIds</code>\
          \ are provided, <code>SourceType</code> must also be provided.</p> </li>\
          \ <li> <p>If the source type is an instance, a <code>DBInstanceIdentifier</code>\
          \ must be provided.</p> </li> <li> <p>If the source type is a security group,\
          \ a <code>DBSecurityGroupName</code> must be provided.</p> </li> <li> <p>If\
          \ the source type is a parameter group, a <code>DBParameterGroupName</code>\
          \ must be provided.</p> </li> <li> <p>If the source type is a snapshot,\
          \ a <code>DBSnapshotIdentifier</code> must be provided.</p> </li> </ul>"
        explode: true
        in: query
        name: SourceIds
        required: false
        schema:
          items:
            allOf:
            - $ref: '#/components/schemas/String'
            - xml:
                name: SourceId
          type: array
        style: form
      - description: " A Boolean value; set to <code>true</code> to activate the subscription,\
          \ set to <code>false</code> to create the subscription but not active it. "
        explode: true
        in: query
        name: Enabled
        required: false
        schema:
          type: boolean
        style: form
      - description: The tags to be assigned to the event subscription.
        explode: true
        in: query
        name: Tags
        required: false
        schema:
          items:
            $ref: '#/components/schemas/GET_AddTagsToResource_Tags_parameter_inner'
          type: array
        style: form
      - explode: true
        in: query
        name: Action
        required: true
        schema:
          enum:
          - CreateEventSubscription
          type: string
        style: form
      - explode: true
        in: query
        name: Version
        required: true
        schema:
          enum:
          - 2014-10-31
          type: string
        style: form
      responses:
        "200":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/CreateEventSubscriptionResult'
          description: Success
        "480":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/EventSubscriptionQuotaExceededFault'
          description: EventSubscriptionQuotaExceededFault
        "481":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/SubscriptionAlreadyExistFault'
          description: SubscriptionAlreadyExistFault
        "482":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/SNSInvalidTopicFault'
          description: SNSInvalidTopicFault
        "483":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/SNSNoAuthorizationFault'
          description: SNSNoAuthorizationFault
        "484":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/SNSTopicArnNotFoundFault'
          description: SNSTopicArnNotFoundFault
        "485":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/SubscriptionCategoryNotFoundFault'
          description: SubscriptionCategoryNotFoundFault
        "486":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/SourceNotFoundFault'
          description: SourceNotFoundFault
      x-aws-operation-name: CreateEventSubscription
      x-accepts:
      - text/xml
    post:
      description: "<p>Creates an Amazon DocumentDB event notification subscription.\
        \ This action requires a topic Amazon Resource Name (ARN) created by using\
        \ the Amazon DocumentDB console, the Amazon SNS console, or the Amazon SNS\
        \ API. To obtain an ARN with Amazon SNS, you must create a topic in Amazon\
        \ SNS and subscribe to the topic. The ARN is displayed in the Amazon SNS console.</p>\
        \ <p>You can specify the type of source (<code>SourceType</code>) that you\
        \ want to be notified of. You can also provide a list of Amazon DocumentDB\
        \ sources (<code>SourceIds</code>) that trigger the events, and you can provide\
        \ a list of event categories (<code>EventCategories</code>) for events that\
        \ you want to be notified of. For example, you can specify <code>SourceType\
        \ = db-instance</code>, <code>SourceIds = mydbinstance1, mydbinstance2</code>\
        \ and <code>EventCategories = Availability, Backup</code>.</p> <p>If you specify\
        \ both the <code>SourceType</code> and <code>SourceIds</code> (such as <code>SourceType\
        \ = db-instance</code> and <code>SourceIdentifier = myDBInstance1</code>),\
        \ you are notified of all the <code>db-instance</code> events for the specified\
        \ source. If you specify a <code>SourceType</code> but do not specify a <code>SourceIdentifier</code>,\
        \ you receive notice of the events for that source type for all your Amazon\
        \ DocumentDB sources. If you do not specify either the <code>SourceType</code>\
        \ or the <code>SourceIdentifier</code>, you are notified of events generated\
        \ from all Amazon DocumentDB sources belonging to your customer account.</p>"
      operationId: POST_CreateEventSubscription
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: true
        in: query
        name: Action
        required: true
        schema:
          enum:
          - CreateEventSubscription
          type: string
        style: form
      - explode: true
        in: query
        name: Version
        required: true
        schema:
          enum:
          - 2014-10-31
          type: string
        style: form
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/CreateEventSubscriptionMessage'
      responses:
        "200":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/CreateEventSubscriptionResult'
          description: Success
        "480":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/EventSubscriptionQuotaExceededFault'
          description: EventSubscriptionQuotaExceededFault
        "481":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/SubscriptionAlreadyExistFault'
          description: SubscriptionAlreadyExistFault
        "482":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/SNSInvalidTopicFault'
          description: SNSInvalidTopicFault
        "483":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/SNSNoAuthorizationFault'
          description: SNSNoAuthorizationFault
        "484":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/SNSTopicArnNotFoundFault'
          description: SNSTopicArnNotFoundFault
        "485":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/SubscriptionCategoryNotFoundFault'
          description: SubscriptionCategoryNotFoundFault
        "486":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/SourceNotFoundFault'
          description: SourceNotFoundFault
      x-aws-operation-name: CreateEventSubscription
      x-content-type: text/xml
      x-accepts:
      - text/xml
  /#Action=CreateGlobalCluster:
    get:
      description: "<p>Creates an Amazon DocumentDB global cluster that can span multiple\
        \ multiple Amazon Web Services Regions. The global cluster contains one primary\
        \ cluster with read-write capability, and up-to give read-only secondary clusters.\
        \ Global clusters uses storage-based fast replication across regions with\
        \ latencies less than one second, using dedicated infrastructure with no impact\
        \ to your workload’s performance.</p> <p/> <p>You can create a global cluster\
        \ that is initially empty, and then add a primary and a secondary to it. Or\
        \ you can specify an existing cluster during the create operation, and this\
        \ cluster becomes the primary of the global cluster. </p> <note> <p>This action\
        \ only applies to Amazon DocumentDB clusters.</p> </note>"
      operationId: GET_CreateGlobalCluster
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The cluster identifier of the new global cluster.
        explode: true
        in: query
        name: GlobalClusterIdentifier
        required: true
        schema:
          maxLength: 255
          minLength: 1
          pattern: "[A-Za-z][0-9A-Za-z-:._]*"
          type: string
        style: form
      - description: The Amazon Resource Name (ARN) to use as the primary cluster
          of the global cluster. This parameter is optional.
        explode: true
        in: query
        name: SourceDBClusterIdentifier
        required: false
        schema:
          type: string
        style: form
      - description: The name of the database engine to be used for this cluster.
        explode: true
        in: query
        name: Engine
        required: false
        schema:
          type: string
        style: form
      - description: The engine version of the global cluster.
        explode: true
        in: query
        name: EngineVersion
        required: false
        schema:
          type: string
        style: form
      - description: 'The deletion protection setting for the new global cluster.
          The global cluster can''t be deleted when deletion protection is enabled. '
        explode: true
        in: query
        name: DeletionProtection
        required: false
        schema:
          type: boolean
        style: form
      - description: "The name for your database of up to 64 alpha-numeric characters.\
          \ If you do not provide a name, Amazon DocumentDB will not create a database\
          \ in the global cluster you are creating."
        explode: true
        in: query
        name: DatabaseName
        required: false
        schema:
          type: string
        style: form
      - description: 'The storage encryption setting for the new global cluster. '
        explode: true
        in: query
        name: StorageEncrypted
        required: false
        schema:
          type: boolean
        style: form
      - explode: true
        in: query
        name: Action
        required: true
        schema:
          enum:
          - CreateGlobalCluster
          type: string
        style: form
      - explode: true
        in: query
        name: Version
        required: true
        schema:
          enum:
          - 2014-10-31
          type: string
        style: form
      responses:
        "200":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/CreateGlobalClusterResult'
          description: Success
        "480":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/GlobalClusterAlreadyExistsFault'
          description: GlobalClusterAlreadyExistsFault
        "481":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/GlobalClusterQuotaExceededFault'
          description: GlobalClusterQuotaExceededFault
        "482":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidDBClusterStateFault'
          description: InvalidDBClusterStateFault
        "483":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DBClusterNotFoundFault'
          description: DBClusterNotFoundFault
      x-aws-operation-name: CreateGlobalCluster
      x-accepts:
      - text/xml
    post:
      description: "<p>Creates an Amazon DocumentDB global cluster that can span multiple\
        \ multiple Amazon Web Services Regions. The global cluster contains one primary\
        \ cluster with read-write capability, and up-to give read-only secondary clusters.\
        \ Global clusters uses storage-based fast replication across regions with\
        \ latencies less than one second, using dedicated infrastructure with no impact\
        \ to your workload’s performance.</p> <p/> <p>You can create a global cluster\
        \ that is initially empty, and then add a primary and a secondary to it. Or\
        \ you can specify an existing cluster during the create operation, and this\
        \ cluster becomes the primary of the global cluster. </p> <note> <p>This action\
        \ only applies to Amazon DocumentDB clusters.</p> </note>"
      operationId: POST_CreateGlobalCluster
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: true
        in: query
        name: Action
        required: true
        schema:
          enum:
          - CreateGlobalCluster
          type: string
        style: form
      - explode: true
        in: query
        name: Version
        required: true
        schema:
          enum:
          - 2014-10-31
          type: string
        style: form
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/CreateGlobalClusterMessage'
      responses:
        "200":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/CreateGlobalClusterResult'
          description: Success
        "480":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/GlobalClusterAlreadyExistsFault'
          description: GlobalClusterAlreadyExistsFault
        "481":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/GlobalClusterQuotaExceededFault'
          description: GlobalClusterQuotaExceededFault
        "482":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidDBClusterStateFault'
          description: InvalidDBClusterStateFault
        "483":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DBClusterNotFoundFault'
          description: DBClusterNotFoundFault
      x-aws-operation-name: CreateGlobalCluster
      x-content-type: text/xml
      x-accepts:
      - text/xml
  /#Action=DeleteDBCluster:
    get:
      description: "<p>Deletes a previously provisioned cluster. When you delete a\
        \ cluster, all automated backups for that cluster are deleted and can't be\
        \ recovered. Manual DB cluster snapshots of the specified cluster are not\
        \ deleted.</p> <p/>"
      operationId: GET_DeleteDBCluster
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: <p>The cluster identifier for the cluster to be deleted. This
          parameter isn't case sensitive.</p> <p>Constraints:</p> <ul> <li> <p>Must
          match an existing <code>DBClusterIdentifier</code>.</p> </li> </ul>
        explode: true
        in: query
        name: DBClusterIdentifier
        required: true
        schema:
          type: string
        style: form
      - description: "<p> Determines whether a final cluster snapshot is created before\
          \ the cluster is deleted. If <code>true</code> is specified, no cluster\
          \ snapshot is created. If <code>false</code> is specified, a cluster snapshot\
          \ is created before the DB cluster is deleted. </p> <note> <p>If <code>SkipFinalSnapshot</code>\
          \ is <code>false</code>, you must specify a <code>FinalDBSnapshotIdentifier</code>\
          \ parameter.</p> </note> <p>Default: <code>false</code> </p>"
        explode: true
        in: query
        name: SkipFinalSnapshot
        required: false
        schema:
          type: boolean
        style: form
      - description: "<p> The cluster snapshot identifier of the new cluster snapshot\
          \ created when <code>SkipFinalSnapshot</code> is set to <code>false</code>.\
          \ </p> <note> <p> Specifying this parameter and also setting the <code>SkipFinalShapshot</code>\
          \ parameter to <code>true</code> results in an error. </p> </note> <p>Constraints:</p>\
          \ <ul> <li> <p>Must be from 1 to 255 letters, numbers, or hyphens.</p> </li>\
          \ <li> <p>The first character must be a letter.</p> </li> <li> <p>Cannot\
          \ end with a hyphen or contain two consecutive hyphens.</p> </li> </ul>"
        explode: true
        in: query
        name: FinalDBSnapshotIdentifier
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: Action
        required: true
        schema:
          enum:
          - DeleteDBCluster
          type: string
        style: form
      - explode: true
        in: query
        name: Version
        required: true
        schema:
          enum:
          - 2014-10-31
          type: string
        style: form
      responses:
        "200":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DeleteDBClusterResult'
          description: Success
        "480":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DBClusterNotFoundFault'
          description: DBClusterNotFoundFault
        "481":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidDBClusterStateFault'
          description: InvalidDBClusterStateFault
        "482":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DBClusterSnapshotAlreadyExistsFault'
          description: DBClusterSnapshotAlreadyExistsFault
        "483":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/SnapshotQuotaExceededFault'
          description: SnapshotQuotaExceededFault
        "484":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidDBClusterSnapshotStateFault'
          description: InvalidDBClusterSnapshotStateFault
      x-aws-operation-name: DeleteDBCluster
      x-accepts:
      - text/xml
    post:
      description: "<p>Deletes a previously provisioned cluster. When you delete a\
        \ cluster, all automated backups for that cluster are deleted and can't be\
        \ recovered. Manual DB cluster snapshots of the specified cluster are not\
        \ deleted.</p> <p/>"
      operationId: POST_DeleteDBCluster
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: true
        in: query
        name: Action
        required: true
        schema:
          enum:
          - DeleteDBCluster
          type: string
        style: form
      - explode: true
        in: query
        name: Version
        required: true
        schema:
          enum:
          - 2014-10-31
          type: string
        style: form
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/DeleteDBClusterMessage'
      responses:
        "200":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DeleteDBClusterResult'
          description: Success
        "480":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DBClusterNotFoundFault'
          description: DBClusterNotFoundFault
        "481":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidDBClusterStateFault'
          description: InvalidDBClusterStateFault
        "482":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DBClusterSnapshotAlreadyExistsFault'
          description: DBClusterSnapshotAlreadyExistsFault
        "483":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/SnapshotQuotaExceededFault'
          description: SnapshotQuotaExceededFault
        "484":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidDBClusterSnapshotStateFault'
          description: InvalidDBClusterSnapshotStateFault
      x-aws-operation-name: DeleteDBCluster
      x-content-type: text/xml
      x-accepts:
      - text/xml
  /#Action=DeleteDBClusterParameterGroup:
    get:
      description: Deletes a specified cluster parameter group. The cluster parameter
        group to be deleted can't be associated with any clusters.
      operationId: GET_DeleteDBClusterParameterGroup
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: <p>The name of the cluster parameter group.</p> <p>Constraints:</p>
          <ul> <li> <p>Must be the name of an existing cluster parameter group.</p>
          </li> <li> <p>You can't delete a default cluster parameter group.</p> </li>
          <li> <p>Cannot be associated with any clusters.</p> </li> </ul>
        explode: true
        in: query
        name: DBClusterParameterGroupName
        required: true
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: Action
        required: true
        schema:
          enum:
          - DeleteDBClusterParameterGroup
          type: string
        style: form
      - explode: true
        in: query
        name: Version
        required: true
        schema:
          enum:
          - 2014-10-31
          type: string
        style: form
      responses:
        "200":
          description: Success
        "480":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidDBParameterGroupStateFault'
          description: InvalidDBParameterGroupStateFault
        "481":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DBParameterGroupNotFoundFault'
          description: DBParameterGroupNotFoundFault
      x-aws-operation-name: DeleteDBClusterParameterGroup
      x-accepts:
      - text/xml
    post:
      description: Deletes a specified cluster parameter group. The cluster parameter
        group to be deleted can't be associated with any clusters.
      operationId: POST_DeleteDBClusterParameterGroup
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: true
        in: query
        name: Action
        required: true
        schema:
          enum:
          - DeleteDBClusterParameterGroup
          type: string
        style: form
      - explode: true
        in: query
        name: Version
        required: true
        schema:
          enum:
          - 2014-10-31
          type: string
        style: form
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/DeleteDBClusterParameterGroupMessage'
      responses:
        "200":
          description: Success
        "480":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidDBParameterGroupStateFault'
          description: InvalidDBParameterGroupStateFault
        "481":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DBParameterGroupNotFoundFault'
          description: DBParameterGroupNotFoundFault
      x-aws-operation-name: DeleteDBClusterParameterGroup
      x-content-type: text/xml
      x-accepts:
      - text/xml
  /#Action=DeleteDBClusterSnapshot:
    get:
      description: "<p>Deletes a cluster snapshot. If the snapshot is being copied,\
        \ the copy operation is terminated.</p> <note> <p>The cluster snapshot must\
        \ be in the <code>available</code> state to be deleted.</p> </note>"
      operationId: GET_DeleteDBClusterSnapshot
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: "<p>The identifier of the cluster snapshot to delete.</p> <p>Constraints:\
          \ Must be the name of an existing cluster snapshot in the <code>available</code>\
          \ state.</p>"
        explode: true
        in: query
        name: DBClusterSnapshotIdentifier
        required: true
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: Action
        required: true
        schema:
          enum:
          - DeleteDBClusterSnapshot
          type: string
        style: form
      - explode: true
        in: query
        name: Version
        required: true
        schema:
          enum:
          - 2014-10-31
          type: string
        style: form
      responses:
        "200":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DeleteDBClusterSnapshotResult'
          description: Success
        "480":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidDBClusterSnapshotStateFault'
          description: InvalidDBClusterSnapshotStateFault
        "481":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DBClusterSnapshotNotFoundFault'
          description: DBClusterSnapshotNotFoundFault
      x-aws-operation-name: DeleteDBClusterSnapshot
      x-accepts:
      - text/xml
    post:
      description: "<p>Deletes a cluster snapshot. If the snapshot is being copied,\
        \ the copy operation is terminated.</p> <note> <p>The cluster snapshot must\
        \ be in the <code>available</code> state to be deleted.</p> </note>"
      operationId: POST_DeleteDBClusterSnapshot
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: true
        in: query
        name: Action
        required: true
        schema:
          enum:
          - DeleteDBClusterSnapshot
          type: string
        style: form
      - explode: true
        in: query
        name: Version
        required: true
        schema:
          enum:
          - 2014-10-31
          type: string
        style: form
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/DeleteDBClusterSnapshotMessage'
      responses:
        "200":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DeleteDBClusterSnapshotResult'
          description: Success
        "480":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidDBClusterSnapshotStateFault'
          description: InvalidDBClusterSnapshotStateFault
        "481":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DBClusterSnapshotNotFoundFault'
          description: DBClusterSnapshotNotFoundFault
      x-aws-operation-name: DeleteDBClusterSnapshot
      x-content-type: text/xml
      x-accepts:
      - text/xml
  /#Action=DeleteDBInstance:
    get:
      description: Deletes a previously provisioned instance.
      operationId: GET_DeleteDBInstance
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: <p>The instance identifier for the instance to be deleted. This
          parameter isn't case sensitive.</p> <p>Constraints:</p> <ul> <li> <p>Must
          match the name of an existing instance.</p> </li> </ul>
        explode: true
        in: query
        name: DBInstanceIdentifier
        required: true
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: Action
        required: true
        schema:
          enum:
          - DeleteDBInstance
          type: string
        style: form
      - explode: true
        in: query
        name: Version
        required: true
        schema:
          enum:
          - 2014-10-31
          type: string
        style: form
      responses:
        "200":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DeleteDBInstanceResult'
          description: Success
        "480":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DBInstanceNotFoundFault'
          description: DBInstanceNotFoundFault
        "481":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidDBInstanceStateFault'
          description: InvalidDBInstanceStateFault
        "482":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DBSnapshotAlreadyExistsFault'
          description: DBSnapshotAlreadyExistsFault
        "483":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/SnapshotQuotaExceededFault'
          description: SnapshotQuotaExceededFault
        "484":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidDBClusterStateFault'
          description: InvalidDBClusterStateFault
      x-aws-operation-name: DeleteDBInstance
      x-accepts:
      - text/xml
    post:
      description: Deletes a previously provisioned instance.
      operationId: POST_DeleteDBInstance
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: true
        in: query
        name: Action
        required: true
        schema:
          enum:
          - DeleteDBInstance
          type: string
        style: form
      - explode: true
        in: query
        name: Version
        required: true
        schema:
          enum:
          - 2014-10-31
          type: string
        style: form
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/DeleteDBInstanceMessage'
      responses:
        "200":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DeleteDBInstanceResult'
          description: Success
        "480":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DBInstanceNotFoundFault'
          description: DBInstanceNotFoundFault
        "481":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidDBInstanceStateFault'
          description: InvalidDBInstanceStateFault
        "482":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DBSnapshotAlreadyExistsFault'
          description: DBSnapshotAlreadyExistsFault
        "483":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/SnapshotQuotaExceededFault'
          description: SnapshotQuotaExceededFault
        "484":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidDBClusterStateFault'
          description: InvalidDBClusterStateFault
      x-aws-operation-name: DeleteDBInstance
      x-content-type: text/xml
      x-accepts:
      - text/xml
  /#Action=DeleteDBSubnetGroup:
    get:
      description: <p>Deletes a subnet group.</p> <note> <p>The specified database
        subnet group must not be associated with any DB instances.</p> </note>
      operationId: GET_DeleteDBSubnetGroup
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: "<p>The name of the database subnet group to delete.</p> <note>\
          \ <p>You can't delete the default subnet group.</p> </note> <p>Constraints:</p>\
          \ <p>Must match the name of an existing <code>DBSubnetGroup</code>. Must\
          \ not be default.</p> <p>Example: <code>mySubnetgroup</code> </p>"
        explode: true
        in: query
        name: DBSubnetGroupName
        required: true
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: Action
        required: true
        schema:
          enum:
          - DeleteDBSubnetGroup
          type: string
        style: form
      - explode: true
        in: query
        name: Version
        required: true
        schema:
          enum:
          - 2014-10-31
          type: string
        style: form
      responses:
        "200":
          description: Success
        "480":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidDBSubnetGroupStateFault'
          description: InvalidDBSubnetGroupStateFault
        "481":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidDBSubnetStateFault'
          description: InvalidDBSubnetStateFault
        "482":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DBSubnetGroupNotFoundFault'
          description: DBSubnetGroupNotFoundFault
      x-aws-operation-name: DeleteDBSubnetGroup
      x-accepts:
      - text/xml
    post:
      description: <p>Deletes a subnet group.</p> <note> <p>The specified database
        subnet group must not be associated with any DB instances.</p> </note>
      operationId: POST_DeleteDBSubnetGroup
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: true
        in: query
        name: Action
        required: true
        schema:
          enum:
          - DeleteDBSubnetGroup
          type: string
        style: form
      - explode: true
        in: query
        name: Version
        required: true
        schema:
          enum:
          - 2014-10-31
          type: string
        style: form
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/DeleteDBSubnetGroupMessage'
      responses:
        "200":
          description: Success
        "480":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidDBSubnetGroupStateFault'
          description: InvalidDBSubnetGroupStateFault
        "481":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidDBSubnetStateFault'
          description: InvalidDBSubnetStateFault
        "482":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DBSubnetGroupNotFoundFault'
          description: DBSubnetGroupNotFoundFault
      x-aws-operation-name: DeleteDBSubnetGroup
      x-content-type: text/xml
      x-accepts:
      - text/xml
  /#Action=DeleteEventSubscription:
    get:
      description: Deletes an Amazon DocumentDB event notification subscription.
      operationId: GET_DeleteEventSubscription
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The name of the Amazon DocumentDB event notification subscription
          that you want to delete.
        explode: true
        in: query
        name: SubscriptionName
        required: true
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: Action
        required: true
        schema:
          enum:
          - DeleteEventSubscription
          type: string
        style: form
      - explode: true
        in: query
        name: Version
        required: true
        schema:
          enum:
          - 2014-10-31
          type: string
        style: form
      responses:
        "200":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DeleteEventSubscriptionResult'
          description: Success
        "480":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/SubscriptionNotFoundFault'
          description: SubscriptionNotFoundFault
        "481":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidEventSubscriptionStateFault'
          description: InvalidEventSubscriptionStateFault
      x-aws-operation-name: DeleteEventSubscription
      x-accepts:
      - text/xml
    post:
      description: Deletes an Amazon DocumentDB event notification subscription.
      operationId: POST_DeleteEventSubscription
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: true
        in: query
        name: Action
        required: true
        schema:
          enum:
          - DeleteEventSubscription
          type: string
        style: form
      - explode: true
        in: query
        name: Version
        required: true
        schema:
          enum:
          - 2014-10-31
          type: string
        style: form
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/DeleteEventSubscriptionMessage'
      responses:
        "200":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DeleteEventSubscriptionResult'
          description: Success
        "480":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/SubscriptionNotFoundFault'
          description: SubscriptionNotFoundFault
        "481":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidEventSubscriptionStateFault'
          description: InvalidEventSubscriptionStateFault
      x-aws-operation-name: DeleteEventSubscription
      x-content-type: text/xml
      x-accepts:
      - text/xml
  /#Action=DeleteGlobalCluster:
    get:
      description: <p>Deletes a global cluster. The primary and secondary clusters
        must already be detached or deleted before attempting to delete a global cluster.</p>
        <note> <p>This action only applies to Amazon DocumentDB clusters.</p> </note>
      operationId: GET_DeleteGlobalCluster
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The cluster identifier of the global cluster being deleted.
        explode: true
        in: query
        name: GlobalClusterIdentifier
        required: true
        schema:
          maxLength: 255
          minLength: 1
          pattern: "[A-Za-z][0-9A-Za-z-:._]*"
          type: string
        style: form
      - explode: true
        in: query
        name: Action
        required: true
        schema:
          enum:
          - DeleteGlobalCluster
          type: string
        style: form
      - explode: true
        in: query
        name: Version
        required: true
        schema:
          enum:
          - 2014-10-31
          type: string
        style: form
      responses:
        "200":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DeleteGlobalClusterResult'
          description: Success
        "480":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/GlobalClusterNotFoundFault'
          description: GlobalClusterNotFoundFault
        "481":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidGlobalClusterStateFault'
          description: InvalidGlobalClusterStateFault
      x-aws-operation-name: DeleteGlobalCluster
      x-accepts:
      - text/xml
    post:
      description: <p>Deletes a global cluster. The primary and secondary clusters
        must already be detached or deleted before attempting to delete a global cluster.</p>
        <note> <p>This action only applies to Amazon DocumentDB clusters.</p> </note>
      operationId: POST_DeleteGlobalCluster
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: true
        in: query
        name: Action
        required: true
        schema:
          enum:
          - DeleteGlobalCluster
          type: string
        style: form
      - explode: true
        in: query
        name: Version
        required: true
        schema:
          enum:
          - 2014-10-31
          type: string
        style: form
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/DeleteGlobalClusterMessage'
      responses:
        "200":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DeleteGlobalClusterResult'
          description: Success
        "480":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/GlobalClusterNotFoundFault'
          description: GlobalClusterNotFoundFault
        "481":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidGlobalClusterStateFault'
          description: InvalidGlobalClusterStateFault
      x-aws-operation-name: DeleteGlobalCluster
      x-content-type: text/xml
      x-accepts:
      - text/xml
  /#Action=DescribeCertificates:
    get:
      description: Returns a list of certificate authority (CA) certificates provided
        by Amazon DocumentDB for this Amazon Web Services account.
      operationId: GET_DescribeCertificates
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: "<p>The user-supplied certificate identifier. If this parameter\
          \ is specified, information for only the specified certificate is returned.\
          \ If this parameter is omitted, a list of up to <code>MaxRecords</code>\
          \ certificates is returned. This parameter is not case sensitive.</p> <p>Constraints</p>\
          \ <ul> <li> <p>Must match an existing <code>CertificateIdentifier</code>.</p>\
          \ </li> </ul>"
        explode: true
        in: query
        name: CertificateIdentifier
        required: false
        schema:
          type: string
        style: form
      - description: This parameter is not currently supported.
        explode: true
        in: query
        name: Filters
        required: false
        schema:
          items:
            $ref: '#/components/schemas/GET_DescribeCertificates_Filters_parameter_inner'
          type: array
        style: form
      - description: "<p>The maximum number of records to include in the response.\
          \ If more records exist than the specified <code>MaxRecords</code> value,\
          \ a pagination token called a marker is included in the response so that\
          \ the remaining results can be retrieved.</p> <p>Default: 100</p> <p>Constraints:</p>\
          \ <ul> <li> <p>Minimum: 20</p> </li> <li> <p>Maximum: 100</p> </li> </ul>"
        explode: true
        in: query
        name: MaxRecords
        required: false
        schema:
          type: integer
        style: form
      - description: "An optional pagination token provided by a previous <code>DescribeCertificates</code>\
          \ request. If this parameter is specified, the response includes only records\
          \ beyond the marker, up to the value specified by <code>MaxRecords</code>."
        explode: true
        in: query
        name: Marker
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: Action
        required: true
        schema:
          enum:
          - DescribeCertificates
          type: string
        style: form
      - explode: true
        in: query
        name: Version
        required: true
        schema:
          enum:
          - 2014-10-31
          type: string
        style: form
      responses:
        "200":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/CertificateMessage'
          description: Success
        "480":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/CertificateNotFoundFault'
          description: CertificateNotFoundFault
      x-aws-operation-name: DescribeCertificates
      x-accepts:
      - text/xml
    post:
      description: Returns a list of certificate authority (CA) certificates provided
        by Amazon DocumentDB for this Amazon Web Services account.
      operationId: POST_DescribeCertificates
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: Pagination limit
        explode: true
        in: query
        name: MaxRecords
        required: false
        schema:
          type: string
        style: form
      - description: Pagination token
        explode: true
        in: query
        name: Marker
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: Action
        required: true
        schema:
          enum:
          - DescribeCertificates
          type: string
        style: form
      - explode: true
        in: query
        name: Version
        required: true
        schema:
          enum:
          - 2014-10-31
          type: string
        style: form
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/DescribeCertificatesMessage'
      responses:
        "200":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/CertificateMessage'
          description: Success
        "480":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/CertificateNotFoundFault'
          description: CertificateNotFoundFault
      x-aws-operation-name: DescribeCertificates
      x-content-type: text/xml
      x-accepts:
      - text/xml
  /#Action=DescribeDBClusterParameterGroups:
    get:
      description: "Returns a list of <code>DBClusterParameterGroup</code> descriptions.\
        \ If a <code>DBClusterParameterGroupName</code> parameter is specified, the\
        \ list contains only the description of the specified cluster parameter group. "
      operationId: GET_DescribeDBClusterParameterGroups
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: "<p>The name of a specific cluster parameter group to return\
          \ details for.</p> <p>Constraints:</p> <ul> <li> <p>If provided, must match\
          \ the name of an existing <code>DBClusterParameterGroup</code>.</p> </li>\
          \ </ul>"
        explode: true
        in: query
        name: DBClusterParameterGroupName
        required: false
        schema:
          type: string
        style: form
      - description: This parameter is not currently supported.
        explode: true
        in: query
        name: Filters
        required: false
        schema:
          items:
            $ref: '#/components/schemas/GET_DescribeCertificates_Filters_parameter_inner'
          type: array
        style: form
      - description: "<p> The maximum number of records to include in the response.\
          \ If more records exist than the specified <code>MaxRecords</code> value,\
          \ a pagination token (marker) is included in the response so that the remaining\
          \ results can be retrieved.</p> <p>Default: 100</p> <p>Constraints: Minimum\
          \ 20, maximum 100.</p>"
        explode: true
        in: query
        name: MaxRecords
        required: false
        schema:
          type: integer
        style: form
      - description: "An optional pagination token provided by a previous request.\
          \ If this parameter is specified, the response includes only records beyond\
          \ the marker, up to the value specified by <code>MaxRecords</code>."
        explode: true
        in: query
        name: Marker
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: Action
        required: true
        schema:
          enum:
          - DescribeDBClusterParameterGroups
          type: string
        style: form
      - explode: true
        in: query
        name: Version
        required: true
        schema:
          enum:
          - 2014-10-31
          type: string
        style: form
      responses:
        "200":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DBClusterParameterGroupsMessage'
          description: Success
        "480":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DBParameterGroupNotFoundFault'
          description: DBParameterGroupNotFoundFault
      x-aws-operation-name: DescribeDBClusterParameterGroups
      x-accepts:
      - text/xml
    post:
      description: "Returns a list of <code>DBClusterParameterGroup</code> descriptions.\
        \ If a <code>DBClusterParameterGroupName</code> parameter is specified, the\
        \ list contains only the description of the specified cluster parameter group. "
      operationId: POST_DescribeDBClusterParameterGroups
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: Pagination limit
        explode: true
        in: query
        name: MaxRecords
        required: false
        schema:
          type: string
        style: form
      - description: Pagination token
        explode: true
        in: query
        name: Marker
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: Action
        required: true
        schema:
          enum:
          - DescribeDBClusterParameterGroups
          type: string
        style: form
      - explode: true
        in: query
        name: Version
        required: true
        schema:
          enum:
          - 2014-10-31
          type: string
        style: form
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/DescribeDBClusterParameterGroupsMessage'
      responses:
        "200":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DBClusterParameterGroupsMessage'
          description: Success
        "480":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DBParameterGroupNotFoundFault'
          description: DBParameterGroupNotFoundFault
      x-aws-operation-name: DescribeDBClusterParameterGroups
      x-content-type: text/xml
      x-accepts:
      - text/xml
  /#Action=DescribeDBClusterParameters:
    get:
      description: Returns the detailed parameter list for a particular cluster parameter
        group.
      operationId: GET_DescribeDBClusterParameters
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: "<p>The name of a specific cluster parameter group to return\
          \ parameter details for.</p> <p>Constraints:</p> <ul> <li> <p>If provided,\
          \ must match the name of an existing <code>DBClusterParameterGroup</code>.</p>\
          \ </li> </ul>"
        explode: true
        in: query
        name: DBClusterParameterGroupName
        required: true
        schema:
          type: string
        style: form
      - description: " A value that indicates to return only parameters for a specific\
          \ source. Parameter sources can be <code>engine</code>, <code>service</code>,\
          \ or <code>customer</code>. "
        explode: true
        in: query
        name: Source
        required: false
        schema:
          type: string
        style: form
      - description: This parameter is not currently supported.
        explode: true
        in: query
        name: Filters
        required: false
        schema:
          items:
            $ref: '#/components/schemas/GET_DescribeCertificates_Filters_parameter_inner'
          type: array
        style: form
      - description: "<p> The maximum number of records to include in the response.\
          \ If more records exist than the specified <code>MaxRecords</code> value,\
          \ a pagination token (marker) is included in the response so that the remaining\
          \ results can be retrieved.</p> <p>Default: 100</p> <p>Constraints: Minimum\
          \ 20, maximum 100.</p>"
        explode: true
        in: query
        name: MaxRecords
        required: false
        schema:
          type: integer
        style: form
      - description: "An optional pagination token provided by a previous request.\
          \ If this parameter is specified, the response includes only records beyond\
          \ the marker, up to the value specified by <code>MaxRecords</code>."
        explode: true
        in: query
        name: Marker
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: Action
        required: true
        schema:
          enum:
          - DescribeDBClusterParameters
          type: string
        style: form
      - explode: true
        in: query
        name: Version
        required: true
        schema:
          enum:
          - 2014-10-31
          type: string
        style: form
      responses:
        "200":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DBClusterParameterGroupDetails'
          description: Success
        "480":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DBParameterGroupNotFoundFault'
          description: DBParameterGroupNotFoundFault
      x-aws-operation-name: DescribeDBClusterParameters
      x-accepts:
      - text/xml
    post:
      description: Returns the detailed parameter list for a particular cluster parameter
        group.
      operationId: POST_DescribeDBClusterParameters
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: Pagination limit
        explode: true
        in: query
        name: MaxRecords
        required: false
        schema:
          type: string
        style: form
      - description: Pagination token
        explode: true
        in: query
        name: Marker
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: Action
        required: true
        schema:
          enum:
          - DescribeDBClusterParameters
          type: string
        style: form
      - explode: true
        in: query
        name: Version
        required: true
        schema:
          enum:
          - 2014-10-31
          type: string
        style: form
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/DescribeDBClusterParametersMessage'
      responses:
        "200":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DBClusterParameterGroupDetails'
          description: Success
        "480":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DBParameterGroupNotFoundFault'
          description: DBParameterGroupNotFoundFault
      x-aws-operation-name: DescribeDBClusterParameters
      x-content-type: text/xml
      x-accepts:
      - text/xml
  /#Action=DescribeDBClusterSnapshotAttributes:
    get:
      description: "<p>Returns a list of cluster snapshot attribute names and values\
        \ for a manual DB cluster snapshot.</p> <p>When you share snapshots with other\
        \ Amazon Web Services accounts, <code>DescribeDBClusterSnapshotAttributes</code>\
        \ returns the <code>restore</code> attribute and a list of IDs for the Amazon\
        \ Web Services accounts that are authorized to copy or restore the manual\
        \ cluster snapshot. If <code>all</code> is included in the list of values\
        \ for the <code>restore</code> attribute, then the manual cluster snapshot\
        \ is public and can be copied or restored by all Amazon Web Services accounts.</p>"
      operationId: GET_DescribeDBClusterSnapshotAttributes
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The identifier for the cluster snapshot to describe the attributes
          for.
        explode: true
        in: query
        name: DBClusterSnapshotIdentifier
        required: true
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: Action
        required: true
        schema:
          enum:
          - DescribeDBClusterSnapshotAttributes
          type: string
        style: form
      - explode: true
        in: query
        name: Version
        required: true
        schema:
          enum:
          - 2014-10-31
          type: string
        style: form
      responses:
        "200":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DescribeDBClusterSnapshotAttributesResult'
          description: Success
        "480":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DBClusterSnapshotNotFoundFault'
          description: DBClusterSnapshotNotFoundFault
      x-aws-operation-name: DescribeDBClusterSnapshotAttributes
      x-accepts:
      - text/xml
    post:
      description: "<p>Returns a list of cluster snapshot attribute names and values\
        \ for a manual DB cluster snapshot.</p> <p>When you share snapshots with other\
        \ Amazon Web Services accounts, <code>DescribeDBClusterSnapshotAttributes</code>\
        \ returns the <code>restore</code> attribute and a list of IDs for the Amazon\
        \ Web Services accounts that are authorized to copy or restore the manual\
        \ cluster snapshot. If <code>all</code> is included in the list of values\
        \ for the <code>restore</code> attribute, then the manual cluster snapshot\
        \ is public and can be copied or restored by all Amazon Web Services accounts.</p>"
      operationId: POST_DescribeDBClusterSnapshotAttributes
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: true
        in: query
        name: Action
        required: true
        schema:
          enum:
          - DescribeDBClusterSnapshotAttributes
          type: string
        style: form
      - explode: true
        in: query
        name: Version
        required: true
        schema:
          enum:
          - 2014-10-31
          type: string
        style: form
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/DescribeDBClusterSnapshotAttributesMessage'
      responses:
        "200":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DescribeDBClusterSnapshotAttributesResult'
          description: Success
        "480":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DBClusterSnapshotNotFoundFault'
          description: DBClusterSnapshotNotFoundFault
      x-aws-operation-name: DescribeDBClusterSnapshotAttributes
      x-content-type: text/xml
      x-accepts:
      - text/xml
  /#Action=DescribeDBClusterSnapshots:
    get:
      description: Returns information about cluster snapshots. This API operation
        supports pagination.
      operationId: GET_DescribeDBClusterSnapshots
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: "<p>The ID of the cluster to retrieve the list of cluster snapshots\
          \ for. This parameter can't be used with the <code>DBClusterSnapshotIdentifier</code>\
          \ parameter. This parameter is not case sensitive. </p> <p>Constraints:</p>\
          \ <ul> <li> <p>If provided, must match the identifier of an existing <code>DBCluster</code>.</p>\
          \ </li> </ul>"
        explode: true
        in: query
        name: DBClusterIdentifier
        required: false
        schema:
          type: string
        style: form
      - description: "<p>A specific cluster snapshot identifier to describe. This\
          \ parameter can't be used with the <code>DBClusterIdentifier</code> parameter.\
          \ This value is stored as a lowercase string. </p> <p>Constraints:</p> <ul>\
          \ <li> <p>If provided, must match the identifier of an existing <code>DBClusterSnapshot</code>.</p>\
          \ </li> <li> <p>If this identifier is for an automated snapshot, the <code>SnapshotType</code>\
          \ parameter must also be specified.</p> </li> </ul>"
        explode: true
        in: query
        name: DBClusterSnapshotIdentifier
        required: false
        schema:
          type: string
        style: form
      - description: "<p>The type of cluster snapshots to be returned. You can specify\
          \ one of the following values:</p> <ul> <li> <p> <code>automated</code>\
          \ - Return all cluster snapshots that Amazon DocumentDB has automatically\
          \ created for your Amazon Web Services account.</p> </li> <li> <p> <code>manual</code>\
          \ - Return all cluster snapshots that you have manually created for your\
          \ Amazon Web Services account.</p> </li> <li> <p> <code>shared</code> -\
          \ Return all manual cluster snapshots that have been shared to your Amazon\
          \ Web Services account.</p> </li> <li> <p> <code>public</code> - Return\
          \ all cluster snapshots that have been marked as public.</p> </li> </ul>\
          \ <p>If you don't specify a <code>SnapshotType</code> value, then both automated\
          \ and manual cluster snapshots are returned. You can include shared cluster\
          \ snapshots with these results by setting the <code>IncludeShared</code>\
          \ parameter to <code>true</code>. You can include public cluster snapshots\
          \ with these results by setting the<code>IncludePublic</code> parameter\
          \ to <code>true</code>.</p> <p>The <code>IncludeShared</code> and <code>IncludePublic</code>\
          \ parameters don't apply for <code>SnapshotType</code> values of <code>manual</code>\
          \ or <code>automated</code>. The <code>IncludePublic</code> parameter doesn't\
          \ apply when <code>SnapshotType</code> is set to <code>shared</code>. The\
          \ <code>IncludeShared</code> parameter doesn't apply when <code>SnapshotType</code>\
          \ is set to <code>public</code>.</p>"
        explode: true
        in: query
        name: SnapshotType
        required: false
        schema:
          type: string
        style: form
      - description: This parameter is not currently supported.
        explode: true
        in: query
        name: Filters
        required: false
        schema:
          items:
            $ref: '#/components/schemas/GET_DescribeCertificates_Filters_parameter_inner'
          type: array
        style: form
      - description: "<p> The maximum number of records to include in the response.\
          \ If more records exist than the specified <code>MaxRecords</code> value,\
          \ a pagination token (marker) is included in the response so that the remaining\
          \ results can be retrieved.</p> <p>Default: 100</p> <p>Constraints: Minimum\
          \ 20, maximum 100.</p>"
        explode: true
        in: query
        name: MaxRecords
        required: false
        schema:
          type: integer
        style: form
      - description: "An optional pagination token provided by a previous request.\
          \ If this parameter is specified, the response includes only records beyond\
          \ the marker, up to the value specified by <code>MaxRecords</code>."
        explode: true
        in: query
        name: Marker
        required: false
        schema:
          type: string
        style: form
      - description: "Set to <code>true</code> to include shared manual cluster snapshots\
          \ from other Amazon Web Services accounts that this Amazon Web Services\
          \ account has been given permission to copy or restore, and otherwise <code>false</code>.\
          \ The default is <code>false</code>."
        explode: true
        in: query
        name: IncludeShared
        required: false
        schema:
          type: boolean
        style: form
      - description: "Set to <code>true</code> to include manual cluster snapshots\
          \ that are public and can be copied or restored by any Amazon Web Services\
          \ account, and otherwise <code>false</code>. The default is <code>false</code>."
        explode: true
        in: query
        name: IncludePublic
        required: false
        schema:
          type: boolean
        style: form
      - explode: true
        in: query
        name: Action
        required: true
        schema:
          enum:
          - DescribeDBClusterSnapshots
          type: string
        style: form
      - explode: true
        in: query
        name: Version
        required: true
        schema:
          enum:
          - 2014-10-31
          type: string
        style: form
      responses:
        "200":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DBClusterSnapshotMessage'
          description: Success
        "480":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DBClusterSnapshotNotFoundFault'
          description: DBClusterSnapshotNotFoundFault
      x-aws-operation-name: DescribeDBClusterSnapshots
      x-accepts:
      - text/xml
    post:
      description: Returns information about cluster snapshots. This API operation
        supports pagination.
      operationId: POST_DescribeDBClusterSnapshots
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: Pagination limit
        explode: true
        in: query
        name: MaxRecords
        required: false
        schema:
          type: string
        style: form
      - description: Pagination token
        explode: true
        in: query
        name: Marker
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: Action
        required: true
        schema:
          enum:
          - DescribeDBClusterSnapshots
          type: string
        style: form
      - explode: true
        in: query
        name: Version
        required: true
        schema:
          enum:
          - 2014-10-31
          type: string
        style: form
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/DescribeDBClusterSnapshotsMessage'
      responses:
        "200":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DBClusterSnapshotMessage'
          description: Success
        "480":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DBClusterSnapshotNotFoundFault'
          description: DBClusterSnapshotNotFoundFault
      x-aws-operation-name: DescribeDBClusterSnapshots
      x-content-type: text/xml
      x-accepts:
      - text/xml
  /#Action=DescribeDBClusters:
    get:
      description: "Returns information about provisioned Amazon DocumentDB clusters.\
        \ This API operation supports pagination. For certain management features\
        \ such as cluster and instance lifecycle management, Amazon DocumentDB leverages\
        \ operational technology that is shared with Amazon RDS and Amazon Neptune.\
        \ Use the <code>filterName=engine,Values=docdb</code> filter parameter to\
        \ return only Amazon DocumentDB clusters."
      operationId: GET_DescribeDBClusters
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: "<p>The user-provided cluster identifier. If this parameter is\
          \ specified, information from only the specific cluster is returned. This\
          \ parameter isn't case sensitive.</p> <p>Constraints:</p> <ul> <li> <p>If\
          \ provided, must match an existing <code>DBClusterIdentifier</code>.</p>\
          \ </li> </ul>"
        explode: true
        in: query
        name: DBClusterIdentifier
        required: false
        schema:
          type: string
        style: form
      - description: <p>A filter that specifies one or more clusters to describe.</p>
          <p>Supported filters:</p> <ul> <li> <p> <code>db-cluster-id</code> - Accepts
          cluster identifiers and cluster Amazon Resource Names (ARNs). The results
          list only includes information about the clusters identified by these ARNs.</p>
          </li> </ul>
        explode: true
        in: query
        name: Filters
        required: false
        schema:
          items:
            $ref: '#/components/schemas/GET_DescribeCertificates_Filters_parameter_inner'
          type: array
        style: form
      - description: "<p> The maximum number of records to include in the response.\
          \ If more records exist than the specified <code>MaxRecords</code> value,\
          \ a pagination token (marker) is included in the response so that the remaining\
          \ results can be retrieved.</p> <p>Default: 100</p> <p>Constraints: Minimum\
          \ 20, maximum 100.</p>"
        explode: true
        in: query
        name: MaxRecords
        required: false
        schema:
          type: integer
        style: form
      - description: "An optional pagination token provided by a previous request.\
          \ If this parameter is specified, the response includes only records beyond\
          \ the marker, up to the value specified by <code>MaxRecords</code>."
        explode: true
        in: query
        name: Marker
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: Action
        required: true
        schema:
          enum:
          - DescribeDBClusters
          type: string
        style: form
      - explode: true
        in: query
        name: Version
        required: true
        schema:
          enum:
          - 2014-10-31
          type: string
        style: form
      responses:
        "200":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DBClusterMessage'
          description: Success
        "480":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DBClusterNotFoundFault'
          description: DBClusterNotFoundFault
      x-aws-operation-name: DescribeDBClusters
      x-accepts:
      - text/xml
    post:
      description: "Returns information about provisioned Amazon DocumentDB clusters.\
        \ This API operation supports pagination. For certain management features\
        \ such as cluster and instance lifecycle management, Amazon DocumentDB leverages\
        \ operational technology that is shared with Amazon RDS and Amazon Neptune.\
        \ Use the <code>filterName=engine,Values=docdb</code> filter parameter to\
        \ return only Amazon DocumentDB clusters."
      operationId: POST_DescribeDBClusters
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: Pagination limit
        explode: true
        in: query
        name: MaxRecords
        required: false
        schema:
          type: string
        style: form
      - description: Pagination token
        explode: true
        in: query
        name: Marker
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: Action
        required: true
        schema:
          enum:
          - DescribeDBClusters
          type: string
        style: form
      - explode: true
        in: query
        name: Version
        required: true
        schema:
          enum:
          - 2014-10-31
          type: string
        style: form
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/DescribeDBClustersMessage'
      responses:
        "200":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DBClusterMessage'
          description: Success
        "480":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DBClusterNotFoundFault'
          description: DBClusterNotFoundFault
      x-aws-operation-name: DescribeDBClusters
      x-content-type: text/xml
      x-accepts:
      - text/xml
  /#Action=DescribeDBEngineVersions:
    get:
      description: Returns a list of the available engines.
      operationId: GET_DescribeDBEngineVersions
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The database engine to return.
        explode: true
        in: query
        name: Engine
        required: false
        schema:
          type: string
        style: form
      - description: "<p>The database engine version to return.</p> <p>Example: <code>3.6.0</code>\
          \ </p>"
        explode: true
        in: query
        name: EngineVersion
        required: false
        schema:
          type: string
        style: form
      - description: "<p>The name of a specific parameter group family to return details\
          \ for.</p> <p>Constraints:</p> <ul> <li> <p>If provided, must match an existing\
          \ <code>DBParameterGroupFamily</code>.</p> </li> </ul>"
        explode: true
        in: query
        name: DBParameterGroupFamily
        required: false
        schema:
          type: string
        style: form
      - description: This parameter is not currently supported.
        explode: true
        in: query
        name: Filters
        required: false
        schema:
          items:
            $ref: '#/components/schemas/GET_DescribeCertificates_Filters_parameter_inner'
          type: array
        style: form
      - description: "<p> The maximum number of records to include in the response.\
          \ If more records exist than the specified <code>MaxRecords</code> value,\
          \ a pagination token (marker) is included in the response so that the remaining\
          \ results can be retrieved.</p> <p>Default: 100</p> <p>Constraints: Minimum\
          \ 20, maximum 100.</p>"
        explode: true
        in: query
        name: MaxRecords
        required: false
        schema:
          type: integer
        style: form
      - description: "An optional pagination token provided by a previous request.\
          \ If this parameter is specified, the response includes only records beyond\
          \ the marker, up to the value specified by <code>MaxRecords</code>."
        explode: true
        in: query
        name: Marker
        required: false
        schema:
          type: string
        style: form
      - description: Indicates that only the default version of the specified engine
          or engine and major version combination is returned.
        explode: true
        in: query
        name: DefaultOnly
        required: false
        schema:
          type: boolean
        style: form
      - description: "If this parameter is specified and the requested engine supports\
          \ the <code>CharacterSetName</code> parameter for <code>CreateDBInstance</code>,\
          \ the response includes a list of supported character sets for each engine\
          \ version. "
        explode: true
        in: query
        name: ListSupportedCharacterSets
        required: false
        schema:
          type: boolean
        style: form
      - description: "If this parameter is specified and the requested engine supports\
          \ the <code>TimeZone</code> parameter for <code>CreateDBInstance</code>,\
          \ the response includes a list of supported time zones for each engine version. "
        explode: true
        in: query
        name: ListSupportedTimezones
        required: false
        schema:
          type: boolean
        style: form
      - explode: true
        in: query
        name: Action
        required: true
        schema:
          enum:
          - DescribeDBEngineVersions
          type: string
        style: form
      - explode: true
        in: query
        name: Version
        required: true
        schema:
          enum:
          - 2014-10-31
          type: string
        style: form
      responses:
        "200":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DBEngineVersionMessage'
          description: Success
      x-aws-operation-name: DescribeDBEngineVersions
      x-accepts:
      - text/xml
    post:
      description: Returns a list of the available engines.
      operationId: POST_DescribeDBEngineVersions
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: Pagination limit
        explode: true
        in: query
        name: MaxRecords
        required: false
        schema:
          type: string
        style: form
      - description: Pagination token
        explode: true
        in: query
        name: Marker
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: Action
        required: true
        schema:
          enum:
          - DescribeDBEngineVersions
          type: string
        style: form
      - explode: true
        in: query
        name: Version
        required: true
        schema:
          enum:
          - 2014-10-31
          type: string
        style: form
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/DescribeDBEngineVersionsMessage'
      responses:
        "200":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DBEngineVersionMessage'
          description: Success
      x-aws-operation-name: DescribeDBEngineVersions
      x-content-type: text/xml
      x-accepts:
      - text/xml
  /#Action=DescribeDBInstances:
    get:
      description: Returns information about provisioned Amazon DocumentDB instances.
        This API supports pagination.
      operationId: GET_DescribeDBInstances
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: "<p>The user-provided instance identifier. If this parameter\
          \ is specified, information from only the specific instance is returned.\
          \ This parameter isn't case sensitive.</p> <p>Constraints:</p> <ul> <li>\
          \ <p>If provided, must match the identifier of an existing <code>DBInstance</code>.</p>\
          \ </li> </ul>"
        explode: true
        in: query
        name: DBInstanceIdentifier
        required: false
        schema:
          type: string
        style: form
      - description: <p>A filter that specifies one or more instances to describe.</p>
          <p>Supported filters:</p> <ul> <li> <p> <code>db-cluster-id</code> - Accepts
          cluster identifiers and cluster Amazon Resource Names (ARNs). The results
          list includes only the information about the instances that are associated
          with the clusters that are identified by these ARNs.</p> </li> <li> <p>
          <code>db-instance-id</code> - Accepts instance identifiers and instance
          ARNs. The results list includes only the information about the instances
          that are identified by these ARNs.</p> </li> </ul>
        explode: true
        in: query
        name: Filters
        required: false
        schema:
          items:
            $ref: '#/components/schemas/GET_DescribeCertificates_Filters_parameter_inner'
          type: array
        style: form
      - description: "<p> The maximum number of records to include in the response.\
          \ If more records exist than the specified <code>MaxRecords</code> value,\
          \ a pagination token (marker) is included in the response so that the remaining\
          \ results can be retrieved.</p> <p>Default: 100</p> <p>Constraints: Minimum\
          \ 20, maximum 100.</p>"
        explode: true
        in: query
        name: MaxRecords
        required: false
        schema:
          type: integer
        style: form
      - description: "An optional pagination token provided by a previous request.\
          \ If this parameter is specified, the response includes only records beyond\
          \ the marker, up to the value specified by <code>MaxRecords</code>."
        explode: true
        in: query
        name: Marker
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: Action
        required: true
        schema:
          enum:
          - DescribeDBInstances
          type: string
        style: form
      - explode: true
        in: query
        name: Version
        required: true
        schema:
          enum:
          - 2014-10-31
          type: string
        style: form
      responses:
        "200":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DBInstanceMessage'
          description: Success
        "480":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DBInstanceNotFoundFault'
          description: DBInstanceNotFoundFault
      x-aws-operation-name: DescribeDBInstances
      x-accepts:
      - text/xml
    post:
      description: Returns information about provisioned Amazon DocumentDB instances.
        This API supports pagination.
      operationId: POST_DescribeDBInstances
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: Pagination limit
        explode: true
        in: query
        name: MaxRecords
        required: false
        schema:
          type: string
        style: form
      - description: Pagination token
        explode: true
        in: query
        name: Marker
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: Action
        required: true
        schema:
          enum:
          - DescribeDBInstances
          type: string
        style: form
      - explode: true
        in: query
        name: Version
        required: true
        schema:
          enum:
          - 2014-10-31
          type: string
        style: form
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/DescribeDBInstancesMessage'
      responses:
        "200":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DBInstanceMessage'
          description: Success
        "480":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DBInstanceNotFoundFault'
          description: DBInstanceNotFoundFault
      x-aws-operation-name: DescribeDBInstances
      x-content-type: text/xml
      x-accepts:
      - text/xml
  /#Action=DescribeDBSubnetGroups:
    get:
      description: "Returns a list of <code>DBSubnetGroup</code> descriptions. If\
        \ a <code>DBSubnetGroupName</code> is specified, the list will contain only\
        \ the descriptions of the specified <code>DBSubnetGroup</code>."
      operationId: GET_DescribeDBSubnetGroups
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The name of the subnet group to return details for.
        explode: true
        in: query
        name: DBSubnetGroupName
        required: false
        schema:
          type: string
        style: form
      - description: This parameter is not currently supported.
        explode: true
        in: query
        name: Filters
        required: false
        schema:
          items:
            $ref: '#/components/schemas/GET_DescribeCertificates_Filters_parameter_inner'
          type: array
        style: form
      - description: "<p> The maximum number of records to include in the response.\
          \ If more records exist than the specified <code>MaxRecords</code> value,\
          \ a pagination token (marker) is included in the response so that the remaining\
          \ results can be retrieved.</p> <p>Default: 100</p> <p>Constraints: Minimum\
          \ 20, maximum 100.</p>"
        explode: true
        in: query
        name: MaxRecords
        required: false
        schema:
          type: integer
        style: form
      - description: "An optional pagination token provided by a previous request.\
          \ If this parameter is specified, the response includes only records beyond\
          \ the marker, up to the value specified by <code>MaxRecords</code>."
        explode: true
        in: query
        name: Marker
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: Action
        required: true
        schema:
          enum:
          - DescribeDBSubnetGroups
          type: string
        style: form
      - explode: true
        in: query
        name: Version
        required: true
        schema:
          enum:
          - 2014-10-31
          type: string
        style: form
      responses:
        "200":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DBSubnetGroupMessage'
          description: Success
        "480":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DBSubnetGroupNotFoundFault'
          description: DBSubnetGroupNotFoundFault
      x-aws-operation-name: DescribeDBSubnetGroups
      x-accepts:
      - text/xml
    post:
      description: "Returns a list of <code>DBSubnetGroup</code> descriptions. If\
        \ a <code>DBSubnetGroupName</code> is specified, the list will contain only\
        \ the descriptions of the specified <code>DBSubnetGroup</code>."
      operationId: POST_DescribeDBSubnetGroups
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: Pagination limit
        explode: true
        in: query
        name: MaxRecords
        required: false
        schema:
          type: string
        style: form
      - description: Pagination token
        explode: true
        in: query
        name: Marker
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: Action
        required: true
        schema:
          enum:
          - DescribeDBSubnetGroups
          type: string
        style: form
      - explode: true
        in: query
        name: Version
        required: true
        schema:
          enum:
          - 2014-10-31
          type: string
        style: form
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/DescribeDBSubnetGroupsMessage'
      responses:
        "200":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DBSubnetGroupMessage'
          description: Success
        "480":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DBSubnetGroupNotFoundFault'
          description: DBSubnetGroupNotFoundFault
      x-aws-operation-name: DescribeDBSubnetGroups
      x-content-type: text/xml
      x-accepts:
      - text/xml
  /#Action=DescribeEngineDefaultClusterParameters:
    get:
      description: Returns the default engine and system parameter information for
        the cluster database engine.
      operationId: GET_DescribeEngineDefaultClusterParameters
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The name of the cluster parameter group family to return the
          engine parameter information for.
        explode: true
        in: query
        name: DBParameterGroupFamily
        required: true
        schema:
          type: string
        style: form
      - description: This parameter is not currently supported.
        explode: true
        in: query
        name: Filters
        required: false
        schema:
          items:
            $ref: '#/components/schemas/GET_DescribeCertificates_Filters_parameter_inner'
          type: array
        style: form
      - description: "<p> The maximum number of records to include in the response.\
          \ If more records exist than the specified <code>MaxRecords</code> value,\
          \ a pagination token (marker) is included in the response so that the remaining\
          \ results can be retrieved.</p> <p>Default: 100</p> <p>Constraints: Minimum\
          \ 20, maximum 100.</p>"
        explode: true
        in: query
        name: MaxRecords
        required: false
        schema:
          type: integer
        style: form
      - description: "An optional pagination token provided by a previous request.\
          \ If this parameter is specified, the response includes only records beyond\
          \ the marker, up to the value specified by <code>MaxRecords</code>."
        explode: true
        in: query
        name: Marker
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: Action
        required: true
        schema:
          enum:
          - DescribeEngineDefaultClusterParameters
          type: string
        style: form
      - explode: true
        in: query
        name: Version
        required: true
        schema:
          enum:
          - 2014-10-31
          type: string
        style: form
      responses:
        "200":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DescribeEngineDefaultClusterParametersResult'
          description: Success
      x-aws-operation-name: DescribeEngineDefaultClusterParameters
      x-accepts:
      - text/xml
    post:
      description: Returns the default engine and system parameter information for
        the cluster database engine.
      operationId: POST_DescribeEngineDefaultClusterParameters
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: true
        in: query
        name: Action
        required: true
        schema:
          enum:
          - DescribeEngineDefaultClusterParameters
          type: string
        style: form
      - explode: true
        in: query
        name: Version
        required: true
        schema:
          enum:
          - 2014-10-31
          type: string
        style: form
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/DescribeEngineDefaultClusterParametersMessage'
      responses:
        "200":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DescribeEngineDefaultClusterParametersResult'
          description: Success
      x-aws-operation-name: DescribeEngineDefaultClusterParameters
      x-content-type: text/xml
      x-accepts:
      - text/xml
  /#Action=DescribeEventCategories:
    get:
      description: "Displays a list of categories for all event source types, or,\
        \ if specified, for a specified source type. "
      operationId: GET_DescribeEventCategories
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: "<p>The type of source that is generating the events.</p> <p>Valid\
          \ values: <code>db-instance</code>, <code>db-parameter-group</code>, <code>db-security-group</code>\
          \ </p>"
        explode: true
        in: query
        name: SourceType
        required: false
        schema:
          type: string
        style: form
      - description: This parameter is not currently supported.
        explode: true
        in: query
        name: Filters
        required: false
        schema:
          items:
            $ref: '#/components/schemas/GET_DescribeCertificates_Filters_parameter_inner'
          type: array
        style: form
      - explode: true
        in: query
        name: Action
        required: true
        schema:
          enum:
          - DescribeEventCategories
          type: string
        style: form
      - explode: true
        in: query
        name: Version
        required: true
        schema:
          enum:
          - 2014-10-31
          type: string
        style: form
      responses:
        "200":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/EventCategoriesMessage'
          description: Success
      x-aws-operation-name: DescribeEventCategories
      x-accepts:
      - text/xml
    post:
      description: "Displays a list of categories for all event source types, or,\
        \ if specified, for a specified source type. "
      operationId: POST_DescribeEventCategories
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: true
        in: query
        name: Action
        required: true
        schema:
          enum:
          - DescribeEventCategories
          type: string
        style: form
      - explode: true
        in: query
        name: Version
        required: true
        schema:
          enum:
          - 2014-10-31
          type: string
        style: form
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/DescribeEventCategoriesMessage'
      responses:
        "200":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/EventCategoriesMessage'
          description: Success
      x-aws-operation-name: DescribeEventCategories
      x-content-type: text/xml
      x-accepts:
      - text/xml
  /#Action=DescribeEventSubscriptions:
    get:
      description: "<p>Lists all the subscription descriptions for a customer account.\
        \ The description for a subscription includes <code>SubscriptionName</code>,\
        \ <code>SNSTopicARN</code>, <code>CustomerID</code>, <code>SourceType</code>,\
        \ <code>SourceID</code>, <code>CreationTime</code>, and <code>Status</code>.</p>\
        \ <p>If you specify a <code>SubscriptionName</code>, lists the description\
        \ for that subscription.</p>"
      operationId: GET_DescribeEventSubscriptions
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The name of the Amazon DocumentDB event notification subscription
          that you want to describe.
        explode: true
        in: query
        name: SubscriptionName
        required: false
        schema:
          type: string
        style: form
      - description: This parameter is not currently supported.
        explode: true
        in: query
        name: Filters
        required: false
        schema:
          items:
            $ref: '#/components/schemas/GET_DescribeCertificates_Filters_parameter_inner'
          type: array
        style: form
      - description: "<p> The maximum number of records to include in the response.\
          \ If more records exist than the specified <code>MaxRecords</code> value,\
          \ a pagination token (marker) is included in the response so that the remaining\
          \ results can be retrieved.</p> <p>Default: 100</p> <p>Constraints: Minimum\
          \ 20, maximum 100.</p>"
        explode: true
        in: query
        name: MaxRecords
        required: false
        schema:
          type: integer
        style: form
      - description: "An optional pagination token provided by a previous request.\
          \ If this parameter is specified, the response includes only records beyond\
          \ the marker, up to the value specified by <code>MaxRecords</code>."
        explode: true
        in: query
        name: Marker
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: Action
        required: true
        schema:
          enum:
          - DescribeEventSubscriptions
          type: string
        style: form
      - explode: true
        in: query
        name: Version
        required: true
        schema:
          enum:
          - 2014-10-31
          type: string
        style: form
      responses:
        "200":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/EventSubscriptionsMessage'
          description: Success
        "480":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/SubscriptionNotFoundFault'
          description: SubscriptionNotFoundFault
      x-aws-operation-name: DescribeEventSubscriptions
      x-accepts:
      - text/xml
    post:
      description: "<p>Lists all the subscription descriptions for a customer account.\
        \ The description for a subscription includes <code>SubscriptionName</code>,\
        \ <code>SNSTopicARN</code>, <code>CustomerID</code>, <code>SourceType</code>,\
        \ <code>SourceID</code>, <code>CreationTime</code>, and <code>Status</code>.</p>\
        \ <p>If you specify a <code>SubscriptionName</code>, lists the description\
        \ for that subscription.</p>"
      operationId: POST_DescribeEventSubscriptions
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: Pagination limit
        explode: true
        in: query
        name: MaxRecords
        required: false
        schema:
          type: string
        style: form
      - description: Pagination token
        explode: true
        in: query
        name: Marker
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: Action
        required: true
        schema:
          enum:
          - DescribeEventSubscriptions
          type: string
        style: form
      - explode: true
        in: query
        name: Version
        required: true
        schema:
          enum:
          - 2014-10-31
          type: string
        style: form
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/DescribeEventSubscriptionsMessage'
      responses:
        "200":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/EventSubscriptionsMessage'
          description: Success
        "480":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/SubscriptionNotFoundFault'
          description: SubscriptionNotFoundFault
      x-aws-operation-name: DescribeEventSubscriptions
      x-content-type: text/xml
      x-accepts:
      - text/xml
  /#Action=DescribeEvents:
    get:
      description: "Returns events related to instances, security groups, snapshots,\
        \ and DB parameter groups for the past 14 days. You can obtain events specific\
        \ to a particular DB instance, security group, snapshot, or parameter group\
        \ by providing the name as a parameter. By default, the events of the past\
        \ hour are returned."
      operationId: GET_DescribeEvents
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: "<p>The identifier of the event source for which events are returned.\
          \ If not specified, then all sources are included in the response.</p> <p>Constraints:</p>\
          \ <ul> <li> <p>If <code>SourceIdentifier</code> is provided, <code>SourceType</code>\
          \ must also be provided.</p> </li> <li> <p>If the source type is <code>DBInstance</code>,\
          \ a <code>DBInstanceIdentifier</code> must be provided.</p> </li> <li> <p>If\
          \ the source type is <code>DBSecurityGroup</code>, a <code>DBSecurityGroupName</code>\
          \ must be provided.</p> </li> <li> <p>If the source type is <code>DBParameterGroup</code>,\
          \ a <code>DBParameterGroupName</code> must be provided.</p> </li> <li> <p>If\
          \ the source type is <code>DBSnapshot</code>, a <code>DBSnapshotIdentifier</code>\
          \ must be provided.</p> </li> <li> <p>Cannot end with a hyphen or contain\
          \ two consecutive hyphens.</p> </li> </ul>"
        explode: true
        in: query
        name: SourceIdentifier
        required: false
        schema:
          type: string
        style: form
      - description: "The event source to retrieve events for. If no value is specified,\
          \ all events are returned."
        explode: true
        in: query
        name: SourceType
        required: false
        schema:
          enum:
          - db-instance
          - db-parameter-group
          - db-security-group
          - db-snapshot
          - db-cluster
          - db-cluster-snapshot
          type: string
        style: form
      - description: "<p> The beginning of the time interval to retrieve events for,\
          \ specified in ISO 8601 format. </p> <p>Example: 2009-07-08T18:00Z</p>"
        explode: true
        in: query
        name: StartTime
        required: false
        schema:
          format: date-time
          type: string
        style: form
      - description: "<p> The end of the time interval for which to retrieve events,\
          \ specified in ISO 8601 format. </p> <p>Example: 2009-07-08T18:00Z</p>"
        explode: true
        in: query
        name: EndTime
        required: false
        schema:
          format: date-time
          type: string
        style: form
      - description: "<p>The number of minutes to retrieve events for.</p> <p>Default:\
          \ 60</p>"
        explode: true
        in: query
        name: Duration
        required: false
        schema:
          type: integer
        style: form
      - description: A list of event categories that trigger notifications for an
          event notification subscription.
        explode: true
        in: query
        name: EventCategories
        required: false
        schema:
          items:
            allOf:
            - $ref: '#/components/schemas/String'
            - xml:
                name: EventCategory
          type: array
        style: form
      - description: This parameter is not currently supported.
        explode: true
        in: query
        name: Filters
        required: false
        schema:
          items:
            $ref: '#/components/schemas/GET_DescribeCertificates_Filters_parameter_inner'
          type: array
        style: form
      - description: "<p> The maximum number of records to include in the response.\
          \ If more records exist than the specified <code>MaxRecords</code> value,\
          \ a pagination token (marker) is included in the response so that the remaining\
          \ results can be retrieved.</p> <p>Default: 100</p> <p>Constraints: Minimum\
          \ 20, maximum 100.</p>"
        explode: true
        in: query
        name: MaxRecords
        required: false
        schema:
          type: integer
        style: form
      - description: "An optional pagination token provided by a previous request.\
          \ If this parameter is specified, the response includes only records beyond\
          \ the marker, up to the value specified by <code>MaxRecords</code>."
        explode: true
        in: query
        name: Marker
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: Action
        required: true
        schema:
          enum:
          - DescribeEvents
          type: string
        style: form
      - explode: true
        in: query
        name: Version
        required: true
        schema:
          enum:
          - 2014-10-31
          type: string
        style: form
      responses:
        "200":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/EventsMessage'
          description: Success
      x-aws-operation-name: DescribeEvents
      x-accepts:
      - text/xml
    post:
      description: "Returns events related to instances, security groups, snapshots,\
        \ and DB parameter groups for the past 14 days. You can obtain events specific\
        \ to a particular DB instance, security group, snapshot, or parameter group\
        \ by providing the name as a parameter. By default, the events of the past\
        \ hour are returned."
      operationId: POST_DescribeEvents
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: Pagination limit
        explode: true
        in: query
        name: MaxRecords
        required: false
        schema:
          type: string
        style: form
      - description: Pagination token
        explode: true
        in: query
        name: Marker
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: Action
        required: true
        schema:
          enum:
          - DescribeEvents
          type: string
        style: form
      - explode: true
        in: query
        name: Version
        required: true
        schema:
          enum:
          - 2014-10-31
          type: string
        style: form
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/DescribeEventsMessage'
      responses:
        "200":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/EventsMessage'
          description: Success
      x-aws-operation-name: DescribeEvents
      x-content-type: text/xml
      x-accepts:
      - text/xml
  /#Action=DescribeGlobalClusters:
    get:
      description: <p>Returns information about Amazon DocumentDB global clusters.
        This API supports pagination.</p> <note> <p>This action only applies to Amazon
        DocumentDB clusters.</p> </note>
      operationId: GET_DescribeGlobalClusters
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: "The user-supplied cluster identifier. If this parameter is specified,\
          \ information from only the specific cluster is returned. This parameter\
          \ isn't case-sensitive."
        explode: true
        in: query
        name: GlobalClusterIdentifier
        required: false
        schema:
          maxLength: 255
          minLength: 1
          pattern: "[A-Za-z][0-9A-Za-z-:._]*"
          type: string
        style: form
      - description: "<p>A filter that specifies one or more global DB clusters to\
          \ describe.</p> <p>Supported filters: <code>db-cluster-id</code> accepts\
          \ cluster identifiers and cluster Amazon Resource Names (ARNs). The results\
          \ list will only include information about the clusters identified by these\
          \ ARNs.</p>"
        explode: true
        in: query
        name: Filters
        required: false
        schema:
          items:
            $ref: '#/components/schemas/GET_DescribeCertificates_Filters_parameter_inner'
          type: array
        style: form
      - description: "The maximum number of records to include in the response. If\
          \ more records exist than the specified <code>MaxRecords</code> value, a\
          \ pagination token called a marker is included in the response so that you\
          \ can retrieve the remaining results. "
        explode: true
        in: query
        name: MaxRecords
        required: false
        schema:
          type: integer
        style: form
      - description: "An optional pagination token provided by a previous <code>DescribeGlobalClusters</code>\
          \ request. If this parameter is specified, the response includes only records\
          \ beyond the marker, up to the value specified by <code>MaxRecords</code>."
        explode: true
        in: query
        name: Marker
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: Action
        required: true
        schema:
          enum:
          - DescribeGlobalClusters
          type: string
        style: form
      - explode: true
        in: query
        name: Version
        required: true
        schema:
          enum:
          - 2014-10-31
          type: string
        style: form
      responses:
        "200":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/GlobalClustersMessage'
          description: Success
        "480":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/GlobalClusterNotFoundFault'
          description: GlobalClusterNotFoundFault
      x-aws-operation-name: DescribeGlobalClusters
      x-accepts:
      - text/xml
    post:
      description: <p>Returns information about Amazon DocumentDB global clusters.
        This API supports pagination.</p> <note> <p>This action only applies to Amazon
        DocumentDB clusters.</p> </note>
      operationId: POST_DescribeGlobalClusters
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: Pagination limit
        explode: true
        in: query
        name: MaxRecords
        required: false
        schema:
          type: string
        style: form
      - description: Pagination token
        explode: true
        in: query
        name: Marker
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: Action
        required: true
        schema:
          enum:
          - DescribeGlobalClusters
          type: string
        style: form
      - explode: true
        in: query
        name: Version
        required: true
        schema:
          enum:
          - 2014-10-31
          type: string
        style: form
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/DescribeGlobalClustersMessage'
      responses:
        "200":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/GlobalClustersMessage'
          description: Success
        "480":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/GlobalClusterNotFoundFault'
          description: GlobalClusterNotFoundFault
      x-aws-operation-name: DescribeGlobalClusters
      x-content-type: text/xml
      x-accepts:
      - text/xml
  /#Action=DescribeOrderableDBInstanceOptions:
    get:
      description: Returns a list of orderable instance options for the specified
        engine.
      operationId: GET_DescribeOrderableDBInstanceOptions
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The name of the engine to retrieve instance options for.
        explode: true
        in: query
        name: Engine
        required: true
        schema:
          type: string
        style: form
      - description: The engine version filter value. Specify this parameter to show
          only the available offerings that match the specified engine version.
        explode: true
        in: query
        name: EngineVersion
        required: false
        schema:
          type: string
        style: form
      - description: The instance class filter value. Specify this parameter to show
          only the available offerings that match the specified instance class.
        explode: true
        in: query
        name: DBInstanceClass
        required: false
        schema:
          type: string
        style: form
      - description: The license model filter value. Specify this parameter to show
          only the available offerings that match the specified license model.
        explode: true
        in: query
        name: LicenseModel
        required: false
        schema:
          type: string
        style: form
      - description: The virtual private cloud (VPC) filter value. Specify this parameter
          to show only the available VPC or non-VPC offerings.
        explode: true
        in: query
        name: Vpc
        required: false
        schema:
          type: boolean
        style: form
      - description: This parameter is not currently supported.
        explode: true
        in: query
        name: Filters
        required: false
        schema:
          items:
            $ref: '#/components/schemas/GET_DescribeCertificates_Filters_parameter_inner'
          type: array
        style: form
      - description: "<p> The maximum number of records to include in the response.\
          \ If more records exist than the specified <code>MaxRecords</code> value,\
          \ a pagination token (marker) is included in the response so that the remaining\
          \ results can be retrieved.</p> <p>Default: 100</p> <p>Constraints: Minimum\
          \ 20, maximum 100.</p>"
        explode: true
        in: query
        name: MaxRecords
        required: false
        schema:
          type: integer
        style: form
      - description: "An optional pagination token provided by a previous request.\
          \ If this parameter is specified, the response includes only records beyond\
          \ the marker, up to the value specified by <code>MaxRecords</code>."
        explode: true
        in: query
        name: Marker
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: Action
        required: true
        schema:
          enum:
          - DescribeOrderableDBInstanceOptions
          type: string
        style: form
      - explode: true
        in: query
        name: Version
        required: true
        schema:
          enum:
          - 2014-10-31
          type: string
        style: form
      responses:
        "200":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/OrderableDBInstanceOptionsMessage'
          description: Success
      x-aws-operation-name: DescribeOrderableDBInstanceOptions
      x-accepts:
      - text/xml
    post:
      description: Returns a list of orderable instance options for the specified
        engine.
      operationId: POST_DescribeOrderableDBInstanceOptions
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: Pagination limit
        explode: true
        in: query
        name: MaxRecords
        required: false
        schema:
          type: string
        style: form
      - description: Pagination token
        explode: true
        in: query
        name: Marker
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: Action
        required: true
        schema:
          enum:
          - DescribeOrderableDBInstanceOptions
          type: string
        style: form
      - explode: true
        in: query
        name: Version
        required: true
        schema:
          enum:
          - 2014-10-31
          type: string
        style: form
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/DescribeOrderableDBInstanceOptionsMessage'
      responses:
        "200":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/OrderableDBInstanceOptionsMessage'
          description: Success
      x-aws-operation-name: DescribeOrderableDBInstanceOptions
      x-content-type: text/xml
      x-accepts:
      - text/xml
  /#Action=DescribePendingMaintenanceActions:
    get:
      description: "Returns a list of resources (for example, instances) that have\
        \ at least one pending maintenance action."
      operationId: GET_DescribePendingMaintenanceActions
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The ARN of a resource to return pending maintenance actions for.
        explode: true
        in: query
        name: ResourceIdentifier
        required: false
        schema:
          type: string
        style: form
      - description: <p>A filter that specifies one or more resources to return pending
          maintenance actions for.</p> <p>Supported filters:</p> <ul> <li> <p> <code>db-cluster-id</code>
          - Accepts cluster identifiers and cluster Amazon Resource Names (ARNs).
          The results list includes only pending maintenance actions for the clusters
          identified by these ARNs.</p> </li> <li> <p> <code>db-instance-id</code>
          - Accepts instance identifiers and instance ARNs. The results list includes
          only pending maintenance actions for the DB instances identified by these
          ARNs.</p> </li> </ul>
        explode: true
        in: query
        name: Filters
        required: false
        schema:
          items:
            $ref: '#/components/schemas/GET_DescribeCertificates_Filters_parameter_inner'
          type: array
        style: form
      - description: "An optional pagination token provided by a previous request.\
          \ If this parameter is specified, the response includes only records beyond\
          \ the marker, up to the value specified by <code>MaxRecords</code>."
        explode: true
        in: query
        name: Marker
        required: false
        schema:
          type: string
        style: form
      - description: "<p> The maximum number of records to include in the response.\
          \ If more records exist than the specified <code>MaxRecords</code> value,\
          \ a pagination token (marker) is included in the response so that the remaining\
          \ results can be retrieved.</p> <p>Default: 100</p> <p>Constraints: Minimum\
          \ 20, maximum 100.</p>"
        explode: true
        in: query
        name: MaxRecords
        required: false
        schema:
          type: integer
        style: form
      - explode: true
        in: query
        name: Action
        required: true
        schema:
          enum:
          - DescribePendingMaintenanceActions
          type: string
        style: form
      - explode: true
        in: query
        name: Version
        required: true
        schema:
          enum:
          - 2014-10-31
          type: string
        style: form
      responses:
        "200":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/PendingMaintenanceActionsMessage'
          description: Success
        "480":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundFault'
          description: ResourceNotFoundFault
      x-aws-operation-name: DescribePendingMaintenanceActions
      x-accepts:
      - text/xml
    post:
      description: "Returns a list of resources (for example, instances) that have\
        \ at least one pending maintenance action."
      operationId: POST_DescribePendingMaintenanceActions
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: Pagination limit
        explode: true
        in: query
        name: MaxRecords
        required: false
        schema:
          type: string
        style: form
      - description: Pagination token
        explode: true
        in: query
        name: Marker
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: Action
        required: true
        schema:
          enum:
          - DescribePendingMaintenanceActions
          type: string
        style: form
      - explode: true
        in: query
        name: Version
        required: true
        schema:
          enum:
          - 2014-10-31
          type: string
        style: form
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/DescribePendingMaintenanceActionsMessage'
      responses:
        "200":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/PendingMaintenanceActionsMessage'
          description: Success
        "480":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundFault'
          description: ResourceNotFoundFault
      x-aws-operation-name: DescribePendingMaintenanceActions
      x-content-type: text/xml
      x-accepts:
      - text/xml
  /#Action=FailoverDBCluster:
    get:
      description: "<p>Forces a failover for a cluster.</p> <p>A failover for a cluster\
        \ promotes one of the Amazon DocumentDB replicas (read-only instances) in\
        \ the cluster to be the primary instance (the cluster writer).</p> <p>If the\
        \ primary instance fails, Amazon DocumentDB automatically fails over to an\
        \ Amazon DocumentDB replica, if one exists. You can force a failover when\
        \ you want to simulate a failure of a primary instance for testing.</p>"
      operationId: GET_FailoverDBCluster
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: <p>A cluster identifier to force a failover for. This parameter
          is not case sensitive.</p> <p>Constraints:</p> <ul> <li> <p>Must match the
          identifier of an existing <code>DBCluster</code>.</p> </li> </ul>
        explode: true
        in: query
        name: DBClusterIdentifier
        required: false
        schema:
          type: string
        style: form
      - description: "<p>The name of the instance to promote to the primary instance.</p>\
          \ <p>You must specify the instance identifier for an Amazon DocumentDB replica\
          \ in the cluster. For example, <code>mydbcluster-replica1</code>.</p>"
        explode: true
        in: query
        name: TargetDBInstanceIdentifier
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: Action
        required: true
        schema:
          enum:
          - FailoverDBCluster
          type: string
        style: form
      - explode: true
        in: query
        name: Version
        required: true
        schema:
          enum:
          - 2014-10-31
          type: string
        style: form
      responses:
        "200":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/FailoverDBClusterResult'
          description: Success
        "480":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DBClusterNotFoundFault'
          description: DBClusterNotFoundFault
        "481":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidDBClusterStateFault'
          description: InvalidDBClusterStateFault
        "482":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidDBInstanceStateFault'
          description: InvalidDBInstanceStateFault
      x-aws-operation-name: FailoverDBCluster
      x-accepts:
      - text/xml
    post:
      description: "<p>Forces a failover for a cluster.</p> <p>A failover for a cluster\
        \ promotes one of the Amazon DocumentDB replicas (read-only instances) in\
        \ the cluster to be the primary instance (the cluster writer).</p> <p>If the\
        \ primary instance fails, Amazon DocumentDB automatically fails over to an\
        \ Amazon DocumentDB replica, if one exists. You can force a failover when\
        \ you want to simulate a failure of a primary instance for testing.</p>"
      operationId: POST_FailoverDBCluster
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: true
        in: query
        name: Action
        required: true
        schema:
          enum:
          - FailoverDBCluster
          type: string
        style: form
      - explode: true
        in: query
        name: Version
        required: true
        schema:
          enum:
          - 2014-10-31
          type: string
        style: form
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/FailoverDBClusterMessage'
      responses:
        "200":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/FailoverDBClusterResult'
          description: Success
        "480":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DBClusterNotFoundFault'
          description: DBClusterNotFoundFault
        "481":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidDBClusterStateFault'
          description: InvalidDBClusterStateFault
        "482":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidDBInstanceStateFault'
          description: InvalidDBInstanceStateFault
      x-aws-operation-name: FailoverDBCluster
      x-content-type: text/xml
      x-accepts:
      - text/xml
  /#Action=ListTagsForResource:
    get:
      description: Lists all tags on an Amazon DocumentDB resource.
      operationId: GET_ListTagsForResource
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The Amazon DocumentDB resource with tags to be listed. This value
          is an Amazon Resource Name (ARN).
        explode: true
        in: query
        name: ResourceName
        required: true
        schema:
          type: string
        style: form
      - description: This parameter is not currently supported.
        explode: true
        in: query
        name: Filters
        required: false
        schema:
          items:
            $ref: '#/components/schemas/GET_DescribeCertificates_Filters_parameter_inner'
          type: array
        style: form
      - explode: true
        in: query
        name: Action
        required: true
        schema:
          enum:
          - ListTagsForResource
          type: string
        style: form
      - explode: true
        in: query
        name: Version
        required: true
        schema:
          enum:
          - 2014-10-31
          type: string
        style: form
      responses:
        "200":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/TagListMessage'
          description: Success
        "480":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DBInstanceNotFoundFault'
          description: DBInstanceNotFoundFault
        "481":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DBSnapshotNotFoundFault'
          description: DBSnapshotNotFoundFault
        "482":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DBClusterNotFoundFault'
          description: DBClusterNotFoundFault
      x-aws-operation-name: ListTagsForResource
      x-accepts:
      - text/xml
    post:
      description: Lists all tags on an Amazon DocumentDB resource.
      operationId: POST_ListTagsForResource
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: true
        in: query
        name: Action
        required: true
        schema:
          enum:
          - ListTagsForResource
          type: string
        style: form
      - explode: true
        in: query
        name: Version
        required: true
        schema:
          enum:
          - 2014-10-31
          type: string
        style: form
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/ListTagsForResourceMessage'
      responses:
        "200":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/TagListMessage'
          description: Success
        "480":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DBInstanceNotFoundFault'
          description: DBInstanceNotFoundFault
        "481":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DBSnapshotNotFoundFault'
          description: DBSnapshotNotFoundFault
        "482":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DBClusterNotFoundFault'
          description: DBClusterNotFoundFault
      x-aws-operation-name: ListTagsForResource
      x-content-type: text/xml
      x-accepts:
      - text/xml
  /#Action=ModifyDBCluster:
    get:
      description: 'Modifies a setting for an Amazon DocumentDB cluster. You can change
        one or more database configuration parameters by specifying these parameters
        and the new values in the request. '
      operationId: GET_ModifyDBCluster
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: <p>The cluster identifier for the cluster that is being modified.
          This parameter is not case sensitive.</p> <p>Constraints:</p> <ul> <li>
          <p>Must match the identifier of an existing <code>DBCluster</code>.</p>
          </li> </ul>
        explode: true
        in: query
        name: DBClusterIdentifier
        required: true
        schema:
          type: string
        style: form
      - description: "<p>The new cluster identifier for the cluster when renaming\
          \ a cluster. This value is stored as a lowercase string.</p> <p>Constraints:</p>\
          \ <ul> <li> <p>Must contain from 1 to 63 letters, numbers, or hyphens.</p>\
          \ </li> <li> <p>The first character must be a letter.</p> </li> <li> <p>Cannot\
          \ end with a hyphen or contain two consecutive hyphens.</p> </li> </ul>\
          \ <p>Example: <code>my-cluster2</code> </p>"
        explode: true
        in: query
        name: NewDBClusterIdentifier
        required: false
        schema:
          type: string
        style: form
      - description: "<p>A value that specifies whether the changes in this request\
          \ and any pending changes are asynchronously applied as soon as possible,\
          \ regardless of the <code>PreferredMaintenanceWindow</code> setting for\
          \ the cluster. If this parameter is set to <code>false</code>, changes to\
          \ the cluster are applied during the next maintenance window.</p> <p>The\
          \ <code>ApplyImmediately</code> parameter affects only the <code>NewDBClusterIdentifier</code>\
          \ and <code>MasterUserPassword</code> values. If you set this parameter\
          \ value to <code>false</code>, the changes to the <code>NewDBClusterIdentifier</code>\
          \ and <code>MasterUserPassword</code> values are applied during the next\
          \ maintenance window. All other changes are applied immediately, regardless\
          \ of the value of the <code>ApplyImmediately</code> parameter.</p> <p>Default:\
          \ <code>false</code> </p>"
        explode: true
        in: query
        name: ApplyImmediately
        required: false
        schema:
          type: boolean
        style: form
      - description: "<p>The number of days for which automated backups are retained.\
          \ You must specify a minimum value of 1.</p> <p>Default: 1</p> <p>Constraints:</p>\
          \ <ul> <li> <p>Must be a value from 1 to 35.</p> </li> </ul>"
        explode: true
        in: query
        name: BackupRetentionPeriod
        required: false
        schema:
          type: integer
        style: form
      - description: The name of the cluster parameter group to use for the cluster.
        explode: true
        in: query
        name: DBClusterParameterGroupName
        required: false
        schema:
          type: string
        style: form
      - description: A list of virtual private cloud (VPC) security groups that the
          cluster will belong to.
        explode: true
        in: query
        name: VpcSecurityGroupIds
        required: false
        schema:
          items:
            allOf:
            - $ref: '#/components/schemas/String'
            - xml:
                name: VpcSecurityGroupId
          type: array
        style: form
      - description: "<p>The port number on which the cluster accepts connections.</p>\
          \ <p>Constraints: Must be a value from <code>1150</code> to <code>65535</code>.\
          \ </p> <p>Default: The same port as the original cluster.</p>"
        explode: true
        in: query
        name: Port
        required: false
        schema:
          type: integer
        style: form
      - description: "<p>The password for the master database user. This password\
          \ can contain any printable ASCII character except forward slash (/), double\
          \ quote (\"), or the \"at\" symbol (@).</p> <p>Constraints: Must contain\
          \ from 8 to 100 characters.</p>"
        explode: true
        in: query
        name: MasterUserPassword
        required: false
        schema:
          type: string
        style: form
      - description: "<p>The daily time range during which automated backups are created\
          \ if automated backups are enabled, using the <code>BackupRetentionPeriod</code>\
          \ parameter. </p> <p>The default is a 30-minute window selected at random\
          \ from an 8-hour block of time for each Amazon Web Services Region. </p>\
          \ <p>Constraints:</p> <ul> <li> <p>Must be in the format <code>hh24:mi-hh24:mi</code>.</p>\
          \ </li> <li> <p>Must be in Universal Coordinated Time (UTC).</p> </li> <li>\
          \ <p>Must not conflict with the preferred maintenance window.</p> </li>\
          \ <li> <p>Must be at least 30 minutes.</p> </li> </ul>"
        explode: true
        in: query
        name: PreferredBackupWindow
        required: false
        schema:
          type: string
        style: form
      - description: "<p>The weekly time range during which system maintenance can\
          \ occur, in Universal Coordinated Time (UTC).</p> <p>Format: <code>ddd:hh24:mi-ddd:hh24:mi</code>\
          \ </p> <p>The default is a 30-minute window selected at random from an 8-hour\
          \ block of time for each Amazon Web Services Region, occurring on a random\
          \ day of the week. </p> <p>Valid days: Mon, Tue, Wed, Thu, Fri, Sat, Sun</p>\
          \ <p>Constraints: Minimum 30-minute window.</p>"
        explode: true
        in: query
        name: PreferredMaintenanceWindow
        required: false
        schema:
          type: string
        style: form
      - description: The configuration setting for the log types to be enabled for
          export to Amazon CloudWatch Logs for a specific instance or cluster. The
          <code>EnableLogTypes</code> and <code>DisableLogTypes</code> arrays determine
          which logs are exported (or not exported) to CloudWatch Logs.
        explode: true
        in: query
        name: CloudwatchLogsExportConfiguration
        required: false
        schema:
          $ref: '#/components/schemas/GET_ModifyDBCluster_CloudwatchLogsExportConfiguration_parameter'
        style: form
      - description: "<p>The version number of the database engine to which you want\
          \ to upgrade. Changing this parameter results in an outage. The change is\
          \ applied during the next maintenance window unless <code>ApplyImmediately</code>\
          \ is enabled.</p> <p>To list all of the available engine versions for Amazon\
          \ DocumentDB use the following command:</p> <p> <code>aws docdb describe-db-engine-versions\
          \ --engine docdb --query \"DBEngineVersions[].EngineVersion\"</code> </p>"
        explode: true
        in: query
        name: EngineVersion
        required: false
        schema:
          type: string
        style: form
      - description: "<p>A value that indicates whether major version upgrades are\
          \ allowed.</p> <p>Constraints: You must allow major version upgrades when\
          \ specifying a value for the <code>EngineVersion</code> parameter that is\
          \ a different major version than the DB cluster's current version.</p>"
        explode: true
        in: query
        name: AllowMajorVersionUpgrade
        required: false
        schema:
          type: boolean
        style: form
      - description: "Specifies whether this cluster can be deleted. If <code>DeletionProtection</code>\
          \ is enabled, the cluster cannot be deleted unless it is modified and <code>DeletionProtection</code>\
          \ is disabled. <code>DeletionProtection</code> protects clusters from being\
          \ accidentally deleted."
        explode: true
        in: query
        name: DeletionProtection
        required: false
        schema:
          type: boolean
        style: form
      - explode: true
        in: query
        name: Action
        required: true
        schema:
          enum:
          - ModifyDBCluster
          type: string
        style: form
      - explode: true
        in: query
        name: Version
        required: true
        schema:
          enum:
          - 2014-10-31
          type: string
        style: form
      responses:
        "200":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ModifyDBClusterResult'
          description: Success
        "480":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DBClusterNotFoundFault'
          description: DBClusterNotFoundFault
        "481":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidDBClusterStateFault'
          description: InvalidDBClusterStateFault
        "482":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/StorageQuotaExceededFault'
          description: StorageQuotaExceededFault
        "483":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DBSubnetGroupNotFoundFault'
          description: DBSubnetGroupNotFoundFault
        "484":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidVPCNetworkStateFault'
          description: InvalidVPCNetworkStateFault
        "485":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidDBSubnetGroupStateFault'
          description: InvalidDBSubnetGroupStateFault
        "486":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidSubnet'
          description: InvalidSubnet
        "487":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DBClusterParameterGroupNotFoundFault'
          description: DBClusterParameterGroupNotFoundFault
        "488":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidDBSecurityGroupStateFault'
          description: InvalidDBSecurityGroupStateFault
        "489":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidDBInstanceStateFault'
          description: InvalidDBInstanceStateFault
        "490":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DBClusterAlreadyExistsFault'
          description: DBClusterAlreadyExistsFault
      x-aws-operation-name: ModifyDBCluster
      x-accepts:
      - text/xml
    post:
      description: 'Modifies a setting for an Amazon DocumentDB cluster. You can change
        one or more database configuration parameters by specifying these parameters
        and the new values in the request. '
      operationId: POST_ModifyDBCluster
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: true
        in: query
        name: Action
        required: true
        schema:
          enum:
          - ModifyDBCluster
          type: string
        style: form
      - explode: true
        in: query
        name: Version
        required: true
        schema:
          enum:
          - 2014-10-31
          type: string
        style: form
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/ModifyDBClusterMessage'
      responses:
        "200":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ModifyDBClusterResult'
          description: Success
        "480":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DBClusterNotFoundFault'
          description: DBClusterNotFoundFault
        "481":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidDBClusterStateFault'
          description: InvalidDBClusterStateFault
        "482":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/StorageQuotaExceededFault'
          description: StorageQuotaExceededFault
        "483":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DBSubnetGroupNotFoundFault'
          description: DBSubnetGroupNotFoundFault
        "484":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidVPCNetworkStateFault'
          description: InvalidVPCNetworkStateFault
        "485":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidDBSubnetGroupStateFault'
          description: InvalidDBSubnetGroupStateFault
        "486":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidSubnet'
          description: InvalidSubnet
        "487":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DBClusterParameterGroupNotFoundFault'
          description: DBClusterParameterGroupNotFoundFault
        "488":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidDBSecurityGroupStateFault'
          description: InvalidDBSecurityGroupStateFault
        "489":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidDBInstanceStateFault'
          description: InvalidDBInstanceStateFault
        "490":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DBClusterAlreadyExistsFault'
          description: DBClusterAlreadyExistsFault
      x-aws-operation-name: ModifyDBCluster
      x-content-type: text/xml
      x-accepts:
      - text/xml
  /#Action=ModifyDBClusterParameterGroup:
    get:
      description: "<p> Modifies the parameters of a cluster parameter group. To modify\
        \ more than one parameter, submit a list of the following: <code>ParameterName</code>,\
        \ <code>ParameterValue</code>, and <code>ApplyMethod</code>. A maximum of\
        \ 20 parameters can be modified in a single request. </p> <note> <p>Changes\
        \ to dynamic parameters are applied immediately. Changes to static parameters\
        \ require a reboot or maintenance window before the change can take effect.</p>\
        \ </note> <important> <p>After you create a cluster parameter group, you should\
        \ wait at least 5 minutes before creating your first cluster that uses that\
        \ cluster parameter group as the default parameter group. This allows Amazon\
        \ DocumentDB to fully complete the create action before the parameter group\
        \ is used as the default for a new cluster. This step is especially important\
        \ for parameters that are critical when creating the default database for\
        \ a cluster, such as the character set for the default database defined by\
        \ the <code>character_set_database</code> parameter.</p> </important>"
      operationId: GET_ModifyDBClusterParameterGroup
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The name of the cluster parameter group to modify.
        explode: true
        in: query
        name: DBClusterParameterGroupName
        required: true
        schema:
          type: string
        style: form
      - description: A list of parameters in the cluster parameter group to modify.
        explode: true
        in: query
        name: Parameters
        required: true
        schema:
          items:
            $ref: '#/components/schemas/GET_ModifyDBClusterParameterGroup_Parameters_parameter_inner'
          type: array
        style: form
      - explode: true
        in: query
        name: Action
        required: true
        schema:
          enum:
          - ModifyDBClusterParameterGroup
          type: string
        style: form
      - explode: true
        in: query
        name: Version
        required: true
        schema:
          enum:
          - 2014-10-31
          type: string
        style: form
      responses:
        "200":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DBClusterParameterGroupNameMessage'
          description: Success
        "480":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DBParameterGroupNotFoundFault'
          description: DBParameterGroupNotFoundFault
        "481":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidDBParameterGroupStateFault'
          description: InvalidDBParameterGroupStateFault
      x-aws-operation-name: ModifyDBClusterParameterGroup
      x-accepts:
      - text/xml
    post:
      description: "<p> Modifies the parameters of a cluster parameter group. To modify\
        \ more than one parameter, submit a list of the following: <code>ParameterName</code>,\
        \ <code>ParameterValue</code>, and <code>ApplyMethod</code>. A maximum of\
        \ 20 parameters can be modified in a single request. </p> <note> <p>Changes\
        \ to dynamic parameters are applied immediately. Changes to static parameters\
        \ require a reboot or maintenance window before the change can take effect.</p>\
        \ </note> <important> <p>After you create a cluster parameter group, you should\
        \ wait at least 5 minutes before creating your first cluster that uses that\
        \ cluster parameter group as the default parameter group. This allows Amazon\
        \ DocumentDB to fully complete the create action before the parameter group\
        \ is used as the default for a new cluster. This step is especially important\
        \ for parameters that are critical when creating the default database for\
        \ a cluster, such as the character set for the default database defined by\
        \ the <code>character_set_database</code> parameter.</p> </important>"
      operationId: POST_ModifyDBClusterParameterGroup
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: true
        in: query
        name: Action
        required: true
        schema:
          enum:
          - ModifyDBClusterParameterGroup
          type: string
        style: form
      - explode: true
        in: query
        name: Version
        required: true
        schema:
          enum:
          - 2014-10-31
          type: string
        style: form
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/ModifyDBClusterParameterGroupMessage'
      responses:
        "200":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DBClusterParameterGroupNameMessage'
          description: Success
        "480":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DBParameterGroupNotFoundFault'
          description: DBParameterGroupNotFoundFault
        "481":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidDBParameterGroupStateFault'
          description: InvalidDBParameterGroupStateFault
      x-aws-operation-name: ModifyDBClusterParameterGroup
      x-content-type: text/xml
      x-accepts:
      - text/xml
  /#Action=ModifyDBClusterSnapshotAttribute:
    get:
      description: "<p>Adds an attribute and values to, or removes an attribute and\
        \ values from, a manual cluster snapshot.</p> <p>To share a manual cluster\
        \ snapshot with other Amazon Web Services accounts, specify <code>restore</code>\
        \ as the <code>AttributeName</code>, and use the <code>ValuesToAdd</code>\
        \ parameter to add a list of IDs of the Amazon Web Services accounts that\
        \ are authorized to restore the manual cluster snapshot. Use the value <code>all</code>\
        \ to make the manual cluster snapshot public, which means that it can be copied\
        \ or restored by all Amazon Web Services accounts. Do not add the <code>all</code>\
        \ value for any manual cluster snapshots that contain private information\
        \ that you don't want available to all Amazon Web Services accounts. If a\
        \ manual cluster snapshot is encrypted, it can be shared, but only by specifying\
        \ a list of authorized Amazon Web Services account IDs for the <code>ValuesToAdd</code>\
        \ parameter. You can't use <code>all</code> as a value for that parameter\
        \ in this case.</p>"
      operationId: GET_ModifyDBClusterSnapshotAttribute
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The identifier for the cluster snapshot to modify the attributes
          for.
        explode: true
        in: query
        name: DBClusterSnapshotIdentifier
        required: true
        schema:
          type: string
        style: form
      - description: "<p>The name of the cluster snapshot attribute to modify.</p>\
          \ <p>To manage authorization for other Amazon Web Services accounts to copy\
          \ or restore a manual cluster snapshot, set this value to <code>restore</code>.</p>"
        explode: true
        in: query
        name: AttributeName
        required: true
        schema:
          type: string
        style: form
      - description: "<p>A list of cluster snapshot attributes to add to the attribute\
          \ specified by <code>AttributeName</code>.</p> <p>To authorize other Amazon\
          \ Web Services accounts to copy or restore a manual cluster snapshot, set\
          \ this list to include one or more Amazon Web Services account IDs. To make\
          \ the manual cluster snapshot restorable by any Amazon Web Services account,\
          \ set it to <code>all</code>. Do not add the <code>all</code> value for\
          \ any manual cluster snapshots that contain private information that you\
          \ don't want to be available to all Amazon Web Services accounts.</p>"
        explode: true
        in: query
        name: ValuesToAdd
        required: false
        schema:
          items:
            allOf:
            - $ref: '#/components/schemas/String'
            - xml:
                name: AttributeValue
          type: array
        style: form
      - description: "<p>A list of cluster snapshot attributes to remove from the\
          \ attribute specified by <code>AttributeName</code>.</p> <p>To remove authorization\
          \ for other Amazon Web Services accounts to copy or restore a manual cluster\
          \ snapshot, set this list to include one or more Amazon Web Services account\
          \ identifiers. To remove authorization for any Amazon Web Services account\
          \ to copy or restore the cluster snapshot, set it to <code>all</code> .\
          \ If you specify <code>all</code>, an Amazon Web Services account whose\
          \ account ID is explicitly added to the <code>restore</code> attribute can\
          \ still copy or restore a manual cluster snapshot.</p>"
        explode: true
        in: query
        name: ValuesToRemove
        required: false
        schema:
          items:
            allOf:
            - $ref: '#/components/schemas/String'
            - xml:
                name: AttributeValue
          type: array
        style: form
      - explode: true
        in: query
        name: Action
        required: true
        schema:
          enum:
          - ModifyDBClusterSnapshotAttribute
          type: string
        style: form
      - explode: true
        in: query
        name: Version
        required: true
        schema:
          enum:
          - 2014-10-31
          type: string
        style: form
      responses:
        "200":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ModifyDBClusterSnapshotAttributeResult'
          description: Success
        "480":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DBClusterSnapshotNotFoundFault'
          description: DBClusterSnapshotNotFoundFault
        "481":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidDBClusterSnapshotStateFault'
          description: InvalidDBClusterSnapshotStateFault
        "482":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/SharedSnapshotQuotaExceededFault'
          description: SharedSnapshotQuotaExceededFault
      x-aws-operation-name: ModifyDBClusterSnapshotAttribute
      x-accepts:
      - text/xml
    post:
      description: "<p>Adds an attribute and values to, or removes an attribute and\
        \ values from, a manual cluster snapshot.</p> <p>To share a manual cluster\
        \ snapshot with other Amazon Web Services accounts, specify <code>restore</code>\
        \ as the <code>AttributeName</code>, and use the <code>ValuesToAdd</code>\
        \ parameter to add a list of IDs of the Amazon Web Services accounts that\
        \ are authorized to restore the manual cluster snapshot. Use the value <code>all</code>\
        \ to make the manual cluster snapshot public, which means that it can be copied\
        \ or restored by all Amazon Web Services accounts. Do not add the <code>all</code>\
        \ value for any manual cluster snapshots that contain private information\
        \ that you don't want available to all Amazon Web Services accounts. If a\
        \ manual cluster snapshot is encrypted, it can be shared, but only by specifying\
        \ a list of authorized Amazon Web Services account IDs for the <code>ValuesToAdd</code>\
        \ parameter. You can't use <code>all</code> as a value for that parameter\
        \ in this case.</p>"
      operationId: POST_ModifyDBClusterSnapshotAttribute
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: true
        in: query
        name: Action
        required: true
        schema:
          enum:
          - ModifyDBClusterSnapshotAttribute
          type: string
        style: form
      - explode: true
        in: query
        name: Version
        required: true
        schema:
          enum:
          - 2014-10-31
          type: string
        style: form
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/ModifyDBClusterSnapshotAttributeMessage'
      responses:
        "200":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ModifyDBClusterSnapshotAttributeResult'
          description: Success
        "480":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DBClusterSnapshotNotFoundFault'
          description: DBClusterSnapshotNotFoundFault
        "481":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidDBClusterSnapshotStateFault'
          description: InvalidDBClusterSnapshotStateFault
        "482":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/SharedSnapshotQuotaExceededFault'
          description: SharedSnapshotQuotaExceededFault
      x-aws-operation-name: ModifyDBClusterSnapshotAttribute
      x-content-type: text/xml
      x-accepts:
      - text/xml
  /#Action=ModifyDBInstance:
    get:
      description: Modifies settings for an instance. You can change one or more database
        configuration parameters by specifying these parameters and the new values
        in the request.
      operationId: GET_ModifyDBInstance
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: <p>The instance identifier. This value is stored as a lowercase
          string.</p> <p>Constraints:</p> <ul> <li> <p>Must match the identifier of
          an existing <code>DBInstance</code>.</p> </li> </ul>
        explode: true
        in: query
        name: DBInstanceIdentifier
        required: true
        schema:
          type: string
        style: form
      - description: "<p>The new compute and memory capacity of the instance; for\
          \ example, <code>db.r5.large</code>. Not all instance classes are available\
          \ in all Amazon Web Services Regions. </p> <p>If you modify the instance\
          \ class, an outage occurs during the change. The change is applied during\
          \ the next maintenance window, unless <code>ApplyImmediately</code> is specified\
          \ as <code>true</code> for this request. </p> <p>Default: Uses existing\
          \ setting.</p>"
        explode: true
        in: query
        name: DBInstanceClass
        required: false
        schema:
          type: string
        style: form
      - description: "<p>Specifies whether the modifications in this request and any\
          \ pending modifications are asynchronously applied as soon as possible,\
          \ regardless of the <code>PreferredMaintenanceWindow</code> setting for\
          \ the instance. </p> <p> If this parameter is set to <code>false</code>,\
          \ changes to the instance are applied during the next maintenance window.\
          \ Some parameter changes can cause an outage and are applied on the next\
          \ reboot.</p> <p>Default: <code>false</code> </p>"
        explode: true
        in: query
        name: ApplyImmediately
        required: false
        schema:
          type: boolean
        style: form
      - description: "<p>The weekly time range (in UTC) during which system maintenance\
          \ can occur, which might result in an outage. Changing this parameter doesn't\
          \ result in an outage except in the following situation, and the change\
          \ is asynchronously applied as soon as possible. If there are pending actions\
          \ that cause a reboot, and the maintenance window is changed to include\
          \ the current time, changing this parameter causes a reboot of the instance.\
          \ If you are moving this window to the current time, there must be at least\
          \ 30 minutes between the current time and end of the window to ensure that\
          \ pending changes are applied.</p> <p>Default: Uses existing setting.</p>\
          \ <p>Format: <code>ddd:hh24:mi-ddd:hh24:mi</code> </p> <p>Valid days: Mon,\
          \ Tue, Wed, Thu, Fri, Sat, Sun</p> <p>Constraints: Must be at least 30 minutes.</p>"
        explode: true
        in: query
        name: PreferredMaintenanceWindow
        required: false
        schema:
          type: string
        style: form
      - description: This parameter does not apply to Amazon DocumentDB. Amazon DocumentDB
          does not perform minor version upgrades regardless of the value set.
        explode: true
        in: query
        name: AutoMinorVersionUpgrade
        required: false
        schema:
          type: boolean
        style: form
      - description: "<p> The new instance identifier for the instance when renaming\
          \ an instance. When you change the instance identifier, an instance reboot\
          \ occurs immediately if you set <code>Apply Immediately</code> to <code>true</code>.\
          \ It occurs during the next maintenance window if you set <code>Apply Immediately</code>\
          \ to <code>false</code>. This value is stored as a lowercase string. </p>\
          \ <p>Constraints:</p> <ul> <li> <p>Must contain from 1 to 63 letters, numbers,\
          \ or hyphens.</p> </li> <li> <p>The first character must be a letter.</p>\
          \ </li> <li> <p>Cannot end with a hyphen or contain two consecutive hyphens.</p>\
          \ </li> </ul> <p>Example: <code>mydbinstance</code> </p>"
        explode: true
        in: query
        name: NewDBInstanceIdentifier
        required: false
        schema:
          type: string
        style: form
      - description: Indicates the certificate that needs to be associated with the
          instance.
        explode: true
        in: query
        name: CACertificateIdentifier
        required: false
        schema:
          type: string
        style: form
      - description: "A value that indicates whether to copy all tags from the DB\
          \ instance to snapshots of the DB instance. By default, tags are not copied."
        explode: true
        in: query
        name: CopyTagsToSnapshot
        required: false
        schema:
          type: boolean
        style: form
      - description: "<p>A value that specifies the order in which an Amazon DocumentDB\
          \ replica is promoted to the primary instance after a failure of the existing\
          \ primary instance.</p> <p>Default: 1</p> <p>Valid values: 0-15</p>"
        explode: true
        in: query
        name: PromotionTier
        required: false
        schema:
          type: integer
        style: form
      - description: "A value that indicates whether to enable Performance Insights\
          \ for the DB Instance. For more information, see <a href=\"https://docs.aws.amazon.com/documentdb/latest/developerguide/performance-insights.html\"\
          >Using Amazon Performance Insights</a>."
        explode: true
        in: query
        name: EnablePerformanceInsights
        required: false
        schema:
          type: boolean
        style: form
      - description: "<p>The KMS key identifier for encryption of Performance Insights\
          \ data.</p> <p>The KMS key identifier is the key ARN, key ID, alias ARN,\
          \ or alias name for the KMS key.</p> <p>If you do not specify a value for\
          \ PerformanceInsightsKMSKeyId, then Amazon DocumentDB uses your default\
          \ KMS key. There is a default KMS key for your Amazon Web Services account.\
          \ Your Amazon Web Services account has a different default KMS key for each\
          \ Amazon Web Services region.</p>"
        explode: true
        in: query
        name: PerformanceInsightsKMSKeyId
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: Action
        required: true
        schema:
          enum:
          - ModifyDBInstance
          type: string
        style: form
      - explode: true
        in: query
        name: Version
        required: true
        schema:
          enum:
          - 2014-10-31
          type: string
        style: form
      responses:
        "200":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ModifyDBInstanceResult'
          description: Success
        "480":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidDBInstanceStateFault'
          description: InvalidDBInstanceStateFault
        "481":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidDBSecurityGroupStateFault'
          description: InvalidDBSecurityGroupStateFault
        "482":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DBInstanceAlreadyExistsFault'
          description: DBInstanceAlreadyExistsFault
        "483":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DBInstanceNotFoundFault'
          description: DBInstanceNotFoundFault
        "484":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DBSecurityGroupNotFoundFault'
          description: DBSecurityGroupNotFoundFault
        "485":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DBParameterGroupNotFoundFault'
          description: DBParameterGroupNotFoundFault
        "486":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InsufficientDBInstanceCapacityFault'
          description: InsufficientDBInstanceCapacityFault
        "487":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/StorageQuotaExceededFault'
          description: StorageQuotaExceededFault
        "488":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidVPCNetworkStateFault'
          description: InvalidVPCNetworkStateFault
        "489":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DBUpgradeDependencyFailureFault'
          description: DBUpgradeDependencyFailureFault
        "490":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/StorageTypeNotSupportedFault'
          description: StorageTypeNotSupportedFault
        "491":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/AuthorizationNotFoundFault'
          description: AuthorizationNotFoundFault
        "492":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/CertificateNotFoundFault'
          description: CertificateNotFoundFault
      x-aws-operation-name: ModifyDBInstance
      x-accepts:
      - text/xml
    post:
      description: Modifies settings for an instance. You can change one or more database
        configuration parameters by specifying these parameters and the new values
        in the request.
      operationId: POST_ModifyDBInstance
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: true
        in: query
        name: Action
        required: true
        schema:
          enum:
          - ModifyDBInstance
          type: string
        style: form
      - explode: true
        in: query
        name: Version
        required: true
        schema:
          enum:
          - 2014-10-31
          type: string
        style: form
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/ModifyDBInstanceMessage'
      responses:
        "200":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ModifyDBInstanceResult'
          description: Success
        "480":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidDBInstanceStateFault'
          description: InvalidDBInstanceStateFault
        "481":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidDBSecurityGroupStateFault'
          description: InvalidDBSecurityGroupStateFault
        "482":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DBInstanceAlreadyExistsFault'
          description: DBInstanceAlreadyExistsFault
        "483":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DBInstanceNotFoundFault'
          description: DBInstanceNotFoundFault
        "484":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DBSecurityGroupNotFoundFault'
          description: DBSecurityGroupNotFoundFault
        "485":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DBParameterGroupNotFoundFault'
          description: DBParameterGroupNotFoundFault
        "486":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InsufficientDBInstanceCapacityFault'
          description: InsufficientDBInstanceCapacityFault
        "487":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/StorageQuotaExceededFault'
          description: StorageQuotaExceededFault
        "488":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidVPCNetworkStateFault'
          description: InvalidVPCNetworkStateFault
        "489":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DBUpgradeDependencyFailureFault'
          description: DBUpgradeDependencyFailureFault
        "490":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/StorageTypeNotSupportedFault'
          description: StorageTypeNotSupportedFault
        "491":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/AuthorizationNotFoundFault'
          description: AuthorizationNotFoundFault
        "492":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/CertificateNotFoundFault'
          description: CertificateNotFoundFault
      x-aws-operation-name: ModifyDBInstance
      x-content-type: text/xml
      x-accepts:
      - text/xml
  /#Action=ModifyDBSubnetGroup:
    get:
      description: Modifies an existing subnet group. subnet groups must contain at
        least one subnet in at least two Availability Zones in the Amazon Web Services
        Region.
      operationId: GET_ModifyDBSubnetGroup
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: "<p>The name for the subnet group. This value is stored as a\
          \ lowercase string. You can't modify the default subnet group. </p> <p>Constraints:\
          \ Must match the name of an existing <code>DBSubnetGroup</code>. Must not\
          \ be default.</p> <p>Example: <code>mySubnetgroup</code> </p>"
        explode: true
        in: query
        name: DBSubnetGroupName
        required: true
        schema:
          type: string
        style: form
      - description: The description for the subnet group.
        explode: true
        in: query
        name: DBSubnetGroupDescription
        required: false
        schema:
          type: string
        style: form
      - description: The Amazon EC2 subnet IDs for the subnet group.
        explode: true
        in: query
        name: SubnetIds
        required: true
        schema:
          items:
            allOf:
            - $ref: '#/components/schemas/String'
            - xml:
                name: SubnetIdentifier
          type: array
        style: form
      - explode: true
        in: query
        name: Action
        required: true
        schema:
          enum:
          - ModifyDBSubnetGroup
          type: string
        style: form
      - explode: true
        in: query
        name: Version
        required: true
        schema:
          enum:
          - 2014-10-31
          type: string
        style: form
      responses:
        "200":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ModifyDBSubnetGroupResult'
          description: Success
        "480":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DBSubnetGroupNotFoundFault'
          description: DBSubnetGroupNotFoundFault
        "481":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DBSubnetQuotaExceededFault'
          description: DBSubnetQuotaExceededFault
        "482":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/SubnetAlreadyInUse'
          description: SubnetAlreadyInUse
        "483":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DBSubnetGroupDoesNotCoverEnoughAZs'
          description: DBSubnetGroupDoesNotCoverEnoughAZs
        "484":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidSubnet'
          description: InvalidSubnet
      x-aws-operation-name: ModifyDBSubnetGroup
      x-accepts:
      - text/xml
    post:
      description: Modifies an existing subnet group. subnet groups must contain at
        least one subnet in at least two Availability Zones in the Amazon Web Services
        Region.
      operationId: POST_ModifyDBSubnetGroup
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: true
        in: query
        name: Action
        required: true
        schema:
          enum:
          - ModifyDBSubnetGroup
          type: string
        style: form
      - explode: true
        in: query
        name: Version
        required: true
        schema:
          enum:
          - 2014-10-31
          type: string
        style: form
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/ModifyDBSubnetGroupMessage'
      responses:
        "200":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ModifyDBSubnetGroupResult'
          description: Success
        "480":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DBSubnetGroupNotFoundFault'
          description: DBSubnetGroupNotFoundFault
        "481":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DBSubnetQuotaExceededFault'
          description: DBSubnetQuotaExceededFault
        "482":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/SubnetAlreadyInUse'
          description: SubnetAlreadyInUse
        "483":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DBSubnetGroupDoesNotCoverEnoughAZs'
          description: DBSubnetGroupDoesNotCoverEnoughAZs
        "484":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidSubnet'
          description: InvalidSubnet
      x-aws-operation-name: ModifyDBSubnetGroup
      x-content-type: text/xml
      x-accepts:
      - text/xml
  /#Action=ModifyEventSubscription:
    get:
      description: Modifies an existing Amazon DocumentDB event notification subscription.
      operationId: GET_ModifyEventSubscription
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The name of the Amazon DocumentDB event notification subscription.
        explode: true
        in: query
        name: SubscriptionName
        required: true
        schema:
          type: string
        style: form
      - description: The Amazon Resource Name (ARN) of the SNS topic created for event
          notification. The ARN is created by Amazon SNS when you create a topic and
          subscribe to it.
        explode: true
        in: query
        name: SnsTopicArn
        required: false
        schema:
          type: string
        style: form
      - description: "<p>The type of source that is generating the events. For example,\
          \ if you want to be notified of events generated by an instance, set this\
          \ parameter to <code>db-instance</code>. If this value is not specified,\
          \ all events are returned.</p> <p>Valid values: <code>db-instance</code>,\
          \ <code>db-parameter-group</code>, <code>db-security-group</code> </p>"
        explode: true
        in: query
        name: SourceType
        required: false
        schema:
          type: string
        style: form
      - description: ' A list of event categories for a <code>SourceType</code> that
          you want to subscribe to.'
        explode: true
        in: query
        name: EventCategories
        required: false
        schema:
          items:
            allOf:
            - $ref: '#/components/schemas/String'
            - xml:
                name: EventCategory
          type: array
        style: form
      - description: ' A Boolean value; set to <code>true</code> to activate the subscription. '
        explode: true
        in: query
        name: Enabled
        required: false
        schema:
          type: boolean
        style: form
      - explode: true
        in: query
        name: Action
        required: true
        schema:
          enum:
          - ModifyEventSubscription
          type: string
        style: form
      - explode: true
        in: query
        name: Version
        required: true
        schema:
          enum:
          - 2014-10-31
          type: string
        style: form
      responses:
        "200":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ModifyEventSubscriptionResult'
          description: Success
        "480":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/EventSubscriptionQuotaExceededFault'
          description: EventSubscriptionQuotaExceededFault
        "481":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/SubscriptionNotFoundFault'
          description: SubscriptionNotFoundFault
        "482":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/SNSInvalidTopicFault'
          description: SNSInvalidTopicFault
        "483":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/SNSNoAuthorizationFault'
          description: SNSNoAuthorizationFault
        "484":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/SNSTopicArnNotFoundFault'
          description: SNSTopicArnNotFoundFault
        "485":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/SubscriptionCategoryNotFoundFault'
          description: SubscriptionCategoryNotFoundFault
      x-aws-operation-name: ModifyEventSubscription
      x-accepts:
      - text/xml
    post:
      description: Modifies an existing Amazon DocumentDB event notification subscription.
      operationId: POST_ModifyEventSubscription
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: true
        in: query
        name: Action
        required: true
        schema:
          enum:
          - ModifyEventSubscription
          type: string
        style: form
      - explode: true
        in: query
        name: Version
        required: true
        schema:
          enum:
          - 2014-10-31
          type: string
        style: form
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/ModifyEventSubscriptionMessage'
      responses:
        "200":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ModifyEventSubscriptionResult'
          description: Success
        "480":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/EventSubscriptionQuotaExceededFault'
          description: EventSubscriptionQuotaExceededFault
        "481":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/SubscriptionNotFoundFault'
          description: SubscriptionNotFoundFault
        "482":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/SNSInvalidTopicFault'
          description: SNSInvalidTopicFault
        "483":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/SNSNoAuthorizationFault'
          description: SNSNoAuthorizationFault
        "484":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/SNSTopicArnNotFoundFault'
          description: SNSTopicArnNotFoundFault
        "485":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/SubscriptionCategoryNotFoundFault'
          description: SubscriptionCategoryNotFoundFault
      x-aws-operation-name: ModifyEventSubscription
      x-content-type: text/xml
      x-accepts:
      - text/xml
  /#Action=ModifyGlobalCluster:
    get:
      description: "<p>Modify a setting for an Amazon DocumentDB global cluster. You\
        \ can change one or more configuration parameters (for example: deletion protection),\
        \ or the global cluster identifier by specifying these parameters and the\
        \ new values in the request.</p> <note> <p>This action only applies to Amazon\
        \ DocumentDB clusters.</p> </note>"
      operationId: GET_ModifyGlobalCluster
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: <p>The identifier for the global cluster being modified. This
          parameter isn't case-sensitive.</p> <p>Constraints:</p> <ul> <li> <p>Must
          match the identifier of an existing global cluster.</p> </li> </ul>
        explode: true
        in: query
        name: GlobalClusterIdentifier
        required: true
        schema:
          maxLength: 255
          minLength: 1
          pattern: "[A-Za-z][0-9A-Za-z-:._]*"
          type: string
        style: form
      - description: "<p>The new identifier for a global cluster when you modify a\
          \ global cluster. This value is stored as a lowercase string.</p> <ul> <li>\
          \ <p>Must contain from 1 to 63 letters, numbers, or hyphens</p> <p>The first\
          \ character must be a letter</p> <p>Can't end with a hyphen or contain two\
          \ consecutive hyphens</p> </li> </ul> <p>Example: <code>my-cluster2</code>\
          \ </p>"
        explode: true
        in: query
        name: NewGlobalClusterIdentifier
        required: false
        schema:
          maxLength: 255
          minLength: 1
          pattern: "[A-Za-z][0-9A-Za-z-:._]*"
          type: string
        style: form
      - description: 'Indicates if the global cluster has deletion protection enabled.
          The global cluster can''t be deleted when deletion protection is enabled. '
        explode: true
        in: query
        name: DeletionProtection
        required: false
        schema:
          type: boolean
        style: form
      - explode: true
        in: query
        name: Action
        required: true
        schema:
          enum:
          - ModifyGlobalCluster
          type: string
        style: form
      - explode: true
        in: query
        name: Version
        required: true
        schema:
          enum:
          - 2014-10-31
          type: string
        style: form
      responses:
        "200":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ModifyGlobalClusterResult'
          description: Success
        "480":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/GlobalClusterNotFoundFault'
          description: GlobalClusterNotFoundFault
        "481":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidGlobalClusterStateFault'
          description: InvalidGlobalClusterStateFault
      x-aws-operation-name: ModifyGlobalCluster
      x-accepts:
      - text/xml
    post:
      description: "<p>Modify a setting for an Amazon DocumentDB global cluster. You\
        \ can change one or more configuration parameters (for example: deletion protection),\
        \ or the global cluster identifier by specifying these parameters and the\
        \ new values in the request.</p> <note> <p>This action only applies to Amazon\
        \ DocumentDB clusters.</p> </note>"
      operationId: POST_ModifyGlobalCluster
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: true
        in: query
        name: Action
        required: true
        schema:
          enum:
          - ModifyGlobalCluster
          type: string
        style: form
      - explode: true
        in: query
        name: Version
        required: true
        schema:
          enum:
          - 2014-10-31
          type: string
        style: form
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/ModifyGlobalClusterMessage'
      responses:
        "200":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ModifyGlobalClusterResult'
          description: Success
        "480":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/GlobalClusterNotFoundFault'
          description: GlobalClusterNotFoundFault
        "481":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidGlobalClusterStateFault'
          description: InvalidGlobalClusterStateFault
      x-aws-operation-name: ModifyGlobalCluster
      x-content-type: text/xml
      x-accepts:
      - text/xml
  /#Action=RebootDBInstance:
    get:
      description: "<p>You might need to reboot your instance, usually for maintenance\
        \ reasons. For example, if you make certain changes, or if you change the\
        \ cluster parameter group that is associated with the instance, you must reboot\
        \ the instance for the changes to take effect. </p> <p>Rebooting an instance\
        \ restarts the database engine service. Rebooting an instance results in a\
        \ momentary outage, during which the instance status is set to <i>rebooting</i>.\
        \ </p>"
      operationId: GET_RebootDBInstance
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: <p>The instance identifier. This parameter is stored as a lowercase
          string.</p> <p>Constraints:</p> <ul> <li> <p>Must match the identifier of
          an existing <code>DBInstance</code>.</p> </li> </ul>
        explode: true
        in: query
        name: DBInstanceIdentifier
        required: true
        schema:
          type: string
        style: form
      - description: "<p> When <code>true</code>, the reboot is conducted through\
          \ a Multi-AZ failover. </p> <p>Constraint: You can't specify <code>true</code>\
          \ if the instance is not configured for Multi-AZ.</p>"
        explode: true
        in: query
        name: ForceFailover
        required: false
        schema:
          type: boolean
        style: form
      - explode: true
        in: query
        name: Action
        required: true
        schema:
          enum:
          - RebootDBInstance
          type: string
        style: form
      - explode: true
        in: query
        name: Version
        required: true
        schema:
          enum:
          - 2014-10-31
          type: string
        style: form
      responses:
        "200":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/RebootDBInstanceResult'
          description: Success
        "480":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidDBInstanceStateFault'
          description: InvalidDBInstanceStateFault
        "481":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DBInstanceNotFoundFault'
          description: DBInstanceNotFoundFault
      x-aws-operation-name: RebootDBInstance
      x-accepts:
      - text/xml
    post:
      description: "<p>You might need to reboot your instance, usually for maintenance\
        \ reasons. For example, if you make certain changes, or if you change the\
        \ cluster parameter group that is associated with the instance, you must reboot\
        \ the instance for the changes to take effect. </p> <p>Rebooting an instance\
        \ restarts the database engine service. Rebooting an instance results in a\
        \ momentary outage, during which the instance status is set to <i>rebooting</i>.\
        \ </p>"
      operationId: POST_RebootDBInstance
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: true
        in: query
        name: Action
        required: true
        schema:
          enum:
          - RebootDBInstance
          type: string
        style: form
      - explode: true
        in: query
        name: Version
        required: true
        schema:
          enum:
          - 2014-10-31
          type: string
        style: form
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/RebootDBInstanceMessage'
      responses:
        "200":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/RebootDBInstanceResult'
          description: Success
        "480":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidDBInstanceStateFault'
          description: InvalidDBInstanceStateFault
        "481":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DBInstanceNotFoundFault'
          description: DBInstanceNotFoundFault
      x-aws-operation-name: RebootDBInstance
      x-content-type: text/xml
      x-accepts:
      - text/xml
  /#Action=RemoveFromGlobalCluster:
    get:
      description: <p>Detaches an Amazon DocumentDB secondary cluster from a global
        cluster. The cluster becomes a standalone cluster with read-write capability
        instead of being read-only and receiving data from a primary in a different
        region. </p> <note> <p>This action only applies to Amazon DocumentDB clusters.</p>
        </note>
      operationId: GET_RemoveFromGlobalCluster
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: 'The cluster identifier to detach from the Amazon DocumentDB
          global cluster. '
        explode: true
        in: query
        name: GlobalClusterIdentifier
        required: true
        schema:
          maxLength: 255
          minLength: 1
          pattern: "[A-Za-z][0-9A-Za-z-:._]*"
          type: string
        style: form
      - description: 'The Amazon Resource Name (ARN) identifying the cluster that
          was detached from the Amazon DocumentDB global cluster. '
        explode: true
        in: query
        name: DbClusterIdentifier
        required: true
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: Action
        required: true
        schema:
          enum:
          - RemoveFromGlobalCluster
          type: string
        style: form
      - explode: true
        in: query
        name: Version
        required: true
        schema:
          enum:
          - 2014-10-31
          type: string
        style: form
      responses:
        "200":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/RemoveFromGlobalClusterResult'
          description: Success
        "480":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/GlobalClusterNotFoundFault'
          description: GlobalClusterNotFoundFault
        "481":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidGlobalClusterStateFault'
          description: InvalidGlobalClusterStateFault
        "482":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DBClusterNotFoundFault'
          description: DBClusterNotFoundFault
      x-aws-operation-name: RemoveFromGlobalCluster
      x-accepts:
      - text/xml
    post:
      description: <p>Detaches an Amazon DocumentDB secondary cluster from a global
        cluster. The cluster becomes a standalone cluster with read-write capability
        instead of being read-only and receiving data from a primary in a different
        region. </p> <note> <p>This action only applies to Amazon DocumentDB clusters.</p>
        </note>
      operationId: POST_RemoveFromGlobalCluster
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: true
        in: query
        name: Action
        required: true
        schema:
          enum:
          - RemoveFromGlobalCluster
          type: string
        style: form
      - explode: true
        in: query
        name: Version
        required: true
        schema:
          enum:
          - 2014-10-31
          type: string
        style: form
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/RemoveFromGlobalClusterMessage'
      responses:
        "200":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/RemoveFromGlobalClusterResult'
          description: Success
        "480":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/GlobalClusterNotFoundFault'
          description: GlobalClusterNotFoundFault
        "481":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidGlobalClusterStateFault'
          description: InvalidGlobalClusterStateFault
        "482":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DBClusterNotFoundFault'
          description: DBClusterNotFoundFault
      x-aws-operation-name: RemoveFromGlobalCluster
      x-content-type: text/xml
      x-accepts:
      - text/xml
  /#Action=RemoveSourceIdentifierFromSubscription:
    get:
      description: Removes a source identifier from an existing Amazon DocumentDB
        event notification subscription.
      operationId: GET_RemoveSourceIdentifierFromSubscription
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The name of the Amazon DocumentDB event notification subscription
          that you want to remove a source identifier from.
        explode: true
        in: query
        name: SubscriptionName
        required: true
        schema:
          type: string
        style: form
      - description: " The source identifier to be removed from the subscription,\
          \ such as the instance identifier for an instance, or the name of a security\
          \ group. "
        explode: true
        in: query
        name: SourceIdentifier
        required: true
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: Action
        required: true
        schema:
          enum:
          - RemoveSourceIdentifierFromSubscription
          type: string
        style: form
      - explode: true
        in: query
        name: Version
        required: true
        schema:
          enum:
          - 2014-10-31
          type: string
        style: form
      responses:
        "200":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/RemoveSourceIdentifierFromSubscriptionResult'
          description: Success
        "480":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/SubscriptionNotFoundFault'
          description: SubscriptionNotFoundFault
        "481":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/SourceNotFoundFault'
          description: SourceNotFoundFault
      x-aws-operation-name: RemoveSourceIdentifierFromSubscription
      x-accepts:
      - text/xml
    post:
      description: Removes a source identifier from an existing Amazon DocumentDB
        event notification subscription.
      operationId: POST_RemoveSourceIdentifierFromSubscription
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: true
        in: query
        name: Action
        required: true
        schema:
          enum:
          - RemoveSourceIdentifierFromSubscription
          type: string
        style: form
      - explode: true
        in: query
        name: Version
        required: true
        schema:
          enum:
          - 2014-10-31
          type: string
        style: form
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/RemoveSourceIdentifierFromSubscriptionMessage'
      responses:
        "200":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/RemoveSourceIdentifierFromSubscriptionResult'
          description: Success
        "480":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/SubscriptionNotFoundFault'
          description: SubscriptionNotFoundFault
        "481":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/SourceNotFoundFault'
          description: SourceNotFoundFault
      x-aws-operation-name: RemoveSourceIdentifierFromSubscription
      x-content-type: text/xml
      x-accepts:
      - text/xml
  /#Action=RemoveTagsFromResource:
    get:
      description: Removes metadata tags from an Amazon DocumentDB resource.
      operationId: GET_RemoveTagsFromResource
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The Amazon DocumentDB resource that the tags are removed from.
          This value is an Amazon Resource Name (ARN).
        explode: true
        in: query
        name: ResourceName
        required: true
        schema:
          type: string
        style: form
      - description: The tag key (name) of the tag to be removed.
        explode: true
        in: query
        name: TagKeys
        required: true
        schema:
          items:
            $ref: '#/components/schemas/String'
          type: array
        style: form
      - explode: true
        in: query
        name: Action
        required: true
        schema:
          enum:
          - RemoveTagsFromResource
          type: string
        style: form
      - explode: true
        in: query
        name: Version
        required: true
        schema:
          enum:
          - 2014-10-31
          type: string
        style: form
      responses:
        "200":
          description: Success
        "480":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DBInstanceNotFoundFault'
          description: DBInstanceNotFoundFault
        "481":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DBSnapshotNotFoundFault'
          description: DBSnapshotNotFoundFault
        "482":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DBClusterNotFoundFault'
          description: DBClusterNotFoundFault
      x-aws-operation-name: RemoveTagsFromResource
      x-accepts:
      - text/xml
    post:
      description: Removes metadata tags from an Amazon DocumentDB resource.
      operationId: POST_RemoveTagsFromResource
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: true
        in: query
        name: Action
        required: true
        schema:
          enum:
          - RemoveTagsFromResource
          type: string
        style: form
      - explode: true
        in: query
        name: Version
        required: true
        schema:
          enum:
          - 2014-10-31
          type: string
        style: form
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/RemoveTagsFromResourceMessage'
      responses:
        "200":
          description: Success
        "480":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DBInstanceNotFoundFault'
          description: DBInstanceNotFoundFault
        "481":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DBSnapshotNotFoundFault'
          description: DBSnapshotNotFoundFault
        "482":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DBClusterNotFoundFault'
          description: DBClusterNotFoundFault
      x-aws-operation-name: RemoveTagsFromResource
      x-content-type: text/xml
      x-accepts:
      - text/xml
  /#Action=ResetDBClusterParameterGroup:
    get:
      description: "<p> Modifies the parameters of a cluster parameter group to the\
        \ default value. To reset specific parameters, submit a list of the following:\
        \ <code>ParameterName</code> and <code>ApplyMethod</code>. To reset the entire\
        \ cluster parameter group, specify the <code>DBClusterParameterGroupName</code>\
        \ and <code>ResetAllParameters</code> parameters. </p> <p> When you reset\
        \ the entire group, dynamic parameters are updated immediately and static\
        \ parameters are set to <code>pending-reboot</code> to take effect on the\
        \ next DB instance reboot.</p>"
      operationId: GET_ResetDBClusterParameterGroup
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The name of the cluster parameter group to reset.
        explode: true
        in: query
        name: DBClusterParameterGroupName
        required: true
        schema:
          type: string
        style: form
      - description: "A value that is set to <code>true</code> to reset all parameters\
          \ in the cluster parameter group to their default values, and <code>false</code>\
          \ otherwise. You can't use this parameter if there is a list of parameter\
          \ names specified for the <code>Parameters</code> parameter."
        explode: true
        in: query
        name: ResetAllParameters
        required: false
        schema:
          type: boolean
        style: form
      - description: A list of parameter names in the cluster parameter group to reset
          to the default values. You can't use this parameter if the <code>ResetAllParameters</code>
          parameter is set to <code>true</code>.
        explode: true
        in: query
        name: Parameters
        required: false
        schema:
          items:
            $ref: '#/components/schemas/GET_ModifyDBClusterParameterGroup_Parameters_parameter_inner'
          type: array
        style: form
      - explode: true
        in: query
        name: Action
        required: true
        schema:
          enum:
          - ResetDBClusterParameterGroup
          type: string
        style: form
      - explode: true
        in: query
        name: Version
        required: true
        schema:
          enum:
          - 2014-10-31
          type: string
        style: form
      responses:
        "200":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DBClusterParameterGroupNameMessage'
          description: Success
        "480":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidDBParameterGroupStateFault'
          description: InvalidDBParameterGroupStateFault
        "481":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DBParameterGroupNotFoundFault'
          description: DBParameterGroupNotFoundFault
      x-aws-operation-name: ResetDBClusterParameterGroup
      x-accepts:
      - text/xml
    post:
      description: "<p> Modifies the parameters of a cluster parameter group to the\
        \ default value. To reset specific parameters, submit a list of the following:\
        \ <code>ParameterName</code> and <code>ApplyMethod</code>. To reset the entire\
        \ cluster parameter group, specify the <code>DBClusterParameterGroupName</code>\
        \ and <code>ResetAllParameters</code> parameters. </p> <p> When you reset\
        \ the entire group, dynamic parameters are updated immediately and static\
        \ parameters are set to <code>pending-reboot</code> to take effect on the\
        \ next DB instance reboot.</p>"
      operationId: POST_ResetDBClusterParameterGroup
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: true
        in: query
        name: Action
        required: true
        schema:
          enum:
          - ResetDBClusterParameterGroup
          type: string
        style: form
      - explode: true
        in: query
        name: Version
        required: true
        schema:
          enum:
          - 2014-10-31
          type: string
        style: form
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/ResetDBClusterParameterGroupMessage'
      responses:
        "200":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DBClusterParameterGroupNameMessage'
          description: Success
        "480":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidDBParameterGroupStateFault'
          description: InvalidDBParameterGroupStateFault
        "481":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DBParameterGroupNotFoundFault'
          description: DBParameterGroupNotFoundFault
      x-aws-operation-name: ResetDBClusterParameterGroup
      x-content-type: text/xml
      x-accepts:
      - text/xml
  /#Action=RestoreDBClusterFromSnapshot:
    get:
      description: "<p>Creates a new cluster from a snapshot or cluster snapshot.</p>\
        \ <p>If a snapshot is specified, the target cluster is created from the source\
        \ DB snapshot with a default configuration and default security group.</p>\
        \ <p>If a cluster snapshot is specified, the target cluster is created from\
        \ the source cluster restore point with the same configuration as the original\
        \ source DB cluster, except that the new cluster is created with the default\
        \ security group.</p>"
      operationId: GET_RestoreDBClusterFromSnapshot
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: Provides the list of Amazon EC2 Availability Zones that instances
          in the restored DB cluster can be created in.
        explode: true
        in: query
        name: AvailabilityZones
        required: false
        schema:
          items:
            allOf:
            - $ref: '#/components/schemas/String'
            - xml:
                name: AvailabilityZone
          type: array
        style: form
      - description: "<p>The name of the cluster to create from the snapshot or cluster\
          \ snapshot. This parameter isn't case sensitive.</p> <p>Constraints:</p>\
          \ <ul> <li> <p>Must contain from 1 to 63 letters, numbers, or hyphens.</p>\
          \ </li> <li> <p>The first character must be a letter.</p> </li> <li> <p>Cannot\
          \ end with a hyphen or contain two consecutive hyphens.</p> </li> </ul>\
          \ <p>Example: <code>my-snapshot-id</code> </p>"
        explode: true
        in: query
        name: DBClusterIdentifier
        required: true
        schema:
          type: string
        style: form
      - description: "<p>The identifier for the snapshot or cluster snapshot to restore\
          \ from.</p> <p>You can use either the name or the Amazon Resource Name (ARN)\
          \ to specify a cluster snapshot. However, you can use only the ARN to specify\
          \ a snapshot.</p> <p>Constraints:</p> <ul> <li> <p>Must match the identifier\
          \ of an existing snapshot.</p> </li> </ul>"
        explode: true
        in: query
        name: SnapshotIdentifier
        required: true
        schema:
          type: string
        style: form
      - description: "<p>The database engine to use for the new cluster.</p> <p>Default:\
          \ The same as source.</p> <p>Constraint: Must be compatible with the engine\
          \ of the source.</p>"
        explode: true
        in: query
        name: Engine
        required: true
        schema:
          type: string
        style: form
      - description: The version of the database engine to use for the new cluster.
        explode: true
        in: query
        name: EngineVersion
        required: false
        schema:
          type: string
        style: form
      - description: "<p>The port number on which the new cluster accepts connections.</p>\
          \ <p>Constraints: Must be a value from <code>1150</code> to <code>65535</code>.</p>\
          \ <p>Default: The same port as the original cluster.</p>"
        explode: true
        in: query
        name: Port
        required: false
        schema:
          type: integer
        style: form
      - description: "<p>The name of the subnet group to use for the new cluster.</p>\
          \ <p>Constraints: If provided, must match the name of an existing <code>DBSubnetGroup</code>.</p>\
          \ <p>Example: <code>mySubnetgroup</code> </p>"
        explode: true
        in: query
        name: DBSubnetGroupName
        required: false
        schema:
          type: string
        style: form
      - description: A list of virtual private cloud (VPC) security groups that the
          new cluster will belong to.
        explode: true
        in: query
        name: VpcSecurityGroupIds
        required: false
        schema:
          items:
            allOf:
            - $ref: '#/components/schemas/String'
            - xml:
                name: VpcSecurityGroupId
          type: array
        style: form
      - description: The tags to be assigned to the restored cluster.
        explode: true
        in: query
        name: Tags
        required: false
        schema:
          items:
            $ref: '#/components/schemas/GET_AddTagsToResource_Tags_parameter_inner'
          type: array
        style: form
      - description: "<p>The KMS key identifier to use when restoring an encrypted\
          \ cluster from a DB snapshot or cluster snapshot.</p> <p>The KMS key identifier\
          \ is the Amazon Resource Name (ARN) for the KMS encryption key. If you are\
          \ restoring a cluster with the same Amazon Web Services account that owns\
          \ the KMS encryption key used to encrypt the new cluster, then you can use\
          \ the KMS key alias instead of the ARN for the KMS encryption key.</p> <p>If\
          \ you do not specify a value for the <code>KmsKeyId</code> parameter, then\
          \ the following occurs:</p> <ul> <li> <p>If the snapshot or cluster snapshot\
          \ in <code>SnapshotIdentifier</code> is encrypted, then the restored cluster\
          \ is encrypted using the KMS key that was used to encrypt the snapshot or\
          \ the cluster snapshot.</p> </li> <li> <p>If the snapshot or the cluster\
          \ snapshot in <code>SnapshotIdentifier</code> is not encrypted, then the\
          \ restored DB cluster is not encrypted.</p> </li> </ul>"
        explode: true
        in: query
        name: KmsKeyId
        required: false
        schema:
          type: string
        style: form
      - description: A list of log types that must be enabled for exporting to Amazon
          CloudWatch Logs.
        explode: true
        in: query
        name: EnableCloudwatchLogsExports
        required: false
        schema:
          items:
            $ref: '#/components/schemas/String'
          type: array
        style: form
      - description: "Specifies whether this cluster can be deleted. If <code>DeletionProtection</code>\
          \ is enabled, the cluster cannot be deleted unless it is modified and <code>DeletionProtection</code>\
          \ is disabled. <code>DeletionProtection</code> protects clusters from being\
          \ accidentally deleted."
        explode: true
        in: query
        name: DeletionProtection
        required: false
        schema:
          type: boolean
        style: form
      - description: "<p>The name of the DB cluster parameter group to associate with\
          \ this DB cluster.</p> <p> <i>Type:</i> String. \_ \_ \_ <i>Required:</i>\
          \ No.</p> <p>If this argument is omitted, the default DB cluster parameter\
          \ group is used. If supplied, must match the name of an existing default\
          \ DB cluster parameter group. The string must consist of from 1 to 255 letters,\
          \ numbers or hyphens. Its first character must be a letter, and it cannot\
          \ end with a hyphen or contain two consecutive hyphens.</p>"
        explode: true
        in: query
        name: DBClusterParameterGroupName
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: Action
        required: true
        schema:
          enum:
          - RestoreDBClusterFromSnapshot
          type: string
        style: form
      - explode: true
        in: query
        name: Version
        required: true
        schema:
          enum:
          - 2014-10-31
          type: string
        style: form
      responses:
        "200":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/RestoreDBClusterFromSnapshotResult'
          description: Success
        "480":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DBClusterAlreadyExistsFault'
          description: DBClusterAlreadyExistsFault
        "481":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DBClusterQuotaExceededFault'
          description: DBClusterQuotaExceededFault
        "482":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/StorageQuotaExceededFault'
          description: StorageQuotaExceededFault
        "483":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DBSubnetGroupNotFoundFault'
          description: DBSubnetGroupNotFoundFault
        "484":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DBSnapshotNotFoundFault'
          description: DBSnapshotNotFoundFault
        "485":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DBClusterSnapshotNotFoundFault'
          description: DBClusterSnapshotNotFoundFault
        "486":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InsufficientDBClusterCapacityFault'
          description: InsufficientDBClusterCapacityFault
        "487":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InsufficientStorageClusterCapacityFault'
          description: InsufficientStorageClusterCapacityFault
        "488":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidDBSnapshotStateFault'
          description: InvalidDBSnapshotStateFault
        "489":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidDBClusterSnapshotStateFault'
          description: InvalidDBClusterSnapshotStateFault
        "490":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/StorageQuotaExceededFault'
          description: StorageQuotaExceededFault
        "491":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidVPCNetworkStateFault'
          description: InvalidVPCNetworkStateFault
        "492":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidRestoreFault'
          description: InvalidRestoreFault
        "493":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DBSubnetGroupNotFoundFault'
          description: DBSubnetGroupNotFoundFault
        "494":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidSubnet'
          description: InvalidSubnet
        "495":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/KMSKeyNotAccessibleFault'
          description: KMSKeyNotAccessibleFault
      x-aws-operation-name: RestoreDBClusterFromSnapshot
      x-accepts:
      - text/xml
    post:
      description: "<p>Creates a new cluster from a snapshot or cluster snapshot.</p>\
        \ <p>If a snapshot is specified, the target cluster is created from the source\
        \ DB snapshot with a default configuration and default security group.</p>\
        \ <p>If a cluster snapshot is specified, the target cluster is created from\
        \ the source cluster restore point with the same configuration as the original\
        \ source DB cluster, except that the new cluster is created with the default\
        \ security group.</p>"
      operationId: POST_RestoreDBClusterFromSnapshot
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: true
        in: query
        name: Action
        required: true
        schema:
          enum:
          - RestoreDBClusterFromSnapshot
          type: string
        style: form
      - explode: true
        in: query
        name: Version
        required: true
        schema:
          enum:
          - 2014-10-31
          type: string
        style: form
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/RestoreDBClusterFromSnapshotMessage'
      responses:
        "200":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/RestoreDBClusterFromSnapshotResult'
          description: Success
        "480":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DBClusterAlreadyExistsFault'
          description: DBClusterAlreadyExistsFault
        "481":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DBClusterQuotaExceededFault'
          description: DBClusterQuotaExceededFault
        "482":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/StorageQuotaExceededFault'
          description: StorageQuotaExceededFault
        "483":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DBSubnetGroupNotFoundFault'
          description: DBSubnetGroupNotFoundFault
        "484":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DBSnapshotNotFoundFault'
          description: DBSnapshotNotFoundFault
        "485":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DBClusterSnapshotNotFoundFault'
          description: DBClusterSnapshotNotFoundFault
        "486":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InsufficientDBClusterCapacityFault'
          description: InsufficientDBClusterCapacityFault
        "487":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InsufficientStorageClusterCapacityFault'
          description: InsufficientStorageClusterCapacityFault
        "488":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidDBSnapshotStateFault'
          description: InvalidDBSnapshotStateFault
        "489":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidDBClusterSnapshotStateFault'
          description: InvalidDBClusterSnapshotStateFault
        "490":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/StorageQuotaExceededFault'
          description: StorageQuotaExceededFault
        "491":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidVPCNetworkStateFault'
          description: InvalidVPCNetworkStateFault
        "492":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidRestoreFault'
          description: InvalidRestoreFault
        "493":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DBSubnetGroupNotFoundFault'
          description: DBSubnetGroupNotFoundFault
        "494":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidSubnet'
          description: InvalidSubnet
        "495":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/KMSKeyNotAccessibleFault'
          description: KMSKeyNotAccessibleFault
      x-aws-operation-name: RestoreDBClusterFromSnapshot
      x-content-type: text/xml
      x-accepts:
      - text/xml
  /#Action=RestoreDBClusterToPointInTime:
    get:
      description: "Restores a cluster to an arbitrary point in time. Users can restore\
        \ to any point in time before <code>LatestRestorableTime</code> for up to\
        \ <code>BackupRetentionPeriod</code> days. The target cluster is created from\
        \ the source cluster with the same configuration as the original cluster,\
        \ except that the new cluster is created with the default security group. "
      operationId: GET_RestoreDBClusterToPointInTime
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: "<p>The name of the new cluster to be created.</p> <p>Constraints:</p>\
          \ <ul> <li> <p>Must contain from 1 to 63 letters, numbers, or hyphens.</p>\
          \ </li> <li> <p>The first character must be a letter.</p> </li> <li> <p>Cannot\
          \ end with a hyphen or contain two consecutive hyphens.</p> </li> </ul>"
        explode: true
        in: query
        name: DBClusterIdentifier
        required: true
        schema:
          type: string
        style: form
      - description: "<p>The type of restore to be performed. You can specify one\
          \ of the following values:</p> <ul> <li> <p> <code>full-copy</code> - The\
          \ new DB cluster is restored as a full copy of the source DB cluster.</p>\
          \ </li> <li> <p> <code>copy-on-write</code> - The new DB cluster is restored\
          \ as a clone of the source DB cluster.</p> </li> </ul> <p>Constraints: You\
          \ can't specify <code>copy-on-write</code> if the engine version of the\
          \ source DB cluster is earlier than 1.11.</p> <p>If you don't specify a\
          \ <code>RestoreType</code> value, then the new DB cluster is restored as\
          \ a full copy of the source DB cluster.</p>"
        explode: true
        in: query
        name: RestoreType
        required: false
        schema:
          type: string
        style: form
      - description: <p>The identifier of the source cluster from which to restore.</p>
          <p>Constraints:</p> <ul> <li> <p>Must match the identifier of an existing
          <code>DBCluster</code>.</p> </li> </ul>
        explode: true
        in: query
        name: SourceDBClusterIdentifier
        required: true
        schema:
          type: string
        style: form
      - description: "<p>The date and time to restore the cluster to.</p> <p>Valid\
          \ values: A time in Universal Coordinated Time (UTC) format.</p> <p>Constraints:</p>\
          \ <ul> <li> <p>Must be before the latest restorable time for the instance.</p>\
          \ </li> <li> <p>Must be specified if the <code>UseLatestRestorableTime</code>\
          \ parameter is not provided.</p> </li> <li> <p>Cannot be specified if the\
          \ <code>UseLatestRestorableTime</code> parameter is <code>true</code>.</p>\
          \ </li> <li> <p>Cannot be specified if the <code>RestoreType</code> parameter\
          \ is <code>copy-on-write</code>.</p> </li> </ul> <p>Example: <code>2015-03-07T23:45:00Z</code>\
          \ </p>"
        explode: true
        in: query
        name: RestoreToTime
        required: false
        schema:
          format: date-time
          type: string
        style: form
      - description: "<p>A value that is set to <code>true</code> to restore the cluster\
          \ to the latest restorable backup time, and <code>false</code> otherwise.\
          \ </p> <p>Default: <code>false</code> </p> <p>Constraints: Cannot be specified\
          \ if the <code>RestoreToTime</code> parameter is provided.</p>"
        explode: true
        in: query
        name: UseLatestRestorableTime
        required: false
        schema:
          type: boolean
        style: form
      - description: "<p>The port number on which the new cluster accepts connections.</p>\
          \ <p>Constraints: Must be a value from <code>1150</code> to <code>65535</code>.\
          \ </p> <p>Default: The default port for the engine.</p>"
        explode: true
        in: query
        name: Port
        required: false
        schema:
          type: integer
        style: form
      - description: "<p>The subnet group name to use for the new cluster.</p> <p>Constraints:\
          \ If provided, must match the name of an existing <code>DBSubnetGroup</code>.</p>\
          \ <p>Example: <code>mySubnetgroup</code> </p>"
        explode: true
        in: query
        name: DBSubnetGroupName
        required: false
        schema:
          type: string
        style: form
      - description: A list of VPC security groups that the new cluster belongs to.
        explode: true
        in: query
        name: VpcSecurityGroupIds
        required: false
        schema:
          items:
            allOf:
            - $ref: '#/components/schemas/String'
            - xml:
                name: VpcSecurityGroupId
          type: array
        style: form
      - description: The tags to be assigned to the restored cluster.
        explode: true
        in: query
        name: Tags
        required: false
        schema:
          items:
            $ref: '#/components/schemas/GET_AddTagsToResource_Tags_parameter_inner'
          type: array
        style: form
      - description: "<p>The KMS key identifier to use when restoring an encrypted\
          \ cluster from an encrypted cluster.</p> <p>The KMS key identifier is the\
          \ Amazon Resource Name (ARN) for the KMS encryption key. If you are restoring\
          \ a cluster with the same Amazon Web Services account that owns the KMS\
          \ encryption key used to encrypt the new cluster, then you can use the KMS\
          \ key alias instead of the ARN for the KMS encryption key.</p> <p>You can\
          \ restore to a new cluster and encrypt the new cluster with an KMS key that\
          \ is different from the KMS key used to encrypt the source cluster. The\
          \ new DB cluster is encrypted with the KMS key identified by the <code>KmsKeyId</code>\
          \ parameter.</p> <p>If you do not specify a value for the <code>KmsKeyId</code>\
          \ parameter, then the following occurs:</p> <ul> <li> <p>If the cluster\
          \ is encrypted, then the restored cluster is encrypted using the KMS key\
          \ that was used to encrypt the source cluster.</p> </li> <li> <p>If the\
          \ cluster is not encrypted, then the restored cluster is not encrypted.</p>\
          \ </li> </ul> <p>If <code>DBClusterIdentifier</code> refers to a cluster\
          \ that is not encrypted, then the restore request is rejected.</p>"
        explode: true
        in: query
        name: KmsKeyId
        required: false
        schema:
          type: string
        style: form
      - description: A list of log types that must be enabled for exporting to Amazon
          CloudWatch Logs.
        explode: true
        in: query
        name: EnableCloudwatchLogsExports
        required: false
        schema:
          items:
            $ref: '#/components/schemas/String'
          type: array
        style: form
      - description: "Specifies whether this cluster can be deleted. If <code>DeletionProtection</code>\
          \ is enabled, the cluster cannot be deleted unless it is modified and <code>DeletionProtection</code>\
          \ is disabled. <code>DeletionProtection</code> protects clusters from being\
          \ accidentally deleted."
        explode: true
        in: query
        name: DeletionProtection
        required: false
        schema:
          type: boolean
        style: form
      - explode: true
        in: query
        name: Action
        required: true
        schema:
          enum:
          - RestoreDBClusterToPointInTime
          type: string
        style: form
      - explode: true
        in: query
        name: Version
        required: true
        schema:
          enum:
          - 2014-10-31
          type: string
        style: form
      responses:
        "200":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/RestoreDBClusterToPointInTimeResult'
          description: Success
        "480":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DBClusterAlreadyExistsFault'
          description: DBClusterAlreadyExistsFault
        "481":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DBClusterNotFoundFault'
          description: DBClusterNotFoundFault
        "482":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DBClusterQuotaExceededFault'
          description: DBClusterQuotaExceededFault
        "483":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DBClusterSnapshotNotFoundFault'
          description: DBClusterSnapshotNotFoundFault
        "484":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DBSubnetGroupNotFoundFault'
          description: DBSubnetGroupNotFoundFault
        "485":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InsufficientDBClusterCapacityFault'
          description: InsufficientDBClusterCapacityFault
        "486":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InsufficientStorageClusterCapacityFault'
          description: InsufficientStorageClusterCapacityFault
        "487":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidDBClusterSnapshotStateFault'
          description: InvalidDBClusterSnapshotStateFault
        "488":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidDBClusterStateFault'
          description: InvalidDBClusterStateFault
        "489":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidDBSnapshotStateFault'
          description: InvalidDBSnapshotStateFault
        "490":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidRestoreFault'
          description: InvalidRestoreFault
        "491":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidSubnet'
          description: InvalidSubnet
        "492":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidVPCNetworkStateFault'
          description: InvalidVPCNetworkStateFault
        "493":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/KMSKeyNotAccessibleFault'
          description: KMSKeyNotAccessibleFault
        "494":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/StorageQuotaExceededFault'
          description: StorageQuotaExceededFault
      x-aws-operation-name: RestoreDBClusterToPointInTime
      x-accepts:
      - text/xml
    post:
      description: "Restores a cluster to an arbitrary point in time. Users can restore\
        \ to any point in time before <code>LatestRestorableTime</code> for up to\
        \ <code>BackupRetentionPeriod</code> days. The target cluster is created from\
        \ the source cluster with the same configuration as the original cluster,\
        \ except that the new cluster is created with the default security group. "
      operationId: POST_RestoreDBClusterToPointInTime
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: true
        in: query
        name: Action
        required: true
        schema:
          enum:
          - RestoreDBClusterToPointInTime
          type: string
        style: form
      - explode: true
        in: query
        name: Version
        required: true
        schema:
          enum:
          - 2014-10-31
          type: string
        style: form
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/RestoreDBClusterToPointInTimeMessage'
      responses:
        "200":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/RestoreDBClusterToPointInTimeResult'
          description: Success
        "480":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DBClusterAlreadyExistsFault'
          description: DBClusterAlreadyExistsFault
        "481":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DBClusterNotFoundFault'
          description: DBClusterNotFoundFault
        "482":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DBClusterQuotaExceededFault'
          description: DBClusterQuotaExceededFault
        "483":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DBClusterSnapshotNotFoundFault'
          description: DBClusterSnapshotNotFoundFault
        "484":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DBSubnetGroupNotFoundFault'
          description: DBSubnetGroupNotFoundFault
        "485":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InsufficientDBClusterCapacityFault'
          description: InsufficientDBClusterCapacityFault
        "486":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InsufficientStorageClusterCapacityFault'
          description: InsufficientStorageClusterCapacityFault
        "487":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidDBClusterSnapshotStateFault'
          description: InvalidDBClusterSnapshotStateFault
        "488":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidDBClusterStateFault'
          description: InvalidDBClusterStateFault
        "489":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidDBSnapshotStateFault'
          description: InvalidDBSnapshotStateFault
        "490":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidRestoreFault'
          description: InvalidRestoreFault
        "491":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidSubnet'
          description: InvalidSubnet
        "492":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidVPCNetworkStateFault'
          description: InvalidVPCNetworkStateFault
        "493":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/KMSKeyNotAccessibleFault'
          description: KMSKeyNotAccessibleFault
        "494":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/StorageQuotaExceededFault'
          description: StorageQuotaExceededFault
      x-aws-operation-name: RestoreDBClusterToPointInTime
      x-content-type: text/xml
      x-accepts:
      - text/xml
  /#Action=StartDBCluster:
    get:
      description: "Restarts the stopped cluster that is specified by <code>DBClusterIdentifier</code>.\
        \ For more information, see <a href=\"https://docs.aws.amazon.com/documentdb/latest/developerguide/db-cluster-stop-start.html\"\
        >Stopping and Starting an Amazon DocumentDB Cluster</a>."
      operationId: GET_StartDBCluster
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: "The identifier of the cluster to restart. Example: <code>docdb-2019-05-28-15-24-52</code> "
        explode: true
        in: query
        name: DBClusterIdentifier
        required: true
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: Action
        required: true
        schema:
          enum:
          - StartDBCluster
          type: string
        style: form
      - explode: true
        in: query
        name: Version
        required: true
        schema:
          enum:
          - 2014-10-31
          type: string
        style: form
      responses:
        "200":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/StartDBClusterResult'
          description: Success
        "480":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DBClusterNotFoundFault'
          description: DBClusterNotFoundFault
        "481":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidDBClusterStateFault'
          description: InvalidDBClusterStateFault
        "482":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidDBInstanceStateFault'
          description: InvalidDBInstanceStateFault
      x-aws-operation-name: StartDBCluster
      x-accepts:
      - text/xml
    post:
      description: "Restarts the stopped cluster that is specified by <code>DBClusterIdentifier</code>.\
        \ For more information, see <a href=\"https://docs.aws.amazon.com/documentdb/latest/developerguide/db-cluster-stop-start.html\"\
        >Stopping and Starting an Amazon DocumentDB Cluster</a>."
      operationId: POST_StartDBCluster
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: true
        in: query
        name: Action
        required: true
        schema:
          enum:
          - StartDBCluster
          type: string
        style: form
      - explode: true
        in: query
        name: Version
        required: true
        schema:
          enum:
          - 2014-10-31
          type: string
        style: form
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/StartDBClusterMessage'
      responses:
        "200":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/StartDBClusterResult'
          description: Success
        "480":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DBClusterNotFoundFault'
          description: DBClusterNotFoundFault
        "481":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidDBClusterStateFault'
          description: InvalidDBClusterStateFault
        "482":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidDBInstanceStateFault'
          description: InvalidDBInstanceStateFault
      x-aws-operation-name: StartDBCluster
      x-content-type: text/xml
      x-accepts:
      - text/xml
  /#Action=StopDBCluster:
    get:
      description: "Stops the running cluster that is specified by <code>DBClusterIdentifier</code>.\
        \ The cluster must be in the <i>available</i> state. For more information,\
        \ see <a href=\"https://docs.aws.amazon.com/documentdb/latest/developerguide/db-cluster-stop-start.html\"\
        >Stopping and Starting an Amazon DocumentDB Cluster</a>."
      operationId: GET_StopDBCluster
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: "The identifier of the cluster to stop. Example: <code>docdb-2019-05-28-15-24-52</code> "
        explode: true
        in: query
        name: DBClusterIdentifier
        required: true
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: Action
        required: true
        schema:
          enum:
          - StopDBCluster
          type: string
        style: form
      - explode: true
        in: query
        name: Version
        required: true
        schema:
          enum:
          - 2014-10-31
          type: string
        style: form
      responses:
        "200":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/StopDBClusterResult'
          description: Success
        "480":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DBClusterNotFoundFault'
          description: DBClusterNotFoundFault
        "481":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidDBClusterStateFault'
          description: InvalidDBClusterStateFault
        "482":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidDBInstanceStateFault'
          description: InvalidDBInstanceStateFault
      x-aws-operation-name: StopDBCluster
      x-accepts:
      - text/xml
    post:
      description: "Stops the running cluster that is specified by <code>DBClusterIdentifier</code>.\
        \ The cluster must be in the <i>available</i> state. For more information,\
        \ see <a href=\"https://docs.aws.amazon.com/documentdb/latest/developerguide/db-cluster-stop-start.html\"\
        >Stopping and Starting an Amazon DocumentDB Cluster</a>."
      operationId: POST_StopDBCluster
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: true
        in: query
        name: Action
        required: true
        schema:
          enum:
          - StopDBCluster
          type: string
        style: form
      - explode: true
        in: query
        name: Version
        required: true
        schema:
          enum:
          - 2014-10-31
          type: string
        style: form
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/StopDBClusterMessage'
      responses:
        "200":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/StopDBClusterResult'
          description: Success
        "480":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DBClusterNotFoundFault'
          description: DBClusterNotFoundFault
        "481":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidDBClusterStateFault'
          description: InvalidDBClusterStateFault
        "482":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidDBInstanceStateFault'
          description: InvalidDBInstanceStateFault
      x-aws-operation-name: StopDBCluster
      x-content-type: text/xml
      x-accepts:
      - text/xml
components:
  parameters:
    X-Amz-Content-Sha256:
      explode: false
      in: header
      name: X-Amz-Content-Sha256
      required: false
      schema:
        type: string
      style: simple
    X-Amz-Date:
      explode: false
      in: header
      name: X-Amz-Date
      required: false
      schema:
        type: string
      style: simple
    X-Amz-Algorithm:
      explode: false
      in: header
      name: X-Amz-Algorithm
      required: false
      schema:
        type: string
      style: simple
    X-Amz-Credential:
      explode: false
      in: header
      name: X-Amz-Credential
      required: false
      schema:
        type: string
      style: simple
    X-Amz-Security-Token:
      explode: false
      in: header
      name: X-Amz-Security-Token
      required: false
      schema:
        type: string
      style: simple
    X-Amz-Signature:
      explode: false
      in: header
      name: X-Amz-Signature
      required: false
      schema:
        type: string
      style: simple
    X-Amz-SignedHeaders:
      explode: false
      in: header
      name: X-Amz-SignedHeaders
      required: false
      schema:
        type: string
      style: simple
  schemas:
    AddSourceIdentifierToSubscriptionResult:
      properties:
        EventSubscription:
          $ref: '#/components/schemas/EventSubscription'
      type: object
    SubscriptionNotFoundFault: {}
    SourceNotFoundFault: {}
    Tag:
      description: Metadata assigned to an Amazon DocumentDB resource consisting of
        a key-value pair.
      properties:
        Key:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: "The required name of the tag. The string value can be from\
              \ 1 to 128 Unicode characters in length and can't be prefixed with \"\
              <code>aws:</code>\" or \"<code>rds:</code>\". The string can contain\
              \ only the set of Unicode letters, digits, white space, '_', '.', '/',\
              \ '=', '+', '-' (Java regex: \"^([\\\\p{L}\\\\p{Z}\\\\p{N}_.:/=+\\\\\
              -]*)$\")."
        Value:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: "The optional value of the tag. The string value can be from\
              \ 1 to 256 Unicode characters in length and can't be prefixed with \"\
              <code>aws:</code>\" or \"<code>rds:</code>\". The string can contain\
              \ only the set of Unicode letters, digits, white space, '_', '.', '/',\
              \ '=', '+', '-' (Java regex: \"^([\\\\p{L}\\\\p{Z}\\\\p{N}_.:/=+\\\\\
              -]*)$\")."
      type: object
    DBInstanceNotFoundFault: {}
    DBSnapshotNotFoundFault: {}
    DBClusterNotFoundFault: {}
    ApplyPendingMaintenanceActionResult:
      properties:
        ResourcePendingMaintenanceActions:
          $ref: '#/components/schemas/ResourcePendingMaintenanceActions'
      type: object
    ResourceNotFoundFault: {}
    InvalidDBClusterStateFault: {}
    InvalidDBInstanceStateFault: {}
    CopyDBClusterParameterGroupResult:
      properties:
        DBClusterParameterGroup:
          $ref: '#/components/schemas/DBClusterParameterGroup'
      type: object
    DBParameterGroupNotFoundFault: {}
    DBParameterGroupQuotaExceededFault: {}
    DBParameterGroupAlreadyExistsFault: {}
    CopyDBClusterSnapshotResult:
      properties:
        DBClusterSnapshot:
          $ref: '#/components/schemas/DBClusterSnapshot'
      type: object
    DBClusterSnapshotAlreadyExistsFault: {}
    DBClusterSnapshotNotFoundFault: {}
    InvalidDBClusterSnapshotStateFault: {}
    SnapshotQuotaExceededFault: {}
    KMSKeyNotAccessibleFault: {}
    CreateDBClusterResult:
      properties:
        DBCluster:
          $ref: '#/components/schemas/DBCluster'
      type: object
    String:
      type: string
    DBClusterAlreadyExistsFault: {}
    InsufficientStorageClusterCapacityFault: {}
    DBClusterQuotaExceededFault: {}
    StorageQuotaExceededFault: {}
    DBSubnetGroupNotFoundFault: {}
    InvalidVPCNetworkStateFault: {}
    InvalidDBSubnetGroupStateFault: {}
    InvalidSubnet: {}
    DBClusterParameterGroupNotFoundFault: {}
    DBSubnetGroupDoesNotCoverEnoughAZs: {}
    GlobalClusterNotFoundFault: {}
    InvalidGlobalClusterStateFault: {}
    CreateDBClusterParameterGroupResult:
      properties:
        DBClusterParameterGroup:
          $ref: '#/components/schemas/DBClusterParameterGroup'
      type: object
    CreateDBClusterSnapshotResult:
      properties:
        DBClusterSnapshot:
          $ref: '#/components/schemas/DBClusterSnapshot'
      type: object
    CreateDBInstanceResult:
      properties:
        DBInstance:
          $ref: '#/components/schemas/DBInstance'
      type: object
    DBInstanceAlreadyExistsFault: {}
    InsufficientDBInstanceCapacityFault: {}
    DBSecurityGroupNotFoundFault: {}
    InstanceQuotaExceededFault: {}
    StorageTypeNotSupportedFault: {}
    AuthorizationNotFoundFault: {}
    CreateDBSubnetGroupResult:
      properties:
        DBSubnetGroup:
          $ref: '#/components/schemas/DBSubnetGroup'
      type: object
    DBSubnetGroupAlreadyExistsFault: {}
    DBSubnetGroupQuotaExceededFault: {}
    DBSubnetQuotaExceededFault: {}
    CreateEventSubscriptionResult:
      properties:
        EventSubscription:
          $ref: '#/components/schemas/EventSubscription'
      type: object
    EventSubscriptionQuotaExceededFault: {}
    SubscriptionAlreadyExistFault: {}
    SNSInvalidTopicFault: {}
    SNSNoAuthorizationFault: {}
    SNSTopicArnNotFoundFault: {}
    SubscriptionCategoryNotFoundFault: {}
    CreateGlobalClusterResult:
      properties:
        GlobalCluster:
          $ref: '#/components/schemas/GlobalCluster'
      type: object
    GlobalClusterAlreadyExistsFault: {}
    GlobalClusterQuotaExceededFault: {}
    DeleteDBClusterResult:
      properties:
        DBCluster:
          $ref: '#/components/schemas/DBCluster'
      type: object
    InvalidDBParameterGroupStateFault: {}
    DeleteDBClusterSnapshotResult:
      properties:
        DBClusterSnapshot:
          $ref: '#/components/schemas/DBClusterSnapshot'
      type: object
    DeleteDBInstanceResult:
      properties:
        DBInstance:
          $ref: '#/components/schemas/DBInstance'
      type: object
    DBSnapshotAlreadyExistsFault: {}
    InvalidDBSubnetStateFault: {}
    DeleteEventSubscriptionResult:
      properties:
        EventSubscription:
          $ref: '#/components/schemas/EventSubscription'
      type: object
    InvalidEventSubscriptionStateFault: {}
    DeleteGlobalClusterResult:
      properties:
        GlobalCluster:
          $ref: '#/components/schemas/GlobalCluster'
      type: object
    CertificateMessage:
      properties:
        Certificates:
          allOf:
          - $ref: '#/components/schemas/CertificateList'
          - description: A list of certificates for this Amazon Web Services account.
        Marker:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: "An optional pagination token provided if the number of records\
              \ retrieved is greater than <code>MaxRecords</code>. If this parameter\
              \ is specified, the marker specifies the next record in the list. Including\
              \ the value of <code>Marker</code> in the next call to <code>DescribeCertificates</code>\
              \ results in the next page of certificates."
      type: object
    Filter:
      description: "<p>A named set of filter values, used to return a more specific\
        \ list of results. You can use a filter to match a set of resources by specific\
        \ criteria, such as IDs.</p> <p>Wildcards are not supported in filters.</p>"
      properties:
        Name:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The name of the filter. Filter names are case sensitive.
        Values:
          allOf:
          - $ref: '#/components/schemas/FilterValueList'
          - description: One or more filter values. Filter values are case sensitive.
      required:
      - Name
      - Values
      type: object
    CertificateNotFoundFault: {}
    DBClusterParameterGroupsMessage:
      description: Represents the output of <a>DBClusterParameterGroups</a>.
      properties:
        Marker:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: "An optional pagination token provided by a previous request.\
              \ If this parameter is specified, the response includes only records\
              \ beyond the marker, up to the value specified by <code>MaxRecords</code>."
        DBClusterParameterGroups:
          allOf:
          - $ref: '#/components/schemas/DBClusterParameterGroupList'
          - description: A list of cluster parameter groups.
      type: object
    DBClusterParameterGroupDetails:
      description: Represents the output of <a>DBClusterParameterGroup</a>.
      properties:
        Parameters:
          allOf:
          - $ref: '#/components/schemas/ParametersList'
          - description: Provides a list of parameters for the cluster parameter group.
        Marker:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: "An optional pagination token provided by a previous request.\
              \ If this parameter is specified, the response includes only records\
              \ beyond the marker, up to the value specified by <code>MaxRecords</code>."
      type: object
    DescribeDBClusterSnapshotAttributesResult:
      properties:
        DBClusterSnapshotAttributesResult:
          $ref: '#/components/schemas/DBClusterSnapshotAttributesResult'
      type: object
    DBClusterSnapshotMessage:
      description: Represents the output of <a>DescribeDBClusterSnapshots</a>.
      properties:
        Marker:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: "An optional pagination token provided by a previous request.\
              \ If this parameter is specified, the response includes only records\
              \ beyond the marker, up to the value specified by <code>MaxRecords</code>."
        DBClusterSnapshots:
          allOf:
          - $ref: '#/components/schemas/DBClusterSnapshotList'
          - description: Provides a list of cluster snapshots.
      type: object
    DBClusterMessage:
      description: Represents the output of <a>DescribeDBClusters</a>.
      properties:
        Marker:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: "An optional pagination token provided by a previous request.\
              \ If this parameter is specified, the response includes only records\
              \ beyond the marker, up to the value specified by <code>MaxRecords</code>."
        DBClusters:
          allOf:
          - $ref: '#/components/schemas/DBClusterList'
          - description: A list of clusters.
      type: object
    DBEngineVersionMessage:
      description: Represents the output of <a>DescribeDBEngineVersions</a>.
      properties:
        Marker:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: "An optional pagination token provided by a previous request.\
              \ If this parameter is specified, the response includes only records\
              \ beyond the marker, up to the value specified by <code>MaxRecords</code>."
        DBEngineVersions:
          allOf:
          - $ref: '#/components/schemas/DBEngineVersionList'
          - description: Detailed information about one or more engine versions.
      type: object
    DBInstanceMessage:
      description: Represents the output of <a>DescribeDBInstances</a>.
      properties:
        Marker:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: "An optional pagination token provided by a previous request.\
              \ If this parameter is specified, the response includes only records\
              \ beyond the marker, up to the value specified by <code>MaxRecords</code>."
        DBInstances:
          allOf:
          - $ref: '#/components/schemas/DBInstanceList'
          - description: 'Detailed information about one or more instances. '
      type: object
    DBSubnetGroupMessage:
      description: Represents the output of <a>DescribeDBSubnetGroups</a>.
      properties:
        Marker:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: "An optional pagination token provided by a previous request.\
              \ If this parameter is specified, the response includes only records\
              \ beyond the marker, up to the value specified by <code>MaxRecords</code>."
        DBSubnetGroups:
          allOf:
          - $ref: '#/components/schemas/DBSubnetGroups'
          - description: Detailed information about one or more subnet groups.
      type: object
    DescribeEngineDefaultClusterParametersResult:
      properties:
        EngineDefaults:
          $ref: '#/components/schemas/EngineDefaults'
      type: object
    EventCategoriesMessage:
      description: Represents the output of <a>DescribeEventCategories</a>.
      properties:
        EventCategoriesMapList:
          allOf:
          - $ref: '#/components/schemas/EventCategoriesMapList'
          - description: A list of event category maps.
      type: object
    EventSubscriptionsMessage:
      description: Represents the output of <a>DescribeEventSubscriptions</a>.
      properties:
        Marker:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: "An optional pagination token provided by a previous request.\
              \ If this parameter is specified, the response includes only records\
              \ beyond the marker, up to the value specified by <code>MaxRecords</code>."
        EventSubscriptionsList:
          allOf:
          - $ref: '#/components/schemas/EventSubscriptionsList'
          - description: A list of event subscriptions.
      type: object
    EventsMessage:
      description: Represents the output of <a>DescribeEvents</a>.
      properties:
        Marker:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: "An optional pagination token provided by a previous request.\
              \ If this parameter is specified, the response includes only records\
              \ beyond the marker, up to the value specified by <code>MaxRecords</code>."
        Events:
          allOf:
          - $ref: '#/components/schemas/EventList'
          - description: 'Detailed information about one or more events. '
      type: object
    GlobalClustersMessage:
      properties:
        Marker:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: <p/>
        GlobalClusters:
          allOf:
          - $ref: '#/components/schemas/GlobalClusterList'
          - description: <p/>
      type: object
    OrderableDBInstanceOptionsMessage:
      description: Represents the output of <a>DescribeOrderableDBInstanceOptions</a>.
      properties:
        OrderableDBInstanceOptions:
          allOf:
          - $ref: '#/components/schemas/OrderableDBInstanceOptionsList'
          - description: The options that are available for a particular orderable
              instance.
        Marker:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: "An optional pagination token provided by a previous request.\
              \ If this parameter is specified, the response includes only records\
              \ beyond the marker, up to the value specified by <code>MaxRecords</code>."
      type: object
    PendingMaintenanceActionsMessage:
      description: Represents the output of <a>DescribePendingMaintenanceActions</a>.
      properties:
        PendingMaintenanceActions:
          allOf:
          - $ref: '#/components/schemas/PendingMaintenanceActions'
          - description: The maintenance actions to be applied.
        Marker:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: "An optional pagination token provided by a previous request.\
              \ If this parameter is specified, the response includes only records\
              \ beyond the marker, up to the value specified by <code>MaxRecords</code>."
      type: object
    FailoverDBClusterResult:
      properties:
        DBCluster:
          $ref: '#/components/schemas/DBCluster'
      type: object
    TagListMessage:
      description: Represents the output of <a>ListTagsForResource</a>.
      properties:
        TagList:
          allOf:
          - $ref: '#/components/schemas/TagList'
          - description: A list of one or more tags.
      type: object
    ModifyDBClusterResult:
      properties:
        DBCluster:
          $ref: '#/components/schemas/DBCluster'
      type: object
    LogTypeList:
      items:
        $ref: '#/components/schemas/String'
      type: array
    InvalidDBSecurityGroupStateFault: {}
    DBClusterParameterGroupNameMessage:
      description: Contains the name of a cluster parameter group.
      properties:
        DBClusterParameterGroupName:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: <p>The name of a cluster parameter group.</p> <p>Constraints:</p>
              <ul> <li> <p>Must be from 1 to 255 letters or numbers.</p> </li> <li>
              <p>The first character must be a letter.</p> </li> <li> <p>Cannot end
              with a hyphen or contain two consecutive hyphens.</p> </li> </ul> <note>
              <p>This value is stored as a lowercase string.</p> </note>
      type: object
    Parameter:
      description: Detailed information about an individual parameter.
      properties:
        ParameterName:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: Specifies the name of the parameter.
        ParameterValue:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: Specifies the value of the parameter.
        Description:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: Provides a description of the parameter.
        Source:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: Indicates the source of the parameter value.
        ApplyType:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: Specifies the engine-specific parameters type.
        DataType:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: Specifies the valid data type for the parameter.
        AllowedValues:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: Specifies the valid range of values for the parameter.
        IsModifiable:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          - description: ' Indicates whether (<code>true</code>) or not (<code>false</code>)
              the parameter can be modified. Some parameters have security or operational
              implications that prevent them from being changed. '
        MinimumEngineVersion:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The earliest engine version to which the parameter can apply.
        ApplyMethod:
          allOf:
          - $ref: '#/components/schemas/ApplyMethod'
          - description: Indicates when to apply parameter updates.
      type: object
    ModifyDBClusterSnapshotAttributeResult:
      properties:
        DBClusterSnapshotAttributesResult:
          $ref: '#/components/schemas/DBClusterSnapshotAttributesResult'
      type: object
    SharedSnapshotQuotaExceededFault: {}
    ModifyDBInstanceResult:
      properties:
        DBInstance:
          $ref: '#/components/schemas/DBInstance'
      type: object
    DBUpgradeDependencyFailureFault: {}
    ModifyDBSubnetGroupResult:
      properties:
        DBSubnetGroup:
          $ref: '#/components/schemas/DBSubnetGroup'
      type: object
    SubnetAlreadyInUse: {}
    ModifyEventSubscriptionResult:
      properties:
        EventSubscription:
          $ref: '#/components/schemas/EventSubscription'
      type: object
    ModifyGlobalClusterResult:
      properties:
        GlobalCluster:
          $ref: '#/components/schemas/GlobalCluster'
      type: object
    RebootDBInstanceResult:
      properties:
        DBInstance:
          $ref: '#/components/schemas/DBInstance'
      type: object
    RemoveFromGlobalClusterResult:
      properties:
        GlobalCluster:
          $ref: '#/components/schemas/GlobalCluster'
      type: object
    RemoveSourceIdentifierFromSubscriptionResult:
      properties:
        EventSubscription:
          $ref: '#/components/schemas/EventSubscription'
      type: object
    RestoreDBClusterFromSnapshotResult:
      properties:
        DBCluster:
          $ref: '#/components/schemas/DBCluster'
      type: object
    InsufficientDBClusterCapacityFault: {}
    InvalidDBSnapshotStateFault: {}
    InvalidRestoreFault: {}
    RestoreDBClusterToPointInTimeResult:
      properties:
        DBCluster:
          $ref: '#/components/schemas/DBCluster'
      type: object
    StartDBClusterResult:
      properties:
        DBCluster:
          $ref: '#/components/schemas/DBCluster'
      type: object
    StopDBClusterResult:
      properties:
        DBCluster:
          $ref: '#/components/schemas/DBCluster'
      type: object
    AddSourceIdentifierToSubscriptionMessage:
      description: 'Represents the input to <a>AddSourceIdentifierToSubscription</a>. '
      properties:
        SubscriptionName:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The name of the Amazon DocumentDB event notification subscription
              that you want to add a source identifier to.
        SourceIdentifier:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: "<p>The identifier of the event source to be added:</p> <ul>\
              \ <li> <p>If the source type is an instance, a <code>DBInstanceIdentifier</code>\
              \ must be provided.</p> </li> <li> <p>If the source type is a security\
              \ group, a <code>DBSecurityGroupName</code> must be provided.</p> </li>\
              \ <li> <p>If the source type is a parameter group, a <code>DBParameterGroupName</code>\
              \ must be provided.</p> </li> <li> <p>If the source type is a snapshot,\
              \ a <code>DBSnapshotIdentifier</code> must be provided.</p> </li> </ul>"
      required:
      - SourceIdentifier
      - SubscriptionName
      title: AddSourceIdentifierToSubscriptionMessage
      type: object
    EventSubscription:
      description: Detailed information about an event to which you have subscribed.
      properties:
        CustomerAwsId:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The Amazon Web Services customer account that is associated
              with the Amazon DocumentDB event notification subscription.
        CustSubscriptionId:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The Amazon DocumentDB event notification subscription ID.
        SnsTopicArn:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The topic ARN of the Amazon DocumentDB event notification
              subscription.
        Status:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: "<p>The status of the Amazon DocumentDB event notification\
              \ subscription.</p> <p>Constraints:</p> <p>Can be one of the following:\
              \ <code>creating</code>, <code>modifying</code>, <code>deleting</code>,\
              \ <code>active</code>, <code>no-permission</code>, <code>topic-not-exist</code>\
              \ </p> <p>The <code>no-permission</code> status indicates that Amazon\
              \ DocumentDB no longer has permission to post to the SNS topic. The\
              \ <code>topic-not-exist</code> status indicates that the topic was deleted\
              \ after the subscription was created.</p>"
        SubscriptionCreationTime:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The time at which the Amazon DocumentDB event notification
              subscription was created.
        SourceType:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The source type for the Amazon DocumentDB event notification
              subscription.
        SourceIdsList:
          allOf:
          - $ref: '#/components/schemas/SourceIdsList'
          - description: A list of source IDs for the Amazon DocumentDB event notification
              subscription.
        EventCategoriesList:
          allOf:
          - $ref: '#/components/schemas/EventCategoriesList'
          - description: A list of event categories for the Amazon DocumentDB event
              notification subscription.
        Enabled:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          - description: A Boolean value indicating whether the subscription is enabled.
              A value of <code>true</code> indicates that the subscription is enabled.
        EventSubscriptionArn:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The Amazon Resource Name (ARN) for the event subscription.
      type: object
    TagList:
      items:
        $ref: '#/components/schemas/GET_AddTagsToResource_Tags_parameter_inner'
      type: array
    AddTagsToResourceMessage:
      description: 'Represents the input to <a>AddTagsToResource</a>. '
      properties:
        ResourceName:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The Amazon DocumentDB resource that the tags are added to.
              This value is an Amazon Resource Name .
        Tags:
          allOf:
          - $ref: '#/components/schemas/TagList'
          - description: The tags to be assigned to the Amazon DocumentDB resource.
      required:
      - ResourceName
      - Tags
      title: AddTagsToResourceMessage
      type: object
    ApplyMethod:
      enum:
      - immediate
      - pending-reboot
      type: string
    ApplyPendingMaintenanceActionMessage:
      description: 'Represents the input to <a>ApplyPendingMaintenanceAction</a>. '
      properties:
        ResourceIdentifier:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The Amazon Resource Name (ARN) of the resource that the pending
              maintenance action applies to.
        ApplyAction:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: "<p>The pending maintenance action to apply to this resource.</p>\
              \ <p>Valid values: <code>system-update</code>, <code>db-upgrade</code>\
              \ </p>"
        OptInType:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: <p>A value that specifies the type of opt-in request or undoes
              an opt-in request. An opt-in request of type <code>immediate</code>
              can't be undone.</p> <p>Valid values:</p> <ul> <li> <p> <code>immediate</code>
              - Apply the maintenance action immediately.</p> </li> <li> <p> <code>next-maintenance</code>
              - Apply the maintenance action during the next maintenance window for
              the resource. </p> </li> <li> <p> <code>undo-opt-in</code> - Cancel
              any existing <code>next-maintenance</code> opt-in requests.</p> </li>
              </ul>
      required:
      - ApplyAction
      - OptInType
      - ResourceIdentifier
      title: ApplyPendingMaintenanceActionMessage
      type: object
    ResourcePendingMaintenanceActions:
      description: 'Represents the output of <a>ApplyPendingMaintenanceAction</a>. '
      properties:
        ResourceIdentifier:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The Amazon Resource Name (ARN) of the resource that has pending
              maintenance actions.
        PendingMaintenanceActionDetails:
          allOf:
          - $ref: '#/components/schemas/PendingMaintenanceActionDetails'
          - description: A list that provides details about the pending maintenance
              actions for the resource.
      type: object
    AttributeValueList:
      items:
        allOf:
        - $ref: '#/components/schemas/String'
        - xml:
            name: AttributeValue
      type: array
    AvailabilityZone:
      description: Information about an Availability Zone.
      properties:
        Name:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The name of the Availability Zone.
      type: object
    AvailabilityZoneList:
      items:
        $ref: '#/components/schemas/AvailabilityZoneList_inner'
      type: array
    AvailabilityZones:
      items:
        allOf:
        - $ref: '#/components/schemas/String'
        - xml:
            name: AvailabilityZone
      type: array
    Boolean:
      type: boolean
    BooleanOptional:
      type: boolean
    TStamp:
      format: date-time
      type: string
    Certificate:
      description: A certificate authority (CA) certificate for an Amazon Web Services
        account.
      properties:
        CertificateIdentifier:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: "<p>The unique key that identifies a certificate.</p> <p>Example:\
              \ <code>rds-ca-2019</code> </p>"
        CertificateType:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: "<p>The type of the certificate.</p> <p>Example: <code>CA</code>\
              \ </p>"
        Thumbprint:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The thumbprint of the certificate.
        ValidFrom:
          allOf:
          - $ref: '#/components/schemas/TStamp'
          - description: "<p>The starting date-time from which the certificate is\
              \ valid.</p> <p>Example: <code>2019-07-31T17:57:09Z</code> </p>"
        ValidTill:
          allOf:
          - $ref: '#/components/schemas/TStamp'
          - description: "<p>The date-time after which the certificate is no longer\
              \ valid.</p> <p>Example: <code>2024-07-31T17:57:09Z</code> </p>"
        CertificateArn:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: "<p>The Amazon Resource Name (ARN) for the certificate.</p>\
              \ <p>Example: <code>arn:aws:rds:us-east-1::cert:rds-ca-2019</code> </p>"
      type: object
    CertificateList:
      items:
        $ref: '#/components/schemas/CertificateList_inner'
      type: array
    CloudwatchLogsExportConfiguration:
      description: <p>The configuration setting for the log types to be enabled for
        export to Amazon CloudWatch Logs for a specific instance or cluster.</p> <p>The
        <code>EnableLogTypes</code> and <code>DisableLogTypes</code> arrays determine
        which logs are exported (or not exported) to CloudWatch Logs. The values within
        these arrays depend on the engine that is being used.</p>
      properties:
        EnableLogTypes:
          allOf:
          - $ref: '#/components/schemas/LogTypeList'
          - description: The list of log types to enable.
        DisableLogTypes:
          allOf:
          - $ref: '#/components/schemas/LogTypeList'
          - description: The list of log types to disable.
      type: object
    CopyDBClusterParameterGroupMessage:
      description: 'Represents the input to <a>CopyDBClusterParameterGroup</a>. '
      properties:
        SourceDBClusterParameterGroupIdentifier:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: "<p>The identifier or Amazon Resource Name (ARN) for the\
              \ source cluster parameter group.</p> <p>Constraints:</p> <ul> <li>\
              \ <p>Must specify a valid cluster parameter group.</p> </li> <li> <p>If\
              \ the source cluster parameter group is in the same Amazon Web Services\
              \ Region as the copy, specify a valid parameter group identifier; for\
              \ example, <code>my-db-cluster-param-group</code>, or a valid ARN.</p>\
              \ </li> <li> <p>If the source parameter group is in a different Amazon\
              \ Web Services Region than the copy, specify a valid cluster parameter\
              \ group ARN; for example, <code>arn:aws:rds:us-east-1:123456789012:sample-cluster:sample-parameter-group</code>.</p>\
              \ </li> </ul>"
        TargetDBClusterParameterGroupIdentifier:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: "<p>The identifier for the copied cluster parameter group.</p>\
              \ <p>Constraints:</p> <ul> <li> <p>Cannot be null, empty, or blank.</p>\
              \ </li> <li> <p>Must contain from 1 to 255 letters, numbers, or hyphens.\
              \ </p> </li> <li> <p>The first character must be a letter.</p> </li>\
              \ <li> <p>Cannot end with a hyphen or contain two consecutive hyphens.\
              \ </p> </li> </ul> <p>Example: <code>my-cluster-param-group1</code>\
              \ </p>"
        TargetDBClusterParameterGroupDescription:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: A description for the copied cluster parameter group.
        Tags:
          allOf:
          - $ref: '#/components/schemas/TagList'
          - description: The tags that are to be assigned to the parameter group.
      required:
      - SourceDBClusterParameterGroupIdentifier
      - TargetDBClusterParameterGroupDescription
      - TargetDBClusterParameterGroupIdentifier
      title: CopyDBClusterParameterGroupMessage
      type: object
    DBClusterParameterGroup:
      description: 'Detailed information about a cluster parameter group. '
      properties:
        DBClusterParameterGroupName:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: Provides the name of the cluster parameter group.
        DBParameterGroupFamily:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: Provides the name of the parameter group family that this
              cluster parameter group is compatible with.
        Description:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: Provides the customer-specified description for this cluster
              parameter group.
        DBClusterParameterGroupArn:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The Amazon Resource Name (ARN) for the cluster parameter
              group.
      type: object
    CopyDBClusterSnapshotMessage:
      description: 'Represents the input to <a>CopyDBClusterSnapshot</a>. '
      properties:
        SourceDBClusterSnapshotIdentifier:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: "<p>The identifier of the cluster snapshot to copy. This\
              \ parameter is not case sensitive.</p> <p>Constraints:</p> <ul> <li>\
              \ <p>Must specify a valid system snapshot in the <i>available</i> state.</p>\
              \ </li> <li> <p>If the source snapshot is in the same Amazon Web Services\
              \ Region as the copy, specify a valid snapshot identifier.</p> </li>\
              \ <li> <p>If the source snapshot is in a different Amazon Web Services\
              \ Region than the copy, specify a valid cluster snapshot ARN.</p> </li>\
              \ </ul> <p>Example: <code>my-cluster-snapshot1</code> </p>"
        TargetDBClusterSnapshotIdentifier:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: "<p>The identifier of the new cluster snapshot to create\
              \ from the source cluster snapshot. This parameter is not case sensitive.</p>\
              \ <p>Constraints:</p> <ul> <li> <p>Must contain from 1 to 63 letters,\
              \ numbers, or hyphens. </p> </li> <li> <p>The first character must be\
              \ a letter.</p> </li> <li> <p>Cannot end with a hyphen or contain two\
              \ consecutive hyphens. </p> </li> </ul> <p>Example: <code>my-cluster-snapshot2</code>\
              \ </p>"
        KmsKeyId:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: "<p>The KMS key ID for an encrypted cluster snapshot. The\
              \ KMS key ID is the Amazon Resource Name (ARN), KMS key identifier,\
              \ or the KMS key alias for the KMS encryption key. </p> <p>If you copy\
              \ an encrypted cluster snapshot from your Amazon Web Services account,\
              \ you can specify a value for <code>KmsKeyId</code> to encrypt the copy\
              \ with a new KMS encryption key. If you don't specify a value for <code>KmsKeyId</code>,\
              \ then the copy of the cluster snapshot is encrypted with the same KMS\
              \ key as the source cluster snapshot.</p> <p>If you copy an encrypted\
              \ cluster snapshot that is shared from another Amazon Web Services account,\
              \ then you must specify a value for <code>KmsKeyId</code>.</p> <p>To\
              \ copy an encrypted cluster snapshot to another Amazon Web Services\
              \ Region, set <code>KmsKeyId</code> to the KMS key ID that you want\
              \ to use to encrypt the copy of the cluster snapshot in the destination\
              \ Region. KMS encryption keys are specific to the Amazon Web Services\
              \ Region that they are created in, and you can't use encryption keys\
              \ from one Amazon Web Services Region in another Amazon Web Services\
              \ Region.</p> <p>If you copy an unencrypted cluster snapshot and specify\
              \ a value for the <code>KmsKeyId</code> parameter, an error is returned.</p>"
        PreSignedUrl:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: "<p>The URL that contains a Signature Version 4 signed request\
              \ for the<code>CopyDBClusterSnapshot</code> API action in the Amazon\
              \ Web Services Region that contains the source cluster snapshot to copy.\
              \ You must use the <code>PreSignedUrl</code> parameter when copying\
              \ a cluster snapshot from another Amazon Web Services Region.</p> <p>If\
              \ you are using an Amazon Web Services SDK tool or the CLI, you can\
              \ specify <code>SourceRegion</code> (or <code>--source-region</code>\
              \ for the CLI) instead of specifying <code>PreSignedUrl</code> manually.\
              \ Specifying <code>SourceRegion</code> autogenerates a pre-signed URL\
              \ that is a valid request for the operation that can be executed in\
              \ the source Amazon Web Services Region.</p> <p>The presigned URL must\
              \ be a valid request for the <code>CopyDBClusterSnapshot</code> API\
              \ action that can be executed in the source Amazon Web Services Region\
              \ that contains the cluster snapshot to be copied. The presigned URL\
              \ request must contain the following parameter values:</p> <ul> <li>\
              \ <p> <code>SourceRegion</code> - The ID of the region that contains\
              \ the snapshot to be copied.</p> </li> <li> <p> <code>SourceDBClusterSnapshotIdentifier</code>\
              \ - The identifier for the the encrypted cluster snapshot to be copied.\
              \ This identifier must be in the Amazon Resource Name (ARN) format for\
              \ the source Amazon Web Services Region. For example, if you are copying\
              \ an encrypted cluster snapshot from the us-east-1 Amazon Web Services\
              \ Region, then your <code>SourceDBClusterSnapshotIdentifier</code> looks\
              \ something like the following: <code>arn:aws:rds:us-east-1:12345678012:sample-cluster:sample-cluster-snapshot</code>.</p>\
              \ </li> <li> <p> <code>TargetDBClusterSnapshotIdentifier</code> - The\
              \ identifier for the new cluster snapshot to be created. This parameter\
              \ isn't case sensitive.</p> </li> </ul>"
        CopyTags:
          allOf:
          - $ref: '#/components/schemas/BooleanOptional'
          - description: "Set to <code>true</code> to copy all tags from the source\
              \ cluster snapshot to the target cluster snapshot, and otherwise <code>false</code>.\
              \ The default is <code>false</code>."
        Tags:
          allOf:
          - $ref: '#/components/schemas/TagList'
          - description: The tags to be assigned to the cluster snapshot.
      required:
      - SourceDBClusterSnapshotIdentifier
      - TargetDBClusterSnapshotIdentifier
      title: CopyDBClusterSnapshotMessage
      type: object
    DBClusterSnapshot:
      description: 'Detailed information about a cluster snapshot. '
      properties:
        AvailabilityZones:
          allOf:
          - $ref: '#/components/schemas/AvailabilityZones'
          - description: Provides the list of Amazon EC2 Availability Zones that instances
              in the cluster snapshot can be restored in.
        DBClusterSnapshotIdentifier:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: Specifies the identifier for the cluster snapshot.
        DBClusterIdentifier:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: Specifies the cluster identifier of the cluster that this
              cluster snapshot was created from.
        SnapshotCreateTime:
          allOf:
          - $ref: '#/components/schemas/TStamp'
          - description: "Provides the time when the snapshot was taken, in UTC."
        Engine:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: Specifies the name of the database engine.
        Status:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: Specifies the status of this cluster snapshot.
        Port:
          allOf:
          - $ref: '#/components/schemas/Integer'
          - description: Specifies the port that the cluster was listening on at the
              time of the snapshot.
        VpcId:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: Provides the virtual private cloud (VPC) ID that is associated
              with the cluster snapshot.
        ClusterCreateTime:
          allOf:
          - $ref: '#/components/schemas/TStamp'
          - description: "Specifies the time when the cluster was created, in Universal\
              \ Coordinated Time (UTC)."
        MasterUsername:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: Provides the master user name for the cluster snapshot.
        EngineVersion:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: Provides the version of the database engine for this cluster
              snapshot.
        SnapshotType:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: Provides the type of the cluster snapshot.
        PercentProgress:
          allOf:
          - $ref: '#/components/schemas/Integer'
          - description: Specifies the percentage of the estimated data that has been
              transferred.
        StorageEncrypted:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          - description: Specifies whether the cluster snapshot is encrypted.
        KmsKeyId:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: "If <code>StorageEncrypted</code> is <code>true</code>, the\
              \ KMS key identifier for the encrypted cluster snapshot."
        DBClusterSnapshotArn:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The Amazon Resource Name (ARN) for the cluster snapshot.
        SourceDBClusterSnapshotArn:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: "If the cluster snapshot was copied from a source cluster\
              \ snapshot, the ARN for the source cluster snapshot; otherwise, a null\
              \ value."
      type: object
    IntegerOptional:
      type: integer
    VpcSecurityGroupIdList:
      items:
        allOf:
        - $ref: '#/components/schemas/String'
        - xml:
            name: VpcSecurityGroupId
      type: array
    GlobalClusterIdentifier:
      maxLength: 255
      minLength: 1
      pattern: "[A-Za-z][0-9A-Za-z-:._]*"
      type: string
    CreateDBClusterMessage:
      description: 'Represents the input to <a>CreateDBCluster</a>. '
      properties:
        AvailabilityZones:
          allOf:
          - $ref: '#/components/schemas/AvailabilityZones'
          - description: A list of Amazon EC2 Availability Zones that instances in
              the cluster can be created in.
        BackupRetentionPeriod:
          allOf:
          - $ref: '#/components/schemas/IntegerOptional'
          - description: "<p>The number of days for which automated backups are retained.\
              \ You must specify a minimum value of 1.</p> <p>Default: 1</p> <p>Constraints:</p>\
              \ <ul> <li> <p>Must be a value from 1 to 35.</p> </li> </ul>"
        DBClusterIdentifier:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: "<p>The cluster identifier. This parameter is stored as a\
              \ lowercase string.</p> <p>Constraints:</p> <ul> <li> <p>Must contain\
              \ from 1 to 63 letters, numbers, or hyphens. </p> </li> <li> <p>The\
              \ first character must be a letter.</p> </li> <li> <p>Cannot end with\
              \ a hyphen or contain two consecutive hyphens. </p> </li> </ul> <p>Example:\
              \ <code>my-cluster</code> </p>"
        DBClusterParameterGroupName:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The name of the cluster parameter group to associate with
              this cluster.
        VpcSecurityGroupIds:
          allOf:
          - $ref: '#/components/schemas/VpcSecurityGroupIdList'
          - description: 'A list of EC2 VPC security groups to associate with this
              cluster. '
        DBSubnetGroupName:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: "<p>A subnet group to associate with this cluster.</p> <p>Constraints:\
              \ Must match the name of an existing <code>DBSubnetGroup</code>. Must\
              \ not be default.</p> <p>Example: <code>mySubnetgroup</code> </p>"
        Engine:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: "<p>The name of the database engine to be used for this cluster.</p>\
              \ <p>Valid values: <code>docdb</code> </p>"
        EngineVersion:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: "The version number of the database engine to use. The <code>--engine-version</code>\
              \ will default to the latest major engine version. For production workloads,\
              \ we recommend explicitly declaring this parameter with the intended\
              \ major engine version."
        Port:
          allOf:
          - $ref: '#/components/schemas/IntegerOptional'
          - description: The port number on which the instances in the cluster accept
              connections.
        MasterUsername:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: <p>The name of the master user for the cluster.</p> <p>Constraints:</p>
              <ul> <li> <p>Must be from 1 to 63 letters or numbers.</p> </li> <li>
              <p>The first character must be a letter.</p> </li> <li> <p>Cannot be
              a reserved word for the chosen database engine. </p> </li> </ul>
        MasterUserPassword:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: "<p>The password for the master database user. This password\
              \ can contain any printable ASCII character except forward slash (/),\
              \ double quote (\"), or the \"at\" symbol (@).</p> <p>Constraints: Must\
              \ contain from 8 to 100 characters.</p>"
        PreferredBackupWindow:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: <p>The daily time range during which automated backups are
              created if automated backups are enabled using the <code>BackupRetentionPeriod</code>
              parameter. </p> <p>The default is a 30-minute window selected at random
              from an 8-hour block of time for each Amazon Web Services Region. </p>
              <p>Constraints:</p> <ul> <li> <p>Must be in the format <code>hh24:mi-hh24:mi</code>.</p>
              </li> <li> <p>Must be in Universal Coordinated Time (UTC).</p> </li>
              <li> <p>Must not conflict with the preferred maintenance window. </p>
              </li> <li> <p>Must be at least 30 minutes.</p> </li> </ul>
        PreferredMaintenanceWindow:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: "<p>The weekly time range during which system maintenance\
              \ can occur, in Universal Coordinated Time (UTC).</p> <p>Format: <code>ddd:hh24:mi-ddd:hh24:mi</code>\
              \ </p> <p>The default is a 30-minute window selected at random from\
              \ an 8-hour block of time for each Amazon Web Services Region, occurring\
              \ on a random day of the week.</p> <p>Valid days: Mon, Tue, Wed, Thu,\
              \ Fri, Sat, Sun</p> <p>Constraints: Minimum 30-minute window.</p>"
        Tags:
          allOf:
          - $ref: '#/components/schemas/TagList'
          - description: The tags to be assigned to the cluster.
        StorageEncrypted:
          allOf:
          - $ref: '#/components/schemas/BooleanOptional'
          - description: Specifies whether the cluster is encrypted.
        KmsKeyId:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: "<p>The KMS key identifier for an encrypted cluster.</p>\
              \ <p>The KMS key identifier is the Amazon Resource Name (ARN) for the\
              \ KMS encryption key. If you are creating a cluster using the same Amazon\
              \ Web Services account that owns the KMS encryption key that is used\
              \ to encrypt the new cluster, you can use the KMS key alias instead\
              \ of the ARN for the KMS encryption key.</p> <p>If an encryption key\
              \ is not specified in <code>KmsKeyId</code>: </p> <ul> <li> <p>If the\
              \ <code>StorageEncrypted</code> parameter is <code>true</code>, Amazon\
              \ DocumentDB uses your default encryption key. </p> </li> </ul> <p>KMS\
              \ creates the default encryption key for your Amazon Web Services account.\
              \ Your Amazon Web Services account has a different default encryption\
              \ key for each Amazon Web Services Regions.</p>"
        PreSignedUrl:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: 'Not currently supported. '
        EnableCloudwatchLogsExports:
          allOf:
          - $ref: '#/components/schemas/LogTypeList'
          - description: "A list of log types that need to be enabled for exporting\
              \ to Amazon CloudWatch Logs. You can enable audit logs or profiler logs.\
              \ For more information, see <a href=\"https://docs.aws.amazon.com/documentdb/latest/developerguide/event-auditing.html\"\
              > Auditing Amazon DocumentDB Events</a> and <a href=\"https://docs.aws.amazon.com/documentdb/latest/developerguide/profiling.html\"\
              > Profiling Amazon DocumentDB Operations</a>. "
        DeletionProtection:
          allOf:
          - $ref: '#/components/schemas/BooleanOptional'
          - description: "Specifies whether this cluster can be deleted. If <code>DeletionProtection</code>\
              \ is enabled, the cluster cannot be deleted unless it is modified and\
              \ <code>DeletionProtection</code> is disabled. <code>DeletionProtection</code>\
              \ protects clusters from being accidentally deleted."
        GlobalClusterIdentifier:
          allOf:
          - $ref: '#/components/schemas/GlobalClusterIdentifier'
          - description: The cluster identifier of the new global cluster.
      required:
      - DBClusterIdentifier
      - Engine
      title: CreateDBClusterMessage
      type: object
    CreateDBClusterParameterGroupMessage:
      description: Represents the input of <a>CreateDBClusterParameterGroup</a>.
      properties:
        DBClusterParameterGroupName:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: <p>The name of the cluster parameter group.</p> <p>Constraints:</p>
              <ul> <li> <p>Must not match the name of an existing <code>DBClusterParameterGroup</code>.</p>
              </li> </ul> <note> <p>This value is stored as a lowercase string.</p>
              </note>
        DBParameterGroupFamily:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The cluster parameter group family name.
        Description:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The description for the cluster parameter group.
        Tags:
          allOf:
          - $ref: '#/components/schemas/TagList'
          - description: The tags to be assigned to the cluster parameter group.
      required:
      - DBClusterParameterGroupName
      - DBParameterGroupFamily
      - Description
      title: CreateDBClusterParameterGroupMessage
      type: object
    DBCluster:
      description: 'Detailed information about a cluster. '
      properties:
        AvailabilityZones:
          allOf:
          - $ref: '#/components/schemas/AvailabilityZones'
          - description: Provides the list of Amazon EC2 Availability Zones that instances
              in the cluster can be created in.
        BackupRetentionPeriod:
          allOf:
          - $ref: '#/components/schemas/IntegerOptional'
          - description: Specifies the number of days for which automatic snapshots
              are retained.
        DBClusterIdentifier:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: Contains a user-supplied cluster identifier. This identifier
              is the unique key that identifies a cluster.
        DBClusterParameterGroup:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: Specifies the name of the cluster parameter group for the
              cluster.
        DBSubnetGroup:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: "Specifies information on the subnet group that is associated\
              \ with the cluster, including the name, description, and subnets in\
              \ the subnet group."
        Status:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: Specifies the current state of this cluster.
        PercentProgress:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: Specifies the progress of the operation as a percentage.
        EarliestRestorableTime:
          allOf:
          - $ref: '#/components/schemas/TStamp'
          - description: The earliest time to which a database can be restored with
              point-in-time restore.
        Endpoint:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: Specifies the connection endpoint for the primary instance
              of the cluster.
        ReaderEndpoint:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: "<p>The reader endpoint for the cluster. The reader endpoint\
              \ for a cluster load balances connections across the Amazon DocumentDB\
              \ replicas that are available in a cluster. As clients request new connections\
              \ to the reader endpoint, Amazon DocumentDB distributes the connection\
              \ requests among the Amazon DocumentDB replicas in the cluster. This\
              \ functionality can help balance your read workload across multiple\
              \ Amazon DocumentDB replicas in your cluster. </p> <p>If a failover\
              \ occurs, and the Amazon DocumentDB replica that you are connected to\
              \ is promoted to be the primary instance, your connection is dropped.\
              \ To continue sending your read workload to other Amazon DocumentDB\
              \ replicas in the cluster, you can then reconnect to the reader endpoint.</p>"
        MultiAZ:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          - description: Specifies whether the cluster has instances in multiple Availability
              Zones.
        Engine:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: Provides the name of the database engine to be used for this
              cluster.
        EngineVersion:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: Indicates the database engine version.
        LatestRestorableTime:
          allOf:
          - $ref: '#/components/schemas/TStamp'
          - description: Specifies the latest time to which a database can be restored
              with point-in-time restore.
        Port:
          allOf:
          - $ref: '#/components/schemas/IntegerOptional'
          - description: Specifies the port that the database engine is listening
              on.
        MasterUsername:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: Contains the master user name for the cluster.
        PreferredBackupWindow:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: "Specifies the daily time range during which automated backups\
              \ are created if automated backups are enabled, as determined by the\
              \ <code>BackupRetentionPeriod</code>. "
        PreferredMaintenanceWindow:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: "Specifies the weekly time range during which system maintenance\
              \ can occur, in Universal Coordinated Time (UTC)."
        ReplicationSourceIdentifier:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: Contains the identifier of the source cluster if this cluster
              is a secondary cluster.
        ReadReplicaIdentifiers:
          allOf:
          - $ref: '#/components/schemas/ReadReplicaIdentifierList'
          - description: Contains one or more identifiers of the secondary clusters
              that are associated with this cluster.
        DBClusterMembers:
          allOf:
          - $ref: '#/components/schemas/DBClusterMemberList'
          - description: Provides the list of instances that make up the cluster.
        VpcSecurityGroups:
          allOf:
          - $ref: '#/components/schemas/VpcSecurityGroupMembershipList'
          - description: Provides a list of virtual private cloud (VPC) security groups
              that the cluster belongs to.
        HostedZoneId:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: Specifies the ID that Amazon Route 53 assigns when you create
              a hosted zone.
        StorageEncrypted:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          - description: Specifies whether the cluster is encrypted.
        KmsKeyId:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: "If <code>StorageEncrypted</code> is <code>true</code>, the\
              \ KMS key identifier for the encrypted cluster."
        DbClusterResourceId:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: "The Amazon Web Services Region-unique, immutable identifier\
              \ for the cluster. This identifier is found in CloudTrail log entries\
              \ whenever the KMS key for the cluster is accessed."
        DBClusterArn:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The Amazon Resource Name (ARN) for the cluster.
        AssociatedRoles:
          allOf:
          - $ref: '#/components/schemas/DBClusterRoles'
          - description: Provides a list of the Identity and Access Management (IAM)
              roles that are associated with the cluster. (IAM) roles that are associated
              with a cluster grant permission for the cluster to access other Amazon
              Web Services services on your behalf.
        CloneGroupId:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: Identifies the clone group to which the DB cluster is associated.
        ClusterCreateTime:
          allOf:
          - $ref: '#/components/schemas/TStamp'
          - description: "Specifies the time when the cluster was created, in Universal\
              \ Coordinated Time (UTC)."
        EnabledCloudwatchLogsExports:
          allOf:
          - $ref: '#/components/schemas/LogTypeList'
          - description: A list of log types that this cluster is configured to export
              to Amazon CloudWatch Logs.
        DeletionProtection:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          - description: "Specifies whether this cluster can be deleted. If <code>DeletionProtection</code>\
              \ is enabled, the cluster cannot be deleted unless it is modified and\
              \ <code>DeletionProtection</code> is disabled. <code>DeletionProtection</code>\
              \ protects clusters from being accidentally deleted."
      type: object
    CreateDBClusterSnapshotMessage:
      description: Represents the input of <a>CreateDBClusterSnapshot</a>.
      properties:
        DBClusterSnapshotIdentifier:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: "<p>The identifier of the cluster snapshot. This parameter\
              \ is stored as a lowercase string.</p> <p>Constraints:</p> <ul> <li>\
              \ <p>Must contain from 1 to 63 letters, numbers, or hyphens.</p> </li>\
              \ <li> <p>The first character must be a letter.</p> </li> <li> <p>Cannot\
              \ end with a hyphen or contain two consecutive hyphens. </p> </li> </ul>\
              \ <p>Example: <code>my-cluster-snapshot1</code> </p>"
        DBClusterIdentifier:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: "<p>The identifier of the cluster to create a snapshot for.\
              \ This parameter is not case sensitive.</p> <p>Constraints:</p> <ul>\
              \ <li> <p>Must match the identifier of an existing <code>DBCluster</code>.</p>\
              \ </li> </ul> <p>Example: <code>my-cluster</code> </p>"
        Tags:
          allOf:
          - $ref: '#/components/schemas/TagList'
          - description: The tags to be assigned to the cluster snapshot.
      required:
      - DBClusterIdentifier
      - DBClusterSnapshotIdentifier
      title: CreateDBClusterSnapshotMessage
      type: object
    CreateDBInstanceMessage:
      description: Represents the input to <a>CreateDBInstance</a>.
      properties:
        DBInstanceIdentifier:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: "<p>The instance identifier. This parameter is stored as\
              \ a lowercase string.</p> <p>Constraints:</p> <ul> <li> <p>Must contain\
              \ from 1 to 63 letters, numbers, or hyphens.</p> </li> <li> <p>The first\
              \ character must be a letter.</p> </li> <li> <p>Cannot end with a hyphen\
              \ or contain two consecutive hyphens.</p> </li> </ul> <p>Example: <code>mydbinstance</code>\
              \ </p>"
        DBInstanceClass:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: "The compute and memory capacity of the instance; for example,\
              \ <code>db.r5.large</code>. "
        Engine:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: "<p>The name of the database engine to be used for this instance.</p>\
              \ <p>Valid value: <code>docdb</code> </p>"
        AvailabilityZone:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: "<p>The Amazon EC2 Availability Zone that the instance is\
              \ created in. </p> <p>Default: A random, system-chosen Availability\
              \ Zone in the endpoint's Amazon Web Services Region.</p> <p>Example:\
              \ <code>us-east-1d</code> </p>"
        PreferredMaintenanceWindow:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: "<p>The time range each week during which system maintenance\
              \ can occur, in Universal Coordinated Time (UTC).</p> <p> Format: <code>ddd:hh24:mi-ddd:hh24:mi</code>\
              \ </p> <p>The default is a 30-minute window selected at random from\
              \ an 8-hour block of time for each Amazon Web Services Region, occurring\
              \ on a random day of the week. </p> <p>Valid days: Mon, Tue, Wed, Thu,\
              \ Fri, Sat, Sun</p> <p>Constraints: Minimum 30-minute window.</p>"
        AutoMinorVersionUpgrade:
          allOf:
          - $ref: '#/components/schemas/BooleanOptional'
          - description: "<p>This parameter does not apply to Amazon DocumentDB. Amazon\
              \ DocumentDB does not perform minor version upgrades regardless of the\
              \ value set.</p> <p>Default: <code>false</code> </p>"
        Tags:
          allOf:
          - $ref: '#/components/schemas/TagList'
          - description: The tags to be assigned to the instance. You can assign up
              to 10 tags to an instance.
        DBClusterIdentifier:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The identifier of the cluster that the instance will belong
              to.
        CopyTagsToSnapshot:
          allOf:
          - $ref: '#/components/schemas/BooleanOptional'
          - description: "A value that indicates whether to copy tags from the DB\
              \ instance to snapshots of the DB instance. By default, tags are not\
              \ copied."
        PromotionTier:
          allOf:
          - $ref: '#/components/schemas/IntegerOptional'
          - description: "<p>A value that specifies the order in which an Amazon DocumentDB\
              \ replica is promoted to the primary instance after a failure of the\
              \ existing primary instance.</p> <p>Default: 1</p> <p>Valid values:\
              \ 0-15</p>"
        EnablePerformanceInsights:
          allOf:
          - $ref: '#/components/schemas/BooleanOptional'
          - description: "A value that indicates whether to enable Performance Insights\
              \ for the DB Instance. For more information, see <a href=\"https://docs.aws.amazon.com/documentdb/latest/developerguide/performance-insights.html\"\
              >Using Amazon Performance Insights</a>."
        PerformanceInsightsKMSKeyId:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: "<p>The KMS key identifier for encryption of Performance\
              \ Insights data.</p> <p>The KMS key identifier is the key ARN, key ID,\
              \ alias ARN, or alias name for the KMS key.</p> <p>If you do not specify\
              \ a value for PerformanceInsightsKMSKeyId, then Amazon DocumentDB uses\
              \ your default KMS key. There is a default KMS key for your Amazon Web\
              \ Services account. Your Amazon Web Services account has a different\
              \ default KMS key for each Amazon Web Services region.</p>"
      required:
      - DBClusterIdentifier
      - DBInstanceClass
      - DBInstanceIdentifier
      - Engine
      title: CreateDBInstanceMessage
      type: object
    DBInstance:
      description: 'Detailed information about an instance. '
      properties:
        DBInstanceIdentifier:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: Contains a user-provided database identifier. This identifier
              is the unique key that identifies an instance.
        DBInstanceClass:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: Contains the name of the compute and memory capacity class
              of the instance.
        Engine:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: Provides the name of the database engine to be used for this
              instance.
        DBInstanceStatus:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: Specifies the current state of this database.
        Endpoint:
          $ref: '#/components/schemas/DBInstance_Endpoint'
        InstanceCreateTime:
          allOf:
          - $ref: '#/components/schemas/TStamp'
          - description: Provides the date and time that the instance was created.
        PreferredBackupWindow:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: " Specifies the daily time range during which automated backups\
              \ are created if automated backups are enabled, as determined by the\
              \ <code>BackupRetentionPeriod</code>. "
        BackupRetentionPeriod:
          allOf:
          - $ref: '#/components/schemas/Integer'
          - description: Specifies the number of days for which automatic snapshots
              are retained.
        VpcSecurityGroups:
          allOf:
          - $ref: '#/components/schemas/VpcSecurityGroupMembershipList'
          - description: Provides a list of VPC security group elements that the instance
              belongs to.
        AvailabilityZone:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: Specifies the name of the Availability Zone that the instance
              is located in.
        DBSubnetGroup:
          $ref: '#/components/schemas/DBInstance_DBSubnetGroup'
        PreferredMaintenanceWindow:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: "Specifies the weekly time range during which system maintenance\
              \ can occur, in Universal Coordinated Time (UTC)."
        PendingModifiedValues:
          $ref: '#/components/schemas/DBInstance_PendingModifiedValues'
        LatestRestorableTime:
          allOf:
          - $ref: '#/components/schemas/TStamp'
          - description: Specifies the latest time to which a database can be restored
              with point-in-time restore.
        EngineVersion:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: Indicates the database engine version.
        AutoMinorVersionUpgrade:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          - description: Does not apply. This parameter does not apply to Amazon DocumentDB.
              Amazon DocumentDB does not perform minor version upgrades regardless
              of the value set.
        PubliclyAccessible:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          - description: Not supported. Amazon DocumentDB does not currently support
              public endpoints. The value of <code>PubliclyAccessible</code> is always
              <code>false</code>.
        StatusInfos:
          allOf:
          - $ref: '#/components/schemas/DBInstanceStatusInfoList'
          - description: "The status of a read replica. If the instance is not a read\
              \ replica, this is blank."
        DBClusterIdentifier:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: Contains the name of the cluster that the instance is a member
              of if the instance is a member of a cluster.
        StorageEncrypted:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          - description: Specifies whether or not the instance is encrypted.
        KmsKeyId:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: " If <code>StorageEncrypted</code> is <code>true</code>,\
              \ the KMS key identifier for the encrypted instance. "
        DbiResourceId:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: "The Amazon Web Services Region-unique, immutable identifier\
              \ for the instance. This identifier is found in CloudTrail log entries\
              \ whenever the KMS key for the instance is accessed."
        CACertificateIdentifier:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The identifier of the CA certificate for this DB instance.
        CopyTagsToSnapshot:
          allOf:
          - $ref: '#/components/schemas/BooleanOptional'
          - description: "A value that indicates whether to copy tags from the DB\
              \ instance to snapshots of the DB instance. By default, tags are not\
              \ copied."
        PromotionTier:
          allOf:
          - $ref: '#/components/schemas/IntegerOptional'
          - description: A value that specifies the order in which an Amazon DocumentDB
              replica is promoted to the primary instance after a failure of the existing
              primary instance.
        DBInstanceArn:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The Amazon Resource Name (ARN) for the instance.
        EnabledCloudwatchLogsExports:
          allOf:
          - $ref: '#/components/schemas/LogTypeList'
          - description: A list of log types that this instance is configured to export
              to CloudWatch Logs.
      type: object
    SubnetIdentifierList:
      items:
        allOf:
        - $ref: '#/components/schemas/String'
        - xml:
            name: SubnetIdentifier
      type: array
    CreateDBSubnetGroupMessage:
      description: Represents the input to <a>CreateDBSubnetGroup</a>.
      properties:
        DBSubnetGroupName:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: "<p>The name for the subnet group. This value is stored as\
              \ a lowercase string.</p> <p>Constraints: Must contain no more than\
              \ 255 letters, numbers, periods, underscores, spaces, or hyphens. Must\
              \ not be default.</p> <p>Example: <code>mySubnetgroup</code> </p>"
        DBSubnetGroupDescription:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The description for the subnet group.
        SubnetIds:
          allOf:
          - $ref: '#/components/schemas/SubnetIdentifierList'
          - description: The Amazon EC2 subnet IDs for the subnet group.
        Tags:
          allOf:
          - $ref: '#/components/schemas/TagList'
          - description: The tags to be assigned to the subnet group.
      required:
      - DBSubnetGroupDescription
      - DBSubnetGroupName
      - SubnetIds
      title: CreateDBSubnetGroupMessage
      type: object
    DBSubnetGroup:
      description: 'Detailed information about a subnet group. '
      properties:
        DBSubnetGroupName:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The name of the subnet group.
        DBSubnetGroupDescription:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: Provides the description of the subnet group.
        VpcId:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: Provides the virtual private cloud (VPC) ID of the subnet
              group.
        SubnetGroupStatus:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: Provides the status of the subnet group.
        Subnets:
          allOf:
          - $ref: '#/components/schemas/SubnetList'
          - description: Detailed information about one or more subnets within a subnet
              group.
        DBSubnetGroupArn:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The Amazon Resource Name (ARN) for the DB subnet group.
      type: object
    EventCategoriesList:
      items:
        allOf:
        - $ref: '#/components/schemas/String'
        - xml:
            name: EventCategory
      type: array
    SourceIdsList:
      items:
        allOf:
        - $ref: '#/components/schemas/String'
        - xml:
            name: SourceId
      type: array
    CreateEventSubscriptionMessage:
      description: Represents the input to <a>CreateEventSubscription</a>.
      properties:
        SubscriptionName:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: "<p>The name of the subscription.</p> <p>Constraints: The\
              \ name must be fewer than 255 characters.</p>"
        SnsTopicArn:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The Amazon Resource Name (ARN) of the SNS topic created for
              event notification. Amazon SNS creates the ARN when you create a topic
              and subscribe to it.
        SourceType:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: "<p>The type of source that is generating the events. For\
              \ example, if you want to be notified of events generated by an instance,\
              \ you would set this parameter to <code>db-instance</code>. If this\
              \ value is not specified, all events are returned.</p> <p>Valid values:\
              \ <code>db-instance</code>, <code>db-cluster</code>, <code>db-parameter-group</code>,\
              \ <code>db-security-group</code>, <code>db-cluster-snapshot</code> </p>"
        EventCategories:
          allOf:
          - $ref: '#/components/schemas/EventCategoriesList'
          - description: ' A list of event categories for a <code>SourceType</code>
              that you want to subscribe to. '
        SourceIds:
          allOf:
          - $ref: '#/components/schemas/SourceIdsList'
          - description: "<p>The list of identifiers of the event sources for which\
              \ events are returned. If not specified, then all sources are included\
              \ in the response. An identifier must begin with a letter and must contain\
              \ only ASCII letters, digits, and hyphens; it can't end with a hyphen\
              \ or contain two consecutive hyphens.</p> <p>Constraints:</p> <ul> <li>\
              \ <p>If <code>SourceIds</code> are provided, <code>SourceType</code>\
              \ must also be provided.</p> </li> <li> <p>If the source type is an\
              \ instance, a <code>DBInstanceIdentifier</code> must be provided.</p>\
              \ </li> <li> <p>If the source type is a security group, a <code>DBSecurityGroupName</code>\
              \ must be provided.</p> </li> <li> <p>If the source type is a parameter\
              \ group, a <code>DBParameterGroupName</code> must be provided.</p> </li>\
              \ <li> <p>If the source type is a snapshot, a <code>DBSnapshotIdentifier</code>\
              \ must be provided.</p> </li> </ul>"
        Enabled:
          allOf:
          - $ref: '#/components/schemas/BooleanOptional'
          - description: " A Boolean value; set to <code>true</code> to activate the\
              \ subscription, set to <code>false</code> to create the subscription\
              \ but not active it. "
        Tags:
          allOf:
          - $ref: '#/components/schemas/TagList'
          - description: The tags to be assigned to the event subscription.
      required:
      - SnsTopicArn
      - SubscriptionName
      title: CreateEventSubscriptionMessage
      type: object
    CreateGlobalClusterMessage:
      description: Represents the input to <a>CreateGlobalCluster</a>.
      properties:
        GlobalClusterIdentifier:
          allOf:
          - $ref: '#/components/schemas/GlobalClusterIdentifier'
          - description: The cluster identifier of the new global cluster.
        SourceDBClusterIdentifier:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The Amazon Resource Name (ARN) to use as the primary cluster
              of the global cluster. This parameter is optional.
        Engine:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The name of the database engine to be used for this cluster.
        EngineVersion:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The engine version of the global cluster.
        DeletionProtection:
          allOf:
          - $ref: '#/components/schemas/BooleanOptional'
          - description: 'The deletion protection setting for the new global cluster.
              The global cluster can''t be deleted when deletion protection is enabled. '
        DatabaseName:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: "The name for your database of up to 64 alpha-numeric characters.\
              \ If you do not provide a name, Amazon DocumentDB will not create a\
              \ database in the global cluster you are creating."
        StorageEncrypted:
          allOf:
          - $ref: '#/components/schemas/BooleanOptional'
          - description: 'The storage encryption setting for the new global cluster. '
      required:
      - GlobalClusterIdentifier
      title: CreateGlobalClusterMessage
      type: object
    GlobalCluster:
      description: A data type representing an Amazon DocumentDB global cluster.
      properties:
        GlobalClusterIdentifier:
          allOf:
          - $ref: '#/components/schemas/GlobalClusterIdentifier'
          - description: 'Contains a user-supplied global cluster identifier. This
              identifier is the unique key that identifies a global cluster. '
        GlobalClusterResourceId:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: "The Amazon Web Services Region-unique, immutable identifier\
              \ for the global database cluster. This identifier is found in CloudTrail\
              \ log entries whenever the KMS customer master key (CMK) for the cluster\
              \ is accessed. "
        GlobalClusterArn:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The Amazon Resource Name (ARN) for the global cluster.
        Status:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: Specifies the current state of this global cluster.
        Engine:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: 'The Amazon DocumentDB database engine used by the global
              cluster. '
        EngineVersion:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: Indicates the database engine version.
        DatabaseName:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The default database name within the new global cluster.
        StorageEncrypted:
          allOf:
          - $ref: '#/components/schemas/BooleanOptional'
          - description: The storage encryption setting for the global cluster.
        DeletionProtection:
          allOf:
          - $ref: '#/components/schemas/BooleanOptional'
          - description: The deletion protection setting for the new global cluster.
        GlobalClusterMembers:
          allOf:
          - $ref: '#/components/schemas/GlobalClusterMemberList'
          - description: 'The list of cluster IDs for secondary clusters within the
              global cluster. Currently limited to one item. '
      type: object
    ReadReplicaIdentifierList:
      items:
        allOf:
        - $ref: '#/components/schemas/String'
        - xml:
            name: ReadReplicaIdentifier
      type: array
    DBClusterMemberList:
      items:
        $ref: '#/components/schemas/DBClusterMemberList_inner'
      type: array
    VpcSecurityGroupMembershipList:
      items:
        $ref: '#/components/schemas/VpcSecurityGroupMembershipList_inner'
      type: array
    DBClusterRoles:
      items:
        $ref: '#/components/schemas/DBClusterRoles_inner'
      type: array
    DBClusterList:
      items:
        $ref: '#/components/schemas/DBClusterList_inner'
      type: array
    DBClusterMember:
      description: Contains information about an instance that is part of a cluster.
      properties:
        DBInstanceIdentifier:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: Specifies the instance identifier for this member of the
              cluster.
        IsClusterWriter:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          - description: A value that is <code>true</code> if the cluster member is
              the primary instance for the cluster and <code>false</code> otherwise.
        DBClusterParameterGroupStatus:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: Specifies the status of the cluster parameter group for this
              member of the DB cluster.
        PromotionTier:
          allOf:
          - $ref: '#/components/schemas/IntegerOptional'
          - description: 'A value that specifies the order in which an Amazon DocumentDB
              replica is promoted to the primary instance after a failure of the existing
              primary instance. '
      type: object
    ParametersList:
      items:
        $ref: '#/components/schemas/GET_ModifyDBClusterParameterGroup_Parameters_parameter_inner'
      type: array
    DBClusterParameterGroupList:
      items:
        $ref: '#/components/schemas/DBClusterParameterGroupList_inner'
      type: array
    DBClusterRole:
      description: Describes an Identity and Access Management (IAM) role that is
        associated with a cluster.
      properties:
        RoleArn:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The Amazon Resource Name (ARN) of the IAMrole that is associated
              with the DB cluster.
        Status:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: "<p>Describes the state of association between the IAMrole\
              \ and the cluster. The <code>Status</code> property returns one of the\
              \ following values:</p> <ul> <li> <p> <code>ACTIVE</code> - The IAMrole\
              \ ARN is associated with the cluster and can be used to access other\
              \ Amazon Web Services services on your behalf.</p> </li> <li> <p> <code>PENDING</code>\
              \ - The IAMrole ARN is being associated with the cluster.</p> </li>\
              \ <li> <p> <code>INVALID</code> - The IAMrole ARN is associated with\
              \ the cluster, but the cluster cannot assume the IAMrole to access other\
              \ Amazon Web Services services on your behalf.</p> </li> </ul>"
      type: object
    Integer:
      type: integer
    DBClusterSnapshotAttribute:
      description: <p>Contains the name and values of a manual cluster snapshot attribute.</p>
        <p>Manual cluster snapshot attributes are used to authorize other Amazon Web
        Services accounts to restore a manual cluster snapshot.</p>
      properties:
        AttributeName:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: <p>The name of the manual cluster snapshot attribute.</p>
              <p>The attribute named <code>restore</code> refers to the list of Amazon
              Web Services accounts that have permission to copy or restore the manual
              cluster snapshot.</p>
        AttributeValues:
          allOf:
          - $ref: '#/components/schemas/AttributeValueList'
          - description: "<p>The values for the manual cluster snapshot attribute.</p>\
              \ <p>If the <code>AttributeName</code> field is set to <code>restore</code>,\
              \ then this element returns a list of IDs of the Amazon Web Services\
              \ accounts that are authorized to copy or restore the manual cluster\
              \ snapshot. If a value of <code>all</code> is in the list, then the\
              \ manual cluster snapshot is public and available for any Amazon Web\
              \ Services account to copy or restore.</p>"
      type: object
    DBClusterSnapshotAttributeList:
      items:
        $ref: '#/components/schemas/DBClusterSnapshotAttributeList_inner'
      type: array
    DBClusterSnapshotAttributesResult:
      description: Detailed information about the attributes that are associated with
        a cluster snapshot.
      properties:
        DBClusterSnapshotIdentifier:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The identifier of the cluster snapshot that the attributes
              apply to.
        DBClusterSnapshotAttributes:
          allOf:
          - $ref: '#/components/schemas/DBClusterSnapshotAttributeList'
          - description: The list of attributes and values for the cluster snapshot.
      type: object
    DBClusterSnapshotList:
      items:
        $ref: '#/components/schemas/DBClusterSnapshotList_inner'
      type: array
    ValidUpgradeTargetList:
      items:
        $ref: '#/components/schemas/ValidUpgradeTargetList_inner'
      type: array
    DBEngineVersion:
      description: ' Detailed information about an engine version. '
      properties:
        Engine:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The name of the database engine.
        EngineVersion:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The version number of the database engine.
        DBParameterGroupFamily:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The name of the parameter group family for the database engine.
        DBEngineDescription:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The description of the database engine.
        DBEngineVersionDescription:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The description of the database engine version.
        ValidUpgradeTarget:
          allOf:
          - $ref: '#/components/schemas/ValidUpgradeTargetList'
          - description: A list of engine versions that this database engine version
              can be upgraded to.
        ExportableLogTypes:
          allOf:
          - $ref: '#/components/schemas/LogTypeList'
          - description: The types of logs that the database engine has available
              for export to Amazon CloudWatch Logs.
        SupportsLogExportsToCloudwatchLogs:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          - description: A value that indicates whether the engine version supports
              exporting the log types specified by <code>ExportableLogTypes</code>
              to CloudWatch Logs.
      type: object
    DBEngineVersionList:
      items:
        $ref: '#/components/schemas/DBEngineVersionList_inner'
      type: array
    Endpoint:
      description: Network information for accessing a cluster or instance. Client
        programs must specify a valid endpoint to access these Amazon DocumentDB resources.
      properties:
        Address:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: Specifies the DNS address of the instance.
        Port:
          allOf:
          - $ref: '#/components/schemas/Integer'
          - description: Specifies the port that the database engine is listening
              on.
        HostedZoneId:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: Specifies the ID that Amazon Route 53 assigns when you create
              a hosted zone.
      type: object
    PendingModifiedValues:
      description: " One or more modified settings for an instance. These modified\
        \ settings have been requested, but haven't been applied yet."
      properties:
        DBInstanceClass:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: ' Contains the new <code>DBInstanceClass</code> for the instance
              that will be applied or is currently being applied. '
        AllocatedStorage:
          allOf:
          - $ref: '#/components/schemas/IntegerOptional'
          - description: ' Contains the new <code>AllocatedStorage</code> size for
              then instance that will be applied or is currently being applied. '
        MasterUserPassword:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: Contains the pending or currently in-progress change of the
              master credentials for the instance.
        Port:
          allOf:
          - $ref: '#/components/schemas/IntegerOptional'
          - description: Specifies the pending port for the instance.
        BackupRetentionPeriod:
          allOf:
          - $ref: '#/components/schemas/IntegerOptional'
          - description: Specifies the pending number of days for which automated
              backups are retained.
        MultiAZ:
          allOf:
          - $ref: '#/components/schemas/BooleanOptional'
          - description: Indicates that the Single-AZ instance is to change to a Multi-AZ
              deployment.
        EngineVersion:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: Indicates the database engine version.
        LicenseModel:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: "<p>The license model for the instance.</p> <p>Valid values:\
              \ <code>license-included</code>, <code>bring-your-own-license</code>,\
              \ <code>general-public-license</code> </p>"
        Iops:
          allOf:
          - $ref: '#/components/schemas/IntegerOptional'
          - description: Specifies the new Provisioned IOPS value for the instance
              that will be applied or is currently being applied.
        DBInstanceIdentifier:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: ' Contains the new <code>DBInstanceIdentifier</code> for
              the instance that will be applied or is currently being applied. '
        StorageType:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: Specifies the storage type to be associated with the instance.
        CACertificateIdentifier:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: Specifies the identifier of the certificate authority (CA)
              certificate for the DB instance.
        DBSubnetGroupName:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: 'The new subnet group for the instance. '
        PendingCloudwatchLogsExports:
          $ref: '#/components/schemas/PendingModifiedValues_PendingCloudwatchLogsExports'
      type: object
    DBInstanceStatusInfoList:
      items:
        $ref: '#/components/schemas/DBInstanceStatusInfoList_inner'
      type: array
    DBInstanceList:
      items:
        $ref: '#/components/schemas/DBInstanceList_inner'
      type: array
    DBInstanceStatusInfo:
      description: Provides a list of status information for an instance.
      properties:
        StatusType:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: This value is currently "<code>read replication</code>."
        Normal:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          - description: "A Boolean value that is <code>true</code> if the instance\
              \ is operating normally, or <code>false</code> if the instance is in\
              \ an error state."
        Status:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: "Status of the instance. For a <code>StatusType</code> of\
              \ read replica, the values can be <code>replicating</code>, error, <code>stopped</code>,\
              \ or <code>terminated</code>."
        Message:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: "Details of the error if there is an error for the instance.\
              \ If the instance is not in an error state, this value is blank."
      type: object
    SubnetList:
      items:
        $ref: '#/components/schemas/SubnetList_inner'
      type: array
    DBSubnetGroups:
      items:
        $ref: '#/components/schemas/DBSubnetGroups_inner'
      type: array
    DeleteDBClusterMessage:
      description: Represents the input to <a>DeleteDBCluster</a>.
      properties:
        DBClusterIdentifier:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: <p>The cluster identifier for the cluster to be deleted.
              This parameter isn't case sensitive.</p> <p>Constraints:</p> <ul> <li>
              <p>Must match an existing <code>DBClusterIdentifier</code>.</p> </li>
              </ul>
        SkipFinalSnapshot:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          - description: "<p> Determines whether a final cluster snapshot is created\
              \ before the cluster is deleted. If <code>true</code> is specified,\
              \ no cluster snapshot is created. If <code>false</code> is specified,\
              \ a cluster snapshot is created before the DB cluster is deleted. </p>\
              \ <note> <p>If <code>SkipFinalSnapshot</code> is <code>false</code>,\
              \ you must specify a <code>FinalDBSnapshotIdentifier</code> parameter.</p>\
              \ </note> <p>Default: <code>false</code> </p>"
        FinalDBSnapshotIdentifier:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: "<p> The cluster snapshot identifier of the new cluster snapshot\
              \ created when <code>SkipFinalSnapshot</code> is set to <code>false</code>.\
              \ </p> <note> <p> Specifying this parameter and also setting the <code>SkipFinalShapshot</code>\
              \ parameter to <code>true</code> results in an error. </p> </note> <p>Constraints:</p>\
              \ <ul> <li> <p>Must be from 1 to 255 letters, numbers, or hyphens.</p>\
              \ </li> <li> <p>The first character must be a letter.</p> </li> <li>\
              \ <p>Cannot end with a hyphen or contain two consecutive hyphens.</p>\
              \ </li> </ul>"
      required:
      - DBClusterIdentifier
      title: DeleteDBClusterMessage
      type: object
    DeleteDBClusterParameterGroupMessage:
      description: Represents the input to <a>DeleteDBClusterParameterGroup</a>.
      properties:
        DBClusterParameterGroupName:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: <p>The name of the cluster parameter group.</p> <p>Constraints:</p>
              <ul> <li> <p>Must be the name of an existing cluster parameter group.</p>
              </li> <li> <p>You can't delete a default cluster parameter group.</p>
              </li> <li> <p>Cannot be associated with any clusters.</p> </li> </ul>
      required:
      - DBClusterParameterGroupName
      title: DeleteDBClusterParameterGroupMessage
      type: object
    DeleteDBClusterSnapshotMessage:
      description: Represents the input to <a>DeleteDBClusterSnapshot</a>.
      properties:
        DBClusterSnapshotIdentifier:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: "<p>The identifier of the cluster snapshot to delete.</p>\
              \ <p>Constraints: Must be the name of an existing cluster snapshot in\
              \ the <code>available</code> state.</p>"
      required:
      - DBClusterSnapshotIdentifier
      title: DeleteDBClusterSnapshotMessage
      type: object
    DeleteDBInstanceMessage:
      description: Represents the input to <a>DeleteDBInstance</a>.
      properties:
        DBInstanceIdentifier:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: <p>The instance identifier for the instance to be deleted.
              This parameter isn't case sensitive.</p> <p>Constraints:</p> <ul> <li>
              <p>Must match the name of an existing instance.</p> </li> </ul>
      required:
      - DBInstanceIdentifier
      title: DeleteDBInstanceMessage
      type: object
    DeleteDBSubnetGroupMessage:
      description: Represents the input to <a>DeleteDBSubnetGroup</a>.
      properties:
        DBSubnetGroupName:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: "<p>The name of the database subnet group to delete.</p>\
              \ <note> <p>You can't delete the default subnet group.</p> </note> <p>Constraints:</p>\
              \ <p>Must match the name of an existing <code>DBSubnetGroup</code>.\
              \ Must not be default.</p> <p>Example: <code>mySubnetgroup</code> </p>"
      required:
      - DBSubnetGroupName
      title: DeleteDBSubnetGroupMessage
      type: object
    DeleteEventSubscriptionMessage:
      description: Represents the input to <a>DeleteEventSubscription</a>.
      properties:
        SubscriptionName:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The name of the Amazon DocumentDB event notification subscription
              that you want to delete.
      required:
      - SubscriptionName
      title: DeleteEventSubscriptionMessage
      type: object
    DeleteGlobalClusterMessage:
      description: Represents the input to <a>DeleteGlobalCluster</a>.
      properties:
        GlobalClusterIdentifier:
          allOf:
          - $ref: '#/components/schemas/GlobalClusterIdentifier'
          - description: The cluster identifier of the global cluster being deleted.
      required:
      - GlobalClusterIdentifier
      title: DeleteGlobalClusterMessage
      type: object
    FilterList:
      items:
        $ref: '#/components/schemas/GET_DescribeCertificates_Filters_parameter_inner'
      type: array
    DescribeCertificatesMessage:
      properties:
        CertificateIdentifier:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: "<p>The user-supplied certificate identifier. If this parameter\
              \ is specified, information for only the specified certificate is returned.\
              \ If this parameter is omitted, a list of up to <code>MaxRecords</code>\
              \ certificates is returned. This parameter is not case sensitive.</p>\
              \ <p>Constraints</p> <ul> <li> <p>Must match an existing <code>CertificateIdentifier</code>.</p>\
              \ </li> </ul>"
        Filters:
          allOf:
          - $ref: '#/components/schemas/FilterList'
          - description: This parameter is not currently supported.
        MaxRecords:
          allOf:
          - $ref: '#/components/schemas/IntegerOptional'
          - description: "<p>The maximum number of records to include in the response.\
              \ If more records exist than the specified <code>MaxRecords</code> value,\
              \ a pagination token called a marker is included in the response so\
              \ that the remaining results can be retrieved.</p> <p>Default: 100</p>\
              \ <p>Constraints:</p> <ul> <li> <p>Minimum: 20</p> </li> <li> <p>Maximum:\
              \ 100</p> </li> </ul>"
        Marker:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: "An optional pagination token provided by a previous <code>DescribeCertificates</code>\
              \ request. If this parameter is specified, the response includes only\
              \ records beyond the marker, up to the value specified by <code>MaxRecords</code>."
      title: DescribeCertificatesMessage
      type: object
    DescribeDBClusterParameterGroupsMessage:
      description: Represents the input to <a>DescribeDBClusterParameterGroups</a>.
      properties:
        DBClusterParameterGroupName:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: "<p>The name of a specific cluster parameter group to return\
              \ details for.</p> <p>Constraints:</p> <ul> <li> <p>If provided, must\
              \ match the name of an existing <code>DBClusterParameterGroup</code>.</p>\
              \ </li> </ul>"
        Filters:
          allOf:
          - $ref: '#/components/schemas/FilterList'
          - description: This parameter is not currently supported.
        MaxRecords:
          allOf:
          - $ref: '#/components/schemas/IntegerOptional'
          - description: "<p> The maximum number of records to include in the response.\
              \ If more records exist than the specified <code>MaxRecords</code> value,\
              \ a pagination token (marker) is included in the response so that the\
              \ remaining results can be retrieved.</p> <p>Default: 100</p> <p>Constraints:\
              \ Minimum 20, maximum 100.</p>"
        Marker:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: "An optional pagination token provided by a previous request.\
              \ If this parameter is specified, the response includes only records\
              \ beyond the marker, up to the value specified by <code>MaxRecords</code>."
      title: DescribeDBClusterParameterGroupsMessage
      type: object
    DescribeDBClusterParametersMessage:
      description: Represents the input to <a>DescribeDBClusterParameters</a>.
      properties:
        DBClusterParameterGroupName:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: "<p>The name of a specific cluster parameter group to return\
              \ parameter details for.</p> <p>Constraints:</p> <ul> <li> <p>If provided,\
              \ must match the name of an existing <code>DBClusterParameterGroup</code>.</p>\
              \ </li> </ul>"
        Source:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: " A value that indicates to return only parameters for a\
              \ specific source. Parameter sources can be <code>engine</code>, <code>service</code>,\
              \ or <code>customer</code>. "
        Filters:
          allOf:
          - $ref: '#/components/schemas/FilterList'
          - description: This parameter is not currently supported.
        MaxRecords:
          allOf:
          - $ref: '#/components/schemas/IntegerOptional'
          - description: "<p> The maximum number of records to include in the response.\
              \ If more records exist than the specified <code>MaxRecords</code> value,\
              \ a pagination token (marker) is included in the response so that the\
              \ remaining results can be retrieved.</p> <p>Default: 100</p> <p>Constraints:\
              \ Minimum 20, maximum 100.</p>"
        Marker:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: "An optional pagination token provided by a previous request.\
              \ If this parameter is specified, the response includes only records\
              \ beyond the marker, up to the value specified by <code>MaxRecords</code>."
      required:
      - DBClusterParameterGroupName
      title: DescribeDBClusterParametersMessage
      type: object
    DescribeDBClusterSnapshotAttributesMessage:
      description: Represents the input to <a>DescribeDBClusterSnapshotAttributes</a>.
      properties:
        DBClusterSnapshotIdentifier:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The identifier for the cluster snapshot to describe the attributes
              for.
      required:
      - DBClusterSnapshotIdentifier
      title: DescribeDBClusterSnapshotAttributesMessage
      type: object
    DescribeDBClusterSnapshotsMessage:
      description: Represents the input to <a>DescribeDBClusterSnapshots</a>.
      properties:
        DBClusterIdentifier:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: "<p>The ID of the cluster to retrieve the list of cluster\
              \ snapshots for. This parameter can't be used with the <code>DBClusterSnapshotIdentifier</code>\
              \ parameter. This parameter is not case sensitive. </p> <p>Constraints:</p>\
              \ <ul> <li> <p>If provided, must match the identifier of an existing\
              \ <code>DBCluster</code>.</p> </li> </ul>"
        DBClusterSnapshotIdentifier:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: "<p>A specific cluster snapshot identifier to describe. This\
              \ parameter can't be used with the <code>DBClusterIdentifier</code>\
              \ parameter. This value is stored as a lowercase string. </p> <p>Constraints:</p>\
              \ <ul> <li> <p>If provided, must match the identifier of an existing\
              \ <code>DBClusterSnapshot</code>.</p> </li> <li> <p>If this identifier\
              \ is for an automated snapshot, the <code>SnapshotType</code> parameter\
              \ must also be specified.</p> </li> </ul>"
        SnapshotType:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: "<p>The type of cluster snapshots to be returned. You can\
              \ specify one of the following values:</p> <ul> <li> <p> <code>automated</code>\
              \ - Return all cluster snapshots that Amazon DocumentDB has automatically\
              \ created for your Amazon Web Services account.</p> </li> <li> <p> <code>manual</code>\
              \ - Return all cluster snapshots that you have manually created for\
              \ your Amazon Web Services account.</p> </li> <li> <p> <code>shared</code>\
              \ - Return all manual cluster snapshots that have been shared to your\
              \ Amazon Web Services account.</p> </li> <li> <p> <code>public</code>\
              \ - Return all cluster snapshots that have been marked as public.</p>\
              \ </li> </ul> <p>If you don't specify a <code>SnapshotType</code> value,\
              \ then both automated and manual cluster snapshots are returned. You\
              \ can include shared cluster snapshots with these results by setting\
              \ the <code>IncludeShared</code> parameter to <code>true</code>. You\
              \ can include public cluster snapshots with these results by setting\
              \ the<code>IncludePublic</code> parameter to <code>true</code>.</p>\
              \ <p>The <code>IncludeShared</code> and <code>IncludePublic</code> parameters\
              \ don't apply for <code>SnapshotType</code> values of <code>manual</code>\
              \ or <code>automated</code>. The <code>IncludePublic</code> parameter\
              \ doesn't apply when <code>SnapshotType</code> is set to <code>shared</code>.\
              \ The <code>IncludeShared</code> parameter doesn't apply when <code>SnapshotType</code>\
              \ is set to <code>public</code>.</p>"
        Filters:
          allOf:
          - $ref: '#/components/schemas/FilterList'
          - description: This parameter is not currently supported.
        MaxRecords:
          allOf:
          - $ref: '#/components/schemas/IntegerOptional'
          - description: "<p> The maximum number of records to include in the response.\
              \ If more records exist than the specified <code>MaxRecords</code> value,\
              \ a pagination token (marker) is included in the response so that the\
              \ remaining results can be retrieved.</p> <p>Default: 100</p> <p>Constraints:\
              \ Minimum 20, maximum 100.</p>"
        Marker:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: "An optional pagination token provided by a previous request.\
              \ If this parameter is specified, the response includes only records\
              \ beyond the marker, up to the value specified by <code>MaxRecords</code>."
        IncludeShared:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          - description: "Set to <code>true</code> to include shared manual cluster\
              \ snapshots from other Amazon Web Services accounts that this Amazon\
              \ Web Services account has been given permission to copy or restore,\
              \ and otherwise <code>false</code>. The default is <code>false</code>."
        IncludePublic:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          - description: "Set to <code>true</code> to include manual cluster snapshots\
              \ that are public and can be copied or restored by any Amazon Web Services\
              \ account, and otherwise <code>false</code>. The default is <code>false</code>."
      title: DescribeDBClusterSnapshotsMessage
      type: object
    DescribeDBClustersMessage:
      description: Represents the input to <a>DescribeDBClusters</a>.
      properties:
        DBClusterIdentifier:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: "<p>The user-provided cluster identifier. If this parameter\
              \ is specified, information from only the specific cluster is returned.\
              \ This parameter isn't case sensitive.</p> <p>Constraints:</p> <ul>\
              \ <li> <p>If provided, must match an existing <code>DBClusterIdentifier</code>.</p>\
              \ </li> </ul>"
        Filters:
          allOf:
          - $ref: '#/components/schemas/FilterList'
          - description: <p>A filter that specifies one or more clusters to describe.</p>
              <p>Supported filters:</p> <ul> <li> <p> <code>db-cluster-id</code> -
              Accepts cluster identifiers and cluster Amazon Resource Names (ARNs).
              The results list only includes information about the clusters identified
              by these ARNs.</p> </li> </ul>
        MaxRecords:
          allOf:
          - $ref: '#/components/schemas/IntegerOptional'
          - description: "<p> The maximum number of records to include in the response.\
              \ If more records exist than the specified <code>MaxRecords</code> value,\
              \ a pagination token (marker) is included in the response so that the\
              \ remaining results can be retrieved.</p> <p>Default: 100</p> <p>Constraints:\
              \ Minimum 20, maximum 100.</p>"
        Marker:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: "An optional pagination token provided by a previous request.\
              \ If this parameter is specified, the response includes only records\
              \ beyond the marker, up to the value specified by <code>MaxRecords</code>."
      title: DescribeDBClustersMessage
      type: object
    DescribeDBEngineVersionsMessage:
      description: Represents the input to <a>DescribeDBEngineVersions</a>.
      properties:
        Engine:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The database engine to return.
        EngineVersion:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: "<p>The database engine version to return.</p> <p>Example:\
              \ <code>3.6.0</code> </p>"
        DBParameterGroupFamily:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: "<p>The name of a specific parameter group family to return\
              \ details for.</p> <p>Constraints:</p> <ul> <li> <p>If provided, must\
              \ match an existing <code>DBParameterGroupFamily</code>.</p> </li> </ul>"
        Filters:
          allOf:
          - $ref: '#/components/schemas/FilterList'
          - description: This parameter is not currently supported.
        MaxRecords:
          allOf:
          - $ref: '#/components/schemas/IntegerOptional'
          - description: "<p> The maximum number of records to include in the response.\
              \ If more records exist than the specified <code>MaxRecords</code> value,\
              \ a pagination token (marker) is included in the response so that the\
              \ remaining results can be retrieved.</p> <p>Default: 100</p> <p>Constraints:\
              \ Minimum 20, maximum 100.</p>"
        Marker:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: "An optional pagination token provided by a previous request.\
              \ If this parameter is specified, the response includes only records\
              \ beyond the marker, up to the value specified by <code>MaxRecords</code>."
        DefaultOnly:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          - description: Indicates that only the default version of the specified
              engine or engine and major version combination is returned.
        ListSupportedCharacterSets:
          allOf:
          - $ref: '#/components/schemas/BooleanOptional'
          - description: "If this parameter is specified and the requested engine\
              \ supports the <code>CharacterSetName</code> parameter for <code>CreateDBInstance</code>,\
              \ the response includes a list of supported character sets for each\
              \ engine version. "
        ListSupportedTimezones:
          allOf:
          - $ref: '#/components/schemas/BooleanOptional'
          - description: "If this parameter is specified and the requested engine\
              \ supports the <code>TimeZone</code> parameter for <code>CreateDBInstance</code>,\
              \ the response includes a list of supported time zones for each engine\
              \ version. "
      title: DescribeDBEngineVersionsMessage
      type: object
    DescribeDBInstancesMessage:
      description: Represents the input to <a>DescribeDBInstances</a>.
      properties:
        DBInstanceIdentifier:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: "<p>The user-provided instance identifier. If this parameter\
              \ is specified, information from only the specific instance is returned.\
              \ This parameter isn't case sensitive.</p> <p>Constraints:</p> <ul>\
              \ <li> <p>If provided, must match the identifier of an existing <code>DBInstance</code>.</p>\
              \ </li> </ul>"
        Filters:
          allOf:
          - $ref: '#/components/schemas/FilterList'
          - description: <p>A filter that specifies one or more instances to describe.</p>
              <p>Supported filters:</p> <ul> <li> <p> <code>db-cluster-id</code> -
              Accepts cluster identifiers and cluster Amazon Resource Names (ARNs).
              The results list includes only the information about the instances that
              are associated with the clusters that are identified by these ARNs.</p>
              </li> <li> <p> <code>db-instance-id</code> - Accepts instance identifiers
              and instance ARNs. The results list includes only the information about
              the instances that are identified by these ARNs.</p> </li> </ul>
        MaxRecords:
          allOf:
          - $ref: '#/components/schemas/IntegerOptional'
          - description: "<p> The maximum number of records to include in the response.\
              \ If more records exist than the specified <code>MaxRecords</code> value,\
              \ a pagination token (marker) is included in the response so that the\
              \ remaining results can be retrieved.</p> <p>Default: 100</p> <p>Constraints:\
              \ Minimum 20, maximum 100.</p>"
        Marker:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: "An optional pagination token provided by a previous request.\
              \ If this parameter is specified, the response includes only records\
              \ beyond the marker, up to the value specified by <code>MaxRecords</code>."
      title: DescribeDBInstancesMessage
      type: object
    DescribeDBSubnetGroupsMessage:
      description: Represents the input to <a>DescribeDBSubnetGroups</a>.
      properties:
        DBSubnetGroupName:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The name of the subnet group to return details for.
        Filters:
          allOf:
          - $ref: '#/components/schemas/FilterList'
          - description: This parameter is not currently supported.
        MaxRecords:
          allOf:
          - $ref: '#/components/schemas/IntegerOptional'
          - description: "<p> The maximum number of records to include in the response.\
              \ If more records exist than the specified <code>MaxRecords</code> value,\
              \ a pagination token (marker) is included in the response so that the\
              \ remaining results can be retrieved.</p> <p>Default: 100</p> <p>Constraints:\
              \ Minimum 20, maximum 100.</p>"
        Marker:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: "An optional pagination token provided by a previous request.\
              \ If this parameter is specified, the response includes only records\
              \ beyond the marker, up to the value specified by <code>MaxRecords</code>."
      title: DescribeDBSubnetGroupsMessage
      type: object
    DescribeEngineDefaultClusterParametersMessage:
      description: Represents the input to <a>DescribeEngineDefaultClusterParameters</a>.
      properties:
        DBParameterGroupFamily:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The name of the cluster parameter group family to return
              the engine parameter information for.
        Filters:
          allOf:
          - $ref: '#/components/schemas/FilterList'
          - description: This parameter is not currently supported.
        MaxRecords:
          allOf:
          - $ref: '#/components/schemas/IntegerOptional'
          - description: "<p> The maximum number of records to include in the response.\
              \ If more records exist than the specified <code>MaxRecords</code> value,\
              \ a pagination token (marker) is included in the response so that the\
              \ remaining results can be retrieved.</p> <p>Default: 100</p> <p>Constraints:\
              \ Minimum 20, maximum 100.</p>"
        Marker:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: "An optional pagination token provided by a previous request.\
              \ If this parameter is specified, the response includes only records\
              \ beyond the marker, up to the value specified by <code>MaxRecords</code>."
      required:
      - DBParameterGroupFamily
      title: DescribeEngineDefaultClusterParametersMessage
      type: object
    EngineDefaults:
      description: 'Contains the result of a successful invocation of the <code>DescribeEngineDefaultClusterParameters</code>
        operation. '
      properties:
        DBParameterGroupFamily:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The name of the cluster parameter group family to return
              the engine parameter information for.
        Marker:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: "An optional pagination token provided by a previous request.\
              \ If this parameter is specified, the response includes only records\
              \ beyond the marker, up to the value specified by <code>MaxRecords</code>."
        Parameters:
          allOf:
          - $ref: '#/components/schemas/ParametersList'
          - description: The parameters of a particular cluster parameter group family.
      type: object
    DescribeEventCategoriesMessage:
      description: Represents the input to <a>DescribeEventCategories</a>.
      properties:
        SourceType:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: "<p>The type of source that is generating the events.</p>\
              \ <p>Valid values: <code>db-instance</code>, <code>db-parameter-group</code>,\
              \ <code>db-security-group</code> </p>"
        Filters:
          allOf:
          - $ref: '#/components/schemas/FilterList'
          - description: This parameter is not currently supported.
      title: DescribeEventCategoriesMessage
      type: object
    DescribeEventSubscriptionsMessage:
      description: Represents the input to <a>DescribeEventSubscriptions</a>.
      properties:
        SubscriptionName:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The name of the Amazon DocumentDB event notification subscription
              that you want to describe.
        Filters:
          allOf:
          - $ref: '#/components/schemas/FilterList'
          - description: This parameter is not currently supported.
        MaxRecords:
          allOf:
          - $ref: '#/components/schemas/IntegerOptional'
          - description: "<p> The maximum number of records to include in the response.\
              \ If more records exist than the specified <code>MaxRecords</code> value,\
              \ a pagination token (marker) is included in the response so that the\
              \ remaining results can be retrieved.</p> <p>Default: 100</p> <p>Constraints:\
              \ Minimum 20, maximum 100.</p>"
        Marker:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: "An optional pagination token provided by a previous request.\
              \ If this parameter is specified, the response includes only records\
              \ beyond the marker, up to the value specified by <code>MaxRecords</code>."
      title: DescribeEventSubscriptionsMessage
      type: object
    SourceType:
      enum:
      - db-instance
      - db-parameter-group
      - db-security-group
      - db-snapshot
      - db-cluster
      - db-cluster-snapshot
      type: string
    DescribeEventsMessage:
      description: Represents the input to <a>DescribeEvents</a>.
      properties:
        SourceIdentifier:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: "<p>The identifier of the event source for which events are\
              \ returned. If not specified, then all sources are included in the response.</p>\
              \ <p>Constraints:</p> <ul> <li> <p>If <code>SourceIdentifier</code>\
              \ is provided, <code>SourceType</code> must also be provided.</p> </li>\
              \ <li> <p>If the source type is <code>DBInstance</code>, a <code>DBInstanceIdentifier</code>\
              \ must be provided.</p> </li> <li> <p>If the source type is <code>DBSecurityGroup</code>,\
              \ a <code>DBSecurityGroupName</code> must be provided.</p> </li> <li>\
              \ <p>If the source type is <code>DBParameterGroup</code>, a <code>DBParameterGroupName</code>\
              \ must be provided.</p> </li> <li> <p>If the source type is <code>DBSnapshot</code>,\
              \ a <code>DBSnapshotIdentifier</code> must be provided.</p> </li> <li>\
              \ <p>Cannot end with a hyphen or contain two consecutive hyphens.</p>\
              \ </li> </ul>"
        SourceType:
          allOf:
          - $ref: '#/components/schemas/SourceType'
          - description: "The event source to retrieve events for. If no value is\
              \ specified, all events are returned."
        StartTime:
          allOf:
          - $ref: '#/components/schemas/TStamp'
          - description: "<p> The beginning of the time interval to retrieve events\
              \ for, specified in ISO 8601 format. </p> <p>Example: 2009-07-08T18:00Z</p>"
        EndTime:
          allOf:
          - $ref: '#/components/schemas/TStamp'
          - description: "<p> The end of the time interval for which to retrieve events,\
              \ specified in ISO 8601 format. </p> <p>Example: 2009-07-08T18:00Z</p>"
        Duration:
          allOf:
          - $ref: '#/components/schemas/IntegerOptional'
          - description: "<p>The number of minutes to retrieve events for.</p> <p>Default:\
              \ 60</p>"
        EventCategories:
          allOf:
          - $ref: '#/components/schemas/EventCategoriesList'
          - description: A list of event categories that trigger notifications for
              an event notification subscription.
        Filters:
          allOf:
          - $ref: '#/components/schemas/FilterList'
          - description: This parameter is not currently supported.
        MaxRecords:
          allOf:
          - $ref: '#/components/schemas/IntegerOptional'
          - description: "<p> The maximum number of records to include in the response.\
              \ If more records exist than the specified <code>MaxRecords</code> value,\
              \ a pagination token (marker) is included in the response so that the\
              \ remaining results can be retrieved.</p> <p>Default: 100</p> <p>Constraints:\
              \ Minimum 20, maximum 100.</p>"
        Marker:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: "An optional pagination token provided by a previous request.\
              \ If this parameter is specified, the response includes only records\
              \ beyond the marker, up to the value specified by <code>MaxRecords</code>."
      title: DescribeEventsMessage
      type: object
    DescribeGlobalClustersMessage:
      properties:
        GlobalClusterIdentifier:
          allOf:
          - $ref: '#/components/schemas/GlobalClusterIdentifier'
          - description: "The user-supplied cluster identifier. If this parameter\
              \ is specified, information from only the specific cluster is returned.\
              \ This parameter isn't case-sensitive."
        Filters:
          allOf:
          - $ref: '#/components/schemas/FilterList'
          - description: "<p>A filter that specifies one or more global DB clusters\
              \ to describe.</p> <p>Supported filters: <code>db-cluster-id</code>\
              \ accepts cluster identifiers and cluster Amazon Resource Names (ARNs).\
              \ The results list will only include information about the clusters\
              \ identified by these ARNs.</p>"
        MaxRecords:
          allOf:
          - $ref: '#/components/schemas/IntegerOptional'
          - description: "The maximum number of records to include in the response.\
              \ If more records exist than the specified <code>MaxRecords</code> value,\
              \ a pagination token called a marker is included in the response so\
              \ that you can retrieve the remaining results. "
        Marker:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: "An optional pagination token provided by a previous <code>DescribeGlobalClusters</code>\
              \ request. If this parameter is specified, the response includes only\
              \ records beyond the marker, up to the value specified by <code>MaxRecords</code>."
      title: DescribeGlobalClustersMessage
      type: object
    DescribeOrderableDBInstanceOptionsMessage:
      description: Represents the input to <a>DescribeOrderableDBInstanceOptions</a>.
      properties:
        Engine:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The name of the engine to retrieve instance options for.
        EngineVersion:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The engine version filter value. Specify this parameter to
              show only the available offerings that match the specified engine version.
        DBInstanceClass:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The instance class filter value. Specify this parameter to
              show only the available offerings that match the specified instance
              class.
        LicenseModel:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The license model filter value. Specify this parameter to
              show only the available offerings that match the specified license model.
        Vpc:
          allOf:
          - $ref: '#/components/schemas/BooleanOptional'
          - description: The virtual private cloud (VPC) filter value. Specify this
              parameter to show only the available VPC or non-VPC offerings.
        Filters:
          allOf:
          - $ref: '#/components/schemas/FilterList'
          - description: This parameter is not currently supported.
        MaxRecords:
          allOf:
          - $ref: '#/components/schemas/IntegerOptional'
          - description: "<p> The maximum number of records to include in the response.\
              \ If more records exist than the specified <code>MaxRecords</code> value,\
              \ a pagination token (marker) is included in the response so that the\
              \ remaining results can be retrieved.</p> <p>Default: 100</p> <p>Constraints:\
              \ Minimum 20, maximum 100.</p>"
        Marker:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: "An optional pagination token provided by a previous request.\
              \ If this parameter is specified, the response includes only records\
              \ beyond the marker, up to the value specified by <code>MaxRecords</code>."
      required:
      - Engine
      title: DescribeOrderableDBInstanceOptionsMessage
      type: object
    DescribePendingMaintenanceActionsMessage:
      description: Represents the input to <a>DescribePendingMaintenanceActions</a>.
      properties:
        ResourceIdentifier:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The ARN of a resource to return pending maintenance actions
              for.
        Filters:
          allOf:
          - $ref: '#/components/schemas/FilterList'
          - description: <p>A filter that specifies one or more resources to return
              pending maintenance actions for.</p> <p>Supported filters:</p> <ul>
              <li> <p> <code>db-cluster-id</code> - Accepts cluster identifiers and
              cluster Amazon Resource Names (ARNs). The results list includes only
              pending maintenance actions for the clusters identified by these ARNs.</p>
              </li> <li> <p> <code>db-instance-id</code> - Accepts instance identifiers
              and instance ARNs. The results list includes only pending maintenance
              actions for the DB instances identified by these ARNs.</p> </li> </ul>
        Marker:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: "An optional pagination token provided by a previous request.\
              \ If this parameter is specified, the response includes only records\
              \ beyond the marker, up to the value specified by <code>MaxRecords</code>."
        MaxRecords:
          allOf:
          - $ref: '#/components/schemas/IntegerOptional'
          - description: "<p> The maximum number of records to include in the response.\
              \ If more records exist than the specified <code>MaxRecords</code> value,\
              \ a pagination token (marker) is included in the response so that the\
              \ remaining results can be retrieved.</p> <p>Default: 100</p> <p>Constraints:\
              \ Minimum 20, maximum 100.</p>"
      title: DescribePendingMaintenanceActionsMessage
      type: object
    Event:
      description: Detailed information about an event.
      properties:
        SourceIdentifier:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: Provides the identifier for the source of the event.
        SourceType:
          allOf:
          - $ref: '#/components/schemas/SourceType'
          - description: Specifies the source type for this event.
        Message:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: Provides the text of this event.
        EventCategories:
          allOf:
          - $ref: '#/components/schemas/EventCategoriesList'
          - description: Specifies the category for the event.
        Date:
          allOf:
          - $ref: '#/components/schemas/TStamp'
          - description: Specifies the date and time of the event.
        SourceArn:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The Amazon Resource Name (ARN) for the event.
      type: object
    EventCategoriesMap:
      description: "An event source type, accompanied by one or more event category\
        \ names."
      properties:
        SourceType:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The source type that the returned categories belong to.
        EventCategories:
          allOf:
          - $ref: '#/components/schemas/EventCategoriesList'
          - description: The event categories for the specified source type.
      type: object
    EventCategoriesMapList:
      items:
        $ref: '#/components/schemas/EventCategoriesMapList_inner'
      type: array
    EventList:
      items:
        $ref: '#/components/schemas/EventList_inner'
      type: array
    EventSubscriptionsList:
      items:
        $ref: '#/components/schemas/EventSubscriptionsList_inner'
      type: array
    FailoverDBClusterMessage:
      description: Represents the input to <a>FailoverDBCluster</a>.
      properties:
        DBClusterIdentifier:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: <p>A cluster identifier to force a failover for. This parameter
              is not case sensitive.</p> <p>Constraints:</p> <ul> <li> <p>Must match
              the identifier of an existing <code>DBCluster</code>.</p> </li> </ul>
        TargetDBInstanceIdentifier:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: "<p>The name of the instance to promote to the primary instance.</p>\
              \ <p>You must specify the instance identifier for an Amazon DocumentDB\
              \ replica in the cluster. For example, <code>mydbcluster-replica1</code>.</p>"
      title: FailoverDBClusterMessage
      type: object
    FilterValueList:
      items:
        allOf:
        - $ref: '#/components/schemas/String'
        - xml:
            name: Value
      type: array
    GlobalClusterMemberList:
      items:
        $ref: '#/components/schemas/GlobalClusterMemberList_inner'
      type: array
    GlobalClusterList:
      items:
        $ref: '#/components/schemas/GlobalClusterList_inner'
      type: array
    ReadersArnList:
      items:
        $ref: '#/components/schemas/String'
      type: array
    GlobalClusterMember:
      description: 'A data structure with information about any primary and secondary
        clusters associated with an Amazon DocumentDB global clusters. '
      properties:
        DBClusterArn:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The Amazon Resource Name (ARN) for each Amazon DocumentDB
              cluster.
        Readers:
          allOf:
          - $ref: '#/components/schemas/ReadersArnList'
          - description: The Amazon Resource Name (ARN) for each read-only secondary
              cluster associated with the Aurora global cluster.
        IsWriter:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          - description: " Specifies whether the Amazon DocumentDB cluster is the\
              \ primary cluster (that is, has read-write capability) for the Amazon\
              \ DocumentDB global cluster with which it is associated. "
      type: object
    KeyList:
      items:
        $ref: '#/components/schemas/String'
      type: array
    ListTagsForResourceMessage:
      description: Represents the input to <a>ListTagsForResource</a>.
      properties:
        ResourceName:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The Amazon DocumentDB resource with tags to be listed. This
              value is an Amazon Resource Name (ARN).
        Filters:
          allOf:
          - $ref: '#/components/schemas/FilterList'
          - description: This parameter is not currently supported.
      required:
      - ResourceName
      title: ListTagsForResourceMessage
      type: object
    ModifyDBClusterMessage:
      description: Represents the input to <a>ModifyDBCluster</a>.
      properties:
        DBClusterIdentifier:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: <p>The cluster identifier for the cluster that is being modified.
              This parameter is not case sensitive.</p> <p>Constraints:</p> <ul> <li>
              <p>Must match the identifier of an existing <code>DBCluster</code>.</p>
              </li> </ul>
        NewDBClusterIdentifier:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: "<p>The new cluster identifier for the cluster when renaming\
              \ a cluster. This value is stored as a lowercase string.</p> <p>Constraints:</p>\
              \ <ul> <li> <p>Must contain from 1 to 63 letters, numbers, or hyphens.</p>\
              \ </li> <li> <p>The first character must be a letter.</p> </li> <li>\
              \ <p>Cannot end with a hyphen or contain two consecutive hyphens.</p>\
              \ </li> </ul> <p>Example: <code>my-cluster2</code> </p>"
        ApplyImmediately:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          - description: "<p>A value that specifies whether the changes in this request\
              \ and any pending changes are asynchronously applied as soon as possible,\
              \ regardless of the <code>PreferredMaintenanceWindow</code> setting\
              \ for the cluster. If this parameter is set to <code>false</code>, changes\
              \ to the cluster are applied during the next maintenance window.</p>\
              \ <p>The <code>ApplyImmediately</code> parameter affects only the <code>NewDBClusterIdentifier</code>\
              \ and <code>MasterUserPassword</code> values. If you set this parameter\
              \ value to <code>false</code>, the changes to the <code>NewDBClusterIdentifier</code>\
              \ and <code>MasterUserPassword</code> values are applied during the\
              \ next maintenance window. All other changes are applied immediately,\
              \ regardless of the value of the <code>ApplyImmediately</code> parameter.</p>\
              \ <p>Default: <code>false</code> </p>"
        BackupRetentionPeriod:
          allOf:
          - $ref: '#/components/schemas/IntegerOptional'
          - description: "<p>The number of days for which automated backups are retained.\
              \ You must specify a minimum value of 1.</p> <p>Default: 1</p> <p>Constraints:</p>\
              \ <ul> <li> <p>Must be a value from 1 to 35.</p> </li> </ul>"
        DBClusterParameterGroupName:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The name of the cluster parameter group to use for the cluster.
        VpcSecurityGroupIds:
          allOf:
          - $ref: '#/components/schemas/VpcSecurityGroupIdList'
          - description: A list of virtual private cloud (VPC) security groups that
              the cluster will belong to.
        Port:
          allOf:
          - $ref: '#/components/schemas/IntegerOptional'
          - description: "<p>The port number on which the cluster accepts connections.</p>\
              \ <p>Constraints: Must be a value from <code>1150</code> to <code>65535</code>.\
              \ </p> <p>Default: The same port as the original cluster.</p>"
        MasterUserPassword:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: "<p>The password for the master database user. This password\
              \ can contain any printable ASCII character except forward slash (/),\
              \ double quote (\"), or the \"at\" symbol (@).</p> <p>Constraints: Must\
              \ contain from 8 to 100 characters.</p>"
        PreferredBackupWindow:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: "<p>The daily time range during which automated backups are\
              \ created if automated backups are enabled, using the <code>BackupRetentionPeriod</code>\
              \ parameter. </p> <p>The default is a 30-minute window selected at random\
              \ from an 8-hour block of time for each Amazon Web Services Region.\
              \ </p> <p>Constraints:</p> <ul> <li> <p>Must be in the format <code>hh24:mi-hh24:mi</code>.</p>\
              \ </li> <li> <p>Must be in Universal Coordinated Time (UTC).</p> </li>\
              \ <li> <p>Must not conflict with the preferred maintenance window.</p>\
              \ </li> <li> <p>Must be at least 30 minutes.</p> </li> </ul>"
        PreferredMaintenanceWindow:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: "<p>The weekly time range during which system maintenance\
              \ can occur, in Universal Coordinated Time (UTC).</p> <p>Format: <code>ddd:hh24:mi-ddd:hh24:mi</code>\
              \ </p> <p>The default is a 30-minute window selected at random from\
              \ an 8-hour block of time for each Amazon Web Services Region, occurring\
              \ on a random day of the week. </p> <p>Valid days: Mon, Tue, Wed, Thu,\
              \ Fri, Sat, Sun</p> <p>Constraints: Minimum 30-minute window.</p>"
        CloudwatchLogsExportConfiguration:
          $ref: '#/components/schemas/ModifyDBClusterMessage_CloudwatchLogsExportConfiguration'
        EngineVersion:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: "<p>The version number of the database engine to which you\
              \ want to upgrade. Changing this parameter results in an outage. The\
              \ change is applied during the next maintenance window unless <code>ApplyImmediately</code>\
              \ is enabled.</p> <p>To list all of the available engine versions for\
              \ Amazon DocumentDB use the following command:</p> <p> <code>aws docdb\
              \ describe-db-engine-versions --engine docdb --query \"DBEngineVersions[].EngineVersion\"\
              </code> </p>"
        AllowMajorVersionUpgrade:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          - description: "<p>A value that indicates whether major version upgrades\
              \ are allowed.</p> <p>Constraints: You must allow major version upgrades\
              \ when specifying a value for the <code>EngineVersion</code> parameter\
              \ that is a different major version than the DB cluster's current version.</p>"
        DeletionProtection:
          allOf:
          - $ref: '#/components/schemas/BooleanOptional'
          - description: "Specifies whether this cluster can be deleted. If <code>DeletionProtection</code>\
              \ is enabled, the cluster cannot be deleted unless it is modified and\
              \ <code>DeletionProtection</code> is disabled. <code>DeletionProtection</code>\
              \ protects clusters from being accidentally deleted."
      required:
      - DBClusterIdentifier
      title: ModifyDBClusterMessage
      type: object
    ModifyDBClusterParameterGroupMessage:
      description: Represents the input to <a>ModifyDBClusterParameterGroup</a>.
      properties:
        DBClusterParameterGroupName:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The name of the cluster parameter group to modify.
        Parameters:
          allOf:
          - $ref: '#/components/schemas/ParametersList'
          - description: A list of parameters in the cluster parameter group to modify.
      required:
      - DBClusterParameterGroupName
      - Parameters
      title: ModifyDBClusterParameterGroupMessage
      type: object
    ModifyDBClusterSnapshotAttributeMessage:
      description: Represents the input to <a>ModifyDBClusterSnapshotAttribute</a>.
      properties:
        DBClusterSnapshotIdentifier:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The identifier for the cluster snapshot to modify the attributes
              for.
        AttributeName:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: "<p>The name of the cluster snapshot attribute to modify.</p>\
              \ <p>To manage authorization for other Amazon Web Services accounts\
              \ to copy or restore a manual cluster snapshot, set this value to <code>restore</code>.</p>"
        ValuesToAdd:
          allOf:
          - $ref: '#/components/schemas/AttributeValueList'
          - description: "<p>A list of cluster snapshot attributes to add to the attribute\
              \ specified by <code>AttributeName</code>.</p> <p>To authorize other\
              \ Amazon Web Services accounts to copy or restore a manual cluster snapshot,\
              \ set this list to include one or more Amazon Web Services account IDs.\
              \ To make the manual cluster snapshot restorable by any Amazon Web Services\
              \ account, set it to <code>all</code>. Do not add the <code>all</code>\
              \ value for any manual cluster snapshots that contain private information\
              \ that you don't want to be available to all Amazon Web Services accounts.</p>"
        ValuesToRemove:
          allOf:
          - $ref: '#/components/schemas/AttributeValueList'
          - description: "<p>A list of cluster snapshot attributes to remove from\
              \ the attribute specified by <code>AttributeName</code>.</p> <p>To remove\
              \ authorization for other Amazon Web Services accounts to copy or restore\
              \ a manual cluster snapshot, set this list to include one or more Amazon\
              \ Web Services account identifiers. To remove authorization for any\
              \ Amazon Web Services account to copy or restore the cluster snapshot,\
              \ set it to <code>all</code> . If you specify <code>all</code>, an Amazon\
              \ Web Services account whose account ID is explicitly added to the <code>restore</code>\
              \ attribute can still copy or restore a manual cluster snapshot.</p>"
      required:
      - AttributeName
      - DBClusterSnapshotIdentifier
      title: ModifyDBClusterSnapshotAttributeMessage
      type: object
    ModifyDBInstanceMessage:
      description: Represents the input to <a>ModifyDBInstance</a>.
      properties:
        DBInstanceIdentifier:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: <p>The instance identifier. This value is stored as a lowercase
              string.</p> <p>Constraints:</p> <ul> <li> <p>Must match the identifier
              of an existing <code>DBInstance</code>.</p> </li> </ul>
        DBInstanceClass:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: "<p>The new compute and memory capacity of the instance;\
              \ for example, <code>db.r5.large</code>. Not all instance classes are\
              \ available in all Amazon Web Services Regions. </p> <p>If you modify\
              \ the instance class, an outage occurs during the change. The change\
              \ is applied during the next maintenance window, unless <code>ApplyImmediately</code>\
              \ is specified as <code>true</code> for this request. </p> <p>Default:\
              \ Uses existing setting.</p>"
        ApplyImmediately:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          - description: "<p>Specifies whether the modifications in this request and\
              \ any pending modifications are asynchronously applied as soon as possible,\
              \ regardless of the <code>PreferredMaintenanceWindow</code> setting\
              \ for the instance. </p> <p> If this parameter is set to <code>false</code>,\
              \ changes to the instance are applied during the next maintenance window.\
              \ Some parameter changes can cause an outage and are applied on the\
              \ next reboot.</p> <p>Default: <code>false</code> </p>"
        PreferredMaintenanceWindow:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: "<p>The weekly time range (in UTC) during which system maintenance\
              \ can occur, which might result in an outage. Changing this parameter\
              \ doesn't result in an outage except in the following situation, and\
              \ the change is asynchronously applied as soon as possible. If there\
              \ are pending actions that cause a reboot, and the maintenance window\
              \ is changed to include the current time, changing this parameter causes\
              \ a reboot of the instance. If you are moving this window to the current\
              \ time, there must be at least 30 minutes between the current time and\
              \ end of the window to ensure that pending changes are applied.</p>\
              \ <p>Default: Uses existing setting.</p> <p>Format: <code>ddd:hh24:mi-ddd:hh24:mi</code>\
              \ </p> <p>Valid days: Mon, Tue, Wed, Thu, Fri, Sat, Sun</p> <p>Constraints:\
              \ Must be at least 30 minutes.</p>"
        AutoMinorVersionUpgrade:
          allOf:
          - $ref: '#/components/schemas/BooleanOptional'
          - description: This parameter does not apply to Amazon DocumentDB. Amazon
              DocumentDB does not perform minor version upgrades regardless of the
              value set.
        NewDBInstanceIdentifier:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: "<p> The new instance identifier for the instance when renaming\
              \ an instance. When you change the instance identifier, an instance\
              \ reboot occurs immediately if you set <code>Apply Immediately</code>\
              \ to <code>true</code>. It occurs during the next maintenance window\
              \ if you set <code>Apply Immediately</code> to <code>false</code>. This\
              \ value is stored as a lowercase string. </p> <p>Constraints:</p> <ul>\
              \ <li> <p>Must contain from 1 to 63 letters, numbers, or hyphens.</p>\
              \ </li> <li> <p>The first character must be a letter.</p> </li> <li>\
              \ <p>Cannot end with a hyphen or contain two consecutive hyphens.</p>\
              \ </li> </ul> <p>Example: <code>mydbinstance</code> </p>"
        CACertificateIdentifier:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: Indicates the certificate that needs to be associated with
              the instance.
        CopyTagsToSnapshot:
          allOf:
          - $ref: '#/components/schemas/BooleanOptional'
          - description: "A value that indicates whether to copy all tags from the\
              \ DB instance to snapshots of the DB instance. By default, tags are\
              \ not copied."
        PromotionTier:
          allOf:
          - $ref: '#/components/schemas/IntegerOptional'
          - description: "<p>A value that specifies the order in which an Amazon DocumentDB\
              \ replica is promoted to the primary instance after a failure of the\
              \ existing primary instance.</p> <p>Default: 1</p> <p>Valid values:\
              \ 0-15</p>"
        EnablePerformanceInsights:
          allOf:
          - $ref: '#/components/schemas/BooleanOptional'
          - description: "A value that indicates whether to enable Performance Insights\
              \ for the DB Instance. For more information, see <a href=\"https://docs.aws.amazon.com/documentdb/latest/developerguide/performance-insights.html\"\
              >Using Amazon Performance Insights</a>."
        PerformanceInsightsKMSKeyId:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: "<p>The KMS key identifier for encryption of Performance\
              \ Insights data.</p> <p>The KMS key identifier is the key ARN, key ID,\
              \ alias ARN, or alias name for the KMS key.</p> <p>If you do not specify\
              \ a value for PerformanceInsightsKMSKeyId, then Amazon DocumentDB uses\
              \ your default KMS key. There is a default KMS key for your Amazon Web\
              \ Services account. Your Amazon Web Services account has a different\
              \ default KMS key for each Amazon Web Services region.</p>"
      required:
      - DBInstanceIdentifier
      title: ModifyDBInstanceMessage
      type: object
    ModifyDBSubnetGroupMessage:
      description: Represents the input to <a>ModifyDBSubnetGroup</a>.
      properties:
        DBSubnetGroupName:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: "<p>The name for the subnet group. This value is stored as\
              \ a lowercase string. You can't modify the default subnet group. </p>\
              \ <p>Constraints: Must match the name of an existing <code>DBSubnetGroup</code>.\
              \ Must not be default.</p> <p>Example: <code>mySubnetgroup</code> </p>"
        DBSubnetGroupDescription:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The description for the subnet group.
        SubnetIds:
          allOf:
          - $ref: '#/components/schemas/SubnetIdentifierList'
          - description: The Amazon EC2 subnet IDs for the subnet group.
      required:
      - DBSubnetGroupName
      - SubnetIds
      title: ModifyDBSubnetGroupMessage
      type: object
    ModifyEventSubscriptionMessage:
      description: Represents the input to <a>ModifyEventSubscription</a>.
      properties:
        SubscriptionName:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The name of the Amazon DocumentDB event notification subscription.
        SnsTopicArn:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The Amazon Resource Name (ARN) of the SNS topic created for
              event notification. The ARN is created by Amazon SNS when you create
              a topic and subscribe to it.
        SourceType:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: "<p>The type of source that is generating the events. For\
              \ example, if you want to be notified of events generated by an instance,\
              \ set this parameter to <code>db-instance</code>. If this value is not\
              \ specified, all events are returned.</p> <p>Valid values: <code>db-instance</code>,\
              \ <code>db-parameter-group</code>, <code>db-security-group</code> </p>"
        EventCategories:
          allOf:
          - $ref: '#/components/schemas/EventCategoriesList'
          - description: ' A list of event categories for a <code>SourceType</code>
              that you want to subscribe to.'
        Enabled:
          allOf:
          - $ref: '#/components/schemas/BooleanOptional'
          - description: ' A Boolean value; set to <code>true</code> to activate the
              subscription. '
      required:
      - SubscriptionName
      title: ModifyEventSubscriptionMessage
      type: object
    ModifyGlobalClusterMessage:
      description: Represents the input to <a>ModifyGlobalCluster</a>.
      properties:
        GlobalClusterIdentifier:
          allOf:
          - $ref: '#/components/schemas/GlobalClusterIdentifier'
          - description: <p>The identifier for the global cluster being modified.
              This parameter isn't case-sensitive.</p> <p>Constraints:</p> <ul> <li>
              <p>Must match the identifier of an existing global cluster.</p> </li>
              </ul>
        NewGlobalClusterIdentifier:
          allOf:
          - $ref: '#/components/schemas/GlobalClusterIdentifier'
          - description: "<p>The new identifier for a global cluster when you modify\
              \ a global cluster. This value is stored as a lowercase string.</p>\
              \ <ul> <li> <p>Must contain from 1 to 63 letters, numbers, or hyphens</p>\
              \ <p>The first character must be a letter</p> <p>Can't end with a hyphen\
              \ or contain two consecutive hyphens</p> </li> </ul> <p>Example: <code>my-cluster2</code>\
              \ </p>"
        DeletionProtection:
          allOf:
          - $ref: '#/components/schemas/BooleanOptional'
          - description: 'Indicates if the global cluster has deletion protection
              enabled. The global cluster can''t be deleted when deletion protection
              is enabled. '
      required:
      - GlobalClusterIdentifier
      title: ModifyGlobalClusterMessage
      type: object
    OrderableDBInstanceOption:
      description: The options that are available for an instance.
      properties:
        Engine:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The engine type of an instance.
        EngineVersion:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The engine version of an instance.
        DBInstanceClass:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The instance class for an instance.
        LicenseModel:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The license model for an instance.
        AvailabilityZones:
          allOf:
          - $ref: '#/components/schemas/AvailabilityZoneList'
          - description: A list of Availability Zones for an instance.
        Vpc:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          - description: Indicates whether an instance is in a virtual private cloud
              (VPC).
      type: object
    OrderableDBInstanceOptionsList:
      items:
        $ref: '#/components/schemas/OrderableDBInstanceOptionsList_inner'
      type: array
    PendingCloudwatchLogsExports:
      description: A list of the log types whose configuration is still pending. These
        log types are in the process of being activated or deactivated.
      properties:
        LogTypesToEnable:
          allOf:
          - $ref: '#/components/schemas/LogTypeList'
          - description: "Log types that are in the process of being deactivated.\
              \ After they are deactivated, these log types aren't exported to CloudWatch\
              \ Logs."
        LogTypesToDisable:
          allOf:
          - $ref: '#/components/schemas/LogTypeList'
          - description: "Log types that are in the process of being enabled. After\
              \ they are enabled, these log types are exported to Amazon CloudWatch\
              \ Logs."
      type: object
    PendingMaintenanceAction:
      description: Provides information about a pending maintenance action for a resource.
      properties:
        Action:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The type of pending maintenance action that is available
              for the resource.
        AutoAppliedAfterDate:
          allOf:
          - $ref: '#/components/schemas/TStamp'
          - description: "The date of the maintenance window when the action is applied.\
              \ The maintenance action is applied to the resource during its first\
              \ maintenance window after this date. If this date is specified, any\
              \ <code>next-maintenance</code> opt-in requests are ignored."
        ForcedApplyDate:
          allOf:
          - $ref: '#/components/schemas/TStamp'
          - description: "The date when the maintenance action is automatically applied.\
              \ The maintenance action is applied to the resource on this date regardless\
              \ of the maintenance window for the resource. If this date is specified,\
              \ any <code>immediate</code> opt-in requests are ignored."
        OptInStatus:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: Indicates the type of opt-in request that has been received
              for the resource.
        CurrentApplyDate:
          allOf:
          - $ref: '#/components/schemas/TStamp'
          - description: The effective date when the pending maintenance action is
              applied to the resource.
        Description:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: A description providing more detail about the maintenance
              action.
      type: object
    PendingMaintenanceActionDetails:
      items:
        $ref: '#/components/schemas/PendingMaintenanceActionDetails_inner'
      type: array
    PendingMaintenanceActions:
      items:
        $ref: '#/components/schemas/PendingMaintenanceActions_inner'
      type: array
    RebootDBInstanceMessage:
      description: Represents the input to <a>RebootDBInstance</a>.
      properties:
        DBInstanceIdentifier:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: <p>The instance identifier. This parameter is stored as a
              lowercase string.</p> <p>Constraints:</p> <ul> <li> <p>Must match the
              identifier of an existing <code>DBInstance</code>.</p> </li> </ul>
        ForceFailover:
          allOf:
          - $ref: '#/components/schemas/BooleanOptional'
          - description: "<p> When <code>true</code>, the reboot is conducted through\
              \ a Multi-AZ failover. </p> <p>Constraint: You can't specify <code>true</code>\
              \ if the instance is not configured for Multi-AZ.</p>"
      required:
      - DBInstanceIdentifier
      title: RebootDBInstanceMessage
      type: object
    RemoveFromGlobalClusterMessage:
      description: Represents the input to <a>RemoveFromGlobalCluster</a>.
      properties:
        GlobalClusterIdentifier:
          allOf:
          - $ref: '#/components/schemas/GlobalClusterIdentifier'
          - description: 'The cluster identifier to detach from the Amazon DocumentDB
              global cluster. '
        DbClusterIdentifier:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: 'The Amazon Resource Name (ARN) identifying the cluster that
              was detached from the Amazon DocumentDB global cluster. '
      required:
      - DbClusterIdentifier
      - GlobalClusterIdentifier
      title: RemoveFromGlobalClusterMessage
      type: object
    RemoveSourceIdentifierFromSubscriptionMessage:
      description: Represents the input to <a>RemoveSourceIdentifierFromSubscription</a>.
      properties:
        SubscriptionName:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The name of the Amazon DocumentDB event notification subscription
              that you want to remove a source identifier from.
        SourceIdentifier:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: " The source identifier to be removed from the subscription,\
              \ such as the instance identifier for an instance, or the name of a\
              \ security group. "
      required:
      - SourceIdentifier
      - SubscriptionName
      title: RemoveSourceIdentifierFromSubscriptionMessage
      type: object
    RemoveTagsFromResourceMessage:
      description: Represents the input to <a>RemoveTagsFromResource</a>.
      properties:
        ResourceName:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The Amazon DocumentDB resource that the tags are removed
              from. This value is an Amazon Resource Name (ARN).
        TagKeys:
          allOf:
          - $ref: '#/components/schemas/KeyList'
          - description: The tag key (name) of the tag to be removed.
      required:
      - ResourceName
      - TagKeys
      title: RemoveTagsFromResourceMessage
      type: object
    ResetDBClusterParameterGroupMessage:
      description: Represents the input to <a>ResetDBClusterParameterGroup</a>.
      properties:
        DBClusterParameterGroupName:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The name of the cluster parameter group to reset.
        ResetAllParameters:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          - description: "A value that is set to <code>true</code> to reset all parameters\
              \ in the cluster parameter group to their default values, and <code>false</code>\
              \ otherwise. You can't use this parameter if there is a list of parameter\
              \ names specified for the <code>Parameters</code> parameter."
        Parameters:
          allOf:
          - $ref: '#/components/schemas/ParametersList'
          - description: A list of parameter names in the cluster parameter group
              to reset to the default values. You can't use this parameter if the
              <code>ResetAllParameters</code> parameter is set to <code>true</code>.
      required:
      - DBClusterParameterGroupName
      title: ResetDBClusterParameterGroupMessage
      type: object
    RestoreDBClusterFromSnapshotMessage:
      description: Represents the input to <a>RestoreDBClusterFromSnapshot</a>.
      properties:
        AvailabilityZones:
          allOf:
          - $ref: '#/components/schemas/AvailabilityZones'
          - description: Provides the list of Amazon EC2 Availability Zones that instances
              in the restored DB cluster can be created in.
        DBClusterIdentifier:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: "<p>The name of the cluster to create from the snapshot or\
              \ cluster snapshot. This parameter isn't case sensitive.</p> <p>Constraints:</p>\
              \ <ul> <li> <p>Must contain from 1 to 63 letters, numbers, or hyphens.</p>\
              \ </li> <li> <p>The first character must be a letter.</p> </li> <li>\
              \ <p>Cannot end with a hyphen or contain two consecutive hyphens.</p>\
              \ </li> </ul> <p>Example: <code>my-snapshot-id</code> </p>"
        SnapshotIdentifier:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: "<p>The identifier for the snapshot or cluster snapshot to\
              \ restore from.</p> <p>You can use either the name or the Amazon Resource\
              \ Name (ARN) to specify a cluster snapshot. However, you can use only\
              \ the ARN to specify a snapshot.</p> <p>Constraints:</p> <ul> <li> <p>Must\
              \ match the identifier of an existing snapshot.</p> </li> </ul>"
        Engine:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: "<p>The database engine to use for the new cluster.</p> <p>Default:\
              \ The same as source.</p> <p>Constraint: Must be compatible with the\
              \ engine of the source.</p>"
        EngineVersion:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The version of the database engine to use for the new cluster.
        Port:
          allOf:
          - $ref: '#/components/schemas/IntegerOptional'
          - description: "<p>The port number on which the new cluster accepts connections.</p>\
              \ <p>Constraints: Must be a value from <code>1150</code> to <code>65535</code>.</p>\
              \ <p>Default: The same port as the original cluster.</p>"
        DBSubnetGroupName:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: "<p>The name of the subnet group to use for the new cluster.</p>\
              \ <p>Constraints: If provided, must match the name of an existing <code>DBSubnetGroup</code>.</p>\
              \ <p>Example: <code>mySubnetgroup</code> </p>"
        VpcSecurityGroupIds:
          allOf:
          - $ref: '#/components/schemas/VpcSecurityGroupIdList'
          - description: A list of virtual private cloud (VPC) security groups that
              the new cluster will belong to.
        Tags:
          allOf:
          - $ref: '#/components/schemas/TagList'
          - description: The tags to be assigned to the restored cluster.
        KmsKeyId:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: "<p>The KMS key identifier to use when restoring an encrypted\
              \ cluster from a DB snapshot or cluster snapshot.</p> <p>The KMS key\
              \ identifier is the Amazon Resource Name (ARN) for the KMS encryption\
              \ key. If you are restoring a cluster with the same Amazon Web Services\
              \ account that owns the KMS encryption key used to encrypt the new cluster,\
              \ then you can use the KMS key alias instead of the ARN for the KMS\
              \ encryption key.</p> <p>If you do not specify a value for the <code>KmsKeyId</code>\
              \ parameter, then the following occurs:</p> <ul> <li> <p>If the snapshot\
              \ or cluster snapshot in <code>SnapshotIdentifier</code> is encrypted,\
              \ then the restored cluster is encrypted using the KMS key that was\
              \ used to encrypt the snapshot or the cluster snapshot.</p> </li> <li>\
              \ <p>If the snapshot or the cluster snapshot in <code>SnapshotIdentifier</code>\
              \ is not encrypted, then the restored DB cluster is not encrypted.</p>\
              \ </li> </ul>"
        EnableCloudwatchLogsExports:
          allOf:
          - $ref: '#/components/schemas/LogTypeList'
          - description: A list of log types that must be enabled for exporting to
              Amazon CloudWatch Logs.
        DeletionProtection:
          allOf:
          - $ref: '#/components/schemas/BooleanOptional'
          - description: "Specifies whether this cluster can be deleted. If <code>DeletionProtection</code>\
              \ is enabled, the cluster cannot be deleted unless it is modified and\
              \ <code>DeletionProtection</code> is disabled. <code>DeletionProtection</code>\
              \ protects clusters from being accidentally deleted."
        DBClusterParameterGroupName:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: "<p>The name of the DB cluster parameter group to associate\
              \ with this DB cluster.</p> <p> <i>Type:</i> String. \_ \_ \_ <i>Required:</i>\
              \ No.</p> <p>If this argument is omitted, the default DB cluster parameter\
              \ group is used. If supplied, must match the name of an existing default\
              \ DB cluster parameter group. The string must consist of from 1 to 255\
              \ letters, numbers or hyphens. Its first character must be a letter,\
              \ and it cannot end with a hyphen or contain two consecutive hyphens.</p>"
      required:
      - DBClusterIdentifier
      - Engine
      - SnapshotIdentifier
      title: RestoreDBClusterFromSnapshotMessage
      type: object
    RestoreDBClusterToPointInTimeMessage:
      description: Represents the input to <a>RestoreDBClusterToPointInTime</a>.
      properties:
        DBClusterIdentifier:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: "<p>The name of the new cluster to be created.</p> <p>Constraints:</p>\
              \ <ul> <li> <p>Must contain from 1 to 63 letters, numbers, or hyphens.</p>\
              \ </li> <li> <p>The first character must be a letter.</p> </li> <li>\
              \ <p>Cannot end with a hyphen or contain two consecutive hyphens.</p>\
              \ </li> </ul>"
        RestoreType:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: "<p>The type of restore to be performed. You can specify\
              \ one of the following values:</p> <ul> <li> <p> <code>full-copy</code>\
              \ - The new DB cluster is restored as a full copy of the source DB cluster.</p>\
              \ </li> <li> <p> <code>copy-on-write</code> - The new DB cluster is\
              \ restored as a clone of the source DB cluster.</p> </li> </ul> <p>Constraints:\
              \ You can't specify <code>copy-on-write</code> if the engine version\
              \ of the source DB cluster is earlier than 1.11.</p> <p>If you don't\
              \ specify a <code>RestoreType</code> value, then the new DB cluster\
              \ is restored as a full copy of the source DB cluster.</p>"
        SourceDBClusterIdentifier:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: <p>The identifier of the source cluster from which to restore.</p>
              <p>Constraints:</p> <ul> <li> <p>Must match the identifier of an existing
              <code>DBCluster</code>.</p> </li> </ul>
        RestoreToTime:
          allOf:
          - $ref: '#/components/schemas/TStamp'
          - description: "<p>The date and time to restore the cluster to.</p> <p>Valid\
              \ values: A time in Universal Coordinated Time (UTC) format.</p> <p>Constraints:</p>\
              \ <ul> <li> <p>Must be before the latest restorable time for the instance.</p>\
              \ </li> <li> <p>Must be specified if the <code>UseLatestRestorableTime</code>\
              \ parameter is not provided.</p> </li> <li> <p>Cannot be specified if\
              \ the <code>UseLatestRestorableTime</code> parameter is <code>true</code>.</p>\
              \ </li> <li> <p>Cannot be specified if the <code>RestoreType</code>\
              \ parameter is <code>copy-on-write</code>.</p> </li> </ul> <p>Example:\
              \ <code>2015-03-07T23:45:00Z</code> </p>"
        UseLatestRestorableTime:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          - description: "<p>A value that is set to <code>true</code> to restore the\
              \ cluster to the latest restorable backup time, and <code>false</code>\
              \ otherwise. </p> <p>Default: <code>false</code> </p> <p>Constraints:\
              \ Cannot be specified if the <code>RestoreToTime</code> parameter is\
              \ provided.</p>"
        Port:
          allOf:
          - $ref: '#/components/schemas/IntegerOptional'
          - description: "<p>The port number on which the new cluster accepts connections.</p>\
              \ <p>Constraints: Must be a value from <code>1150</code> to <code>65535</code>.\
              \ </p> <p>Default: The default port for the engine.</p>"
        DBSubnetGroupName:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: "<p>The subnet group name to use for the new cluster.</p>\
              \ <p>Constraints: If provided, must match the name of an existing <code>DBSubnetGroup</code>.</p>\
              \ <p>Example: <code>mySubnetgroup</code> </p>"
        VpcSecurityGroupIds:
          allOf:
          - $ref: '#/components/schemas/VpcSecurityGroupIdList'
          - description: A list of VPC security groups that the new cluster belongs
              to.
        Tags:
          allOf:
          - $ref: '#/components/schemas/TagList'
          - description: The tags to be assigned to the restored cluster.
        KmsKeyId:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: "<p>The KMS key identifier to use when restoring an encrypted\
              \ cluster from an encrypted cluster.</p> <p>The KMS key identifier is\
              \ the Amazon Resource Name (ARN) for the KMS encryption key. If you\
              \ are restoring a cluster with the same Amazon Web Services account\
              \ that owns the KMS encryption key used to encrypt the new cluster,\
              \ then you can use the KMS key alias instead of the ARN for the KMS\
              \ encryption key.</p> <p>You can restore to a new cluster and encrypt\
              \ the new cluster with an KMS key that is different from the KMS key\
              \ used to encrypt the source cluster. The new DB cluster is encrypted\
              \ with the KMS key identified by the <code>KmsKeyId</code> parameter.</p>\
              \ <p>If you do not specify a value for the <code>KmsKeyId</code> parameter,\
              \ then the following occurs:</p> <ul> <li> <p>If the cluster is encrypted,\
              \ then the restored cluster is encrypted using the KMS key that was\
              \ used to encrypt the source cluster.</p> </li> <li> <p>If the cluster\
              \ is not encrypted, then the restored cluster is not encrypted.</p>\
              \ </li> </ul> <p>If <code>DBClusterIdentifier</code> refers to a cluster\
              \ that is not encrypted, then the restore request is rejected.</p>"
        EnableCloudwatchLogsExports:
          allOf:
          - $ref: '#/components/schemas/LogTypeList'
          - description: A list of log types that must be enabled for exporting to
              Amazon CloudWatch Logs.
        DeletionProtection:
          allOf:
          - $ref: '#/components/schemas/BooleanOptional'
          - description: "Specifies whether this cluster can be deleted. If <code>DeletionProtection</code>\
              \ is enabled, the cluster cannot be deleted unless it is modified and\
              \ <code>DeletionProtection</code> is disabled. <code>DeletionProtection</code>\
              \ protects clusters from being accidentally deleted."
      required:
      - DBClusterIdentifier
      - SourceDBClusterIdentifier
      title: RestoreDBClusterToPointInTimeMessage
      type: object
    StartDBClusterMessage:
      properties:
        DBClusterIdentifier:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: "The identifier of the cluster to restart. Example: <code>docdb-2019-05-28-15-24-52</code> "
      required:
      - DBClusterIdentifier
      title: StartDBClusterMessage
      type: object
    StopDBClusterMessage:
      properties:
        DBClusterIdentifier:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: "The identifier of the cluster to stop. Example: <code>docdb-2019-05-28-15-24-52</code> "
      required:
      - DBClusterIdentifier
      title: StopDBClusterMessage
      type: object
    Subnet:
      description: ' Detailed information about a subnet. '
      properties:
        SubnetIdentifier:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: Specifies the identifier of the subnet.
        SubnetAvailabilityZone:
          $ref: '#/components/schemas/Subnet_SubnetAvailabilityZone'
        SubnetStatus:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: Specifies the status of the subnet.
      type: object
    UpgradeTarget:
      description: The version of the database engine that an instance can be upgraded
        to.
      properties:
        Engine:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The name of the upgrade target database engine.
        EngineVersion:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The version number of the upgrade target database engine.
        Description:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The version of the database engine that an instance can be
              upgraded to.
        AutoUpgrade:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          - description: A value that indicates whether the target version is applied
              to any source DB instances that have <code>AutoMinorVersionUpgrade</code>
              set to <code>true</code>.
        IsMajorVersionUpgrade:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          - description: A value that indicates whether a database engine is upgraded
              to a major version.
      type: object
    VpcSecurityGroupMembership:
      description: Used as a response element for queries on virtual private cloud
        (VPC) security group membership.
      properties:
        VpcSecurityGroupId:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The name of the VPC security group.
        Status:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The status of the VPC security group.
      type: object
    GET_AddTagsToResource_Tags_parameter_inner:
      allOf:
      - $ref: '#/components/schemas/Tag'
      - xml:
          name: Tag
    GET_DescribeCertificates_Filters_parameter_inner:
      allOf:
      - $ref: '#/components/schemas/Filter'
      - xml:
          name: Filter
    GET_ModifyDBCluster_CloudwatchLogsExportConfiguration_parameter:
      description: <p>The configuration setting for the log types to be enabled for
        export to Amazon CloudWatch Logs for a specific instance or cluster.</p> <p>The
        <code>EnableLogTypes</code> and <code>DisableLogTypes</code> arrays determine
        which logs are exported (or not exported) to CloudWatch Logs. The values within
        these arrays depend on the engine that is being used.</p>
      properties:
        EnableLogTypes:
          allOf:
          - $ref: '#/components/schemas/LogTypeList'
          - description: The list of log types to enable.
        DisableLogTypes:
          allOf:
          - $ref: '#/components/schemas/LogTypeList'
          - description: The list of log types to disable.
      type: object
    GET_ModifyDBClusterParameterGroup_Parameters_parameter_inner:
      allOf:
      - $ref: '#/components/schemas/Parameter'
      - xml:
          name: Parameter
    AvailabilityZoneList_inner:
      allOf:
      - $ref: '#/components/schemas/AvailabilityZone'
      - xml:
          name: AvailabilityZone
    CertificateList_inner:
      allOf:
      - $ref: '#/components/schemas/Certificate'
      - xml:
          name: Certificate
    DBInstance_Endpoint:
      allOf:
      - $ref: '#/components/schemas/Endpoint'
      - description: Specifies the connection endpoint.
    DBInstance_DBSubnetGroup:
      allOf:
      - $ref: '#/components/schemas/DBSubnetGroup'
      - description: "Specifies information on the subnet group that is associated\
          \ with the instance, including the name, description, and subnets in the\
          \ subnet group."
    DBInstance_PendingModifiedValues:
      allOf:
      - $ref: '#/components/schemas/PendingModifiedValues'
      - description: Specifies that changes to the instance are pending. This element
          is included only when changes are pending. Specific changes are identified
          by subelements.
    DBClusterMemberList_inner:
      allOf:
      - $ref: '#/components/schemas/DBClusterMember'
      - xml:
          name: DBClusterMember
    VpcSecurityGroupMembershipList_inner:
      allOf:
      - $ref: '#/components/schemas/VpcSecurityGroupMembership'
      - xml:
          name: VpcSecurityGroupMembership
    DBClusterRoles_inner:
      allOf:
      - $ref: '#/components/schemas/DBClusterRole'
      - xml:
          name: DBClusterRole
    DBClusterList_inner:
      allOf:
      - $ref: '#/components/schemas/DBCluster'
      - xml:
          name: DBCluster
    DBClusterParameterGroupList_inner:
      allOf:
      - $ref: '#/components/schemas/DBClusterParameterGroup'
      - xml:
          name: DBClusterParameterGroup
    DBClusterSnapshotAttributeList_inner:
      allOf:
      - $ref: '#/components/schemas/DBClusterSnapshotAttribute'
      - xml:
          name: DBClusterSnapshotAttribute
    DBClusterSnapshotList_inner:
      allOf:
      - $ref: '#/components/schemas/DBClusterSnapshot'
      - xml:
          name: DBClusterSnapshot
    ValidUpgradeTargetList_inner:
      allOf:
      - $ref: '#/components/schemas/UpgradeTarget'
      - xml:
          name: UpgradeTarget
    DBEngineVersionList_inner:
      allOf:
      - $ref: '#/components/schemas/DBEngineVersion'
      - xml:
          name: DBEngineVersion
    PendingModifiedValues_PendingCloudwatchLogsExports:
      allOf:
      - $ref: '#/components/schemas/PendingCloudwatchLogsExports'
      - description: A list of the log types whose configuration is still pending.
          These log types are in the process of being activated or deactivated.
    DBInstanceStatusInfoList_inner:
      allOf:
      - $ref: '#/components/schemas/DBInstanceStatusInfo'
      - xml:
          name: DBInstanceStatusInfo
    DBInstanceList_inner:
      allOf:
      - $ref: '#/components/schemas/DBInstance'
      - xml:
          name: DBInstance
    SubnetList_inner:
      allOf:
      - $ref: '#/components/schemas/Subnet'
      - xml:
          name: Subnet
    DBSubnetGroups_inner:
      allOf:
      - $ref: '#/components/schemas/DBSubnetGroup'
      - xml:
          name: DBSubnetGroup
    EventCategoriesMapList_inner:
      allOf:
      - $ref: '#/components/schemas/EventCategoriesMap'
      - xml:
          name: EventCategoriesMap
    EventList_inner:
      allOf:
      - $ref: '#/components/schemas/Event'
      - xml:
          name: Event
    EventSubscriptionsList_inner:
      allOf:
      - $ref: '#/components/schemas/EventSubscription'
      - xml:
          name: EventSubscription
    GlobalClusterMemberList_inner:
      allOf:
      - $ref: '#/components/schemas/GlobalClusterMember'
      - xml:
          name: GlobalClusterMember
    GlobalClusterList_inner:
      allOf:
      - $ref: '#/components/schemas/GlobalCluster'
      - xml:
          name: GlobalClusterMember
    ModifyDBClusterMessage_CloudwatchLogsExportConfiguration:
      allOf:
      - $ref: '#/components/schemas/CloudwatchLogsExportConfiguration'
      - description: The configuration setting for the log types to be enabled for
          export to Amazon CloudWatch Logs for a specific instance or cluster. The
          <code>EnableLogTypes</code> and <code>DisableLogTypes</code> arrays determine
          which logs are exported (or not exported) to CloudWatch Logs.
    OrderableDBInstanceOptionsList_inner:
      allOf:
      - $ref: '#/components/schemas/OrderableDBInstanceOption'
      - xml:
          name: OrderableDBInstanceOption
    PendingMaintenanceActionDetails_inner:
      allOf:
      - $ref: '#/components/schemas/PendingMaintenanceAction'
      - xml:
          name: PendingMaintenanceAction
    PendingMaintenanceActions_inner:
      allOf:
      - $ref: '#/components/schemas/ResourcePendingMaintenanceActions'
      - xml:
          name: ResourcePendingMaintenanceActions
    Subnet_SubnetAvailabilityZone:
      allOf:
      - $ref: '#/components/schemas/AvailabilityZone'
      - description: Specifies the Availability Zone for the subnet.
  securitySchemes:
    hmac:
      description: Amazon Signature authorization v4
      in: header
      name: Authorization
      type: apiKey
      x-amazon-apigateway-authtype: awsSigv4
x-hasEquivalentPaths: true

