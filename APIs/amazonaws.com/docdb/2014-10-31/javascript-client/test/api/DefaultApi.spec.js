/**
 * Amazon DocumentDB with MongoDB compatibility
 * Amazon DocumentDB is a fast, reliable, and fully managed database service. Amazon DocumentDB makes it easy to set up, operate, and scale MongoDB-compatible databases in the cloud. With Amazon DocumentDB, you can run the same application code and use the same drivers and tools that you use with MongoDB.
 *
 * The version of the OpenAPI document: 2014-10-31
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.AmazonDocumentDbWithMongoDbCompatibility);
  }
}(this, function(expect, AmazonDocumentDbWithMongoDbCompatibility) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new AmazonDocumentDbWithMongoDbCompatibility.DefaultApi();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('DefaultApi', function() {
    describe('gETAddSourceIdentifierToSubscription', function() {
      it('should call gETAddSourceIdentifierToSubscription successfully', function(done) {
        //uncomment below and update the code to test gETAddSourceIdentifierToSubscription
        //instance.gETAddSourceIdentifierToSubscription(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('gETAddTagsToResource', function() {
      it('should call gETAddTagsToResource successfully', function(done) {
        //uncomment below and update the code to test gETAddTagsToResource
        //instance.gETAddTagsToResource(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('gETApplyPendingMaintenanceAction', function() {
      it('should call gETApplyPendingMaintenanceAction successfully', function(done) {
        //uncomment below and update the code to test gETApplyPendingMaintenanceAction
        //instance.gETApplyPendingMaintenanceAction(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('gETCopyDBClusterParameterGroup', function() {
      it('should call gETCopyDBClusterParameterGroup successfully', function(done) {
        //uncomment below and update the code to test gETCopyDBClusterParameterGroup
        //instance.gETCopyDBClusterParameterGroup(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('gETCopyDBClusterSnapshot', function() {
      it('should call gETCopyDBClusterSnapshot successfully', function(done) {
        //uncomment below and update the code to test gETCopyDBClusterSnapshot
        //instance.gETCopyDBClusterSnapshot(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('gETCreateDBCluster', function() {
      it('should call gETCreateDBCluster successfully', function(done) {
        //uncomment below and update the code to test gETCreateDBCluster
        //instance.gETCreateDBCluster(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('gETCreateDBClusterParameterGroup', function() {
      it('should call gETCreateDBClusterParameterGroup successfully', function(done) {
        //uncomment below and update the code to test gETCreateDBClusterParameterGroup
        //instance.gETCreateDBClusterParameterGroup(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('gETCreateDBClusterSnapshot', function() {
      it('should call gETCreateDBClusterSnapshot successfully', function(done) {
        //uncomment below and update the code to test gETCreateDBClusterSnapshot
        //instance.gETCreateDBClusterSnapshot(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('gETCreateDBInstance', function() {
      it('should call gETCreateDBInstance successfully', function(done) {
        //uncomment below and update the code to test gETCreateDBInstance
        //instance.gETCreateDBInstance(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('gETCreateDBSubnetGroup', function() {
      it('should call gETCreateDBSubnetGroup successfully', function(done) {
        //uncomment below and update the code to test gETCreateDBSubnetGroup
        //instance.gETCreateDBSubnetGroup(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('gETCreateEventSubscription', function() {
      it('should call gETCreateEventSubscription successfully', function(done) {
        //uncomment below and update the code to test gETCreateEventSubscription
        //instance.gETCreateEventSubscription(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('gETCreateGlobalCluster', function() {
      it('should call gETCreateGlobalCluster successfully', function(done) {
        //uncomment below and update the code to test gETCreateGlobalCluster
        //instance.gETCreateGlobalCluster(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('gETDeleteDBCluster', function() {
      it('should call gETDeleteDBCluster successfully', function(done) {
        //uncomment below and update the code to test gETDeleteDBCluster
        //instance.gETDeleteDBCluster(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('gETDeleteDBClusterParameterGroup', function() {
      it('should call gETDeleteDBClusterParameterGroup successfully', function(done) {
        //uncomment below and update the code to test gETDeleteDBClusterParameterGroup
        //instance.gETDeleteDBClusterParameterGroup(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('gETDeleteDBClusterSnapshot', function() {
      it('should call gETDeleteDBClusterSnapshot successfully', function(done) {
        //uncomment below and update the code to test gETDeleteDBClusterSnapshot
        //instance.gETDeleteDBClusterSnapshot(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('gETDeleteDBInstance', function() {
      it('should call gETDeleteDBInstance successfully', function(done) {
        //uncomment below and update the code to test gETDeleteDBInstance
        //instance.gETDeleteDBInstance(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('gETDeleteDBSubnetGroup', function() {
      it('should call gETDeleteDBSubnetGroup successfully', function(done) {
        //uncomment below and update the code to test gETDeleteDBSubnetGroup
        //instance.gETDeleteDBSubnetGroup(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('gETDeleteEventSubscription', function() {
      it('should call gETDeleteEventSubscription successfully', function(done) {
        //uncomment below and update the code to test gETDeleteEventSubscription
        //instance.gETDeleteEventSubscription(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('gETDeleteGlobalCluster', function() {
      it('should call gETDeleteGlobalCluster successfully', function(done) {
        //uncomment below and update the code to test gETDeleteGlobalCluster
        //instance.gETDeleteGlobalCluster(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('gETDescribeCertificates', function() {
      it('should call gETDescribeCertificates successfully', function(done) {
        //uncomment below and update the code to test gETDescribeCertificates
        //instance.gETDescribeCertificates(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('gETDescribeDBClusterParameterGroups', function() {
      it('should call gETDescribeDBClusterParameterGroups successfully', function(done) {
        //uncomment below and update the code to test gETDescribeDBClusterParameterGroups
        //instance.gETDescribeDBClusterParameterGroups(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('gETDescribeDBClusterParameters', function() {
      it('should call gETDescribeDBClusterParameters successfully', function(done) {
        //uncomment below and update the code to test gETDescribeDBClusterParameters
        //instance.gETDescribeDBClusterParameters(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('gETDescribeDBClusterSnapshotAttributes', function() {
      it('should call gETDescribeDBClusterSnapshotAttributes successfully', function(done) {
        //uncomment below and update the code to test gETDescribeDBClusterSnapshotAttributes
        //instance.gETDescribeDBClusterSnapshotAttributes(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('gETDescribeDBClusterSnapshots', function() {
      it('should call gETDescribeDBClusterSnapshots successfully', function(done) {
        //uncomment below and update the code to test gETDescribeDBClusterSnapshots
        //instance.gETDescribeDBClusterSnapshots(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('gETDescribeDBClusters', function() {
      it('should call gETDescribeDBClusters successfully', function(done) {
        //uncomment below and update the code to test gETDescribeDBClusters
        //instance.gETDescribeDBClusters(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('gETDescribeDBEngineVersions', function() {
      it('should call gETDescribeDBEngineVersions successfully', function(done) {
        //uncomment below and update the code to test gETDescribeDBEngineVersions
        //instance.gETDescribeDBEngineVersions(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('gETDescribeDBInstances', function() {
      it('should call gETDescribeDBInstances successfully', function(done) {
        //uncomment below and update the code to test gETDescribeDBInstances
        //instance.gETDescribeDBInstances(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('gETDescribeDBSubnetGroups', function() {
      it('should call gETDescribeDBSubnetGroups successfully', function(done) {
        //uncomment below and update the code to test gETDescribeDBSubnetGroups
        //instance.gETDescribeDBSubnetGroups(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('gETDescribeEngineDefaultClusterParameters', function() {
      it('should call gETDescribeEngineDefaultClusterParameters successfully', function(done) {
        //uncomment below and update the code to test gETDescribeEngineDefaultClusterParameters
        //instance.gETDescribeEngineDefaultClusterParameters(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('gETDescribeEventCategories', function() {
      it('should call gETDescribeEventCategories successfully', function(done) {
        //uncomment below and update the code to test gETDescribeEventCategories
        //instance.gETDescribeEventCategories(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('gETDescribeEventSubscriptions', function() {
      it('should call gETDescribeEventSubscriptions successfully', function(done) {
        //uncomment below and update the code to test gETDescribeEventSubscriptions
        //instance.gETDescribeEventSubscriptions(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('gETDescribeEvents', function() {
      it('should call gETDescribeEvents successfully', function(done) {
        //uncomment below and update the code to test gETDescribeEvents
        //instance.gETDescribeEvents(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('gETDescribeGlobalClusters', function() {
      it('should call gETDescribeGlobalClusters successfully', function(done) {
        //uncomment below and update the code to test gETDescribeGlobalClusters
        //instance.gETDescribeGlobalClusters(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('gETDescribeOrderableDBInstanceOptions', function() {
      it('should call gETDescribeOrderableDBInstanceOptions successfully', function(done) {
        //uncomment below and update the code to test gETDescribeOrderableDBInstanceOptions
        //instance.gETDescribeOrderableDBInstanceOptions(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('gETDescribePendingMaintenanceActions', function() {
      it('should call gETDescribePendingMaintenanceActions successfully', function(done) {
        //uncomment below and update the code to test gETDescribePendingMaintenanceActions
        //instance.gETDescribePendingMaintenanceActions(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('gETFailoverDBCluster', function() {
      it('should call gETFailoverDBCluster successfully', function(done) {
        //uncomment below and update the code to test gETFailoverDBCluster
        //instance.gETFailoverDBCluster(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('gETListTagsForResource', function() {
      it('should call gETListTagsForResource successfully', function(done) {
        //uncomment below and update the code to test gETListTagsForResource
        //instance.gETListTagsForResource(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('gETModifyDBCluster', function() {
      it('should call gETModifyDBCluster successfully', function(done) {
        //uncomment below and update the code to test gETModifyDBCluster
        //instance.gETModifyDBCluster(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('gETModifyDBClusterParameterGroup', function() {
      it('should call gETModifyDBClusterParameterGroup successfully', function(done) {
        //uncomment below and update the code to test gETModifyDBClusterParameterGroup
        //instance.gETModifyDBClusterParameterGroup(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('gETModifyDBClusterSnapshotAttribute', function() {
      it('should call gETModifyDBClusterSnapshotAttribute successfully', function(done) {
        //uncomment below and update the code to test gETModifyDBClusterSnapshotAttribute
        //instance.gETModifyDBClusterSnapshotAttribute(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('gETModifyDBInstance', function() {
      it('should call gETModifyDBInstance successfully', function(done) {
        //uncomment below and update the code to test gETModifyDBInstance
        //instance.gETModifyDBInstance(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('gETModifyDBSubnetGroup', function() {
      it('should call gETModifyDBSubnetGroup successfully', function(done) {
        //uncomment below and update the code to test gETModifyDBSubnetGroup
        //instance.gETModifyDBSubnetGroup(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('gETModifyEventSubscription', function() {
      it('should call gETModifyEventSubscription successfully', function(done) {
        //uncomment below and update the code to test gETModifyEventSubscription
        //instance.gETModifyEventSubscription(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('gETModifyGlobalCluster', function() {
      it('should call gETModifyGlobalCluster successfully', function(done) {
        //uncomment below and update the code to test gETModifyGlobalCluster
        //instance.gETModifyGlobalCluster(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('gETRebootDBInstance', function() {
      it('should call gETRebootDBInstance successfully', function(done) {
        //uncomment below and update the code to test gETRebootDBInstance
        //instance.gETRebootDBInstance(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('gETRemoveFromGlobalCluster', function() {
      it('should call gETRemoveFromGlobalCluster successfully', function(done) {
        //uncomment below and update the code to test gETRemoveFromGlobalCluster
        //instance.gETRemoveFromGlobalCluster(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('gETRemoveSourceIdentifierFromSubscription', function() {
      it('should call gETRemoveSourceIdentifierFromSubscription successfully', function(done) {
        //uncomment below and update the code to test gETRemoveSourceIdentifierFromSubscription
        //instance.gETRemoveSourceIdentifierFromSubscription(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('gETRemoveTagsFromResource', function() {
      it('should call gETRemoveTagsFromResource successfully', function(done) {
        //uncomment below and update the code to test gETRemoveTagsFromResource
        //instance.gETRemoveTagsFromResource(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('gETResetDBClusterParameterGroup', function() {
      it('should call gETResetDBClusterParameterGroup successfully', function(done) {
        //uncomment below and update the code to test gETResetDBClusterParameterGroup
        //instance.gETResetDBClusterParameterGroup(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('gETRestoreDBClusterFromSnapshot', function() {
      it('should call gETRestoreDBClusterFromSnapshot successfully', function(done) {
        //uncomment below and update the code to test gETRestoreDBClusterFromSnapshot
        //instance.gETRestoreDBClusterFromSnapshot(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('gETRestoreDBClusterToPointInTime', function() {
      it('should call gETRestoreDBClusterToPointInTime successfully', function(done) {
        //uncomment below and update the code to test gETRestoreDBClusterToPointInTime
        //instance.gETRestoreDBClusterToPointInTime(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('gETStartDBCluster', function() {
      it('should call gETStartDBCluster successfully', function(done) {
        //uncomment below and update the code to test gETStartDBCluster
        //instance.gETStartDBCluster(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('gETStopDBCluster', function() {
      it('should call gETStopDBCluster successfully', function(done) {
        //uncomment below and update the code to test gETStopDBCluster
        //instance.gETStopDBCluster(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('pOSTAddSourceIdentifierToSubscription', function() {
      it('should call pOSTAddSourceIdentifierToSubscription successfully', function(done) {
        //uncomment below and update the code to test pOSTAddSourceIdentifierToSubscription
        //instance.pOSTAddSourceIdentifierToSubscription(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('pOSTAddTagsToResource', function() {
      it('should call pOSTAddTagsToResource successfully', function(done) {
        //uncomment below and update the code to test pOSTAddTagsToResource
        //instance.pOSTAddTagsToResource(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('pOSTApplyPendingMaintenanceAction', function() {
      it('should call pOSTApplyPendingMaintenanceAction successfully', function(done) {
        //uncomment below and update the code to test pOSTApplyPendingMaintenanceAction
        //instance.pOSTApplyPendingMaintenanceAction(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('pOSTCopyDBClusterParameterGroup', function() {
      it('should call pOSTCopyDBClusterParameterGroup successfully', function(done) {
        //uncomment below and update the code to test pOSTCopyDBClusterParameterGroup
        //instance.pOSTCopyDBClusterParameterGroup(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('pOSTCopyDBClusterSnapshot', function() {
      it('should call pOSTCopyDBClusterSnapshot successfully', function(done) {
        //uncomment below and update the code to test pOSTCopyDBClusterSnapshot
        //instance.pOSTCopyDBClusterSnapshot(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('pOSTCreateDBCluster', function() {
      it('should call pOSTCreateDBCluster successfully', function(done) {
        //uncomment below and update the code to test pOSTCreateDBCluster
        //instance.pOSTCreateDBCluster(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('pOSTCreateDBClusterParameterGroup', function() {
      it('should call pOSTCreateDBClusterParameterGroup successfully', function(done) {
        //uncomment below and update the code to test pOSTCreateDBClusterParameterGroup
        //instance.pOSTCreateDBClusterParameterGroup(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('pOSTCreateDBClusterSnapshot', function() {
      it('should call pOSTCreateDBClusterSnapshot successfully', function(done) {
        //uncomment below and update the code to test pOSTCreateDBClusterSnapshot
        //instance.pOSTCreateDBClusterSnapshot(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('pOSTCreateDBInstance', function() {
      it('should call pOSTCreateDBInstance successfully', function(done) {
        //uncomment below and update the code to test pOSTCreateDBInstance
        //instance.pOSTCreateDBInstance(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('pOSTCreateDBSubnetGroup', function() {
      it('should call pOSTCreateDBSubnetGroup successfully', function(done) {
        //uncomment below and update the code to test pOSTCreateDBSubnetGroup
        //instance.pOSTCreateDBSubnetGroup(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('pOSTCreateEventSubscription', function() {
      it('should call pOSTCreateEventSubscription successfully', function(done) {
        //uncomment below and update the code to test pOSTCreateEventSubscription
        //instance.pOSTCreateEventSubscription(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('pOSTCreateGlobalCluster', function() {
      it('should call pOSTCreateGlobalCluster successfully', function(done) {
        //uncomment below and update the code to test pOSTCreateGlobalCluster
        //instance.pOSTCreateGlobalCluster(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('pOSTDeleteDBCluster', function() {
      it('should call pOSTDeleteDBCluster successfully', function(done) {
        //uncomment below and update the code to test pOSTDeleteDBCluster
        //instance.pOSTDeleteDBCluster(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('pOSTDeleteDBClusterParameterGroup', function() {
      it('should call pOSTDeleteDBClusterParameterGroup successfully', function(done) {
        //uncomment below and update the code to test pOSTDeleteDBClusterParameterGroup
        //instance.pOSTDeleteDBClusterParameterGroup(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('pOSTDeleteDBClusterSnapshot', function() {
      it('should call pOSTDeleteDBClusterSnapshot successfully', function(done) {
        //uncomment below and update the code to test pOSTDeleteDBClusterSnapshot
        //instance.pOSTDeleteDBClusterSnapshot(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('pOSTDeleteDBInstance', function() {
      it('should call pOSTDeleteDBInstance successfully', function(done) {
        //uncomment below and update the code to test pOSTDeleteDBInstance
        //instance.pOSTDeleteDBInstance(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('pOSTDeleteDBSubnetGroup', function() {
      it('should call pOSTDeleteDBSubnetGroup successfully', function(done) {
        //uncomment below and update the code to test pOSTDeleteDBSubnetGroup
        //instance.pOSTDeleteDBSubnetGroup(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('pOSTDeleteEventSubscription', function() {
      it('should call pOSTDeleteEventSubscription successfully', function(done) {
        //uncomment below and update the code to test pOSTDeleteEventSubscription
        //instance.pOSTDeleteEventSubscription(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('pOSTDeleteGlobalCluster', function() {
      it('should call pOSTDeleteGlobalCluster successfully', function(done) {
        //uncomment below and update the code to test pOSTDeleteGlobalCluster
        //instance.pOSTDeleteGlobalCluster(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('pOSTDescribeCertificates', function() {
      it('should call pOSTDescribeCertificates successfully', function(done) {
        //uncomment below and update the code to test pOSTDescribeCertificates
        //instance.pOSTDescribeCertificates(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('pOSTDescribeDBClusterParameterGroups', function() {
      it('should call pOSTDescribeDBClusterParameterGroups successfully', function(done) {
        //uncomment below and update the code to test pOSTDescribeDBClusterParameterGroups
        //instance.pOSTDescribeDBClusterParameterGroups(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('pOSTDescribeDBClusterParameters', function() {
      it('should call pOSTDescribeDBClusterParameters successfully', function(done) {
        //uncomment below and update the code to test pOSTDescribeDBClusterParameters
        //instance.pOSTDescribeDBClusterParameters(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('pOSTDescribeDBClusterSnapshotAttributes', function() {
      it('should call pOSTDescribeDBClusterSnapshotAttributes successfully', function(done) {
        //uncomment below and update the code to test pOSTDescribeDBClusterSnapshotAttributes
        //instance.pOSTDescribeDBClusterSnapshotAttributes(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('pOSTDescribeDBClusterSnapshots', function() {
      it('should call pOSTDescribeDBClusterSnapshots successfully', function(done) {
        //uncomment below and update the code to test pOSTDescribeDBClusterSnapshots
        //instance.pOSTDescribeDBClusterSnapshots(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('pOSTDescribeDBClusters', function() {
      it('should call pOSTDescribeDBClusters successfully', function(done) {
        //uncomment below and update the code to test pOSTDescribeDBClusters
        //instance.pOSTDescribeDBClusters(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('pOSTDescribeDBEngineVersions', function() {
      it('should call pOSTDescribeDBEngineVersions successfully', function(done) {
        //uncomment below and update the code to test pOSTDescribeDBEngineVersions
        //instance.pOSTDescribeDBEngineVersions(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('pOSTDescribeDBInstances', function() {
      it('should call pOSTDescribeDBInstances successfully', function(done) {
        //uncomment below and update the code to test pOSTDescribeDBInstances
        //instance.pOSTDescribeDBInstances(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('pOSTDescribeDBSubnetGroups', function() {
      it('should call pOSTDescribeDBSubnetGroups successfully', function(done) {
        //uncomment below and update the code to test pOSTDescribeDBSubnetGroups
        //instance.pOSTDescribeDBSubnetGroups(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('pOSTDescribeEngineDefaultClusterParameters', function() {
      it('should call pOSTDescribeEngineDefaultClusterParameters successfully', function(done) {
        //uncomment below and update the code to test pOSTDescribeEngineDefaultClusterParameters
        //instance.pOSTDescribeEngineDefaultClusterParameters(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('pOSTDescribeEventCategories', function() {
      it('should call pOSTDescribeEventCategories successfully', function(done) {
        //uncomment below and update the code to test pOSTDescribeEventCategories
        //instance.pOSTDescribeEventCategories(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('pOSTDescribeEventSubscriptions', function() {
      it('should call pOSTDescribeEventSubscriptions successfully', function(done) {
        //uncomment below and update the code to test pOSTDescribeEventSubscriptions
        //instance.pOSTDescribeEventSubscriptions(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('pOSTDescribeEvents', function() {
      it('should call pOSTDescribeEvents successfully', function(done) {
        //uncomment below and update the code to test pOSTDescribeEvents
        //instance.pOSTDescribeEvents(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('pOSTDescribeGlobalClusters', function() {
      it('should call pOSTDescribeGlobalClusters successfully', function(done) {
        //uncomment below and update the code to test pOSTDescribeGlobalClusters
        //instance.pOSTDescribeGlobalClusters(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('pOSTDescribeOrderableDBInstanceOptions', function() {
      it('should call pOSTDescribeOrderableDBInstanceOptions successfully', function(done) {
        //uncomment below and update the code to test pOSTDescribeOrderableDBInstanceOptions
        //instance.pOSTDescribeOrderableDBInstanceOptions(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('pOSTDescribePendingMaintenanceActions', function() {
      it('should call pOSTDescribePendingMaintenanceActions successfully', function(done) {
        //uncomment below and update the code to test pOSTDescribePendingMaintenanceActions
        //instance.pOSTDescribePendingMaintenanceActions(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('pOSTFailoverDBCluster', function() {
      it('should call pOSTFailoverDBCluster successfully', function(done) {
        //uncomment below and update the code to test pOSTFailoverDBCluster
        //instance.pOSTFailoverDBCluster(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('pOSTListTagsForResource', function() {
      it('should call pOSTListTagsForResource successfully', function(done) {
        //uncomment below and update the code to test pOSTListTagsForResource
        //instance.pOSTListTagsForResource(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('pOSTModifyDBCluster', function() {
      it('should call pOSTModifyDBCluster successfully', function(done) {
        //uncomment below and update the code to test pOSTModifyDBCluster
        //instance.pOSTModifyDBCluster(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('pOSTModifyDBClusterParameterGroup', function() {
      it('should call pOSTModifyDBClusterParameterGroup successfully', function(done) {
        //uncomment below and update the code to test pOSTModifyDBClusterParameterGroup
        //instance.pOSTModifyDBClusterParameterGroup(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('pOSTModifyDBClusterSnapshotAttribute', function() {
      it('should call pOSTModifyDBClusterSnapshotAttribute successfully', function(done) {
        //uncomment below and update the code to test pOSTModifyDBClusterSnapshotAttribute
        //instance.pOSTModifyDBClusterSnapshotAttribute(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('pOSTModifyDBInstance', function() {
      it('should call pOSTModifyDBInstance successfully', function(done) {
        //uncomment below and update the code to test pOSTModifyDBInstance
        //instance.pOSTModifyDBInstance(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('pOSTModifyDBSubnetGroup', function() {
      it('should call pOSTModifyDBSubnetGroup successfully', function(done) {
        //uncomment below and update the code to test pOSTModifyDBSubnetGroup
        //instance.pOSTModifyDBSubnetGroup(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('pOSTModifyEventSubscription', function() {
      it('should call pOSTModifyEventSubscription successfully', function(done) {
        //uncomment below and update the code to test pOSTModifyEventSubscription
        //instance.pOSTModifyEventSubscription(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('pOSTModifyGlobalCluster', function() {
      it('should call pOSTModifyGlobalCluster successfully', function(done) {
        //uncomment below and update the code to test pOSTModifyGlobalCluster
        //instance.pOSTModifyGlobalCluster(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('pOSTRebootDBInstance', function() {
      it('should call pOSTRebootDBInstance successfully', function(done) {
        //uncomment below and update the code to test pOSTRebootDBInstance
        //instance.pOSTRebootDBInstance(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('pOSTRemoveFromGlobalCluster', function() {
      it('should call pOSTRemoveFromGlobalCluster successfully', function(done) {
        //uncomment below and update the code to test pOSTRemoveFromGlobalCluster
        //instance.pOSTRemoveFromGlobalCluster(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('pOSTRemoveSourceIdentifierFromSubscription', function() {
      it('should call pOSTRemoveSourceIdentifierFromSubscription successfully', function(done) {
        //uncomment below and update the code to test pOSTRemoveSourceIdentifierFromSubscription
        //instance.pOSTRemoveSourceIdentifierFromSubscription(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('pOSTRemoveTagsFromResource', function() {
      it('should call pOSTRemoveTagsFromResource successfully', function(done) {
        //uncomment below and update the code to test pOSTRemoveTagsFromResource
        //instance.pOSTRemoveTagsFromResource(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('pOSTResetDBClusterParameterGroup', function() {
      it('should call pOSTResetDBClusterParameterGroup successfully', function(done) {
        //uncomment below and update the code to test pOSTResetDBClusterParameterGroup
        //instance.pOSTResetDBClusterParameterGroup(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('pOSTRestoreDBClusterFromSnapshot', function() {
      it('should call pOSTRestoreDBClusterFromSnapshot successfully', function(done) {
        //uncomment below and update the code to test pOSTRestoreDBClusterFromSnapshot
        //instance.pOSTRestoreDBClusterFromSnapshot(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('pOSTRestoreDBClusterToPointInTime', function() {
      it('should call pOSTRestoreDBClusterToPointInTime successfully', function(done) {
        //uncomment below and update the code to test pOSTRestoreDBClusterToPointInTime
        //instance.pOSTRestoreDBClusterToPointInTime(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('pOSTStartDBCluster', function() {
      it('should call pOSTStartDBCluster successfully', function(done) {
        //uncomment below and update the code to test pOSTStartDBCluster
        //instance.pOSTStartDBCluster(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('pOSTStopDBCluster', function() {
      it('should call pOSTStopDBCluster successfully', function(done) {
        //uncomment below and update the code to test pOSTStopDBCluster
        //instance.pOSTStopDBCluster(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
  });

}));
