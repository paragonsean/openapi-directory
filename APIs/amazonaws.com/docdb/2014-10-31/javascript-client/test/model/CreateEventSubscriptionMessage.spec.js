/**
 * Amazon DocumentDB with MongoDB compatibility
 * Amazon DocumentDB is a fast, reliable, and fully managed database service. Amazon DocumentDB makes it easy to set up, operate, and scale MongoDB-compatible databases in the cloud. With Amazon DocumentDB, you can run the same application code and use the same drivers and tools that you use with MongoDB.
 *
 * The version of the OpenAPI document: 2014-10-31
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.AmazonDocumentDbWithMongoDbCompatibility);
  }
}(this, function(expect, AmazonDocumentDbWithMongoDbCompatibility) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new AmazonDocumentDbWithMongoDbCompatibility.CreateEventSubscriptionMessage();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('CreateEventSubscriptionMessage', function() {
    it('should create an instance of CreateEventSubscriptionMessage', function() {
      // uncomment below and update the code to test CreateEventSubscriptionMessage
      //var instance = new AmazonDocumentDbWithMongoDbCompatibility.CreateEventSubscriptionMessage();
      //expect(instance).to.be.a(AmazonDocumentDbWithMongoDbCompatibility.CreateEventSubscriptionMessage);
    });

    it('should have the property subscriptionName (base name: "SubscriptionName")', function() {
      // uncomment below and update the code to test the property subscriptionName
      //var instance = new AmazonDocumentDbWithMongoDbCompatibility.CreateEventSubscriptionMessage();
      //expect(instance).to.be();
    });

    it('should have the property snsTopicArn (base name: "SnsTopicArn")', function() {
      // uncomment below and update the code to test the property snsTopicArn
      //var instance = new AmazonDocumentDbWithMongoDbCompatibility.CreateEventSubscriptionMessage();
      //expect(instance).to.be();
    });

    it('should have the property sourceType (base name: "SourceType")', function() {
      // uncomment below and update the code to test the property sourceType
      //var instance = new AmazonDocumentDbWithMongoDbCompatibility.CreateEventSubscriptionMessage();
      //expect(instance).to.be();
    });

    it('should have the property eventCategories (base name: "EventCategories")', function() {
      // uncomment below and update the code to test the property eventCategories
      //var instance = new AmazonDocumentDbWithMongoDbCompatibility.CreateEventSubscriptionMessage();
      //expect(instance).to.be();
    });

    it('should have the property sourceIds (base name: "SourceIds")', function() {
      // uncomment below and update the code to test the property sourceIds
      //var instance = new AmazonDocumentDbWithMongoDbCompatibility.CreateEventSubscriptionMessage();
      //expect(instance).to.be();
    });

    it('should have the property enabled (base name: "Enabled")', function() {
      // uncomment below and update the code to test the property enabled
      //var instance = new AmazonDocumentDbWithMongoDbCompatibility.CreateEventSubscriptionMessage();
      //expect(instance).to.be();
    });

    it('should have the property tags (base name: "Tags")', function() {
      // uncomment below and update the code to test the property tags
      //var instance = new AmazonDocumentDbWithMongoDbCompatibility.CreateEventSubscriptionMessage();
      //expect(instance).to.be();
    });

  });

}));
