/**
 * Amazon DocumentDB with MongoDB compatibility
 * Amazon DocumentDB is a fast, reliable, and fully managed database service. Amazon DocumentDB makes it easy to set up, operate, and scale MongoDB-compatible databases in the cloud. With Amazon DocumentDB, you can run the same application code and use the same drivers and tools that you use with MongoDB.
 *
 * The version of the OpenAPI document: 2014-10-31
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The CreateDBClusterMessage model module.
 * @module model/CreateDBClusterMessage
 * @version 2014-10-31
 */
class CreateDBClusterMessage {
    /**
     * Constructs a new <code>CreateDBClusterMessage</code>.
     * Represents the input to &lt;a&gt;CreateDBCluster&lt;/a&gt;. 
     * @alias module:model/CreateDBClusterMessage
     * @param dBClusterIdentifier {String} 
     * @param engine {String} 
     */
    constructor(dBClusterIdentifier, engine) { 
        
        CreateDBClusterMessage.initialize(this, dBClusterIdentifier, engine);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, dBClusterIdentifier, engine) { 
        obj['DBClusterIdentifier'] = dBClusterIdentifier;
        obj['Engine'] = engine;
    }

    /**
     * Constructs a <code>CreateDBClusterMessage</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/CreateDBClusterMessage} obj Optional instance to populate.
     * @return {module:model/CreateDBClusterMessage} The populated <code>CreateDBClusterMessage</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new CreateDBClusterMessage();

            if (data.hasOwnProperty('AvailabilityZones')) {
                obj['AvailabilityZones'] = ApiClient.convertToType(data['AvailabilityZones'], Array);
            }
            if (data.hasOwnProperty('BackupRetentionPeriod')) {
                obj['BackupRetentionPeriod'] = ApiClient.convertToType(data['BackupRetentionPeriod'], 'Number');
            }
            if (data.hasOwnProperty('DBClusterIdentifier')) {
                obj['DBClusterIdentifier'] = ApiClient.convertToType(data['DBClusterIdentifier'], 'String');
            }
            if (data.hasOwnProperty('DBClusterParameterGroupName')) {
                obj['DBClusterParameterGroupName'] = ApiClient.convertToType(data['DBClusterParameterGroupName'], 'String');
            }
            if (data.hasOwnProperty('VpcSecurityGroupIds')) {
                obj['VpcSecurityGroupIds'] = ApiClient.convertToType(data['VpcSecurityGroupIds'], Array);
            }
            if (data.hasOwnProperty('DBSubnetGroupName')) {
                obj['DBSubnetGroupName'] = ApiClient.convertToType(data['DBSubnetGroupName'], 'String');
            }
            if (data.hasOwnProperty('Engine')) {
                obj['Engine'] = ApiClient.convertToType(data['Engine'], 'String');
            }
            if (data.hasOwnProperty('EngineVersion')) {
                obj['EngineVersion'] = ApiClient.convertToType(data['EngineVersion'], 'String');
            }
            if (data.hasOwnProperty('Port')) {
                obj['Port'] = ApiClient.convertToType(data['Port'], 'Number');
            }
            if (data.hasOwnProperty('MasterUsername')) {
                obj['MasterUsername'] = ApiClient.convertToType(data['MasterUsername'], 'String');
            }
            if (data.hasOwnProperty('MasterUserPassword')) {
                obj['MasterUserPassword'] = ApiClient.convertToType(data['MasterUserPassword'], 'String');
            }
            if (data.hasOwnProperty('PreferredBackupWindow')) {
                obj['PreferredBackupWindow'] = ApiClient.convertToType(data['PreferredBackupWindow'], 'String');
            }
            if (data.hasOwnProperty('PreferredMaintenanceWindow')) {
                obj['PreferredMaintenanceWindow'] = ApiClient.convertToType(data['PreferredMaintenanceWindow'], 'String');
            }
            if (data.hasOwnProperty('Tags')) {
                obj['Tags'] = ApiClient.convertToType(data['Tags'], Array);
            }
            if (data.hasOwnProperty('StorageEncrypted')) {
                obj['StorageEncrypted'] = ApiClient.convertToType(data['StorageEncrypted'], 'Boolean');
            }
            if (data.hasOwnProperty('KmsKeyId')) {
                obj['KmsKeyId'] = ApiClient.convertToType(data['KmsKeyId'], 'String');
            }
            if (data.hasOwnProperty('PreSignedUrl')) {
                obj['PreSignedUrl'] = ApiClient.convertToType(data['PreSignedUrl'], 'String');
            }
            if (data.hasOwnProperty('EnableCloudwatchLogsExports')) {
                obj['EnableCloudwatchLogsExports'] = ApiClient.convertToType(data['EnableCloudwatchLogsExports'], Array);
            }
            if (data.hasOwnProperty('DeletionProtection')) {
                obj['DeletionProtection'] = ApiClient.convertToType(data['DeletionProtection'], 'Boolean');
            }
            if (data.hasOwnProperty('GlobalClusterIdentifier')) {
                obj['GlobalClusterIdentifier'] = ApiClient.convertToType(data['GlobalClusterIdentifier'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>CreateDBClusterMessage</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>CreateDBClusterMessage</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of CreateDBClusterMessage.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // validate the optional field `AvailabilityZones`
        if (data['AvailabilityZones']) { // data not null
          Array.validateJSON(data['AvailabilityZones']);
        }
        // validate the optional field `BackupRetentionPeriod`
        if (data['BackupRetentionPeriod']) { // data not null
          Number.validateJSON(data['BackupRetentionPeriod']);
        }
        // validate the optional field `DBClusterIdentifier`
        if (data['DBClusterIdentifier']) { // data not null
          String.validateJSON(data['DBClusterIdentifier']);
        }
        // validate the optional field `DBClusterParameterGroupName`
        if (data['DBClusterParameterGroupName']) { // data not null
          String.validateJSON(data['DBClusterParameterGroupName']);
        }
        // validate the optional field `VpcSecurityGroupIds`
        if (data['VpcSecurityGroupIds']) { // data not null
          Array.validateJSON(data['VpcSecurityGroupIds']);
        }
        // validate the optional field `DBSubnetGroupName`
        if (data['DBSubnetGroupName']) { // data not null
          String.validateJSON(data['DBSubnetGroupName']);
        }
        // validate the optional field `Engine`
        if (data['Engine']) { // data not null
          String.validateJSON(data['Engine']);
        }
        // validate the optional field `EngineVersion`
        if (data['EngineVersion']) { // data not null
          String.validateJSON(data['EngineVersion']);
        }
        // validate the optional field `Port`
        if (data['Port']) { // data not null
          Number.validateJSON(data['Port']);
        }
        // validate the optional field `MasterUsername`
        if (data['MasterUsername']) { // data not null
          String.validateJSON(data['MasterUsername']);
        }
        // validate the optional field `MasterUserPassword`
        if (data['MasterUserPassword']) { // data not null
          String.validateJSON(data['MasterUserPassword']);
        }
        // validate the optional field `PreferredBackupWindow`
        if (data['PreferredBackupWindow']) { // data not null
          String.validateJSON(data['PreferredBackupWindow']);
        }
        // validate the optional field `PreferredMaintenanceWindow`
        if (data['PreferredMaintenanceWindow']) { // data not null
          String.validateJSON(data['PreferredMaintenanceWindow']);
        }
        // validate the optional field `Tags`
        if (data['Tags']) { // data not null
          Array.validateJSON(data['Tags']);
        }
        // validate the optional field `StorageEncrypted`
        if (data['StorageEncrypted']) { // data not null
          Boolean.validateJSON(data['StorageEncrypted']);
        }
        // validate the optional field `KmsKeyId`
        if (data['KmsKeyId']) { // data not null
          String.validateJSON(data['KmsKeyId']);
        }
        // validate the optional field `PreSignedUrl`
        if (data['PreSignedUrl']) { // data not null
          String.validateJSON(data['PreSignedUrl']);
        }
        // validate the optional field `EnableCloudwatchLogsExports`
        if (data['EnableCloudwatchLogsExports']) { // data not null
          Array.validateJSON(data['EnableCloudwatchLogsExports']);
        }
        // validate the optional field `DeletionProtection`
        if (data['DeletionProtection']) { // data not null
          Boolean.validateJSON(data['DeletionProtection']);
        }
        // validate the optional field `GlobalClusterIdentifier`
        if (data['GlobalClusterIdentifier']) { // data not null
          String.validateJSON(data['GlobalClusterIdentifier']);
        }

        return true;
    }


}

CreateDBClusterMessage.RequiredProperties = ["DBClusterIdentifier", "Engine"];

/**
 * @member {Array} AvailabilityZones
 */
CreateDBClusterMessage.prototype['AvailabilityZones'] = undefined;

/**
 * @member {Number} BackupRetentionPeriod
 */
CreateDBClusterMessage.prototype['BackupRetentionPeriod'] = undefined;

/**
 * @member {String} DBClusterIdentifier
 */
CreateDBClusterMessage.prototype['DBClusterIdentifier'] = undefined;

/**
 * @member {String} DBClusterParameterGroupName
 */
CreateDBClusterMessage.prototype['DBClusterParameterGroupName'] = undefined;

/**
 * @member {Array} VpcSecurityGroupIds
 */
CreateDBClusterMessage.prototype['VpcSecurityGroupIds'] = undefined;

/**
 * @member {String} DBSubnetGroupName
 */
CreateDBClusterMessage.prototype['DBSubnetGroupName'] = undefined;

/**
 * @member {String} Engine
 */
CreateDBClusterMessage.prototype['Engine'] = undefined;

/**
 * @member {String} EngineVersion
 */
CreateDBClusterMessage.prototype['EngineVersion'] = undefined;

/**
 * @member {Number} Port
 */
CreateDBClusterMessage.prototype['Port'] = undefined;

/**
 * @member {String} MasterUsername
 */
CreateDBClusterMessage.prototype['MasterUsername'] = undefined;

/**
 * @member {String} MasterUserPassword
 */
CreateDBClusterMessage.prototype['MasterUserPassword'] = undefined;

/**
 * @member {String} PreferredBackupWindow
 */
CreateDBClusterMessage.prototype['PreferredBackupWindow'] = undefined;

/**
 * @member {String} PreferredMaintenanceWindow
 */
CreateDBClusterMessage.prototype['PreferredMaintenanceWindow'] = undefined;

/**
 * @member {Array} Tags
 */
CreateDBClusterMessage.prototype['Tags'] = undefined;

/**
 * @member {Boolean} StorageEncrypted
 */
CreateDBClusterMessage.prototype['StorageEncrypted'] = undefined;

/**
 * @member {String} KmsKeyId
 */
CreateDBClusterMessage.prototype['KmsKeyId'] = undefined;

/**
 * @member {String} PreSignedUrl
 */
CreateDBClusterMessage.prototype['PreSignedUrl'] = undefined;

/**
 * @member {Array} EnableCloudwatchLogsExports
 */
CreateDBClusterMessage.prototype['EnableCloudwatchLogsExports'] = undefined;

/**
 * @member {Boolean} DeletionProtection
 */
CreateDBClusterMessage.prototype['DeletionProtection'] = undefined;

/**
 * @member {String} GlobalClusterIdentifier
 */
CreateDBClusterMessage.prototype['GlobalClusterIdentifier'] = undefined;






export default CreateDBClusterMessage;

