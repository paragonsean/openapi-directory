/**
 * Amazon DocumentDB with MongoDB compatibility
 * Amazon DocumentDB is a fast, reliable, and fully managed database service. Amazon DocumentDB makes it easy to set up, operate, and scale MongoDB-compatible databases in the cloud. With Amazon DocumentDB, you can run the same application code and use the same drivers and tools that you use with MongoDB.
 *
 * The version of the OpenAPI document: 2014-10-31
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The DeleteDBClusterMessage model module.
 * @module model/DeleteDBClusterMessage
 * @version 2014-10-31
 */
class DeleteDBClusterMessage {
    /**
     * Constructs a new <code>DeleteDBClusterMessage</code>.
     * Represents the input to &lt;a&gt;DeleteDBCluster&lt;/a&gt;.
     * @alias module:model/DeleteDBClusterMessage
     * @param dBClusterIdentifier {String} 
     */
    constructor(dBClusterIdentifier) { 
        
        DeleteDBClusterMessage.initialize(this, dBClusterIdentifier);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, dBClusterIdentifier) { 
        obj['DBClusterIdentifier'] = dBClusterIdentifier;
    }

    /**
     * Constructs a <code>DeleteDBClusterMessage</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/DeleteDBClusterMessage} obj Optional instance to populate.
     * @return {module:model/DeleteDBClusterMessage} The populated <code>DeleteDBClusterMessage</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new DeleteDBClusterMessage();

            if (data.hasOwnProperty('DBClusterIdentifier')) {
                obj['DBClusterIdentifier'] = ApiClient.convertToType(data['DBClusterIdentifier'], 'String');
            }
            if (data.hasOwnProperty('SkipFinalSnapshot')) {
                obj['SkipFinalSnapshot'] = ApiClient.convertToType(data['SkipFinalSnapshot'], 'Boolean');
            }
            if (data.hasOwnProperty('FinalDBSnapshotIdentifier')) {
                obj['FinalDBSnapshotIdentifier'] = ApiClient.convertToType(data['FinalDBSnapshotIdentifier'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>DeleteDBClusterMessage</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>DeleteDBClusterMessage</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of DeleteDBClusterMessage.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // validate the optional field `DBClusterIdentifier`
        if (data['DBClusterIdentifier']) { // data not null
          String.validateJSON(data['DBClusterIdentifier']);
        }
        // validate the optional field `SkipFinalSnapshot`
        if (data['SkipFinalSnapshot']) { // data not null
          Boolean.validateJSON(data['SkipFinalSnapshot']);
        }
        // validate the optional field `FinalDBSnapshotIdentifier`
        if (data['FinalDBSnapshotIdentifier']) { // data not null
          String.validateJSON(data['FinalDBSnapshotIdentifier']);
        }

        return true;
    }


}

DeleteDBClusterMessage.RequiredProperties = ["DBClusterIdentifier"];

/**
 * @member {String} DBClusterIdentifier
 */
DeleteDBClusterMessage.prototype['DBClusterIdentifier'] = undefined;

/**
 * @member {Boolean} SkipFinalSnapshot
 */
DeleteDBClusterMessage.prototype['SkipFinalSnapshot'] = undefined;

/**
 * @member {String} FinalDBSnapshotIdentifier
 */
DeleteDBClusterMessage.prototype['FinalDBSnapshotIdentifier'] = undefined;






export default DeleteDBClusterMessage;

