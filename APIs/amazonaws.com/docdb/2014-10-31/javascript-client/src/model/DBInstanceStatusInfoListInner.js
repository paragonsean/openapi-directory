/**
 * Amazon DocumentDB with MongoDB compatibility
 * Amazon DocumentDB is a fast, reliable, and fully managed database service. Amazon DocumentDB makes it easy to set up, operate, and scale MongoDB-compatible databases in the cloud. With Amazon DocumentDB, you can run the same application code and use the same drivers and tools that you use with MongoDB.
 *
 * The version of the OpenAPI document: 2014-10-31
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import DBInstanceStatusInfo from './DBInstanceStatusInfo';

/**
 * The DBInstanceStatusInfoListInner model module.
 * @module model/DBInstanceStatusInfoListInner
 * @version 2014-10-31
 */
class DBInstanceStatusInfoListInner {
    /**
     * Constructs a new <code>DBInstanceStatusInfoListInner</code>.
     * @alias module:model/DBInstanceStatusInfoListInner
     * @implements module:model/DBInstanceStatusInfo
     */
    constructor() { 
        DBInstanceStatusInfo.initialize(this);
        DBInstanceStatusInfoListInner.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>DBInstanceStatusInfoListInner</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/DBInstanceStatusInfoListInner} obj Optional instance to populate.
     * @return {module:model/DBInstanceStatusInfoListInner} The populated <code>DBInstanceStatusInfoListInner</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new DBInstanceStatusInfoListInner();
            DBInstanceStatusInfo.constructFromObject(data, obj);

            if (data.hasOwnProperty('StatusType')) {
                obj['StatusType'] = ApiClient.convertToType(data['StatusType'], 'String');
            }
            if (data.hasOwnProperty('Normal')) {
                obj['Normal'] = ApiClient.convertToType(data['Normal'], 'Boolean');
            }
            if (data.hasOwnProperty('Status')) {
                obj['Status'] = ApiClient.convertToType(data['Status'], 'String');
            }
            if (data.hasOwnProperty('Message')) {
                obj['Message'] = ApiClient.convertToType(data['Message'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>DBInstanceStatusInfoListInner</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>DBInstanceStatusInfoListInner</code>.
     */
    static validateJSON(data) {
        // validate the optional field `StatusType`
        if (data['StatusType']) { // data not null
          String.validateJSON(data['StatusType']);
        }
        // validate the optional field `Normal`
        if (data['Normal']) { // data not null
          Boolean.validateJSON(data['Normal']);
        }
        // validate the optional field `Status`
        if (data['Status']) { // data not null
          String.validateJSON(data['Status']);
        }
        // validate the optional field `Message`
        if (data['Message']) { // data not null
          String.validateJSON(data['Message']);
        }

        return true;
    }


}



/**
 * @member {String} StatusType
 */
DBInstanceStatusInfoListInner.prototype['StatusType'] = undefined;

/**
 * @member {Boolean} Normal
 */
DBInstanceStatusInfoListInner.prototype['Normal'] = undefined;

/**
 * @member {String} Status
 */
DBInstanceStatusInfoListInner.prototype['Status'] = undefined;

/**
 * @member {String} Message
 */
DBInstanceStatusInfoListInner.prototype['Message'] = undefined;


// Implement DBInstanceStatusInfo interface:
/**
 * @member {String} StatusType
 */
DBInstanceStatusInfo.prototype['StatusType'] = undefined;
/**
 * @member {Boolean} Normal
 */
DBInstanceStatusInfo.prototype['Normal'] = undefined;
/**
 * @member {String} Status
 */
DBInstanceStatusInfo.prototype['Status'] = undefined;
/**
 * @member {String} Message
 */
DBInstanceStatusInfo.prototype['Message'] = undefined;




export default DBInstanceStatusInfoListInner;

