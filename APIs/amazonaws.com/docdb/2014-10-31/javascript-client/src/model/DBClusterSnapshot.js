/**
 * Amazon DocumentDB with MongoDB compatibility
 * Amazon DocumentDB is a fast, reliable, and fully managed database service. Amazon DocumentDB makes it easy to set up, operate, and scale MongoDB-compatible databases in the cloud. With Amazon DocumentDB, you can run the same application code and use the same drivers and tools that you use with MongoDB.
 *
 * The version of the OpenAPI document: 2014-10-31
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The DBClusterSnapshot model module.
 * @module model/DBClusterSnapshot
 * @version 2014-10-31
 */
class DBClusterSnapshot {
    /**
     * Constructs a new <code>DBClusterSnapshot</code>.
     * Detailed information about a cluster snapshot. 
     * @alias module:model/DBClusterSnapshot
     */
    constructor() { 
        
        DBClusterSnapshot.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>DBClusterSnapshot</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/DBClusterSnapshot} obj Optional instance to populate.
     * @return {module:model/DBClusterSnapshot} The populated <code>DBClusterSnapshot</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new DBClusterSnapshot();

            if (data.hasOwnProperty('AvailabilityZones')) {
                obj['AvailabilityZones'] = ApiClient.convertToType(data['AvailabilityZones'], Array);
            }
            if (data.hasOwnProperty('DBClusterSnapshotIdentifier')) {
                obj['DBClusterSnapshotIdentifier'] = ApiClient.convertToType(data['DBClusterSnapshotIdentifier'], 'String');
            }
            if (data.hasOwnProperty('DBClusterIdentifier')) {
                obj['DBClusterIdentifier'] = ApiClient.convertToType(data['DBClusterIdentifier'], 'String');
            }
            if (data.hasOwnProperty('SnapshotCreateTime')) {
                obj['SnapshotCreateTime'] = ApiClient.convertToType(data['SnapshotCreateTime'], 'Date');
            }
            if (data.hasOwnProperty('Engine')) {
                obj['Engine'] = ApiClient.convertToType(data['Engine'], 'String');
            }
            if (data.hasOwnProperty('Status')) {
                obj['Status'] = ApiClient.convertToType(data['Status'], 'String');
            }
            if (data.hasOwnProperty('Port')) {
                obj['Port'] = ApiClient.convertToType(data['Port'], 'Number');
            }
            if (data.hasOwnProperty('VpcId')) {
                obj['VpcId'] = ApiClient.convertToType(data['VpcId'], 'String');
            }
            if (data.hasOwnProperty('ClusterCreateTime')) {
                obj['ClusterCreateTime'] = ApiClient.convertToType(data['ClusterCreateTime'], 'Date');
            }
            if (data.hasOwnProperty('MasterUsername')) {
                obj['MasterUsername'] = ApiClient.convertToType(data['MasterUsername'], 'String');
            }
            if (data.hasOwnProperty('EngineVersion')) {
                obj['EngineVersion'] = ApiClient.convertToType(data['EngineVersion'], 'String');
            }
            if (data.hasOwnProperty('SnapshotType')) {
                obj['SnapshotType'] = ApiClient.convertToType(data['SnapshotType'], 'String');
            }
            if (data.hasOwnProperty('PercentProgress')) {
                obj['PercentProgress'] = ApiClient.convertToType(data['PercentProgress'], 'Number');
            }
            if (data.hasOwnProperty('StorageEncrypted')) {
                obj['StorageEncrypted'] = ApiClient.convertToType(data['StorageEncrypted'], 'Boolean');
            }
            if (data.hasOwnProperty('KmsKeyId')) {
                obj['KmsKeyId'] = ApiClient.convertToType(data['KmsKeyId'], 'String');
            }
            if (data.hasOwnProperty('DBClusterSnapshotArn')) {
                obj['DBClusterSnapshotArn'] = ApiClient.convertToType(data['DBClusterSnapshotArn'], 'String');
            }
            if (data.hasOwnProperty('SourceDBClusterSnapshotArn')) {
                obj['SourceDBClusterSnapshotArn'] = ApiClient.convertToType(data['SourceDBClusterSnapshotArn'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>DBClusterSnapshot</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>DBClusterSnapshot</code>.
     */
    static validateJSON(data) {
        // validate the optional field `AvailabilityZones`
        if (data['AvailabilityZones']) { // data not null
          Array.validateJSON(data['AvailabilityZones']);
        }
        // validate the optional field `DBClusterSnapshotIdentifier`
        if (data['DBClusterSnapshotIdentifier']) { // data not null
          String.validateJSON(data['DBClusterSnapshotIdentifier']);
        }
        // validate the optional field `DBClusterIdentifier`
        if (data['DBClusterIdentifier']) { // data not null
          String.validateJSON(data['DBClusterIdentifier']);
        }
        // validate the optional field `SnapshotCreateTime`
        if (data['SnapshotCreateTime']) { // data not null
          Date.validateJSON(data['SnapshotCreateTime']);
        }
        // validate the optional field `Engine`
        if (data['Engine']) { // data not null
          String.validateJSON(data['Engine']);
        }
        // validate the optional field `Status`
        if (data['Status']) { // data not null
          String.validateJSON(data['Status']);
        }
        // validate the optional field `Port`
        if (data['Port']) { // data not null
          Number.validateJSON(data['Port']);
        }
        // validate the optional field `VpcId`
        if (data['VpcId']) { // data not null
          String.validateJSON(data['VpcId']);
        }
        // validate the optional field `ClusterCreateTime`
        if (data['ClusterCreateTime']) { // data not null
          Date.validateJSON(data['ClusterCreateTime']);
        }
        // validate the optional field `MasterUsername`
        if (data['MasterUsername']) { // data not null
          String.validateJSON(data['MasterUsername']);
        }
        // validate the optional field `EngineVersion`
        if (data['EngineVersion']) { // data not null
          String.validateJSON(data['EngineVersion']);
        }
        // validate the optional field `SnapshotType`
        if (data['SnapshotType']) { // data not null
          String.validateJSON(data['SnapshotType']);
        }
        // validate the optional field `PercentProgress`
        if (data['PercentProgress']) { // data not null
          Number.validateJSON(data['PercentProgress']);
        }
        // validate the optional field `StorageEncrypted`
        if (data['StorageEncrypted']) { // data not null
          Boolean.validateJSON(data['StorageEncrypted']);
        }
        // validate the optional field `KmsKeyId`
        if (data['KmsKeyId']) { // data not null
          String.validateJSON(data['KmsKeyId']);
        }
        // validate the optional field `DBClusterSnapshotArn`
        if (data['DBClusterSnapshotArn']) { // data not null
          String.validateJSON(data['DBClusterSnapshotArn']);
        }
        // validate the optional field `SourceDBClusterSnapshotArn`
        if (data['SourceDBClusterSnapshotArn']) { // data not null
          String.validateJSON(data['SourceDBClusterSnapshotArn']);
        }

        return true;
    }


}



/**
 * @member {Array} AvailabilityZones
 */
DBClusterSnapshot.prototype['AvailabilityZones'] = undefined;

/**
 * @member {String} DBClusterSnapshotIdentifier
 */
DBClusterSnapshot.prototype['DBClusterSnapshotIdentifier'] = undefined;

/**
 * @member {String} DBClusterIdentifier
 */
DBClusterSnapshot.prototype['DBClusterIdentifier'] = undefined;

/**
 * @member {Date} SnapshotCreateTime
 */
DBClusterSnapshot.prototype['SnapshotCreateTime'] = undefined;

/**
 * @member {String} Engine
 */
DBClusterSnapshot.prototype['Engine'] = undefined;

/**
 * @member {String} Status
 */
DBClusterSnapshot.prototype['Status'] = undefined;

/**
 * @member {Number} Port
 */
DBClusterSnapshot.prototype['Port'] = undefined;

/**
 * @member {String} VpcId
 */
DBClusterSnapshot.prototype['VpcId'] = undefined;

/**
 * @member {Date} ClusterCreateTime
 */
DBClusterSnapshot.prototype['ClusterCreateTime'] = undefined;

/**
 * @member {String} MasterUsername
 */
DBClusterSnapshot.prototype['MasterUsername'] = undefined;

/**
 * @member {String} EngineVersion
 */
DBClusterSnapshot.prototype['EngineVersion'] = undefined;

/**
 * @member {String} SnapshotType
 */
DBClusterSnapshot.prototype['SnapshotType'] = undefined;

/**
 * @member {Number} PercentProgress
 */
DBClusterSnapshot.prototype['PercentProgress'] = undefined;

/**
 * @member {Boolean} StorageEncrypted
 */
DBClusterSnapshot.prototype['StorageEncrypted'] = undefined;

/**
 * @member {String} KmsKeyId
 */
DBClusterSnapshot.prototype['KmsKeyId'] = undefined;

/**
 * @member {String} DBClusterSnapshotArn
 */
DBClusterSnapshot.prototype['DBClusterSnapshotArn'] = undefined;

/**
 * @member {String} SourceDBClusterSnapshotArn
 */
DBClusterSnapshot.prototype['SourceDBClusterSnapshotArn'] = undefined;






export default DBClusterSnapshot;

