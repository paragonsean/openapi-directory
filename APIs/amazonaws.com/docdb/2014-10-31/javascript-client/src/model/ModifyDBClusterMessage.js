/**
 * Amazon DocumentDB with MongoDB compatibility
 * Amazon DocumentDB is a fast, reliable, and fully managed database service. Amazon DocumentDB makes it easy to set up, operate, and scale MongoDB-compatible databases in the cloud. With Amazon DocumentDB, you can run the same application code and use the same drivers and tools that you use with MongoDB.
 *
 * The version of the OpenAPI document: 2014-10-31
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import ModifyDBClusterMessageCloudwatchLogsExportConfiguration from './ModifyDBClusterMessageCloudwatchLogsExportConfiguration';

/**
 * The ModifyDBClusterMessage model module.
 * @module model/ModifyDBClusterMessage
 * @version 2014-10-31
 */
class ModifyDBClusterMessage {
    /**
     * Constructs a new <code>ModifyDBClusterMessage</code>.
     * Represents the input to &lt;a&gt;ModifyDBCluster&lt;/a&gt;.
     * @alias module:model/ModifyDBClusterMessage
     * @param dBClusterIdentifier {String} 
     */
    constructor(dBClusterIdentifier) { 
        
        ModifyDBClusterMessage.initialize(this, dBClusterIdentifier);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, dBClusterIdentifier) { 
        obj['DBClusterIdentifier'] = dBClusterIdentifier;
    }

    /**
     * Constructs a <code>ModifyDBClusterMessage</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ModifyDBClusterMessage} obj Optional instance to populate.
     * @return {module:model/ModifyDBClusterMessage} The populated <code>ModifyDBClusterMessage</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ModifyDBClusterMessage();

            if (data.hasOwnProperty('DBClusterIdentifier')) {
                obj['DBClusterIdentifier'] = ApiClient.convertToType(data['DBClusterIdentifier'], 'String');
            }
            if (data.hasOwnProperty('NewDBClusterIdentifier')) {
                obj['NewDBClusterIdentifier'] = ApiClient.convertToType(data['NewDBClusterIdentifier'], 'String');
            }
            if (data.hasOwnProperty('ApplyImmediately')) {
                obj['ApplyImmediately'] = ApiClient.convertToType(data['ApplyImmediately'], 'Boolean');
            }
            if (data.hasOwnProperty('BackupRetentionPeriod')) {
                obj['BackupRetentionPeriod'] = ApiClient.convertToType(data['BackupRetentionPeriod'], 'Number');
            }
            if (data.hasOwnProperty('DBClusterParameterGroupName')) {
                obj['DBClusterParameterGroupName'] = ApiClient.convertToType(data['DBClusterParameterGroupName'], 'String');
            }
            if (data.hasOwnProperty('VpcSecurityGroupIds')) {
                obj['VpcSecurityGroupIds'] = ApiClient.convertToType(data['VpcSecurityGroupIds'], Array);
            }
            if (data.hasOwnProperty('Port')) {
                obj['Port'] = ApiClient.convertToType(data['Port'], 'Number');
            }
            if (data.hasOwnProperty('MasterUserPassword')) {
                obj['MasterUserPassword'] = ApiClient.convertToType(data['MasterUserPassword'], 'String');
            }
            if (data.hasOwnProperty('PreferredBackupWindow')) {
                obj['PreferredBackupWindow'] = ApiClient.convertToType(data['PreferredBackupWindow'], 'String');
            }
            if (data.hasOwnProperty('PreferredMaintenanceWindow')) {
                obj['PreferredMaintenanceWindow'] = ApiClient.convertToType(data['PreferredMaintenanceWindow'], 'String');
            }
            if (data.hasOwnProperty('CloudwatchLogsExportConfiguration')) {
                obj['CloudwatchLogsExportConfiguration'] = ModifyDBClusterMessageCloudwatchLogsExportConfiguration.constructFromObject(data['CloudwatchLogsExportConfiguration']);
            }
            if (data.hasOwnProperty('EngineVersion')) {
                obj['EngineVersion'] = ApiClient.convertToType(data['EngineVersion'], 'String');
            }
            if (data.hasOwnProperty('AllowMajorVersionUpgrade')) {
                obj['AllowMajorVersionUpgrade'] = ApiClient.convertToType(data['AllowMajorVersionUpgrade'], 'Boolean');
            }
            if (data.hasOwnProperty('DeletionProtection')) {
                obj['DeletionProtection'] = ApiClient.convertToType(data['DeletionProtection'], 'Boolean');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>ModifyDBClusterMessage</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>ModifyDBClusterMessage</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of ModifyDBClusterMessage.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // validate the optional field `DBClusterIdentifier`
        if (data['DBClusterIdentifier']) { // data not null
          String.validateJSON(data['DBClusterIdentifier']);
        }
        // validate the optional field `NewDBClusterIdentifier`
        if (data['NewDBClusterIdentifier']) { // data not null
          String.validateJSON(data['NewDBClusterIdentifier']);
        }
        // validate the optional field `ApplyImmediately`
        if (data['ApplyImmediately']) { // data not null
          Boolean.validateJSON(data['ApplyImmediately']);
        }
        // validate the optional field `BackupRetentionPeriod`
        if (data['BackupRetentionPeriod']) { // data not null
          Number.validateJSON(data['BackupRetentionPeriod']);
        }
        // validate the optional field `DBClusterParameterGroupName`
        if (data['DBClusterParameterGroupName']) { // data not null
          String.validateJSON(data['DBClusterParameterGroupName']);
        }
        // validate the optional field `VpcSecurityGroupIds`
        if (data['VpcSecurityGroupIds']) { // data not null
          Array.validateJSON(data['VpcSecurityGroupIds']);
        }
        // validate the optional field `Port`
        if (data['Port']) { // data not null
          Number.validateJSON(data['Port']);
        }
        // validate the optional field `MasterUserPassword`
        if (data['MasterUserPassword']) { // data not null
          String.validateJSON(data['MasterUserPassword']);
        }
        // validate the optional field `PreferredBackupWindow`
        if (data['PreferredBackupWindow']) { // data not null
          String.validateJSON(data['PreferredBackupWindow']);
        }
        // validate the optional field `PreferredMaintenanceWindow`
        if (data['PreferredMaintenanceWindow']) { // data not null
          String.validateJSON(data['PreferredMaintenanceWindow']);
        }
        // validate the optional field `CloudwatchLogsExportConfiguration`
        if (data['CloudwatchLogsExportConfiguration']) { // data not null
          ModifyDBClusterMessageCloudwatchLogsExportConfiguration.validateJSON(data['CloudwatchLogsExportConfiguration']);
        }
        // validate the optional field `EngineVersion`
        if (data['EngineVersion']) { // data not null
          String.validateJSON(data['EngineVersion']);
        }
        // validate the optional field `AllowMajorVersionUpgrade`
        if (data['AllowMajorVersionUpgrade']) { // data not null
          Boolean.validateJSON(data['AllowMajorVersionUpgrade']);
        }
        // validate the optional field `DeletionProtection`
        if (data['DeletionProtection']) { // data not null
          Boolean.validateJSON(data['DeletionProtection']);
        }

        return true;
    }


}

ModifyDBClusterMessage.RequiredProperties = ["DBClusterIdentifier"];

/**
 * @member {String} DBClusterIdentifier
 */
ModifyDBClusterMessage.prototype['DBClusterIdentifier'] = undefined;

/**
 * @member {String} NewDBClusterIdentifier
 */
ModifyDBClusterMessage.prototype['NewDBClusterIdentifier'] = undefined;

/**
 * @member {Boolean} ApplyImmediately
 */
ModifyDBClusterMessage.prototype['ApplyImmediately'] = undefined;

/**
 * @member {Number} BackupRetentionPeriod
 */
ModifyDBClusterMessage.prototype['BackupRetentionPeriod'] = undefined;

/**
 * @member {String} DBClusterParameterGroupName
 */
ModifyDBClusterMessage.prototype['DBClusterParameterGroupName'] = undefined;

/**
 * @member {Array} VpcSecurityGroupIds
 */
ModifyDBClusterMessage.prototype['VpcSecurityGroupIds'] = undefined;

/**
 * @member {Number} Port
 */
ModifyDBClusterMessage.prototype['Port'] = undefined;

/**
 * @member {String} MasterUserPassword
 */
ModifyDBClusterMessage.prototype['MasterUserPassword'] = undefined;

/**
 * @member {String} PreferredBackupWindow
 */
ModifyDBClusterMessage.prototype['PreferredBackupWindow'] = undefined;

/**
 * @member {String} PreferredMaintenanceWindow
 */
ModifyDBClusterMessage.prototype['PreferredMaintenanceWindow'] = undefined;

/**
 * @member {module:model/ModifyDBClusterMessageCloudwatchLogsExportConfiguration} CloudwatchLogsExportConfiguration
 */
ModifyDBClusterMessage.prototype['CloudwatchLogsExportConfiguration'] = undefined;

/**
 * @member {String} EngineVersion
 */
ModifyDBClusterMessage.prototype['EngineVersion'] = undefined;

/**
 * @member {Boolean} AllowMajorVersionUpgrade
 */
ModifyDBClusterMessage.prototype['AllowMajorVersionUpgrade'] = undefined;

/**
 * @member {Boolean} DeletionProtection
 */
ModifyDBClusterMessage.prototype['DeletionProtection'] = undefined;






export default ModifyDBClusterMessage;

