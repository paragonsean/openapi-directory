/**
 * Amazon DocumentDB with MongoDB compatibility
 * Amazon DocumentDB is a fast, reliable, and fully managed database service. Amazon DocumentDB makes it easy to set up, operate, and scale MongoDB-compatible databases in the cloud. With Amazon DocumentDB, you can run the same application code and use the same drivers and tools that you use with MongoDB.
 *
 * The version of the OpenAPI document: 2014-10-31
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import SourceType from './SourceType';

/**
 * The Event model module.
 * @module model/Event
 * @version 2014-10-31
 */
class Event {
    /**
     * Constructs a new <code>Event</code>.
     * Detailed information about an event.
     * @alias module:model/Event
     */
    constructor() { 
        
        Event.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>Event</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/Event} obj Optional instance to populate.
     * @return {module:model/Event} The populated <code>Event</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new Event();

            if (data.hasOwnProperty('SourceIdentifier')) {
                obj['SourceIdentifier'] = ApiClient.convertToType(data['SourceIdentifier'], 'String');
            }
            if (data.hasOwnProperty('SourceType')) {
                obj['SourceType'] = ApiClient.convertToType(data['SourceType'], SourceType);
            }
            if (data.hasOwnProperty('Message')) {
                obj['Message'] = ApiClient.convertToType(data['Message'], 'String');
            }
            if (data.hasOwnProperty('EventCategories')) {
                obj['EventCategories'] = ApiClient.convertToType(data['EventCategories'], Array);
            }
            if (data.hasOwnProperty('Date')) {
                obj['Date'] = ApiClient.convertToType(data['Date'], 'Date');
            }
            if (data.hasOwnProperty('SourceArn')) {
                obj['SourceArn'] = ApiClient.convertToType(data['SourceArn'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>Event</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>Event</code>.
     */
    static validateJSON(data) {
        // validate the optional field `SourceIdentifier`
        if (data['SourceIdentifier']) { // data not null
          String.validateJSON(data['SourceIdentifier']);
        }
        // validate the optional field `SourceType`
        if (data['SourceType']) { // data not null
          SourceType.validateJSON(data['SourceType']);
        }
        // validate the optional field `Message`
        if (data['Message']) { // data not null
          String.validateJSON(data['Message']);
        }
        // validate the optional field `EventCategories`
        if (data['EventCategories']) { // data not null
          Array.validateJSON(data['EventCategories']);
        }
        // validate the optional field `Date`
        if (data['Date']) { // data not null
          Date.validateJSON(data['Date']);
        }
        // validate the optional field `SourceArn`
        if (data['SourceArn']) { // data not null
          String.validateJSON(data['SourceArn']);
        }

        return true;
    }


}



/**
 * @member {String} SourceIdentifier
 */
Event.prototype['SourceIdentifier'] = undefined;

/**
 * @member {module:model/SourceType} SourceType
 */
Event.prototype['SourceType'] = undefined;

/**
 * @member {String} Message
 */
Event.prototype['Message'] = undefined;

/**
 * @member {Array} EventCategories
 */
Event.prototype['EventCategories'] = undefined;

/**
 * @member {Date} Date
 */
Event.prototype['Date'] = undefined;

/**
 * @member {String} SourceArn
 */
Event.prototype['SourceArn'] = undefined;






export default Event;

