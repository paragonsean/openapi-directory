/**
 * Amazon DocumentDB with MongoDB compatibility
 * Amazon DocumentDB is a fast, reliable, and fully managed database service. Amazon DocumentDB makes it easy to set up, operate, and scale MongoDB-compatible databases in the cloud. With Amazon DocumentDB, you can run the same application code and use the same drivers and tools that you use with MongoDB.
 *
 * The version of the OpenAPI document: 2014-10-31
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The CreateDBSubnetGroupMessage model module.
 * @module model/CreateDBSubnetGroupMessage
 * @version 2014-10-31
 */
class CreateDBSubnetGroupMessage {
    /**
     * Constructs a new <code>CreateDBSubnetGroupMessage</code>.
     * Represents the input to &lt;a&gt;CreateDBSubnetGroup&lt;/a&gt;.
     * @alias module:model/CreateDBSubnetGroupMessage
     * @param dBSubnetGroupName {String} 
     * @param dBSubnetGroupDescription {String} 
     * @param subnetIds {Array} 
     */
    constructor(dBSubnetGroupName, dBSubnetGroupDescription, subnetIds) { 
        
        CreateDBSubnetGroupMessage.initialize(this, dBSubnetGroupName, dBSubnetGroupDescription, subnetIds);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, dBSubnetGroupName, dBSubnetGroupDescription, subnetIds) { 
        obj['DBSubnetGroupName'] = dBSubnetGroupName;
        obj['DBSubnetGroupDescription'] = dBSubnetGroupDescription;
        obj['SubnetIds'] = subnetIds;
    }

    /**
     * Constructs a <code>CreateDBSubnetGroupMessage</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/CreateDBSubnetGroupMessage} obj Optional instance to populate.
     * @return {module:model/CreateDBSubnetGroupMessage} The populated <code>CreateDBSubnetGroupMessage</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new CreateDBSubnetGroupMessage();

            if (data.hasOwnProperty('DBSubnetGroupName')) {
                obj['DBSubnetGroupName'] = ApiClient.convertToType(data['DBSubnetGroupName'], 'String');
            }
            if (data.hasOwnProperty('DBSubnetGroupDescription')) {
                obj['DBSubnetGroupDescription'] = ApiClient.convertToType(data['DBSubnetGroupDescription'], 'String');
            }
            if (data.hasOwnProperty('SubnetIds')) {
                obj['SubnetIds'] = ApiClient.convertToType(data['SubnetIds'], Array);
            }
            if (data.hasOwnProperty('Tags')) {
                obj['Tags'] = ApiClient.convertToType(data['Tags'], Array);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>CreateDBSubnetGroupMessage</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>CreateDBSubnetGroupMessage</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of CreateDBSubnetGroupMessage.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // validate the optional field `DBSubnetGroupName`
        if (data['DBSubnetGroupName']) { // data not null
          String.validateJSON(data['DBSubnetGroupName']);
        }
        // validate the optional field `DBSubnetGroupDescription`
        if (data['DBSubnetGroupDescription']) { // data not null
          String.validateJSON(data['DBSubnetGroupDescription']);
        }
        // validate the optional field `SubnetIds`
        if (data['SubnetIds']) { // data not null
          Array.validateJSON(data['SubnetIds']);
        }
        // validate the optional field `Tags`
        if (data['Tags']) { // data not null
          Array.validateJSON(data['Tags']);
        }

        return true;
    }


}

CreateDBSubnetGroupMessage.RequiredProperties = ["DBSubnetGroupName", "DBSubnetGroupDescription", "SubnetIds"];

/**
 * @member {String} DBSubnetGroupName
 */
CreateDBSubnetGroupMessage.prototype['DBSubnetGroupName'] = undefined;

/**
 * @member {String} DBSubnetGroupDescription
 */
CreateDBSubnetGroupMessage.prototype['DBSubnetGroupDescription'] = undefined;

/**
 * @member {Array} SubnetIds
 */
CreateDBSubnetGroupMessage.prototype['SubnetIds'] = undefined;

/**
 * @member {Array} Tags
 */
CreateDBSubnetGroupMessage.prototype['Tags'] = undefined;






export default CreateDBSubnetGroupMessage;

