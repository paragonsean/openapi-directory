/**
 * Amazon DocumentDB with MongoDB compatibility
 * Amazon DocumentDB is a fast, reliable, and fully managed database service. Amazon DocumentDB makes it easy to set up, operate, and scale MongoDB-compatible databases in the cloud. With Amazon DocumentDB, you can run the same application code and use the same drivers and tools that you use with MongoDB.
 *
 * The version of the OpenAPI document: 2014-10-31
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The ModifyEventSubscriptionMessage model module.
 * @module model/ModifyEventSubscriptionMessage
 * @version 2014-10-31
 */
class ModifyEventSubscriptionMessage {
    /**
     * Constructs a new <code>ModifyEventSubscriptionMessage</code>.
     * Represents the input to &lt;a&gt;ModifyEventSubscription&lt;/a&gt;.
     * @alias module:model/ModifyEventSubscriptionMessage
     * @param subscriptionName {String} 
     */
    constructor(subscriptionName) { 
        
        ModifyEventSubscriptionMessage.initialize(this, subscriptionName);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, subscriptionName) { 
        obj['SubscriptionName'] = subscriptionName;
    }

    /**
     * Constructs a <code>ModifyEventSubscriptionMessage</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ModifyEventSubscriptionMessage} obj Optional instance to populate.
     * @return {module:model/ModifyEventSubscriptionMessage} The populated <code>ModifyEventSubscriptionMessage</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ModifyEventSubscriptionMessage();

            if (data.hasOwnProperty('SubscriptionName')) {
                obj['SubscriptionName'] = ApiClient.convertToType(data['SubscriptionName'], 'String');
            }
            if (data.hasOwnProperty('SnsTopicArn')) {
                obj['SnsTopicArn'] = ApiClient.convertToType(data['SnsTopicArn'], 'String');
            }
            if (data.hasOwnProperty('SourceType')) {
                obj['SourceType'] = ApiClient.convertToType(data['SourceType'], 'String');
            }
            if (data.hasOwnProperty('EventCategories')) {
                obj['EventCategories'] = ApiClient.convertToType(data['EventCategories'], Array);
            }
            if (data.hasOwnProperty('Enabled')) {
                obj['Enabled'] = ApiClient.convertToType(data['Enabled'], 'Boolean');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>ModifyEventSubscriptionMessage</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>ModifyEventSubscriptionMessage</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of ModifyEventSubscriptionMessage.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // validate the optional field `SubscriptionName`
        if (data['SubscriptionName']) { // data not null
          String.validateJSON(data['SubscriptionName']);
        }
        // validate the optional field `SnsTopicArn`
        if (data['SnsTopicArn']) { // data not null
          String.validateJSON(data['SnsTopicArn']);
        }
        // validate the optional field `SourceType`
        if (data['SourceType']) { // data not null
          String.validateJSON(data['SourceType']);
        }
        // validate the optional field `EventCategories`
        if (data['EventCategories']) { // data not null
          Array.validateJSON(data['EventCategories']);
        }
        // validate the optional field `Enabled`
        if (data['Enabled']) { // data not null
          Boolean.validateJSON(data['Enabled']);
        }

        return true;
    }


}

ModifyEventSubscriptionMessage.RequiredProperties = ["SubscriptionName"];

/**
 * @member {String} SubscriptionName
 */
ModifyEventSubscriptionMessage.prototype['SubscriptionName'] = undefined;

/**
 * @member {String} SnsTopicArn
 */
ModifyEventSubscriptionMessage.prototype['SnsTopicArn'] = undefined;

/**
 * @member {String} SourceType
 */
ModifyEventSubscriptionMessage.prototype['SourceType'] = undefined;

/**
 * @member {Array} EventCategories
 */
ModifyEventSubscriptionMessage.prototype['EventCategories'] = undefined;

/**
 * @member {Boolean} Enabled
 */
ModifyEventSubscriptionMessage.prototype['Enabled'] = undefined;






export default ModifyEventSubscriptionMessage;

