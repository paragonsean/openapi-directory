/**
 * Amazon DocumentDB with MongoDB compatibility
 * Amazon DocumentDB is a fast, reliable, and fully managed database service. Amazon DocumentDB makes it easy to set up, operate, and scale MongoDB-compatible databases in the cloud. With Amazon DocumentDB, you can run the same application code and use the same drivers and tools that you use with MongoDB.
 *
 * The version of the OpenAPI document: 2014-10-31
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The CopyDBClusterSnapshotMessage model module.
 * @module model/CopyDBClusterSnapshotMessage
 * @version 2014-10-31
 */
class CopyDBClusterSnapshotMessage {
    /**
     * Constructs a new <code>CopyDBClusterSnapshotMessage</code>.
     * Represents the input to &lt;a&gt;CopyDBClusterSnapshot&lt;/a&gt;. 
     * @alias module:model/CopyDBClusterSnapshotMessage
     * @param sourceDBClusterSnapshotIdentifier {String} 
     * @param targetDBClusterSnapshotIdentifier {String} 
     */
    constructor(sourceDBClusterSnapshotIdentifier, targetDBClusterSnapshotIdentifier) { 
        
        CopyDBClusterSnapshotMessage.initialize(this, sourceDBClusterSnapshotIdentifier, targetDBClusterSnapshotIdentifier);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, sourceDBClusterSnapshotIdentifier, targetDBClusterSnapshotIdentifier) { 
        obj['SourceDBClusterSnapshotIdentifier'] = sourceDBClusterSnapshotIdentifier;
        obj['TargetDBClusterSnapshotIdentifier'] = targetDBClusterSnapshotIdentifier;
    }

    /**
     * Constructs a <code>CopyDBClusterSnapshotMessage</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/CopyDBClusterSnapshotMessage} obj Optional instance to populate.
     * @return {module:model/CopyDBClusterSnapshotMessage} The populated <code>CopyDBClusterSnapshotMessage</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new CopyDBClusterSnapshotMessage();

            if (data.hasOwnProperty('SourceDBClusterSnapshotIdentifier')) {
                obj['SourceDBClusterSnapshotIdentifier'] = ApiClient.convertToType(data['SourceDBClusterSnapshotIdentifier'], 'String');
            }
            if (data.hasOwnProperty('TargetDBClusterSnapshotIdentifier')) {
                obj['TargetDBClusterSnapshotIdentifier'] = ApiClient.convertToType(data['TargetDBClusterSnapshotIdentifier'], 'String');
            }
            if (data.hasOwnProperty('KmsKeyId')) {
                obj['KmsKeyId'] = ApiClient.convertToType(data['KmsKeyId'], 'String');
            }
            if (data.hasOwnProperty('PreSignedUrl')) {
                obj['PreSignedUrl'] = ApiClient.convertToType(data['PreSignedUrl'], 'String');
            }
            if (data.hasOwnProperty('CopyTags')) {
                obj['CopyTags'] = ApiClient.convertToType(data['CopyTags'], 'Boolean');
            }
            if (data.hasOwnProperty('Tags')) {
                obj['Tags'] = ApiClient.convertToType(data['Tags'], Array);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>CopyDBClusterSnapshotMessage</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>CopyDBClusterSnapshotMessage</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of CopyDBClusterSnapshotMessage.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // validate the optional field `SourceDBClusterSnapshotIdentifier`
        if (data['SourceDBClusterSnapshotIdentifier']) { // data not null
          String.validateJSON(data['SourceDBClusterSnapshotIdentifier']);
        }
        // validate the optional field `TargetDBClusterSnapshotIdentifier`
        if (data['TargetDBClusterSnapshotIdentifier']) { // data not null
          String.validateJSON(data['TargetDBClusterSnapshotIdentifier']);
        }
        // validate the optional field `KmsKeyId`
        if (data['KmsKeyId']) { // data not null
          String.validateJSON(data['KmsKeyId']);
        }
        // validate the optional field `PreSignedUrl`
        if (data['PreSignedUrl']) { // data not null
          String.validateJSON(data['PreSignedUrl']);
        }
        // validate the optional field `CopyTags`
        if (data['CopyTags']) { // data not null
          Boolean.validateJSON(data['CopyTags']);
        }
        // validate the optional field `Tags`
        if (data['Tags']) { // data not null
          Array.validateJSON(data['Tags']);
        }

        return true;
    }


}

CopyDBClusterSnapshotMessage.RequiredProperties = ["SourceDBClusterSnapshotIdentifier", "TargetDBClusterSnapshotIdentifier"];

/**
 * @member {String} SourceDBClusterSnapshotIdentifier
 */
CopyDBClusterSnapshotMessage.prototype['SourceDBClusterSnapshotIdentifier'] = undefined;

/**
 * @member {String} TargetDBClusterSnapshotIdentifier
 */
CopyDBClusterSnapshotMessage.prototype['TargetDBClusterSnapshotIdentifier'] = undefined;

/**
 * @member {String} KmsKeyId
 */
CopyDBClusterSnapshotMessage.prototype['KmsKeyId'] = undefined;

/**
 * @member {String} PreSignedUrl
 */
CopyDBClusterSnapshotMessage.prototype['PreSignedUrl'] = undefined;

/**
 * @member {Boolean} CopyTags
 */
CopyDBClusterSnapshotMessage.prototype['CopyTags'] = undefined;

/**
 * @member {Array} Tags
 */
CopyDBClusterSnapshotMessage.prototype['Tags'] = undefined;






export default CopyDBClusterSnapshotMessage;

