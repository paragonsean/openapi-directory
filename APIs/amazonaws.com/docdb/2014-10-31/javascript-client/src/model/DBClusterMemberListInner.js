/**
 * Amazon DocumentDB with MongoDB compatibility
 * Amazon DocumentDB is a fast, reliable, and fully managed database service. Amazon DocumentDB makes it easy to set up, operate, and scale MongoDB-compatible databases in the cloud. With Amazon DocumentDB, you can run the same application code and use the same drivers and tools that you use with MongoDB.
 *
 * The version of the OpenAPI document: 2014-10-31
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import DBClusterMember from './DBClusterMember';

/**
 * The DBClusterMemberListInner model module.
 * @module model/DBClusterMemberListInner
 * @version 2014-10-31
 */
class DBClusterMemberListInner {
    /**
     * Constructs a new <code>DBClusterMemberListInner</code>.
     * @alias module:model/DBClusterMemberListInner
     * @implements module:model/DBClusterMember
     */
    constructor() { 
        DBClusterMember.initialize(this);
        DBClusterMemberListInner.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>DBClusterMemberListInner</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/DBClusterMemberListInner} obj Optional instance to populate.
     * @return {module:model/DBClusterMemberListInner} The populated <code>DBClusterMemberListInner</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new DBClusterMemberListInner();
            DBClusterMember.constructFromObject(data, obj);

            if (data.hasOwnProperty('DBInstanceIdentifier')) {
                obj['DBInstanceIdentifier'] = ApiClient.convertToType(data['DBInstanceIdentifier'], 'String');
            }
            if (data.hasOwnProperty('IsClusterWriter')) {
                obj['IsClusterWriter'] = ApiClient.convertToType(data['IsClusterWriter'], 'Boolean');
            }
            if (data.hasOwnProperty('DBClusterParameterGroupStatus')) {
                obj['DBClusterParameterGroupStatus'] = ApiClient.convertToType(data['DBClusterParameterGroupStatus'], 'String');
            }
            if (data.hasOwnProperty('PromotionTier')) {
                obj['PromotionTier'] = ApiClient.convertToType(data['PromotionTier'], 'Number');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>DBClusterMemberListInner</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>DBClusterMemberListInner</code>.
     */
    static validateJSON(data) {
        // validate the optional field `DBInstanceIdentifier`
        if (data['DBInstanceIdentifier']) { // data not null
          String.validateJSON(data['DBInstanceIdentifier']);
        }
        // validate the optional field `IsClusterWriter`
        if (data['IsClusterWriter']) { // data not null
          Boolean.validateJSON(data['IsClusterWriter']);
        }
        // validate the optional field `DBClusterParameterGroupStatus`
        if (data['DBClusterParameterGroupStatus']) { // data not null
          String.validateJSON(data['DBClusterParameterGroupStatus']);
        }
        // validate the optional field `PromotionTier`
        if (data['PromotionTier']) { // data not null
          Number.validateJSON(data['PromotionTier']);
        }

        return true;
    }


}



/**
 * @member {String} DBInstanceIdentifier
 */
DBClusterMemberListInner.prototype['DBInstanceIdentifier'] = undefined;

/**
 * @member {Boolean} IsClusterWriter
 */
DBClusterMemberListInner.prototype['IsClusterWriter'] = undefined;

/**
 * @member {String} DBClusterParameterGroupStatus
 */
DBClusterMemberListInner.prototype['DBClusterParameterGroupStatus'] = undefined;

/**
 * @member {Number} PromotionTier
 */
DBClusterMemberListInner.prototype['PromotionTier'] = undefined;


// Implement DBClusterMember interface:
/**
 * @member {String} DBInstanceIdentifier
 */
DBClusterMember.prototype['DBInstanceIdentifier'] = undefined;
/**
 * @member {Boolean} IsClusterWriter
 */
DBClusterMember.prototype['IsClusterWriter'] = undefined;
/**
 * @member {String} DBClusterParameterGroupStatus
 */
DBClusterMember.prototype['DBClusterParameterGroupStatus'] = undefined;
/**
 * @member {Number} PromotionTier
 */
DBClusterMember.prototype['PromotionTier'] = undefined;




export default DBClusterMemberListInner;

