/**
 * Amazon DocumentDB with MongoDB compatibility
 * Amazon DocumentDB is a fast, reliable, and fully managed database service. Amazon DocumentDB makes it easy to set up, operate, and scale MongoDB-compatible databases in the cloud. With Amazon DocumentDB, you can run the same application code and use the same drivers and tools that you use with MongoDB.
 *
 * The version of the OpenAPI document: 2014-10-31
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The DBCluster model module.
 * @module model/DBCluster
 * @version 2014-10-31
 */
class DBCluster {
    /**
     * Constructs a new <code>DBCluster</code>.
     * Detailed information about a cluster. 
     * @alias module:model/DBCluster
     */
    constructor() { 
        
        DBCluster.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>DBCluster</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/DBCluster} obj Optional instance to populate.
     * @return {module:model/DBCluster} The populated <code>DBCluster</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new DBCluster();

            if (data.hasOwnProperty('AvailabilityZones')) {
                obj['AvailabilityZones'] = ApiClient.convertToType(data['AvailabilityZones'], Array);
            }
            if (data.hasOwnProperty('BackupRetentionPeriod')) {
                obj['BackupRetentionPeriod'] = ApiClient.convertToType(data['BackupRetentionPeriod'], 'Number');
            }
            if (data.hasOwnProperty('DBClusterIdentifier')) {
                obj['DBClusterIdentifier'] = ApiClient.convertToType(data['DBClusterIdentifier'], 'String');
            }
            if (data.hasOwnProperty('DBClusterParameterGroup')) {
                obj['DBClusterParameterGroup'] = ApiClient.convertToType(data['DBClusterParameterGroup'], 'String');
            }
            if (data.hasOwnProperty('DBSubnetGroup')) {
                obj['DBSubnetGroup'] = ApiClient.convertToType(data['DBSubnetGroup'], 'String');
            }
            if (data.hasOwnProperty('Status')) {
                obj['Status'] = ApiClient.convertToType(data['Status'], 'String');
            }
            if (data.hasOwnProperty('PercentProgress')) {
                obj['PercentProgress'] = ApiClient.convertToType(data['PercentProgress'], 'String');
            }
            if (data.hasOwnProperty('EarliestRestorableTime')) {
                obj['EarliestRestorableTime'] = ApiClient.convertToType(data['EarliestRestorableTime'], 'Date');
            }
            if (data.hasOwnProperty('Endpoint')) {
                obj['Endpoint'] = ApiClient.convertToType(data['Endpoint'], 'String');
            }
            if (data.hasOwnProperty('ReaderEndpoint')) {
                obj['ReaderEndpoint'] = ApiClient.convertToType(data['ReaderEndpoint'], 'String');
            }
            if (data.hasOwnProperty('MultiAZ')) {
                obj['MultiAZ'] = ApiClient.convertToType(data['MultiAZ'], 'Boolean');
            }
            if (data.hasOwnProperty('Engine')) {
                obj['Engine'] = ApiClient.convertToType(data['Engine'], 'String');
            }
            if (data.hasOwnProperty('EngineVersion')) {
                obj['EngineVersion'] = ApiClient.convertToType(data['EngineVersion'], 'String');
            }
            if (data.hasOwnProperty('LatestRestorableTime')) {
                obj['LatestRestorableTime'] = ApiClient.convertToType(data['LatestRestorableTime'], 'Date');
            }
            if (data.hasOwnProperty('Port')) {
                obj['Port'] = ApiClient.convertToType(data['Port'], 'Number');
            }
            if (data.hasOwnProperty('MasterUsername')) {
                obj['MasterUsername'] = ApiClient.convertToType(data['MasterUsername'], 'String');
            }
            if (data.hasOwnProperty('PreferredBackupWindow')) {
                obj['PreferredBackupWindow'] = ApiClient.convertToType(data['PreferredBackupWindow'], 'String');
            }
            if (data.hasOwnProperty('PreferredMaintenanceWindow')) {
                obj['PreferredMaintenanceWindow'] = ApiClient.convertToType(data['PreferredMaintenanceWindow'], 'String');
            }
            if (data.hasOwnProperty('ReplicationSourceIdentifier')) {
                obj['ReplicationSourceIdentifier'] = ApiClient.convertToType(data['ReplicationSourceIdentifier'], 'String');
            }
            if (data.hasOwnProperty('ReadReplicaIdentifiers')) {
                obj['ReadReplicaIdentifiers'] = ApiClient.convertToType(data['ReadReplicaIdentifiers'], Array);
            }
            if (data.hasOwnProperty('DBClusterMembers')) {
                obj['DBClusterMembers'] = ApiClient.convertToType(data['DBClusterMembers'], Array);
            }
            if (data.hasOwnProperty('VpcSecurityGroups')) {
                obj['VpcSecurityGroups'] = ApiClient.convertToType(data['VpcSecurityGroups'], Array);
            }
            if (data.hasOwnProperty('HostedZoneId')) {
                obj['HostedZoneId'] = ApiClient.convertToType(data['HostedZoneId'], 'String');
            }
            if (data.hasOwnProperty('StorageEncrypted')) {
                obj['StorageEncrypted'] = ApiClient.convertToType(data['StorageEncrypted'], 'Boolean');
            }
            if (data.hasOwnProperty('KmsKeyId')) {
                obj['KmsKeyId'] = ApiClient.convertToType(data['KmsKeyId'], 'String');
            }
            if (data.hasOwnProperty('DbClusterResourceId')) {
                obj['DbClusterResourceId'] = ApiClient.convertToType(data['DbClusterResourceId'], 'String');
            }
            if (data.hasOwnProperty('DBClusterArn')) {
                obj['DBClusterArn'] = ApiClient.convertToType(data['DBClusterArn'], 'String');
            }
            if (data.hasOwnProperty('AssociatedRoles')) {
                obj['AssociatedRoles'] = ApiClient.convertToType(data['AssociatedRoles'], Array);
            }
            if (data.hasOwnProperty('CloneGroupId')) {
                obj['CloneGroupId'] = ApiClient.convertToType(data['CloneGroupId'], 'String');
            }
            if (data.hasOwnProperty('ClusterCreateTime')) {
                obj['ClusterCreateTime'] = ApiClient.convertToType(data['ClusterCreateTime'], 'Date');
            }
            if (data.hasOwnProperty('EnabledCloudwatchLogsExports')) {
                obj['EnabledCloudwatchLogsExports'] = ApiClient.convertToType(data['EnabledCloudwatchLogsExports'], Array);
            }
            if (data.hasOwnProperty('DeletionProtection')) {
                obj['DeletionProtection'] = ApiClient.convertToType(data['DeletionProtection'], 'Boolean');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>DBCluster</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>DBCluster</code>.
     */
    static validateJSON(data) {
        // validate the optional field `AvailabilityZones`
        if (data['AvailabilityZones']) { // data not null
          Array.validateJSON(data['AvailabilityZones']);
        }
        // validate the optional field `BackupRetentionPeriod`
        if (data['BackupRetentionPeriod']) { // data not null
          Number.validateJSON(data['BackupRetentionPeriod']);
        }
        // validate the optional field `DBClusterIdentifier`
        if (data['DBClusterIdentifier']) { // data not null
          String.validateJSON(data['DBClusterIdentifier']);
        }
        // validate the optional field `DBClusterParameterGroup`
        if (data['DBClusterParameterGroup']) { // data not null
          String.validateJSON(data['DBClusterParameterGroup']);
        }
        // validate the optional field `DBSubnetGroup`
        if (data['DBSubnetGroup']) { // data not null
          String.validateJSON(data['DBSubnetGroup']);
        }
        // validate the optional field `Status`
        if (data['Status']) { // data not null
          String.validateJSON(data['Status']);
        }
        // validate the optional field `PercentProgress`
        if (data['PercentProgress']) { // data not null
          String.validateJSON(data['PercentProgress']);
        }
        // validate the optional field `EarliestRestorableTime`
        if (data['EarliestRestorableTime']) { // data not null
          Date.validateJSON(data['EarliestRestorableTime']);
        }
        // validate the optional field `Endpoint`
        if (data['Endpoint']) { // data not null
          String.validateJSON(data['Endpoint']);
        }
        // validate the optional field `ReaderEndpoint`
        if (data['ReaderEndpoint']) { // data not null
          String.validateJSON(data['ReaderEndpoint']);
        }
        // validate the optional field `MultiAZ`
        if (data['MultiAZ']) { // data not null
          Boolean.validateJSON(data['MultiAZ']);
        }
        // validate the optional field `Engine`
        if (data['Engine']) { // data not null
          String.validateJSON(data['Engine']);
        }
        // validate the optional field `EngineVersion`
        if (data['EngineVersion']) { // data not null
          String.validateJSON(data['EngineVersion']);
        }
        // validate the optional field `LatestRestorableTime`
        if (data['LatestRestorableTime']) { // data not null
          Date.validateJSON(data['LatestRestorableTime']);
        }
        // validate the optional field `Port`
        if (data['Port']) { // data not null
          Number.validateJSON(data['Port']);
        }
        // validate the optional field `MasterUsername`
        if (data['MasterUsername']) { // data not null
          String.validateJSON(data['MasterUsername']);
        }
        // validate the optional field `PreferredBackupWindow`
        if (data['PreferredBackupWindow']) { // data not null
          String.validateJSON(data['PreferredBackupWindow']);
        }
        // validate the optional field `PreferredMaintenanceWindow`
        if (data['PreferredMaintenanceWindow']) { // data not null
          String.validateJSON(data['PreferredMaintenanceWindow']);
        }
        // validate the optional field `ReplicationSourceIdentifier`
        if (data['ReplicationSourceIdentifier']) { // data not null
          String.validateJSON(data['ReplicationSourceIdentifier']);
        }
        // validate the optional field `ReadReplicaIdentifiers`
        if (data['ReadReplicaIdentifiers']) { // data not null
          Array.validateJSON(data['ReadReplicaIdentifiers']);
        }
        // validate the optional field `DBClusterMembers`
        if (data['DBClusterMembers']) { // data not null
          Array.validateJSON(data['DBClusterMembers']);
        }
        // validate the optional field `VpcSecurityGroups`
        if (data['VpcSecurityGroups']) { // data not null
          Array.validateJSON(data['VpcSecurityGroups']);
        }
        // validate the optional field `HostedZoneId`
        if (data['HostedZoneId']) { // data not null
          String.validateJSON(data['HostedZoneId']);
        }
        // validate the optional field `StorageEncrypted`
        if (data['StorageEncrypted']) { // data not null
          Boolean.validateJSON(data['StorageEncrypted']);
        }
        // validate the optional field `KmsKeyId`
        if (data['KmsKeyId']) { // data not null
          String.validateJSON(data['KmsKeyId']);
        }
        // validate the optional field `DbClusterResourceId`
        if (data['DbClusterResourceId']) { // data not null
          String.validateJSON(data['DbClusterResourceId']);
        }
        // validate the optional field `DBClusterArn`
        if (data['DBClusterArn']) { // data not null
          String.validateJSON(data['DBClusterArn']);
        }
        // validate the optional field `AssociatedRoles`
        if (data['AssociatedRoles']) { // data not null
          Array.validateJSON(data['AssociatedRoles']);
        }
        // validate the optional field `CloneGroupId`
        if (data['CloneGroupId']) { // data not null
          String.validateJSON(data['CloneGroupId']);
        }
        // validate the optional field `ClusterCreateTime`
        if (data['ClusterCreateTime']) { // data not null
          Date.validateJSON(data['ClusterCreateTime']);
        }
        // validate the optional field `EnabledCloudwatchLogsExports`
        if (data['EnabledCloudwatchLogsExports']) { // data not null
          Array.validateJSON(data['EnabledCloudwatchLogsExports']);
        }
        // validate the optional field `DeletionProtection`
        if (data['DeletionProtection']) { // data not null
          Boolean.validateJSON(data['DeletionProtection']);
        }

        return true;
    }


}



/**
 * @member {Array} AvailabilityZones
 */
DBCluster.prototype['AvailabilityZones'] = undefined;

/**
 * @member {Number} BackupRetentionPeriod
 */
DBCluster.prototype['BackupRetentionPeriod'] = undefined;

/**
 * @member {String} DBClusterIdentifier
 */
DBCluster.prototype['DBClusterIdentifier'] = undefined;

/**
 * @member {String} DBClusterParameterGroup
 */
DBCluster.prototype['DBClusterParameterGroup'] = undefined;

/**
 * @member {String} DBSubnetGroup
 */
DBCluster.prototype['DBSubnetGroup'] = undefined;

/**
 * @member {String} Status
 */
DBCluster.prototype['Status'] = undefined;

/**
 * @member {String} PercentProgress
 */
DBCluster.prototype['PercentProgress'] = undefined;

/**
 * @member {Date} EarliestRestorableTime
 */
DBCluster.prototype['EarliestRestorableTime'] = undefined;

/**
 * @member {String} Endpoint
 */
DBCluster.prototype['Endpoint'] = undefined;

/**
 * @member {String} ReaderEndpoint
 */
DBCluster.prototype['ReaderEndpoint'] = undefined;

/**
 * @member {Boolean} MultiAZ
 */
DBCluster.prototype['MultiAZ'] = undefined;

/**
 * @member {String} Engine
 */
DBCluster.prototype['Engine'] = undefined;

/**
 * @member {String} EngineVersion
 */
DBCluster.prototype['EngineVersion'] = undefined;

/**
 * @member {Date} LatestRestorableTime
 */
DBCluster.prototype['LatestRestorableTime'] = undefined;

/**
 * @member {Number} Port
 */
DBCluster.prototype['Port'] = undefined;

/**
 * @member {String} MasterUsername
 */
DBCluster.prototype['MasterUsername'] = undefined;

/**
 * @member {String} PreferredBackupWindow
 */
DBCluster.prototype['PreferredBackupWindow'] = undefined;

/**
 * @member {String} PreferredMaintenanceWindow
 */
DBCluster.prototype['PreferredMaintenanceWindow'] = undefined;

/**
 * @member {String} ReplicationSourceIdentifier
 */
DBCluster.prototype['ReplicationSourceIdentifier'] = undefined;

/**
 * @member {Array} ReadReplicaIdentifiers
 */
DBCluster.prototype['ReadReplicaIdentifiers'] = undefined;

/**
 * @member {Array} DBClusterMembers
 */
DBCluster.prototype['DBClusterMembers'] = undefined;

/**
 * @member {Array} VpcSecurityGroups
 */
DBCluster.prototype['VpcSecurityGroups'] = undefined;

/**
 * @member {String} HostedZoneId
 */
DBCluster.prototype['HostedZoneId'] = undefined;

/**
 * @member {Boolean} StorageEncrypted
 */
DBCluster.prototype['StorageEncrypted'] = undefined;

/**
 * @member {String} KmsKeyId
 */
DBCluster.prototype['KmsKeyId'] = undefined;

/**
 * @member {String} DbClusterResourceId
 */
DBCluster.prototype['DbClusterResourceId'] = undefined;

/**
 * @member {String} DBClusterArn
 */
DBCluster.prototype['DBClusterArn'] = undefined;

/**
 * @member {Array} AssociatedRoles
 */
DBCluster.prototype['AssociatedRoles'] = undefined;

/**
 * @member {String} CloneGroupId
 */
DBCluster.prototype['CloneGroupId'] = undefined;

/**
 * @member {Date} ClusterCreateTime
 */
DBCluster.prototype['ClusterCreateTime'] = undefined;

/**
 * @member {Array} EnabledCloudwatchLogsExports
 */
DBCluster.prototype['EnabledCloudwatchLogsExports'] = undefined;

/**
 * @member {Boolean} DeletionProtection
 */
DBCluster.prototype['DeletionProtection'] = undefined;






export default DBCluster;

