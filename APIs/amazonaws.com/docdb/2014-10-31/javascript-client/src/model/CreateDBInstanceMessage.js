/**
 * Amazon DocumentDB with MongoDB compatibility
 * Amazon DocumentDB is a fast, reliable, and fully managed database service. Amazon DocumentDB makes it easy to set up, operate, and scale MongoDB-compatible databases in the cloud. With Amazon DocumentDB, you can run the same application code and use the same drivers and tools that you use with MongoDB.
 *
 * The version of the OpenAPI document: 2014-10-31
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The CreateDBInstanceMessage model module.
 * @module model/CreateDBInstanceMessage
 * @version 2014-10-31
 */
class CreateDBInstanceMessage {
    /**
     * Constructs a new <code>CreateDBInstanceMessage</code>.
     * Represents the input to &lt;a&gt;CreateDBInstance&lt;/a&gt;.
     * @alias module:model/CreateDBInstanceMessage
     * @param dBInstanceIdentifier {String} 
     * @param dBInstanceClass {String} 
     * @param engine {String} 
     * @param dBClusterIdentifier {String} 
     */
    constructor(dBInstanceIdentifier, dBInstanceClass, engine, dBClusterIdentifier) { 
        
        CreateDBInstanceMessage.initialize(this, dBInstanceIdentifier, dBInstanceClass, engine, dBClusterIdentifier);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, dBInstanceIdentifier, dBInstanceClass, engine, dBClusterIdentifier) { 
        obj['DBInstanceIdentifier'] = dBInstanceIdentifier;
        obj['DBInstanceClass'] = dBInstanceClass;
        obj['Engine'] = engine;
        obj['DBClusterIdentifier'] = dBClusterIdentifier;
    }

    /**
     * Constructs a <code>CreateDBInstanceMessage</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/CreateDBInstanceMessage} obj Optional instance to populate.
     * @return {module:model/CreateDBInstanceMessage} The populated <code>CreateDBInstanceMessage</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new CreateDBInstanceMessage();

            if (data.hasOwnProperty('DBInstanceIdentifier')) {
                obj['DBInstanceIdentifier'] = ApiClient.convertToType(data['DBInstanceIdentifier'], 'String');
            }
            if (data.hasOwnProperty('DBInstanceClass')) {
                obj['DBInstanceClass'] = ApiClient.convertToType(data['DBInstanceClass'], 'String');
            }
            if (data.hasOwnProperty('Engine')) {
                obj['Engine'] = ApiClient.convertToType(data['Engine'], 'String');
            }
            if (data.hasOwnProperty('AvailabilityZone')) {
                obj['AvailabilityZone'] = ApiClient.convertToType(data['AvailabilityZone'], 'String');
            }
            if (data.hasOwnProperty('PreferredMaintenanceWindow')) {
                obj['PreferredMaintenanceWindow'] = ApiClient.convertToType(data['PreferredMaintenanceWindow'], 'String');
            }
            if (data.hasOwnProperty('AutoMinorVersionUpgrade')) {
                obj['AutoMinorVersionUpgrade'] = ApiClient.convertToType(data['AutoMinorVersionUpgrade'], 'Boolean');
            }
            if (data.hasOwnProperty('Tags')) {
                obj['Tags'] = ApiClient.convertToType(data['Tags'], Array);
            }
            if (data.hasOwnProperty('DBClusterIdentifier')) {
                obj['DBClusterIdentifier'] = ApiClient.convertToType(data['DBClusterIdentifier'], 'String');
            }
            if (data.hasOwnProperty('CopyTagsToSnapshot')) {
                obj['CopyTagsToSnapshot'] = ApiClient.convertToType(data['CopyTagsToSnapshot'], 'Boolean');
            }
            if (data.hasOwnProperty('PromotionTier')) {
                obj['PromotionTier'] = ApiClient.convertToType(data['PromotionTier'], 'Number');
            }
            if (data.hasOwnProperty('EnablePerformanceInsights')) {
                obj['EnablePerformanceInsights'] = ApiClient.convertToType(data['EnablePerformanceInsights'], 'Boolean');
            }
            if (data.hasOwnProperty('PerformanceInsightsKMSKeyId')) {
                obj['PerformanceInsightsKMSKeyId'] = ApiClient.convertToType(data['PerformanceInsightsKMSKeyId'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>CreateDBInstanceMessage</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>CreateDBInstanceMessage</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of CreateDBInstanceMessage.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // validate the optional field `DBInstanceIdentifier`
        if (data['DBInstanceIdentifier']) { // data not null
          String.validateJSON(data['DBInstanceIdentifier']);
        }
        // validate the optional field `DBInstanceClass`
        if (data['DBInstanceClass']) { // data not null
          String.validateJSON(data['DBInstanceClass']);
        }
        // validate the optional field `Engine`
        if (data['Engine']) { // data not null
          String.validateJSON(data['Engine']);
        }
        // validate the optional field `AvailabilityZone`
        if (data['AvailabilityZone']) { // data not null
          String.validateJSON(data['AvailabilityZone']);
        }
        // validate the optional field `PreferredMaintenanceWindow`
        if (data['PreferredMaintenanceWindow']) { // data not null
          String.validateJSON(data['PreferredMaintenanceWindow']);
        }
        // validate the optional field `AutoMinorVersionUpgrade`
        if (data['AutoMinorVersionUpgrade']) { // data not null
          Boolean.validateJSON(data['AutoMinorVersionUpgrade']);
        }
        // validate the optional field `Tags`
        if (data['Tags']) { // data not null
          Array.validateJSON(data['Tags']);
        }
        // validate the optional field `DBClusterIdentifier`
        if (data['DBClusterIdentifier']) { // data not null
          String.validateJSON(data['DBClusterIdentifier']);
        }
        // validate the optional field `CopyTagsToSnapshot`
        if (data['CopyTagsToSnapshot']) { // data not null
          Boolean.validateJSON(data['CopyTagsToSnapshot']);
        }
        // validate the optional field `PromotionTier`
        if (data['PromotionTier']) { // data not null
          Number.validateJSON(data['PromotionTier']);
        }
        // validate the optional field `EnablePerformanceInsights`
        if (data['EnablePerformanceInsights']) { // data not null
          Boolean.validateJSON(data['EnablePerformanceInsights']);
        }
        // validate the optional field `PerformanceInsightsKMSKeyId`
        if (data['PerformanceInsightsKMSKeyId']) { // data not null
          String.validateJSON(data['PerformanceInsightsKMSKeyId']);
        }

        return true;
    }


}

CreateDBInstanceMessage.RequiredProperties = ["DBInstanceIdentifier", "DBInstanceClass", "Engine", "DBClusterIdentifier"];

/**
 * @member {String} DBInstanceIdentifier
 */
CreateDBInstanceMessage.prototype['DBInstanceIdentifier'] = undefined;

/**
 * @member {String} DBInstanceClass
 */
CreateDBInstanceMessage.prototype['DBInstanceClass'] = undefined;

/**
 * @member {String} Engine
 */
CreateDBInstanceMessage.prototype['Engine'] = undefined;

/**
 * @member {String} AvailabilityZone
 */
CreateDBInstanceMessage.prototype['AvailabilityZone'] = undefined;

/**
 * @member {String} PreferredMaintenanceWindow
 */
CreateDBInstanceMessage.prototype['PreferredMaintenanceWindow'] = undefined;

/**
 * @member {Boolean} AutoMinorVersionUpgrade
 */
CreateDBInstanceMessage.prototype['AutoMinorVersionUpgrade'] = undefined;

/**
 * @member {Array} Tags
 */
CreateDBInstanceMessage.prototype['Tags'] = undefined;

/**
 * @member {String} DBClusterIdentifier
 */
CreateDBInstanceMessage.prototype['DBClusterIdentifier'] = undefined;

/**
 * @member {Boolean} CopyTagsToSnapshot
 */
CreateDBInstanceMessage.prototype['CopyTagsToSnapshot'] = undefined;

/**
 * @member {Number} PromotionTier
 */
CreateDBInstanceMessage.prototype['PromotionTier'] = undefined;

/**
 * @member {Boolean} EnablePerformanceInsights
 */
CreateDBInstanceMessage.prototype['EnablePerformanceInsights'] = undefined;

/**
 * @member {String} PerformanceInsightsKMSKeyId
 */
CreateDBInstanceMessage.prototype['PerformanceInsightsKMSKeyId'] = undefined;






export default CreateDBInstanceMessage;

