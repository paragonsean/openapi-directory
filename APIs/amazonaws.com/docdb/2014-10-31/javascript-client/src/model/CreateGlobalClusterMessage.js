/**
 * Amazon DocumentDB with MongoDB compatibility
 * Amazon DocumentDB is a fast, reliable, and fully managed database service. Amazon DocumentDB makes it easy to set up, operate, and scale MongoDB-compatible databases in the cloud. With Amazon DocumentDB, you can run the same application code and use the same drivers and tools that you use with MongoDB.
 *
 * The version of the OpenAPI document: 2014-10-31
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The CreateGlobalClusterMessage model module.
 * @module model/CreateGlobalClusterMessage
 * @version 2014-10-31
 */
class CreateGlobalClusterMessage {
    /**
     * Constructs a new <code>CreateGlobalClusterMessage</code>.
     * Represents the input to &lt;a&gt;CreateGlobalCluster&lt;/a&gt;.
     * @alias module:model/CreateGlobalClusterMessage
     * @param globalClusterIdentifier {String} 
     */
    constructor(globalClusterIdentifier) { 
        
        CreateGlobalClusterMessage.initialize(this, globalClusterIdentifier);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, globalClusterIdentifier) { 
        obj['GlobalClusterIdentifier'] = globalClusterIdentifier;
    }

    /**
     * Constructs a <code>CreateGlobalClusterMessage</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/CreateGlobalClusterMessage} obj Optional instance to populate.
     * @return {module:model/CreateGlobalClusterMessage} The populated <code>CreateGlobalClusterMessage</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new CreateGlobalClusterMessage();

            if (data.hasOwnProperty('GlobalClusterIdentifier')) {
                obj['GlobalClusterIdentifier'] = ApiClient.convertToType(data['GlobalClusterIdentifier'], 'String');
            }
            if (data.hasOwnProperty('SourceDBClusterIdentifier')) {
                obj['SourceDBClusterIdentifier'] = ApiClient.convertToType(data['SourceDBClusterIdentifier'], 'String');
            }
            if (data.hasOwnProperty('Engine')) {
                obj['Engine'] = ApiClient.convertToType(data['Engine'], 'String');
            }
            if (data.hasOwnProperty('EngineVersion')) {
                obj['EngineVersion'] = ApiClient.convertToType(data['EngineVersion'], 'String');
            }
            if (data.hasOwnProperty('DeletionProtection')) {
                obj['DeletionProtection'] = ApiClient.convertToType(data['DeletionProtection'], 'Boolean');
            }
            if (data.hasOwnProperty('DatabaseName')) {
                obj['DatabaseName'] = ApiClient.convertToType(data['DatabaseName'], 'String');
            }
            if (data.hasOwnProperty('StorageEncrypted')) {
                obj['StorageEncrypted'] = ApiClient.convertToType(data['StorageEncrypted'], 'Boolean');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>CreateGlobalClusterMessage</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>CreateGlobalClusterMessage</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of CreateGlobalClusterMessage.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // validate the optional field `GlobalClusterIdentifier`
        if (data['GlobalClusterIdentifier']) { // data not null
          String.validateJSON(data['GlobalClusterIdentifier']);
        }
        // validate the optional field `SourceDBClusterIdentifier`
        if (data['SourceDBClusterIdentifier']) { // data not null
          String.validateJSON(data['SourceDBClusterIdentifier']);
        }
        // validate the optional field `Engine`
        if (data['Engine']) { // data not null
          String.validateJSON(data['Engine']);
        }
        // validate the optional field `EngineVersion`
        if (data['EngineVersion']) { // data not null
          String.validateJSON(data['EngineVersion']);
        }
        // validate the optional field `DeletionProtection`
        if (data['DeletionProtection']) { // data not null
          Boolean.validateJSON(data['DeletionProtection']);
        }
        // validate the optional field `DatabaseName`
        if (data['DatabaseName']) { // data not null
          String.validateJSON(data['DatabaseName']);
        }
        // validate the optional field `StorageEncrypted`
        if (data['StorageEncrypted']) { // data not null
          Boolean.validateJSON(data['StorageEncrypted']);
        }

        return true;
    }


}

CreateGlobalClusterMessage.RequiredProperties = ["GlobalClusterIdentifier"];

/**
 * @member {String} GlobalClusterIdentifier
 */
CreateGlobalClusterMessage.prototype['GlobalClusterIdentifier'] = undefined;

/**
 * @member {String} SourceDBClusterIdentifier
 */
CreateGlobalClusterMessage.prototype['SourceDBClusterIdentifier'] = undefined;

/**
 * @member {String} Engine
 */
CreateGlobalClusterMessage.prototype['Engine'] = undefined;

/**
 * @member {String} EngineVersion
 */
CreateGlobalClusterMessage.prototype['EngineVersion'] = undefined;

/**
 * @member {Boolean} DeletionProtection
 */
CreateGlobalClusterMessage.prototype['DeletionProtection'] = undefined;

/**
 * @member {String} DatabaseName
 */
CreateGlobalClusterMessage.prototype['DatabaseName'] = undefined;

/**
 * @member {Boolean} StorageEncrypted
 */
CreateGlobalClusterMessage.prototype['StorageEncrypted'] = undefined;






export default CreateGlobalClusterMessage;

