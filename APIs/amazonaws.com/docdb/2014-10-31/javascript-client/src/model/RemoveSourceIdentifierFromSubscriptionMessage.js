/**
 * Amazon DocumentDB with MongoDB compatibility
 * Amazon DocumentDB is a fast, reliable, and fully managed database service. Amazon DocumentDB makes it easy to set up, operate, and scale MongoDB-compatible databases in the cloud. With Amazon DocumentDB, you can run the same application code and use the same drivers and tools that you use with MongoDB.
 *
 * The version of the OpenAPI document: 2014-10-31
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The RemoveSourceIdentifierFromSubscriptionMessage model module.
 * @module model/RemoveSourceIdentifierFromSubscriptionMessage
 * @version 2014-10-31
 */
class RemoveSourceIdentifierFromSubscriptionMessage {
    /**
     * Constructs a new <code>RemoveSourceIdentifierFromSubscriptionMessage</code>.
     * Represents the input to &lt;a&gt;RemoveSourceIdentifierFromSubscription&lt;/a&gt;.
     * @alias module:model/RemoveSourceIdentifierFromSubscriptionMessage
     * @param subscriptionName {String} 
     * @param sourceIdentifier {String} 
     */
    constructor(subscriptionName, sourceIdentifier) { 
        
        RemoveSourceIdentifierFromSubscriptionMessage.initialize(this, subscriptionName, sourceIdentifier);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, subscriptionName, sourceIdentifier) { 
        obj['SubscriptionName'] = subscriptionName;
        obj['SourceIdentifier'] = sourceIdentifier;
    }

    /**
     * Constructs a <code>RemoveSourceIdentifierFromSubscriptionMessage</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/RemoveSourceIdentifierFromSubscriptionMessage} obj Optional instance to populate.
     * @return {module:model/RemoveSourceIdentifierFromSubscriptionMessage} The populated <code>RemoveSourceIdentifierFromSubscriptionMessage</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new RemoveSourceIdentifierFromSubscriptionMessage();

            if (data.hasOwnProperty('SubscriptionName')) {
                obj['SubscriptionName'] = ApiClient.convertToType(data['SubscriptionName'], 'String');
            }
            if (data.hasOwnProperty('SourceIdentifier')) {
                obj['SourceIdentifier'] = ApiClient.convertToType(data['SourceIdentifier'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>RemoveSourceIdentifierFromSubscriptionMessage</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>RemoveSourceIdentifierFromSubscriptionMessage</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of RemoveSourceIdentifierFromSubscriptionMessage.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // validate the optional field `SubscriptionName`
        if (data['SubscriptionName']) { // data not null
          String.validateJSON(data['SubscriptionName']);
        }
        // validate the optional field `SourceIdentifier`
        if (data['SourceIdentifier']) { // data not null
          String.validateJSON(data['SourceIdentifier']);
        }

        return true;
    }


}

RemoveSourceIdentifierFromSubscriptionMessage.RequiredProperties = ["SubscriptionName", "SourceIdentifier"];

/**
 * @member {String} SubscriptionName
 */
RemoveSourceIdentifierFromSubscriptionMessage.prototype['SubscriptionName'] = undefined;

/**
 * @member {String} SourceIdentifier
 */
RemoveSourceIdentifierFromSubscriptionMessage.prototype['SourceIdentifier'] = undefined;






export default RemoveSourceIdentifierFromSubscriptionMessage;

