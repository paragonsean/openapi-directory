/**
 * Amazon DocumentDB with MongoDB compatibility
 * Amazon DocumentDB is a fast, reliable, and fully managed database service. Amazon DocumentDB makes it easy to set up, operate, and scale MongoDB-compatible databases in the cloud. With Amazon DocumentDB, you can run the same application code and use the same drivers and tools that you use with MongoDB.
 *
 * The version of the OpenAPI document: 2014-10-31
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The RebootDBInstanceMessage model module.
 * @module model/RebootDBInstanceMessage
 * @version 2014-10-31
 */
class RebootDBInstanceMessage {
    /**
     * Constructs a new <code>RebootDBInstanceMessage</code>.
     * Represents the input to &lt;a&gt;RebootDBInstance&lt;/a&gt;.
     * @alias module:model/RebootDBInstanceMessage
     * @param dBInstanceIdentifier {String} 
     */
    constructor(dBInstanceIdentifier) { 
        
        RebootDBInstanceMessage.initialize(this, dBInstanceIdentifier);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, dBInstanceIdentifier) { 
        obj['DBInstanceIdentifier'] = dBInstanceIdentifier;
    }

    /**
     * Constructs a <code>RebootDBInstanceMessage</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/RebootDBInstanceMessage} obj Optional instance to populate.
     * @return {module:model/RebootDBInstanceMessage} The populated <code>RebootDBInstanceMessage</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new RebootDBInstanceMessage();

            if (data.hasOwnProperty('DBInstanceIdentifier')) {
                obj['DBInstanceIdentifier'] = ApiClient.convertToType(data['DBInstanceIdentifier'], 'String');
            }
            if (data.hasOwnProperty('ForceFailover')) {
                obj['ForceFailover'] = ApiClient.convertToType(data['ForceFailover'], 'Boolean');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>RebootDBInstanceMessage</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>RebootDBInstanceMessage</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of RebootDBInstanceMessage.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // validate the optional field `DBInstanceIdentifier`
        if (data['DBInstanceIdentifier']) { // data not null
          String.validateJSON(data['DBInstanceIdentifier']);
        }
        // validate the optional field `ForceFailover`
        if (data['ForceFailover']) { // data not null
          Boolean.validateJSON(data['ForceFailover']);
        }

        return true;
    }


}

RebootDBInstanceMessage.RequiredProperties = ["DBInstanceIdentifier"];

/**
 * @member {String} DBInstanceIdentifier
 */
RebootDBInstanceMessage.prototype['DBInstanceIdentifier'] = undefined;

/**
 * @member {Boolean} ForceFailover
 */
RebootDBInstanceMessage.prototype['ForceFailover'] = undefined;






export default RebootDBInstanceMessage;

