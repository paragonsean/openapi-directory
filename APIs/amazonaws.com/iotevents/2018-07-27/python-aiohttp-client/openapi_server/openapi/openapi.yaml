openapi: 3.0.0
info:
  contact:
    email: mike.ralphson@gmail.com
    name: Mike Ralphson
    url: https://github.com/mermade/aws2openapi
    x-twitter: PermittedSoc
  description: "AWS IoT Events monitors your equipment or device fleets for failures\
    \ or changes in operation, and triggers actions when such events occur. You can\
    \ use AWS IoT Events API operations to create, read, update, and delete inputs\
    \ and detector models, and to list their versions."
  license:
    name: Apache 2.0 License
    url: http://www.apache.org/licenses/
  termsOfService: https://aws.amazon.com/service-terms/
  title: AWS IoT Events
  version: 2018-07-27
  x-release: v4
  x-logo:
    url: https://twitter.com/awscloud/profile_image?size=original
    backgroundColor: '#FFFFFF'
  x-providerName: amazonaws.com
  x-serviceName: iotevents
  x-aws-signingName: iotevents
  x-origin:
  - contentType: application/json
    url: https://raw.githubusercontent.com/aws/aws-sdk-js/master/apis/iotevents-2018-07-27.normal.json
    converter:
      url: https://github.com/mermade/aws2openapi
      version: 1.0.0
    x-apisguru-driver: external
  x-apiClientRegistration:
    url: https://portal.aws.amazon.com/gp/aws/developer/registration/index.html?nc2=h_ct
  x-apisguru-categories:
  - cloud
  x-preferred: true
externalDocs:
  description: Amazon Web Services documentation
  url: https://docs.aws.amazon.com/iotevents/
servers:
- description: The AWS IoT Events multi-region endpoint
  url: "http://iotevents.{region}.amazonaws.com"
  variables:
    region:
      default: us-east-1
      description: The AWS region
      enum:
      - us-east-1
      - us-east-2
      - us-west-1
      - us-west-2
      - us-gov-west-1
      - us-gov-east-1
      - ca-central-1
      - eu-north-1
      - eu-west-1
      - eu-west-2
      - eu-west-3
      - eu-central-1
      - eu-south-1
      - af-south-1
      - ap-northeast-1
      - ap-northeast-2
      - ap-northeast-3
      - ap-southeast-1
      - ap-southeast-2
      - ap-east-1
      - ap-south-1
      - sa-east-1
      - me-south-1
- description: The AWS IoT Events multi-region endpoint
  url: "https://iotevents.{region}.amazonaws.com"
  variables:
    region:
      default: us-east-1
      description: The AWS region
      enum:
      - us-east-1
      - us-east-2
      - us-west-1
      - us-west-2
      - us-gov-west-1
      - us-gov-east-1
      - ca-central-1
      - eu-north-1
      - eu-west-1
      - eu-west-2
      - eu-west-3
      - eu-central-1
      - eu-south-1
      - af-south-1
      - ap-northeast-1
      - ap-northeast-2
      - ap-northeast-3
      - ap-southeast-1
      - ap-southeast-2
      - ap-east-1
      - ap-south-1
      - sa-east-1
      - me-south-1
- description: The AWS IoT Events endpoint for China (Beijing) and China (Ningxia)
  url: "http://iotevents.{region}.amazonaws.com.cn"
  variables:
    region:
      default: cn-north-1
      description: The AWS region
      enum:
      - cn-north-1
      - cn-northwest-1
- description: The AWS IoT Events endpoint for China (Beijing) and China (Ningxia)
  url: "https://iotevents.{region}.amazonaws.com.cn"
  variables:
    region:
      default: cn-north-1
      description: The AWS region
      enum:
      - cn-north-1
      - cn-northwest-1
security:
- hmac: []
paths:
  /alarm-models:
    get:
      description: Lists the alarm models that you created. The operation returns
        only the metadata associated with each alarm model.
      operationId: list_alarm_models
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The token that you can use to return the next set of results.
        explode: true
        in: query
        name: nextToken
        required: false
        schema:
          type: string
        style: form
      - description: The maximum number of results to be returned per request.
        explode: true
        in: query
        name: maxResults
        required: false
        schema:
          maximum: 250
          minimum: 1
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListAlarmModelsResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
          description: InvalidRequestException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalFailureException'
          description: InternalFailureException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
          description: ServiceUnavailableException
      x-openapi-router-controller: openapi_server.controllers.default_controller
    post:
      description: "Creates an alarm model to monitor an AWS IoT Events input attribute.\
        \ You can use the alarm to get notified when the value is outside a specified\
        \ range. For more information, see <a href=\"https://docs.aws.amazon.com/iotevents/latest/developerguide/create-alarms.html\"\
        >Create an alarm model</a> in the <i>AWS IoT Events Developer Guide</i>."
      operationId: create_alarm_model
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateAlarmModel_request'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateAlarmModelResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
          description: InvalidRequestException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceInUseException'
          description: ResourceInUseException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceAlreadyExistsException'
          description: ResourceAlreadyExistsException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
          description: LimitExceededException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalFailureException'
          description: InternalFailureException
        "486":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
          description: ServiceUnavailableException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /alarm-models/{alarmModelName}:
    delete:
      description: Deletes an alarm model. Any alarm instances that were created based
        on this alarm model are also deleted. This action can't be undone.
      operationId: delete_alarm_model
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The name of the alarm model.
        explode: false
        in: path
        name: alarmModelName
        required: true
        schema:
          maxLength: 128
          minLength: 1
          pattern: "^[a-zA-Z0-9_-]+$"
          type: string
        style: simple
      responses:
        "204":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteAlarmModelResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
          description: InvalidRequestException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceInUseException'
          description: ResourceInUseException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalFailureException'
          description: InternalFailureException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
          description: ServiceUnavailableException
      x-openapi-router-controller: openapi_server.controllers.default_controller
    get:
      description: "Retrieves information about an alarm model. If you don't specify\
        \ a value for the <code>alarmModelVersion</code> parameter, the latest version\
        \ is returned."
      operationId: describe_alarm_model
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The name of the alarm model.
        explode: false
        in: path
        name: alarmModelName
        required: true
        schema:
          maxLength: 128
          minLength: 1
          pattern: "^[a-zA-Z0-9_-]+$"
          type: string
        style: simple
      - description: The version of the alarm model.
        explode: true
        in: query
        name: version
        required: false
        schema:
          maxLength: 128
          minLength: 1
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DescribeAlarmModelResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
          description: InvalidRequestException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalFailureException'
          description: InternalFailureException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
          description: ServiceUnavailableException
      x-openapi-router-controller: openapi_server.controllers.default_controller
    post:
      description: Updates an alarm model. Any alarms that were created based on the
        previous version are deleted and then created again as new data arrives.
      operationId: update_alarm_model
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The name of the alarm model.
        explode: false
        in: path
        name: alarmModelName
        required: true
        schema:
          maxLength: 128
          minLength: 1
          pattern: "^[a-zA-Z0-9_-]+$"
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateAlarmModel_request'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateAlarmModelResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
          description: InvalidRequestException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceInUseException'
          description: ResourceInUseException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalFailureException'
          description: InternalFailureException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
          description: ServiceUnavailableException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /alarm-models/{alarmModelName}/versions:
    get:
      description: Lists all the versions of an alarm model. The operation returns
        only the metadata associated with each alarm model version.
      operationId: list_alarm_model_versions
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The name of the alarm model.
        explode: false
        in: path
        name: alarmModelName
        required: true
        schema:
          maxLength: 128
          minLength: 1
          pattern: "^[a-zA-Z0-9_-]+$"
          type: string
        style: simple
      - description: The token that you can use to return the next set of results.
        explode: true
        in: query
        name: nextToken
        required: false
        schema:
          type: string
        style: form
      - description: The maximum number of results to be returned per request.
        explode: true
        in: query
        name: maxResults
        required: false
        schema:
          maximum: 250
          minimum: 1
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListAlarmModelVersionsResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
          description: InvalidRequestException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalFailureException'
          description: InternalFailureException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
          description: ServiceUnavailableException
      x-openapi-router-controller: openapi_server.controllers.default_controller
  /analysis/detector-models/:
    post:
      description: "Performs an analysis of your detector model. For more information,\
        \ see <a href=\"https://docs.aws.amazon.com/iotevents/latest/developerguide/iotevents-analyze-api.html\"\
        >Troubleshooting a detector model</a> in the <i>AWS IoT Events Developer Guide</i>."
      operationId: start_detector_model_analysis
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StartDetectorModelAnalysis_request'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StartDetectorModelAnalysisResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
          description: InvalidRequestException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
          description: LimitExceededException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalFailureException'
          description: InternalFailureException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
          description: ServiceUnavailableException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /analysis/detector-models/{analysisId}:
    get:
      description: "<p>Retrieves runtime information about a detector model analysis.</p>\
        \ <note> <p>After AWS IoT Events starts analyzing your detector model, you\
        \ have up to 24 hours to retrieve the analysis results.</p> </note>"
      operationId: describe_detector_model_analysis
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The ID of the analysis result that you want to retrieve.
        explode: false
        in: path
        name: analysisId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DescribeDetectorModelAnalysisResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
          description: InvalidRequestException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalFailureException'
          description: InternalFailureException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
          description: ServiceUnavailableException
      x-openapi-router-controller: openapi_server.controllers.default_controller
  /analysis/detector-models/{analysisId}/results:
    get:
      description: "<p>Retrieves one or more analysis results of the detector model.</p>\
        \ <note> <p>After AWS IoT Events starts analyzing your detector model, you\
        \ have up to 24 hours to retrieve the analysis results.</p> </note>"
      operationId: get_detector_model_analysis_results
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The ID of the analysis result that you want to retrieve.
        explode: false
        in: path
        name: analysisId
        required: true
        schema:
          type: string
        style: simple
      - description: The token that you can use to return the next set of results.
        explode: true
        in: query
        name: nextToken
        required: false
        schema:
          type: string
        style: form
      - description: The maximum number of results to be returned per request.
        explode: true
        in: query
        name: maxResults
        required: false
        schema:
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetDetectorModelAnalysisResultsResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
          description: InvalidRequestException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalFailureException'
          description: InternalFailureException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
          description: ServiceUnavailableException
      x-openapi-router-controller: openapi_server.controllers.default_controller
  /detector-models:
    get:
      description: Lists the detector models you have created. Only the metadata associated
        with each detector model is returned.
      operationId: list_detector_models
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The token that you can use to return the next set of results.
        explode: true
        in: query
        name: nextToken
        required: false
        schema:
          type: string
        style: form
      - description: The maximum number of results to be returned per request.
        explode: true
        in: query
        name: maxResults
        required: false
        schema:
          maximum: 250
          minimum: 1
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListDetectorModelsResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
          description: InvalidRequestException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalFailureException'
          description: InternalFailureException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
          description: ServiceUnavailableException
      x-openapi-router-controller: openapi_server.controllers.default_controller
    post:
      description: Creates a detector model.
      operationId: create_detector_model
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateDetectorModel_request'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateDetectorModelResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
          description: InvalidRequestException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceInUseException'
          description: ResourceInUseException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceAlreadyExistsException'
          description: ResourceAlreadyExistsException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
          description: LimitExceededException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalFailureException'
          description: InternalFailureException
        "486":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
          description: ServiceUnavailableException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /detector-models/{detectorModelName}:
    delete:
      description: Deletes a detector model. Any active instances of the detector
        model are also deleted.
      operationId: delete_detector_model
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The name of the detector model to be deleted.
        explode: false
        in: path
        name: detectorModelName
        required: true
        schema:
          maxLength: 128
          minLength: 1
          pattern: "^[a-zA-Z0-9_-]+$"
          type: string
        style: simple
      responses:
        "204":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteDetectorModelResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
          description: InvalidRequestException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceInUseException'
          description: ResourceInUseException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalFailureException'
          description: InternalFailureException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
          description: ServiceUnavailableException
      x-openapi-router-controller: openapi_server.controllers.default_controller
    get:
      description: "Describes a detector model. If the <code>version</code> parameter\
        \ is not specified, information about the latest version is returned."
      operationId: describe_detector_model
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The name of the detector model.
        explode: false
        in: path
        name: detectorModelName
        required: true
        schema:
          maxLength: 128
          minLength: 1
          pattern: "^[a-zA-Z0-9_-]+$"
          type: string
        style: simple
      - description: The version of the detector model.
        explode: true
        in: query
        name: version
        required: false
        schema:
          maxLength: 128
          minLength: 1
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DescribeDetectorModelResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
          description: InvalidRequestException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalFailureException'
          description: InternalFailureException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
          description: ServiceUnavailableException
      x-openapi-router-controller: openapi_server.controllers.default_controller
    post:
      description: Updates a detector model. Detectors (instances) spawned by the
        previous version are deleted and then re-created as new inputs arrive.
      operationId: update_detector_model
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The name of the detector model that is updated.
        explode: false
        in: path
        name: detectorModelName
        required: true
        schema:
          maxLength: 128
          minLength: 1
          pattern: "^[a-zA-Z0-9_-]+$"
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateDetectorModel_request'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateDetectorModelResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
          description: InvalidRequestException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceInUseException'
          description: ResourceInUseException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalFailureException'
          description: InternalFailureException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
          description: ServiceUnavailableException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /detector-models/{detectorModelName}/versions:
    get:
      description: Lists all the versions of a detector model. Only the metadata associated
        with each detector model version is returned.
      operationId: list_detector_model_versions
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The name of the detector model whose versions are returned.
        explode: false
        in: path
        name: detectorModelName
        required: true
        schema:
          maxLength: 128
          minLength: 1
          pattern: "^[a-zA-Z0-9_-]+$"
          type: string
        style: simple
      - description: The token that you can use to return the next set of results.
        explode: true
        in: query
        name: nextToken
        required: false
        schema:
          type: string
        style: form
      - description: The maximum number of results to be returned per request.
        explode: true
        in: query
        name: maxResults
        required: false
        schema:
          maximum: 250
          minimum: 1
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListDetectorModelVersionsResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
          description: InvalidRequestException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalFailureException'
          description: InternalFailureException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
          description: ServiceUnavailableException
      x-openapi-router-controller: openapi_server.controllers.default_controller
  /input-routings:
    post:
      description: ' Lists one or more input routings. '
      operationId: list_input_routings
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ListInputRoutings_request'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListInputRoutingsResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
          description: InvalidRequestException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalFailureException'
          description: InternalFailureException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
          description: ServiceUnavailableException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /inputs:
    get:
      description: Lists the inputs you have created.
      operationId: list_inputs
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The token that you can use to return the next set of results.
        explode: true
        in: query
        name: nextToken
        required: false
        schema:
          type: string
        style: form
      - description: The maximum number of results to be returned per request.
        explode: true
        in: query
        name: maxResults
        required: false
        schema:
          maximum: 250
          minimum: 1
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListInputsResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
          description: InvalidRequestException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalFailureException'
          description: InternalFailureException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
          description: ServiceUnavailableException
      x-openapi-router-controller: openapi_server.controllers.default_controller
    post:
      description: Creates an input.
      operationId: create_input
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateInput_request'
        required: true
        x-body-name: body
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateInputResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
          description: InvalidRequestException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalFailureException'
          description: InternalFailureException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
          description: ServiceUnavailableException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceAlreadyExistsException'
          description: ResourceAlreadyExistsException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /inputs/{inputName}:
    delete:
      description: Deletes an input.
      operationId: delete_input
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The name of the input to delete.
        explode: false
        in: path
        name: inputName
        required: true
        schema:
          maxLength: 128
          minLength: 1
          pattern: "^[a-zA-Z][a-zA-Z0-9_]*$"
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteInputResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
          description: InvalidRequestException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalFailureException'
          description: InternalFailureException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
          description: ServiceUnavailableException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceInUseException'
          description: ResourceInUseException
      x-openapi-router-controller: openapi_server.controllers.default_controller
    get:
      description: Describes an input.
      operationId: describe_input
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The name of the input.
        explode: false
        in: path
        name: inputName
        required: true
        schema:
          maxLength: 128
          minLength: 1
          pattern: "^[a-zA-Z][a-zA-Z0-9_]*$"
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DescribeInputResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
          description: InvalidRequestException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalFailureException'
          description: InternalFailureException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
          description: ServiceUnavailableException
      x-openapi-router-controller: openapi_server.controllers.default_controller
    put:
      description: Updates an input.
      operationId: update_input
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The name of the input you want to update.
        explode: false
        in: path
        name: inputName
        required: true
        schema:
          maxLength: 128
          minLength: 1
          pattern: "^[a-zA-Z][a-zA-Z0-9_]*$"
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateInput_request'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateInputResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
          description: InvalidRequestException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalFailureException'
          description: InternalFailureException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
          description: ServiceUnavailableException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceInUseException'
          description: ResourceInUseException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /logging:
    get:
      description: Retrieves the current settings of the AWS IoT Events logging options.
      operationId: describe_logging_options
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DescribeLoggingOptionsResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
          description: InvalidRequestException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalFailureException'
          description: InternalFailureException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
          description: ServiceUnavailableException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnsupportedOperationException'
          description: UnsupportedOperationException
      x-openapi-router-controller: openapi_server.controllers.default_controller
    put:
      description: "<p>Sets or updates the AWS IoT Events logging options.</p> <p>If\
        \ you update the value of any <code>loggingOptions</code> field, it takes\
        \ up to one minute for the change to take effect. If you change the policy\
        \ attached to the role you specified in the <code>roleArn</code> field (for\
        \ example, to correct an invalid policy), it takes up to five minutes for\
        \ that change to take effect.</p>"
      operationId: put_logging_options
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PutLoggingOptions_request'
        required: true
        x-body-name: body
      responses:
        "200":
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
          description: InvalidRequestException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalFailureException'
          description: InternalFailureException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
          description: ServiceUnavailableException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnsupportedOperationException'
          description: UnsupportedOperationException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceInUseException'
          description: ResourceInUseException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /tags#resourceArn:
    get:
      description: Lists the tags (metadata) you have assigned to the resource.
      operationId: list_tags_for_resource
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The ARN of the resource.
        explode: true
        in: query
        name: resourceArn
        required: true
        schema:
          maxLength: 2048
          minLength: 1
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListTagsForResourceResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
          description: InvalidRequestException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceInUseException'
          description: ResourceInUseException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalFailureException'
          description: InternalFailureException
      x-openapi-router-controller: openapi_server.controllers.default_controller
    post:
      description: Adds to or modifies the tags of the given resource. Tags are metadata
        that can be used to manage a resource.
      operationId: tag_resource
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The ARN of the resource.
        explode: true
        in: query
        name: resourceArn
        required: true
        schema:
          maxLength: 2048
          minLength: 1
          type: string
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TagResource_request'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TagResourceResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
          description: InvalidRequestException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceInUseException'
          description: ResourceInUseException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
          description: LimitExceededException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalFailureException'
          description: InternalFailureException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /tags#resourceArn&tagKeys:
    delete:
      description: Removes the given tags (metadata) from the resource.
      operationId: untag_resource
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The ARN of the resource.
        explode: true
        in: query
        name: resourceArn
        required: true
        schema:
          maxLength: 2048
          minLength: 1
          type: string
        style: form
      - description: A list of the keys of the tags to be removed from the resource.
        explode: true
        in: query
        name: tagKeys
        required: true
        schema:
          items:
            $ref: '#/components/schemas/TagKey'
          type: array
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UntagResourceResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
          description: InvalidRequestException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceInUseException'
          description: ResourceInUseException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalFailureException'
          description: InternalFailureException
      x-openapi-router-controller: openapi_server.controllers.default_controller
components:
  parameters:
    X-Amz-Content-Sha256:
      explode: false
      in: header
      name: X-Amz-Content-Sha256
      required: false
      schema:
        type: string
      style: simple
    X-Amz-Date:
      explode: false
      in: header
      name: X-Amz-Date
      required: false
      schema:
        type: string
      style: simple
    X-Amz-Algorithm:
      explode: false
      in: header
      name: X-Amz-Algorithm
      required: false
      schema:
        type: string
      style: simple
    X-Amz-Credential:
      explode: false
      in: header
      name: X-Amz-Credential
      required: false
      schema:
        type: string
      style: simple
    X-Amz-Security-Token:
      explode: false
      in: header
      name: X-Amz-Security-Token
      required: false
      schema:
        type: string
      style: simple
    X-Amz-Signature:
      explode: false
      in: header
      name: X-Amz-Signature
      required: false
      schema:
        type: string
      style: simple
    X-Amz-SignedHeaders:
      explode: false
      in: header
      name: X-Amz-SignedHeaders
      required: false
      schema:
        type: string
      style: simple
  schemas:
    CreateAlarmModelResponse:
      example:
        creationTime: ""
        alarmModelVersion: ""
        alarmModelArn: ""
        lastUpdateTime: ""
        status: ""
      properties:
        creationTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          - description: "The time the alarm model was created, in the Unix epoch\
              \ format."
          title: creationTime
        alarmModelArn:
          allOf:
          - $ref: '#/components/schemas/AlarmModelArn'
          - description: "The ARN of the alarm model. For more information, see <a\
              \ href=\"https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html\"\
              >Amazon Resource Names (ARNs)</a> in the <i>AWS General Reference</i>."
          title: alarmModelArn
        alarmModelVersion:
          allOf:
          - $ref: '#/components/schemas/AlarmModelVersion'
          - description: The version of the alarm model.
          title: alarmModelVersion
        lastUpdateTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          - description: "The time the alarm model was last updated, in the Unix epoch\
              \ format."
          title: lastUpdateTime
        status:
          allOf:
          - $ref: '#/components/schemas/AlarmModelVersionStatus'
          - description: "<p>The status of the alarm model. The status can be one\
              \ of the following values:</p> <ul> <li> <p> <code>ACTIVE</code> - The\
              \ alarm model is active and it's ready to evaluate data.</p> </li> <li>\
              \ <p> <code>ACTIVATING</code> - AWS IoT Events is activating your alarm\
              \ model. Activating an alarm model can take up to a few minutes.</p>\
              \ </li> <li> <p> <code>INACTIVE</code> - The alarm model is inactive,\
              \ so it isn't ready to evaluate data. Check your alarm model information\
              \ and update the alarm model.</p> </li> <li> <p> <code>FAILED</code>\
              \ - You couldn't create or update the alarm model. Check your alarm\
              \ model information and try again.</p> </li> </ul>"
          title: status
      title: CreateAlarmModelResponse
      type: object
    Tag:
      description: Metadata that can be used to manage the resource.
      properties:
        key:
          allOf:
          - $ref: '#/components/schemas/TagKey'
          - description: The tag's key.
          title: key
        value:
          allOf:
          - $ref: '#/components/schemas/TagValue'
          - description: The tag's value.
          title: value
      required:
      - key
      - value
      title: Tag
      type: object
    SimpleRule:
      description: A rule that compares an input property value to a threshold value
        with a comparison operator.
      properties:
        inputProperty:
          allOf:
          - $ref: '#/components/schemas/InputProperty'
          - description: The value on the left side of the comparison operator. You
              can specify an AWS IoT Events input attribute as an input property.
          title: inputProperty
        comparisonOperator:
          allOf:
          - $ref: '#/components/schemas/ComparisonOperator'
          - description: The comparison operator.
          title: comparisonOperator
        threshold:
          allOf:
          - $ref: '#/components/schemas/Threshold'
          - description: The value on the right side of the comparison operator. You
              can enter a number or specify an AWS IoT Events input attribute.
          title: threshold
      required:
      - comparisonOperator
      - inputProperty
      - threshold
      title: SimpleRule
      type: object
    NotificationActions:
      items:
        $ref: '#/components/schemas/NotificationAction'
      minItems: 1
      type: array
    AlarmActions:
      items:
        $ref: '#/components/schemas/AlarmAction'
      type: array
    InitializationConfiguration:
      description: Specifies the default alarm state. The configuration applies to
        all alarms that were created based on this alarm model.
      properties:
        disabledOnInitialization:
          allOf:
          - $ref: '#/components/schemas/DisabledOnInitialization'
          - description: "The value must be <code>TRUE</code> or <code>FALSE</code>.\
              \ If <code>FALSE</code>, all alarm instances created based on the alarm\
              \ model are activated. The default value is <code>TRUE</code>."
          title: disabledOnInitialization
      required:
      - disabledOnInitialization
      title: InitializationConfiguration
      type: object
    AcknowledgeFlow:
      description: Specifies whether to get notified for alarm state changes.
      properties:
        enabled:
          allOf:
          - $ref: '#/components/schemas/AcknowledgeFlowEnabled'
          - description: "The value must be <code>TRUE</code> or <code>FALSE</code>.\
              \ If <code>TRUE</code>, you receive a notification when the alarm state\
              \ changes. You must choose to acknowledge the notification before the\
              \ alarm state can return to <code>NORMAL</code>. If <code>FALSE</code>,\
              \ you won't receive notifications. The alarm automatically changes to\
              \ the <code>NORMAL</code> state when the input property value returns\
              \ to the specified range."
          title: enabled
      required:
      - enabled
      title: AcknowledgeFlow
      type: object
    InvalidRequestException: {}
    ResourceInUseException: {}
    ResourceAlreadyExistsException: {}
    LimitExceededException: {}
    ThrottlingException: {}
    InternalFailureException: {}
    ServiceUnavailableException: {}
    CreateDetectorModelResponse:
      example:
        detectorModelConfiguration:
          creationTime: ""
          roleArn: ""
          evaluationMethod: ""
          detectorModelVersion: ""
          detectorModelArn: ""
          detectorModelName: ""
          key: ""
          detectorModelDescription: ""
          lastUpdateTime: ""
          status: ""
      properties:
        detectorModelConfiguration:
          $ref: '#/components/schemas/CreateDetectorModelResponse_detectorModelConfiguration'
      title: CreateDetectorModelResponse
      type: object
    States:
      items:
        $ref: '#/components/schemas/State'
      minItems: 1
      type: array
    StateName:
      maxLength: 128
      minLength: 1
      type: string
    CreateInputResponse:
      example:
        inputConfiguration:
          inputDescription: ""
          creationTime: ""
          inputArn: ""
          inputName: ""
          lastUpdateTime: ""
          status: ""
      properties:
        inputConfiguration:
          $ref: '#/components/schemas/CreateInputResponse_inputConfiguration'
      title: CreateInputResponse
      type: object
    Attributes:
      items:
        $ref: '#/components/schemas/Attribute'
      maxItems: 200
      minItems: 1
      type: array
    DeleteAlarmModelResponse:
      properties: {}
      type: object
    ResourceNotFoundException: {}
    DeleteDetectorModelResponse:
      properties: {}
      type: object
    DeleteInputResponse:
      properties: {}
      type: object
    DescribeAlarmModelResponse:
      example:
        severity: ""
        alarmNotification:
          notificationActions: ""
        creationTime: ""
        alarmModelVersion: ""
        statusMessage: ""
        alarmModelArn: ""
        alarmModelName: ""
        alarmCapabilities:
          initializationConfiguration:
            disabledOnInitialization: ""
          acknowledgeFlow:
            enabled: ""
        alarmEventActions:
          alarmActions: ""
        alarmRule:
          simpleRule:
            inputProperty: ""
            comparisonOperator: ""
            threshold: ""
        roleArn: ""
        alarmModelDescription: ""
        key: ""
        lastUpdateTime: ""
        status: ""
      properties:
        creationTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          - description: "The time the alarm model was created, in the Unix epoch\
              \ format."
          title: creationTime
        alarmModelArn:
          allOf:
          - $ref: '#/components/schemas/AlarmModelArn'
          - description: "The ARN of the alarm model. For more information, see <a\
              \ href=\"https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html\"\
              >Amazon Resource Names (ARNs)</a> in the <i>AWS General Reference</i>."
          title: alarmModelArn
        alarmModelVersion:
          allOf:
          - $ref: '#/components/schemas/AlarmModelVersion'
          - description: The version of the alarm model.
          title: alarmModelVersion
        lastUpdateTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          - description: "The time the alarm model was last updated, in the Unix epoch\
              \ format."
          title: lastUpdateTime
        status:
          allOf:
          - $ref: '#/components/schemas/AlarmModelVersionStatus'
          - description: "<p>The status of the alarm model. The status can be one\
              \ of the following values:</p> <ul> <li> <p> <code>ACTIVE</code> - The\
              \ alarm model is active and it's ready to evaluate data.</p> </li> <li>\
              \ <p> <code>ACTIVATING</code> - AWS IoT Events is activating your alarm\
              \ model. Activating an alarm model can take up to a few minutes.</p>\
              \ </li> <li> <p> <code>INACTIVE</code> - The alarm model is inactive,\
              \ so it isn't ready to evaluate data. Check your alarm model information\
              \ and update the alarm model.</p> </li> <li> <p> <code>FAILED</code>\
              \ - You couldn't create or update the alarm model. Check your alarm\
              \ model information and try again.</p> </li> </ul>"
          title: status
        statusMessage:
          allOf:
          - $ref: '#/components/schemas/StatusMessage'
          - description: ' Contains information about the status of the alarm model. '
          title: statusMessage
        alarmModelName:
          allOf:
          - $ref: '#/components/schemas/AlarmModelName'
          - description: The name of the alarm model.
          title: alarmModelName
        alarmModelDescription:
          allOf:
          - $ref: '#/components/schemas/AlarmModelDescription'
          - description: The description of the alarm model.
          title: alarmModelDescription
        roleArn:
          allOf:
          - $ref: '#/components/schemas/AmazonResourceName'
          - description: "The ARN of the IAM role that allows the alarm to perform\
              \ actions and access AWS resources. For more information, see <a href=\"\
              https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html\"\
              >Amazon Resource Names (ARNs)</a> in the <i>AWS General Reference</i>."
          title: roleArn
        key:
          allOf:
          - $ref: '#/components/schemas/AttributeJsonPath'
          - description: An input attribute used as a key to create an alarm. AWS
              IoT Events routes <a href="https://docs.aws.amazon.com/iotevents/latest/apireference/API_Input.html">inputs</a>
              associated with this key to the alarm.
          title: key
        severity:
          allOf:
          - $ref: '#/components/schemas/Severity'
          - description: A non-negative integer that reflects the severity level of
              the alarm.
          title: severity
        alarmRule:
          $ref: '#/components/schemas/DescribeAlarmModelResponse_alarmRule'
        alarmNotification:
          $ref: '#/components/schemas/DescribeAlarmModelResponse_alarmNotification'
        alarmEventActions:
          $ref: '#/components/schemas/DescribeAlarmModelResponse_alarmEventActions'
        alarmCapabilities:
          $ref: '#/components/schemas/DescribeAlarmModelResponse_alarmCapabilities'
      title: DescribeAlarmModelResponse
      type: object
    DescribeDetectorModelResponse:
      example:
        detectorModel:
          detectorModelConfiguration:
            creationTime: ""
            roleArn: ""
            evaluationMethod: ""
            detectorModelVersion: ""
            detectorModelArn: ""
            detectorModelName: ""
            key: ""
            detectorModelDescription: ""
            lastUpdateTime: ""
            status: ""
          detectorModelDefinition:
            initialStateName: ""
            states: ""
      properties:
        detectorModel:
          $ref: '#/components/schemas/DescribeDetectorModelResponse_detectorModel'
      title: DescribeDetectorModelResponse
      type: object
    DescribeDetectorModelAnalysisResponse:
      example:
        status: ""
      properties:
        status:
          allOf:
          - $ref: '#/components/schemas/AnalysisStatus'
          - description: <p>The status of the analysis activity. The status can be
              one of the following values:</p> <ul> <li> <p> <code>RUNNING</code>
              - AWS IoT Events is analyzing your detector model. This process can
              take several minutes to complete.</p> </li> <li> <p> <code>COMPLETE</code>
              - AWS IoT Events finished analyzing your detector model.</p> </li> <li>
              <p> <code>FAILED</code> - AWS IoT Events couldn't analyze your detector
              model. Try again later.</p> </li> </ul>
          title: status
      title: DescribeDetectorModelAnalysisResponse
      type: object
    DescribeInputResponse:
      example:
        input:
          inputConfiguration:
            inputDescription: ""
            creationTime: ""
            inputArn: ""
            inputName: ""
            lastUpdateTime: ""
            status: ""
          inputDefinition:
            attributes: ""
      properties:
        input:
          $ref: '#/components/schemas/DescribeInputResponse_input'
      title: DescribeInputResponse
      type: object
    DescribeLoggingOptionsResponse:
      example:
        loggingOptions:
          level: ""
          roleArn: ""
          enabled: ""
          detectorDebugOptions: ""
      properties:
        loggingOptions:
          $ref: '#/components/schemas/DescribeLoggingOptionsResponse_loggingOptions'
      title: DescribeLoggingOptionsResponse
      type: object
    UnsupportedOperationException: {}
    GetDetectorModelAnalysisResultsResponse:
      example:
        analysisResults: ""
        nextToken: ""
      properties:
        analysisResults:
          allOf:
          - $ref: '#/components/schemas/AnalysisResults'
          - description: Contains information about one or more analysis results.
          title: analysisResults
        nextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          - description: "The token that you can use to return the next set of results,\
              \ or <code>null</code> if there are no more results."
          title: nextToken
      title: GetDetectorModelAnalysisResultsResponse
      type: object
    ListAlarmModelVersionsResponse:
      example:
        nextToken: ""
        alarmModelVersionSummaries: ""
      properties:
        alarmModelVersionSummaries:
          allOf:
          - $ref: '#/components/schemas/AlarmModelVersionSummaries'
          - description: A list that summarizes each alarm model version.
          title: alarmModelVersionSummaries
        nextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          - description: "The token that you can use to return the next set of results,\
              \ or <code>null</code> if there are no more results."
          title: nextToken
      title: ListAlarmModelVersionsResponse
      type: object
    ListAlarmModelsResponse:
      example:
        nextToken: ""
        alarmModelSummaries: ""
      properties:
        alarmModelSummaries:
          allOf:
          - $ref: '#/components/schemas/AlarmModelSummaries'
          - description: A list that summarizes each alarm model.
          title: alarmModelSummaries
        nextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          - description: "The token that you can use to return the next set of results,\
              \ or <code>null</code> if there are no more results."
          title: nextToken
      title: ListAlarmModelsResponse
      type: object
    ListDetectorModelVersionsResponse:
      example:
        detectorModelVersionSummaries: ""
        nextToken: ""
      properties:
        detectorModelVersionSummaries:
          allOf:
          - $ref: '#/components/schemas/DetectorModelVersionSummaries'
          - description: Summary information about the detector model versions.
          title: detectorModelVersionSummaries
        nextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          - description: "The token that you can use to return the next set of results,\
              \ or <code>null</code> if there are no more results."
          title: nextToken
      title: ListDetectorModelVersionsResponse
      type: object
    ListDetectorModelsResponse:
      example:
        nextToken: ""
        detectorModelSummaries: ""
      properties:
        detectorModelSummaries:
          allOf:
          - $ref: '#/components/schemas/DetectorModelSummaries'
          - description: Summary information about the detector models.
          title: detectorModelSummaries
        nextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          - description: "The token that you can use to return the next set of results,\
              \ or <code>null</code> if there are no more results."
          title: nextToken
      title: ListDetectorModelsResponse
      type: object
    ListInputRoutingsResponse:
      example:
        routedResources: ""
        nextToken: ""
      properties:
        routedResources:
          allOf:
          - $ref: '#/components/schemas/RoutedResources'
          - description: ' Summary information about the routed resources. '
          title: routedResources
        nextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          - description: " The token that you can use to return the next set of results,\
              \ or <code>null</code> if there are no more results. "
          title: nextToken
      title: ListInputRoutingsResponse
      type: object
    IotEventsInputIdentifier:
      description: ' The identifier of the input routed to AWS IoT Events. '
      properties:
        inputName:
          allOf:
          - $ref: '#/components/schemas/InputName'
          - description: ' The name of the input routed to AWS IoT Events. '
          title: inputName
      required:
      - inputName
      title: IotEventsInputIdentifier
      type: object
    IotSiteWiseInputIdentifier:
      description: ' The identifer of the input routed from AWS IoT SiteWise. '
      properties:
        iotSiteWiseAssetModelPropertyIdentifier:
          $ref: '#/components/schemas/IotSiteWiseInputIdentifier_iotSiteWiseAssetModelPropertyIdentifier'
      title: IotSiteWiseInputIdentifier
      type: object
    ListInputsResponse:
      example:
        nextToken: ""
        inputSummaries: ""
      properties:
        inputSummaries:
          allOf:
          - $ref: '#/components/schemas/InputSummaries'
          - description: Summary information about the inputs.
          title: inputSummaries
        nextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          - description: "The token that you can use to return the next set of results,\
              \ or <code>null</code> if there are no more results."
          title: nextToken
      title: ListInputsResponse
      type: object
    ListTagsForResourceResponse:
      example:
        tags: ""
      properties:
        tags:
          allOf:
          - $ref: '#/components/schemas/Tags'
          - description: The list of tags assigned to the resource.
          title: tags
      title: ListTagsForResourceResponse
      type: object
    AmazonResourceName:
      maxLength: 2048
      minLength: 1
      type: string
    LoggingLevel:
      enum:
      - ERROR
      - INFO
      - DEBUG
      title: LoggingLevel
      type: string
    LoggingEnabled:
      type: boolean
    DetectorDebugOptions:
      items:
        $ref: '#/components/schemas/DetectorDebugOption'
      minItems: 1
      type: array
    StartDetectorModelAnalysisResponse:
      example:
        analysisId: ""
      properties:
        analysisId:
          allOf:
          - $ref: '#/components/schemas/AnalysisId'
          - description: The ID that you can use to retrieve the analysis result.
          title: analysisId
      title: StartDetectorModelAnalysisResponse
      type: object
    TagResourceResponse:
      properties: {}
      type: object
    UntagResourceResponse:
      properties: {}
      type: object
    TagKey:
      maxLength: 128
      minLength: 1
      title: TagKey
      type: string
    UpdateAlarmModelResponse:
      example:
        creationTime: ""
        alarmModelVersion: ""
        alarmModelArn: ""
        lastUpdateTime: ""
        status: ""
      properties:
        creationTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          - description: "The time the alarm model was created, in the Unix epoch\
              \ format."
          title: creationTime
        alarmModelArn:
          allOf:
          - $ref: '#/components/schemas/AlarmModelArn'
          - description: "The ARN of the alarm model. For more information, see <a\
              \ href=\"https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html\"\
              >Amazon Resource Names (ARNs)</a> in the <i>AWS General Reference</i>."
          title: alarmModelArn
        alarmModelVersion:
          allOf:
          - $ref: '#/components/schemas/AlarmModelVersion'
          - description: The version of the alarm model.
          title: alarmModelVersion
        lastUpdateTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          - description: "The time the alarm model was last updated, in the Unix epoch\
              \ format."
          title: lastUpdateTime
        status:
          allOf:
          - $ref: '#/components/schemas/AlarmModelVersionStatus'
          - description: "<p>The status of the alarm model. The status can be one\
              \ of the following values:</p> <ul> <li> <p> <code>ACTIVE</code> - The\
              \ alarm model is active and it's ready to evaluate data.</p> </li> <li>\
              \ <p> <code>ACTIVATING</code> - AWS IoT Events is activating your alarm\
              \ model. Activating an alarm model can take up to a few minutes.</p>\
              \ </li> <li> <p> <code>INACTIVE</code> - The alarm model is inactive,\
              \ so it isn't ready to evaluate data. Check your alarm model information\
              \ and update the alarm model.</p> </li> <li> <p> <code>FAILED</code>\
              \ - You couldn't create or update the alarm model. Check your alarm\
              \ model information and try again.</p> </li> </ul>"
          title: status
      title: UpdateAlarmModelResponse
      type: object
    UpdateDetectorModelResponse:
      example:
        detectorModelConfiguration:
          creationTime: ""
          roleArn: ""
          evaluationMethod: ""
          detectorModelVersion: ""
          detectorModelArn: ""
          detectorModelName: ""
          key: ""
          detectorModelDescription: ""
          lastUpdateTime: ""
          status: ""
      properties:
        detectorModelConfiguration:
          $ref: '#/components/schemas/CreateDetectorModelResponse_detectorModelConfiguration'
      title: UpdateDetectorModelResponse
      type: object
    UpdateInputResponse:
      example:
        inputConfiguration:
          inputDescription: ""
          creationTime: ""
          inputArn: ""
          inputName: ""
          lastUpdateTime: ""
          status: ""
      properties:
        inputConfiguration:
          $ref: '#/components/schemas/CreateInputResponse_inputConfiguration'
      title: UpdateInputResponse
      type: object
    AcknowledgeFlowEnabled:
      type: boolean
    SetVariableAction:
      description: Information about the variable and its new value.
      properties:
        variableName:
          allOf:
          - $ref: '#/components/schemas/VariableName'
          - description: The name of the variable.
          title: variableName
        value:
          allOf:
          - $ref: '#/components/schemas/VariableValue'
          - description: The new value of the variable.
          title: value
      required:
      - value
      - variableName
      title: SetVariableAction
      type: object
    SNSTopicPublishAction:
      description: Information required to publish the Amazon SNS message.
      properties:
        targetArn:
          allOf:
          - $ref: '#/components/schemas/AmazonResourceName'
          - description: The ARN of the Amazon SNS target where the message is sent.
          title: targetArn
        payload:
          $ref: '#/components/schemas/SNSTopicPublishAction_payload'
      required:
      - targetArn
      title: SNSTopicPublishAction
      type: object
    IotTopicPublishAction:
      description: Information required to publish the MQTT message through the AWS
        IoT message broker.
      properties:
        mqttTopic:
          allOf:
          - $ref: '#/components/schemas/MQTTTopic'
          - description: The MQTT topic of the message. You can use a string expression
              that includes variables (<code>$variable.&lt;variable-name&gt;</code>)
              and input values (<code>$input.&lt;input-name&gt;.&lt;path-to-datum&gt;</code>)
              as the topic string.
          title: mqttTopic
        payload:
          $ref: '#/components/schemas/IotTopicPublishAction_payload'
      required:
      - mqttTopic
      title: IotTopicPublishAction
      type: object
    SetTimerAction:
      description: Information needed to set the timer.
      properties:
        timerName:
          allOf:
          - $ref: '#/components/schemas/TimerName'
          - description: The name of the timer.
          title: timerName
        seconds:
          allOf:
          - $ref: '#/components/schemas/Seconds'
          - deprecated: true
            description: The number of seconds until the timer expires. The minimum
              value is 60 seconds to ensure accuracy. The maximum value is 31622400
              seconds. seconds is deprecated. You can use durationExpression for SetTimerAction.
              The value of seconds can be used as a string expression for durationExpression.
          title: seconds
        durationExpression:
          allOf:
          - $ref: '#/components/schemas/VariableValue'
          - description: "The duration of the timer, in seconds. You can use a string\
              \ expression that includes numbers, variables (<code>$variable.&lt;variable-name&gt;</code>),\
              \ and input values (<code>$input.&lt;input-name&gt;.&lt;path-to-datum&gt;</code>)\
              \ as the duration. The range of the duration is 1-31622400 seconds.\
              \ To ensure accuracy, the minimum duration is 60 seconds. The evaluated\
              \ result of the duration is rounded down to the nearest whole number. "
          title: durationExpression
      required:
      - timerName
      title: SetTimerAction
      type: object
    ClearTimerAction:
      description: Information needed to clear the timer.
      properties:
        timerName:
          allOf:
          - $ref: '#/components/schemas/TimerName'
          - description: The name of the timer to clear.
          title: timerName
      required:
      - timerName
      title: ClearTimerAction
      type: object
    ResetTimerAction:
      description: Information required to reset the timer. The timer is reset to
        the previously evaluated result of the duration. The duration expression isn't
        reevaluated when you reset the timer.
      properties:
        timerName:
          allOf:
          - $ref: '#/components/schemas/TimerName'
          - description: The name of the timer to reset.
          title: timerName
      required:
      - timerName
      title: ResetTimerAction
      type: object
    LambdaAction:
      description: "Calls a Lambda function, passing in information about the detector\
        \ model instance and the event that triggered the action."
      properties:
        functionArn:
          allOf:
          - $ref: '#/components/schemas/AmazonResourceName'
          - description: The ARN of the Lambda function that is executed.
          title: functionArn
        payload:
          $ref: '#/components/schemas/LambdaAction_payload'
      required:
      - functionArn
      title: LambdaAction
      type: object
    IotEventsAction:
      description: "Sends an AWS IoT Events input, passing in information about the\
        \ detector model instance and the event that triggered the action."
      properties:
        inputName:
          allOf:
          - $ref: '#/components/schemas/InputName'
          - description: The name of the AWS IoT Events input where the data is sent.
          title: inputName
        payload:
          $ref: '#/components/schemas/IotEventsAction_payload'
      required:
      - inputName
      title: IotEventsAction
      type: object
    SqsAction:
      description: Sends information about the detector model instance and the event
        that triggered the action to an Amazon SQS queue.
      properties:
        queueUrl:
          allOf:
          - $ref: '#/components/schemas/QueueUrl'
          - description: The URL of the SQS queue where the data is written.
          title: queueUrl
        useBase64:
          allOf:
          - $ref: '#/components/schemas/UseBase64'
          - description: "Set this to TRUE if you want the data to be base-64 encoded\
              \ before it is written to the queue. Otherwise, set this to FALSE."
          title: useBase64
        payload:
          $ref: '#/components/schemas/SqsAction_payload'
      required:
      - queueUrl
      title: SqsAction
      type: object
    FirehoseAction:
      description: Sends information about the detector model instance and the event
        that triggered the action to an Amazon Kinesis Data Firehose delivery stream.
      properties:
        deliveryStreamName:
          allOf:
          - $ref: '#/components/schemas/DeliveryStreamName'
          - description: The name of the Kinesis Data Firehose delivery stream where
              the data is written.
          title: deliveryStreamName
        separator:
          allOf:
          - $ref: '#/components/schemas/FirehoseSeparator'
          - description: "A character separator that is used to separate records written\
              \ to the Kinesis Data Firehose delivery stream. Valid values are: '\\\
              n' (newline), '\\t' (tab), '\\r\\n' (Windows newline), ',' (comma)."
          title: separator
        payload:
          $ref: '#/components/schemas/FirehoseAction_payload'
      required:
      - deliveryStreamName
      title: FirehoseAction
      type: object
    DynamoDBAction:
      description: "<p>Defines an action to write to the Amazon DynamoDB table that\
        \ you created. The standard action payload contains all the information about\
        \ the detector model instance and the event that triggered the action. You\
        \ can customize the <a href=\"https://docs.aws.amazon.com/iotevents/latest/apireference/API_Payload.html\"\
        >payload</a>. One column of the DynamoDB table receives all attribute-value\
        \ pairs in the payload that you specify.</p> <p>You must use expressions for\
        \ all parameters in <code>DynamoDBAction</code>. The expressions accept literals,\
        \ operators, functions, references, and substitution templates.</p> <p class=\"\
        title\"> <b>Examples</b> </p> <ul> <li> <p>For literal values, the expressions\
        \ must contain single quotes. For example, the value for the <code>hashKeyType</code>\
        \ parameter can be <code>'STRING'</code>.</p> </li> <li> <p>For references,\
        \ you must specify either variables or input values. For example, the value\
        \ for the <code>hashKeyField</code> parameter can be <code>$input.GreenhouseInput.name</code>.</p>\
        \ </li> <li> <p>For a substitution template, you must use <code>${}</code>,\
        \ and the template must be in single quotes. A substitution template can also\
        \ contain a combination of literals, operators, functions, references, and\
        \ substitution templates.</p> <p>In the following example, the value for the\
        \ <code>hashKeyValue</code> parameter uses a substitution template. </p> <p>\
        \ <code>'${$input.GreenhouseInput.temperature * 6 / 5 + 32} in Fahrenheit'</code>\
        \ </p> </li> <li> <p>For a string concatenation, you must use <code>+</code>.\
        \ A string concatenation can also contain a combination of literals, operators,\
        \ functions, references, and substitution templates.</p> <p>In the following\
        \ example, the value for the <code>tableName</code> parameter uses a string\
        \ concatenation. </p> <p> <code>'GreenhouseTemperatureTable ' + $input.GreenhouseInput.date</code>\
        \ </p> </li> </ul> <p>For more information, see <a href=\"https://docs.aws.amazon.com/iotevents/latest/developerguide/iotevents-expressions.html\"\
        >Expressions</a> in the <i>AWS IoT Events Developer Guide</i>.</p> <p>If the\
        \ defined payload type is a string, <code>DynamoDBAction</code> writes non-JSON\
        \ data to the DynamoDB table as binary data. The DynamoDB console displays\
        \ the data as Base64-encoded text. The value for the <code>payloadField</code>\
        \ parameter is <code>&lt;payload-field&gt;_raw</code>.</p>"
      properties:
        hashKeyType:
          allOf:
          - $ref: '#/components/schemas/DynamoKeyType'
          - description: "<p>The data type for the hash key (also called the partition\
              \ key). You can specify the following values:</p> <ul> <li> <p> <code>'STRING'</code>\
              \ - The hash key is a string.</p> </li> <li> <p> <code>'NUMBER'</code>\
              \ - The hash key is a number.</p> </li> </ul> <p>If you don't specify\
              \ <code>hashKeyType</code>, the default value is <code>'STRING'</code>.</p>"
          title: hashKeyType
        hashKeyField:
          allOf:
          - $ref: '#/components/schemas/DynamoKeyField'
          - description: The name of the hash key (also called the partition key).
              The <code>hashKeyField</code> value must match the partition key of
              the target DynamoDB table.
          title: hashKeyField
        hashKeyValue:
          allOf:
          - $ref: '#/components/schemas/DynamoKeyValue'
          - description: The value of the hash key (also called the partition key).
          title: hashKeyValue
        rangeKeyType:
          allOf:
          - $ref: '#/components/schemas/DynamoKeyType'
          - description: "<p>The data type for the range key (also called the sort\
              \ key), You can specify the following values:</p> <ul> <li> <p> <code>'STRING'</code>\
              \ - The range key is a string.</p> </li> <li> <p> <code>'NUMBER'</code>\
              \ - The range key is number.</p> </li> </ul> <p>If you don't specify\
              \ <code>rangeKeyField</code>, the default value is <code>'STRING'</code>.</p>"
          title: rangeKeyType
        rangeKeyField:
          allOf:
          - $ref: '#/components/schemas/DynamoKeyField'
          - description: 'The name of the range key (also called the sort key). The
              <code>rangeKeyField</code> value must match the sort key of the target
              DynamoDB table. '
          title: rangeKeyField
        rangeKeyValue:
          allOf:
          - $ref: '#/components/schemas/DynamoKeyValue'
          - description: The value of the range key (also called the sort key).
          title: rangeKeyValue
        operation:
          allOf:
          - $ref: '#/components/schemas/DynamoOperation'
          - description: "<p>The type of operation to perform. You can specify the\
              \ following values: </p> <ul> <li> <p> <code>'INSERT'</code> - Insert\
              \ data as a new item into the DynamoDB table. This item uses the specified\
              \ hash key as a partition key. If you specified a range key, the item\
              \ uses the range key as a sort key.</p> </li> <li> <p> <code>'UPDATE'</code>\
              \ - Update an existing item of the DynamoDB table with new data. This\
              \ item's partition key must match the specified hash key. If you specified\
              \ a range key, the range key must match the item's sort key.</p> </li>\
              \ <li> <p> <code>'DELETE'</code> - Delete an existing item of the DynamoDB\
              \ table. This item's partition key must match the specified hash key.\
              \ If you specified a range key, the range key must match the item's\
              \ sort key.</p> </li> </ul> <p>If you don't specify this parameter,\
              \ AWS IoT Events triggers the <code>'INSERT'</code> operation.</p>"
          title: operation
        payloadField:
          allOf:
          - $ref: '#/components/schemas/DynamoKeyField'
          - description: "<p>The name of the DynamoDB column that receives the action\
              \ payload.</p> <p>If you don't specify this parameter, the name of the\
              \ DynamoDB column is <code>payload</code>.</p>"
          title: payloadField
        tableName:
          allOf:
          - $ref: '#/components/schemas/DynamoTableName'
          - description: 'The name of the DynamoDB table. The <code>tableName</code>
              value must match the table name of the target DynamoDB table. '
          title: tableName
        payload:
          $ref: '#/components/schemas/Payload'
      required:
      - hashKeyField
      - hashKeyValue
      - tableName
      title: DynamoDBAction
      type: object
    DynamoDBv2Action:
      description: "<p>Defines an action to write to the Amazon DynamoDB table that\
        \ you created. The default action payload contains all the information about\
        \ the detector model instance and the event that triggered the action. You\
        \ can customize the <a href=\"https://docs.aws.amazon.com/iotevents/latest/apireference/API_Payload.html\"\
        >payload</a>. A separate column of the DynamoDB table receives one attribute-value\
        \ pair in the payload that you specify.</p> <p>You must use expressions for\
        \ all parameters in <code>DynamoDBv2Action</code>. The expressions accept\
        \ literals, operators, functions, references, and substitution templates.</p>\
        \ <p class=\"title\"> <b>Examples</b> </p> <ul> <li> <p>For literal values,\
        \ the expressions must contain single quotes. For example, the value for the\
        \ <code>tableName</code> parameter can be <code>'GreenhouseTemperatureTable'</code>.</p>\
        \ </li> <li> <p>For references, you must specify either variables or input\
        \ values. For example, the value for the <code>tableName</code> parameter\
        \ can be <code>$variable.ddbtableName</code>.</p> </li> <li> <p>For a substitution\
        \ template, you must use <code>${}</code>, and the template must be in single\
        \ quotes. A substitution template can also contain a combination of literals,\
        \ operators, functions, references, and substitution templates.</p> <p>In\
        \ the following example, the value for the <code>contentExpression</code>\
        \ parameter in <code>Payload</code> uses a substitution template. </p> <p>\
        \ <code>'{\\\"sensorID\\\": \\\"${$input.GreenhouseInput.sensor_id}\\\", \\\
        \"temperature\\\": \\\"${$input.GreenhouseInput.temperature * 9 / 5 + 32}\\\
        \"}'</code> </p> </li> <li> <p>For a string concatenation, you must use <code>+</code>.\
        \ A string concatenation can also contain a combination of literals, operators,\
        \ functions, references, and substitution templates.</p> <p>In the following\
        \ example, the value for the <code>tableName</code> parameter uses a string\
        \ concatenation. </p> <p> <code>'GreenhouseTemperatureTable ' + $input.GreenhouseInput.date</code>\
        \ </p> </li> </ul> <p>For more information, see <a href=\"https://docs.aws.amazon.com/iotevents/latest/developerguide/iotevents-expressions.html\"\
        >Expressions</a> in the <i>AWS IoT Events Developer Guide</i>.</p> <p>The\
        \ value for the <code>type</code> parameter in <code>Payload</code> must be\
        \ <code>JSON</code>.</p>"
      properties:
        tableName:
          allOf:
          - $ref: '#/components/schemas/DynamoTableName'
          - description: The name of the DynamoDB table.
          title: tableName
        payload:
          $ref: '#/components/schemas/Payload'
      required:
      - tableName
      title: DynamoDBv2Action
      type: object
    IotSiteWiseAction:
      description: "<p>Sends information about the detector model instance and the\
        \ event that triggered the action to a specified asset property in AWS IoT\
        \ SiteWise.</p> <p>You must use expressions for all parameters in <code>IotSiteWiseAction</code>.\
        \ The expressions accept literals, operators, functions, references, and substitutions\
        \ templates.</p> <p class=\"title\"> <b>Examples</b> </p> <ul> <li> <p>For\
        \ literal values, the expressions must contain single quotes. For example,\
        \ the value for the <code>propertyAlias</code> parameter can be <code>'/company/windfarm/3/turbine/7/temperature'</code>.</p>\
        \ </li> <li> <p>For references, you must specify either variables or input\
        \ values. For example, the value for the <code>assetId</code> parameter can\
        \ be <code>$input.TurbineInput.assetId1</code>.</p> </li> <li> <p>For a substitution\
        \ template, you must use <code>${}</code>, and the template must be in single\
        \ quotes. A substitution template can also contain a combination of literals,\
        \ operators, functions, references, and substitution templates.</p> <p>In\
        \ the following example, the value for the <code>propertyAlias</code> parameter\
        \ uses a substitution template. </p> <p> <code>'company/windfarm/${$input.TemperatureInput.sensorData.windfarmID}/turbine/\
        \ ${$input.TemperatureInput.sensorData.turbineID}/temperature'</code> </p>\
        \ </li> </ul> <p>You must specify either <code>propertyAlias</code> or both\
        \ <code>assetId</code> and <code>propertyId</code> to identify the target\
        \ asset property in AWS IoT SiteWise.</p> <p>For more information, see <a\
        \ href=\"https://docs.aws.amazon.com/iotevents/latest/developerguide/iotevents-expressions.html\"\
        >Expressions</a> in the <i>AWS IoT Events Developer Guide</i>.</p>"
      properties:
        entryId:
          allOf:
          - $ref: '#/components/schemas/AssetPropertyEntryId'
          - description: A unique identifier for this entry. You can use the entry
              ID to track which data entry causes an error in case of failure. The
              default is a new unique identifier.
          title: entryId
        assetId:
          allOf:
          - $ref: '#/components/schemas/AssetId'
          - description: The ID of the asset that has the specified property.
          title: assetId
        propertyId:
          allOf:
          - $ref: '#/components/schemas/AssetPropertyId'
          - description: The ID of the asset property.
          title: propertyId
        propertyAlias:
          allOf:
          - $ref: '#/components/schemas/AssetPropertyAlias'
          - description: The alias of the asset property.
          title: propertyAlias
        propertyValue:
          $ref: '#/components/schemas/IotSiteWiseAction_propertyValue'
      title: IotSiteWiseAction
      type: object
    Action:
      description: An action to be performed when the <code>condition</code> is TRUE.
      properties:
        setVariable:
          $ref: '#/components/schemas/Action_setVariable'
        sns:
          $ref: '#/components/schemas/Action_sns'
        iotTopicPublish:
          $ref: '#/components/schemas/Action_iotTopicPublish'
        setTimer:
          $ref: '#/components/schemas/Action_setTimer'
        clearTimer:
          $ref: '#/components/schemas/Action_clearTimer'
        resetTimer:
          $ref: '#/components/schemas/Action_resetTimer'
        lambda:
          $ref: '#/components/schemas/Action_lambda'
        iotEvents:
          $ref: '#/components/schemas/Action_iotEvents'
        sqs:
          $ref: '#/components/schemas/Action_sqs'
        firehose:
          $ref: '#/components/schemas/Action_firehose'
        dynamoDB:
          $ref: '#/components/schemas/Action_dynamoDB'
        dynamoDBv2:
          $ref: '#/components/schemas/Action_dynamoDBv2'
        iotSiteWise:
          $ref: '#/components/schemas/Action_iotSiteWise'
      title: Action
      type: object
    Actions:
      items:
        $ref: '#/components/schemas/Action'
      type: array
    AlarmAction:
      description: Specifies one of the following actions to receive notifications
        when the alarm state changes.
      properties:
        sns:
          $ref: '#/components/schemas/SNSTopicPublishAction'
        iotTopicPublish:
          $ref: '#/components/schemas/IotTopicPublishAction'
        lambda:
          $ref: '#/components/schemas/LambdaAction'
        iotEvents:
          $ref: '#/components/schemas/IotEventsAction'
        sqs:
          $ref: '#/components/schemas/SqsAction'
        firehose:
          $ref: '#/components/schemas/FirehoseAction'
        dynamoDB:
          $ref: '#/components/schemas/DynamoDBAction'
        dynamoDBv2:
          $ref: '#/components/schemas/DynamoDBv2Action'
        iotSiteWise:
          $ref: '#/components/schemas/IotSiteWiseAction'
      title: AlarmAction
      type: object
    AlarmCapabilities:
      description: Contains the configuration information of alarm state changes.
      properties:
        initializationConfiguration:
          $ref: '#/components/schemas/CreateAlarmModel_request_alarmCapabilities_initializationConfiguration'
        acknowledgeFlow:
          $ref: '#/components/schemas/CreateAlarmModel_request_alarmCapabilities_acknowledgeFlow'
      title: AlarmCapabilities
      type: object
    AlarmEventActions:
      description: Contains information about one or more alarm actions.
      properties:
        alarmActions:
          allOf:
          - $ref: '#/components/schemas/AlarmActions'
          - description: Specifies one or more supported actions to receive notifications
              when the alarm state changes.
          title: alarmActions
      title: AlarmEventActions
      type: object
    AlarmModelArn:
      type: string
    AlarmModelDescription:
      maxLength: 128
      type: string
    AlarmModelName:
      maxLength: 128
      minLength: 1
      pattern: "^[a-zA-Z0-9_-]+$"
      type: string
    AlarmModelSummary:
      description: Contains a summary of an alarm model.
      properties:
        creationTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          - description: "The time the alarm model was created, in the Unix epoch\
              \ format."
          title: creationTime
        alarmModelDescription:
          allOf:
          - $ref: '#/components/schemas/AlarmModelDescription'
          - description: The description of the alarm model.
          title: alarmModelDescription
        alarmModelName:
          allOf:
          - $ref: '#/components/schemas/AlarmModelName'
          - description: The name of the alarm model.
          title: alarmModelName
      title: AlarmModelSummary
      type: object
    AlarmModelSummaries:
      items:
        $ref: '#/components/schemas/AlarmModelSummary'
      type: array
    Timestamp:
      format: date-time
      type: string
    AlarmModelVersion:
      maxLength: 128
      minLength: 1
      type: string
    AlarmModelVersionStatus:
      enum:
      - ACTIVE
      - ACTIVATING
      - INACTIVE
      - FAILED
      title: AlarmModelVersionStatus
      type: string
    AlarmModelVersionSummary:
      description: Contains a summary of an alarm model version.
      properties:
        alarmModelName:
          allOf:
          - $ref: '#/components/schemas/AlarmModelName'
          - description: The name of the alarm model.
          title: alarmModelName
        alarmModelArn:
          allOf:
          - $ref: '#/components/schemas/AlarmModelArn'
          - description: "The ARN of the alarm model. For more information, see <a\
              \ href=\"https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html\"\
              >Amazon Resource Names (ARNs)</a> in the <i>AWS General Reference</i>."
          title: alarmModelArn
        alarmModelVersion:
          allOf:
          - $ref: '#/components/schemas/AlarmModelVersion'
          - description: The version of the alarm model.
          title: alarmModelVersion
        roleArn:
          allOf:
          - $ref: '#/components/schemas/AmazonResourceName'
          - description: "The ARN of the IAM role that allows the alarm to perform\
              \ actions and access AWS resources. For more information, see <a href=\"\
              https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html\"\
              >Amazon Resource Names (ARNs)</a> in the <i>AWS General Reference</i>."
          title: roleArn
        creationTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          - description: "The time the alarm model was created, in the Unix epoch\
              \ format."
          title: creationTime
        lastUpdateTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          - description: "The time the alarm model was last updated, in the Unix epoch\
              \ format."
          title: lastUpdateTime
        status:
          allOf:
          - $ref: '#/components/schemas/AlarmModelVersionStatus'
          - description: "<p>The status of the alarm model. The status can be one\
              \ of the following values:</p> <ul> <li> <p> <code>ACTIVE</code> - The\
              \ alarm model is active and it's ready to evaluate data.</p> </li> <li>\
              \ <p> <code>ACTIVATING</code> - AWS IoT Events is activating your alarm\
              \ model. Activating an alarm model can take up to a few minutes.</p>\
              \ </li> <li> <p> <code>INACTIVE</code> - The alarm model is inactive,\
              \ so it isn't ready to evaluate data. Check your alarm model information\
              \ and update the alarm model.</p> </li> <li> <p> <code>FAILED</code>\
              \ - You couldn't create or update the alarm model. Check your alarm\
              \ model information and try again.</p> </li> </ul>"
          title: status
        statusMessage:
          allOf:
          - $ref: '#/components/schemas/StatusMessage'
          - description: ' Contains information about the status of the alarm model
              version. '
          title: statusMessage
      title: AlarmModelVersionSummary
      type: object
    AlarmModelVersionSummaries:
      items:
        $ref: '#/components/schemas/AlarmModelVersionSummary'
      type: array
    StatusMessage:
      type: string
    AlarmNotification:
      description: Contains information about one or more notification actions.
      properties:
        notificationActions:
          allOf:
          - $ref: '#/components/schemas/NotificationActions'
          - description: Contains the notification settings of an alarm model. The
              settings apply to all alarms that were created based on this alarm model.
          title: notificationActions
      title: AlarmNotification
      type: object
    AlarmRule:
      description: Defines when your alarm is invoked.
      properties:
        simpleRule:
          $ref: '#/components/schemas/CreateAlarmModel_request_alarmRule_simpleRule'
      title: AlarmRule
      type: object
    AnalysisId:
      type: string
    AnalysisMessage:
      type: string
    AnalysisType:
      type: string
    AnalysisResultLevel:
      enum:
      - INFO
      - WARNING
      - ERROR
      title: AnalysisResultLevel
      type: string
    AnalysisResultLocations:
      items:
        $ref: '#/components/schemas/AnalysisResultLocation'
      type: array
    AnalysisResult:
      description: Contains the result of the analysis.
      properties:
        type:
          allOf:
          - $ref: '#/components/schemas/AnalysisType'
          - description: "<p>The type of the analysis result. Analyses fall into the\
              \ following types based on the validators used to generate the analysis\
              \ result:</p> <ul> <li> <p> <code>supported-actions</code> - You must\
              \ specify AWS IoT Events supported actions that work with other AWS\
              \ services in a supported AWS Region.</p> </li> <li> <p> <code>service-limits</code>\
              \ - Resources or API operations can't exceed service quotas (also known\
              \ as limits). Update your detector model or request a quota increase.</p>\
              \ </li> <li> <p> <code>structure</code> - The detector model must follow\
              \ a structure that AWS IoT Events supports. </p> </li> <li> <p> <code>expression-syntax</code>\
              \ - Your expression must follow the required syntax.</p> </li> <li>\
              \ <p> <code>data-type</code> - Data types referenced in the detector\
              \ model must be compatible.</p> </li> <li> <p> <code>referenced-data</code>\
              \ - You must define the data referenced in your detector model before\
              \ you can use the data.</p> </li> <li> <p> <code>referenced-resource</code>\
              \ - Resources that the detector model uses must be available.</p> </li>\
              \ </ul> <p>For more information, see <a href=\"https://docs.aws.amazon.com/iotevents/latest/developerguide/iotevents-analyze-api.html\"\
              >Running detector model analyses</a> in the <i>AWS IoT Events Developer\
              \ Guide</i>.</p>"
          title: type
        level:
          allOf:
          - $ref: '#/components/schemas/AnalysisResultLevel'
          - description: "<p>The severity level of the analysis result. Based on the\
              \ severity level, analysis results fall into three general categories:</p>\
              \ <ul> <li> <p> <code>INFO</code> - An information result tells you\
              \ about a significant field in your detector model. This type of result\
              \ usually doesn't require immediate action.</p> </li> <li> <p> <code>WARNING</code>\
              \ - A warning result draws special attention to fields that might cause\
              \ issues for your detector model. We recommend that you review warnings\
              \ and take necessary actions before you use your detector model in production\
              \ environments. Otherwise, the detector model might not work as expected.</p>\
              \ </li> <li> <p> <code>ERROR</code> - An error result notifies you about\
              \ a problem found in your detector model. You must fix all errors before\
              \ you can publish your detector model.</p> </li> </ul>"
          title: level
        message:
          allOf:
          - $ref: '#/components/schemas/AnalysisMessage'
          - description: Contains additional information about the analysis result.
          title: message
        locations:
          allOf:
          - $ref: '#/components/schemas/AnalysisResultLocations'
          - description: Contains one or more locations that you can use to locate
              the fields in your detector model that the analysis result references.
          title: locations
      title: AnalysisResult
      type: object
    AnalysisResultLocationPath:
      type: string
    AnalysisResultLocation:
      description: Contains information that you can use to locate the field in your
        detector model that the analysis result references.
      properties:
        path:
          allOf:
          - $ref: '#/components/schemas/AnalysisResultLocationPath'
          - description: A <a href="https://github.com/json-path/JsonPath">JsonPath</a>
              expression that identifies the error field in your detector model.
          title: path
      title: AnalysisResultLocation
      type: object
    AnalysisResults:
      items:
        $ref: '#/components/schemas/AnalysisResult'
      type: array
    AnalysisStatus:
      enum:
      - RUNNING
      - COMPLETE
      - FAILED
      title: AnalysisStatus
      type: string
    AssetId:
      type: string
    AssetModelId:
      type: string
    AssetPropertyAlias:
      type: string
    AssetPropertyBooleanValue:
      type: string
    AssetPropertyDoubleValue:
      type: string
    AssetPropertyEntryId:
      type: string
    AssetPropertyId:
      type: string
    AssetPropertyIntegerValue:
      type: string
    AssetPropertyOffsetInNanos:
      type: string
    AssetPropertyQuality:
      type: string
    AssetPropertyStringValue:
      type: string
    AssetPropertyTimeInSeconds:
      type: string
    AssetPropertyTimestamp:
      description: "<p>A structure that contains timestamp information. For more information,\
        \ see <a href=\"https://docs.aws.amazon.com/iot-sitewise/latest/APIReference/API_TimeInNanos.html\"\
        >TimeInNanos</a> in the <i>AWS IoT SiteWise API Reference</i>.</p> <p>You\
        \ must use expressions for all parameters in <code>AssetPropertyTimestamp</code>.\
        \ The expressions accept literals, operators, functions, references, and substitution\
        \ templates.</p> <p class=\"title\"> <b>Examples</b> </p> <ul> <li> <p>For\
        \ literal values, the expressions must contain single quotes. For example,\
        \ the value for the <code>timeInSeconds</code> parameter can be <code>'1586400675'</code>.</p>\
        \ </li> <li> <p>For references, you must specify either variables or input\
        \ values. For example, the value for the <code>offsetInNanos</code> parameter\
        \ can be <code>$variable.time</code>.</p> </li> <li> <p>For a substitution\
        \ template, you must use <code>${}</code>, and the template must be in single\
        \ quotes. A substitution template can also contain a combination of literals,\
        \ operators, functions, references, and substitution templates.</p> <p>In\
        \ the following example, the value for the <code>timeInSeconds</code> parameter\
        \ uses a substitution template.</p> <p> <code>'${$input.TemperatureInput.sensorData.timestamp\
        \ / 1000}'</code> </p> </li> </ul> <p>For more information, see <a href=\"\
        https://docs.aws.amazon.com/iotevents/latest/developerguide/iotevents-expressions.html\"\
        >Expressions</a> in the <i>AWS IoT Events Developer Guide</i>.</p>"
      properties:
        timeInSeconds:
          allOf:
          - $ref: '#/components/schemas/AssetPropertyTimeInSeconds'
          - description: "The timestamp, in seconds, in the Unix epoch format. The\
              \ valid range is between 1-31556889864403199."
          title: timeInSeconds
        offsetInNanos:
          allOf:
          - $ref: '#/components/schemas/AssetPropertyOffsetInNanos'
          - description: The nanosecond offset converted from <code>timeInSeconds</code>.
              The valid range is between 0-999999999.
          title: offsetInNanos
      required:
      - timeInSeconds
      title: AssetPropertyTimestamp
      type: object
    AssetPropertyVariant:
      description: "<p>A structure that contains an asset property value. For more\
        \ information, see <a href=\"https://docs.aws.amazon.com/iot-sitewise/latest/APIReference/API_Variant.html\"\
        >Variant</a> in the <i>AWS IoT SiteWise API Reference</i>.</p> <p>You must\
        \ use expressions for all parameters in <code>AssetPropertyVariant</code>.\
        \ The expressions accept literals, operators, functions, references, and substitution\
        \ templates.</p> <p class=\"title\"> <b>Examples</b> </p> <ul> <li> <p>For\
        \ literal values, the expressions must contain single quotes. For example,\
        \ the value for the <code>integerValue</code> parameter can be <code>'100'</code>.</p>\
        \ </li> <li> <p>For references, you must specify either variables or parameters.\
        \ For example, the value for the <code>booleanValue</code> parameter can be\
        \ <code>$variable.offline</code>.</p> </li> <li> <p>For a substitution template,\
        \ you must use <code>${}</code>, and the template must be in single quotes.\
        \ A substitution template can also contain a combination of literals, operators,\
        \ functions, references, and substitution templates. </p> <p>In the following\
        \ example, the value for the <code>doubleValue</code> parameter uses a substitution\
        \ template. </p> <p> <code>'${$input.TemperatureInput.sensorData.temperature\
        \ * 6 / 5 + 32}'</code> </p> </li> </ul> <p>For more information, see <a href=\"\
        https://docs.aws.amazon.com/iotevents/latest/developerguide/iotevents-expressions.html\"\
        >Expressions</a> in the <i>AWS IoT Events Developer Guide</i>.</p> <p>You\
        \ must specify one of the following value types, depending on the <code>dataType</code>\
        \ of the specified asset property. For more information, see <a href=\"https://docs.aws.amazon.com/iot-sitewise/latest/APIReference/API_AssetProperty.html\"\
        >AssetProperty</a> in the <i>AWS IoT SiteWise API Reference</i>.</p>"
      properties:
        stringValue:
          allOf:
          - $ref: '#/components/schemas/AssetPropertyStringValue'
          - description: "The asset property value is a string. You must use an expression,\
              \ and the evaluated result should be a string."
          title: stringValue
        integerValue:
          allOf:
          - $ref: '#/components/schemas/AssetPropertyIntegerValue'
          - description: "The asset property value is an integer. You must use an\
              \ expression, and the evaluated result should be an integer."
          title: integerValue
        doubleValue:
          allOf:
          - $ref: '#/components/schemas/AssetPropertyDoubleValue'
          - description: "The asset property value is a double. You must use an expression,\
              \ and the evaluated result should be a double."
          title: doubleValue
        booleanValue:
          allOf:
          - $ref: '#/components/schemas/AssetPropertyBooleanValue'
          - description: "The asset property value is a Boolean value that must be\
              \ <code>'TRUE'</code> or <code>'FALSE'</code>. You must use an expression,\
              \ and the evaluated result should be a Boolean value."
          title: booleanValue
      title: AssetPropertyVariant
      type: object
    AssetPropertyValue:
      description: "<p>A structure that contains value information. For more information,\
        \ see <a href=\"https://docs.aws.amazon.com/iot-sitewise/latest/APIReference/API_AssetPropertyValue.html\"\
        >AssetPropertyValue</a> in the <i>AWS IoT SiteWise API Reference</i>.</p>\
        \ <p>You must use expressions for all parameters in <code>AssetPropertyValue</code>.\
        \ The expressions accept literals, operators, functions, references, and substitution\
        \ templates.</p> <p class=\"title\"> <b>Examples</b> </p> <ul> <li> <p>For\
        \ literal values, the expressions must contain single quotes. For example,\
        \ the value for the <code>quality</code> parameter can be <code>'GOOD'</code>.</p>\
        \ </li> <li> <p>For references, you must specify either variables or input\
        \ values. For example, the value for the <code>quality</code> parameter can\
        \ be <code>$input.TemperatureInput.sensorData.quality</code>.</p> </li> </ul>\
        \ <p>For more information, see <a href=\"https://docs.aws.amazon.com/iotevents/latest/developerguide/iotevents-expressions.html\"\
        >Expressions</a> in the <i>AWS IoT Events Developer Guide</i>.</p>"
      properties:
        value:
          $ref: '#/components/schemas/AssetPropertyValue_value'
        timestamp:
          $ref: '#/components/schemas/AssetPropertyValue_timestamp'
        quality:
          allOf:
          - $ref: '#/components/schemas/AssetPropertyQuality'
          - description: "The quality of the asset property value. The value must\
              \ be <code>'GOOD'</code>, <code>'BAD'</code>, or <code>'UNCERTAIN'</code>."
          title: quality
      title: AssetPropertyValue
      type: object
    AttributeJsonPath:
      maxLength: 128
      minLength: 1
      pattern: "^((`[\\w\\- ]+`)|([\\w\\-]+))(\\.((`[\\w- ]+`)|([\\w\\-]+)))*$"
      type: string
    Attribute:
      description: 'The attributes from the JSON payload that are made available by
        the input. Inputs are derived from messages sent to the AWS IoT Events system
        using <code>BatchPutMessage</code>. Each such message contains a JSON payload.
        Those attributes (and their paired values) specified here are available for
        use in the <code>condition</code> expressions used by detectors. '
      properties:
        jsonPath:
          allOf:
          - $ref: '#/components/schemas/AttributeJsonPath'
          - description: "<p>An expression that specifies an attribute-value pair\
              \ in a JSON structure. Use this to specify an attribute from the JSON\
              \ payload that is made available by the input. Inputs are derived from\
              \ messages sent to AWS IoT Events (<code>BatchPutMessage</code>). Each\
              \ such message contains a JSON payload. The attribute (and its paired\
              \ value) specified here are available for use in the <code>condition</code>\
              \ expressions used by detectors. </p> <p>Syntax: <code>&lt;field-name&gt;.&lt;field-name&gt;...</code>\
              \ </p>"
          title: jsonPath
      required:
      - jsonPath
      title: Attribute
      type: object
    TimerName:
      maxLength: 128
      minLength: 1
      type: string
    ComparisonOperator:
      enum:
      - GREATER
      - GREATER_OR_EQUAL
      - LESS
      - LESS_OR_EQUAL
      - EQUAL
      - NOT_EQUAL
      title: ComparisonOperator
      type: string
    Condition:
      maxLength: 512
      type: string
    ContentExpression:
      minLength: 1
      type: string
    Tags:
      items:
        $ref: '#/components/schemas/Tag'
      type: array
    Severity:
      maximum: 2147483647
      minimum: 0
      type: integer
    CreateAlarmModelRequest:
      example:
        alarmModelName: ""
        severity: ""
        alarmCapabilities:
          initializationConfiguration:
            disabledOnInitialization: ""
          acknowledgeFlow:
            enabled: ""
        alarmNotification:
          notificationActions: ""
        alarmEventActions:
          alarmActions: ""
        alarmRule:
          simpleRule:
            inputProperty: ""
            comparisonOperator: ""
            threshold: ""
        roleArn: ""
        alarmModelDescription: ""
        key: ""
        tags: ""
      properties:
        alarmModelName:
          allOf:
          - $ref: '#/components/schemas/AlarmModelName'
          - description: A unique name that helps you identify the alarm model. You
              can't change this name after you create the alarm model.
        alarmModelDescription:
          allOf:
          - $ref: '#/components/schemas/AlarmModelDescription'
          - description: A description that tells you what the alarm model detects.
        roleArn:
          allOf:
          - $ref: '#/components/schemas/AmazonResourceName'
          - description: "The ARN of the IAM role that allows the alarm to perform\
              \ actions and access AWS resources. For more information, see <a href=\"\
              https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html\"\
              >Amazon Resource Names (ARNs)</a> in the <i>AWS General Reference</i>."
        tags:
          allOf:
          - $ref: '#/components/schemas/Tags'
          - description: "<p>A list of key-value pairs that contain metadata for the\
              \ alarm model. The tags help you manage the alarm model. For more information,\
              \ see <a href=\"https://docs.aws.amazon.com/iotevents/latest/developerguide/tagging-iotevents.html\"\
              >Tagging your AWS IoT Events resources</a> in the <i>AWS IoT Events\
              \ Developer Guide</i>.</p> <p>You can create up to 50 tags for one alarm\
              \ model.</p>"
        key:
          allOf:
          - $ref: '#/components/schemas/AttributeJsonPath'
          - description: An input attribute used as a key to create an alarm. AWS
              IoT Events routes <a href="https://docs.aws.amazon.com/iotevents/latest/apireference/API_Input.html">inputs</a>
              associated with this key to the alarm.
        severity:
          allOf:
          - $ref: '#/components/schemas/Severity'
          - description: A non-negative integer that reflects the severity level of
              the alarm.
        alarmRule:
          $ref: '#/components/schemas/DescribeAlarmModelResponse_alarmRule'
        alarmNotification:
          $ref: '#/components/schemas/DescribeAlarmModelResponse_alarmNotification'
        alarmEventActions:
          $ref: '#/components/schemas/DescribeAlarmModelResponse_alarmEventActions'
        alarmCapabilities:
          $ref: '#/components/schemas/DescribeAlarmModelResponse_alarmCapabilities'
      required:
      - alarmModelName
      - alarmRule
      - roleArn
      title: CreateAlarmModelRequest
      type: object
    DetectorModelName:
      maxLength: 128
      minLength: 1
      pattern: "^[a-zA-Z0-9_-]+$"
      type: string
    DetectorModelDefinition:
      description: Information that defines how a detector operates.
      example:
        initialStateName: ""
        states: ""
      properties:
        states:
          allOf:
          - $ref: '#/components/schemas/States'
          - description: Information about the states of the detector.
          title: states
        initialStateName:
          allOf:
          - $ref: '#/components/schemas/StateName'
          - description: The state that is entered at the creation of each detector
              (instance).
          title: initialStateName
      required:
      - initialStateName
      - states
      title: DetectorModelDefinition
      type: object
    DetectorModelDescription:
      maxLength: 128
      type: string
    EvaluationMethod:
      enum:
      - BATCH
      - SERIAL
      title: EvaluationMethod
      type: string
    CreateDetectorModelRequest:
      example:
        roleArn: ""
        evaluationMethod: ""
        detectorModelDefinition:
          initialStateName: ""
          states: ""
        detectorModelName: ""
        key: ""
        detectorModelDescription: ""
        tags: ""
      properties:
        detectorModelName:
          allOf:
          - $ref: '#/components/schemas/DetectorModelName'
          - description: The name of the detector model.
        detectorModelDefinition:
          $ref: '#/components/schemas/CreateDetectorModelRequest_detectorModelDefinition'
        detectorModelDescription:
          allOf:
          - $ref: '#/components/schemas/DetectorModelDescription'
          - description: A brief description of the detector model.
        key:
          allOf:
          - $ref: '#/components/schemas/AttributeJsonPath'
          - description: The input attribute key used to identify a device or system
              to create a detector (an instance of the detector model) and then to
              route each input received to the appropriate detector (instance). This
              parameter uses a JSON-path expression in the message payload of each
              input to specify the attribute-value pair that is used to identify the
              device associated with the input.
        roleArn:
          allOf:
          - $ref: '#/components/schemas/AmazonResourceName'
          - description: The ARN of the role that grants permission to AWS IoT Events
              to perform its operations.
        tags:
          allOf:
          - $ref: '#/components/schemas/Tags'
          - description: Metadata that can be used to manage the detector model.
        evaluationMethod:
          allOf:
          - $ref: '#/components/schemas/EvaluationMethod'
          - description: 'Information about the order in which events are evaluated
              and how actions are executed. '
      required:
      - detectorModelDefinition
      - detectorModelName
      - roleArn
      title: CreateDetectorModelRequest
      type: object
    DetectorModelConfiguration:
      description: Information about how the detector model is configured.
      properties:
        detectorModelName:
          allOf:
          - $ref: '#/components/schemas/DetectorModelName'
          - description: The name of the detector model.
          title: detectorModelName
        detectorModelVersion:
          allOf:
          - $ref: '#/components/schemas/DetectorModelVersion'
          - description: The version of the detector model.
          title: detectorModelVersion
        detectorModelDescription:
          allOf:
          - $ref: '#/components/schemas/DetectorModelDescription'
          - description: A brief description of the detector model.
          title: detectorModelDescription
        detectorModelArn:
          allOf:
          - $ref: '#/components/schemas/DetectorModelArn'
          - description: The ARN of the detector model.
          title: detectorModelArn
        roleArn:
          allOf:
          - $ref: '#/components/schemas/AmazonResourceName'
          - description: The ARN of the role that grants permission to AWS IoT Events
              to perform its operations.
          title: roleArn
        creationTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          - description: The time the detector model was created.
          title: creationTime
        lastUpdateTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          - description: The time the detector model was last updated.
          title: lastUpdateTime
        status:
          allOf:
          - $ref: '#/components/schemas/DetectorModelVersionStatus'
          - description: The status of the detector model.
          title: status
        key:
          allOf:
          - $ref: '#/components/schemas/AttributeJsonPath'
          - description: "<p>The value used to identify a detector instance. When\
              \ a device or system sends input, a new detector instance with a unique\
              \ key value is created. AWS IoT Events can continue to route input to\
              \ its corresponding detector instance based on this identifying information.\
              \ </p> <p>This parameter uses a JSON-path expression to select the attribute-value\
              \ pair in the message payload that is used for identification. To route\
              \ the message to the correct detector instance, the device must send\
              \ a message payload that contains the same attribute-value.</p>"
          title: key
        evaluationMethod:
          allOf:
          - $ref: '#/components/schemas/EvaluationMethod'
          - description: 'Information about the order in which events are evaluated
              and how actions are executed. '
          title: evaluationMethod
      title: DetectorModelConfiguration
      type: object
    InputName:
      maxLength: 128
      minLength: 1
      pattern: "^[a-zA-Z][a-zA-Z0-9_]*$"
      type: string
    InputDescription:
      maxLength: 128
      type: string
    InputDefinition:
      description: The definition of the input.
      properties:
        attributes:
          allOf:
          - $ref: '#/components/schemas/Attributes'
          - description: "The attributes from the JSON payload that are made available\
              \ by the input. Inputs are derived from messages sent to the AWS IoT\
              \ Events system using <code>BatchPutMessage</code>. Each such message\
              \ contains a JSON payload, and those attributes (and their paired values)\
              \ specified here are available for use in the <code>condition</code>\
              \ expressions used by detectors that monitor this input. "
          title: attributes
      required:
      - attributes
      title: InputDefinition
      type: object
    CreateInputRequest:
      example:
        inputDescription: ""
        inputDefinition:
          attributes: ""
        inputName: ""
        tags: ""
      properties:
        inputName:
          allOf:
          - $ref: '#/components/schemas/InputName'
          - description: The name you want to give to the input.
        inputDescription:
          allOf:
          - $ref: '#/components/schemas/InputDescription'
          - description: A brief description of the input.
        inputDefinition:
          $ref: '#/components/schemas/CreateInputRequest_inputDefinition'
        tags:
          allOf:
          - $ref: '#/components/schemas/Tags'
          - description: Metadata that can be used to manage the input.
      required:
      - inputDefinition
      - inputName
      title: CreateInputRequest
      type: object
    InputConfiguration:
      description: Information about the configuration of an input.
      properties:
        inputName:
          allOf:
          - $ref: '#/components/schemas/InputName'
          - description: The name of the input.
          title: inputName
        inputDescription:
          allOf:
          - $ref: '#/components/schemas/InputDescription'
          - description: A brief description of the input.
          title: inputDescription
        inputArn:
          allOf:
          - $ref: '#/components/schemas/InputArn'
          - description: The ARN of the input.
          title: inputArn
        creationTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          - description: The time the input was created.
          title: creationTime
        lastUpdateTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          - description: The last time the input was updated.
          title: lastUpdateTime
        status:
          allOf:
          - $ref: '#/components/schemas/InputStatus'
          - description: The status of the input.
          title: status
      required:
      - creationTime
      - inputArn
      - inputName
      - lastUpdateTime
      - status
      title: InputConfiguration
      type: object
    DeleteAlarmModelRequest:
      properties: {}
      title: DeleteAlarmModelRequest
      type: object
    DeleteDetectorModelRequest:
      properties: {}
      title: DeleteDetectorModelRequest
      type: object
    DeleteInputRequest:
      properties: {}
      title: DeleteInputRequest
      type: object
    DeliveryStreamName:
      type: string
    DescribeAlarmModelRequest:
      properties: {}
      title: DescribeAlarmModelRequest
      type: object
    DescribeDetectorModelAnalysisRequest:
      properties: {}
      title: DescribeDetectorModelAnalysisRequest
      type: object
    DetectorModelVersion:
      maxLength: 128
      minLength: 1
      type: string
    DescribeDetectorModelRequest:
      properties: {}
      title: DescribeDetectorModelRequest
      type: object
    DetectorModel:
      description: Information about the detector model.
      properties:
        detectorModelDefinition:
          $ref: '#/components/schemas/DetectorModel_detectorModelDefinition'
        detectorModelConfiguration:
          $ref: '#/components/schemas/DetectorModel_detectorModelConfiguration'
      title: DetectorModel
      type: object
    DescribeInputRequest:
      properties: {}
      title: DescribeInputRequest
      type: object
    Input:
      description: Information about the input.
      properties:
        inputConfiguration:
          $ref: '#/components/schemas/Input_inputConfiguration'
        inputDefinition:
          $ref: '#/components/schemas/CreateInputRequest_inputDefinition'
      title: Input
      type: object
    DescribeLoggingOptionsRequest:
      properties: {}
      title: DescribeLoggingOptionsRequest
      type: object
    LoggingOptions:
      description: The values of the AWS IoT Events logging options.
      properties:
        roleArn:
          allOf:
          - $ref: '#/components/schemas/AmazonResourceName'
          - description: The ARN of the role that grants permission to AWS IoT Events
              to perform logging.
          title: roleArn
        level:
          allOf:
          - $ref: '#/components/schemas/LoggingLevel'
          - description: The logging level.
          title: level
        enabled:
          allOf:
          - $ref: '#/components/schemas/LoggingEnabled'
          - description: "If TRUE, logging is enabled for AWS IoT Events."
          title: enabled
        detectorDebugOptions:
          allOf:
          - $ref: '#/components/schemas/DetectorDebugOptions'
          - description: Information that identifies those detector models and their
              detectors (instances) for which the logging level is given.
          title: detectorDebugOptions
      required:
      - enabled
      - level
      - roleArn
      title: LoggingOptions
      type: object
    KeyValue:
      maxLength: 128
      minLength: 1
      pattern: "^[a-zA-Z0-9\\-_:]+$"
      type: string
    DetectorDebugOption:
      description: The detector model and the specific detectors (instances) for which
        the logging level is given.
      properties:
        detectorModelName:
          allOf:
          - $ref: '#/components/schemas/DetectorModelName'
          - description: The name of the detector model.
          title: detectorModelName
        keyValue:
          allOf:
          - $ref: '#/components/schemas/KeyValue'
          - description: The value of the input attribute key used to create the detector
              (the instance of the detector model).
          title: keyValue
      required:
      - detectorModelName
      title: DetectorDebugOption
      type: object
    DetectorModelArn:
      type: string
    DetectorModelVersionStatus:
      enum:
      - ACTIVE
      - ACTIVATING
      - INACTIVE
      - DEPRECATED
      - DRAFT
      - PAUSED
      - FAILED
      title: DetectorModelVersionStatus
      type: string
    DetectorModelSummary:
      description: Information about the detector model.
      properties:
        detectorModelName:
          allOf:
          - $ref: '#/components/schemas/DetectorModelName'
          - description: The name of the detector model.
          title: detectorModelName
        detectorModelDescription:
          allOf:
          - $ref: '#/components/schemas/DetectorModelDescription'
          - description: A brief description of the detector model.
          title: detectorModelDescription
        creationTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          - description: The time the detector model was created.
          title: creationTime
      title: DetectorModelSummary
      type: object
    DetectorModelSummaries:
      items:
        $ref: '#/components/schemas/DetectorModelSummary'
      type: array
    DetectorModelVersionSummary:
      description: Information about the detector model version.
      properties:
        detectorModelName:
          allOf:
          - $ref: '#/components/schemas/DetectorModelName'
          - description: The name of the detector model.
          title: detectorModelName
        detectorModelVersion:
          allOf:
          - $ref: '#/components/schemas/DetectorModelVersion'
          - description: The ID of the detector model version.
          title: detectorModelVersion
        detectorModelArn:
          allOf:
          - $ref: '#/components/schemas/DetectorModelArn'
          - description: The ARN of the detector model version.
          title: detectorModelArn
        roleArn:
          allOf:
          - $ref: '#/components/schemas/AmazonResourceName'
          - description: The ARN of the role that grants the detector model permission
              to perform its tasks.
          title: roleArn
        creationTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          - description: The time the detector model version was created.
          title: creationTime
        lastUpdateTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          - description: The last time the detector model version was updated.
          title: lastUpdateTime
        status:
          allOf:
          - $ref: '#/components/schemas/DetectorModelVersionStatus'
          - description: The status of the detector model version.
          title: status
        evaluationMethod:
          allOf:
          - $ref: '#/components/schemas/EvaluationMethod'
          - description: 'Information about the order in which events are evaluated
              and how actions are executed. '
          title: evaluationMethod
      title: DetectorModelVersionSummary
      type: object
    DetectorModelVersionSummaries:
      items:
        $ref: '#/components/schemas/DetectorModelVersionSummary'
      type: array
    DisabledOnInitialization:
      type: boolean
    DynamoKeyType:
      type: string
    DynamoKeyField:
      type: string
    DynamoKeyValue:
      type: string
    DynamoOperation:
      type: string
    DynamoTableName:
      type: string
    Payload:
      description: "<p>Information needed to configure the payload.</p> <p>By default,\
        \ AWS IoT Events generates a standard payload in JSON for any action. This\
        \ action payload contains all attribute-value pairs that have the information\
        \ about the detector model instance and the event triggered the action. To\
        \ configure the action payload, you can use <code>contentExpression</code>.</p>"
      properties:
        contentExpression:
          allOf:
          - $ref: '#/components/schemas/ContentExpression'
          - description: "The content of the payload. You can use a string expression\
              \ that includes quoted strings (<code>'&lt;string&gt;'</code>), variables\
              \ (<code>$variable.&lt;variable-name&gt;</code>), input values (<code>$input.&lt;input-name&gt;.&lt;path-to-datum&gt;</code>),\
              \ string concatenations, and quoted strings that contain <code>${}</code>\
              \ as the content. The recommended maximum size of a content expression\
              \ is 1 KB."
          title: contentExpression
        type:
          allOf:
          - $ref: '#/components/schemas/PayloadType'
          - description: The value of the payload type can be either <code>STRING</code>
              or <code>JSON</code>.
          title: type
      required:
      - contentExpression
      - type
      title: Payload
      type: object
    FromEmail:
      type: string
    EmailContent:
      description: Contains the subject and message of an email.
      properties:
        subject:
          allOf:
          - $ref: '#/components/schemas/EmailSubject'
          - description: The subject of the email.
          title: subject
        additionalMessage:
          allOf:
          - $ref: '#/components/schemas/NotificationAdditionalMessage'
          - description: The message that you want to send. The message can be up
              to 200 characters.
          title: additionalMessage
      title: EmailContent
      type: object
    EmailRecipients:
      description: <p>Contains the information of one or more recipients who receive
        the emails.</p> <important> <p>You must <a href="https://docs.aws.amazon.com/singlesignon/latest/userguide/addusers.html">add
        the users that receive emails to your AWS SSO store</a>.</p> </important>
      properties:
        to:
          allOf:
          - $ref: '#/components/schemas/RecipientDetails'
          - description: Specifies one or more recipients who receive the email.
          title: to
      title: EmailRecipients
      type: object
    EmailConfiguration:
      description: Contains the configuration information of email notifications.
      properties:
        from:
          allOf:
          - $ref: '#/components/schemas/FromEmail'
          - description: "<p>The email address that sends emails.</p> <important>\
              \ <p>If you use the AWS IoT Events managed AWS Lambda function to manage\
              \ your emails, you must <a href=\"https://docs.aws.amazon.com/ses/latest/DeveloperGuide/verify-email-addresses.html\"\
              >verify the email address that sends emails in Amazon SES</a>.</p> </important>"
          title: from
        content:
          $ref: '#/components/schemas/EmailConfiguration_content'
        recipients:
          $ref: '#/components/schemas/EmailConfiguration_recipients'
      required:
      - from
      - recipients
      title: EmailConfiguration
      type: object
    EmailConfigurations:
      items:
        $ref: '#/components/schemas/EmailConfiguration'
      minItems: 1
      type: array
    EmailSubject:
      type: string
    NotificationAdditionalMessage:
      type: string
    RecipientDetails:
      items:
        $ref: '#/components/schemas/RecipientDetail'
      minItems: 1
      type: array
    EventName:
      maxLength: 128
      type: string
    Event:
      description: Specifies the <code>actions</code> to be performed when the <code>condition</code>
        evaluates to TRUE.
      properties:
        eventName:
          allOf:
          - $ref: '#/components/schemas/EventName'
          - description: The name of the event.
          title: eventName
        condition:
          allOf:
          - $ref: '#/components/schemas/Condition'
          - description: "Optional. The Boolean expression that, when TRUE, causes\
              \ the <code>actions</code> to be performed. If not present, the actions\
              \ are performed (=TRUE). If the expression result is not a Boolean value,\
              \ the actions are not performed (=FALSE)."
          title: condition
        actions:
          allOf:
          - $ref: '#/components/schemas/Actions'
          - description: The actions to be performed.
          title: actions
      required:
      - eventName
      title: Event
      type: object
    Events:
      items:
        $ref: '#/components/schemas/Event'
      type: array
    FirehoseSeparator:
      pattern: "([\\n\\t])|(\\r\\n)|(,)"
      type: string
    NextToken:
      type: string
    MaxAnalysisResults:
      type: integer
    GetDetectorModelAnalysisResultsRequest:
      properties: {}
      title: GetDetectorModelAnalysisResultsRequest
      type: object
    IdentityStoreId:
      type: string
    InputArn:
      type: string
    InputStatus:
      enum:
      - CREATING
      - UPDATING
      - ACTIVE
      - DELETING
      title: InputStatus
      type: string
    InputIdentifier:
      description: ' The identifer of the input. '
      properties:
        iotEventsInputIdentifier:
          $ref: '#/components/schemas/ListInputRoutings_request_inputIdentifier_iotEventsInputIdentifier'
        iotSiteWiseInputIdentifier:
          $ref: '#/components/schemas/ListInputRoutings_request_inputIdentifier_iotSiteWiseInputIdentifier'
      title: InputIdentifier
      type: object
    InputProperty:
      maxLength: 512
      minLength: 1
      type: string
    InputSummary:
      description: Information about the input.
      properties:
        inputName:
          allOf:
          - $ref: '#/components/schemas/InputName'
          - description: The name of the input.
          title: inputName
        inputDescription:
          allOf:
          - $ref: '#/components/schemas/InputDescription'
          - description: A brief description of the input.
          title: inputDescription
        inputArn:
          allOf:
          - $ref: '#/components/schemas/InputArn'
          - description: The ARN of the input.
          title: inputArn
        creationTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          - description: The time the input was created.
          title: creationTime
        lastUpdateTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          - description: The last time the input was updated.
          title: lastUpdateTime
        status:
          allOf:
          - $ref: '#/components/schemas/InputStatus'
          - description: The status of the input.
          title: status
      title: InputSummary
      type: object
    InputSummaries:
      items:
        $ref: '#/components/schemas/InputSummary'
      type: array
    IotSiteWiseAssetModelPropertyIdentifier:
      description: ' The asset model property identifer of the input routed from AWS
        IoT SiteWise. '
      properties:
        assetModelId:
          allOf:
          - $ref: '#/components/schemas/AssetModelId'
          - description: ' The ID of the AWS IoT SiteWise asset model. '
          title: assetModelId
        propertyId:
          allOf:
          - $ref: '#/components/schemas/AssetPropertyId'
          - description: ' The ID of the AWS IoT SiteWise asset property. '
          title: propertyId
      required:
      - assetModelId
      - propertyId
      title: IotSiteWiseAssetModelPropertyIdentifier
      type: object
    MQTTTopic:
      maxLength: 128
      minLength: 1
      type: string
    MaxResults:
      maximum: 250
      minimum: 1
      type: integer
    ListAlarmModelVersionsRequest:
      properties: {}
      title: ListAlarmModelVersionsRequest
      type: object
    ListAlarmModelsRequest:
      properties: {}
      title: ListAlarmModelsRequest
      type: object
    ListDetectorModelVersionsRequest:
      properties: {}
      title: ListDetectorModelVersionsRequest
      type: object
    ListDetectorModelsRequest:
      properties: {}
      title: ListDetectorModelsRequest
      type: object
    ListInputRoutingsRequest:
      example:
        maxResults: ""
        nextToken: ""
        inputIdentifier:
          iotEventsInputIdentifier:
            inputName: ""
          iotSiteWiseInputIdentifier:
            iotSiteWiseAssetModelPropertyIdentifier:
              assetModelId: ""
              propertyId: ""
      properties:
        inputIdentifier:
          $ref: '#/components/schemas/ListInputRoutingsRequest_inputIdentifier'
        maxResults:
          allOf:
          - $ref: '#/components/schemas/MaxResults'
          - description: ' The maximum number of results to be returned per request. '
        nextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          - description: ' The token that you can use to return the next set of results. '
      required:
      - inputIdentifier
      title: ListInputRoutingsRequest
      type: object
    RoutedResources:
      items:
        $ref: '#/components/schemas/RoutedResource'
      type: array
    ListInputsRequest:
      properties: {}
      title: ListInputsRequest
      type: object
    ListTagsForResourceRequest:
      properties: {}
      title: ListTagsForResourceRequest
      type: object
    NotificationTargetActions:
      description: Specifies an AWS Lambda function to manage alarm notifications.
        You can create one or use the <a href="https://docs.aws.amazon.com/iotevents/latest/developerguide/lambda-support.html">AWS
        Lambda function provided by AWS IoT Events</a>.
      properties:
        lambdaAction:
          $ref: '#/components/schemas/LambdaAction'
      title: NotificationTargetActions
      type: object
    SMSConfigurations:
      items:
        $ref: '#/components/schemas/SMSConfiguration'
      minItems: 1
      type: array
    NotificationAction:
      description: Contains the notification settings of an alarm model. The settings
        apply to all alarms that were created based on this alarm model.
      properties:
        action:
          $ref: '#/components/schemas/NotificationAction_action'
        smsConfigurations:
          allOf:
          - $ref: '#/components/schemas/SMSConfigurations'
          - description: Contains the configuration information of SMS notifications.
          title: smsConfigurations
        emailConfigurations:
          allOf:
          - $ref: '#/components/schemas/EmailConfigurations'
          - description: Contains the configuration information of email notifications.
          title: emailConfigurations
      required:
      - action
      title: NotificationAction
      type: object
    OnEnterLifecycle:
      description: "When entering this state, perform these <code>actions</code> if\
        \ the <code>condition</code> is TRUE."
      properties:
        events:
          allOf:
          - $ref: '#/components/schemas/Events'
          - description: Specifies the actions that are performed when the state is
              entered and the <code>condition</code> is <code>TRUE</code>.
          title: events
      title: OnEnterLifecycle
      type: object
    OnExitLifecycle:
      description: "When exiting this state, perform these <code>actions</code> if\
        \ the specified <code>condition</code> is <code>TRUE</code>."
      properties:
        events:
          allOf:
          - $ref: '#/components/schemas/Events'
          - description: Specifies the <code>actions</code> that are performed when
              the state is exited and the <code>condition</code> is <code>TRUE</code>.
          title: events
      title: OnExitLifecycle
      type: object
    TransitionEvents:
      items:
        $ref: '#/components/schemas/TransitionEvent'
      type: array
    OnInputLifecycle:
      description: Specifies the actions performed when the <code>condition</code>
        evaluates to TRUE.
      properties:
        events:
          allOf:
          - $ref: '#/components/schemas/Events'
          - description: Specifies the actions performed when the <code>condition</code>
              evaluates to TRUE.
          title: events
        transitionEvents:
          allOf:
          - $ref: '#/components/schemas/TransitionEvents'
          - description: "Specifies the actions performed, and the next state entered,\
              \ when a <code>condition</code> evaluates to TRUE."
          title: transitionEvents
      title: OnInputLifecycle
      type: object
    PayloadType:
      enum:
      - STRING
      - JSON
      title: PayloadType
      type: string
    PutLoggingOptionsRequest:
      example:
        loggingOptions:
          level: ""
          roleArn: ""
          enabled: ""
          detectorDebugOptions: ""
      properties:
        loggingOptions:
          $ref: '#/components/schemas/PutLoggingOptionsRequest_loggingOptions'
      required:
      - loggingOptions
      title: PutLoggingOptionsRequest
      type: object
    QueueUrl:
      type: string
    SSOIdentity:
      description: "Contains information about your identity source in AWS Single\
        \ Sign-On. For more information, see the <a href=\"https://docs.aws.amazon.com/singlesignon/latest/userguide/what-is.html\"\
        >AWS Single Sign-On User Guide</a>."
      properties:
        identityStoreId:
          allOf:
          - $ref: '#/components/schemas/IdentityStoreId'
          - description: The ID of the AWS SSO identity store.
          title: identityStoreId
        userId:
          allOf:
          - $ref: '#/components/schemas/SSOReferenceId'
          - description: The user ID.
          title: userId
      required:
      - identityStoreId
      title: SSOIdentity
      type: object
    RecipientDetail:
      description: The information that identifies the recipient.
      properties:
        ssoIdentity:
          $ref: '#/components/schemas/RecipientDetail_ssoIdentity'
      title: RecipientDetail
      type: object
    ResourceName:
      type: string
    RoutedResource:
      description: ' Contains information about the routed resource. '
      properties:
        name:
          allOf:
          - $ref: '#/components/schemas/ResourceName'
          - description: ' The name of the routed resource. '
          title: name
        arn:
          allOf:
          - $ref: '#/components/schemas/AmazonResourceName'
          - description: " The ARN of the routed resource. For more information, see\
              \ <a href=\"https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html\"\
              >Amazon Resource Names (ARNs)</a> in the <i>AWS General Reference</i>. "
          title: arn
      title: RoutedResource
      type: object
    SMSSenderId:
      type: string
    SMSConfiguration:
      description: Contains the configuration information of SMS notifications.
      properties:
        senderId:
          allOf:
          - $ref: '#/components/schemas/SMSSenderId'
          - description: The sender ID.
          title: senderId
        additionalMessage:
          allOf:
          - $ref: '#/components/schemas/NotificationAdditionalMessage'
          - description: The message that you want to send. The message can be up
              to 200 characters.
          title: additionalMessage
        recipients:
          allOf:
          - $ref: '#/components/schemas/RecipientDetails'
          - description: <p>Specifies one or more recipients who receive the message.</p>
              <important> <p>You must <a href="https://docs.aws.amazon.com/singlesignon/latest/userguide/addusers.html">add
              the users that receive SMS messages to your AWS SSO store</a>.</p> </important>
          title: recipients
      required:
      - recipients
      title: SMSConfiguration
      type: object
    SSOReferenceId:
      type: string
    Seconds:
      maximum: 31622400
      minimum: 1
      type: integer
    VariableValue:
      maxLength: 1024
      minLength: 1
      type: string
    VariableName:
      maxLength: 128
      minLength: 1
      pattern: "^[a-zA-Z][a-zA-Z0-9_]*$"
      type: string
    Threshold:
      maxLength: 512
      minLength: 1
      type: string
    UseBase64:
      type: boolean
    StartDetectorModelAnalysisRequest:
      example:
        detectorModelDefinition:
          initialStateName: ""
          states: ""
      properties:
        detectorModelDefinition:
          $ref: '#/components/schemas/DetectorModelDefinition'
      required:
      - detectorModelDefinition
      title: StartDetectorModelAnalysisRequest
      type: object
    State:
      description: Information that defines a state of a detector.
      properties:
        stateName:
          allOf:
          - $ref: '#/components/schemas/StateName'
          - description: The name of the state.
          title: stateName
        onInput:
          $ref: '#/components/schemas/State_onInput'
        onEnter:
          $ref: '#/components/schemas/State_onEnter'
        onExit:
          $ref: '#/components/schemas/State_onExit'
      required:
      - stateName
      title: State
      type: object
    TagValue:
      maxLength: 256
      minLength: 0
      type: string
    TagKeys:
      items:
        $ref: '#/components/schemas/TagKey'
      type: array
    TagResourceRequest:
      example:
        tags: ""
      properties:
        tags:
          allOf:
          - $ref: '#/components/schemas/Tags'
          - description: The new or modified tags for the resource.
      required:
      - tags
      title: TagResourceRequest
      type: object
    TransitionEvent:
      description: Specifies the actions performed and the next state entered when
        a <code>condition</code> evaluates to TRUE.
      properties:
        eventName:
          allOf:
          - $ref: '#/components/schemas/EventName'
          - description: The name of the transition event.
          title: eventName
        condition:
          allOf:
          - $ref: '#/components/schemas/Condition'
          - description: Required. A Boolean expression that when TRUE causes the
              actions to be performed and the <code>nextState</code> to be entered.
          title: condition
        actions:
          allOf:
          - $ref: '#/components/schemas/Actions'
          - description: The actions to be performed.
          title: actions
        nextState:
          allOf:
          - $ref: '#/components/schemas/StateName'
          - description: The next state to enter.
          title: nextState
      required:
      - condition
      - eventName
      - nextState
      title: TransitionEvent
      type: object
    UntagResourceRequest:
      properties: {}
      title: UntagResourceRequest
      type: object
    UpdateAlarmModelRequest:
      example:
        severity: ""
        alarmCapabilities:
          initializationConfiguration:
            disabledOnInitialization: ""
          acknowledgeFlow:
            enabled: ""
        alarmNotification:
          notificationActions: ""
        alarmEventActions:
          alarmActions: ""
        alarmRule:
          simpleRule:
            inputProperty: ""
            comparisonOperator: ""
            threshold: ""
        roleArn: ""
        alarmModelDescription: ""
      properties:
        alarmModelDescription:
          allOf:
          - $ref: '#/components/schemas/AlarmModelDescription'
          - description: The description of the alarm model.
        roleArn:
          allOf:
          - $ref: '#/components/schemas/AmazonResourceName'
          - description: "The ARN of the IAM role that allows the alarm to perform\
              \ actions and access AWS resources. For more information, see <a href=\"\
              https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html\"\
              >Amazon Resource Names (ARNs)</a> in the <i>AWS General Reference</i>."
        severity:
          allOf:
          - $ref: '#/components/schemas/Severity'
          - description: A non-negative integer that reflects the severity level of
              the alarm.
        alarmRule:
          $ref: '#/components/schemas/DescribeAlarmModelResponse_alarmRule'
        alarmNotification:
          $ref: '#/components/schemas/DescribeAlarmModelResponse_alarmNotification'
        alarmEventActions:
          $ref: '#/components/schemas/DescribeAlarmModelResponse_alarmEventActions'
        alarmCapabilities:
          $ref: '#/components/schemas/DescribeAlarmModelResponse_alarmCapabilities'
      required:
      - alarmRule
      - roleArn
      title: UpdateAlarmModelRequest
      type: object
    UpdateDetectorModelRequest:
      example:
        roleArn: ""
        evaluationMethod: ""
        detectorModelDefinition:
          initialStateName: ""
          states: ""
        detectorModelDescription: ""
      properties:
        detectorModelDefinition:
          $ref: '#/components/schemas/DetectorModel_detectorModelDefinition'
        detectorModelDescription:
          allOf:
          - $ref: '#/components/schemas/DetectorModelDescription'
          - description: A brief description of the detector model.
        roleArn:
          allOf:
          - $ref: '#/components/schemas/AmazonResourceName'
          - description: The ARN of the role that grants permission to AWS IoT Events
              to perform its operations.
        evaluationMethod:
          allOf:
          - $ref: '#/components/schemas/EvaluationMethod'
          - description: 'Information about the order in which events are evaluated
              and how actions are executed. '
      required:
      - detectorModelDefinition
      - roleArn
      title: UpdateDetectorModelRequest
      type: object
    UpdateInputRequest:
      example:
        inputDescription: ""
        inputDefinition:
          attributes: ""
      properties:
        inputDescription:
          allOf:
          - $ref: '#/components/schemas/InputDescription'
          - description: A brief description of the input.
        inputDefinition:
          $ref: '#/components/schemas/CreateInputRequest_inputDefinition'
      required:
      - inputDefinition
      title: UpdateInputRequest
      type: object
    CreateAlarmModel_request_alarmRule_simpleRule:
      allOf:
      - $ref: '#/components/schemas/SimpleRule'
      - description: A rule that compares an input property value to a threshold value
          with a comparison operator.
      example:
        inputProperty: ""
        comparisonOperator: ""
        threshold: ""
      title: CreateAlarmModel_request_alarmRule_simpleRule
    CreateAlarmModel_request_alarmRule:
      description: Defines when your alarm is invoked.
      properties:
        simpleRule:
          $ref: '#/components/schemas/CreateAlarmModel_request_alarmRule_simpleRule'
      title: CreateAlarmModel_request_alarmRule
      type: object
    CreateAlarmModel_request_alarmNotification:
      description: Contains information about one or more notification actions.
      properties:
        notificationActions:
          allOf:
          - $ref: '#/components/schemas/NotificationActions'
          - description: Contains the notification settings of an alarm model. The
              settings apply to all alarms that were created based on this alarm model.
          title: notificationActions
      title: CreateAlarmModel_request_alarmNotification
      type: object
    CreateAlarmModel_request_alarmEventActions:
      description: Contains information about one or more alarm actions.
      properties:
        alarmActions:
          allOf:
          - $ref: '#/components/schemas/AlarmActions'
          - description: Specifies one or more supported actions to receive notifications
              when the alarm state changes.
          title: alarmActions
      title: CreateAlarmModel_request_alarmEventActions
      type: object
    CreateAlarmModel_request_alarmCapabilities_initializationConfiguration:
      allOf:
      - $ref: '#/components/schemas/InitializationConfiguration'
      - description: Specifies the default alarm state. The configuration applies
          to all alarms that were created based on this alarm model.
      example:
        disabledOnInitialization: ""
      title: CreateAlarmModel_request_alarmCapabilities_initializationConfiguration
    CreateAlarmModel_request_alarmCapabilities_acknowledgeFlow:
      allOf:
      - $ref: '#/components/schemas/AcknowledgeFlow'
      - description: Specifies whether to get notified for alarm state changes.
      example:
        enabled: ""
      title: CreateAlarmModel_request_alarmCapabilities_acknowledgeFlow
    CreateAlarmModel_request_alarmCapabilities:
      description: Contains the configuration information of alarm state changes.
      properties:
        initializationConfiguration:
          $ref: '#/components/schemas/CreateAlarmModel_request_alarmCapabilities_initializationConfiguration'
        acknowledgeFlow:
          $ref: '#/components/schemas/CreateAlarmModel_request_alarmCapabilities_acknowledgeFlow'
      title: CreateAlarmModel_request_alarmCapabilities
      type: object
    CreateAlarmModel_request:
      properties:
        alarmModelName:
          description: A unique name that helps you identify the alarm model. You
            can't change this name after you create the alarm model.
          maxLength: 128
          minLength: 1
          pattern: "^[a-zA-Z0-9_-]+$"
          title: alarmModelName
          type: string
        alarmModelDescription:
          description: A description that tells you what the alarm model detects.
          maxLength: 128
          title: alarmModelDescription
          type: string
        roleArn:
          description: "The ARN of the IAM role that allows the alarm to perform actions\
            \ and access AWS resources. For more information, see <a href=\"https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html\"\
            >Amazon Resource Names (ARNs)</a> in the <i>AWS General Reference</i>."
          maxLength: 2048
          minLength: 1
          title: roleArn
          type: string
        tags:
          description: "<p>A list of key-value pairs that contain metadata for the\
            \ alarm model. The tags help you manage the alarm model. For more information,\
            \ see <a href=\"https://docs.aws.amazon.com/iotevents/latest/developerguide/tagging-iotevents.html\"\
            >Tagging your AWS IoT Events resources</a> in the <i>AWS IoT Events Developer\
            \ Guide</i>.</p> <p>You can create up to 50 tags for one alarm model.</p>"
          items:
            $ref: '#/components/schemas/Tag'
          title: tags
          type: array
        key:
          description: An input attribute used as a key to create an alarm. AWS IoT
            Events routes <a href="https://docs.aws.amazon.com/iotevents/latest/apireference/API_Input.html">inputs</a>
            associated with this key to the alarm.
          maxLength: 128
          minLength: 1
          pattern: "^((`[\\w\\- ]+`)|([\\w\\-]+))(\\.((`[\\w- ]+`)|([\\w\\-]+)))*$"
          title: key
          type: string
        severity:
          description: A non-negative integer that reflects the severity level of
            the alarm.
          maximum: 2147483647
          minimum: 0
          title: severity
          type: integer
        alarmRule:
          $ref: '#/components/schemas/CreateAlarmModel_request_alarmRule'
        alarmNotification:
          $ref: '#/components/schemas/CreateAlarmModel_request_alarmNotification'
        alarmEventActions:
          $ref: '#/components/schemas/CreateAlarmModel_request_alarmEventActions'
        alarmCapabilities:
          $ref: '#/components/schemas/CreateAlarmModel_request_alarmCapabilities'
      required:
      - alarmModelName
      - alarmRule
      - roleArn
      title: CreateAlarmModel_request
      type: object
    CreateDetectorModel_request_detectorModelDefinition:
      description: Information that defines how a detector operates.
      properties:
        states:
          allOf:
          - $ref: '#/components/schemas/States'
          - description: Information about the states of the detector.
          title: states
        initialStateName:
          allOf:
          - $ref: '#/components/schemas/StateName'
          - description: The state that is entered at the creation of each detector
              (instance).
          title: initialStateName
      title: CreateDetectorModel_request_detectorModelDefinition
      type: object
    CreateDetectorModel_request:
      properties:
        detectorModelName:
          description: The name of the detector model.
          maxLength: 128
          minLength: 1
          pattern: "^[a-zA-Z0-9_-]+$"
          title: detectorModelName
          type: string
        detectorModelDefinition:
          $ref: '#/components/schemas/CreateDetectorModel_request_detectorModelDefinition'
        detectorModelDescription:
          description: A brief description of the detector model.
          maxLength: 128
          title: detectorModelDescription
          type: string
        key:
          description: The input attribute key used to identify a device or system
            to create a detector (an instance of the detector model) and then to route
            each input received to the appropriate detector (instance). This parameter
            uses a JSON-path expression in the message payload of each input to specify
            the attribute-value pair that is used to identify the device associated
            with the input.
          maxLength: 128
          minLength: 1
          pattern: "^((`[\\w\\- ]+`)|([\\w\\-]+))(\\.((`[\\w- ]+`)|([\\w\\-]+)))*$"
          title: key
          type: string
        roleArn:
          description: The ARN of the role that grants permission to AWS IoT Events
            to perform its operations.
          maxLength: 2048
          minLength: 1
          title: roleArn
          type: string
        tags:
          description: Metadata that can be used to manage the detector model.
          items:
            $ref: '#/components/schemas/Tag'
          title: tags
          type: array
        evaluationMethod:
          description: 'Information about the order in which events are evaluated
            and how actions are executed. '
          enum:
          - BATCH
          - SERIAL
          title: evaluationMethod
          type: string
      required:
      - detectorModelDefinition
      - detectorModelName
      - roleArn
      title: CreateDetectorModel_request
      type: object
    CreateInput_request_inputDefinition:
      description: The definition of the input.
      properties:
        attributes:
          allOf:
          - $ref: '#/components/schemas/Attributes'
          - description: "The attributes from the JSON payload that are made available\
              \ by the input. Inputs are derived from messages sent to the AWS IoT\
              \ Events system using <code>BatchPutMessage</code>. Each such message\
              \ contains a JSON payload, and those attributes (and their paired values)\
              \ specified here are available for use in the <code>condition</code>\
              \ expressions used by detectors that monitor this input. "
          title: attributes
      title: CreateInput_request_inputDefinition
      type: object
    CreateInput_request:
      properties:
        inputName:
          description: The name you want to give to the input.
          maxLength: 128
          minLength: 1
          pattern: "^[a-zA-Z][a-zA-Z0-9_]*$"
          title: inputName
          type: string
        inputDescription:
          description: A brief description of the input.
          maxLength: 128
          title: inputDescription
          type: string
        inputDefinition:
          $ref: '#/components/schemas/CreateInput_request_inputDefinition'
        tags:
          description: Metadata that can be used to manage the input.
          items:
            $ref: '#/components/schemas/Tag'
          title: tags
          type: array
      required:
      - inputDefinition
      - inputName
      title: CreateInput_request
      type: object
    UpdateAlarmModel_request:
      properties:
        alarmModelDescription:
          description: The description of the alarm model.
          maxLength: 128
          title: alarmModelDescription
          type: string
        roleArn:
          description: "The ARN of the IAM role that allows the alarm to perform actions\
            \ and access AWS resources. For more information, see <a href=\"https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html\"\
            >Amazon Resource Names (ARNs)</a> in the <i>AWS General Reference</i>."
          maxLength: 2048
          minLength: 1
          title: roleArn
          type: string
        severity:
          description: A non-negative integer that reflects the severity level of
            the alarm.
          maximum: 2147483647
          minimum: 0
          title: severity
          type: integer
        alarmRule:
          $ref: '#/components/schemas/CreateAlarmModel_request_alarmRule'
        alarmNotification:
          $ref: '#/components/schemas/CreateAlarmModel_request_alarmNotification'
        alarmEventActions:
          $ref: '#/components/schemas/CreateAlarmModel_request_alarmEventActions'
        alarmCapabilities:
          $ref: '#/components/schemas/CreateAlarmModel_request_alarmCapabilities'
      required:
      - alarmRule
      - roleArn
      title: UpdateAlarmModel_request
      type: object
    UpdateDetectorModel_request:
      properties:
        detectorModelDefinition:
          $ref: '#/components/schemas/CreateDetectorModel_request_detectorModelDefinition'
        detectorModelDescription:
          description: A brief description of the detector model.
          maxLength: 128
          title: detectorModelDescription
          type: string
        roleArn:
          description: The ARN of the role that grants permission to AWS IoT Events
            to perform its operations.
          maxLength: 2048
          minLength: 1
          title: roleArn
          type: string
        evaluationMethod:
          description: 'Information about the order in which events are evaluated
            and how actions are executed. '
          enum:
          - BATCH
          - SERIAL
          title: evaluationMethod
          type: string
      required:
      - detectorModelDefinition
      - roleArn
      title: UpdateDetectorModel_request
      type: object
    UpdateInput_request:
      properties:
        inputDescription:
          description: A brief description of the input.
          maxLength: 128
          title: inputDescription
          type: string
        inputDefinition:
          $ref: '#/components/schemas/CreateInput_request_inputDefinition'
      required:
      - inputDefinition
      title: UpdateInput_request
      type: object
    PutLoggingOptions_request_loggingOptions:
      description: The values of the AWS IoT Events logging options.
      properties:
        roleArn:
          allOf:
          - $ref: '#/components/schemas/AmazonResourceName'
          - description: The ARN of the role that grants permission to AWS IoT Events
              to perform logging.
          title: roleArn
        level:
          allOf:
          - $ref: '#/components/schemas/LoggingLevel'
          - description: The logging level.
          title: level
        enabled:
          allOf:
          - $ref: '#/components/schemas/LoggingEnabled'
          - description: "If TRUE, logging is enabled for AWS IoT Events."
          title: enabled
        detectorDebugOptions:
          allOf:
          - $ref: '#/components/schemas/DetectorDebugOptions'
          - description: Information that identifies those detector models and their
              detectors (instances) for which the logging level is given.
          title: detectorDebugOptions
      title: PutLoggingOptions_request_loggingOptions
      type: object
    PutLoggingOptions_request:
      properties:
        loggingOptions:
          $ref: '#/components/schemas/PutLoggingOptions_request_loggingOptions'
      required:
      - loggingOptions
      title: PutLoggingOptions_request
      type: object
    ListInputRoutings_request_inputIdentifier_iotEventsInputIdentifier:
      allOf:
      - $ref: '#/components/schemas/IotEventsInputIdentifier'
      - description: ' The identifier of the input routed to AWS IoT Events. '
      example:
        inputName: ""
      title: ListInputRoutings_request_inputIdentifier_iotEventsInputIdentifier
    ListInputRoutings_request_inputIdentifier_iotSiteWiseInputIdentifier:
      allOf:
      - $ref: '#/components/schemas/IotSiteWiseInputIdentifier'
      - description: ' The identifer of the input routed from AWS IoT SiteWise. '
      example:
        iotSiteWiseAssetModelPropertyIdentifier:
          assetModelId: ""
          propertyId: ""
      title: ListInputRoutings_request_inputIdentifier_iotSiteWiseInputIdentifier
    ListInputRoutings_request_inputIdentifier:
      description: ' The identifer of the input. '
      properties:
        iotEventsInputIdentifier:
          $ref: '#/components/schemas/ListInputRoutings_request_inputIdentifier_iotEventsInputIdentifier'
        iotSiteWiseInputIdentifier:
          $ref: '#/components/schemas/ListInputRoutings_request_inputIdentifier_iotSiteWiseInputIdentifier'
      title: ListInputRoutings_request_inputIdentifier
      type: object
    ListInputRoutings_request:
      properties:
        inputIdentifier:
          $ref: '#/components/schemas/ListInputRoutings_request_inputIdentifier'
        maxResults:
          description: ' The maximum number of results to be returned per request. '
          maximum: 250
          minimum: 1
          title: maxResults
          type: integer
        nextToken:
          description: ' The token that you can use to return the next set of results. '
          title: nextToken
          type: string
      required:
      - inputIdentifier
      title: ListInputRoutings_request
      type: object
    TagResource_request:
      properties:
        tags:
          description: The new or modified tags for the resource.
          items:
            $ref: '#/components/schemas/Tag'
          title: tags
          type: array
      required:
      - tags
      title: TagResource_request
      type: object
    StartDetectorModelAnalysis_request:
      properties:
        detectorModelDefinition:
          $ref: '#/components/schemas/CreateDetectorModel_request_detectorModelDefinition'
      required:
      - detectorModelDefinition
      title: StartDetectorModelAnalysis_request
      type: object
    CreateDetectorModelResponse_detectorModelConfiguration:
      allOf:
      - $ref: '#/components/schemas/DetectorModelConfiguration'
      - description: Information about how the detector model is configured.
      example:
        creationTime: ""
        roleArn: ""
        evaluationMethod: ""
        detectorModelVersion: ""
        detectorModelArn: ""
        detectorModelName: ""
        key: ""
        detectorModelDescription: ""
        lastUpdateTime: ""
        status: ""
      title: CreateDetectorModelResponse_detectorModelConfiguration
    CreateInputResponse_inputConfiguration:
      allOf:
      - $ref: '#/components/schemas/InputConfiguration'
      - description: Information about the configuration of the input.
      example:
        inputDescription: ""
        creationTime: ""
        inputArn: ""
        inputName: ""
        lastUpdateTime: ""
        status: ""
      title: CreateInputResponse_inputConfiguration
    DescribeAlarmModelResponse_alarmRule:
      allOf:
      - $ref: '#/components/schemas/AlarmRule'
      - description: Defines when your alarm is invoked.
      example:
        simpleRule:
          inputProperty: ""
          comparisonOperator: ""
          threshold: ""
      title: DescribeAlarmModelResponse_alarmRule
    DescribeAlarmModelResponse_alarmNotification:
      allOf:
      - $ref: '#/components/schemas/AlarmNotification'
      - description: Contains information about one or more notification actions.
      example:
        notificationActions: ""
      title: DescribeAlarmModelResponse_alarmNotification
    DescribeAlarmModelResponse_alarmEventActions:
      allOf:
      - $ref: '#/components/schemas/AlarmEventActions'
      - description: Contains information about one or more alarm actions.
      example:
        alarmActions: ""
      title: DescribeAlarmModelResponse_alarmEventActions
    DescribeAlarmModelResponse_alarmCapabilities:
      allOf:
      - $ref: '#/components/schemas/AlarmCapabilities'
      - description: Contains the configuration information of alarm state changes.
      example:
        initializationConfiguration:
          disabledOnInitialization: ""
        acknowledgeFlow:
          enabled: ""
      title: DescribeAlarmModelResponse_alarmCapabilities
    DescribeDetectorModelResponse_detectorModel:
      allOf:
      - $ref: '#/components/schemas/DetectorModel'
      - description: Information about the detector model.
      example:
        detectorModelConfiguration:
          creationTime: ""
          roleArn: ""
          evaluationMethod: ""
          detectorModelVersion: ""
          detectorModelArn: ""
          detectorModelName: ""
          key: ""
          detectorModelDescription: ""
          lastUpdateTime: ""
          status: ""
        detectorModelDefinition:
          initialStateName: ""
          states: ""
      title: DescribeDetectorModelResponse_detectorModel
    DescribeInputResponse_input:
      allOf:
      - $ref: '#/components/schemas/Input'
      - description: Information about the input.
      example:
        inputConfiguration:
          inputDescription: ""
          creationTime: ""
          inputArn: ""
          inputName: ""
          lastUpdateTime: ""
          status: ""
        inputDefinition:
          attributes: ""
      title: DescribeInputResponse_input
    DescribeLoggingOptionsResponse_loggingOptions:
      allOf:
      - $ref: '#/components/schemas/LoggingOptions'
      - description: The current settings of the AWS IoT Events logging options.
      example:
        level: ""
        roleArn: ""
        enabled: ""
        detectorDebugOptions: ""
      title: DescribeLoggingOptionsResponse_loggingOptions
    IotSiteWiseInputIdentifier_iotSiteWiseAssetModelPropertyIdentifier:
      allOf:
      - $ref: '#/components/schemas/IotSiteWiseAssetModelPropertyIdentifier'
      - description: ' The identifier of the AWS IoT SiteWise asset model property. '
      example:
        assetModelId: ""
        propertyId: ""
      title: IotSiteWiseInputIdentifier_iotSiteWiseAssetModelPropertyIdentifier
    SNSTopicPublishAction_payload:
      allOf:
      - $ref: '#/components/schemas/Payload'
      - description: You can configure the action payload when you send a message
          as an Amazon SNS push notification.
      title: SNSTopicPublishAction_payload
    IotTopicPublishAction_payload:
      allOf:
      - $ref: '#/components/schemas/Payload'
      - description: You can configure the action payload when you publish a message
          to an AWS IoT Core topic.
      title: IotTopicPublishAction_payload
    LambdaAction_payload:
      allOf:
      - $ref: '#/components/schemas/Payload'
      - description: You can configure the action payload when you send a message
          to a Lambda function.
      title: LambdaAction_payload
    IotEventsAction_payload:
      allOf:
      - $ref: '#/components/schemas/Payload'
      - description: You can configure the action payload when you send a message
          to an AWS IoT Events input.
      title: IotEventsAction_payload
    SqsAction_payload:
      allOf:
      - $ref: '#/components/schemas/Payload'
      - description: You can configure the action payload when you send a message
          to an Amazon SQS queue.
      title: SqsAction_payload
    FirehoseAction_payload:
      allOf:
      - $ref: '#/components/schemas/Payload'
      - description: You can configure the action payload when you send a message
          to an Amazon Kinesis Data Firehose delivery stream.
      title: FirehoseAction_payload
    IotSiteWiseAction_propertyValue:
      allOf:
      - $ref: '#/components/schemas/AssetPropertyValue'
      - description: "The value to send to the asset property. This value contains\
          \ timestamp, quality, and value (TQV) information. "
      title: IotSiteWiseAction_propertyValue
    Action_setVariable:
      allOf:
      - $ref: '#/components/schemas/SetVariableAction'
      - description: Sets a variable to a specified value.
      title: Action_setVariable
    Action_sns:
      allOf:
      - $ref: '#/components/schemas/SNSTopicPublishAction'
      - description: Sends an Amazon SNS message.
      title: Action_sns
    Action_iotTopicPublish:
      allOf:
      - $ref: '#/components/schemas/IotTopicPublishAction'
      - description: Publishes an MQTT message with the given topic to the AWS IoT
          message broker.
      title: Action_iotTopicPublish
    Action_setTimer:
      allOf:
      - $ref: '#/components/schemas/SetTimerAction'
      - description: Information needed to set the timer.
      title: Action_setTimer
    Action_clearTimer:
      allOf:
      - $ref: '#/components/schemas/ClearTimerAction'
      - description: Information needed to clear the timer.
      title: Action_clearTimer
    Action_resetTimer:
      allOf:
      - $ref: '#/components/schemas/ResetTimerAction'
      - description: Information needed to reset the timer.
      title: Action_resetTimer
    Action_lambda:
      allOf:
      - $ref: '#/components/schemas/LambdaAction'
      - description: "Calls a Lambda function, passing in information about the detector\
          \ model instance and the event that triggered the action."
      title: Action_lambda
    Action_iotEvents:
      allOf:
      - $ref: '#/components/schemas/IotEventsAction'
      - description: "Sends AWS IoT Events input, which passes information about the\
          \ detector model instance and the event that triggered the action."
      title: Action_iotEvents
    Action_sqs:
      allOf:
      - $ref: '#/components/schemas/SqsAction'
      - description: Sends information about the detector model instance and the event
          that triggered the action to an Amazon SQS queue.
      title: Action_sqs
    Action_firehose:
      allOf:
      - $ref: '#/components/schemas/FirehoseAction'
      - description: Sends information about the detector model instance and the event
          that triggered the action to an Amazon Kinesis Data Firehose delivery stream.
      title: Action_firehose
    Action_dynamoDB:
      allOf:
      - $ref: '#/components/schemas/DynamoDBAction'
      - description: "Writes to the DynamoDB table that you created. The default action\
          \ payload contains all attribute-value pairs that have the information about\
          \ the detector model instance and the event that triggered the action. You\
          \ can customize the <a href=\"https://docs.aws.amazon.com/iotevents/latest/apireference/API_Payload.html\"\
          >payload</a>. One column of the DynamoDB table receives all attribute-value\
          \ pairs in the payload that you specify. For more information, see <a href=\"\
          https://docs.aws.amazon.com/iotevents/latest/developerguide/iotevents-event-actions.html\"\
          >Actions</a> in <i>AWS IoT Events Developer Guide</i>."
      title: Action_dynamoDB
    Action_dynamoDBv2:
      allOf:
      - $ref: '#/components/schemas/DynamoDBv2Action'
      - description: "Writes to the DynamoDB table that you created. The default action\
          \ payload contains all attribute-value pairs that have the information about\
          \ the detector model instance and the event that triggered the action. You\
          \ can customize the <a href=\"https://docs.aws.amazon.com/iotevents/latest/apireference/API_Payload.html\"\
          >payload</a>. A separate column of the DynamoDB table receives one attribute-value\
          \ pair in the payload that you specify. For more information, see <a href=\"\
          https://docs.aws.amazon.com/iotevents/latest/developerguide/iotevents-event-actions.html\"\
          >Actions</a> in <i>AWS IoT Events Developer Guide</i>."
      title: Action_dynamoDBv2
    Action_iotSiteWise:
      allOf:
      - $ref: '#/components/schemas/IotSiteWiseAction'
      - description: Sends information about the detector model instance and the event
          that triggered the action to an asset property in AWS IoT SiteWise .
      title: Action_iotSiteWise
    AssetPropertyValue_value:
      allOf:
      - $ref: '#/components/schemas/AssetPropertyVariant'
      - description: The value to send to an asset property.
      title: AssetPropertyValue_value
    AssetPropertyValue_timestamp:
      allOf:
      - $ref: '#/components/schemas/AssetPropertyTimestamp'
      - description: The timestamp associated with the asset property value. The default
          is the current event time.
      title: AssetPropertyValue_timestamp
    CreateDetectorModelRequest_detectorModelDefinition:
      allOf:
      - $ref: '#/components/schemas/DetectorModelDefinition'
      - description: Information that defines how the detectors operate.
      example:
        initialStateName: ""
        states: ""
      title: CreateDetectorModelRequest_detectorModelDefinition
    CreateInputRequest_inputDefinition:
      allOf:
      - $ref: '#/components/schemas/InputDefinition'
      - description: The definition of the input.
      example:
        attributes: ""
      title: CreateInputRequest_inputDefinition
    DetectorModel_detectorModelDefinition:
      allOf:
      - $ref: '#/components/schemas/DetectorModelDefinition'
      - description: Information that defines how a detector operates.
      example:
        initialStateName: ""
        states: ""
      title: DetectorModel_detectorModelDefinition
    DetectorModel_detectorModelConfiguration:
      allOf:
      - $ref: '#/components/schemas/DetectorModelConfiguration'
      - description: Information about how the detector is configured.
      example:
        creationTime: ""
        roleArn: ""
        evaluationMethod: ""
        detectorModelVersion: ""
        detectorModelArn: ""
        detectorModelName: ""
        key: ""
        detectorModelDescription: ""
        lastUpdateTime: ""
        status: ""
      title: DetectorModel_detectorModelConfiguration
    Input_inputConfiguration:
      allOf:
      - $ref: '#/components/schemas/InputConfiguration'
      - description: Information about the configuration of an input.
      example:
        inputDescription: ""
        creationTime: ""
        inputArn: ""
        inputName: ""
        lastUpdateTime: ""
        status: ""
      title: Input_inputConfiguration
    EmailConfiguration_content:
      allOf:
      - $ref: '#/components/schemas/EmailContent'
      - description: Contains the subject and message of an email.
      title: EmailConfiguration_content
    EmailConfiguration_recipients:
      allOf:
      - $ref: '#/components/schemas/EmailRecipients'
      - description: <p>Contains the information of one or more recipients who receive
          the emails.</p> <important> <p>You must <a href="https://docs.aws.amazon.com/singlesignon/latest/userguide/addusers.html">add
          the users that receive emails to your AWS SSO store</a>.</p> </important>
      title: EmailConfiguration_recipients
    ListInputRoutingsRequest_inputIdentifier:
      allOf:
      - $ref: '#/components/schemas/InputIdentifier'
      - description: ' The identifer of the routed input. '
      example:
        iotEventsInputIdentifier:
          inputName: ""
        iotSiteWiseInputIdentifier:
          iotSiteWiseAssetModelPropertyIdentifier:
            assetModelId: ""
            propertyId: ""
      title: ListInputRoutingsRequest_inputIdentifier
    NotificationAction_action:
      allOf:
      - $ref: '#/components/schemas/NotificationTargetActions'
      - description: Specifies an AWS Lambda function to manage alarm notifications.
          You can create one or use the <a href="https://docs.aws.amazon.com/iotevents/latest/developerguide/lambda-support.html">AWS
          Lambda function provided by AWS IoT Events</a>.
      title: NotificationAction_action
    PutLoggingOptionsRequest_loggingOptions:
      allOf:
      - $ref: '#/components/schemas/LoggingOptions'
      - description: The new values of the AWS IoT Events logging options.
      example:
        level: ""
        roleArn: ""
        enabled: ""
        detectorDebugOptions: ""
      title: PutLoggingOptionsRequest_loggingOptions
    RecipientDetail_ssoIdentity:
      allOf:
      - $ref: '#/components/schemas/SSOIdentity'
      - description: The AWS Single Sign-On (AWS SSO) authentication information.
      title: RecipientDetail_ssoIdentity
    State_onInput:
      allOf:
      - $ref: '#/components/schemas/OnInputLifecycle'
      - description: "When an input is received and the <code>condition</code> is\
          \ TRUE, perform the specified <code>actions</code>."
      title: State_onInput
    State_onEnter:
      allOf:
      - $ref: '#/components/schemas/OnEnterLifecycle'
      - description: "When entering this state, perform these <code>actions</code>\
          \ if the <code>condition</code> is TRUE."
      title: State_onEnter
    State_onExit:
      allOf:
      - $ref: '#/components/schemas/OnExitLifecycle'
      - description: "When exiting this state, perform these <code>actions</code>\
          \ if the specified <code>condition</code> is <code>TRUE</code>."
      title: State_onExit
  securitySchemes:
    hmac:
      description: Amazon Signature authorization v4
      in: header
      name: Authorization
      type: apiKey
      x-amazon-apigateway-authtype: awsSigv4
      x-apikeyInfoFunc: openapi_server.controllers.security_controller.info_from_hmac
x-hasEquivalentPaths: true
