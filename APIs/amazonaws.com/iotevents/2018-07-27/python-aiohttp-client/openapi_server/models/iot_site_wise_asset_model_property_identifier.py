# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class IotSiteWiseAssetModelPropertyIdentifier(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, asset_model_id: str=None, property_id: str=None):
        """IotSiteWiseAssetModelPropertyIdentifier - a model defined in OpenAPI

        :param asset_model_id: The asset_model_id of this IotSiteWiseAssetModelPropertyIdentifier.
        :param property_id: The property_id of this IotSiteWiseAssetModelPropertyIdentifier.
        """
        self.openapi_types = {
            'asset_model_id': str,
            'property_id': str
        }

        self.attribute_map = {
            'asset_model_id': 'assetModelId',
            'property_id': 'propertyId'
        }

        self._asset_model_id = asset_model_id
        self._property_id = property_id

    @classmethod
    def from_dict(cls, dikt: dict) -> 'IotSiteWiseAssetModelPropertyIdentifier':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The IotSiteWiseAssetModelPropertyIdentifier of this IotSiteWiseAssetModelPropertyIdentifier.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def asset_model_id(self):
        """Gets the asset_model_id of this IotSiteWiseAssetModelPropertyIdentifier.


        :return: The asset_model_id of this IotSiteWiseAssetModelPropertyIdentifier.
        :rtype: str
        """
        return self._asset_model_id

    @asset_model_id.setter
    def asset_model_id(self, asset_model_id):
        """Sets the asset_model_id of this IotSiteWiseAssetModelPropertyIdentifier.


        :param asset_model_id: The asset_model_id of this IotSiteWiseAssetModelPropertyIdentifier.
        :type asset_model_id: str
        """
        if asset_model_id is None:
            raise ValueError("Invalid value for `asset_model_id`, must not be `None`")

        self._asset_model_id = asset_model_id

    @property
    def property_id(self):
        """Gets the property_id of this IotSiteWiseAssetModelPropertyIdentifier.


        :return: The property_id of this IotSiteWiseAssetModelPropertyIdentifier.
        :rtype: str
        """
        return self._property_id

    @property_id.setter
    def property_id(self, property_id):
        """Sets the property_id of this IotSiteWiseAssetModelPropertyIdentifier.


        :param property_id: The property_id of this IotSiteWiseAssetModelPropertyIdentifier.
        :type property_id: str
        """
        if property_id is None:
            raise ValueError("Invalid value for `property_id`, must not be `None`")

        self._property_id = property_id
