# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.describe_detector_model_response_detector_model import DescribeDetectorModelResponseDetectorModel
from openapi_server import util


class DescribeDetectorModelResponse(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, detector_model: DescribeDetectorModelResponseDetectorModel=None):
        """DescribeDetectorModelResponse - a model defined in OpenAPI

        :param detector_model: The detector_model of this DescribeDetectorModelResponse.
        """
        self.openapi_types = {
            'detector_model': DescribeDetectorModelResponseDetectorModel
        }

        self.attribute_map = {
            'detector_model': 'detectorModel'
        }

        self._detector_model = detector_model

    @classmethod
    def from_dict(cls, dikt: dict) -> 'DescribeDetectorModelResponse':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The DescribeDetectorModelResponse of this DescribeDetectorModelResponse.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def detector_model(self):
        """Gets the detector_model of this DescribeDetectorModelResponse.


        :return: The detector_model of this DescribeDetectorModelResponse.
        :rtype: DescribeDetectorModelResponseDetectorModel
        """
        return self._detector_model

    @detector_model.setter
    def detector_model(self, detector_model):
        """Sets the detector_model of this DescribeDetectorModelResponse.


        :param detector_model: The detector_model of this DescribeDetectorModelResponse.
        :type detector_model: DescribeDetectorModelResponseDetectorModel
        """

        self._detector_model = detector_model
