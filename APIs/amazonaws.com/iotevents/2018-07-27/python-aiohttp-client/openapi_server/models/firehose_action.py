# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.firehose_action_payload import FirehoseActionPayload
from openapi_server import util


class FirehoseAction(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, delivery_stream_name: str=None, separator: str=None, payload: FirehoseActionPayload=None):
        """FirehoseAction - a model defined in OpenAPI

        :param delivery_stream_name: The delivery_stream_name of this FirehoseAction.
        :param separator: The separator of this FirehoseAction.
        :param payload: The payload of this FirehoseAction.
        """
        self.openapi_types = {
            'delivery_stream_name': str,
            'separator': str,
            'payload': FirehoseActionPayload
        }

        self.attribute_map = {
            'delivery_stream_name': 'deliveryStreamName',
            'separator': 'separator',
            'payload': 'payload'
        }

        self._delivery_stream_name = delivery_stream_name
        self._separator = separator
        self._payload = payload

    @classmethod
    def from_dict(cls, dikt: dict) -> 'FirehoseAction':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The FirehoseAction of this FirehoseAction.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def delivery_stream_name(self):
        """Gets the delivery_stream_name of this FirehoseAction.


        :return: The delivery_stream_name of this FirehoseAction.
        :rtype: str
        """
        return self._delivery_stream_name

    @delivery_stream_name.setter
    def delivery_stream_name(self, delivery_stream_name):
        """Sets the delivery_stream_name of this FirehoseAction.


        :param delivery_stream_name: The delivery_stream_name of this FirehoseAction.
        :type delivery_stream_name: str
        """
        if delivery_stream_name is None:
            raise ValueError("Invalid value for `delivery_stream_name`, must not be `None`")

        self._delivery_stream_name = delivery_stream_name

    @property
    def separator(self):
        """Gets the separator of this FirehoseAction.


        :return: The separator of this FirehoseAction.
        :rtype: str
        """
        return self._separator

    @separator.setter
    def separator(self, separator):
        """Sets the separator of this FirehoseAction.


        :param separator: The separator of this FirehoseAction.
        :type separator: str
        """

        self._separator = separator

    @property
    def payload(self):
        """Gets the payload of this FirehoseAction.


        :return: The payload of this FirehoseAction.
        :rtype: FirehoseActionPayload
        """
        return self._payload

    @payload.setter
    def payload(self, payload):
        """Sets the payload of this FirehoseAction.


        :param payload: The payload of this FirehoseAction.
        :type payload: FirehoseActionPayload
        """

        self._payload = payload
