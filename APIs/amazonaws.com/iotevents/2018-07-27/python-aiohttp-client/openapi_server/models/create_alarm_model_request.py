# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.create_alarm_model_request_alarm_capabilities import CreateAlarmModelRequestAlarmCapabilities
from openapi_server.models.create_alarm_model_request_alarm_event_actions import CreateAlarmModelRequestAlarmEventActions
from openapi_server.models.create_alarm_model_request_alarm_notification import CreateAlarmModelRequestAlarmNotification
from openapi_server.models.create_alarm_model_request_alarm_rule import CreateAlarmModelRequestAlarmRule
from openapi_server.models.tag import Tag
import re
from openapi_server import util


class CreateAlarmModelRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, alarm_model_name: str=None, alarm_model_description: str=None, role_arn: str=None, tags: List[Tag]=None, key: str=None, severity: int=None, alarm_rule: CreateAlarmModelRequestAlarmRule=None, alarm_notification: CreateAlarmModelRequestAlarmNotification=None, alarm_event_actions: CreateAlarmModelRequestAlarmEventActions=None, alarm_capabilities: CreateAlarmModelRequestAlarmCapabilities=None):
        """CreateAlarmModelRequest - a model defined in OpenAPI

        :param alarm_model_name: The alarm_model_name of this CreateAlarmModelRequest.
        :param alarm_model_description: The alarm_model_description of this CreateAlarmModelRequest.
        :param role_arn: The role_arn of this CreateAlarmModelRequest.
        :param tags: The tags of this CreateAlarmModelRequest.
        :param key: The key of this CreateAlarmModelRequest.
        :param severity: The severity of this CreateAlarmModelRequest.
        :param alarm_rule: The alarm_rule of this CreateAlarmModelRequest.
        :param alarm_notification: The alarm_notification of this CreateAlarmModelRequest.
        :param alarm_event_actions: The alarm_event_actions of this CreateAlarmModelRequest.
        :param alarm_capabilities: The alarm_capabilities of this CreateAlarmModelRequest.
        """
        self.openapi_types = {
            'alarm_model_name': str,
            'alarm_model_description': str,
            'role_arn': str,
            'tags': List[Tag],
            'key': str,
            'severity': int,
            'alarm_rule': CreateAlarmModelRequestAlarmRule,
            'alarm_notification': CreateAlarmModelRequestAlarmNotification,
            'alarm_event_actions': CreateAlarmModelRequestAlarmEventActions,
            'alarm_capabilities': CreateAlarmModelRequestAlarmCapabilities
        }

        self.attribute_map = {
            'alarm_model_name': 'alarmModelName',
            'alarm_model_description': 'alarmModelDescription',
            'role_arn': 'roleArn',
            'tags': 'tags',
            'key': 'key',
            'severity': 'severity',
            'alarm_rule': 'alarmRule',
            'alarm_notification': 'alarmNotification',
            'alarm_event_actions': 'alarmEventActions',
            'alarm_capabilities': 'alarmCapabilities'
        }

        self._alarm_model_name = alarm_model_name
        self._alarm_model_description = alarm_model_description
        self._role_arn = role_arn
        self._tags = tags
        self._key = key
        self._severity = severity
        self._alarm_rule = alarm_rule
        self._alarm_notification = alarm_notification
        self._alarm_event_actions = alarm_event_actions
        self._alarm_capabilities = alarm_capabilities

    @classmethod
    def from_dict(cls, dikt: dict) -> 'CreateAlarmModelRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The CreateAlarmModel_request of this CreateAlarmModelRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def alarm_model_name(self):
        """Gets the alarm_model_name of this CreateAlarmModelRequest.

        A unique name that helps you identify the alarm model. You can't change this name after you create the alarm model.

        :return: The alarm_model_name of this CreateAlarmModelRequest.
        :rtype: str
        """
        return self._alarm_model_name

    @alarm_model_name.setter
    def alarm_model_name(self, alarm_model_name):
        """Sets the alarm_model_name of this CreateAlarmModelRequest.

        A unique name that helps you identify the alarm model. You can't change this name after you create the alarm model.

        :param alarm_model_name: The alarm_model_name of this CreateAlarmModelRequest.
        :type alarm_model_name: str
        """
        if alarm_model_name is None:
            raise ValueError("Invalid value for `alarm_model_name`, must not be `None`")
        if alarm_model_name is not None and len(alarm_model_name) > 128:
            raise ValueError("Invalid value for `alarm_model_name`, length must be less than or equal to `128`")
        if alarm_model_name is not None and len(alarm_model_name) < 1:
            raise ValueError("Invalid value for `alarm_model_name`, length must be greater than or equal to `1`")
        if alarm_model_name is not None and not re.search(r'^[a-zA-Z0-9_-]+$', alarm_model_name):
            raise ValueError("Invalid value for `alarm_model_name`, must be a follow pattern or equal to `/^[a-zA-Z0-9_-]+$/`")

        self._alarm_model_name = alarm_model_name

    @property
    def alarm_model_description(self):
        """Gets the alarm_model_description of this CreateAlarmModelRequest.

        A description that tells you what the alarm model detects.

        :return: The alarm_model_description of this CreateAlarmModelRequest.
        :rtype: str
        """
        return self._alarm_model_description

    @alarm_model_description.setter
    def alarm_model_description(self, alarm_model_description):
        """Sets the alarm_model_description of this CreateAlarmModelRequest.

        A description that tells you what the alarm model detects.

        :param alarm_model_description: The alarm_model_description of this CreateAlarmModelRequest.
        :type alarm_model_description: str
        """
        if alarm_model_description is not None and len(alarm_model_description) > 128:
            raise ValueError("Invalid value for `alarm_model_description`, length must be less than or equal to `128`")

        self._alarm_model_description = alarm_model_description

    @property
    def role_arn(self):
        """Gets the role_arn of this CreateAlarmModelRequest.

        The ARN of the IAM role that allows the alarm to perform actions and access AWS resources. For more information, see <a href=\"https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html\">Amazon Resource Names (ARNs)</a> in the <i>AWS General Reference</i>.

        :return: The role_arn of this CreateAlarmModelRequest.
        :rtype: str
        """
        return self._role_arn

    @role_arn.setter
    def role_arn(self, role_arn):
        """Sets the role_arn of this CreateAlarmModelRequest.

        The ARN of the IAM role that allows the alarm to perform actions and access AWS resources. For more information, see <a href=\"https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html\">Amazon Resource Names (ARNs)</a> in the <i>AWS General Reference</i>.

        :param role_arn: The role_arn of this CreateAlarmModelRequest.
        :type role_arn: str
        """
        if role_arn is None:
            raise ValueError("Invalid value for `role_arn`, must not be `None`")
        if role_arn is not None and len(role_arn) > 2048:
            raise ValueError("Invalid value for `role_arn`, length must be less than or equal to `2048`")
        if role_arn is not None and len(role_arn) < 1:
            raise ValueError("Invalid value for `role_arn`, length must be greater than or equal to `1`")

        self._role_arn = role_arn

    @property
    def tags(self):
        """Gets the tags of this CreateAlarmModelRequest.

        <p>A list of key-value pairs that contain metadata for the alarm model. The tags help you manage the alarm model. For more information, see <a href=\"https://docs.aws.amazon.com/iotevents/latest/developerguide/tagging-iotevents.html\">Tagging your AWS IoT Events resources</a> in the <i>AWS IoT Events Developer Guide</i>.</p> <p>You can create up to 50 tags for one alarm model.</p>

        :return: The tags of this CreateAlarmModelRequest.
        :rtype: List[Tag]
        """
        return self._tags

    @tags.setter
    def tags(self, tags):
        """Sets the tags of this CreateAlarmModelRequest.

        <p>A list of key-value pairs that contain metadata for the alarm model. The tags help you manage the alarm model. For more information, see <a href=\"https://docs.aws.amazon.com/iotevents/latest/developerguide/tagging-iotevents.html\">Tagging your AWS IoT Events resources</a> in the <i>AWS IoT Events Developer Guide</i>.</p> <p>You can create up to 50 tags for one alarm model.</p>

        :param tags: The tags of this CreateAlarmModelRequest.
        :type tags: List[Tag]
        """

        self._tags = tags

    @property
    def key(self):
        """Gets the key of this CreateAlarmModelRequest.

        An input attribute used as a key to create an alarm. AWS IoT Events routes <a href=\"https://docs.aws.amazon.com/iotevents/latest/apireference/API_Input.html\">inputs</a> associated with this key to the alarm.

        :return: The key of this CreateAlarmModelRequest.
        :rtype: str
        """
        return self._key

    @key.setter
    def key(self, key):
        """Sets the key of this CreateAlarmModelRequest.

        An input attribute used as a key to create an alarm. AWS IoT Events routes <a href=\"https://docs.aws.amazon.com/iotevents/latest/apireference/API_Input.html\">inputs</a> associated with this key to the alarm.

        :param key: The key of this CreateAlarmModelRequest.
        :type key: str
        """
        if key is not None and len(key) > 128:
            raise ValueError("Invalid value for `key`, length must be less than or equal to `128`")
        if key is not None and len(key) < 1:
            raise ValueError("Invalid value for `key`, length must be greater than or equal to `1`")
        if key is not None and not re.search(r'^((`[\w\- ]+`)|([\w\-]+))(\.((`[\w- ]+`)|([\w\-]+)))*$', key):
            raise ValueError("Invalid value for `key`, must be a follow pattern or equal to `/^((`[\w\- ]+`)|([\w\-]+))(\.((`[\w- ]+`)|([\w\-]+)))*$/`")

        self._key = key

    @property
    def severity(self):
        """Gets the severity of this CreateAlarmModelRequest.

        A non-negative integer that reflects the severity level of the alarm.

        :return: The severity of this CreateAlarmModelRequest.
        :rtype: int
        """
        return self._severity

    @severity.setter
    def severity(self, severity):
        """Sets the severity of this CreateAlarmModelRequest.

        A non-negative integer that reflects the severity level of the alarm.

        :param severity: The severity of this CreateAlarmModelRequest.
        :type severity: int
        """
        if severity is not None and severity > 2147483647:
            raise ValueError("Invalid value for `severity`, must be a value less than or equal to `2147483647`")
        if severity is not None and severity < 0:
            raise ValueError("Invalid value for `severity`, must be a value greater than or equal to `0`")

        self._severity = severity

    @property
    def alarm_rule(self):
        """Gets the alarm_rule of this CreateAlarmModelRequest.


        :return: The alarm_rule of this CreateAlarmModelRequest.
        :rtype: CreateAlarmModelRequestAlarmRule
        """
        return self._alarm_rule

    @alarm_rule.setter
    def alarm_rule(self, alarm_rule):
        """Sets the alarm_rule of this CreateAlarmModelRequest.


        :param alarm_rule: The alarm_rule of this CreateAlarmModelRequest.
        :type alarm_rule: CreateAlarmModelRequestAlarmRule
        """
        if alarm_rule is None:
            raise ValueError("Invalid value for `alarm_rule`, must not be `None`")

        self._alarm_rule = alarm_rule

    @property
    def alarm_notification(self):
        """Gets the alarm_notification of this CreateAlarmModelRequest.


        :return: The alarm_notification of this CreateAlarmModelRequest.
        :rtype: CreateAlarmModelRequestAlarmNotification
        """
        return self._alarm_notification

    @alarm_notification.setter
    def alarm_notification(self, alarm_notification):
        """Sets the alarm_notification of this CreateAlarmModelRequest.


        :param alarm_notification: The alarm_notification of this CreateAlarmModelRequest.
        :type alarm_notification: CreateAlarmModelRequestAlarmNotification
        """

        self._alarm_notification = alarm_notification

    @property
    def alarm_event_actions(self):
        """Gets the alarm_event_actions of this CreateAlarmModelRequest.


        :return: The alarm_event_actions of this CreateAlarmModelRequest.
        :rtype: CreateAlarmModelRequestAlarmEventActions
        """
        return self._alarm_event_actions

    @alarm_event_actions.setter
    def alarm_event_actions(self, alarm_event_actions):
        """Sets the alarm_event_actions of this CreateAlarmModelRequest.


        :param alarm_event_actions: The alarm_event_actions of this CreateAlarmModelRequest.
        :type alarm_event_actions: CreateAlarmModelRequestAlarmEventActions
        """

        self._alarm_event_actions = alarm_event_actions

    @property
    def alarm_capabilities(self):
        """Gets the alarm_capabilities of this CreateAlarmModelRequest.


        :return: The alarm_capabilities of this CreateAlarmModelRequest.
        :rtype: CreateAlarmModelRequestAlarmCapabilities
        """
        return self._alarm_capabilities

    @alarm_capabilities.setter
    def alarm_capabilities(self, alarm_capabilities):
        """Sets the alarm_capabilities of this CreateAlarmModelRequest.


        :param alarm_capabilities: The alarm_capabilities of this CreateAlarmModelRequest.
        :type alarm_capabilities: CreateAlarmModelRequestAlarmCapabilities
        """

        self._alarm_capabilities = alarm_capabilities
