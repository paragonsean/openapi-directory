# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class AssetPropertyVariant(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, string_value: str=None, integer_value: str=None, double_value: str=None, boolean_value: str=None):
        """AssetPropertyVariant - a model defined in OpenAPI

        :param string_value: The string_value of this AssetPropertyVariant.
        :param integer_value: The integer_value of this AssetPropertyVariant.
        :param double_value: The double_value of this AssetPropertyVariant.
        :param boolean_value: The boolean_value of this AssetPropertyVariant.
        """
        self.openapi_types = {
            'string_value': str,
            'integer_value': str,
            'double_value': str,
            'boolean_value': str
        }

        self.attribute_map = {
            'string_value': 'stringValue',
            'integer_value': 'integerValue',
            'double_value': 'doubleValue',
            'boolean_value': 'booleanValue'
        }

        self._string_value = string_value
        self._integer_value = integer_value
        self._double_value = double_value
        self._boolean_value = boolean_value

    @classmethod
    def from_dict(cls, dikt: dict) -> 'AssetPropertyVariant':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The AssetPropertyVariant of this AssetPropertyVariant.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def string_value(self):
        """Gets the string_value of this AssetPropertyVariant.


        :return: The string_value of this AssetPropertyVariant.
        :rtype: str
        """
        return self._string_value

    @string_value.setter
    def string_value(self, string_value):
        """Sets the string_value of this AssetPropertyVariant.


        :param string_value: The string_value of this AssetPropertyVariant.
        :type string_value: str
        """

        self._string_value = string_value

    @property
    def integer_value(self):
        """Gets the integer_value of this AssetPropertyVariant.


        :return: The integer_value of this AssetPropertyVariant.
        :rtype: str
        """
        return self._integer_value

    @integer_value.setter
    def integer_value(self, integer_value):
        """Sets the integer_value of this AssetPropertyVariant.


        :param integer_value: The integer_value of this AssetPropertyVariant.
        :type integer_value: str
        """

        self._integer_value = integer_value

    @property
    def double_value(self):
        """Gets the double_value of this AssetPropertyVariant.


        :return: The double_value of this AssetPropertyVariant.
        :rtype: str
        """
        return self._double_value

    @double_value.setter
    def double_value(self, double_value):
        """Sets the double_value of this AssetPropertyVariant.


        :param double_value: The double_value of this AssetPropertyVariant.
        :type double_value: str
        """

        self._double_value = double_value

    @property
    def boolean_value(self):
        """Gets the boolean_value of this AssetPropertyVariant.


        :return: The boolean_value of this AssetPropertyVariant.
        :rtype: str
        """
        return self._boolean_value

    @boolean_value.setter
    def boolean_value(self, boolean_value):
        """Sets the boolean_value of this AssetPropertyVariant.


        :param boolean_value: The boolean_value of this AssetPropertyVariant.
        :type boolean_value: str
        """

        self._boolean_value = boolean_value
