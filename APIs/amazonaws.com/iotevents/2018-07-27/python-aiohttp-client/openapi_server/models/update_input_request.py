# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.create_input_request_input_definition import CreateInputRequestInputDefinition
from openapi_server import util


class UpdateInputRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, input_description: str=None, input_definition: CreateInputRequestInputDefinition=None):
        """UpdateInputRequest - a model defined in OpenAPI

        :param input_description: The input_description of this UpdateInputRequest.
        :param input_definition: The input_definition of this UpdateInputRequest.
        """
        self.openapi_types = {
            'input_description': str,
            'input_definition': CreateInputRequestInputDefinition
        }

        self.attribute_map = {
            'input_description': 'inputDescription',
            'input_definition': 'inputDefinition'
        }

        self._input_description = input_description
        self._input_definition = input_definition

    @classmethod
    def from_dict(cls, dikt: dict) -> 'UpdateInputRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The UpdateInput_request of this UpdateInputRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def input_description(self):
        """Gets the input_description of this UpdateInputRequest.

        A brief description of the input.

        :return: The input_description of this UpdateInputRequest.
        :rtype: str
        """
        return self._input_description

    @input_description.setter
    def input_description(self, input_description):
        """Sets the input_description of this UpdateInputRequest.

        A brief description of the input.

        :param input_description: The input_description of this UpdateInputRequest.
        :type input_description: str
        """
        if input_description is not None and len(input_description) > 128:
            raise ValueError("Invalid value for `input_description`, length must be less than or equal to `128`")

        self._input_description = input_description

    @property
    def input_definition(self):
        """Gets the input_definition of this UpdateInputRequest.


        :return: The input_definition of this UpdateInputRequest.
        :rtype: CreateInputRequestInputDefinition
        """
        return self._input_definition

    @input_definition.setter
    def input_definition(self, input_definition):
        """Sets the input_definition of this UpdateInputRequest.


        :param input_definition: The input_definition of this UpdateInputRequest.
        :type input_definition: CreateInputRequestInputDefinition
        """
        if input_definition is None:
            raise ValueError("Invalid value for `input_definition`, must not be `None`")

        self._input_definition = input_definition
