# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.analysis_result_level import AnalysisResultLevel
from openapi_server import util


class AnalysisResult(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, type: str=None, level: AnalysisResultLevel=None, message: str=None, locations: List=None):
        """AnalysisResult - a model defined in OpenAPI

        :param type: The type of this AnalysisResult.
        :param level: The level of this AnalysisResult.
        :param message: The message of this AnalysisResult.
        :param locations: The locations of this AnalysisResult.
        """
        self.openapi_types = {
            'type': str,
            'level': AnalysisResultLevel,
            'message': str,
            'locations': List
        }

        self.attribute_map = {
            'type': 'type',
            'level': 'level',
            'message': 'message',
            'locations': 'locations'
        }

        self._type = type
        self._level = level
        self._message = message
        self._locations = locations

    @classmethod
    def from_dict(cls, dikt: dict) -> 'AnalysisResult':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The AnalysisResult of this AnalysisResult.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def type(self):
        """Gets the type of this AnalysisResult.


        :return: The type of this AnalysisResult.
        :rtype: str
        """
        return self._type

    @type.setter
    def type(self, type):
        """Sets the type of this AnalysisResult.


        :param type: The type of this AnalysisResult.
        :type type: str
        """

        self._type = type

    @property
    def level(self):
        """Gets the level of this AnalysisResult.


        :return: The level of this AnalysisResult.
        :rtype: AnalysisResultLevel
        """
        return self._level

    @level.setter
    def level(self, level):
        """Sets the level of this AnalysisResult.


        :param level: The level of this AnalysisResult.
        :type level: AnalysisResultLevel
        """

        self._level = level

    @property
    def message(self):
        """Gets the message of this AnalysisResult.


        :return: The message of this AnalysisResult.
        :rtype: str
        """
        return self._message

    @message.setter
    def message(self, message):
        """Sets the message of this AnalysisResult.


        :param message: The message of this AnalysisResult.
        :type message: str
        """

        self._message = message

    @property
    def locations(self):
        """Gets the locations of this AnalysisResult.


        :return: The locations of this AnalysisResult.
        :rtype: List
        """
        return self._locations

    @locations.setter
    def locations(self, locations):
        """Sets the locations of this AnalysisResult.


        :param locations: The locations of this AnalysisResult.
        :type locations: List
        """

        self._locations = locations
