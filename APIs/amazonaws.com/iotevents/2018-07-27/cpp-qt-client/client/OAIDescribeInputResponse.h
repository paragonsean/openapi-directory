/**
 * AWS IoT Events
 * AWS IoT Events monitors your equipment or device fleets for failures or changes in operation, and triggers actions when such events occur. You can use AWS IoT Events API operations to create, read, update, and delete inputs and detector models, and to list their versions.
 *
 * The version of the OpenAPI document: 2018-07-27
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIDescribeInputResponse.h
 *
 * 
 */

#ifndef OAIDescribeInputResponse_H
#define OAIDescribeInputResponse_H

#include <QJsonObject>

#include "OAIDescribeInputResponse_input.h"

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIDescribeInputResponse_input;

class OAIDescribeInputResponse : public OAIObject {
public:
    OAIDescribeInputResponse();
    OAIDescribeInputResponse(QString json);
    ~OAIDescribeInputResponse() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAIDescribeInputResponse_input getInput() const;
    void setInput(const OAIDescribeInputResponse_input &input);
    bool is_input_Set() const;
    bool is_input_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAIDescribeInputResponse_input m_input;
    bool m_input_isSet;
    bool m_input_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIDescribeInputResponse)

#endif // OAIDescribeInputResponse_H
