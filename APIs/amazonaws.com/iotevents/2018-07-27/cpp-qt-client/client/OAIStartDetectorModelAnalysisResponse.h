/**
 * AWS IoT Events
 * AWS IoT Events monitors your equipment or device fleets for failures or changes in operation, and triggers actions when such events occur. You can use AWS IoT Events API operations to create, read, update, and delete inputs and detector models, and to list their versions.
 *
 * The version of the OpenAPI document: 2018-07-27
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIStartDetectorModelAnalysisResponse.h
 *
 * 
 */

#ifndef OAIStartDetectorModelAnalysisResponse_H
#define OAIStartDetectorModelAnalysisResponse_H

#include <QJsonObject>

#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIStartDetectorModelAnalysisResponse : public OAIObject {
public:
    OAIStartDetectorModelAnalysisResponse();
    OAIStartDetectorModelAnalysisResponse(QString json);
    ~OAIStartDetectorModelAnalysisResponse() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getAnalysisId() const;
    void setAnalysisId(const QString &analysis_id);
    bool is_analysis_id_Set() const;
    bool is_analysis_id_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_analysis_id;
    bool m_analysis_id_isSet;
    bool m_analysis_id_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIStartDetectorModelAnalysisResponse)

#endif // OAIStartDetectorModelAnalysisResponse_H
