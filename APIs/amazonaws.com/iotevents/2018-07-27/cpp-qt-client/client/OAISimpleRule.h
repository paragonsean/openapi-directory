/**
 * AWS IoT Events
 * AWS IoT Events monitors your equipment or device fleets for failures or changes in operation, and triggers actions when such events occur. You can use AWS IoT Events API operations to create, read, update, and delete inputs and detector models, and to list their versions.
 *
 * The version of the OpenAPI document: 2018-07-27
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAISimpleRule.h
 *
 * A rule that compares an input property value to a threshold value with a comparison operator.
 */

#ifndef OAISimpleRule_H
#define OAISimpleRule_H

#include <QJsonObject>

#include "OAIComparisonOperator.h"
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAISimpleRule : public OAIObject {
public:
    OAISimpleRule();
    OAISimpleRule(QString json);
    ~OAISimpleRule() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getInputProperty() const;
    void setInputProperty(const QString &input_property);
    bool is_input_property_Set() const;
    bool is_input_property_Valid() const;

    OAIComparisonOperator getComparisonOperator() const;
    void setComparisonOperator(const OAIComparisonOperator &comparison_operator);
    bool is_comparison_operator_Set() const;
    bool is_comparison_operator_Valid() const;

    QString getThreshold() const;
    void setThreshold(const QString &threshold);
    bool is_threshold_Set() const;
    bool is_threshold_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_input_property;
    bool m_input_property_isSet;
    bool m_input_property_isValid;

    OAIComparisonOperator m_comparison_operator;
    bool m_comparison_operator_isSet;
    bool m_comparison_operator_isValid;

    QString m_threshold;
    bool m_threshold_isSet;
    bool m_threshold_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAISimpleRule)

#endif // OAISimpleRule_H
