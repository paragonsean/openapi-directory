/**
 * AWS IoT Events
 * AWS IoT Events monitors your equipment or device fleets for failures or changes in operation, and triggers actions when such events occur. You can use AWS IoT Events API operations to create, read, update, and delete inputs and detector models, and to list their versions.
 *
 * The version of the OpenAPI document: 2018-07-27
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIInitializationConfiguration.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIInitializationConfiguration::OAIInitializationConfiguration(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIInitializationConfiguration::OAIInitializationConfiguration() {
    this->initializeModel();
}

OAIInitializationConfiguration::~OAIInitializationConfiguration() {}

void OAIInitializationConfiguration::initializeModel() {

    m_disabled_on_initialization_isSet = false;
    m_disabled_on_initialization_isValid = false;
}

void OAIInitializationConfiguration::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIInitializationConfiguration::fromJsonObject(QJsonObject json) {

    m_disabled_on_initialization_isValid = ::OpenAPI::fromJsonValue(m_disabled_on_initialization, json[QString("disabledOnInitialization")]);
    m_disabled_on_initialization_isSet = !json[QString("disabledOnInitialization")].isNull() && m_disabled_on_initialization_isValid;
}

QString OAIInitializationConfiguration::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIInitializationConfiguration::asJsonObject() const {
    QJsonObject obj;
    if (m_disabled_on_initialization_isSet) {
        obj.insert(QString("disabledOnInitialization"), ::OpenAPI::toJsonValue(m_disabled_on_initialization));
    }
    return obj;
}

bool OAIInitializationConfiguration::getDisabledOnInitialization() const {
    return m_disabled_on_initialization;
}
void OAIInitializationConfiguration::setDisabledOnInitialization(const bool &disabled_on_initialization) {
    m_disabled_on_initialization = disabled_on_initialization;
    m_disabled_on_initialization_isSet = true;
}

bool OAIInitializationConfiguration::is_disabled_on_initialization_Set() const{
    return m_disabled_on_initialization_isSet;
}

bool OAIInitializationConfiguration::is_disabled_on_initialization_Valid() const{
    return m_disabled_on_initialization_isValid;
}

bool OAIInitializationConfiguration::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_disabled_on_initialization_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIInitializationConfiguration::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_disabled_on_initialization_isValid && true;
}

} // namespace OpenAPI
