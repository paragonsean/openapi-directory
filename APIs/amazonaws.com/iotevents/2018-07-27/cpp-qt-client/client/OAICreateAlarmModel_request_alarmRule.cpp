/**
 * AWS IoT Events
 * AWS IoT Events monitors your equipment or device fleets for failures or changes in operation, and triggers actions when such events occur. You can use AWS IoT Events API operations to create, read, update, and delete inputs and detector models, and to list their versions.
 *
 * The version of the OpenAPI document: 2018-07-27
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAICreateAlarmModel_request_alarmRule.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAICreateAlarmModel_request_alarmRule::OAICreateAlarmModel_request_alarmRule(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAICreateAlarmModel_request_alarmRule::OAICreateAlarmModel_request_alarmRule() {
    this->initializeModel();
}

OAICreateAlarmModel_request_alarmRule::~OAICreateAlarmModel_request_alarmRule() {}

void OAICreateAlarmModel_request_alarmRule::initializeModel() {

    m_simple_rule_isSet = false;
    m_simple_rule_isValid = false;
}

void OAICreateAlarmModel_request_alarmRule::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAICreateAlarmModel_request_alarmRule::fromJsonObject(QJsonObject json) {

    m_simple_rule_isValid = ::OpenAPI::fromJsonValue(m_simple_rule, json[QString("simpleRule")]);
    m_simple_rule_isSet = !json[QString("simpleRule")].isNull() && m_simple_rule_isValid;
}

QString OAICreateAlarmModel_request_alarmRule::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAICreateAlarmModel_request_alarmRule::asJsonObject() const {
    QJsonObject obj;
    if (m_simple_rule.isSet()) {
        obj.insert(QString("simpleRule"), ::OpenAPI::toJsonValue(m_simple_rule));
    }
    return obj;
}

OAICreateAlarmModel_request_alarmRule_simpleRule OAICreateAlarmModel_request_alarmRule::getSimpleRule() const {
    return m_simple_rule;
}
void OAICreateAlarmModel_request_alarmRule::setSimpleRule(const OAICreateAlarmModel_request_alarmRule_simpleRule &simple_rule) {
    m_simple_rule = simple_rule;
    m_simple_rule_isSet = true;
}

bool OAICreateAlarmModel_request_alarmRule::is_simple_rule_Set() const{
    return m_simple_rule_isSet;
}

bool OAICreateAlarmModel_request_alarmRule::is_simple_rule_Valid() const{
    return m_simple_rule_isValid;
}

bool OAICreateAlarmModel_request_alarmRule::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_simple_rule.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAICreateAlarmModel_request_alarmRule::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
