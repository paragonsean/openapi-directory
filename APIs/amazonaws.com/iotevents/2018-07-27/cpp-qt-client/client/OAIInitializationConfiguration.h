/**
 * AWS IoT Events
 * AWS IoT Events monitors your equipment or device fleets for failures or changes in operation, and triggers actions when such events occur. You can use AWS IoT Events API operations to create, read, update, and delete inputs and detector models, and to list their versions.
 *
 * The version of the OpenAPI document: 2018-07-27
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIInitializationConfiguration.h
 *
 * Specifies the default alarm state. The configuration applies to all alarms that were created based on this alarm model.
 */

#ifndef OAIInitializationConfiguration_H
#define OAIInitializationConfiguration_H

#include <QJsonObject>


#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIInitializationConfiguration : public OAIObject {
public:
    OAIInitializationConfiguration();
    OAIInitializationConfiguration(QString json);
    ~OAIInitializationConfiguration() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    bool getDisabledOnInitialization() const;
    void setDisabledOnInitialization(const bool &disabled_on_initialization);
    bool is_disabled_on_initialization_Set() const;
    bool is_disabled_on_initialization_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    bool m_disabled_on_initialization;
    bool m_disabled_on_initialization_isSet;
    bool m_disabled_on_initialization_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIInitializationConfiguration)

#endif // OAIInitializationConfiguration_H
