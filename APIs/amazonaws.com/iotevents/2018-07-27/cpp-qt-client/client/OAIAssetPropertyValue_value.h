/**
 * AWS IoT Events
 * AWS IoT Events monitors your equipment or device fleets for failures or changes in operation, and triggers actions when such events occur. You can use AWS IoT Events API operations to create, read, update, and delete inputs and detector models, and to list their versions.
 *
 * The version of the OpenAPI document: 2018-07-27
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIAssetPropertyValue_value.h
 *
 * 
 */

#ifndef OAIAssetPropertyValue_value_H
#define OAIAssetPropertyValue_value_H

#include <QJsonObject>

#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIAssetPropertyValue_value : public OAIObject {
public:
    OAIAssetPropertyValue_value();
    OAIAssetPropertyValue_value(QString json);
    ~OAIAssetPropertyValue_value() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getStringValue() const;
    void setStringValue(const QString &string_value);
    bool is_string_value_Set() const;
    bool is_string_value_Valid() const;

    QString getIntegerValue() const;
    void setIntegerValue(const QString &integer_value);
    bool is_integer_value_Set() const;
    bool is_integer_value_Valid() const;

    QString getDoubleValue() const;
    void setDoubleValue(const QString &double_value);
    bool is_double_value_Set() const;
    bool is_double_value_Valid() const;

    QString getBooleanValue() const;
    void setBooleanValue(const QString &boolean_value);
    bool is_boolean_value_Set() const;
    bool is_boolean_value_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_string_value;
    bool m_string_value_isSet;
    bool m_string_value_isValid;

    QString m_integer_value;
    bool m_integer_value_isSet;
    bool m_integer_value_isValid;

    QString m_double_value;
    bool m_double_value_isSet;
    bool m_double_value_isValid;

    QString m_boolean_value;
    bool m_boolean_value_isSet;
    bool m_boolean_value_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIAssetPropertyValue_value)

#endif // OAIAssetPropertyValue_value_H
