/**
 * AWS IoT Events
 * AWS IoT Events monitors your equipment or device fleets for failures or changes in operation, and triggers actions when such events occur. You can use AWS IoT Events API operations to create, read, update, and delete inputs and detector models, and to list their versions.
 *
 * The version of the OpenAPI document: 2018-07-27
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIAnalysisResultLevel.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIAnalysisResultLevel::OAIAnalysisResultLevel(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIAnalysisResultLevel::OAIAnalysisResultLevel() {
    this->initializeModel();
}

OAIAnalysisResultLevel::~OAIAnalysisResultLevel() {}

void OAIAnalysisResultLevel::initializeModel() {

    m_value_isSet = false;
    m_value_isValid = false;
    m_value = eOAIAnalysisResultLevel::INVALID_VALUE_OPENAPI_GENERATED;
}

void OAIAnalysisResultLevel::fromJson(QString jsonString) {
    
    if ( jsonString.compare("INFO", Qt::CaseInsensitive) == 0) {
        m_value = eOAIAnalysisResultLevel::INFO;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("WARNING", Qt::CaseInsensitive) == 0) {
        m_value = eOAIAnalysisResultLevel::WARNING;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("ERROR", Qt::CaseInsensitive) == 0) {
        m_value = eOAIAnalysisResultLevel::ERROR;
        m_value_isSet = m_value_isValid = true;
    }
}

void OAIAnalysisResultLevel::fromJsonValue(QJsonValue json) {
fromJson(json.toString());
}

QString OAIAnalysisResultLevel::asJson() const {
    
    QString val;
    switch (m_value){
        case eOAIAnalysisResultLevel::INFO:
            val = "INFO";
            break;
        case eOAIAnalysisResultLevel::WARNING:
            val = "WARNING";
            break;
        case eOAIAnalysisResultLevel::ERROR:
            val = "ERROR";
            break;
        default:
            break;
    }
    return val;
}

QJsonValue OAIAnalysisResultLevel::asJsonValue() const {
    
    return QJsonValue(asJson());
}


OAIAnalysisResultLevel::eOAIAnalysisResultLevel OAIAnalysisResultLevel::getValue() const {
    return m_value;
}

void OAIAnalysisResultLevel::setValue(const OAIAnalysisResultLevel::eOAIAnalysisResultLevel& value){
    m_value = value;
    m_value_isSet = true;
}
bool OAIAnalysisResultLevel::isSet() const {
    
    return m_value_isSet;
}

bool OAIAnalysisResultLevel::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_value_isValid;
}

} // namespace OpenAPI
