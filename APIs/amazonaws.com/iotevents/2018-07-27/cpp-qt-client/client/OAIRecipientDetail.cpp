/**
 * AWS IoT Events
 * AWS IoT Events monitors your equipment or device fleets for failures or changes in operation, and triggers actions when such events occur. You can use AWS IoT Events API operations to create, read, update, and delete inputs and detector models, and to list their versions.
 *
 * The version of the OpenAPI document: 2018-07-27
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIRecipientDetail.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIRecipientDetail::OAIRecipientDetail(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIRecipientDetail::OAIRecipientDetail() {
    this->initializeModel();
}

OAIRecipientDetail::~OAIRecipientDetail() {}

void OAIRecipientDetail::initializeModel() {

    m_sso_identity_isSet = false;
    m_sso_identity_isValid = false;
}

void OAIRecipientDetail::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIRecipientDetail::fromJsonObject(QJsonObject json) {

    m_sso_identity_isValid = ::OpenAPI::fromJsonValue(m_sso_identity, json[QString("ssoIdentity")]);
    m_sso_identity_isSet = !json[QString("ssoIdentity")].isNull() && m_sso_identity_isValid;
}

QString OAIRecipientDetail::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIRecipientDetail::asJsonObject() const {
    QJsonObject obj;
    if (m_sso_identity.isSet()) {
        obj.insert(QString("ssoIdentity"), ::OpenAPI::toJsonValue(m_sso_identity));
    }
    return obj;
}

OAIRecipientDetail_ssoIdentity OAIRecipientDetail::getSsoIdentity() const {
    return m_sso_identity;
}
void OAIRecipientDetail::setSsoIdentity(const OAIRecipientDetail_ssoIdentity &sso_identity) {
    m_sso_identity = sso_identity;
    m_sso_identity_isSet = true;
}

bool OAIRecipientDetail::is_sso_identity_Set() const{
    return m_sso_identity_isSet;
}

bool OAIRecipientDetail::is_sso_identity_Valid() const{
    return m_sso_identity_isValid;
}

bool OAIRecipientDetail::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_sso_identity.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIRecipientDetail::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
