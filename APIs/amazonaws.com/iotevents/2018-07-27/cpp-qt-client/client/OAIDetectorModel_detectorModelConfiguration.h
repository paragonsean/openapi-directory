/**
 * AWS IoT Events
 * AWS IoT Events monitors your equipment or device fleets for failures or changes in operation, and triggers actions when such events occur. You can use AWS IoT Events API operations to create, read, update, and delete inputs and detector models, and to list their versions.
 *
 * The version of the OpenAPI document: 2018-07-27
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIDetectorModel_detectorModelConfiguration.h
 *
 * 
 */

#ifndef OAIDetectorModel_detectorModelConfiguration_H
#define OAIDetectorModel_detectorModelConfiguration_H

#include <QJsonObject>

#include "OAIDetectorModelVersionStatus.h"
#include "OAIEvaluationMethod.h"
#include <QDateTime>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIDetectorModel_detectorModelConfiguration : public OAIObject {
public:
    OAIDetectorModel_detectorModelConfiguration();
    OAIDetectorModel_detectorModelConfiguration(QString json);
    ~OAIDetectorModel_detectorModelConfiguration() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getDetectorModelName() const;
    void setDetectorModelName(const QString &detector_model_name);
    bool is_detector_model_name_Set() const;
    bool is_detector_model_name_Valid() const;

    QString getDetectorModelVersion() const;
    void setDetectorModelVersion(const QString &detector_model_version);
    bool is_detector_model_version_Set() const;
    bool is_detector_model_version_Valid() const;

    QString getDetectorModelDescription() const;
    void setDetectorModelDescription(const QString &detector_model_description);
    bool is_detector_model_description_Set() const;
    bool is_detector_model_description_Valid() const;

    QString getDetectorModelArn() const;
    void setDetectorModelArn(const QString &detector_model_arn);
    bool is_detector_model_arn_Set() const;
    bool is_detector_model_arn_Valid() const;

    QString getRoleArn() const;
    void setRoleArn(const QString &role_arn);
    bool is_role_arn_Set() const;
    bool is_role_arn_Valid() const;

    QDateTime getCreationTime() const;
    void setCreationTime(const QDateTime &creation_time);
    bool is_creation_time_Set() const;
    bool is_creation_time_Valid() const;

    QDateTime getLastUpdateTime() const;
    void setLastUpdateTime(const QDateTime &last_update_time);
    bool is_last_update_time_Set() const;
    bool is_last_update_time_Valid() const;

    OAIDetectorModelVersionStatus getStatus() const;
    void setStatus(const OAIDetectorModelVersionStatus &status);
    bool is_status_Set() const;
    bool is_status_Valid() const;

    QString getKey() const;
    void setKey(const QString &key);
    bool is_key_Set() const;
    bool is_key_Valid() const;

    OAIEvaluationMethod getEvaluationMethod() const;
    void setEvaluationMethod(const OAIEvaluationMethod &evaluation_method);
    bool is_evaluation_method_Set() const;
    bool is_evaluation_method_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_detector_model_name;
    bool m_detector_model_name_isSet;
    bool m_detector_model_name_isValid;

    QString m_detector_model_version;
    bool m_detector_model_version_isSet;
    bool m_detector_model_version_isValid;

    QString m_detector_model_description;
    bool m_detector_model_description_isSet;
    bool m_detector_model_description_isValid;

    QString m_detector_model_arn;
    bool m_detector_model_arn_isSet;
    bool m_detector_model_arn_isValid;

    QString m_role_arn;
    bool m_role_arn_isSet;
    bool m_role_arn_isValid;

    QDateTime m_creation_time;
    bool m_creation_time_isSet;
    bool m_creation_time_isValid;

    QDateTime m_last_update_time;
    bool m_last_update_time_isSet;
    bool m_last_update_time_isValid;

    OAIDetectorModelVersionStatus m_status;
    bool m_status_isSet;
    bool m_status_isValid;

    QString m_key;
    bool m_key_isSet;
    bool m_key_isValid;

    OAIEvaluationMethod m_evaluation_method;
    bool m_evaluation_method_isSet;
    bool m_evaluation_method_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIDetectorModel_detectorModelConfiguration)

#endif // OAIDetectorModel_detectorModelConfiguration_H
