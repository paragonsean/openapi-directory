/**
 * AWS IoT Events
 * AWS IoT Events monitors your equipment or device fleets for failures or changes in operation, and triggers actions when such events occur. You can use AWS IoT Events API operations to create, read, update, and delete inputs and detector models, and to list their versions.
 *
 * The version of the OpenAPI document: 2018-07-27
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIListInputRoutings_request_inputIdentifier.h
 *
 *  The identifer of the input. 
 */

#ifndef OAIListInputRoutings_request_inputIdentifier_H
#define OAIListInputRoutings_request_inputIdentifier_H

#include <QJsonObject>

#include "OAIListInputRoutings_request_inputIdentifier_iotEventsInputIdentifier.h"
#include "OAIListInputRoutings_request_inputIdentifier_iotSiteWiseInputIdentifier.h"

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIListInputRoutings_request_inputIdentifier_iotEventsInputIdentifier;
class OAIListInputRoutings_request_inputIdentifier_iotSiteWiseInputIdentifier;

class OAIListInputRoutings_request_inputIdentifier : public OAIObject {
public:
    OAIListInputRoutings_request_inputIdentifier();
    OAIListInputRoutings_request_inputIdentifier(QString json);
    ~OAIListInputRoutings_request_inputIdentifier() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAIListInputRoutings_request_inputIdentifier_iotEventsInputIdentifier getIotEventsInputIdentifier() const;
    void setIotEventsInputIdentifier(const OAIListInputRoutings_request_inputIdentifier_iotEventsInputIdentifier &iot_events_input_identifier);
    bool is_iot_events_input_identifier_Set() const;
    bool is_iot_events_input_identifier_Valid() const;

    OAIListInputRoutings_request_inputIdentifier_iotSiteWiseInputIdentifier getIotSiteWiseInputIdentifier() const;
    void setIotSiteWiseInputIdentifier(const OAIListInputRoutings_request_inputIdentifier_iotSiteWiseInputIdentifier &iot_site_wise_input_identifier);
    bool is_iot_site_wise_input_identifier_Set() const;
    bool is_iot_site_wise_input_identifier_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAIListInputRoutings_request_inputIdentifier_iotEventsInputIdentifier m_iot_events_input_identifier;
    bool m_iot_events_input_identifier_isSet;
    bool m_iot_events_input_identifier_isValid;

    OAIListInputRoutings_request_inputIdentifier_iotSiteWiseInputIdentifier m_iot_site_wise_input_identifier;
    bool m_iot_site_wise_input_identifier_isSet;
    bool m_iot_site_wise_input_identifier_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIListInputRoutings_request_inputIdentifier)

#endif // OAIListInputRoutings_request_inputIdentifier_H
