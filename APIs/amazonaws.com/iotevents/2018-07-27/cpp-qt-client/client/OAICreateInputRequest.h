/**
 * AWS IoT Events
 * AWS IoT Events monitors your equipment or device fleets for failures or changes in operation, and triggers actions when such events occur. You can use AWS IoT Events API operations to create, read, update, and delete inputs and detector models, and to list their versions.
 *
 * The version of the OpenAPI document: 2018-07-27
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAICreateInputRequest.h
 *
 * 
 */

#ifndef OAICreateInputRequest_H
#define OAICreateInputRequest_H

#include <QJsonObject>

#include "OAICreateInputRequest_inputDefinition.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAICreateInputRequest_inputDefinition;

class OAICreateInputRequest : public OAIObject {
public:
    OAICreateInputRequest();
    OAICreateInputRequest(QString json);
    ~OAICreateInputRequest() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getInputName() const;
    void setInputName(const QString &input_name);
    bool is_input_name_Set() const;
    bool is_input_name_Valid() const;

    QString getInputDescription() const;
    void setInputDescription(const QString &input_description);
    bool is_input_description_Set() const;
    bool is_input_description_Valid() const;

    OAICreateInputRequest_inputDefinition getInputDefinition() const;
    void setInputDefinition(const OAICreateInputRequest_inputDefinition &input_definition);
    bool is_input_definition_Set() const;
    bool is_input_definition_Valid() const;

    QList getTags() const;
    void setTags(const QList &tags);
    bool is_tags_Set() const;
    bool is_tags_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_input_name;
    bool m_input_name_isSet;
    bool m_input_name_isValid;

    QString m_input_description;
    bool m_input_description_isSet;
    bool m_input_description_isValid;

    OAICreateInputRequest_inputDefinition m_input_definition;
    bool m_input_definition_isSet;
    bool m_input_definition_isValid;

    QList m_tags;
    bool m_tags_isSet;
    bool m_tags_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAICreateInputRequest)

#endif // OAICreateInputRequest_H
