/**
 * AWS IoT Events
 * AWS IoT Events monitors your equipment or device fleets for failures or changes in operation, and triggers actions when such events occur. You can use AWS IoT Events API operations to create, read, update, and delete inputs and detector models, and to list their versions.
 *
 * The version of the OpenAPI document: 2018-07-27
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIListInputRoutings_request.h
 *
 * 
 */

#ifndef OAIListInputRoutings_request_H
#define OAIListInputRoutings_request_H

#include <QJsonObject>

#include "OAIListInputRoutings_request_inputIdentifier.h"
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIListInputRoutings_request_inputIdentifier;

class OAIListInputRoutings_request : public OAIObject {
public:
    OAIListInputRoutings_request();
    OAIListInputRoutings_request(QString json);
    ~OAIListInputRoutings_request() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAIListInputRoutings_request_inputIdentifier getInputIdentifier() const;
    void setInputIdentifier(const OAIListInputRoutings_request_inputIdentifier &input_identifier);
    bool is_input_identifier_Set() const;
    bool is_input_identifier_Valid() const;

    qint32 getMaxResults() const;
    void setMaxResults(const qint32 &max_results);
    bool is_max_results_Set() const;
    bool is_max_results_Valid() const;

    QString getNextToken() const;
    void setNextToken(const QString &next_token);
    bool is_next_token_Set() const;
    bool is_next_token_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAIListInputRoutings_request_inputIdentifier m_input_identifier;
    bool m_input_identifier_isSet;
    bool m_input_identifier_isValid;

    qint32 m_max_results;
    bool m_max_results_isSet;
    bool m_max_results_isValid;

    QString m_next_token;
    bool m_next_token_isSet;
    bool m_next_token_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIListInputRoutings_request)

#endif // OAIListInputRoutings_request_H
