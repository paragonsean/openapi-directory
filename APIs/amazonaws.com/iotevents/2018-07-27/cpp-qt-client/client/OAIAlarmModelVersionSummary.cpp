/**
 * AWS IoT Events
 * AWS IoT Events monitors your equipment or device fleets for failures or changes in operation, and triggers actions when such events occur. You can use AWS IoT Events API operations to create, read, update, and delete inputs and detector models, and to list their versions.
 *
 * The version of the OpenAPI document: 2018-07-27
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIAlarmModelVersionSummary.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIAlarmModelVersionSummary::OAIAlarmModelVersionSummary(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIAlarmModelVersionSummary::OAIAlarmModelVersionSummary() {
    this->initializeModel();
}

OAIAlarmModelVersionSummary::~OAIAlarmModelVersionSummary() {}

void OAIAlarmModelVersionSummary::initializeModel() {

    m_alarm_model_name_isSet = false;
    m_alarm_model_name_isValid = false;

    m_alarm_model_arn_isSet = false;
    m_alarm_model_arn_isValid = false;

    m_alarm_model_version_isSet = false;
    m_alarm_model_version_isValid = false;

    m_role_arn_isSet = false;
    m_role_arn_isValid = false;

    m_creation_time_isSet = false;
    m_creation_time_isValid = false;

    m_last_update_time_isSet = false;
    m_last_update_time_isValid = false;

    m_status_isSet = false;
    m_status_isValid = false;

    m_status_message_isSet = false;
    m_status_message_isValid = false;
}

void OAIAlarmModelVersionSummary::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIAlarmModelVersionSummary::fromJsonObject(QJsonObject json) {

    m_alarm_model_name_isValid = ::OpenAPI::fromJsonValue(m_alarm_model_name, json[QString("alarmModelName")]);
    m_alarm_model_name_isSet = !json[QString("alarmModelName")].isNull() && m_alarm_model_name_isValid;

    m_alarm_model_arn_isValid = ::OpenAPI::fromJsonValue(m_alarm_model_arn, json[QString("alarmModelArn")]);
    m_alarm_model_arn_isSet = !json[QString("alarmModelArn")].isNull() && m_alarm_model_arn_isValid;

    m_alarm_model_version_isValid = ::OpenAPI::fromJsonValue(m_alarm_model_version, json[QString("alarmModelVersion")]);
    m_alarm_model_version_isSet = !json[QString("alarmModelVersion")].isNull() && m_alarm_model_version_isValid;

    m_role_arn_isValid = ::OpenAPI::fromJsonValue(m_role_arn, json[QString("roleArn")]);
    m_role_arn_isSet = !json[QString("roleArn")].isNull() && m_role_arn_isValid;

    m_creation_time_isValid = ::OpenAPI::fromJsonValue(m_creation_time, json[QString("creationTime")]);
    m_creation_time_isSet = !json[QString("creationTime")].isNull() && m_creation_time_isValid;

    m_last_update_time_isValid = ::OpenAPI::fromJsonValue(m_last_update_time, json[QString("lastUpdateTime")]);
    m_last_update_time_isSet = !json[QString("lastUpdateTime")].isNull() && m_last_update_time_isValid;

    m_status_isValid = ::OpenAPI::fromJsonValue(m_status, json[QString("status")]);
    m_status_isSet = !json[QString("status")].isNull() && m_status_isValid;

    m_status_message_isValid = ::OpenAPI::fromJsonValue(m_status_message, json[QString("statusMessage")]);
    m_status_message_isSet = !json[QString("statusMessage")].isNull() && m_status_message_isValid;
}

QString OAIAlarmModelVersionSummary::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIAlarmModelVersionSummary::asJsonObject() const {
    QJsonObject obj;
    if (m_alarm_model_name_isSet) {
        obj.insert(QString("alarmModelName"), ::OpenAPI::toJsonValue(m_alarm_model_name));
    }
    if (m_alarm_model_arn_isSet) {
        obj.insert(QString("alarmModelArn"), ::OpenAPI::toJsonValue(m_alarm_model_arn));
    }
    if (m_alarm_model_version_isSet) {
        obj.insert(QString("alarmModelVersion"), ::OpenAPI::toJsonValue(m_alarm_model_version));
    }
    if (m_role_arn_isSet) {
        obj.insert(QString("roleArn"), ::OpenAPI::toJsonValue(m_role_arn));
    }
    if (m_creation_time_isSet) {
        obj.insert(QString("creationTime"), ::OpenAPI::toJsonValue(m_creation_time));
    }
    if (m_last_update_time_isSet) {
        obj.insert(QString("lastUpdateTime"), ::OpenAPI::toJsonValue(m_last_update_time));
    }
    if (m_status.isSet()) {
        obj.insert(QString("status"), ::OpenAPI::toJsonValue(m_status));
    }
    if (m_status_message_isSet) {
        obj.insert(QString("statusMessage"), ::OpenAPI::toJsonValue(m_status_message));
    }
    return obj;
}

QString OAIAlarmModelVersionSummary::getAlarmModelName() const {
    return m_alarm_model_name;
}
void OAIAlarmModelVersionSummary::setAlarmModelName(const QString &alarm_model_name) {
    m_alarm_model_name = alarm_model_name;
    m_alarm_model_name_isSet = true;
}

bool OAIAlarmModelVersionSummary::is_alarm_model_name_Set() const{
    return m_alarm_model_name_isSet;
}

bool OAIAlarmModelVersionSummary::is_alarm_model_name_Valid() const{
    return m_alarm_model_name_isValid;
}

QString OAIAlarmModelVersionSummary::getAlarmModelArn() const {
    return m_alarm_model_arn;
}
void OAIAlarmModelVersionSummary::setAlarmModelArn(const QString &alarm_model_arn) {
    m_alarm_model_arn = alarm_model_arn;
    m_alarm_model_arn_isSet = true;
}

bool OAIAlarmModelVersionSummary::is_alarm_model_arn_Set() const{
    return m_alarm_model_arn_isSet;
}

bool OAIAlarmModelVersionSummary::is_alarm_model_arn_Valid() const{
    return m_alarm_model_arn_isValid;
}

QString OAIAlarmModelVersionSummary::getAlarmModelVersion() const {
    return m_alarm_model_version;
}
void OAIAlarmModelVersionSummary::setAlarmModelVersion(const QString &alarm_model_version) {
    m_alarm_model_version = alarm_model_version;
    m_alarm_model_version_isSet = true;
}

bool OAIAlarmModelVersionSummary::is_alarm_model_version_Set() const{
    return m_alarm_model_version_isSet;
}

bool OAIAlarmModelVersionSummary::is_alarm_model_version_Valid() const{
    return m_alarm_model_version_isValid;
}

QString OAIAlarmModelVersionSummary::getRoleArn() const {
    return m_role_arn;
}
void OAIAlarmModelVersionSummary::setRoleArn(const QString &role_arn) {
    m_role_arn = role_arn;
    m_role_arn_isSet = true;
}

bool OAIAlarmModelVersionSummary::is_role_arn_Set() const{
    return m_role_arn_isSet;
}

bool OAIAlarmModelVersionSummary::is_role_arn_Valid() const{
    return m_role_arn_isValid;
}

QDateTime OAIAlarmModelVersionSummary::getCreationTime() const {
    return m_creation_time;
}
void OAIAlarmModelVersionSummary::setCreationTime(const QDateTime &creation_time) {
    m_creation_time = creation_time;
    m_creation_time_isSet = true;
}

bool OAIAlarmModelVersionSummary::is_creation_time_Set() const{
    return m_creation_time_isSet;
}

bool OAIAlarmModelVersionSummary::is_creation_time_Valid() const{
    return m_creation_time_isValid;
}

QDateTime OAIAlarmModelVersionSummary::getLastUpdateTime() const {
    return m_last_update_time;
}
void OAIAlarmModelVersionSummary::setLastUpdateTime(const QDateTime &last_update_time) {
    m_last_update_time = last_update_time;
    m_last_update_time_isSet = true;
}

bool OAIAlarmModelVersionSummary::is_last_update_time_Set() const{
    return m_last_update_time_isSet;
}

bool OAIAlarmModelVersionSummary::is_last_update_time_Valid() const{
    return m_last_update_time_isValid;
}

OAIAlarmModelVersionStatus OAIAlarmModelVersionSummary::getStatus() const {
    return m_status;
}
void OAIAlarmModelVersionSummary::setStatus(const OAIAlarmModelVersionStatus &status) {
    m_status = status;
    m_status_isSet = true;
}

bool OAIAlarmModelVersionSummary::is_status_Set() const{
    return m_status_isSet;
}

bool OAIAlarmModelVersionSummary::is_status_Valid() const{
    return m_status_isValid;
}

QString OAIAlarmModelVersionSummary::getStatusMessage() const {
    return m_status_message;
}
void OAIAlarmModelVersionSummary::setStatusMessage(const QString &status_message) {
    m_status_message = status_message;
    m_status_message_isSet = true;
}

bool OAIAlarmModelVersionSummary::is_status_message_Set() const{
    return m_status_message_isSet;
}

bool OAIAlarmModelVersionSummary::is_status_message_Valid() const{
    return m_status_message_isValid;
}

bool OAIAlarmModelVersionSummary::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_alarm_model_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_alarm_model_arn_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_alarm_model_version_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_role_arn_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_creation_time_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_last_update_time_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_status.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_status_message_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIAlarmModelVersionSummary::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
