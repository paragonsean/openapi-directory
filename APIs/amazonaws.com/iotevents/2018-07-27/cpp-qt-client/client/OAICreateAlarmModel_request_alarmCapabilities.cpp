/**
 * AWS IoT Events
 * AWS IoT Events monitors your equipment or device fleets for failures or changes in operation, and triggers actions when such events occur. You can use AWS IoT Events API operations to create, read, update, and delete inputs and detector models, and to list their versions.
 *
 * The version of the OpenAPI document: 2018-07-27
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAICreateAlarmModel_request_alarmCapabilities.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAICreateAlarmModel_request_alarmCapabilities::OAICreateAlarmModel_request_alarmCapabilities(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAICreateAlarmModel_request_alarmCapabilities::OAICreateAlarmModel_request_alarmCapabilities() {
    this->initializeModel();
}

OAICreateAlarmModel_request_alarmCapabilities::~OAICreateAlarmModel_request_alarmCapabilities() {}

void OAICreateAlarmModel_request_alarmCapabilities::initializeModel() {

    m_initialization_configuration_isSet = false;
    m_initialization_configuration_isValid = false;

    m_acknowledge_flow_isSet = false;
    m_acknowledge_flow_isValid = false;
}

void OAICreateAlarmModel_request_alarmCapabilities::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAICreateAlarmModel_request_alarmCapabilities::fromJsonObject(QJsonObject json) {

    m_initialization_configuration_isValid = ::OpenAPI::fromJsonValue(m_initialization_configuration, json[QString("initializationConfiguration")]);
    m_initialization_configuration_isSet = !json[QString("initializationConfiguration")].isNull() && m_initialization_configuration_isValid;

    m_acknowledge_flow_isValid = ::OpenAPI::fromJsonValue(m_acknowledge_flow, json[QString("acknowledgeFlow")]);
    m_acknowledge_flow_isSet = !json[QString("acknowledgeFlow")].isNull() && m_acknowledge_flow_isValid;
}

QString OAICreateAlarmModel_request_alarmCapabilities::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAICreateAlarmModel_request_alarmCapabilities::asJsonObject() const {
    QJsonObject obj;
    if (m_initialization_configuration.isSet()) {
        obj.insert(QString("initializationConfiguration"), ::OpenAPI::toJsonValue(m_initialization_configuration));
    }
    if (m_acknowledge_flow.isSet()) {
        obj.insert(QString("acknowledgeFlow"), ::OpenAPI::toJsonValue(m_acknowledge_flow));
    }
    return obj;
}

OAICreateAlarmModel_request_alarmCapabilities_initializationConfiguration OAICreateAlarmModel_request_alarmCapabilities::getInitializationConfiguration() const {
    return m_initialization_configuration;
}
void OAICreateAlarmModel_request_alarmCapabilities::setInitializationConfiguration(const OAICreateAlarmModel_request_alarmCapabilities_initializationConfiguration &initialization_configuration) {
    m_initialization_configuration = initialization_configuration;
    m_initialization_configuration_isSet = true;
}

bool OAICreateAlarmModel_request_alarmCapabilities::is_initialization_configuration_Set() const{
    return m_initialization_configuration_isSet;
}

bool OAICreateAlarmModel_request_alarmCapabilities::is_initialization_configuration_Valid() const{
    return m_initialization_configuration_isValid;
}

OAICreateAlarmModel_request_alarmCapabilities_acknowledgeFlow OAICreateAlarmModel_request_alarmCapabilities::getAcknowledgeFlow() const {
    return m_acknowledge_flow;
}
void OAICreateAlarmModel_request_alarmCapabilities::setAcknowledgeFlow(const OAICreateAlarmModel_request_alarmCapabilities_acknowledgeFlow &acknowledge_flow) {
    m_acknowledge_flow = acknowledge_flow;
    m_acknowledge_flow_isSet = true;
}

bool OAICreateAlarmModel_request_alarmCapabilities::is_acknowledge_flow_Set() const{
    return m_acknowledge_flow_isSet;
}

bool OAICreateAlarmModel_request_alarmCapabilities::is_acknowledge_flow_Valid() const{
    return m_acknowledge_flow_isValid;
}

bool OAICreateAlarmModel_request_alarmCapabilities::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_initialization_configuration.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_acknowledge_flow.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAICreateAlarmModel_request_alarmCapabilities::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
