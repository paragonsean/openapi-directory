/**
 * AWS IoT Events
 * AWS IoT Events monitors your equipment or device fleets for failures or changes in operation, and triggers actions when such events occur. You can use AWS IoT Events API operations to create, read, update, and delete inputs and detector models, and to list their versions.
 *
 * The version of the OpenAPI document: 2018-07-27
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIIotSiteWiseInputIdentifier.h
 *
 *  The identifer of the input routed from AWS IoT SiteWise. 
 */

#ifndef OAIIotSiteWiseInputIdentifier_H
#define OAIIotSiteWiseInputIdentifier_H

#include <QJsonObject>

#include "OAIIotSiteWiseInputIdentifier_iotSiteWiseAssetModelPropertyIdentifier.h"

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIIotSiteWiseInputIdentifier_iotSiteWiseAssetModelPropertyIdentifier;

class OAIIotSiteWiseInputIdentifier : public OAIObject {
public:
    OAIIotSiteWiseInputIdentifier();
    OAIIotSiteWiseInputIdentifier(QString json);
    ~OAIIotSiteWiseInputIdentifier() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAIIotSiteWiseInputIdentifier_iotSiteWiseAssetModelPropertyIdentifier getIotSiteWiseAssetModelPropertyIdentifier() const;
    void setIotSiteWiseAssetModelPropertyIdentifier(const OAIIotSiteWiseInputIdentifier_iotSiteWiseAssetModelPropertyIdentifier &iot_site_wise_asset_model_property_identifier);
    bool is_iot_site_wise_asset_model_property_identifier_Set() const;
    bool is_iot_site_wise_asset_model_property_identifier_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAIIotSiteWiseInputIdentifier_iotSiteWiseAssetModelPropertyIdentifier m_iot_site_wise_asset_model_property_identifier;
    bool m_iot_site_wise_asset_model_property_identifier_isSet;
    bool m_iot_site_wise_asset_model_property_identifier_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIIotSiteWiseInputIdentifier)

#endif // OAIIotSiteWiseInputIdentifier_H
