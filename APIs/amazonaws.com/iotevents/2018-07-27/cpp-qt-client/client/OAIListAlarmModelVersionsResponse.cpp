/**
 * AWS IoT Events
 * AWS IoT Events monitors your equipment or device fleets for failures or changes in operation, and triggers actions when such events occur. You can use AWS IoT Events API operations to create, read, update, and delete inputs and detector models, and to list their versions.
 *
 * The version of the OpenAPI document: 2018-07-27
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIListAlarmModelVersionsResponse.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIListAlarmModelVersionsResponse::OAIListAlarmModelVersionsResponse(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIListAlarmModelVersionsResponse::OAIListAlarmModelVersionsResponse() {
    this->initializeModel();
}

OAIListAlarmModelVersionsResponse::~OAIListAlarmModelVersionsResponse() {}

void OAIListAlarmModelVersionsResponse::initializeModel() {

    m_alarm_model_version_summaries_isSet = false;
    m_alarm_model_version_summaries_isValid = false;

    m_next_token_isSet = false;
    m_next_token_isValid = false;
}

void OAIListAlarmModelVersionsResponse::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIListAlarmModelVersionsResponse::fromJsonObject(QJsonObject json) {

    m_alarm_model_version_summaries_isValid = ::OpenAPI::fromJsonValue(m_alarm_model_version_summaries, json[QString("alarmModelVersionSummaries")]);
    m_alarm_model_version_summaries_isSet = !json[QString("alarmModelVersionSummaries")].isNull() && m_alarm_model_version_summaries_isValid;

    m_next_token_isValid = ::OpenAPI::fromJsonValue(m_next_token, json[QString("nextToken")]);
    m_next_token_isSet = !json[QString("nextToken")].isNull() && m_next_token_isValid;
}

QString OAIListAlarmModelVersionsResponse::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIListAlarmModelVersionsResponse::asJsonObject() const {
    QJsonObject obj;
    if (m_alarm_model_version_summaries.isSet()) {
        obj.insert(QString("alarmModelVersionSummaries"), ::OpenAPI::toJsonValue(m_alarm_model_version_summaries));
    }
    if (m_next_token_isSet) {
        obj.insert(QString("nextToken"), ::OpenAPI::toJsonValue(m_next_token));
    }
    return obj;
}

QList OAIListAlarmModelVersionsResponse::getAlarmModelVersionSummaries() const {
    return m_alarm_model_version_summaries;
}
void OAIListAlarmModelVersionsResponse::setAlarmModelVersionSummaries(const QList &alarm_model_version_summaries) {
    m_alarm_model_version_summaries = alarm_model_version_summaries;
    m_alarm_model_version_summaries_isSet = true;
}

bool OAIListAlarmModelVersionsResponse::is_alarm_model_version_summaries_Set() const{
    return m_alarm_model_version_summaries_isSet;
}

bool OAIListAlarmModelVersionsResponse::is_alarm_model_version_summaries_Valid() const{
    return m_alarm_model_version_summaries_isValid;
}

QString OAIListAlarmModelVersionsResponse::getNextToken() const {
    return m_next_token;
}
void OAIListAlarmModelVersionsResponse::setNextToken(const QString &next_token) {
    m_next_token = next_token;
    m_next_token_isSet = true;
}

bool OAIListAlarmModelVersionsResponse::is_next_token_Set() const{
    return m_next_token_isSet;
}

bool OAIListAlarmModelVersionsResponse::is_next_token_Valid() const{
    return m_next_token_isValid;
}

bool OAIListAlarmModelVersionsResponse::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_alarm_model_version_summaries.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_next_token_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIListAlarmModelVersionsResponse::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
