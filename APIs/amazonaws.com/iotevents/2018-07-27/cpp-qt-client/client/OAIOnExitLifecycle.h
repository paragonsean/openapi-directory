/**
 * AWS IoT Events
 * AWS IoT Events monitors your equipment or device fleets for failures or changes in operation, and triggers actions when such events occur. You can use AWS IoT Events API operations to create, read, update, and delete inputs and detector models, and to list their versions.
 *
 * The version of the OpenAPI document: 2018-07-27
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIOnExitLifecycle.h
 *
 * When exiting this state, perform these &lt;code&gt;actions&lt;/code&gt; if the specified &lt;code&gt;condition&lt;/code&gt; is &lt;code&gt;TRUE&lt;/code&gt;.
 */

#ifndef OAIOnExitLifecycle_H
#define OAIOnExitLifecycle_H

#include <QJsonObject>

#include <QList>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIOnExitLifecycle : public OAIObject {
public:
    OAIOnExitLifecycle();
    OAIOnExitLifecycle(QString json);
    ~OAIOnExitLifecycle() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QList getEvents() const;
    void setEvents(const QList &events);
    bool is_events_Set() const;
    bool is_events_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QList m_events;
    bool m_events_isSet;
    bool m_events_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIOnExitLifecycle)

#endif // OAIOnExitLifecycle_H
