/**
 * AWS IoT Events
 * AWS IoT Events monitors your equipment or device fleets for failures or changes in operation, and triggers actions when such events occur. You can use AWS IoT Events API operations to create, read, update, and delete inputs and detector models, and to list their versions.
 *
 * The version of the OpenAPI document: 2018-07-27
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIPayloadType.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIPayloadType::OAIPayloadType(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIPayloadType::OAIPayloadType() {
    this->initializeModel();
}

OAIPayloadType::~OAIPayloadType() {}

void OAIPayloadType::initializeModel() {

    m_value_isSet = false;
    m_value_isValid = false;
    m_value = eOAIPayloadType::INVALID_VALUE_OPENAPI_GENERATED;
}

void OAIPayloadType::fromJson(QString jsonString) {
    
    if ( jsonString.compare("STRING", Qt::CaseInsensitive) == 0) {
        m_value = eOAIPayloadType::STRING;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("JSON", Qt::CaseInsensitive) == 0) {
        m_value = eOAIPayloadType::JSON;
        m_value_isSet = m_value_isValid = true;
    }
}

void OAIPayloadType::fromJsonValue(QJsonValue json) {
fromJson(json.toString());
}

QString OAIPayloadType::asJson() const {
    
    QString val;
    switch (m_value){
        case eOAIPayloadType::STRING:
            val = "STRING";
            break;
        case eOAIPayloadType::JSON:
            val = "JSON";
            break;
        default:
            break;
    }
    return val;
}

QJsonValue OAIPayloadType::asJsonValue() const {
    
    return QJsonValue(asJson());
}


OAIPayloadType::eOAIPayloadType OAIPayloadType::getValue() const {
    return m_value;
}

void OAIPayloadType::setValue(const OAIPayloadType::eOAIPayloadType& value){
    m_value = value;
    m_value_isSet = true;
}
bool OAIPayloadType::isSet() const {
    
    return m_value_isSet;
}

bool OAIPayloadType::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_value_isValid;
}

} // namespace OpenAPI
