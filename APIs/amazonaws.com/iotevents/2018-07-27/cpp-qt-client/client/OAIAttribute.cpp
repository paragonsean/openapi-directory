/**
 * AWS IoT Events
 * AWS IoT Events monitors your equipment or device fleets for failures or changes in operation, and triggers actions when such events occur. You can use AWS IoT Events API operations to create, read, update, and delete inputs and detector models, and to list their versions.
 *
 * The version of the OpenAPI document: 2018-07-27
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIAttribute.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIAttribute::OAIAttribute(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIAttribute::OAIAttribute() {
    this->initializeModel();
}

OAIAttribute::~OAIAttribute() {}

void OAIAttribute::initializeModel() {

    m_json_path_isSet = false;
    m_json_path_isValid = false;
}

void OAIAttribute::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIAttribute::fromJsonObject(QJsonObject json) {

    m_json_path_isValid = ::OpenAPI::fromJsonValue(m_json_path, json[QString("jsonPath")]);
    m_json_path_isSet = !json[QString("jsonPath")].isNull() && m_json_path_isValid;
}

QString OAIAttribute::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIAttribute::asJsonObject() const {
    QJsonObject obj;
    if (m_json_path_isSet) {
        obj.insert(QString("jsonPath"), ::OpenAPI::toJsonValue(m_json_path));
    }
    return obj;
}

QString OAIAttribute::getJsonPath() const {
    return m_json_path;
}
void OAIAttribute::setJsonPath(const QString &json_path) {
    m_json_path = json_path;
    m_json_path_isSet = true;
}

bool OAIAttribute::is_json_path_Set() const{
    return m_json_path_isSet;
}

bool OAIAttribute::is_json_path_Valid() const{
    return m_json_path_isValid;
}

bool OAIAttribute::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_json_path_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIAttribute::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_json_path_isValid && true;
}

} // namespace OpenAPI
