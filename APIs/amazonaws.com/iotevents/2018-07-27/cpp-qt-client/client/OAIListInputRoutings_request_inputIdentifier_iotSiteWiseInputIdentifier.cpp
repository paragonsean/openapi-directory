/**
 * AWS IoT Events
 * AWS IoT Events monitors your equipment or device fleets for failures or changes in operation, and triggers actions when such events occur. You can use AWS IoT Events API operations to create, read, update, and delete inputs and detector models, and to list their versions.
 *
 * The version of the OpenAPI document: 2018-07-27
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIListInputRoutings_request_inputIdentifier_iotSiteWiseInputIdentifier.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIListInputRoutings_request_inputIdentifier_iotSiteWiseInputIdentifier::OAIListInputRoutings_request_inputIdentifier_iotSiteWiseInputIdentifier(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIListInputRoutings_request_inputIdentifier_iotSiteWiseInputIdentifier::OAIListInputRoutings_request_inputIdentifier_iotSiteWiseInputIdentifier() {
    this->initializeModel();
}

OAIListInputRoutings_request_inputIdentifier_iotSiteWiseInputIdentifier::~OAIListInputRoutings_request_inputIdentifier_iotSiteWiseInputIdentifier() {}

void OAIListInputRoutings_request_inputIdentifier_iotSiteWiseInputIdentifier::initializeModel() {

    m_iot_site_wise_asset_model_property_identifier_isSet = false;
    m_iot_site_wise_asset_model_property_identifier_isValid = false;
}

void OAIListInputRoutings_request_inputIdentifier_iotSiteWiseInputIdentifier::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIListInputRoutings_request_inputIdentifier_iotSiteWiseInputIdentifier::fromJsonObject(QJsonObject json) {

    m_iot_site_wise_asset_model_property_identifier_isValid = ::OpenAPI::fromJsonValue(m_iot_site_wise_asset_model_property_identifier, json[QString("iotSiteWiseAssetModelPropertyIdentifier")]);
    m_iot_site_wise_asset_model_property_identifier_isSet = !json[QString("iotSiteWiseAssetModelPropertyIdentifier")].isNull() && m_iot_site_wise_asset_model_property_identifier_isValid;
}

QString OAIListInputRoutings_request_inputIdentifier_iotSiteWiseInputIdentifier::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIListInputRoutings_request_inputIdentifier_iotSiteWiseInputIdentifier::asJsonObject() const {
    QJsonObject obj;
    if (m_iot_site_wise_asset_model_property_identifier.isSet()) {
        obj.insert(QString("iotSiteWiseAssetModelPropertyIdentifier"), ::OpenAPI::toJsonValue(m_iot_site_wise_asset_model_property_identifier));
    }
    return obj;
}

OAIIotSiteWiseInputIdentifier_iotSiteWiseAssetModelPropertyIdentifier OAIListInputRoutings_request_inputIdentifier_iotSiteWiseInputIdentifier::getIotSiteWiseAssetModelPropertyIdentifier() const {
    return m_iot_site_wise_asset_model_property_identifier;
}
void OAIListInputRoutings_request_inputIdentifier_iotSiteWiseInputIdentifier::setIotSiteWiseAssetModelPropertyIdentifier(const OAIIotSiteWiseInputIdentifier_iotSiteWiseAssetModelPropertyIdentifier &iot_site_wise_asset_model_property_identifier) {
    m_iot_site_wise_asset_model_property_identifier = iot_site_wise_asset_model_property_identifier;
    m_iot_site_wise_asset_model_property_identifier_isSet = true;
}

bool OAIListInputRoutings_request_inputIdentifier_iotSiteWiseInputIdentifier::is_iot_site_wise_asset_model_property_identifier_Set() const{
    return m_iot_site_wise_asset_model_property_identifier_isSet;
}

bool OAIListInputRoutings_request_inputIdentifier_iotSiteWiseInputIdentifier::is_iot_site_wise_asset_model_property_identifier_Valid() const{
    return m_iot_site_wise_asset_model_property_identifier_isValid;
}

bool OAIListInputRoutings_request_inputIdentifier_iotSiteWiseInputIdentifier::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_iot_site_wise_asset_model_property_identifier.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIListInputRoutings_request_inputIdentifier_iotSiteWiseInputIdentifier::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
