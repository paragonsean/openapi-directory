/**
 * AWS IoT Events
 * AWS IoT Events monitors your equipment or device fleets for failures or changes in operation, and triggers actions when such events occur. You can use AWS IoT Events API operations to create, read, update, and delete inputs and detector models, and to list their versions.
 *
 * The version of the OpenAPI document: 2018-07-27
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAICreateAlarmModel_request_alarmCapabilities_initializationConfiguration.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAICreateAlarmModel_request_alarmCapabilities_initializationConfiguration::OAICreateAlarmModel_request_alarmCapabilities_initializationConfiguration(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAICreateAlarmModel_request_alarmCapabilities_initializationConfiguration::OAICreateAlarmModel_request_alarmCapabilities_initializationConfiguration() {
    this->initializeModel();
}

OAICreateAlarmModel_request_alarmCapabilities_initializationConfiguration::~OAICreateAlarmModel_request_alarmCapabilities_initializationConfiguration() {}

void OAICreateAlarmModel_request_alarmCapabilities_initializationConfiguration::initializeModel() {

    m_disabled_on_initialization_isSet = false;
    m_disabled_on_initialization_isValid = false;
}

void OAICreateAlarmModel_request_alarmCapabilities_initializationConfiguration::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAICreateAlarmModel_request_alarmCapabilities_initializationConfiguration::fromJsonObject(QJsonObject json) {

    m_disabled_on_initialization_isValid = ::OpenAPI::fromJsonValue(m_disabled_on_initialization, json[QString("disabledOnInitialization")]);
    m_disabled_on_initialization_isSet = !json[QString("disabledOnInitialization")].isNull() && m_disabled_on_initialization_isValid;
}

QString OAICreateAlarmModel_request_alarmCapabilities_initializationConfiguration::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAICreateAlarmModel_request_alarmCapabilities_initializationConfiguration::asJsonObject() const {
    QJsonObject obj;
    if (m_disabled_on_initialization_isSet) {
        obj.insert(QString("disabledOnInitialization"), ::OpenAPI::toJsonValue(m_disabled_on_initialization));
    }
    return obj;
}

bool OAICreateAlarmModel_request_alarmCapabilities_initializationConfiguration::getDisabledOnInitialization() const {
    return m_disabled_on_initialization;
}
void OAICreateAlarmModel_request_alarmCapabilities_initializationConfiguration::setDisabledOnInitialization(const bool &disabled_on_initialization) {
    m_disabled_on_initialization = disabled_on_initialization;
    m_disabled_on_initialization_isSet = true;
}

bool OAICreateAlarmModel_request_alarmCapabilities_initializationConfiguration::is_disabled_on_initialization_Set() const{
    return m_disabled_on_initialization_isSet;
}

bool OAICreateAlarmModel_request_alarmCapabilities_initializationConfiguration::is_disabled_on_initialization_Valid() const{
    return m_disabled_on_initialization_isValid;
}

bool OAICreateAlarmModel_request_alarmCapabilities_initializationConfiguration::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_disabled_on_initialization_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAICreateAlarmModel_request_alarmCapabilities_initializationConfiguration::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_disabled_on_initialization_isValid && true;
}

} // namespace OpenAPI
