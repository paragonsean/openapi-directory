/**
 * AWS IoT Events
 * AWS IoT Events monitors your equipment or device fleets for failures or changes in operation, and triggers actions when such events occur. You can use AWS IoT Events API operations to create, read, update, and delete inputs and detector models, and to list their versions.
 *
 * The version of the OpenAPI document: 2018-07-27
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIDescribeAlarmModelResponse.h
 *
 * 
 */

#ifndef OAIDescribeAlarmModelResponse_H
#define OAIDescribeAlarmModelResponse_H

#include <QJsonObject>

#include "OAIAlarmModelVersionStatus.h"
#include "OAIDescribeAlarmModelResponse_alarmCapabilities.h"
#include "OAIDescribeAlarmModelResponse_alarmEventActions.h"
#include "OAIDescribeAlarmModelResponse_alarmNotification.h"
#include "OAIDescribeAlarmModelResponse_alarmRule.h"
#include <QDateTime>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIDescribeAlarmModelResponse_alarmRule;
class OAIDescribeAlarmModelResponse_alarmNotification;
class OAIDescribeAlarmModelResponse_alarmEventActions;
class OAIDescribeAlarmModelResponse_alarmCapabilities;

class OAIDescribeAlarmModelResponse : public OAIObject {
public:
    OAIDescribeAlarmModelResponse();
    OAIDescribeAlarmModelResponse(QString json);
    ~OAIDescribeAlarmModelResponse() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QDateTime getCreationTime() const;
    void setCreationTime(const QDateTime &creation_time);
    bool is_creation_time_Set() const;
    bool is_creation_time_Valid() const;

    QString getAlarmModelArn() const;
    void setAlarmModelArn(const QString &alarm_model_arn);
    bool is_alarm_model_arn_Set() const;
    bool is_alarm_model_arn_Valid() const;

    QString getAlarmModelVersion() const;
    void setAlarmModelVersion(const QString &alarm_model_version);
    bool is_alarm_model_version_Set() const;
    bool is_alarm_model_version_Valid() const;

    QDateTime getLastUpdateTime() const;
    void setLastUpdateTime(const QDateTime &last_update_time);
    bool is_last_update_time_Set() const;
    bool is_last_update_time_Valid() const;

    OAIAlarmModelVersionStatus getStatus() const;
    void setStatus(const OAIAlarmModelVersionStatus &status);
    bool is_status_Set() const;
    bool is_status_Valid() const;

    QString getStatusMessage() const;
    void setStatusMessage(const QString &status_message);
    bool is_status_message_Set() const;
    bool is_status_message_Valid() const;

    QString getAlarmModelName() const;
    void setAlarmModelName(const QString &alarm_model_name);
    bool is_alarm_model_name_Set() const;
    bool is_alarm_model_name_Valid() const;

    QString getAlarmModelDescription() const;
    void setAlarmModelDescription(const QString &alarm_model_description);
    bool is_alarm_model_description_Set() const;
    bool is_alarm_model_description_Valid() const;

    QString getRoleArn() const;
    void setRoleArn(const QString &role_arn);
    bool is_role_arn_Set() const;
    bool is_role_arn_Valid() const;

    QString getKey() const;
    void setKey(const QString &key);
    bool is_key_Set() const;
    bool is_key_Valid() const;

    qint32 getSeverity() const;
    void setSeverity(const qint32 &severity);
    bool is_severity_Set() const;
    bool is_severity_Valid() const;

    OAIDescribeAlarmModelResponse_alarmRule getAlarmRule() const;
    void setAlarmRule(const OAIDescribeAlarmModelResponse_alarmRule &alarm_rule);
    bool is_alarm_rule_Set() const;
    bool is_alarm_rule_Valid() const;

    OAIDescribeAlarmModelResponse_alarmNotification getAlarmNotification() const;
    void setAlarmNotification(const OAIDescribeAlarmModelResponse_alarmNotification &alarm_notification);
    bool is_alarm_notification_Set() const;
    bool is_alarm_notification_Valid() const;

    OAIDescribeAlarmModelResponse_alarmEventActions getAlarmEventActions() const;
    void setAlarmEventActions(const OAIDescribeAlarmModelResponse_alarmEventActions &alarm_event_actions);
    bool is_alarm_event_actions_Set() const;
    bool is_alarm_event_actions_Valid() const;

    OAIDescribeAlarmModelResponse_alarmCapabilities getAlarmCapabilities() const;
    void setAlarmCapabilities(const OAIDescribeAlarmModelResponse_alarmCapabilities &alarm_capabilities);
    bool is_alarm_capabilities_Set() const;
    bool is_alarm_capabilities_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QDateTime m_creation_time;
    bool m_creation_time_isSet;
    bool m_creation_time_isValid;

    QString m_alarm_model_arn;
    bool m_alarm_model_arn_isSet;
    bool m_alarm_model_arn_isValid;

    QString m_alarm_model_version;
    bool m_alarm_model_version_isSet;
    bool m_alarm_model_version_isValid;

    QDateTime m_last_update_time;
    bool m_last_update_time_isSet;
    bool m_last_update_time_isValid;

    OAIAlarmModelVersionStatus m_status;
    bool m_status_isSet;
    bool m_status_isValid;

    QString m_status_message;
    bool m_status_message_isSet;
    bool m_status_message_isValid;

    QString m_alarm_model_name;
    bool m_alarm_model_name_isSet;
    bool m_alarm_model_name_isValid;

    QString m_alarm_model_description;
    bool m_alarm_model_description_isSet;
    bool m_alarm_model_description_isValid;

    QString m_role_arn;
    bool m_role_arn_isSet;
    bool m_role_arn_isValid;

    QString m_key;
    bool m_key_isSet;
    bool m_key_isValid;

    qint32 m_severity;
    bool m_severity_isSet;
    bool m_severity_isValid;

    OAIDescribeAlarmModelResponse_alarmRule m_alarm_rule;
    bool m_alarm_rule_isSet;
    bool m_alarm_rule_isValid;

    OAIDescribeAlarmModelResponse_alarmNotification m_alarm_notification;
    bool m_alarm_notification_isSet;
    bool m_alarm_notification_isValid;

    OAIDescribeAlarmModelResponse_alarmEventActions m_alarm_event_actions;
    bool m_alarm_event_actions_isSet;
    bool m_alarm_event_actions_isValid;

    OAIDescribeAlarmModelResponse_alarmCapabilities m_alarm_capabilities;
    bool m_alarm_capabilities_isSet;
    bool m_alarm_capabilities_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIDescribeAlarmModelResponse)

#endif // OAIDescribeAlarmModelResponse_H
