/**
 * AWS IoT Events
 * AWS IoT Events monitors your equipment or device fleets for failures or changes in operation, and triggers actions when such events occur. You can use AWS IoT Events API operations to create, read, update, and delete inputs and detector models, and to list their versions.
 *
 * The version of the OpenAPI document: 2018-07-27
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIDescribeDetectorModelAnalysisResponse.h
 *
 * 
 */

#ifndef OAIDescribeDetectorModelAnalysisResponse_H
#define OAIDescribeDetectorModelAnalysisResponse_H

#include <QJsonObject>

#include "OAIAnalysisStatus.h"

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIDescribeDetectorModelAnalysisResponse : public OAIObject {
public:
    OAIDescribeDetectorModelAnalysisResponse();
    OAIDescribeDetectorModelAnalysisResponse(QString json);
    ~OAIDescribeDetectorModelAnalysisResponse() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAIAnalysisStatus getStatus() const;
    void setStatus(const OAIAnalysisStatus &status);
    bool is_status_Set() const;
    bool is_status_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAIAnalysisStatus m_status;
    bool m_status_isSet;
    bool m_status_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIDescribeDetectorModelAnalysisResponse)

#endif // OAIDescribeDetectorModelAnalysisResponse_H
