/**
 * AWS IoT Events
 * AWS IoT Events monitors your equipment or device fleets for failures or changes in operation, and triggers actions when such events occur. You can use AWS IoT Events API operations to create, read, update, and delete inputs and detector models, and to list their versions.
 *
 * The version of the OpenAPI document: 2018-07-27
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIIotSiteWiseAction.h
 *
 * &lt;p&gt;Sends information about the detector model instance and the event that triggered the action to a specified asset property in AWS IoT SiteWise.&lt;/p&gt; &lt;p&gt;You must use expressions for all parameters in &lt;code&gt;IotSiteWiseAction&lt;/code&gt;. The expressions accept literals, operators, functions, references, and substitutions templates.&lt;/p&gt; &lt;p class&#x3D;\&quot;title\&quot;&gt; &lt;b&gt;Examples&lt;/b&gt; &lt;/p&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;For literal values, the expressions must contain single quotes. For example, the value for the &lt;code&gt;propertyAlias&lt;/code&gt; parameter can be &lt;code&gt;&#39;/company/windfarm/3/turbine/7/temperature&#39;&lt;/code&gt;.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;For references, you must specify either variables or input values. For example, the value for the &lt;code&gt;assetId&lt;/code&gt; parameter can be &lt;code&gt;$input.TurbineInput.assetId1&lt;/code&gt;.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;For a substitution template, you must use &lt;code&gt;${}&lt;/code&gt;, and the template must be in single quotes. A substitution template can also contain a combination of literals, operators, functions, references, and substitution templates.&lt;/p&gt; &lt;p&gt;In the following example, the value for the &lt;code&gt;propertyAlias&lt;/code&gt; parameter uses a substitution template. &lt;/p&gt; &lt;p&gt; &lt;code&gt;&#39;company/windfarm/${$input.TemperatureInput.sensorData.windfarmID}/turbine/ ${$input.TemperatureInput.sensorData.turbineID}/temperature&#39;&lt;/code&gt; &lt;/p&gt; &lt;/li&gt; &lt;/ul&gt; &lt;p&gt;You must specify either &lt;code&gt;propertyAlias&lt;/code&gt; or both &lt;code&gt;assetId&lt;/code&gt; and &lt;code&gt;propertyId&lt;/code&gt; to identify the target asset property in AWS IoT SiteWise.&lt;/p&gt; &lt;p&gt;For more information, see &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/iotevents/latest/developerguide/iotevents-expressions.html\&quot;&gt;Expressions&lt;/a&gt; in the &lt;i&gt;AWS IoT Events Developer Guide&lt;/i&gt;.&lt;/p&gt;
 */

#ifndef OAIIotSiteWiseAction_H
#define OAIIotSiteWiseAction_H

#include <QJsonObject>

#include "OAIIotSiteWiseAction_propertyValue.h"
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIIotSiteWiseAction_propertyValue;

class OAIIotSiteWiseAction : public OAIObject {
public:
    OAIIotSiteWiseAction();
    OAIIotSiteWiseAction(QString json);
    ~OAIIotSiteWiseAction() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getEntryId() const;
    void setEntryId(const QString &entry_id);
    bool is_entry_id_Set() const;
    bool is_entry_id_Valid() const;

    QString getAssetId() const;
    void setAssetId(const QString &asset_id);
    bool is_asset_id_Set() const;
    bool is_asset_id_Valid() const;

    QString getPropertyId() const;
    void setPropertyId(const QString &property_id);
    bool is_property_id_Set() const;
    bool is_property_id_Valid() const;

    QString getPropertyAlias() const;
    void setPropertyAlias(const QString &property_alias);
    bool is_property_alias_Set() const;
    bool is_property_alias_Valid() const;

    OAIIotSiteWiseAction_propertyValue getPropertyValue() const;
    void setPropertyValue(const OAIIotSiteWiseAction_propertyValue &property_value);
    bool is_property_value_Set() const;
    bool is_property_value_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_entry_id;
    bool m_entry_id_isSet;
    bool m_entry_id_isValid;

    QString m_asset_id;
    bool m_asset_id_isSet;
    bool m_asset_id_isValid;

    QString m_property_id;
    bool m_property_id_isSet;
    bool m_property_id_isValid;

    QString m_property_alias;
    bool m_property_alias_isSet;
    bool m_property_alias_isValid;

    OAIIotSiteWiseAction_propertyValue m_property_value;
    bool m_property_value_isSet;
    bool m_property_value_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIIotSiteWiseAction)

#endif // OAIIotSiteWiseAction_H
