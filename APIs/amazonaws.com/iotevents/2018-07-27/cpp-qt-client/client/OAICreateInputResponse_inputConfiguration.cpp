/**
 * AWS IoT Events
 * AWS IoT Events monitors your equipment or device fleets for failures or changes in operation, and triggers actions when such events occur. You can use AWS IoT Events API operations to create, read, update, and delete inputs and detector models, and to list their versions.
 *
 * The version of the OpenAPI document: 2018-07-27
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAICreateInputResponse_inputConfiguration.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAICreateInputResponse_inputConfiguration::OAICreateInputResponse_inputConfiguration(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAICreateInputResponse_inputConfiguration::OAICreateInputResponse_inputConfiguration() {
    this->initializeModel();
}

OAICreateInputResponse_inputConfiguration::~OAICreateInputResponse_inputConfiguration() {}

void OAICreateInputResponse_inputConfiguration::initializeModel() {

    m_input_name_isSet = false;
    m_input_name_isValid = false;

    m_input_description_isSet = false;
    m_input_description_isValid = false;

    m_input_arn_isSet = false;
    m_input_arn_isValid = false;

    m_creation_time_isSet = false;
    m_creation_time_isValid = false;

    m_last_update_time_isSet = false;
    m_last_update_time_isValid = false;

    m_status_isSet = false;
    m_status_isValid = false;
}

void OAICreateInputResponse_inputConfiguration::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAICreateInputResponse_inputConfiguration::fromJsonObject(QJsonObject json) {

    m_input_name_isValid = ::OpenAPI::fromJsonValue(m_input_name, json[QString("inputName")]);
    m_input_name_isSet = !json[QString("inputName")].isNull() && m_input_name_isValid;

    m_input_description_isValid = ::OpenAPI::fromJsonValue(m_input_description, json[QString("inputDescription")]);
    m_input_description_isSet = !json[QString("inputDescription")].isNull() && m_input_description_isValid;

    m_input_arn_isValid = ::OpenAPI::fromJsonValue(m_input_arn, json[QString("inputArn")]);
    m_input_arn_isSet = !json[QString("inputArn")].isNull() && m_input_arn_isValid;

    m_creation_time_isValid = ::OpenAPI::fromJsonValue(m_creation_time, json[QString("creationTime")]);
    m_creation_time_isSet = !json[QString("creationTime")].isNull() && m_creation_time_isValid;

    m_last_update_time_isValid = ::OpenAPI::fromJsonValue(m_last_update_time, json[QString("lastUpdateTime")]);
    m_last_update_time_isSet = !json[QString("lastUpdateTime")].isNull() && m_last_update_time_isValid;

    m_status_isValid = ::OpenAPI::fromJsonValue(m_status, json[QString("status")]);
    m_status_isSet = !json[QString("status")].isNull() && m_status_isValid;
}

QString OAICreateInputResponse_inputConfiguration::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAICreateInputResponse_inputConfiguration::asJsonObject() const {
    QJsonObject obj;
    if (m_input_name_isSet) {
        obj.insert(QString("inputName"), ::OpenAPI::toJsonValue(m_input_name));
    }
    if (m_input_description_isSet) {
        obj.insert(QString("inputDescription"), ::OpenAPI::toJsonValue(m_input_description));
    }
    if (m_input_arn_isSet) {
        obj.insert(QString("inputArn"), ::OpenAPI::toJsonValue(m_input_arn));
    }
    if (m_creation_time_isSet) {
        obj.insert(QString("creationTime"), ::OpenAPI::toJsonValue(m_creation_time));
    }
    if (m_last_update_time_isSet) {
        obj.insert(QString("lastUpdateTime"), ::OpenAPI::toJsonValue(m_last_update_time));
    }
    if (m_status.isSet()) {
        obj.insert(QString("status"), ::OpenAPI::toJsonValue(m_status));
    }
    return obj;
}

QString OAICreateInputResponse_inputConfiguration::getInputName() const {
    return m_input_name;
}
void OAICreateInputResponse_inputConfiguration::setInputName(const QString &input_name) {
    m_input_name = input_name;
    m_input_name_isSet = true;
}

bool OAICreateInputResponse_inputConfiguration::is_input_name_Set() const{
    return m_input_name_isSet;
}

bool OAICreateInputResponse_inputConfiguration::is_input_name_Valid() const{
    return m_input_name_isValid;
}

QString OAICreateInputResponse_inputConfiguration::getInputDescription() const {
    return m_input_description;
}
void OAICreateInputResponse_inputConfiguration::setInputDescription(const QString &input_description) {
    m_input_description = input_description;
    m_input_description_isSet = true;
}

bool OAICreateInputResponse_inputConfiguration::is_input_description_Set() const{
    return m_input_description_isSet;
}

bool OAICreateInputResponse_inputConfiguration::is_input_description_Valid() const{
    return m_input_description_isValid;
}

QString OAICreateInputResponse_inputConfiguration::getInputArn() const {
    return m_input_arn;
}
void OAICreateInputResponse_inputConfiguration::setInputArn(const QString &input_arn) {
    m_input_arn = input_arn;
    m_input_arn_isSet = true;
}

bool OAICreateInputResponse_inputConfiguration::is_input_arn_Set() const{
    return m_input_arn_isSet;
}

bool OAICreateInputResponse_inputConfiguration::is_input_arn_Valid() const{
    return m_input_arn_isValid;
}

QDateTime OAICreateInputResponse_inputConfiguration::getCreationTime() const {
    return m_creation_time;
}
void OAICreateInputResponse_inputConfiguration::setCreationTime(const QDateTime &creation_time) {
    m_creation_time = creation_time;
    m_creation_time_isSet = true;
}

bool OAICreateInputResponse_inputConfiguration::is_creation_time_Set() const{
    return m_creation_time_isSet;
}

bool OAICreateInputResponse_inputConfiguration::is_creation_time_Valid() const{
    return m_creation_time_isValid;
}

QDateTime OAICreateInputResponse_inputConfiguration::getLastUpdateTime() const {
    return m_last_update_time;
}
void OAICreateInputResponse_inputConfiguration::setLastUpdateTime(const QDateTime &last_update_time) {
    m_last_update_time = last_update_time;
    m_last_update_time_isSet = true;
}

bool OAICreateInputResponse_inputConfiguration::is_last_update_time_Set() const{
    return m_last_update_time_isSet;
}

bool OAICreateInputResponse_inputConfiguration::is_last_update_time_Valid() const{
    return m_last_update_time_isValid;
}

OAIInputStatus OAICreateInputResponse_inputConfiguration::getStatus() const {
    return m_status;
}
void OAICreateInputResponse_inputConfiguration::setStatus(const OAIInputStatus &status) {
    m_status = status;
    m_status_isSet = true;
}

bool OAICreateInputResponse_inputConfiguration::is_status_Set() const{
    return m_status_isSet;
}

bool OAICreateInputResponse_inputConfiguration::is_status_Valid() const{
    return m_status_isValid;
}

bool OAICreateInputResponse_inputConfiguration::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_input_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_input_description_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_input_arn_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_creation_time_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_last_update_time_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_status.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAICreateInputResponse_inputConfiguration::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_input_name_isValid && m_input_arn_isValid && m_creation_time_isValid && m_last_update_time_isValid && m_status_isValid && true;
}

} // namespace OpenAPI
