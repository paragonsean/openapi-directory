/**
 * AWS IoT Events
 * AWS IoT Events monitors your equipment or device fleets for failures or changes in operation, and triggers actions when such events occur. You can use AWS IoT Events API operations to create, read, update, and delete inputs and detector models, and to list their versions.
 *
 * The version of the OpenAPI document: 2018-07-27
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIAnalysisResult.h
 *
 * Contains the result of the analysis.
 */

#ifndef OAIAnalysisResult_H
#define OAIAnalysisResult_H

#include <QJsonObject>

#include "OAIAnalysisResultLevel.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIAnalysisResult : public OAIObject {
public:
    OAIAnalysisResult();
    OAIAnalysisResult(QString json);
    ~OAIAnalysisResult() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getType() const;
    void setType(const QString &type);
    bool is_type_Set() const;
    bool is_type_Valid() const;

    OAIAnalysisResultLevel getLevel() const;
    void setLevel(const OAIAnalysisResultLevel &level);
    bool is_level_Set() const;
    bool is_level_Valid() const;

    QString getMessage() const;
    void setMessage(const QString &message);
    bool is_message_Set() const;
    bool is_message_Valid() const;

    QList getLocations() const;
    void setLocations(const QList &locations);
    bool is_locations_Set() const;
    bool is_locations_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_type;
    bool m_type_isSet;
    bool m_type_isValid;

    OAIAnalysisResultLevel m_level;
    bool m_level_isSet;
    bool m_level_isValid;

    QString m_message;
    bool m_message_isSet;
    bool m_message_isValid;

    QList m_locations;
    bool m_locations_isSet;
    bool m_locations_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIAnalysisResult)

#endif // OAIAnalysisResult_H
