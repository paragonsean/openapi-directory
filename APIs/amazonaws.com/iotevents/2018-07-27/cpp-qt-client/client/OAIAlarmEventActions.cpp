/**
 * AWS IoT Events
 * AWS IoT Events monitors your equipment or device fleets for failures or changes in operation, and triggers actions when such events occur. You can use AWS IoT Events API operations to create, read, update, and delete inputs and detector models, and to list their versions.
 *
 * The version of the OpenAPI document: 2018-07-27
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIAlarmEventActions.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIAlarmEventActions::OAIAlarmEventActions(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIAlarmEventActions::OAIAlarmEventActions() {
    this->initializeModel();
}

OAIAlarmEventActions::~OAIAlarmEventActions() {}

void OAIAlarmEventActions::initializeModel() {

    m_alarm_actions_isSet = false;
    m_alarm_actions_isValid = false;
}

void OAIAlarmEventActions::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIAlarmEventActions::fromJsonObject(QJsonObject json) {

    m_alarm_actions_isValid = ::OpenAPI::fromJsonValue(m_alarm_actions, json[QString("alarmActions")]);
    m_alarm_actions_isSet = !json[QString("alarmActions")].isNull() && m_alarm_actions_isValid;
}

QString OAIAlarmEventActions::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIAlarmEventActions::asJsonObject() const {
    QJsonObject obj;
    if (m_alarm_actions.isSet()) {
        obj.insert(QString("alarmActions"), ::OpenAPI::toJsonValue(m_alarm_actions));
    }
    return obj;
}

QList OAIAlarmEventActions::getAlarmActions() const {
    return m_alarm_actions;
}
void OAIAlarmEventActions::setAlarmActions(const QList &alarm_actions) {
    m_alarm_actions = alarm_actions;
    m_alarm_actions_isSet = true;
}

bool OAIAlarmEventActions::is_alarm_actions_Set() const{
    return m_alarm_actions_isSet;
}

bool OAIAlarmEventActions::is_alarm_actions_Valid() const{
    return m_alarm_actions_isValid;
}

bool OAIAlarmEventActions::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_alarm_actions.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIAlarmEventActions::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
