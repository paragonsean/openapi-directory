/**
 * AWS IoT Events
 * AWS IoT Events monitors your equipment or device fleets for failures or changes in operation, and triggers actions when such events occur. You can use AWS IoT Events API operations to create, read, update, and delete inputs and detector models, and to list their versions.
 *
 * The version of the OpenAPI document: 2018-07-27
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIAnalysisStatus.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIAnalysisStatus::OAIAnalysisStatus(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIAnalysisStatus::OAIAnalysisStatus() {
    this->initializeModel();
}

OAIAnalysisStatus::~OAIAnalysisStatus() {}

void OAIAnalysisStatus::initializeModel() {

    m_value_isSet = false;
    m_value_isValid = false;
    m_value = eOAIAnalysisStatus::INVALID_VALUE_OPENAPI_GENERATED;
}

void OAIAnalysisStatus::fromJson(QString jsonString) {
    
    if ( jsonString.compare("RUNNING", Qt::CaseInsensitive) == 0) {
        m_value = eOAIAnalysisStatus::RUNNING;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("COMPLETE", Qt::CaseInsensitive) == 0) {
        m_value = eOAIAnalysisStatus::COMPLETE;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("FAILED", Qt::CaseInsensitive) == 0) {
        m_value = eOAIAnalysisStatus::FAILED;
        m_value_isSet = m_value_isValid = true;
    }
}

void OAIAnalysisStatus::fromJsonValue(QJsonValue json) {
fromJson(json.toString());
}

QString OAIAnalysisStatus::asJson() const {
    
    QString val;
    switch (m_value){
        case eOAIAnalysisStatus::RUNNING:
            val = "RUNNING";
            break;
        case eOAIAnalysisStatus::COMPLETE:
            val = "COMPLETE";
            break;
        case eOAIAnalysisStatus::FAILED:
            val = "FAILED";
            break;
        default:
            break;
    }
    return val;
}

QJsonValue OAIAnalysisStatus::asJsonValue() const {
    
    return QJsonValue(asJson());
}


OAIAnalysisStatus::eOAIAnalysisStatus OAIAnalysisStatus::getValue() const {
    return m_value;
}

void OAIAnalysisStatus::setValue(const OAIAnalysisStatus::eOAIAnalysisStatus& value){
    m_value = value;
    m_value_isSet = true;
}
bool OAIAnalysisStatus::isSet() const {
    
    return m_value_isSet;
}

bool OAIAnalysisStatus::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_value_isValid;
}

} // namespace OpenAPI
