/**
 * AWS IoT Events
 * AWS IoT Events monitors your equipment or device fleets for failures or changes in operation, and triggers actions when such events occur. You can use AWS IoT Events API operations to create, read, update, and delete inputs and detector models, and to list their versions.
 *
 * The version of the OpenAPI document: 2018-07-27
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIPutLoggingOptionsRequest.h
 *
 * 
 */

#ifndef OAIPutLoggingOptionsRequest_H
#define OAIPutLoggingOptionsRequest_H

#include <QJsonObject>

#include "OAIPutLoggingOptionsRequest_loggingOptions.h"

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIPutLoggingOptionsRequest_loggingOptions;

class OAIPutLoggingOptionsRequest : public OAIObject {
public:
    OAIPutLoggingOptionsRequest();
    OAIPutLoggingOptionsRequest(QString json);
    ~OAIPutLoggingOptionsRequest() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAIPutLoggingOptionsRequest_loggingOptions getLoggingOptions() const;
    void setLoggingOptions(const OAIPutLoggingOptionsRequest_loggingOptions &logging_options);
    bool is_logging_options_Set() const;
    bool is_logging_options_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAIPutLoggingOptionsRequest_loggingOptions m_logging_options;
    bool m_logging_options_isSet;
    bool m_logging_options_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIPutLoggingOptionsRequest)

#endif // OAIPutLoggingOptionsRequest_H
