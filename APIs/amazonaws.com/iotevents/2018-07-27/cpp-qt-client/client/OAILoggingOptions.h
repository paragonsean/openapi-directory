/**
 * AWS IoT Events
 * AWS IoT Events monitors your equipment or device fleets for failures or changes in operation, and triggers actions when such events occur. You can use AWS IoT Events API operations to create, read, update, and delete inputs and detector models, and to list their versions.
 *
 * The version of the OpenAPI document: 2018-07-27
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAILoggingOptions.h
 *
 * The values of the AWS IoT Events logging options.
 */

#ifndef OAILoggingOptions_H
#define OAILoggingOptions_H

#include <QJsonObject>

#include "OAILoggingLevel.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAILoggingOptions : public OAIObject {
public:
    OAILoggingOptions();
    OAILoggingOptions(QString json);
    ~OAILoggingOptions() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getRoleArn() const;
    void setRoleArn(const QString &role_arn);
    bool is_role_arn_Set() const;
    bool is_role_arn_Valid() const;

    OAILoggingLevel getLevel() const;
    void setLevel(const OAILoggingLevel &level);
    bool is_level_Set() const;
    bool is_level_Valid() const;

    bool getEnabled() const;
    void setEnabled(const bool &enabled);
    bool is_enabled_Set() const;
    bool is_enabled_Valid() const;

    QList getDetectorDebugOptions() const;
    void setDetectorDebugOptions(const QList &detector_debug_options);
    bool is_detector_debug_options_Set() const;
    bool is_detector_debug_options_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_role_arn;
    bool m_role_arn_isSet;
    bool m_role_arn_isValid;

    OAILoggingLevel m_level;
    bool m_level_isSet;
    bool m_level_isValid;

    bool m_enabled;
    bool m_enabled_isSet;
    bool m_enabled_isValid;

    QList m_detector_debug_options;
    bool m_detector_debug_options_isSet;
    bool m_detector_debug_options_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAILoggingOptions)

#endif // OAILoggingOptions_H
