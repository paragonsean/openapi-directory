/**
 * AWS IoT Events
 * AWS IoT Events monitors your equipment or device fleets for failures or changes in operation, and triggers actions when such events occur. You can use AWS IoT Events API operations to create, read, update, and delete inputs and detector models, and to list their versions.
 *
 * The version of the OpenAPI document: 2018-07-27
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIRecipientDetail.h
 *
 * The information that identifies the recipient.
 */

#ifndef OAIRecipientDetail_H
#define OAIRecipientDetail_H

#include <QJsonObject>

#include "OAIRecipientDetail_ssoIdentity.h"

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIRecipientDetail_ssoIdentity;

class OAIRecipientDetail : public OAIObject {
public:
    OAIRecipientDetail();
    OAIRecipientDetail(QString json);
    ~OAIRecipientDetail() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAIRecipientDetail_ssoIdentity getSsoIdentity() const;
    void setSsoIdentity(const OAIRecipientDetail_ssoIdentity &sso_identity);
    bool is_sso_identity_Set() const;
    bool is_sso_identity_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAIRecipientDetail_ssoIdentity m_sso_identity;
    bool m_sso_identity_isSet;
    bool m_sso_identity_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIRecipientDetail)

#endif // OAIRecipientDetail_H
