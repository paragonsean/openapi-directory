/**
 * AWS IoT Events
 * AWS IoT Events monitors your equipment or device fleets for failures or changes in operation, and triggers actions when such events occur. You can use AWS IoT Events API operations to create, read, update, and delete inputs and detector models, and to list their versions.
 *
 * The version of the OpenAPI document: 2018-07-27
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIDescribeAlarmModelResponse.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIDescribeAlarmModelResponse::OAIDescribeAlarmModelResponse(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIDescribeAlarmModelResponse::OAIDescribeAlarmModelResponse() {
    this->initializeModel();
}

OAIDescribeAlarmModelResponse::~OAIDescribeAlarmModelResponse() {}

void OAIDescribeAlarmModelResponse::initializeModel() {

    m_creation_time_isSet = false;
    m_creation_time_isValid = false;

    m_alarm_model_arn_isSet = false;
    m_alarm_model_arn_isValid = false;

    m_alarm_model_version_isSet = false;
    m_alarm_model_version_isValid = false;

    m_last_update_time_isSet = false;
    m_last_update_time_isValid = false;

    m_status_isSet = false;
    m_status_isValid = false;

    m_status_message_isSet = false;
    m_status_message_isValid = false;

    m_alarm_model_name_isSet = false;
    m_alarm_model_name_isValid = false;

    m_alarm_model_description_isSet = false;
    m_alarm_model_description_isValid = false;

    m_role_arn_isSet = false;
    m_role_arn_isValid = false;

    m_key_isSet = false;
    m_key_isValid = false;

    m_severity_isSet = false;
    m_severity_isValid = false;

    m_alarm_rule_isSet = false;
    m_alarm_rule_isValid = false;

    m_alarm_notification_isSet = false;
    m_alarm_notification_isValid = false;

    m_alarm_event_actions_isSet = false;
    m_alarm_event_actions_isValid = false;

    m_alarm_capabilities_isSet = false;
    m_alarm_capabilities_isValid = false;
}

void OAIDescribeAlarmModelResponse::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIDescribeAlarmModelResponse::fromJsonObject(QJsonObject json) {

    m_creation_time_isValid = ::OpenAPI::fromJsonValue(m_creation_time, json[QString("creationTime")]);
    m_creation_time_isSet = !json[QString("creationTime")].isNull() && m_creation_time_isValid;

    m_alarm_model_arn_isValid = ::OpenAPI::fromJsonValue(m_alarm_model_arn, json[QString("alarmModelArn")]);
    m_alarm_model_arn_isSet = !json[QString("alarmModelArn")].isNull() && m_alarm_model_arn_isValid;

    m_alarm_model_version_isValid = ::OpenAPI::fromJsonValue(m_alarm_model_version, json[QString("alarmModelVersion")]);
    m_alarm_model_version_isSet = !json[QString("alarmModelVersion")].isNull() && m_alarm_model_version_isValid;

    m_last_update_time_isValid = ::OpenAPI::fromJsonValue(m_last_update_time, json[QString("lastUpdateTime")]);
    m_last_update_time_isSet = !json[QString("lastUpdateTime")].isNull() && m_last_update_time_isValid;

    m_status_isValid = ::OpenAPI::fromJsonValue(m_status, json[QString("status")]);
    m_status_isSet = !json[QString("status")].isNull() && m_status_isValid;

    m_status_message_isValid = ::OpenAPI::fromJsonValue(m_status_message, json[QString("statusMessage")]);
    m_status_message_isSet = !json[QString("statusMessage")].isNull() && m_status_message_isValid;

    m_alarm_model_name_isValid = ::OpenAPI::fromJsonValue(m_alarm_model_name, json[QString("alarmModelName")]);
    m_alarm_model_name_isSet = !json[QString("alarmModelName")].isNull() && m_alarm_model_name_isValid;

    m_alarm_model_description_isValid = ::OpenAPI::fromJsonValue(m_alarm_model_description, json[QString("alarmModelDescription")]);
    m_alarm_model_description_isSet = !json[QString("alarmModelDescription")].isNull() && m_alarm_model_description_isValid;

    m_role_arn_isValid = ::OpenAPI::fromJsonValue(m_role_arn, json[QString("roleArn")]);
    m_role_arn_isSet = !json[QString("roleArn")].isNull() && m_role_arn_isValid;

    m_key_isValid = ::OpenAPI::fromJsonValue(m_key, json[QString("key")]);
    m_key_isSet = !json[QString("key")].isNull() && m_key_isValid;

    m_severity_isValid = ::OpenAPI::fromJsonValue(m_severity, json[QString("severity")]);
    m_severity_isSet = !json[QString("severity")].isNull() && m_severity_isValid;

    m_alarm_rule_isValid = ::OpenAPI::fromJsonValue(m_alarm_rule, json[QString("alarmRule")]);
    m_alarm_rule_isSet = !json[QString("alarmRule")].isNull() && m_alarm_rule_isValid;

    m_alarm_notification_isValid = ::OpenAPI::fromJsonValue(m_alarm_notification, json[QString("alarmNotification")]);
    m_alarm_notification_isSet = !json[QString("alarmNotification")].isNull() && m_alarm_notification_isValid;

    m_alarm_event_actions_isValid = ::OpenAPI::fromJsonValue(m_alarm_event_actions, json[QString("alarmEventActions")]);
    m_alarm_event_actions_isSet = !json[QString("alarmEventActions")].isNull() && m_alarm_event_actions_isValid;

    m_alarm_capabilities_isValid = ::OpenAPI::fromJsonValue(m_alarm_capabilities, json[QString("alarmCapabilities")]);
    m_alarm_capabilities_isSet = !json[QString("alarmCapabilities")].isNull() && m_alarm_capabilities_isValid;
}

QString OAIDescribeAlarmModelResponse::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIDescribeAlarmModelResponse::asJsonObject() const {
    QJsonObject obj;
    if (m_creation_time_isSet) {
        obj.insert(QString("creationTime"), ::OpenAPI::toJsonValue(m_creation_time));
    }
    if (m_alarm_model_arn_isSet) {
        obj.insert(QString("alarmModelArn"), ::OpenAPI::toJsonValue(m_alarm_model_arn));
    }
    if (m_alarm_model_version_isSet) {
        obj.insert(QString("alarmModelVersion"), ::OpenAPI::toJsonValue(m_alarm_model_version));
    }
    if (m_last_update_time_isSet) {
        obj.insert(QString("lastUpdateTime"), ::OpenAPI::toJsonValue(m_last_update_time));
    }
    if (m_status.isSet()) {
        obj.insert(QString("status"), ::OpenAPI::toJsonValue(m_status));
    }
    if (m_status_message_isSet) {
        obj.insert(QString("statusMessage"), ::OpenAPI::toJsonValue(m_status_message));
    }
    if (m_alarm_model_name_isSet) {
        obj.insert(QString("alarmModelName"), ::OpenAPI::toJsonValue(m_alarm_model_name));
    }
    if (m_alarm_model_description_isSet) {
        obj.insert(QString("alarmModelDescription"), ::OpenAPI::toJsonValue(m_alarm_model_description));
    }
    if (m_role_arn_isSet) {
        obj.insert(QString("roleArn"), ::OpenAPI::toJsonValue(m_role_arn));
    }
    if (m_key_isSet) {
        obj.insert(QString("key"), ::OpenAPI::toJsonValue(m_key));
    }
    if (m_severity_isSet) {
        obj.insert(QString("severity"), ::OpenAPI::toJsonValue(m_severity));
    }
    if (m_alarm_rule.isSet()) {
        obj.insert(QString("alarmRule"), ::OpenAPI::toJsonValue(m_alarm_rule));
    }
    if (m_alarm_notification.isSet()) {
        obj.insert(QString("alarmNotification"), ::OpenAPI::toJsonValue(m_alarm_notification));
    }
    if (m_alarm_event_actions.isSet()) {
        obj.insert(QString("alarmEventActions"), ::OpenAPI::toJsonValue(m_alarm_event_actions));
    }
    if (m_alarm_capabilities.isSet()) {
        obj.insert(QString("alarmCapabilities"), ::OpenAPI::toJsonValue(m_alarm_capabilities));
    }
    return obj;
}

QDateTime OAIDescribeAlarmModelResponse::getCreationTime() const {
    return m_creation_time;
}
void OAIDescribeAlarmModelResponse::setCreationTime(const QDateTime &creation_time) {
    m_creation_time = creation_time;
    m_creation_time_isSet = true;
}

bool OAIDescribeAlarmModelResponse::is_creation_time_Set() const{
    return m_creation_time_isSet;
}

bool OAIDescribeAlarmModelResponse::is_creation_time_Valid() const{
    return m_creation_time_isValid;
}

QString OAIDescribeAlarmModelResponse::getAlarmModelArn() const {
    return m_alarm_model_arn;
}
void OAIDescribeAlarmModelResponse::setAlarmModelArn(const QString &alarm_model_arn) {
    m_alarm_model_arn = alarm_model_arn;
    m_alarm_model_arn_isSet = true;
}

bool OAIDescribeAlarmModelResponse::is_alarm_model_arn_Set() const{
    return m_alarm_model_arn_isSet;
}

bool OAIDescribeAlarmModelResponse::is_alarm_model_arn_Valid() const{
    return m_alarm_model_arn_isValid;
}

QString OAIDescribeAlarmModelResponse::getAlarmModelVersion() const {
    return m_alarm_model_version;
}
void OAIDescribeAlarmModelResponse::setAlarmModelVersion(const QString &alarm_model_version) {
    m_alarm_model_version = alarm_model_version;
    m_alarm_model_version_isSet = true;
}

bool OAIDescribeAlarmModelResponse::is_alarm_model_version_Set() const{
    return m_alarm_model_version_isSet;
}

bool OAIDescribeAlarmModelResponse::is_alarm_model_version_Valid() const{
    return m_alarm_model_version_isValid;
}

QDateTime OAIDescribeAlarmModelResponse::getLastUpdateTime() const {
    return m_last_update_time;
}
void OAIDescribeAlarmModelResponse::setLastUpdateTime(const QDateTime &last_update_time) {
    m_last_update_time = last_update_time;
    m_last_update_time_isSet = true;
}

bool OAIDescribeAlarmModelResponse::is_last_update_time_Set() const{
    return m_last_update_time_isSet;
}

bool OAIDescribeAlarmModelResponse::is_last_update_time_Valid() const{
    return m_last_update_time_isValid;
}

OAIAlarmModelVersionStatus OAIDescribeAlarmModelResponse::getStatus() const {
    return m_status;
}
void OAIDescribeAlarmModelResponse::setStatus(const OAIAlarmModelVersionStatus &status) {
    m_status = status;
    m_status_isSet = true;
}

bool OAIDescribeAlarmModelResponse::is_status_Set() const{
    return m_status_isSet;
}

bool OAIDescribeAlarmModelResponse::is_status_Valid() const{
    return m_status_isValid;
}

QString OAIDescribeAlarmModelResponse::getStatusMessage() const {
    return m_status_message;
}
void OAIDescribeAlarmModelResponse::setStatusMessage(const QString &status_message) {
    m_status_message = status_message;
    m_status_message_isSet = true;
}

bool OAIDescribeAlarmModelResponse::is_status_message_Set() const{
    return m_status_message_isSet;
}

bool OAIDescribeAlarmModelResponse::is_status_message_Valid() const{
    return m_status_message_isValid;
}

QString OAIDescribeAlarmModelResponse::getAlarmModelName() const {
    return m_alarm_model_name;
}
void OAIDescribeAlarmModelResponse::setAlarmModelName(const QString &alarm_model_name) {
    m_alarm_model_name = alarm_model_name;
    m_alarm_model_name_isSet = true;
}

bool OAIDescribeAlarmModelResponse::is_alarm_model_name_Set() const{
    return m_alarm_model_name_isSet;
}

bool OAIDescribeAlarmModelResponse::is_alarm_model_name_Valid() const{
    return m_alarm_model_name_isValid;
}

QString OAIDescribeAlarmModelResponse::getAlarmModelDescription() const {
    return m_alarm_model_description;
}
void OAIDescribeAlarmModelResponse::setAlarmModelDescription(const QString &alarm_model_description) {
    m_alarm_model_description = alarm_model_description;
    m_alarm_model_description_isSet = true;
}

bool OAIDescribeAlarmModelResponse::is_alarm_model_description_Set() const{
    return m_alarm_model_description_isSet;
}

bool OAIDescribeAlarmModelResponse::is_alarm_model_description_Valid() const{
    return m_alarm_model_description_isValid;
}

QString OAIDescribeAlarmModelResponse::getRoleArn() const {
    return m_role_arn;
}
void OAIDescribeAlarmModelResponse::setRoleArn(const QString &role_arn) {
    m_role_arn = role_arn;
    m_role_arn_isSet = true;
}

bool OAIDescribeAlarmModelResponse::is_role_arn_Set() const{
    return m_role_arn_isSet;
}

bool OAIDescribeAlarmModelResponse::is_role_arn_Valid() const{
    return m_role_arn_isValid;
}

QString OAIDescribeAlarmModelResponse::getKey() const {
    return m_key;
}
void OAIDescribeAlarmModelResponse::setKey(const QString &key) {
    m_key = key;
    m_key_isSet = true;
}

bool OAIDescribeAlarmModelResponse::is_key_Set() const{
    return m_key_isSet;
}

bool OAIDescribeAlarmModelResponse::is_key_Valid() const{
    return m_key_isValid;
}

qint32 OAIDescribeAlarmModelResponse::getSeverity() const {
    return m_severity;
}
void OAIDescribeAlarmModelResponse::setSeverity(const qint32 &severity) {
    m_severity = severity;
    m_severity_isSet = true;
}

bool OAIDescribeAlarmModelResponse::is_severity_Set() const{
    return m_severity_isSet;
}

bool OAIDescribeAlarmModelResponse::is_severity_Valid() const{
    return m_severity_isValid;
}

OAIDescribeAlarmModelResponse_alarmRule OAIDescribeAlarmModelResponse::getAlarmRule() const {
    return m_alarm_rule;
}
void OAIDescribeAlarmModelResponse::setAlarmRule(const OAIDescribeAlarmModelResponse_alarmRule &alarm_rule) {
    m_alarm_rule = alarm_rule;
    m_alarm_rule_isSet = true;
}

bool OAIDescribeAlarmModelResponse::is_alarm_rule_Set() const{
    return m_alarm_rule_isSet;
}

bool OAIDescribeAlarmModelResponse::is_alarm_rule_Valid() const{
    return m_alarm_rule_isValid;
}

OAIDescribeAlarmModelResponse_alarmNotification OAIDescribeAlarmModelResponse::getAlarmNotification() const {
    return m_alarm_notification;
}
void OAIDescribeAlarmModelResponse::setAlarmNotification(const OAIDescribeAlarmModelResponse_alarmNotification &alarm_notification) {
    m_alarm_notification = alarm_notification;
    m_alarm_notification_isSet = true;
}

bool OAIDescribeAlarmModelResponse::is_alarm_notification_Set() const{
    return m_alarm_notification_isSet;
}

bool OAIDescribeAlarmModelResponse::is_alarm_notification_Valid() const{
    return m_alarm_notification_isValid;
}

OAIDescribeAlarmModelResponse_alarmEventActions OAIDescribeAlarmModelResponse::getAlarmEventActions() const {
    return m_alarm_event_actions;
}
void OAIDescribeAlarmModelResponse::setAlarmEventActions(const OAIDescribeAlarmModelResponse_alarmEventActions &alarm_event_actions) {
    m_alarm_event_actions = alarm_event_actions;
    m_alarm_event_actions_isSet = true;
}

bool OAIDescribeAlarmModelResponse::is_alarm_event_actions_Set() const{
    return m_alarm_event_actions_isSet;
}

bool OAIDescribeAlarmModelResponse::is_alarm_event_actions_Valid() const{
    return m_alarm_event_actions_isValid;
}

OAIDescribeAlarmModelResponse_alarmCapabilities OAIDescribeAlarmModelResponse::getAlarmCapabilities() const {
    return m_alarm_capabilities;
}
void OAIDescribeAlarmModelResponse::setAlarmCapabilities(const OAIDescribeAlarmModelResponse_alarmCapabilities &alarm_capabilities) {
    m_alarm_capabilities = alarm_capabilities;
    m_alarm_capabilities_isSet = true;
}

bool OAIDescribeAlarmModelResponse::is_alarm_capabilities_Set() const{
    return m_alarm_capabilities_isSet;
}

bool OAIDescribeAlarmModelResponse::is_alarm_capabilities_Valid() const{
    return m_alarm_capabilities_isValid;
}

bool OAIDescribeAlarmModelResponse::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_creation_time_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_alarm_model_arn_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_alarm_model_version_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_last_update_time_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_status.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_status_message_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_alarm_model_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_alarm_model_description_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_role_arn_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_key_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_severity_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_alarm_rule.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_alarm_notification.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_alarm_event_actions.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_alarm_capabilities.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIDescribeAlarmModelResponse::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
