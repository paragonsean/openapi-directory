/**
 * AWS IoT Events
 * AWS IoT Events monitors your equipment or device fleets for failures or changes in operation, and triggers actions when such events occur. You can use AWS IoT Events API operations to create, read, update, and delete inputs and detector models, and to list their versions.
 *
 * The version of the OpenAPI document: 2018-07-27
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAITransitionEvent.h
 *
 * Specifies the actions performed and the next state entered when a &lt;code&gt;condition&lt;/code&gt; evaluates to TRUE.
 */

#ifndef OAITransitionEvent_H
#define OAITransitionEvent_H

#include <QJsonObject>

#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAITransitionEvent : public OAIObject {
public:
    OAITransitionEvent();
    OAITransitionEvent(QString json);
    ~OAITransitionEvent() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getEventName() const;
    void setEventName(const QString &event_name);
    bool is_event_name_Set() const;
    bool is_event_name_Valid() const;

    QString getCondition() const;
    void setCondition(const QString &condition);
    bool is_condition_Set() const;
    bool is_condition_Valid() const;

    QList getActions() const;
    void setActions(const QList &actions);
    bool is_actions_Set() const;
    bool is_actions_Valid() const;

    QString getNextState() const;
    void setNextState(const QString &next_state);
    bool is_next_state_Set() const;
    bool is_next_state_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_event_name;
    bool m_event_name_isSet;
    bool m_event_name_isValid;

    QString m_condition;
    bool m_condition_isSet;
    bool m_condition_isValid;

    QList m_actions;
    bool m_actions_isSet;
    bool m_actions_isValid;

    QString m_next_state;
    bool m_next_state_isSet;
    bool m_next_state_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAITransitionEvent)

#endif // OAITransitionEvent_H
