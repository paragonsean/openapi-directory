/**
 * AWS IoT Events
 * AWS IoT Events monitors your equipment or device fleets for failures or changes in operation, and triggers actions when such events occur. You can use AWS IoT Events API operations to create, read, update, and delete inputs and detector models, and to list their versions.
 *
 * The version of the OpenAPI document: 2018-07-27
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIAlarmAction.h
 *
 * Specifies one of the following actions to receive notifications when the alarm state changes.
 */

#ifndef OAIAlarmAction_H
#define OAIAlarmAction_H

#include <QJsonObject>

#include "OAIDynamoDBAction.h"
#include "OAIDynamoDBv2Action.h"
#include "OAIFirehoseAction.h"
#include "OAIIotEventsAction.h"
#include "OAIIotSiteWiseAction.h"
#include "OAIIotTopicPublishAction.h"
#include "OAILambdaAction.h"
#include "OAISNSTopicPublishAction.h"
#include "OAISqsAction.h"

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAISNSTopicPublishAction;
class OAIIotTopicPublishAction;
class OAILambdaAction;
class OAIIotEventsAction;
class OAISqsAction;
class OAIFirehoseAction;
class OAIDynamoDBAction;
class OAIDynamoDBv2Action;
class OAIIotSiteWiseAction;

class OAIAlarmAction : public OAIObject {
public:
    OAIAlarmAction();
    OAIAlarmAction(QString json);
    ~OAIAlarmAction() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAISNSTopicPublishAction getSns() const;
    void setSns(const OAISNSTopicPublishAction &sns);
    bool is_sns_Set() const;
    bool is_sns_Valid() const;

    OAIIotTopicPublishAction getIotTopicPublish() const;
    void setIotTopicPublish(const OAIIotTopicPublishAction &iot_topic_publish);
    bool is_iot_topic_publish_Set() const;
    bool is_iot_topic_publish_Valid() const;

    OAILambdaAction getLambda() const;
    void setLambda(const OAILambdaAction &lambda);
    bool is_lambda_Set() const;
    bool is_lambda_Valid() const;

    OAIIotEventsAction getIotEvents() const;
    void setIotEvents(const OAIIotEventsAction &iot_events);
    bool is_iot_events_Set() const;
    bool is_iot_events_Valid() const;

    OAISqsAction getSqs() const;
    void setSqs(const OAISqsAction &sqs);
    bool is_sqs_Set() const;
    bool is_sqs_Valid() const;

    OAIFirehoseAction getFirehose() const;
    void setFirehose(const OAIFirehoseAction &firehose);
    bool is_firehose_Set() const;
    bool is_firehose_Valid() const;

    OAIDynamoDBAction getDynamoDb() const;
    void setDynamoDb(const OAIDynamoDBAction &dynamo_db);
    bool is_dynamo_db_Set() const;
    bool is_dynamo_db_Valid() const;

    OAIDynamoDBv2Action getDynamoDbv2() const;
    void setDynamoDbv2(const OAIDynamoDBv2Action &dynamo_dbv2);
    bool is_dynamo_dbv2_Set() const;
    bool is_dynamo_dbv2_Valid() const;

    OAIIotSiteWiseAction getIotSiteWise() const;
    void setIotSiteWise(const OAIIotSiteWiseAction &iot_site_wise);
    bool is_iot_site_wise_Set() const;
    bool is_iot_site_wise_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAISNSTopicPublishAction m_sns;
    bool m_sns_isSet;
    bool m_sns_isValid;

    OAIIotTopicPublishAction m_iot_topic_publish;
    bool m_iot_topic_publish_isSet;
    bool m_iot_topic_publish_isValid;

    OAILambdaAction m_lambda;
    bool m_lambda_isSet;
    bool m_lambda_isValid;

    OAIIotEventsAction m_iot_events;
    bool m_iot_events_isSet;
    bool m_iot_events_isValid;

    OAISqsAction m_sqs;
    bool m_sqs_isSet;
    bool m_sqs_isValid;

    OAIFirehoseAction m_firehose;
    bool m_firehose_isSet;
    bool m_firehose_isValid;

    OAIDynamoDBAction m_dynamo_db;
    bool m_dynamo_db_isSet;
    bool m_dynamo_db_isValid;

    OAIDynamoDBv2Action m_dynamo_dbv2;
    bool m_dynamo_dbv2_isSet;
    bool m_dynamo_dbv2_isValid;

    OAIIotSiteWiseAction m_iot_site_wise;
    bool m_iot_site_wise_isSet;
    bool m_iot_site_wise_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIAlarmAction)

#endif // OAIAlarmAction_H
