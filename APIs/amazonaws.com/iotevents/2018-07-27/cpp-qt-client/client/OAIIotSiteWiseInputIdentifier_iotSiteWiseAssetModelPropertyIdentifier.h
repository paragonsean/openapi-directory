/**
 * AWS IoT Events
 * AWS IoT Events monitors your equipment or device fleets for failures or changes in operation, and triggers actions when such events occur. You can use AWS IoT Events API operations to create, read, update, and delete inputs and detector models, and to list their versions.
 *
 * The version of the OpenAPI document: 2018-07-27
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIIotSiteWiseInputIdentifier_iotSiteWiseAssetModelPropertyIdentifier.h
 *
 * 
 */

#ifndef OAIIotSiteWiseInputIdentifier_iotSiteWiseAssetModelPropertyIdentifier_H
#define OAIIotSiteWiseInputIdentifier_iotSiteWiseAssetModelPropertyIdentifier_H

#include <QJsonObject>

#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIIotSiteWiseInputIdentifier_iotSiteWiseAssetModelPropertyIdentifier : public OAIObject {
public:
    OAIIotSiteWiseInputIdentifier_iotSiteWiseAssetModelPropertyIdentifier();
    OAIIotSiteWiseInputIdentifier_iotSiteWiseAssetModelPropertyIdentifier(QString json);
    ~OAIIotSiteWiseInputIdentifier_iotSiteWiseAssetModelPropertyIdentifier() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getAssetModelId() const;
    void setAssetModelId(const QString &asset_model_id);
    bool is_asset_model_id_Set() const;
    bool is_asset_model_id_Valid() const;

    QString getPropertyId() const;
    void setPropertyId(const QString &property_id);
    bool is_property_id_Set() const;
    bool is_property_id_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_asset_model_id;
    bool m_asset_model_id_isSet;
    bool m_asset_model_id_isValid;

    QString m_property_id;
    bool m_property_id_isSet;
    bool m_property_id_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIIotSiteWiseInputIdentifier_iotSiteWiseAssetModelPropertyIdentifier)

#endif // OAIIotSiteWiseInputIdentifier_iotSiteWiseAssetModelPropertyIdentifier_H
