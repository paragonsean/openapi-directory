/**
 * AWS IoT Events
 * AWS IoT Events monitors your equipment or device fleets for failures or changes in operation, and triggers actions when such events occur. You can use AWS IoT Events API operations to create, read, update, and delete inputs and detector models, and to list their versions.
 *
 * The version of the OpenAPI document: 2018-07-27
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIUpdateAlarmModelResponse.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIUpdateAlarmModelResponse::OAIUpdateAlarmModelResponse(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIUpdateAlarmModelResponse::OAIUpdateAlarmModelResponse() {
    this->initializeModel();
}

OAIUpdateAlarmModelResponse::~OAIUpdateAlarmModelResponse() {}

void OAIUpdateAlarmModelResponse::initializeModel() {

    m_creation_time_isSet = false;
    m_creation_time_isValid = false;

    m_alarm_model_arn_isSet = false;
    m_alarm_model_arn_isValid = false;

    m_alarm_model_version_isSet = false;
    m_alarm_model_version_isValid = false;

    m_last_update_time_isSet = false;
    m_last_update_time_isValid = false;

    m_status_isSet = false;
    m_status_isValid = false;
}

void OAIUpdateAlarmModelResponse::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIUpdateAlarmModelResponse::fromJsonObject(QJsonObject json) {

    m_creation_time_isValid = ::OpenAPI::fromJsonValue(m_creation_time, json[QString("creationTime")]);
    m_creation_time_isSet = !json[QString("creationTime")].isNull() && m_creation_time_isValid;

    m_alarm_model_arn_isValid = ::OpenAPI::fromJsonValue(m_alarm_model_arn, json[QString("alarmModelArn")]);
    m_alarm_model_arn_isSet = !json[QString("alarmModelArn")].isNull() && m_alarm_model_arn_isValid;

    m_alarm_model_version_isValid = ::OpenAPI::fromJsonValue(m_alarm_model_version, json[QString("alarmModelVersion")]);
    m_alarm_model_version_isSet = !json[QString("alarmModelVersion")].isNull() && m_alarm_model_version_isValid;

    m_last_update_time_isValid = ::OpenAPI::fromJsonValue(m_last_update_time, json[QString("lastUpdateTime")]);
    m_last_update_time_isSet = !json[QString("lastUpdateTime")].isNull() && m_last_update_time_isValid;

    m_status_isValid = ::OpenAPI::fromJsonValue(m_status, json[QString("status")]);
    m_status_isSet = !json[QString("status")].isNull() && m_status_isValid;
}

QString OAIUpdateAlarmModelResponse::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIUpdateAlarmModelResponse::asJsonObject() const {
    QJsonObject obj;
    if (m_creation_time_isSet) {
        obj.insert(QString("creationTime"), ::OpenAPI::toJsonValue(m_creation_time));
    }
    if (m_alarm_model_arn_isSet) {
        obj.insert(QString("alarmModelArn"), ::OpenAPI::toJsonValue(m_alarm_model_arn));
    }
    if (m_alarm_model_version_isSet) {
        obj.insert(QString("alarmModelVersion"), ::OpenAPI::toJsonValue(m_alarm_model_version));
    }
    if (m_last_update_time_isSet) {
        obj.insert(QString("lastUpdateTime"), ::OpenAPI::toJsonValue(m_last_update_time));
    }
    if (m_status.isSet()) {
        obj.insert(QString("status"), ::OpenAPI::toJsonValue(m_status));
    }
    return obj;
}

QDateTime OAIUpdateAlarmModelResponse::getCreationTime() const {
    return m_creation_time;
}
void OAIUpdateAlarmModelResponse::setCreationTime(const QDateTime &creation_time) {
    m_creation_time = creation_time;
    m_creation_time_isSet = true;
}

bool OAIUpdateAlarmModelResponse::is_creation_time_Set() const{
    return m_creation_time_isSet;
}

bool OAIUpdateAlarmModelResponse::is_creation_time_Valid() const{
    return m_creation_time_isValid;
}

QString OAIUpdateAlarmModelResponse::getAlarmModelArn() const {
    return m_alarm_model_arn;
}
void OAIUpdateAlarmModelResponse::setAlarmModelArn(const QString &alarm_model_arn) {
    m_alarm_model_arn = alarm_model_arn;
    m_alarm_model_arn_isSet = true;
}

bool OAIUpdateAlarmModelResponse::is_alarm_model_arn_Set() const{
    return m_alarm_model_arn_isSet;
}

bool OAIUpdateAlarmModelResponse::is_alarm_model_arn_Valid() const{
    return m_alarm_model_arn_isValid;
}

QString OAIUpdateAlarmModelResponse::getAlarmModelVersion() const {
    return m_alarm_model_version;
}
void OAIUpdateAlarmModelResponse::setAlarmModelVersion(const QString &alarm_model_version) {
    m_alarm_model_version = alarm_model_version;
    m_alarm_model_version_isSet = true;
}

bool OAIUpdateAlarmModelResponse::is_alarm_model_version_Set() const{
    return m_alarm_model_version_isSet;
}

bool OAIUpdateAlarmModelResponse::is_alarm_model_version_Valid() const{
    return m_alarm_model_version_isValid;
}

QDateTime OAIUpdateAlarmModelResponse::getLastUpdateTime() const {
    return m_last_update_time;
}
void OAIUpdateAlarmModelResponse::setLastUpdateTime(const QDateTime &last_update_time) {
    m_last_update_time = last_update_time;
    m_last_update_time_isSet = true;
}

bool OAIUpdateAlarmModelResponse::is_last_update_time_Set() const{
    return m_last_update_time_isSet;
}

bool OAIUpdateAlarmModelResponse::is_last_update_time_Valid() const{
    return m_last_update_time_isValid;
}

OAIAlarmModelVersionStatus OAIUpdateAlarmModelResponse::getStatus() const {
    return m_status;
}
void OAIUpdateAlarmModelResponse::setStatus(const OAIAlarmModelVersionStatus &status) {
    m_status = status;
    m_status_isSet = true;
}

bool OAIUpdateAlarmModelResponse::is_status_Set() const{
    return m_status_isSet;
}

bool OAIUpdateAlarmModelResponse::is_status_Valid() const{
    return m_status_isValid;
}

bool OAIUpdateAlarmModelResponse::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_creation_time_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_alarm_model_arn_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_alarm_model_version_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_last_update_time_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_status.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIUpdateAlarmModelResponse::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
