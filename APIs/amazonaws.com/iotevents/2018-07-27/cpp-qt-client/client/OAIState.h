/**
 * AWS IoT Events
 * AWS IoT Events monitors your equipment or device fleets for failures or changes in operation, and triggers actions when such events occur. You can use AWS IoT Events API operations to create, read, update, and delete inputs and detector models, and to list their versions.
 *
 * The version of the OpenAPI document: 2018-07-27
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIState.h
 *
 * Information that defines a state of a detector.
 */

#ifndef OAIState_H
#define OAIState_H

#include <QJsonObject>

#include "OAIState_onEnter.h"
#include "OAIState_onExit.h"
#include "OAIState_onInput.h"
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIState_onInput;
class OAIState_onEnter;
class OAIState_onExit;

class OAIState : public OAIObject {
public:
    OAIState();
    OAIState(QString json);
    ~OAIState() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getStateName() const;
    void setStateName(const QString &state_name);
    bool is_state_name_Set() const;
    bool is_state_name_Valid() const;

    OAIState_onInput getOnInput() const;
    void setOnInput(const OAIState_onInput &on_input);
    bool is_on_input_Set() const;
    bool is_on_input_Valid() const;

    OAIState_onEnter getOnEnter() const;
    void setOnEnter(const OAIState_onEnter &on_enter);
    bool is_on_enter_Set() const;
    bool is_on_enter_Valid() const;

    OAIState_onExit getOnExit() const;
    void setOnExit(const OAIState_onExit &on_exit);
    bool is_on_exit_Set() const;
    bool is_on_exit_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_state_name;
    bool m_state_name_isSet;
    bool m_state_name_isValid;

    OAIState_onInput m_on_input;
    bool m_on_input_isSet;
    bool m_on_input_isValid;

    OAIState_onEnter m_on_enter;
    bool m_on_enter_isSet;
    bool m_on_enter_isValid;

    OAIState_onExit m_on_exit;
    bool m_on_exit_isSet;
    bool m_on_exit_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIState)

#endif // OAIState_H
