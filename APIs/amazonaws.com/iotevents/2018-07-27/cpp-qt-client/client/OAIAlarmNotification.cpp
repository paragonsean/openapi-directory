/**
 * AWS IoT Events
 * AWS IoT Events monitors your equipment or device fleets for failures or changes in operation, and triggers actions when such events occur. You can use AWS IoT Events API operations to create, read, update, and delete inputs and detector models, and to list their versions.
 *
 * The version of the OpenAPI document: 2018-07-27
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIAlarmNotification.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIAlarmNotification::OAIAlarmNotification(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIAlarmNotification::OAIAlarmNotification() {
    this->initializeModel();
}

OAIAlarmNotification::~OAIAlarmNotification() {}

void OAIAlarmNotification::initializeModel() {

    m_notification_actions_isSet = false;
    m_notification_actions_isValid = false;
}

void OAIAlarmNotification::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIAlarmNotification::fromJsonObject(QJsonObject json) {

    m_notification_actions_isValid = ::OpenAPI::fromJsonValue(m_notification_actions, json[QString("notificationActions")]);
    m_notification_actions_isSet = !json[QString("notificationActions")].isNull() && m_notification_actions_isValid;
}

QString OAIAlarmNotification::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIAlarmNotification::asJsonObject() const {
    QJsonObject obj;
    if (m_notification_actions.isSet()) {
        obj.insert(QString("notificationActions"), ::OpenAPI::toJsonValue(m_notification_actions));
    }
    return obj;
}

QList OAIAlarmNotification::getNotificationActions() const {
    return m_notification_actions;
}
void OAIAlarmNotification::setNotificationActions(const QList &notification_actions) {
    m_notification_actions = notification_actions;
    m_notification_actions_isSet = true;
}

bool OAIAlarmNotification::is_notification_actions_Set() const{
    return m_notification_actions_isSet;
}

bool OAIAlarmNotification::is_notification_actions_Valid() const{
    return m_notification_actions_isValid;
}

bool OAIAlarmNotification::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_notification_actions.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIAlarmNotification::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
