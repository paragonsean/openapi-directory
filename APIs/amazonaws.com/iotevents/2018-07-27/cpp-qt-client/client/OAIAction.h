/**
 * AWS IoT Events
 * AWS IoT Events monitors your equipment or device fleets for failures or changes in operation, and triggers actions when such events occur. You can use AWS IoT Events API operations to create, read, update, and delete inputs and detector models, and to list their versions.
 *
 * The version of the OpenAPI document: 2018-07-27
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIAction.h
 *
 * An action to be performed when the &lt;code&gt;condition&lt;/code&gt; is TRUE.
 */

#ifndef OAIAction_H
#define OAIAction_H

#include <QJsonObject>

#include "OAIAction_clearTimer.h"
#include "OAIAction_dynamoDB.h"
#include "OAIAction_dynamoDBv2.h"
#include "OAIAction_firehose.h"
#include "OAIAction_iotEvents.h"
#include "OAIAction_iotSiteWise.h"
#include "OAIAction_iotTopicPublish.h"
#include "OAIAction_lambda.h"
#include "OAIAction_resetTimer.h"
#include "OAIAction_setTimer.h"
#include "OAIAction_setVariable.h"
#include "OAIAction_sns.h"
#include "OAIAction_sqs.h"

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIAction_setVariable;
class OAIAction_sns;
class OAIAction_iotTopicPublish;
class OAIAction_setTimer;
class OAIAction_clearTimer;
class OAIAction_resetTimer;
class OAIAction_lambda;
class OAIAction_iotEvents;
class OAIAction_sqs;
class OAIAction_firehose;
class OAIAction_dynamoDB;
class OAIAction_dynamoDBv2;
class OAIAction_iotSiteWise;

class OAIAction : public OAIObject {
public:
    OAIAction();
    OAIAction(QString json);
    ~OAIAction() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAIAction_setVariable getSetVariable() const;
    void setSetVariable(const OAIAction_setVariable &set_variable);
    bool is_set_variable_Set() const;
    bool is_set_variable_Valid() const;

    OAIAction_sns getSns() const;
    void setSns(const OAIAction_sns &sns);
    bool is_sns_Set() const;
    bool is_sns_Valid() const;

    OAIAction_iotTopicPublish getIotTopicPublish() const;
    void setIotTopicPublish(const OAIAction_iotTopicPublish &iot_topic_publish);
    bool is_iot_topic_publish_Set() const;
    bool is_iot_topic_publish_Valid() const;

    OAIAction_setTimer getSetTimer() const;
    void setSetTimer(const OAIAction_setTimer &set_timer);
    bool is_set_timer_Set() const;
    bool is_set_timer_Valid() const;

    OAIAction_clearTimer getClearTimer() const;
    void setClearTimer(const OAIAction_clearTimer &clear_timer);
    bool is_clear_timer_Set() const;
    bool is_clear_timer_Valid() const;

    OAIAction_resetTimer getResetTimer() const;
    void setResetTimer(const OAIAction_resetTimer &reset_timer);
    bool is_reset_timer_Set() const;
    bool is_reset_timer_Valid() const;

    OAIAction_lambda getLambda() const;
    void setLambda(const OAIAction_lambda &lambda);
    bool is_lambda_Set() const;
    bool is_lambda_Valid() const;

    OAIAction_iotEvents getIotEvents() const;
    void setIotEvents(const OAIAction_iotEvents &iot_events);
    bool is_iot_events_Set() const;
    bool is_iot_events_Valid() const;

    OAIAction_sqs getSqs() const;
    void setSqs(const OAIAction_sqs &sqs);
    bool is_sqs_Set() const;
    bool is_sqs_Valid() const;

    OAIAction_firehose getFirehose() const;
    void setFirehose(const OAIAction_firehose &firehose);
    bool is_firehose_Set() const;
    bool is_firehose_Valid() const;

    OAIAction_dynamoDB getDynamoDb() const;
    void setDynamoDb(const OAIAction_dynamoDB &dynamo_db);
    bool is_dynamo_db_Set() const;
    bool is_dynamo_db_Valid() const;

    OAIAction_dynamoDBv2 getDynamoDbv2() const;
    void setDynamoDbv2(const OAIAction_dynamoDBv2 &dynamo_dbv2);
    bool is_dynamo_dbv2_Set() const;
    bool is_dynamo_dbv2_Valid() const;

    OAIAction_iotSiteWise getIotSiteWise() const;
    void setIotSiteWise(const OAIAction_iotSiteWise &iot_site_wise);
    bool is_iot_site_wise_Set() const;
    bool is_iot_site_wise_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAIAction_setVariable m_set_variable;
    bool m_set_variable_isSet;
    bool m_set_variable_isValid;

    OAIAction_sns m_sns;
    bool m_sns_isSet;
    bool m_sns_isValid;

    OAIAction_iotTopicPublish m_iot_topic_publish;
    bool m_iot_topic_publish_isSet;
    bool m_iot_topic_publish_isValid;

    OAIAction_setTimer m_set_timer;
    bool m_set_timer_isSet;
    bool m_set_timer_isValid;

    OAIAction_clearTimer m_clear_timer;
    bool m_clear_timer_isSet;
    bool m_clear_timer_isValid;

    OAIAction_resetTimer m_reset_timer;
    bool m_reset_timer_isSet;
    bool m_reset_timer_isValid;

    OAIAction_lambda m_lambda;
    bool m_lambda_isSet;
    bool m_lambda_isValid;

    OAIAction_iotEvents m_iot_events;
    bool m_iot_events_isSet;
    bool m_iot_events_isValid;

    OAIAction_sqs m_sqs;
    bool m_sqs_isSet;
    bool m_sqs_isValid;

    OAIAction_firehose m_firehose;
    bool m_firehose_isSet;
    bool m_firehose_isValid;

    OAIAction_dynamoDB m_dynamo_db;
    bool m_dynamo_db_isSet;
    bool m_dynamo_db_isValid;

    OAIAction_dynamoDBv2 m_dynamo_dbv2;
    bool m_dynamo_dbv2_isSet;
    bool m_dynamo_dbv2_isValid;

    OAIAction_iotSiteWise m_iot_site_wise;
    bool m_iot_site_wise_isSet;
    bool m_iot_site_wise_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIAction)

#endif // OAIAction_H
