/**
 * AWS IoT Events
 * AWS IoT Events monitors your equipment or device fleets for failures or changes in operation, and triggers actions when such events occur. You can use AWS IoT Events API operations to create, read, update, and delete inputs and detector models, and to list their versions.
 *
 * The version of the OpenAPI document: 2018-07-27
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIEmailRecipients.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIEmailRecipients::OAIEmailRecipients(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIEmailRecipients::OAIEmailRecipients() {
    this->initializeModel();
}

OAIEmailRecipients::~OAIEmailRecipients() {}

void OAIEmailRecipients::initializeModel() {

    m_to_isSet = false;
    m_to_isValid = false;
}

void OAIEmailRecipients::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIEmailRecipients::fromJsonObject(QJsonObject json) {

    m_to_isValid = ::OpenAPI::fromJsonValue(m_to, json[QString("to")]);
    m_to_isSet = !json[QString("to")].isNull() && m_to_isValid;
}

QString OAIEmailRecipients::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIEmailRecipients::asJsonObject() const {
    QJsonObject obj;
    if (m_to.isSet()) {
        obj.insert(QString("to"), ::OpenAPI::toJsonValue(m_to));
    }
    return obj;
}

QList OAIEmailRecipients::getTo() const {
    return m_to;
}
void OAIEmailRecipients::setTo(const QList &to) {
    m_to = to;
    m_to_isSet = true;
}

bool OAIEmailRecipients::is_to_Set() const{
    return m_to_isSet;
}

bool OAIEmailRecipients::is_to_Valid() const{
    return m_to_isValid;
}

bool OAIEmailRecipients::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_to.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIEmailRecipients::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
