/**
 * AWS IoT Events
 * AWS IoT Events monitors your equipment or device fleets for failures or changes in operation, and triggers actions when such events occur. You can use AWS IoT Events API operations to create, read, update, and delete inputs and detector models, and to list their versions.
 *
 * The version of the OpenAPI document: 2018-07-27
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIAlarmModelSummary.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIAlarmModelSummary::OAIAlarmModelSummary(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIAlarmModelSummary::OAIAlarmModelSummary() {
    this->initializeModel();
}

OAIAlarmModelSummary::~OAIAlarmModelSummary() {}

void OAIAlarmModelSummary::initializeModel() {

    m_creation_time_isSet = false;
    m_creation_time_isValid = false;

    m_alarm_model_description_isSet = false;
    m_alarm_model_description_isValid = false;

    m_alarm_model_name_isSet = false;
    m_alarm_model_name_isValid = false;
}

void OAIAlarmModelSummary::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIAlarmModelSummary::fromJsonObject(QJsonObject json) {

    m_creation_time_isValid = ::OpenAPI::fromJsonValue(m_creation_time, json[QString("creationTime")]);
    m_creation_time_isSet = !json[QString("creationTime")].isNull() && m_creation_time_isValid;

    m_alarm_model_description_isValid = ::OpenAPI::fromJsonValue(m_alarm_model_description, json[QString("alarmModelDescription")]);
    m_alarm_model_description_isSet = !json[QString("alarmModelDescription")].isNull() && m_alarm_model_description_isValid;

    m_alarm_model_name_isValid = ::OpenAPI::fromJsonValue(m_alarm_model_name, json[QString("alarmModelName")]);
    m_alarm_model_name_isSet = !json[QString("alarmModelName")].isNull() && m_alarm_model_name_isValid;
}

QString OAIAlarmModelSummary::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIAlarmModelSummary::asJsonObject() const {
    QJsonObject obj;
    if (m_creation_time_isSet) {
        obj.insert(QString("creationTime"), ::OpenAPI::toJsonValue(m_creation_time));
    }
    if (m_alarm_model_description_isSet) {
        obj.insert(QString("alarmModelDescription"), ::OpenAPI::toJsonValue(m_alarm_model_description));
    }
    if (m_alarm_model_name_isSet) {
        obj.insert(QString("alarmModelName"), ::OpenAPI::toJsonValue(m_alarm_model_name));
    }
    return obj;
}

QDateTime OAIAlarmModelSummary::getCreationTime() const {
    return m_creation_time;
}
void OAIAlarmModelSummary::setCreationTime(const QDateTime &creation_time) {
    m_creation_time = creation_time;
    m_creation_time_isSet = true;
}

bool OAIAlarmModelSummary::is_creation_time_Set() const{
    return m_creation_time_isSet;
}

bool OAIAlarmModelSummary::is_creation_time_Valid() const{
    return m_creation_time_isValid;
}

QString OAIAlarmModelSummary::getAlarmModelDescription() const {
    return m_alarm_model_description;
}
void OAIAlarmModelSummary::setAlarmModelDescription(const QString &alarm_model_description) {
    m_alarm_model_description = alarm_model_description;
    m_alarm_model_description_isSet = true;
}

bool OAIAlarmModelSummary::is_alarm_model_description_Set() const{
    return m_alarm_model_description_isSet;
}

bool OAIAlarmModelSummary::is_alarm_model_description_Valid() const{
    return m_alarm_model_description_isValid;
}

QString OAIAlarmModelSummary::getAlarmModelName() const {
    return m_alarm_model_name;
}
void OAIAlarmModelSummary::setAlarmModelName(const QString &alarm_model_name) {
    m_alarm_model_name = alarm_model_name;
    m_alarm_model_name_isSet = true;
}

bool OAIAlarmModelSummary::is_alarm_model_name_Set() const{
    return m_alarm_model_name_isSet;
}

bool OAIAlarmModelSummary::is_alarm_model_name_Valid() const{
    return m_alarm_model_name_isValid;
}

bool OAIAlarmModelSummary::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_creation_time_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_alarm_model_description_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_alarm_model_name_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIAlarmModelSummary::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
