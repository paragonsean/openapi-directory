/**
 * AWS IoT Events
 * AWS IoT Events monitors your equipment or device fleets for failures or changes in operation, and triggers actions when such events occur. You can use AWS IoT Events API operations to create, read, update, and delete inputs and detector models, and to list their versions.
 *
 * The version of the OpenAPI document: 2018-07-27
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIDetectorModel.h
 *
 * Information about the detector model.
 */

#ifndef OAIDetectorModel_H
#define OAIDetectorModel_H

#include <QJsonObject>

#include "OAIDetectorModel_detectorModelConfiguration.h"
#include "OAIDetectorModel_detectorModelDefinition.h"

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIDetectorModel_detectorModelDefinition;
class OAIDetectorModel_detectorModelConfiguration;

class OAIDetectorModel : public OAIObject {
public:
    OAIDetectorModel();
    OAIDetectorModel(QString json);
    ~OAIDetectorModel() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAIDetectorModel_detectorModelDefinition getDetectorModelDefinition() const;
    void setDetectorModelDefinition(const OAIDetectorModel_detectorModelDefinition &detector_model_definition);
    bool is_detector_model_definition_Set() const;
    bool is_detector_model_definition_Valid() const;

    OAIDetectorModel_detectorModelConfiguration getDetectorModelConfiguration() const;
    void setDetectorModelConfiguration(const OAIDetectorModel_detectorModelConfiguration &detector_model_configuration);
    bool is_detector_model_configuration_Set() const;
    bool is_detector_model_configuration_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAIDetectorModel_detectorModelDefinition m_detector_model_definition;
    bool m_detector_model_definition_isSet;
    bool m_detector_model_definition_isValid;

    OAIDetectorModel_detectorModelConfiguration m_detector_model_configuration;
    bool m_detector_model_configuration_isSet;
    bool m_detector_model_configuration_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIDetectorModel)

#endif // OAIDetectorModel_H
