/**
 * AWS IoT Events
 * AWS IoT Events monitors your equipment or device fleets for failures or changes in operation, and triggers actions when such events occur. You can use AWS IoT Events API operations to create, read, update, and delete inputs and detector models, and to list their versions.
 *
 * The version of the OpenAPI document: 2018-07-27
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAICreateDetectorModelResponse.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAICreateDetectorModelResponse::OAICreateDetectorModelResponse(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAICreateDetectorModelResponse::OAICreateDetectorModelResponse() {
    this->initializeModel();
}

OAICreateDetectorModelResponse::~OAICreateDetectorModelResponse() {}

void OAICreateDetectorModelResponse::initializeModel() {

    m_detector_model_configuration_isSet = false;
    m_detector_model_configuration_isValid = false;
}

void OAICreateDetectorModelResponse::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAICreateDetectorModelResponse::fromJsonObject(QJsonObject json) {

    m_detector_model_configuration_isValid = ::OpenAPI::fromJsonValue(m_detector_model_configuration, json[QString("detectorModelConfiguration")]);
    m_detector_model_configuration_isSet = !json[QString("detectorModelConfiguration")].isNull() && m_detector_model_configuration_isValid;
}

QString OAICreateDetectorModelResponse::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAICreateDetectorModelResponse::asJsonObject() const {
    QJsonObject obj;
    if (m_detector_model_configuration.isSet()) {
        obj.insert(QString("detectorModelConfiguration"), ::OpenAPI::toJsonValue(m_detector_model_configuration));
    }
    return obj;
}

OAICreateDetectorModelResponse_detectorModelConfiguration OAICreateDetectorModelResponse::getDetectorModelConfiguration() const {
    return m_detector_model_configuration;
}
void OAICreateDetectorModelResponse::setDetectorModelConfiguration(const OAICreateDetectorModelResponse_detectorModelConfiguration &detector_model_configuration) {
    m_detector_model_configuration = detector_model_configuration;
    m_detector_model_configuration_isSet = true;
}

bool OAICreateDetectorModelResponse::is_detector_model_configuration_Set() const{
    return m_detector_model_configuration_isSet;
}

bool OAICreateDetectorModelResponse::is_detector_model_configuration_Valid() const{
    return m_detector_model_configuration_isValid;
}

bool OAICreateDetectorModelResponse::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_detector_model_configuration.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAICreateDetectorModelResponse::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
