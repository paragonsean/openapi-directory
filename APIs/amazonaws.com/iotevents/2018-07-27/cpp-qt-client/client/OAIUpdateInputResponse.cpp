/**
 * AWS IoT Events
 * AWS IoT Events monitors your equipment or device fleets for failures or changes in operation, and triggers actions when such events occur. You can use AWS IoT Events API operations to create, read, update, and delete inputs and detector models, and to list their versions.
 *
 * The version of the OpenAPI document: 2018-07-27
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIUpdateInputResponse.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIUpdateInputResponse::OAIUpdateInputResponse(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIUpdateInputResponse::OAIUpdateInputResponse() {
    this->initializeModel();
}

OAIUpdateInputResponse::~OAIUpdateInputResponse() {}

void OAIUpdateInputResponse::initializeModel() {

    m_input_configuration_isSet = false;
    m_input_configuration_isValid = false;
}

void OAIUpdateInputResponse::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIUpdateInputResponse::fromJsonObject(QJsonObject json) {

    m_input_configuration_isValid = ::OpenAPI::fromJsonValue(m_input_configuration, json[QString("inputConfiguration")]);
    m_input_configuration_isSet = !json[QString("inputConfiguration")].isNull() && m_input_configuration_isValid;
}

QString OAIUpdateInputResponse::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIUpdateInputResponse::asJsonObject() const {
    QJsonObject obj;
    if (m_input_configuration.isSet()) {
        obj.insert(QString("inputConfiguration"), ::OpenAPI::toJsonValue(m_input_configuration));
    }
    return obj;
}

OAICreateInputResponse_inputConfiguration OAIUpdateInputResponse::getInputConfiguration() const {
    return m_input_configuration;
}
void OAIUpdateInputResponse::setInputConfiguration(const OAICreateInputResponse_inputConfiguration &input_configuration) {
    m_input_configuration = input_configuration;
    m_input_configuration_isSet = true;
}

bool OAIUpdateInputResponse::is_input_configuration_Set() const{
    return m_input_configuration_isSet;
}

bool OAIUpdateInputResponse::is_input_configuration_Valid() const{
    return m_input_configuration_isValid;
}

bool OAIUpdateInputResponse::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_input_configuration.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIUpdateInputResponse::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
