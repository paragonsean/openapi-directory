/**
 * AWS IoT Events
 * AWS IoT Events monitors your equipment or device fleets for failures or changes in operation, and triggers actions when such events occur. You can use AWS IoT Events API operations to create, read, update, and delete inputs and detector models, and to list their versions.
 *
 * The version of the OpenAPI document: 2018-07-27
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIOnInputLifecycle.h
 *
 * Specifies the actions performed when the &lt;code&gt;condition&lt;/code&gt; evaluates to TRUE.
 */

#ifndef OAIOnInputLifecycle_H
#define OAIOnInputLifecycle_H

#include <QJsonObject>

#include <QList>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIOnInputLifecycle : public OAIObject {
public:
    OAIOnInputLifecycle();
    OAIOnInputLifecycle(QString json);
    ~OAIOnInputLifecycle() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QList getEvents() const;
    void setEvents(const QList &events);
    bool is_events_Set() const;
    bool is_events_Valid() const;

    QList getTransitionEvents() const;
    void setTransitionEvents(const QList &transition_events);
    bool is_transition_events_Set() const;
    bool is_transition_events_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QList m_events;
    bool m_events_isSet;
    bool m_events_isValid;

    QList m_transition_events;
    bool m_transition_events_isSet;
    bool m_transition_events_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIOnInputLifecycle)

#endif // OAIOnInputLifecycle_H
