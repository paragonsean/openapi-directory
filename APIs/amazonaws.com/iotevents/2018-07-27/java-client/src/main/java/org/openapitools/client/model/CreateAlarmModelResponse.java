/*
 * AWS IoT Events
 * AWS IoT Events monitors your equipment or device fleets for failures or changes in operation, and triggers actions when such events occur. You can use AWS IoT Events API operations to create, read, update, and delete inputs and detector models, and to list their versions.
 *
 * The version of the OpenAPI document: 2018-07-27
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.time.OffsetDateTime;
import java.util.Arrays;
import org.openapitools.client.model.AlarmModelVersionStatus;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * CreateAlarmModelResponse
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T12:08:22.271290-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class CreateAlarmModelResponse {
  public static final String SERIALIZED_NAME_CREATION_TIME = "creationTime";
  @SerializedName(SERIALIZED_NAME_CREATION_TIME)
  private OffsetDateTime creationTime;

  public static final String SERIALIZED_NAME_ALARM_MODEL_ARN = "alarmModelArn";
  @SerializedName(SERIALIZED_NAME_ALARM_MODEL_ARN)
  private String alarmModelArn;

  public static final String SERIALIZED_NAME_ALARM_MODEL_VERSION = "alarmModelVersion";
  @SerializedName(SERIALIZED_NAME_ALARM_MODEL_VERSION)
  private String alarmModelVersion;

  public static final String SERIALIZED_NAME_LAST_UPDATE_TIME = "lastUpdateTime";
  @SerializedName(SERIALIZED_NAME_LAST_UPDATE_TIME)
  private OffsetDateTime lastUpdateTime;

  public static final String SERIALIZED_NAME_STATUS = "status";
  @SerializedName(SERIALIZED_NAME_STATUS)
  private AlarmModelVersionStatus status;

  public CreateAlarmModelResponse() {
  }

  public CreateAlarmModelResponse creationTime(OffsetDateTime creationTime) {
    this.creationTime = creationTime;
    return this;
  }

  /**
   * Get creationTime
   * @return creationTime
   */
  @javax.annotation.Nullable
  public OffsetDateTime getCreationTime() {
    return creationTime;
  }

  public void setCreationTime(OffsetDateTime creationTime) {
    this.creationTime = creationTime;
  }


  public CreateAlarmModelResponse alarmModelArn(String alarmModelArn) {
    this.alarmModelArn = alarmModelArn;
    return this;
  }

  /**
   * Get alarmModelArn
   * @return alarmModelArn
   */
  @javax.annotation.Nullable
  public String getAlarmModelArn() {
    return alarmModelArn;
  }

  public void setAlarmModelArn(String alarmModelArn) {
    this.alarmModelArn = alarmModelArn;
  }


  public CreateAlarmModelResponse alarmModelVersion(String alarmModelVersion) {
    this.alarmModelVersion = alarmModelVersion;
    return this;
  }

  /**
   * Get alarmModelVersion
   * @return alarmModelVersion
   */
  @javax.annotation.Nullable
  public String getAlarmModelVersion() {
    return alarmModelVersion;
  }

  public void setAlarmModelVersion(String alarmModelVersion) {
    this.alarmModelVersion = alarmModelVersion;
  }


  public CreateAlarmModelResponse lastUpdateTime(OffsetDateTime lastUpdateTime) {
    this.lastUpdateTime = lastUpdateTime;
    return this;
  }

  /**
   * Get lastUpdateTime
   * @return lastUpdateTime
   */
  @javax.annotation.Nullable
  public OffsetDateTime getLastUpdateTime() {
    return lastUpdateTime;
  }

  public void setLastUpdateTime(OffsetDateTime lastUpdateTime) {
    this.lastUpdateTime = lastUpdateTime;
  }


  public CreateAlarmModelResponse status(AlarmModelVersionStatus status) {
    this.status = status;
    return this;
  }

  /**
   * Get status
   * @return status
   */
  @javax.annotation.Nullable
  public AlarmModelVersionStatus getStatus() {
    return status;
  }

  public void setStatus(AlarmModelVersionStatus status) {
    this.status = status;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CreateAlarmModelResponse createAlarmModelResponse = (CreateAlarmModelResponse) o;
    return Objects.equals(this.creationTime, createAlarmModelResponse.creationTime) &&
        Objects.equals(this.alarmModelArn, createAlarmModelResponse.alarmModelArn) &&
        Objects.equals(this.alarmModelVersion, createAlarmModelResponse.alarmModelVersion) &&
        Objects.equals(this.lastUpdateTime, createAlarmModelResponse.lastUpdateTime) &&
        Objects.equals(this.status, createAlarmModelResponse.status);
  }

  @Override
  public int hashCode() {
    return Objects.hash(creationTime, alarmModelArn, alarmModelVersion, lastUpdateTime, status);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CreateAlarmModelResponse {\n");
    sb.append("    creationTime: ").append(toIndentedString(creationTime)).append("\n");
    sb.append("    alarmModelArn: ").append(toIndentedString(alarmModelArn)).append("\n");
    sb.append("    alarmModelVersion: ").append(toIndentedString(alarmModelVersion)).append("\n");
    sb.append("    lastUpdateTime: ").append(toIndentedString(lastUpdateTime)).append("\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("creationTime");
    openapiFields.add("alarmModelArn");
    openapiFields.add("alarmModelVersion");
    openapiFields.add("lastUpdateTime");
    openapiFields.add("status");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to CreateAlarmModelResponse
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!CreateAlarmModelResponse.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in CreateAlarmModelResponse is not found in the empty JSON string", CreateAlarmModelResponse.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!CreateAlarmModelResponse.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `CreateAlarmModelResponse` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // validate the optional field `creationTime`
      if (jsonObj.get("creationTime") != null && !jsonObj.get("creationTime").isJsonNull()) {
        OffsetDateTime.validateJsonElement(jsonObj.get("creationTime"));
      }
      // validate the optional field `alarmModelArn`
      if (jsonObj.get("alarmModelArn") != null && !jsonObj.get("alarmModelArn").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("alarmModelArn"));
      }
      // validate the optional field `alarmModelVersion`
      if (jsonObj.get("alarmModelVersion") != null && !jsonObj.get("alarmModelVersion").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("alarmModelVersion"));
      }
      // validate the optional field `lastUpdateTime`
      if (jsonObj.get("lastUpdateTime") != null && !jsonObj.get("lastUpdateTime").isJsonNull()) {
        OffsetDateTime.validateJsonElement(jsonObj.get("lastUpdateTime"));
      }
      // validate the optional field `status`
      if (jsonObj.get("status") != null && !jsonObj.get("status").isJsonNull()) {
        AlarmModelVersionStatus.validateJsonElement(jsonObj.get("status"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!CreateAlarmModelResponse.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'CreateAlarmModelResponse' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<CreateAlarmModelResponse> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(CreateAlarmModelResponse.class));

       return (TypeAdapter<T>) new TypeAdapter<CreateAlarmModelResponse>() {
           @Override
           public void write(JsonWriter out, CreateAlarmModelResponse value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public CreateAlarmModelResponse read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of CreateAlarmModelResponse given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of CreateAlarmModelResponse
   * @throws IOException if the JSON string is invalid with respect to CreateAlarmModelResponse
   */
  public static CreateAlarmModelResponse fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, CreateAlarmModelResponse.class);
  }

  /**
   * Convert an instance of CreateAlarmModelResponse to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

