/*
 * AWS IoT Events
 * AWS IoT Events monitors your equipment or device fleets for failures or changes in operation, and triggers actions when such events occur. You can use AWS IoT Events API operations to create, read, update, and delete inputs and detector models, and to list their versions.
 *
 * The version of the OpenAPI document: 2018-07-27
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;
import org.openapitools.client.model.IotSiteWiseActionPropertyValue;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * ActionIotSiteWise
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T12:08:22.271290-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class ActionIotSiteWise {
  public static final String SERIALIZED_NAME_ENTRY_ID = "entryId";
  @SerializedName(SERIALIZED_NAME_ENTRY_ID)
  private String entryId;

  public static final String SERIALIZED_NAME_ASSET_ID = "assetId";
  @SerializedName(SERIALIZED_NAME_ASSET_ID)
  private String assetId;

  public static final String SERIALIZED_NAME_PROPERTY_ID = "propertyId";
  @SerializedName(SERIALIZED_NAME_PROPERTY_ID)
  private String propertyId;

  public static final String SERIALIZED_NAME_PROPERTY_ALIAS = "propertyAlias";
  @SerializedName(SERIALIZED_NAME_PROPERTY_ALIAS)
  private String propertyAlias;

  public static final String SERIALIZED_NAME_PROPERTY_VALUE = "propertyValue";
  @SerializedName(SERIALIZED_NAME_PROPERTY_VALUE)
  private IotSiteWiseActionPropertyValue propertyValue;

  public ActionIotSiteWise() {
  }

  public ActionIotSiteWise entryId(String entryId) {
    this.entryId = entryId;
    return this;
  }

  /**
   * Get entryId
   * @return entryId
   */
  @javax.annotation.Nullable
  public String getEntryId() {
    return entryId;
  }

  public void setEntryId(String entryId) {
    this.entryId = entryId;
  }


  public ActionIotSiteWise assetId(String assetId) {
    this.assetId = assetId;
    return this;
  }

  /**
   * Get assetId
   * @return assetId
   */
  @javax.annotation.Nullable
  public String getAssetId() {
    return assetId;
  }

  public void setAssetId(String assetId) {
    this.assetId = assetId;
  }


  public ActionIotSiteWise propertyId(String propertyId) {
    this.propertyId = propertyId;
    return this;
  }

  /**
   * Get propertyId
   * @return propertyId
   */
  @javax.annotation.Nullable
  public String getPropertyId() {
    return propertyId;
  }

  public void setPropertyId(String propertyId) {
    this.propertyId = propertyId;
  }


  public ActionIotSiteWise propertyAlias(String propertyAlias) {
    this.propertyAlias = propertyAlias;
    return this;
  }

  /**
   * Get propertyAlias
   * @return propertyAlias
   */
  @javax.annotation.Nullable
  public String getPropertyAlias() {
    return propertyAlias;
  }

  public void setPropertyAlias(String propertyAlias) {
    this.propertyAlias = propertyAlias;
  }


  public ActionIotSiteWise propertyValue(IotSiteWiseActionPropertyValue propertyValue) {
    this.propertyValue = propertyValue;
    return this;
  }

  /**
   * Get propertyValue
   * @return propertyValue
   */
  @javax.annotation.Nullable
  public IotSiteWiseActionPropertyValue getPropertyValue() {
    return propertyValue;
  }

  public void setPropertyValue(IotSiteWiseActionPropertyValue propertyValue) {
    this.propertyValue = propertyValue;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ActionIotSiteWise actionIotSiteWise = (ActionIotSiteWise) o;
    return Objects.equals(this.entryId, actionIotSiteWise.entryId) &&
        Objects.equals(this.assetId, actionIotSiteWise.assetId) &&
        Objects.equals(this.propertyId, actionIotSiteWise.propertyId) &&
        Objects.equals(this.propertyAlias, actionIotSiteWise.propertyAlias) &&
        Objects.equals(this.propertyValue, actionIotSiteWise.propertyValue);
  }

  @Override
  public int hashCode() {
    return Objects.hash(entryId, assetId, propertyId, propertyAlias, propertyValue);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ActionIotSiteWise {\n");
    sb.append("    entryId: ").append(toIndentedString(entryId)).append("\n");
    sb.append("    assetId: ").append(toIndentedString(assetId)).append("\n");
    sb.append("    propertyId: ").append(toIndentedString(propertyId)).append("\n");
    sb.append("    propertyAlias: ").append(toIndentedString(propertyAlias)).append("\n");
    sb.append("    propertyValue: ").append(toIndentedString(propertyValue)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("entryId");
    openapiFields.add("assetId");
    openapiFields.add("propertyId");
    openapiFields.add("propertyAlias");
    openapiFields.add("propertyValue");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to ActionIotSiteWise
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!ActionIotSiteWise.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in ActionIotSiteWise is not found in the empty JSON string", ActionIotSiteWise.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!ActionIotSiteWise.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `ActionIotSiteWise` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // validate the optional field `entryId`
      if (jsonObj.get("entryId") != null && !jsonObj.get("entryId").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("entryId"));
      }
      // validate the optional field `assetId`
      if (jsonObj.get("assetId") != null && !jsonObj.get("assetId").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("assetId"));
      }
      // validate the optional field `propertyId`
      if (jsonObj.get("propertyId") != null && !jsonObj.get("propertyId").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("propertyId"));
      }
      // validate the optional field `propertyAlias`
      if (jsonObj.get("propertyAlias") != null && !jsonObj.get("propertyAlias").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("propertyAlias"));
      }
      // validate the optional field `propertyValue`
      if (jsonObj.get("propertyValue") != null && !jsonObj.get("propertyValue").isJsonNull()) {
        IotSiteWiseActionPropertyValue.validateJsonElement(jsonObj.get("propertyValue"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!ActionIotSiteWise.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'ActionIotSiteWise' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<ActionIotSiteWise> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(ActionIotSiteWise.class));

       return (TypeAdapter<T>) new TypeAdapter<ActionIotSiteWise>() {
           @Override
           public void write(JsonWriter out, ActionIotSiteWise value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public ActionIotSiteWise read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of ActionIotSiteWise given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of ActionIotSiteWise
   * @throws IOException if the JSON string is invalid with respect to ActionIotSiteWise
   */
  public static ActionIotSiteWise fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, ActionIotSiteWise.class);
  }

  /**
   * Convert an instance of ActionIotSiteWise to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

