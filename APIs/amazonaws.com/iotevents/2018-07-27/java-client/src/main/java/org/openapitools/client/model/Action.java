/*
 * AWS IoT Events
 * AWS IoT Events monitors your equipment or device fleets for failures or changes in operation, and triggers actions when such events occur. You can use AWS IoT Events API operations to create, read, update, and delete inputs and detector models, and to list their versions.
 *
 * The version of the OpenAPI document: 2018-07-27
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;
import org.openapitools.client.model.ActionClearTimer;
import org.openapitools.client.model.ActionDynamoDB;
import org.openapitools.client.model.ActionDynamoDBv2;
import org.openapitools.client.model.ActionFirehose;
import org.openapitools.client.model.ActionIotEvents;
import org.openapitools.client.model.ActionIotSiteWise;
import org.openapitools.client.model.ActionIotTopicPublish;
import org.openapitools.client.model.ActionLambda;
import org.openapitools.client.model.ActionResetTimer;
import org.openapitools.client.model.ActionSetTimer;
import org.openapitools.client.model.ActionSetVariable;
import org.openapitools.client.model.ActionSns;
import org.openapitools.client.model.ActionSqs;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * An action to be performed when the &lt;code&gt;condition&lt;/code&gt; is TRUE.
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T12:08:22.271290-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class Action {
  public static final String SERIALIZED_NAME_SET_VARIABLE = "setVariable";
  @SerializedName(SERIALIZED_NAME_SET_VARIABLE)
  private ActionSetVariable setVariable;

  public static final String SERIALIZED_NAME_SNS = "sns";
  @SerializedName(SERIALIZED_NAME_SNS)
  private ActionSns sns;

  public static final String SERIALIZED_NAME_IOT_TOPIC_PUBLISH = "iotTopicPublish";
  @SerializedName(SERIALIZED_NAME_IOT_TOPIC_PUBLISH)
  private ActionIotTopicPublish iotTopicPublish;

  public static final String SERIALIZED_NAME_SET_TIMER = "setTimer";
  @SerializedName(SERIALIZED_NAME_SET_TIMER)
  private ActionSetTimer setTimer;

  public static final String SERIALIZED_NAME_CLEAR_TIMER = "clearTimer";
  @SerializedName(SERIALIZED_NAME_CLEAR_TIMER)
  private ActionClearTimer clearTimer;

  public static final String SERIALIZED_NAME_RESET_TIMER = "resetTimer";
  @SerializedName(SERIALIZED_NAME_RESET_TIMER)
  private ActionResetTimer resetTimer;

  public static final String SERIALIZED_NAME_LAMBDA = "lambda";
  @SerializedName(SERIALIZED_NAME_LAMBDA)
  private ActionLambda lambda;

  public static final String SERIALIZED_NAME_IOT_EVENTS = "iotEvents";
  @SerializedName(SERIALIZED_NAME_IOT_EVENTS)
  private ActionIotEvents iotEvents;

  public static final String SERIALIZED_NAME_SQS = "sqs";
  @SerializedName(SERIALIZED_NAME_SQS)
  private ActionSqs sqs;

  public static final String SERIALIZED_NAME_FIREHOSE = "firehose";
  @SerializedName(SERIALIZED_NAME_FIREHOSE)
  private ActionFirehose firehose;

  public static final String SERIALIZED_NAME_DYNAMO_D_B = "dynamoDB";
  @SerializedName(SERIALIZED_NAME_DYNAMO_D_B)
  private ActionDynamoDB dynamoDB;

  public static final String SERIALIZED_NAME_DYNAMO_D_BV2 = "dynamoDBv2";
  @SerializedName(SERIALIZED_NAME_DYNAMO_D_BV2)
  private ActionDynamoDBv2 dynamoDBv2;

  public static final String SERIALIZED_NAME_IOT_SITE_WISE = "iotSiteWise";
  @SerializedName(SERIALIZED_NAME_IOT_SITE_WISE)
  private ActionIotSiteWise iotSiteWise;

  public Action() {
  }

  public Action setVariable(ActionSetVariable setVariable) {
    this.setVariable = setVariable;
    return this;
  }

  /**
   * Get setVariable
   * @return setVariable
   */
  @javax.annotation.Nullable
  public ActionSetVariable getSetVariable() {
    return setVariable;
  }

  public void setSetVariable(ActionSetVariable setVariable) {
    this.setVariable = setVariable;
  }


  public Action sns(ActionSns sns) {
    this.sns = sns;
    return this;
  }

  /**
   * Get sns
   * @return sns
   */
  @javax.annotation.Nullable
  public ActionSns getSns() {
    return sns;
  }

  public void setSns(ActionSns sns) {
    this.sns = sns;
  }


  public Action iotTopicPublish(ActionIotTopicPublish iotTopicPublish) {
    this.iotTopicPublish = iotTopicPublish;
    return this;
  }

  /**
   * Get iotTopicPublish
   * @return iotTopicPublish
   */
  @javax.annotation.Nullable
  public ActionIotTopicPublish getIotTopicPublish() {
    return iotTopicPublish;
  }

  public void setIotTopicPublish(ActionIotTopicPublish iotTopicPublish) {
    this.iotTopicPublish = iotTopicPublish;
  }


  public Action setTimer(ActionSetTimer setTimer) {
    this.setTimer = setTimer;
    return this;
  }

  /**
   * Get setTimer
   * @return setTimer
   */
  @javax.annotation.Nullable
  public ActionSetTimer getSetTimer() {
    return setTimer;
  }

  public void setSetTimer(ActionSetTimer setTimer) {
    this.setTimer = setTimer;
  }


  public Action clearTimer(ActionClearTimer clearTimer) {
    this.clearTimer = clearTimer;
    return this;
  }

  /**
   * Get clearTimer
   * @return clearTimer
   */
  @javax.annotation.Nullable
  public ActionClearTimer getClearTimer() {
    return clearTimer;
  }

  public void setClearTimer(ActionClearTimer clearTimer) {
    this.clearTimer = clearTimer;
  }


  public Action resetTimer(ActionResetTimer resetTimer) {
    this.resetTimer = resetTimer;
    return this;
  }

  /**
   * Get resetTimer
   * @return resetTimer
   */
  @javax.annotation.Nullable
  public ActionResetTimer getResetTimer() {
    return resetTimer;
  }

  public void setResetTimer(ActionResetTimer resetTimer) {
    this.resetTimer = resetTimer;
  }


  public Action lambda(ActionLambda lambda) {
    this.lambda = lambda;
    return this;
  }

  /**
   * Get lambda
   * @return lambda
   */
  @javax.annotation.Nullable
  public ActionLambda getLambda() {
    return lambda;
  }

  public void setLambda(ActionLambda lambda) {
    this.lambda = lambda;
  }


  public Action iotEvents(ActionIotEvents iotEvents) {
    this.iotEvents = iotEvents;
    return this;
  }

  /**
   * Get iotEvents
   * @return iotEvents
   */
  @javax.annotation.Nullable
  public ActionIotEvents getIotEvents() {
    return iotEvents;
  }

  public void setIotEvents(ActionIotEvents iotEvents) {
    this.iotEvents = iotEvents;
  }


  public Action sqs(ActionSqs sqs) {
    this.sqs = sqs;
    return this;
  }

  /**
   * Get sqs
   * @return sqs
   */
  @javax.annotation.Nullable
  public ActionSqs getSqs() {
    return sqs;
  }

  public void setSqs(ActionSqs sqs) {
    this.sqs = sqs;
  }


  public Action firehose(ActionFirehose firehose) {
    this.firehose = firehose;
    return this;
  }

  /**
   * Get firehose
   * @return firehose
   */
  @javax.annotation.Nullable
  public ActionFirehose getFirehose() {
    return firehose;
  }

  public void setFirehose(ActionFirehose firehose) {
    this.firehose = firehose;
  }


  public Action dynamoDB(ActionDynamoDB dynamoDB) {
    this.dynamoDB = dynamoDB;
    return this;
  }

  /**
   * Get dynamoDB
   * @return dynamoDB
   */
  @javax.annotation.Nullable
  public ActionDynamoDB getDynamoDB() {
    return dynamoDB;
  }

  public void setDynamoDB(ActionDynamoDB dynamoDB) {
    this.dynamoDB = dynamoDB;
  }


  public Action dynamoDBv2(ActionDynamoDBv2 dynamoDBv2) {
    this.dynamoDBv2 = dynamoDBv2;
    return this;
  }

  /**
   * Get dynamoDBv2
   * @return dynamoDBv2
   */
  @javax.annotation.Nullable
  public ActionDynamoDBv2 getDynamoDBv2() {
    return dynamoDBv2;
  }

  public void setDynamoDBv2(ActionDynamoDBv2 dynamoDBv2) {
    this.dynamoDBv2 = dynamoDBv2;
  }


  public Action iotSiteWise(ActionIotSiteWise iotSiteWise) {
    this.iotSiteWise = iotSiteWise;
    return this;
  }

  /**
   * Get iotSiteWise
   * @return iotSiteWise
   */
  @javax.annotation.Nullable
  public ActionIotSiteWise getIotSiteWise() {
    return iotSiteWise;
  }

  public void setIotSiteWise(ActionIotSiteWise iotSiteWise) {
    this.iotSiteWise = iotSiteWise;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Action action = (Action) o;
    return Objects.equals(this.setVariable, action.setVariable) &&
        Objects.equals(this.sns, action.sns) &&
        Objects.equals(this.iotTopicPublish, action.iotTopicPublish) &&
        Objects.equals(this.setTimer, action.setTimer) &&
        Objects.equals(this.clearTimer, action.clearTimer) &&
        Objects.equals(this.resetTimer, action.resetTimer) &&
        Objects.equals(this.lambda, action.lambda) &&
        Objects.equals(this.iotEvents, action.iotEvents) &&
        Objects.equals(this.sqs, action.sqs) &&
        Objects.equals(this.firehose, action.firehose) &&
        Objects.equals(this.dynamoDB, action.dynamoDB) &&
        Objects.equals(this.dynamoDBv2, action.dynamoDBv2) &&
        Objects.equals(this.iotSiteWise, action.iotSiteWise);
  }

  @Override
  public int hashCode() {
    return Objects.hash(setVariable, sns, iotTopicPublish, setTimer, clearTimer, resetTimer, lambda, iotEvents, sqs, firehose, dynamoDB, dynamoDBv2, iotSiteWise);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Action {\n");
    sb.append("    setVariable: ").append(toIndentedString(setVariable)).append("\n");
    sb.append("    sns: ").append(toIndentedString(sns)).append("\n");
    sb.append("    iotTopicPublish: ").append(toIndentedString(iotTopicPublish)).append("\n");
    sb.append("    setTimer: ").append(toIndentedString(setTimer)).append("\n");
    sb.append("    clearTimer: ").append(toIndentedString(clearTimer)).append("\n");
    sb.append("    resetTimer: ").append(toIndentedString(resetTimer)).append("\n");
    sb.append("    lambda: ").append(toIndentedString(lambda)).append("\n");
    sb.append("    iotEvents: ").append(toIndentedString(iotEvents)).append("\n");
    sb.append("    sqs: ").append(toIndentedString(sqs)).append("\n");
    sb.append("    firehose: ").append(toIndentedString(firehose)).append("\n");
    sb.append("    dynamoDB: ").append(toIndentedString(dynamoDB)).append("\n");
    sb.append("    dynamoDBv2: ").append(toIndentedString(dynamoDBv2)).append("\n");
    sb.append("    iotSiteWise: ").append(toIndentedString(iotSiteWise)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("setVariable");
    openapiFields.add("sns");
    openapiFields.add("iotTopicPublish");
    openapiFields.add("setTimer");
    openapiFields.add("clearTimer");
    openapiFields.add("resetTimer");
    openapiFields.add("lambda");
    openapiFields.add("iotEvents");
    openapiFields.add("sqs");
    openapiFields.add("firehose");
    openapiFields.add("dynamoDB");
    openapiFields.add("dynamoDBv2");
    openapiFields.add("iotSiteWise");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to Action
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!Action.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in Action is not found in the empty JSON string", Action.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!Action.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `Action` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // validate the optional field `setVariable`
      if (jsonObj.get("setVariable") != null && !jsonObj.get("setVariable").isJsonNull()) {
        ActionSetVariable.validateJsonElement(jsonObj.get("setVariable"));
      }
      // validate the optional field `sns`
      if (jsonObj.get("sns") != null && !jsonObj.get("sns").isJsonNull()) {
        ActionSns.validateJsonElement(jsonObj.get("sns"));
      }
      // validate the optional field `iotTopicPublish`
      if (jsonObj.get("iotTopicPublish") != null && !jsonObj.get("iotTopicPublish").isJsonNull()) {
        ActionIotTopicPublish.validateJsonElement(jsonObj.get("iotTopicPublish"));
      }
      // validate the optional field `setTimer`
      if (jsonObj.get("setTimer") != null && !jsonObj.get("setTimer").isJsonNull()) {
        ActionSetTimer.validateJsonElement(jsonObj.get("setTimer"));
      }
      // validate the optional field `clearTimer`
      if (jsonObj.get("clearTimer") != null && !jsonObj.get("clearTimer").isJsonNull()) {
        ActionClearTimer.validateJsonElement(jsonObj.get("clearTimer"));
      }
      // validate the optional field `resetTimer`
      if (jsonObj.get("resetTimer") != null && !jsonObj.get("resetTimer").isJsonNull()) {
        ActionResetTimer.validateJsonElement(jsonObj.get("resetTimer"));
      }
      // validate the optional field `lambda`
      if (jsonObj.get("lambda") != null && !jsonObj.get("lambda").isJsonNull()) {
        ActionLambda.validateJsonElement(jsonObj.get("lambda"));
      }
      // validate the optional field `iotEvents`
      if (jsonObj.get("iotEvents") != null && !jsonObj.get("iotEvents").isJsonNull()) {
        ActionIotEvents.validateJsonElement(jsonObj.get("iotEvents"));
      }
      // validate the optional field `sqs`
      if (jsonObj.get("sqs") != null && !jsonObj.get("sqs").isJsonNull()) {
        ActionSqs.validateJsonElement(jsonObj.get("sqs"));
      }
      // validate the optional field `firehose`
      if (jsonObj.get("firehose") != null && !jsonObj.get("firehose").isJsonNull()) {
        ActionFirehose.validateJsonElement(jsonObj.get("firehose"));
      }
      // validate the optional field `dynamoDB`
      if (jsonObj.get("dynamoDB") != null && !jsonObj.get("dynamoDB").isJsonNull()) {
        ActionDynamoDB.validateJsonElement(jsonObj.get("dynamoDB"));
      }
      // validate the optional field `dynamoDBv2`
      if (jsonObj.get("dynamoDBv2") != null && !jsonObj.get("dynamoDBv2").isJsonNull()) {
        ActionDynamoDBv2.validateJsonElement(jsonObj.get("dynamoDBv2"));
      }
      // validate the optional field `iotSiteWise`
      if (jsonObj.get("iotSiteWise") != null && !jsonObj.get("iotSiteWise").isJsonNull()) {
        ActionIotSiteWise.validateJsonElement(jsonObj.get("iotSiteWise"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!Action.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'Action' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<Action> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(Action.class));

       return (TypeAdapter<T>) new TypeAdapter<Action>() {
           @Override
           public void write(JsonWriter out, Action value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public Action read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of Action given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of Action
   * @throws IOException if the JSON string is invalid with respect to Action
   */
  public static Action fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, Action.class);
  }

  /**
   * Convert an instance of Action to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

