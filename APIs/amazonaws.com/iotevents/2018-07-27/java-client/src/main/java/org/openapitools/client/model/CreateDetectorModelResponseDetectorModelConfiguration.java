/*
 * AWS IoT Events
 * AWS IoT Events monitors your equipment or device fleets for failures or changes in operation, and triggers actions when such events occur. You can use AWS IoT Events API operations to create, read, update, and delete inputs and detector models, and to list their versions.
 *
 * The version of the OpenAPI document: 2018-07-27
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.time.OffsetDateTime;
import java.util.Arrays;
import org.openapitools.client.model.DetectorModelVersionStatus;
import org.openapitools.client.model.EvaluationMethod;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * CreateDetectorModelResponseDetectorModelConfiguration
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T12:08:22.271290-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class CreateDetectorModelResponseDetectorModelConfiguration {
  public static final String SERIALIZED_NAME_DETECTOR_MODEL_NAME = "detectorModelName";
  @SerializedName(SERIALIZED_NAME_DETECTOR_MODEL_NAME)
  private String detectorModelName;

  public static final String SERIALIZED_NAME_DETECTOR_MODEL_VERSION = "detectorModelVersion";
  @SerializedName(SERIALIZED_NAME_DETECTOR_MODEL_VERSION)
  private String detectorModelVersion;

  public static final String SERIALIZED_NAME_DETECTOR_MODEL_DESCRIPTION = "detectorModelDescription";
  @SerializedName(SERIALIZED_NAME_DETECTOR_MODEL_DESCRIPTION)
  private String detectorModelDescription;

  public static final String SERIALIZED_NAME_DETECTOR_MODEL_ARN = "detectorModelArn";
  @SerializedName(SERIALIZED_NAME_DETECTOR_MODEL_ARN)
  private String detectorModelArn;

  public static final String SERIALIZED_NAME_ROLE_ARN = "roleArn";
  @SerializedName(SERIALIZED_NAME_ROLE_ARN)
  private String roleArn;

  public static final String SERIALIZED_NAME_CREATION_TIME = "creationTime";
  @SerializedName(SERIALIZED_NAME_CREATION_TIME)
  private OffsetDateTime creationTime;

  public static final String SERIALIZED_NAME_LAST_UPDATE_TIME = "lastUpdateTime";
  @SerializedName(SERIALIZED_NAME_LAST_UPDATE_TIME)
  private OffsetDateTime lastUpdateTime;

  public static final String SERIALIZED_NAME_STATUS = "status";
  @SerializedName(SERIALIZED_NAME_STATUS)
  private DetectorModelVersionStatus status;

  public static final String SERIALIZED_NAME_KEY = "key";
  @SerializedName(SERIALIZED_NAME_KEY)
  private String key;

  public static final String SERIALIZED_NAME_EVALUATION_METHOD = "evaluationMethod";
  @SerializedName(SERIALIZED_NAME_EVALUATION_METHOD)
  private EvaluationMethod evaluationMethod;

  public CreateDetectorModelResponseDetectorModelConfiguration() {
  }

  public CreateDetectorModelResponseDetectorModelConfiguration detectorModelName(String detectorModelName) {
    this.detectorModelName = detectorModelName;
    return this;
  }

  /**
   * Get detectorModelName
   * @return detectorModelName
   */
  @javax.annotation.Nullable
  public String getDetectorModelName() {
    return detectorModelName;
  }

  public void setDetectorModelName(String detectorModelName) {
    this.detectorModelName = detectorModelName;
  }


  public CreateDetectorModelResponseDetectorModelConfiguration detectorModelVersion(String detectorModelVersion) {
    this.detectorModelVersion = detectorModelVersion;
    return this;
  }

  /**
   * Get detectorModelVersion
   * @return detectorModelVersion
   */
  @javax.annotation.Nullable
  public String getDetectorModelVersion() {
    return detectorModelVersion;
  }

  public void setDetectorModelVersion(String detectorModelVersion) {
    this.detectorModelVersion = detectorModelVersion;
  }


  public CreateDetectorModelResponseDetectorModelConfiguration detectorModelDescription(String detectorModelDescription) {
    this.detectorModelDescription = detectorModelDescription;
    return this;
  }

  /**
   * Get detectorModelDescription
   * @return detectorModelDescription
   */
  @javax.annotation.Nullable
  public String getDetectorModelDescription() {
    return detectorModelDescription;
  }

  public void setDetectorModelDescription(String detectorModelDescription) {
    this.detectorModelDescription = detectorModelDescription;
  }


  public CreateDetectorModelResponseDetectorModelConfiguration detectorModelArn(String detectorModelArn) {
    this.detectorModelArn = detectorModelArn;
    return this;
  }

  /**
   * Get detectorModelArn
   * @return detectorModelArn
   */
  @javax.annotation.Nullable
  public String getDetectorModelArn() {
    return detectorModelArn;
  }

  public void setDetectorModelArn(String detectorModelArn) {
    this.detectorModelArn = detectorModelArn;
  }


  public CreateDetectorModelResponseDetectorModelConfiguration roleArn(String roleArn) {
    this.roleArn = roleArn;
    return this;
  }

  /**
   * Get roleArn
   * @return roleArn
   */
  @javax.annotation.Nullable
  public String getRoleArn() {
    return roleArn;
  }

  public void setRoleArn(String roleArn) {
    this.roleArn = roleArn;
  }


  public CreateDetectorModelResponseDetectorModelConfiguration creationTime(OffsetDateTime creationTime) {
    this.creationTime = creationTime;
    return this;
  }

  /**
   * Get creationTime
   * @return creationTime
   */
  @javax.annotation.Nullable
  public OffsetDateTime getCreationTime() {
    return creationTime;
  }

  public void setCreationTime(OffsetDateTime creationTime) {
    this.creationTime = creationTime;
  }


  public CreateDetectorModelResponseDetectorModelConfiguration lastUpdateTime(OffsetDateTime lastUpdateTime) {
    this.lastUpdateTime = lastUpdateTime;
    return this;
  }

  /**
   * Get lastUpdateTime
   * @return lastUpdateTime
   */
  @javax.annotation.Nullable
  public OffsetDateTime getLastUpdateTime() {
    return lastUpdateTime;
  }

  public void setLastUpdateTime(OffsetDateTime lastUpdateTime) {
    this.lastUpdateTime = lastUpdateTime;
  }


  public CreateDetectorModelResponseDetectorModelConfiguration status(DetectorModelVersionStatus status) {
    this.status = status;
    return this;
  }

  /**
   * Get status
   * @return status
   */
  @javax.annotation.Nullable
  public DetectorModelVersionStatus getStatus() {
    return status;
  }

  public void setStatus(DetectorModelVersionStatus status) {
    this.status = status;
  }


  public CreateDetectorModelResponseDetectorModelConfiguration key(String key) {
    this.key = key;
    return this;
  }

  /**
   * Get key
   * @return key
   */
  @javax.annotation.Nullable
  public String getKey() {
    return key;
  }

  public void setKey(String key) {
    this.key = key;
  }


  public CreateDetectorModelResponseDetectorModelConfiguration evaluationMethod(EvaluationMethod evaluationMethod) {
    this.evaluationMethod = evaluationMethod;
    return this;
  }

  /**
   * Get evaluationMethod
   * @return evaluationMethod
   */
  @javax.annotation.Nullable
  public EvaluationMethod getEvaluationMethod() {
    return evaluationMethod;
  }

  public void setEvaluationMethod(EvaluationMethod evaluationMethod) {
    this.evaluationMethod = evaluationMethod;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CreateDetectorModelResponseDetectorModelConfiguration createDetectorModelResponseDetectorModelConfiguration = (CreateDetectorModelResponseDetectorModelConfiguration) o;
    return Objects.equals(this.detectorModelName, createDetectorModelResponseDetectorModelConfiguration.detectorModelName) &&
        Objects.equals(this.detectorModelVersion, createDetectorModelResponseDetectorModelConfiguration.detectorModelVersion) &&
        Objects.equals(this.detectorModelDescription, createDetectorModelResponseDetectorModelConfiguration.detectorModelDescription) &&
        Objects.equals(this.detectorModelArn, createDetectorModelResponseDetectorModelConfiguration.detectorModelArn) &&
        Objects.equals(this.roleArn, createDetectorModelResponseDetectorModelConfiguration.roleArn) &&
        Objects.equals(this.creationTime, createDetectorModelResponseDetectorModelConfiguration.creationTime) &&
        Objects.equals(this.lastUpdateTime, createDetectorModelResponseDetectorModelConfiguration.lastUpdateTime) &&
        Objects.equals(this.status, createDetectorModelResponseDetectorModelConfiguration.status) &&
        Objects.equals(this.key, createDetectorModelResponseDetectorModelConfiguration.key) &&
        Objects.equals(this.evaluationMethod, createDetectorModelResponseDetectorModelConfiguration.evaluationMethod);
  }

  @Override
  public int hashCode() {
    return Objects.hash(detectorModelName, detectorModelVersion, detectorModelDescription, detectorModelArn, roleArn, creationTime, lastUpdateTime, status, key, evaluationMethod);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CreateDetectorModelResponseDetectorModelConfiguration {\n");
    sb.append("    detectorModelName: ").append(toIndentedString(detectorModelName)).append("\n");
    sb.append("    detectorModelVersion: ").append(toIndentedString(detectorModelVersion)).append("\n");
    sb.append("    detectorModelDescription: ").append(toIndentedString(detectorModelDescription)).append("\n");
    sb.append("    detectorModelArn: ").append(toIndentedString(detectorModelArn)).append("\n");
    sb.append("    roleArn: ").append(toIndentedString(roleArn)).append("\n");
    sb.append("    creationTime: ").append(toIndentedString(creationTime)).append("\n");
    sb.append("    lastUpdateTime: ").append(toIndentedString(lastUpdateTime)).append("\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("    key: ").append(toIndentedString(key)).append("\n");
    sb.append("    evaluationMethod: ").append(toIndentedString(evaluationMethod)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("detectorModelName");
    openapiFields.add("detectorModelVersion");
    openapiFields.add("detectorModelDescription");
    openapiFields.add("detectorModelArn");
    openapiFields.add("roleArn");
    openapiFields.add("creationTime");
    openapiFields.add("lastUpdateTime");
    openapiFields.add("status");
    openapiFields.add("key");
    openapiFields.add("evaluationMethod");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to CreateDetectorModelResponseDetectorModelConfiguration
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!CreateDetectorModelResponseDetectorModelConfiguration.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in CreateDetectorModelResponseDetectorModelConfiguration is not found in the empty JSON string", CreateDetectorModelResponseDetectorModelConfiguration.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!CreateDetectorModelResponseDetectorModelConfiguration.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `CreateDetectorModelResponseDetectorModelConfiguration` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // validate the optional field `detectorModelName`
      if (jsonObj.get("detectorModelName") != null && !jsonObj.get("detectorModelName").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("detectorModelName"));
      }
      // validate the optional field `detectorModelVersion`
      if (jsonObj.get("detectorModelVersion") != null && !jsonObj.get("detectorModelVersion").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("detectorModelVersion"));
      }
      // validate the optional field `detectorModelDescription`
      if (jsonObj.get("detectorModelDescription") != null && !jsonObj.get("detectorModelDescription").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("detectorModelDescription"));
      }
      // validate the optional field `detectorModelArn`
      if (jsonObj.get("detectorModelArn") != null && !jsonObj.get("detectorModelArn").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("detectorModelArn"));
      }
      // validate the optional field `roleArn`
      if (jsonObj.get("roleArn") != null && !jsonObj.get("roleArn").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("roleArn"));
      }
      // validate the optional field `creationTime`
      if (jsonObj.get("creationTime") != null && !jsonObj.get("creationTime").isJsonNull()) {
        OffsetDateTime.validateJsonElement(jsonObj.get("creationTime"));
      }
      // validate the optional field `lastUpdateTime`
      if (jsonObj.get("lastUpdateTime") != null && !jsonObj.get("lastUpdateTime").isJsonNull()) {
        OffsetDateTime.validateJsonElement(jsonObj.get("lastUpdateTime"));
      }
      // validate the optional field `status`
      if (jsonObj.get("status") != null && !jsonObj.get("status").isJsonNull()) {
        DetectorModelVersionStatus.validateJsonElement(jsonObj.get("status"));
      }
      // validate the optional field `key`
      if (jsonObj.get("key") != null && !jsonObj.get("key").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("key"));
      }
      // validate the optional field `evaluationMethod`
      if (jsonObj.get("evaluationMethod") != null && !jsonObj.get("evaluationMethod").isJsonNull()) {
        EvaluationMethod.validateJsonElement(jsonObj.get("evaluationMethod"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!CreateDetectorModelResponseDetectorModelConfiguration.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'CreateDetectorModelResponseDetectorModelConfiguration' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<CreateDetectorModelResponseDetectorModelConfiguration> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(CreateDetectorModelResponseDetectorModelConfiguration.class));

       return (TypeAdapter<T>) new TypeAdapter<CreateDetectorModelResponseDetectorModelConfiguration>() {
           @Override
           public void write(JsonWriter out, CreateDetectorModelResponseDetectorModelConfiguration value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public CreateDetectorModelResponseDetectorModelConfiguration read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of CreateDetectorModelResponseDetectorModelConfiguration given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of CreateDetectorModelResponseDetectorModelConfiguration
   * @throws IOException if the JSON string is invalid with respect to CreateDetectorModelResponseDetectorModelConfiguration
   */
  public static CreateDetectorModelResponseDetectorModelConfiguration fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, CreateDetectorModelResponseDetectorModelConfiguration.class);
  }

  /**
   * Convert an instance of CreateDetectorModelResponseDetectorModelConfiguration to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

