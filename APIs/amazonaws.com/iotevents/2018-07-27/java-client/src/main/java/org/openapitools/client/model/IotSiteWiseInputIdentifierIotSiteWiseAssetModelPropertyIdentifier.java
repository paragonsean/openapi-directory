/*
 * AWS IoT Events
 * AWS IoT Events monitors your equipment or device fleets for failures or changes in operation, and triggers actions when such events occur. You can use AWS IoT Events API operations to create, read, update, and delete inputs and detector models, and to list their versions.
 *
 * The version of the OpenAPI document: 2018-07-27
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * IotSiteWiseInputIdentifierIotSiteWiseAssetModelPropertyIdentifier
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T12:08:22.271290-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class IotSiteWiseInputIdentifierIotSiteWiseAssetModelPropertyIdentifier {
  public static final String SERIALIZED_NAME_ASSET_MODEL_ID = "assetModelId";
  @SerializedName(SERIALIZED_NAME_ASSET_MODEL_ID)
  private String assetModelId;

  public static final String SERIALIZED_NAME_PROPERTY_ID = "propertyId";
  @SerializedName(SERIALIZED_NAME_PROPERTY_ID)
  private String propertyId;

  public IotSiteWiseInputIdentifierIotSiteWiseAssetModelPropertyIdentifier() {
  }

  public IotSiteWiseInputIdentifierIotSiteWiseAssetModelPropertyIdentifier assetModelId(String assetModelId) {
    this.assetModelId = assetModelId;
    return this;
  }

  /**
   * Get assetModelId
   * @return assetModelId
   */
  @javax.annotation.Nonnull
  public String getAssetModelId() {
    return assetModelId;
  }

  public void setAssetModelId(String assetModelId) {
    this.assetModelId = assetModelId;
  }


  public IotSiteWiseInputIdentifierIotSiteWiseAssetModelPropertyIdentifier propertyId(String propertyId) {
    this.propertyId = propertyId;
    return this;
  }

  /**
   * Get propertyId
   * @return propertyId
   */
  @javax.annotation.Nonnull
  public String getPropertyId() {
    return propertyId;
  }

  public void setPropertyId(String propertyId) {
    this.propertyId = propertyId;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    IotSiteWiseInputIdentifierIotSiteWiseAssetModelPropertyIdentifier iotSiteWiseInputIdentifierIotSiteWiseAssetModelPropertyIdentifier = (IotSiteWiseInputIdentifierIotSiteWiseAssetModelPropertyIdentifier) o;
    return Objects.equals(this.assetModelId, iotSiteWiseInputIdentifierIotSiteWiseAssetModelPropertyIdentifier.assetModelId) &&
        Objects.equals(this.propertyId, iotSiteWiseInputIdentifierIotSiteWiseAssetModelPropertyIdentifier.propertyId);
  }

  @Override
  public int hashCode() {
    return Objects.hash(assetModelId, propertyId);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class IotSiteWiseInputIdentifierIotSiteWiseAssetModelPropertyIdentifier {\n");
    sb.append("    assetModelId: ").append(toIndentedString(assetModelId)).append("\n");
    sb.append("    propertyId: ").append(toIndentedString(propertyId)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("assetModelId");
    openapiFields.add("propertyId");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
    openapiRequiredFields.add("assetModelId");
    openapiRequiredFields.add("propertyId");
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to IotSiteWiseInputIdentifierIotSiteWiseAssetModelPropertyIdentifier
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!IotSiteWiseInputIdentifierIotSiteWiseAssetModelPropertyIdentifier.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in IotSiteWiseInputIdentifierIotSiteWiseAssetModelPropertyIdentifier is not found in the empty JSON string", IotSiteWiseInputIdentifierIotSiteWiseAssetModelPropertyIdentifier.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!IotSiteWiseInputIdentifierIotSiteWiseAssetModelPropertyIdentifier.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `IotSiteWiseInputIdentifierIotSiteWiseAssetModelPropertyIdentifier` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }

      // check to make sure all required properties/fields are present in the JSON string
      for (String requiredField : IotSiteWiseInputIdentifierIotSiteWiseAssetModelPropertyIdentifier.openapiRequiredFields) {
        if (jsonElement.getAsJsonObject().get(requiredField) == null) {
          throw new IllegalArgumentException(String.format("The required field `%s` is not found in the JSON string: %s", requiredField, jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // validate the required field `assetModelId`
      String.validateJsonElement(jsonObj.get("assetModelId"));
      // validate the required field `propertyId`
      String.validateJsonElement(jsonObj.get("propertyId"));
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!IotSiteWiseInputIdentifierIotSiteWiseAssetModelPropertyIdentifier.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'IotSiteWiseInputIdentifierIotSiteWiseAssetModelPropertyIdentifier' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<IotSiteWiseInputIdentifierIotSiteWiseAssetModelPropertyIdentifier> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(IotSiteWiseInputIdentifierIotSiteWiseAssetModelPropertyIdentifier.class));

       return (TypeAdapter<T>) new TypeAdapter<IotSiteWiseInputIdentifierIotSiteWiseAssetModelPropertyIdentifier>() {
           @Override
           public void write(JsonWriter out, IotSiteWiseInputIdentifierIotSiteWiseAssetModelPropertyIdentifier value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public IotSiteWiseInputIdentifierIotSiteWiseAssetModelPropertyIdentifier read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of IotSiteWiseInputIdentifierIotSiteWiseAssetModelPropertyIdentifier given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of IotSiteWiseInputIdentifierIotSiteWiseAssetModelPropertyIdentifier
   * @throws IOException if the JSON string is invalid with respect to IotSiteWiseInputIdentifierIotSiteWiseAssetModelPropertyIdentifier
   */
  public static IotSiteWiseInputIdentifierIotSiteWiseAssetModelPropertyIdentifier fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, IotSiteWiseInputIdentifierIotSiteWiseAssetModelPropertyIdentifier.class);
  }

  /**
   * Convert an instance of IotSiteWiseInputIdentifierIotSiteWiseAssetModelPropertyIdentifier to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

