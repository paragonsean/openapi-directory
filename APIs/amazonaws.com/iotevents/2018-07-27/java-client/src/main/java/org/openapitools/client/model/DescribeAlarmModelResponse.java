/*
 * AWS IoT Events
 * AWS IoT Events monitors your equipment or device fleets for failures or changes in operation, and triggers actions when such events occur. You can use AWS IoT Events API operations to create, read, update, and delete inputs and detector models, and to list their versions.
 *
 * The version of the OpenAPI document: 2018-07-27
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.time.OffsetDateTime;
import java.util.Arrays;
import org.openapitools.client.model.AlarmModelVersionStatus;
import org.openapitools.client.model.DescribeAlarmModelResponseAlarmCapabilities;
import org.openapitools.client.model.DescribeAlarmModelResponseAlarmEventActions;
import org.openapitools.client.model.DescribeAlarmModelResponseAlarmNotification;
import org.openapitools.client.model.DescribeAlarmModelResponseAlarmRule;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * DescribeAlarmModelResponse
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T12:08:22.271290-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class DescribeAlarmModelResponse {
  public static final String SERIALIZED_NAME_CREATION_TIME = "creationTime";
  @SerializedName(SERIALIZED_NAME_CREATION_TIME)
  private OffsetDateTime creationTime;

  public static final String SERIALIZED_NAME_ALARM_MODEL_ARN = "alarmModelArn";
  @SerializedName(SERIALIZED_NAME_ALARM_MODEL_ARN)
  private String alarmModelArn;

  public static final String SERIALIZED_NAME_ALARM_MODEL_VERSION = "alarmModelVersion";
  @SerializedName(SERIALIZED_NAME_ALARM_MODEL_VERSION)
  private String alarmModelVersion;

  public static final String SERIALIZED_NAME_LAST_UPDATE_TIME = "lastUpdateTime";
  @SerializedName(SERIALIZED_NAME_LAST_UPDATE_TIME)
  private OffsetDateTime lastUpdateTime;

  public static final String SERIALIZED_NAME_STATUS = "status";
  @SerializedName(SERIALIZED_NAME_STATUS)
  private AlarmModelVersionStatus status;

  public static final String SERIALIZED_NAME_STATUS_MESSAGE = "statusMessage";
  @SerializedName(SERIALIZED_NAME_STATUS_MESSAGE)
  private String statusMessage;

  public static final String SERIALIZED_NAME_ALARM_MODEL_NAME = "alarmModelName";
  @SerializedName(SERIALIZED_NAME_ALARM_MODEL_NAME)
  private String alarmModelName;

  public static final String SERIALIZED_NAME_ALARM_MODEL_DESCRIPTION = "alarmModelDescription";
  @SerializedName(SERIALIZED_NAME_ALARM_MODEL_DESCRIPTION)
  private String alarmModelDescription;

  public static final String SERIALIZED_NAME_ROLE_ARN = "roleArn";
  @SerializedName(SERIALIZED_NAME_ROLE_ARN)
  private String roleArn;

  public static final String SERIALIZED_NAME_KEY = "key";
  @SerializedName(SERIALIZED_NAME_KEY)
  private String key;

  public static final String SERIALIZED_NAME_SEVERITY = "severity";
  @SerializedName(SERIALIZED_NAME_SEVERITY)
  private Integer severity;

  public static final String SERIALIZED_NAME_ALARM_RULE = "alarmRule";
  @SerializedName(SERIALIZED_NAME_ALARM_RULE)
  private DescribeAlarmModelResponseAlarmRule alarmRule;

  public static final String SERIALIZED_NAME_ALARM_NOTIFICATION = "alarmNotification";
  @SerializedName(SERIALIZED_NAME_ALARM_NOTIFICATION)
  private DescribeAlarmModelResponseAlarmNotification alarmNotification;

  public static final String SERIALIZED_NAME_ALARM_EVENT_ACTIONS = "alarmEventActions";
  @SerializedName(SERIALIZED_NAME_ALARM_EVENT_ACTIONS)
  private DescribeAlarmModelResponseAlarmEventActions alarmEventActions;

  public static final String SERIALIZED_NAME_ALARM_CAPABILITIES = "alarmCapabilities";
  @SerializedName(SERIALIZED_NAME_ALARM_CAPABILITIES)
  private DescribeAlarmModelResponseAlarmCapabilities alarmCapabilities;

  public DescribeAlarmModelResponse() {
  }

  public DescribeAlarmModelResponse creationTime(OffsetDateTime creationTime) {
    this.creationTime = creationTime;
    return this;
  }

  /**
   * Get creationTime
   * @return creationTime
   */
  @javax.annotation.Nullable
  public OffsetDateTime getCreationTime() {
    return creationTime;
  }

  public void setCreationTime(OffsetDateTime creationTime) {
    this.creationTime = creationTime;
  }


  public DescribeAlarmModelResponse alarmModelArn(String alarmModelArn) {
    this.alarmModelArn = alarmModelArn;
    return this;
  }

  /**
   * Get alarmModelArn
   * @return alarmModelArn
   */
  @javax.annotation.Nullable
  public String getAlarmModelArn() {
    return alarmModelArn;
  }

  public void setAlarmModelArn(String alarmModelArn) {
    this.alarmModelArn = alarmModelArn;
  }


  public DescribeAlarmModelResponse alarmModelVersion(String alarmModelVersion) {
    this.alarmModelVersion = alarmModelVersion;
    return this;
  }

  /**
   * Get alarmModelVersion
   * @return alarmModelVersion
   */
  @javax.annotation.Nullable
  public String getAlarmModelVersion() {
    return alarmModelVersion;
  }

  public void setAlarmModelVersion(String alarmModelVersion) {
    this.alarmModelVersion = alarmModelVersion;
  }


  public DescribeAlarmModelResponse lastUpdateTime(OffsetDateTime lastUpdateTime) {
    this.lastUpdateTime = lastUpdateTime;
    return this;
  }

  /**
   * Get lastUpdateTime
   * @return lastUpdateTime
   */
  @javax.annotation.Nullable
  public OffsetDateTime getLastUpdateTime() {
    return lastUpdateTime;
  }

  public void setLastUpdateTime(OffsetDateTime lastUpdateTime) {
    this.lastUpdateTime = lastUpdateTime;
  }


  public DescribeAlarmModelResponse status(AlarmModelVersionStatus status) {
    this.status = status;
    return this;
  }

  /**
   * Get status
   * @return status
   */
  @javax.annotation.Nullable
  public AlarmModelVersionStatus getStatus() {
    return status;
  }

  public void setStatus(AlarmModelVersionStatus status) {
    this.status = status;
  }


  public DescribeAlarmModelResponse statusMessage(String statusMessage) {
    this.statusMessage = statusMessage;
    return this;
  }

  /**
   * Get statusMessage
   * @return statusMessage
   */
  @javax.annotation.Nullable
  public String getStatusMessage() {
    return statusMessage;
  }

  public void setStatusMessage(String statusMessage) {
    this.statusMessage = statusMessage;
  }


  public DescribeAlarmModelResponse alarmModelName(String alarmModelName) {
    this.alarmModelName = alarmModelName;
    return this;
  }

  /**
   * Get alarmModelName
   * @return alarmModelName
   */
  @javax.annotation.Nullable
  public String getAlarmModelName() {
    return alarmModelName;
  }

  public void setAlarmModelName(String alarmModelName) {
    this.alarmModelName = alarmModelName;
  }


  public DescribeAlarmModelResponse alarmModelDescription(String alarmModelDescription) {
    this.alarmModelDescription = alarmModelDescription;
    return this;
  }

  /**
   * Get alarmModelDescription
   * @return alarmModelDescription
   */
  @javax.annotation.Nullable
  public String getAlarmModelDescription() {
    return alarmModelDescription;
  }

  public void setAlarmModelDescription(String alarmModelDescription) {
    this.alarmModelDescription = alarmModelDescription;
  }


  public DescribeAlarmModelResponse roleArn(String roleArn) {
    this.roleArn = roleArn;
    return this;
  }

  /**
   * Get roleArn
   * @return roleArn
   */
  @javax.annotation.Nullable
  public String getRoleArn() {
    return roleArn;
  }

  public void setRoleArn(String roleArn) {
    this.roleArn = roleArn;
  }


  public DescribeAlarmModelResponse key(String key) {
    this.key = key;
    return this;
  }

  /**
   * Get key
   * @return key
   */
  @javax.annotation.Nullable
  public String getKey() {
    return key;
  }

  public void setKey(String key) {
    this.key = key;
  }


  public DescribeAlarmModelResponse severity(Integer severity) {
    this.severity = severity;
    return this;
  }

  /**
   * Get severity
   * @return severity
   */
  @javax.annotation.Nullable
  public Integer getSeverity() {
    return severity;
  }

  public void setSeverity(Integer severity) {
    this.severity = severity;
  }


  public DescribeAlarmModelResponse alarmRule(DescribeAlarmModelResponseAlarmRule alarmRule) {
    this.alarmRule = alarmRule;
    return this;
  }

  /**
   * Get alarmRule
   * @return alarmRule
   */
  @javax.annotation.Nullable
  public DescribeAlarmModelResponseAlarmRule getAlarmRule() {
    return alarmRule;
  }

  public void setAlarmRule(DescribeAlarmModelResponseAlarmRule alarmRule) {
    this.alarmRule = alarmRule;
  }


  public DescribeAlarmModelResponse alarmNotification(DescribeAlarmModelResponseAlarmNotification alarmNotification) {
    this.alarmNotification = alarmNotification;
    return this;
  }

  /**
   * Get alarmNotification
   * @return alarmNotification
   */
  @javax.annotation.Nullable
  public DescribeAlarmModelResponseAlarmNotification getAlarmNotification() {
    return alarmNotification;
  }

  public void setAlarmNotification(DescribeAlarmModelResponseAlarmNotification alarmNotification) {
    this.alarmNotification = alarmNotification;
  }


  public DescribeAlarmModelResponse alarmEventActions(DescribeAlarmModelResponseAlarmEventActions alarmEventActions) {
    this.alarmEventActions = alarmEventActions;
    return this;
  }

  /**
   * Get alarmEventActions
   * @return alarmEventActions
   */
  @javax.annotation.Nullable
  public DescribeAlarmModelResponseAlarmEventActions getAlarmEventActions() {
    return alarmEventActions;
  }

  public void setAlarmEventActions(DescribeAlarmModelResponseAlarmEventActions alarmEventActions) {
    this.alarmEventActions = alarmEventActions;
  }


  public DescribeAlarmModelResponse alarmCapabilities(DescribeAlarmModelResponseAlarmCapabilities alarmCapabilities) {
    this.alarmCapabilities = alarmCapabilities;
    return this;
  }

  /**
   * Get alarmCapabilities
   * @return alarmCapabilities
   */
  @javax.annotation.Nullable
  public DescribeAlarmModelResponseAlarmCapabilities getAlarmCapabilities() {
    return alarmCapabilities;
  }

  public void setAlarmCapabilities(DescribeAlarmModelResponseAlarmCapabilities alarmCapabilities) {
    this.alarmCapabilities = alarmCapabilities;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    DescribeAlarmModelResponse describeAlarmModelResponse = (DescribeAlarmModelResponse) o;
    return Objects.equals(this.creationTime, describeAlarmModelResponse.creationTime) &&
        Objects.equals(this.alarmModelArn, describeAlarmModelResponse.alarmModelArn) &&
        Objects.equals(this.alarmModelVersion, describeAlarmModelResponse.alarmModelVersion) &&
        Objects.equals(this.lastUpdateTime, describeAlarmModelResponse.lastUpdateTime) &&
        Objects.equals(this.status, describeAlarmModelResponse.status) &&
        Objects.equals(this.statusMessage, describeAlarmModelResponse.statusMessage) &&
        Objects.equals(this.alarmModelName, describeAlarmModelResponse.alarmModelName) &&
        Objects.equals(this.alarmModelDescription, describeAlarmModelResponse.alarmModelDescription) &&
        Objects.equals(this.roleArn, describeAlarmModelResponse.roleArn) &&
        Objects.equals(this.key, describeAlarmModelResponse.key) &&
        Objects.equals(this.severity, describeAlarmModelResponse.severity) &&
        Objects.equals(this.alarmRule, describeAlarmModelResponse.alarmRule) &&
        Objects.equals(this.alarmNotification, describeAlarmModelResponse.alarmNotification) &&
        Objects.equals(this.alarmEventActions, describeAlarmModelResponse.alarmEventActions) &&
        Objects.equals(this.alarmCapabilities, describeAlarmModelResponse.alarmCapabilities);
  }

  @Override
  public int hashCode() {
    return Objects.hash(creationTime, alarmModelArn, alarmModelVersion, lastUpdateTime, status, statusMessage, alarmModelName, alarmModelDescription, roleArn, key, severity, alarmRule, alarmNotification, alarmEventActions, alarmCapabilities);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class DescribeAlarmModelResponse {\n");
    sb.append("    creationTime: ").append(toIndentedString(creationTime)).append("\n");
    sb.append("    alarmModelArn: ").append(toIndentedString(alarmModelArn)).append("\n");
    sb.append("    alarmModelVersion: ").append(toIndentedString(alarmModelVersion)).append("\n");
    sb.append("    lastUpdateTime: ").append(toIndentedString(lastUpdateTime)).append("\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("    statusMessage: ").append(toIndentedString(statusMessage)).append("\n");
    sb.append("    alarmModelName: ").append(toIndentedString(alarmModelName)).append("\n");
    sb.append("    alarmModelDescription: ").append(toIndentedString(alarmModelDescription)).append("\n");
    sb.append("    roleArn: ").append(toIndentedString(roleArn)).append("\n");
    sb.append("    key: ").append(toIndentedString(key)).append("\n");
    sb.append("    severity: ").append(toIndentedString(severity)).append("\n");
    sb.append("    alarmRule: ").append(toIndentedString(alarmRule)).append("\n");
    sb.append("    alarmNotification: ").append(toIndentedString(alarmNotification)).append("\n");
    sb.append("    alarmEventActions: ").append(toIndentedString(alarmEventActions)).append("\n");
    sb.append("    alarmCapabilities: ").append(toIndentedString(alarmCapabilities)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("creationTime");
    openapiFields.add("alarmModelArn");
    openapiFields.add("alarmModelVersion");
    openapiFields.add("lastUpdateTime");
    openapiFields.add("status");
    openapiFields.add("statusMessage");
    openapiFields.add("alarmModelName");
    openapiFields.add("alarmModelDescription");
    openapiFields.add("roleArn");
    openapiFields.add("key");
    openapiFields.add("severity");
    openapiFields.add("alarmRule");
    openapiFields.add("alarmNotification");
    openapiFields.add("alarmEventActions");
    openapiFields.add("alarmCapabilities");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to DescribeAlarmModelResponse
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!DescribeAlarmModelResponse.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in DescribeAlarmModelResponse is not found in the empty JSON string", DescribeAlarmModelResponse.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!DescribeAlarmModelResponse.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `DescribeAlarmModelResponse` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // validate the optional field `creationTime`
      if (jsonObj.get("creationTime") != null && !jsonObj.get("creationTime").isJsonNull()) {
        OffsetDateTime.validateJsonElement(jsonObj.get("creationTime"));
      }
      // validate the optional field `alarmModelArn`
      if (jsonObj.get("alarmModelArn") != null && !jsonObj.get("alarmModelArn").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("alarmModelArn"));
      }
      // validate the optional field `alarmModelVersion`
      if (jsonObj.get("alarmModelVersion") != null && !jsonObj.get("alarmModelVersion").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("alarmModelVersion"));
      }
      // validate the optional field `lastUpdateTime`
      if (jsonObj.get("lastUpdateTime") != null && !jsonObj.get("lastUpdateTime").isJsonNull()) {
        OffsetDateTime.validateJsonElement(jsonObj.get("lastUpdateTime"));
      }
      // validate the optional field `status`
      if (jsonObj.get("status") != null && !jsonObj.get("status").isJsonNull()) {
        AlarmModelVersionStatus.validateJsonElement(jsonObj.get("status"));
      }
      // validate the optional field `statusMessage`
      if (jsonObj.get("statusMessage") != null && !jsonObj.get("statusMessage").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("statusMessage"));
      }
      // validate the optional field `alarmModelName`
      if (jsonObj.get("alarmModelName") != null && !jsonObj.get("alarmModelName").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("alarmModelName"));
      }
      // validate the optional field `alarmModelDescription`
      if (jsonObj.get("alarmModelDescription") != null && !jsonObj.get("alarmModelDescription").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("alarmModelDescription"));
      }
      // validate the optional field `roleArn`
      if (jsonObj.get("roleArn") != null && !jsonObj.get("roleArn").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("roleArn"));
      }
      // validate the optional field `key`
      if (jsonObj.get("key") != null && !jsonObj.get("key").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("key"));
      }
      // validate the optional field `severity`
      if (jsonObj.get("severity") != null && !jsonObj.get("severity").isJsonNull()) {
        Integer.validateJsonElement(jsonObj.get("severity"));
      }
      // validate the optional field `alarmRule`
      if (jsonObj.get("alarmRule") != null && !jsonObj.get("alarmRule").isJsonNull()) {
        DescribeAlarmModelResponseAlarmRule.validateJsonElement(jsonObj.get("alarmRule"));
      }
      // validate the optional field `alarmNotification`
      if (jsonObj.get("alarmNotification") != null && !jsonObj.get("alarmNotification").isJsonNull()) {
        DescribeAlarmModelResponseAlarmNotification.validateJsonElement(jsonObj.get("alarmNotification"));
      }
      // validate the optional field `alarmEventActions`
      if (jsonObj.get("alarmEventActions") != null && !jsonObj.get("alarmEventActions").isJsonNull()) {
        DescribeAlarmModelResponseAlarmEventActions.validateJsonElement(jsonObj.get("alarmEventActions"));
      }
      // validate the optional field `alarmCapabilities`
      if (jsonObj.get("alarmCapabilities") != null && !jsonObj.get("alarmCapabilities").isJsonNull()) {
        DescribeAlarmModelResponseAlarmCapabilities.validateJsonElement(jsonObj.get("alarmCapabilities"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!DescribeAlarmModelResponse.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'DescribeAlarmModelResponse' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<DescribeAlarmModelResponse> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(DescribeAlarmModelResponse.class));

       return (TypeAdapter<T>) new TypeAdapter<DescribeAlarmModelResponse>() {
           @Override
           public void write(JsonWriter out, DescribeAlarmModelResponse value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public DescribeAlarmModelResponse read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of DescribeAlarmModelResponse given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of DescribeAlarmModelResponse
   * @throws IOException if the JSON string is invalid with respect to DescribeAlarmModelResponse
   */
  public static DescribeAlarmModelResponse fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, DescribeAlarmModelResponse.class);
  }

  /**
   * Convert an instance of DescribeAlarmModelResponse to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

