/**
 * AWS IoT Events
 * AWS IoT Events monitors your equipment or device fleets for failures or changes in operation, and triggers actions when such events occur. You can use AWS IoT Events API operations to create, read, update, and delete inputs and detector models, and to list their versions.
 *
 * The version of the OpenAPI document: 2018-07-27
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import ActionClearTimer from './ActionClearTimer';
import ActionDynamoDB from './ActionDynamoDB';
import ActionDynamoDBv2 from './ActionDynamoDBv2';
import ActionFirehose from './ActionFirehose';
import ActionIotEvents from './ActionIotEvents';
import ActionIotSiteWise from './ActionIotSiteWise';
import ActionIotTopicPublish from './ActionIotTopicPublish';
import ActionLambda from './ActionLambda';
import ActionResetTimer from './ActionResetTimer';
import ActionSetTimer from './ActionSetTimer';
import ActionSetVariable from './ActionSetVariable';
import ActionSns from './ActionSns';
import ActionSqs from './ActionSqs';

/**
 * The Action model module.
 * @module model/Action
 * @version 2018-07-27
 */
class Action {
    /**
     * Constructs a new <code>Action</code>.
     * An action to be performed when the &lt;code&gt;condition&lt;/code&gt; is TRUE.
     * @alias module:model/Action
     */
    constructor() { 
        
        Action.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>Action</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/Action} obj Optional instance to populate.
     * @return {module:model/Action} The populated <code>Action</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new Action();

            if (data.hasOwnProperty('setVariable')) {
                obj['setVariable'] = ActionSetVariable.constructFromObject(data['setVariable']);
            }
            if (data.hasOwnProperty('sns')) {
                obj['sns'] = ActionSns.constructFromObject(data['sns']);
            }
            if (data.hasOwnProperty('iotTopicPublish')) {
                obj['iotTopicPublish'] = ActionIotTopicPublish.constructFromObject(data['iotTopicPublish']);
            }
            if (data.hasOwnProperty('setTimer')) {
                obj['setTimer'] = ActionSetTimer.constructFromObject(data['setTimer']);
            }
            if (data.hasOwnProperty('clearTimer')) {
                obj['clearTimer'] = ActionClearTimer.constructFromObject(data['clearTimer']);
            }
            if (data.hasOwnProperty('resetTimer')) {
                obj['resetTimer'] = ActionResetTimer.constructFromObject(data['resetTimer']);
            }
            if (data.hasOwnProperty('lambda')) {
                obj['lambda'] = ActionLambda.constructFromObject(data['lambda']);
            }
            if (data.hasOwnProperty('iotEvents')) {
                obj['iotEvents'] = ActionIotEvents.constructFromObject(data['iotEvents']);
            }
            if (data.hasOwnProperty('sqs')) {
                obj['sqs'] = ActionSqs.constructFromObject(data['sqs']);
            }
            if (data.hasOwnProperty('firehose')) {
                obj['firehose'] = ActionFirehose.constructFromObject(data['firehose']);
            }
            if (data.hasOwnProperty('dynamoDB')) {
                obj['dynamoDB'] = ActionDynamoDB.constructFromObject(data['dynamoDB']);
            }
            if (data.hasOwnProperty('dynamoDBv2')) {
                obj['dynamoDBv2'] = ActionDynamoDBv2.constructFromObject(data['dynamoDBv2']);
            }
            if (data.hasOwnProperty('iotSiteWise')) {
                obj['iotSiteWise'] = ActionIotSiteWise.constructFromObject(data['iotSiteWise']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>Action</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>Action</code>.
     */
    static validateJSON(data) {
        // validate the optional field `setVariable`
        if (data['setVariable']) { // data not null
          ActionSetVariable.validateJSON(data['setVariable']);
        }
        // validate the optional field `sns`
        if (data['sns']) { // data not null
          ActionSns.validateJSON(data['sns']);
        }
        // validate the optional field `iotTopicPublish`
        if (data['iotTopicPublish']) { // data not null
          ActionIotTopicPublish.validateJSON(data['iotTopicPublish']);
        }
        // validate the optional field `setTimer`
        if (data['setTimer']) { // data not null
          ActionSetTimer.validateJSON(data['setTimer']);
        }
        // validate the optional field `clearTimer`
        if (data['clearTimer']) { // data not null
          ActionClearTimer.validateJSON(data['clearTimer']);
        }
        // validate the optional field `resetTimer`
        if (data['resetTimer']) { // data not null
          ActionResetTimer.validateJSON(data['resetTimer']);
        }
        // validate the optional field `lambda`
        if (data['lambda']) { // data not null
          ActionLambda.validateJSON(data['lambda']);
        }
        // validate the optional field `iotEvents`
        if (data['iotEvents']) { // data not null
          ActionIotEvents.validateJSON(data['iotEvents']);
        }
        // validate the optional field `sqs`
        if (data['sqs']) { // data not null
          ActionSqs.validateJSON(data['sqs']);
        }
        // validate the optional field `firehose`
        if (data['firehose']) { // data not null
          ActionFirehose.validateJSON(data['firehose']);
        }
        // validate the optional field `dynamoDB`
        if (data['dynamoDB']) { // data not null
          ActionDynamoDB.validateJSON(data['dynamoDB']);
        }
        // validate the optional field `dynamoDBv2`
        if (data['dynamoDBv2']) { // data not null
          ActionDynamoDBv2.validateJSON(data['dynamoDBv2']);
        }
        // validate the optional field `iotSiteWise`
        if (data['iotSiteWise']) { // data not null
          ActionIotSiteWise.validateJSON(data['iotSiteWise']);
        }

        return true;
    }


}



/**
 * @member {module:model/ActionSetVariable} setVariable
 */
Action.prototype['setVariable'] = undefined;

/**
 * @member {module:model/ActionSns} sns
 */
Action.prototype['sns'] = undefined;

/**
 * @member {module:model/ActionIotTopicPublish} iotTopicPublish
 */
Action.prototype['iotTopicPublish'] = undefined;

/**
 * @member {module:model/ActionSetTimer} setTimer
 */
Action.prototype['setTimer'] = undefined;

/**
 * @member {module:model/ActionClearTimer} clearTimer
 */
Action.prototype['clearTimer'] = undefined;

/**
 * @member {module:model/ActionResetTimer} resetTimer
 */
Action.prototype['resetTimer'] = undefined;

/**
 * @member {module:model/ActionLambda} lambda
 */
Action.prototype['lambda'] = undefined;

/**
 * @member {module:model/ActionIotEvents} iotEvents
 */
Action.prototype['iotEvents'] = undefined;

/**
 * @member {module:model/ActionSqs} sqs
 */
Action.prototype['sqs'] = undefined;

/**
 * @member {module:model/ActionFirehose} firehose
 */
Action.prototype['firehose'] = undefined;

/**
 * @member {module:model/ActionDynamoDB} dynamoDB
 */
Action.prototype['dynamoDB'] = undefined;

/**
 * @member {module:model/ActionDynamoDBv2} dynamoDBv2
 */
Action.prototype['dynamoDBv2'] = undefined;

/**
 * @member {module:model/ActionIotSiteWise} iotSiteWise
 */
Action.prototype['iotSiteWise'] = undefined;






export default Action;

