/**
 * AWS IoT Events
 * AWS IoT Events monitors your equipment or device fleets for failures or changes in operation, and triggers actions when such events occur. You can use AWS IoT Events API operations to create, read, update, and delete inputs and detector models, and to list their versions.
 *
 * The version of the OpenAPI document: 2018-07-27
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.AwsIoTEvents);
  }
}(this, function(expect, AwsIoTEvents) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new AwsIoTEvents.CreateDetectorModelRequestDetectorModelDefinition();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('CreateDetectorModelRequestDetectorModelDefinition', function() {
    it('should create an instance of CreateDetectorModelRequestDetectorModelDefinition', function() {
      // uncomment below and update the code to test CreateDetectorModelRequestDetectorModelDefinition
      //var instance = new AwsIoTEvents.CreateDetectorModelRequestDetectorModelDefinition();
      //expect(instance).to.be.a(AwsIoTEvents.CreateDetectorModelRequestDetectorModelDefinition);
    });

    it('should have the property states (base name: "states")', function() {
      // uncomment below and update the code to test the property states
      //var instance = new AwsIoTEvents.CreateDetectorModelRequestDetectorModelDefinition();
      //expect(instance).to.be();
    });

    it('should have the property initialStateName (base name: "initialStateName")', function() {
      // uncomment below and update the code to test the property initialStateName
      //var instance = new AwsIoTEvents.CreateDetectorModelRequestDetectorModelDefinition();
      //expect(instance).to.be();
    });

  });

}));
