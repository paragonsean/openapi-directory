/**
 * AWS IoT Events
 * AWS IoT Events monitors your equipment or device fleets for failures or changes in operation, and triggers actions when such events occur. You can use AWS IoT Events API operations to create, read, update, and delete inputs and detector models, and to list their versions.
 *
 * The version of the OpenAPI document: 2018-07-27
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.AwsIoTEvents);
  }
}(this, function(expect, AwsIoTEvents) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new AwsIoTEvents.DefaultApi();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('DefaultApi', function() {
    describe('createAlarmModel', function() {
      it('should call createAlarmModel successfully', function(done) {
        //uncomment below and update the code to test createAlarmModel
        //instance.createAlarmModel(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('createDetectorModel', function() {
      it('should call createDetectorModel successfully', function(done) {
        //uncomment below and update the code to test createDetectorModel
        //instance.createDetectorModel(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('createInput', function() {
      it('should call createInput successfully', function(done) {
        //uncomment below and update the code to test createInput
        //instance.createInput(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deleteAlarmModel', function() {
      it('should call deleteAlarmModel successfully', function(done) {
        //uncomment below and update the code to test deleteAlarmModel
        //instance.deleteAlarmModel(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deleteDetectorModel', function() {
      it('should call deleteDetectorModel successfully', function(done) {
        //uncomment below and update the code to test deleteDetectorModel
        //instance.deleteDetectorModel(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deleteInput', function() {
      it('should call deleteInput successfully', function(done) {
        //uncomment below and update the code to test deleteInput
        //instance.deleteInput(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('describeAlarmModel', function() {
      it('should call describeAlarmModel successfully', function(done) {
        //uncomment below and update the code to test describeAlarmModel
        //instance.describeAlarmModel(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('describeDetectorModel', function() {
      it('should call describeDetectorModel successfully', function(done) {
        //uncomment below and update the code to test describeDetectorModel
        //instance.describeDetectorModel(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('describeDetectorModelAnalysis', function() {
      it('should call describeDetectorModelAnalysis successfully', function(done) {
        //uncomment below and update the code to test describeDetectorModelAnalysis
        //instance.describeDetectorModelAnalysis(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('describeInput', function() {
      it('should call describeInput successfully', function(done) {
        //uncomment below and update the code to test describeInput
        //instance.describeInput(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('describeLoggingOptions', function() {
      it('should call describeLoggingOptions successfully', function(done) {
        //uncomment below and update the code to test describeLoggingOptions
        //instance.describeLoggingOptions(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getDetectorModelAnalysisResults', function() {
      it('should call getDetectorModelAnalysisResults successfully', function(done) {
        //uncomment below and update the code to test getDetectorModelAnalysisResults
        //instance.getDetectorModelAnalysisResults(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('listAlarmModelVersions', function() {
      it('should call listAlarmModelVersions successfully', function(done) {
        //uncomment below and update the code to test listAlarmModelVersions
        //instance.listAlarmModelVersions(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('listAlarmModels', function() {
      it('should call listAlarmModels successfully', function(done) {
        //uncomment below and update the code to test listAlarmModels
        //instance.listAlarmModels(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('listDetectorModelVersions', function() {
      it('should call listDetectorModelVersions successfully', function(done) {
        //uncomment below and update the code to test listDetectorModelVersions
        //instance.listDetectorModelVersions(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('listDetectorModels', function() {
      it('should call listDetectorModels successfully', function(done) {
        //uncomment below and update the code to test listDetectorModels
        //instance.listDetectorModels(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('listInputRoutings', function() {
      it('should call listInputRoutings successfully', function(done) {
        //uncomment below and update the code to test listInputRoutings
        //instance.listInputRoutings(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('listInputs', function() {
      it('should call listInputs successfully', function(done) {
        //uncomment below and update the code to test listInputs
        //instance.listInputs(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('listTagsForResource', function() {
      it('should call listTagsForResource successfully', function(done) {
        //uncomment below and update the code to test listTagsForResource
        //instance.listTagsForResource(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('putLoggingOptions', function() {
      it('should call putLoggingOptions successfully', function(done) {
        //uncomment below and update the code to test putLoggingOptions
        //instance.putLoggingOptions(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('startDetectorModelAnalysis', function() {
      it('should call startDetectorModelAnalysis successfully', function(done) {
        //uncomment below and update the code to test startDetectorModelAnalysis
        //instance.startDetectorModelAnalysis(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('tagResource', function() {
      it('should call tagResource successfully', function(done) {
        //uncomment below and update the code to test tagResource
        //instance.tagResource(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('untagResource', function() {
      it('should call untagResource successfully', function(done) {
        //uncomment below and update the code to test untagResource
        //instance.untagResource(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('updateAlarmModel', function() {
      it('should call updateAlarmModel successfully', function(done) {
        //uncomment below and update the code to test updateAlarmModel
        //instance.updateAlarmModel(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('updateDetectorModel', function() {
      it('should call updateDetectorModel successfully', function(done) {
        //uncomment below and update the code to test updateDetectorModel
        //instance.updateDetectorModel(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('updateInput', function() {
      it('should call updateInput successfully', function(done) {
        //uncomment below and update the code to test updateInput
        //instance.updateInput(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
  });

}));
