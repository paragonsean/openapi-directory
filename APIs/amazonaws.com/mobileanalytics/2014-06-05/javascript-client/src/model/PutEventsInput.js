/**
 * Amazon Mobile Analytics
 * Amazon Mobile Analytics is a service for collecting, visualizing, and understanding app usage data at scale.
 *
 * The version of the OpenAPI document: 2014-06-05
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The PutEventsInput model module.
 * @module model/PutEventsInput
 * @version 2014-06-05
 */
class PutEventsInput {
    /**
     * Constructs a new <code>PutEventsInput</code>.
     * A container for the data needed for a PutEvent operation
     * @alias module:model/PutEventsInput
     * @param events {Array} 
     */
    constructor(events) { 
        
        PutEventsInput.initialize(this, events);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, events) { 
        obj['events'] = events;
    }

    /**
     * Constructs a <code>PutEventsInput</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/PutEventsInput} obj Optional instance to populate.
     * @return {module:model/PutEventsInput} The populated <code>PutEventsInput</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new PutEventsInput();

            if (data.hasOwnProperty('events')) {
                obj['events'] = ApiClient.convertToType(data['events'], Array);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>PutEventsInput</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>PutEventsInput</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of PutEventsInput.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // validate the optional field `events`
        if (data['events']) { // data not null
          Array.validateJSON(data['events']);
        }

        return true;
    }


}

PutEventsInput.RequiredProperties = ["events"];

/**
 * @member {Array} events
 */
PutEventsInput.prototype['events'] = undefined;






export default PutEventsInput;

