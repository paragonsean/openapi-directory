/**
 * Amazon Mobile Analytics
 * Amazon Mobile Analytics is a service for collecting, visualizing, and understanding app usage data at scale.
 *
 * The version of the OpenAPI document: 2014-06-05
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The Session model module.
 * @module model/Session
 * @version 2014-06-05
 */
class Session {
    /**
     * Constructs a new <code>Session</code>.
     * Describes the session. Session information is required on ALL events.
     * @alias module:model/Session
     */
    constructor() { 
        
        Session.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>Session</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/Session} obj Optional instance to populate.
     * @return {module:model/Session} The populated <code>Session</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new Session();

            if (data.hasOwnProperty('id')) {
                obj['id'] = ApiClient.convertToType(data['id'], 'String');
            }
            if (data.hasOwnProperty('duration')) {
                obj['duration'] = ApiClient.convertToType(data['duration'], 'Number');
            }
            if (data.hasOwnProperty('startTimestamp')) {
                obj['startTimestamp'] = ApiClient.convertToType(data['startTimestamp'], 'String');
            }
            if (data.hasOwnProperty('stopTimestamp')) {
                obj['stopTimestamp'] = ApiClient.convertToType(data['stopTimestamp'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>Session</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>Session</code>.
     */
    static validateJSON(data) {
        // validate the optional field `id`
        if (data['id']) { // data not null
          String.validateJSON(data['id']);
        }
        // validate the optional field `duration`
        if (data['duration']) { // data not null
          Number.validateJSON(data['duration']);
        }
        // validate the optional field `startTimestamp`
        if (data['startTimestamp']) { // data not null
          String.validateJSON(data['startTimestamp']);
        }
        // validate the optional field `stopTimestamp`
        if (data['stopTimestamp']) { // data not null
          String.validateJSON(data['stopTimestamp']);
        }

        return true;
    }


}



/**
 * @member {String} id
 */
Session.prototype['id'] = undefined;

/**
 * @member {Number} duration
 */
Session.prototype['duration'] = undefined;

/**
 * @member {String} startTimestamp
 */
Session.prototype['startTimestamp'] = undefined;

/**
 * @member {String} stopTimestamp
 */
Session.prototype['stopTimestamp'] = undefined;






export default Session;

