# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.dataset_description_dataset_stats import DatasetDescriptionDatasetStats
from openapi_server.models.dataset_status import DatasetStatus
from openapi_server.models.dataset_status_message_code import DatasetStatusMessageCode
from openapi_server import util


class DatasetDescription(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, creation_timestamp: datetime=None, last_updated_timestamp: datetime=None, status: DatasetStatus=None, status_message: str=None, status_message_code: DatasetStatusMessageCode=None, dataset_stats: DatasetDescriptionDatasetStats=None):
        """DatasetDescription - a model defined in OpenAPI

        :param creation_timestamp: The creation_timestamp of this DatasetDescription.
        :param last_updated_timestamp: The last_updated_timestamp of this DatasetDescription.
        :param status: The status of this DatasetDescription.
        :param status_message: The status_message of this DatasetDescription.
        :param status_message_code: The status_message_code of this DatasetDescription.
        :param dataset_stats: The dataset_stats of this DatasetDescription.
        """
        self.openapi_types = {
            'creation_timestamp': datetime,
            'last_updated_timestamp': datetime,
            'status': DatasetStatus,
            'status_message': str,
            'status_message_code': DatasetStatusMessageCode,
            'dataset_stats': DatasetDescriptionDatasetStats
        }

        self.attribute_map = {
            'creation_timestamp': 'CreationTimestamp',
            'last_updated_timestamp': 'LastUpdatedTimestamp',
            'status': 'Status',
            'status_message': 'StatusMessage',
            'status_message_code': 'StatusMessageCode',
            'dataset_stats': 'DatasetStats'
        }

        self._creation_timestamp = creation_timestamp
        self._last_updated_timestamp = last_updated_timestamp
        self._status = status
        self._status_message = status_message
        self._status_message_code = status_message_code
        self._dataset_stats = dataset_stats

    @classmethod
    def from_dict(cls, dikt: dict) -> 'DatasetDescription':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The DatasetDescription of this DatasetDescription.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def creation_timestamp(self):
        """Gets the creation_timestamp of this DatasetDescription.


        :return: The creation_timestamp of this DatasetDescription.
        :rtype: datetime
        """
        return self._creation_timestamp

    @creation_timestamp.setter
    def creation_timestamp(self, creation_timestamp):
        """Sets the creation_timestamp of this DatasetDescription.


        :param creation_timestamp: The creation_timestamp of this DatasetDescription.
        :type creation_timestamp: datetime
        """

        self._creation_timestamp = creation_timestamp

    @property
    def last_updated_timestamp(self):
        """Gets the last_updated_timestamp of this DatasetDescription.


        :return: The last_updated_timestamp of this DatasetDescription.
        :rtype: datetime
        """
        return self._last_updated_timestamp

    @last_updated_timestamp.setter
    def last_updated_timestamp(self, last_updated_timestamp):
        """Sets the last_updated_timestamp of this DatasetDescription.


        :param last_updated_timestamp: The last_updated_timestamp of this DatasetDescription.
        :type last_updated_timestamp: datetime
        """

        self._last_updated_timestamp = last_updated_timestamp

    @property
    def status(self):
        """Gets the status of this DatasetDescription.


        :return: The status of this DatasetDescription.
        :rtype: DatasetStatus
        """
        return self._status

    @status.setter
    def status(self, status):
        """Sets the status of this DatasetDescription.


        :param status: The status of this DatasetDescription.
        :type status: DatasetStatus
        """

        self._status = status

    @property
    def status_message(self):
        """Gets the status_message of this DatasetDescription.


        :return: The status_message of this DatasetDescription.
        :rtype: str
        """
        return self._status_message

    @status_message.setter
    def status_message(self, status_message):
        """Sets the status_message of this DatasetDescription.


        :param status_message: The status_message of this DatasetDescription.
        :type status_message: str
        """

        self._status_message = status_message

    @property
    def status_message_code(self):
        """Gets the status_message_code of this DatasetDescription.


        :return: The status_message_code of this DatasetDescription.
        :rtype: DatasetStatusMessageCode
        """
        return self._status_message_code

    @status_message_code.setter
    def status_message_code(self, status_message_code):
        """Sets the status_message_code of this DatasetDescription.


        :param status_message_code: The status_message_code of this DatasetDescription.
        :type status_message_code: DatasetStatusMessageCode
        """

        self._status_message_code = status_message_code

    @property
    def dataset_stats(self):
        """Gets the dataset_stats of this DatasetDescription.


        :return: The dataset_stats of this DatasetDescription.
        :rtype: DatasetDescriptionDatasetStats
        """
        return self._dataset_stats

    @dataset_stats.setter
    def dataset_stats(self, dataset_stats):
        """Sets the dataset_stats of this DatasetDescription.


        :param dataset_stats: The dataset_stats of this DatasetDescription.
        :type dataset_stats: DatasetDescriptionDatasetStats
        """

        self._dataset_stats = dataset_stats
