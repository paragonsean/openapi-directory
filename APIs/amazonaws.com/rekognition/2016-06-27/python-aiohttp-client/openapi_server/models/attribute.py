# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class Attribute(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    """
    allowed enum values
    """
    DEFAULT = 'DEFAULT'
    ALL = 'ALL'
    AGE_RANGE = 'AGE_RANGE'
    BEARD = 'BEARD'
    EMOTIONS = 'EMOTIONS'
    EYE_DIRECTION = 'EYE_DIRECTION'
    EYEGLASSES = 'EYEGLASSES'
    EYES_OPEN = 'EYES_OPEN'
    GENDER = 'GENDER'
    MOUTH_OPEN = 'MOUTH_OPEN'
    MUSTACHE = 'MUSTACHE'
    FACE_OCCLUDED = 'FACE_OCCLUDED'
    SMILE = 'SMILE'
    SUNGLASSES = 'SUNGLASSES'

    def __init__(self):
        """Attribute - a model defined in OpenAPI

        """
        self.openapi_types = {
        }

        self.attribute_map = {
        }

    @classmethod
    def from_dict(cls, dikt: dict) -> 'Attribute':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Attribute of this Attribute.
        """
        return util.deserialize_model(dikt, cls)
