# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.create_project_version_request_output_config import CreateProjectVersionRequestOutputConfig
from openapi_server.models.create_project_version_request_testing_data import CreateProjectVersionRequestTestingData
from openapi_server.models.create_project_version_request_training_data import CreateProjectVersionRequestTrainingData
from openapi_server import util


class CreateProjectVersionRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, project_arn: str=None, version_name: str=None, output_config: CreateProjectVersionRequestOutputConfig=None, training_data: CreateProjectVersionRequestTrainingData=None, testing_data: CreateProjectVersionRequestTestingData=None, tags: Dict=None, kms_key_id: str=None):
        """CreateProjectVersionRequest - a model defined in OpenAPI

        :param project_arn: The project_arn of this CreateProjectVersionRequest.
        :param version_name: The version_name of this CreateProjectVersionRequest.
        :param output_config: The output_config of this CreateProjectVersionRequest.
        :param training_data: The training_data of this CreateProjectVersionRequest.
        :param testing_data: The testing_data of this CreateProjectVersionRequest.
        :param tags: The tags of this CreateProjectVersionRequest.
        :param kms_key_id: The kms_key_id of this CreateProjectVersionRequest.
        """
        self.openapi_types = {
            'project_arn': str,
            'version_name': str,
            'output_config': CreateProjectVersionRequestOutputConfig,
            'training_data': CreateProjectVersionRequestTrainingData,
            'testing_data': CreateProjectVersionRequestTestingData,
            'tags': Dict,
            'kms_key_id': str
        }

        self.attribute_map = {
            'project_arn': 'ProjectArn',
            'version_name': 'VersionName',
            'output_config': 'OutputConfig',
            'training_data': 'TrainingData',
            'testing_data': 'TestingData',
            'tags': 'Tags',
            'kms_key_id': 'KmsKeyId'
        }

        self._project_arn = project_arn
        self._version_name = version_name
        self._output_config = output_config
        self._training_data = training_data
        self._testing_data = testing_data
        self._tags = tags
        self._kms_key_id = kms_key_id

    @classmethod
    def from_dict(cls, dikt: dict) -> 'CreateProjectVersionRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The CreateProjectVersionRequest of this CreateProjectVersionRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def project_arn(self):
        """Gets the project_arn of this CreateProjectVersionRequest.


        :return: The project_arn of this CreateProjectVersionRequest.
        :rtype: str
        """
        return self._project_arn

    @project_arn.setter
    def project_arn(self, project_arn):
        """Sets the project_arn of this CreateProjectVersionRequest.


        :param project_arn: The project_arn of this CreateProjectVersionRequest.
        :type project_arn: str
        """
        if project_arn is None:
            raise ValueError("Invalid value for `project_arn`, must not be `None`")

        self._project_arn = project_arn

    @property
    def version_name(self):
        """Gets the version_name of this CreateProjectVersionRequest.


        :return: The version_name of this CreateProjectVersionRequest.
        :rtype: str
        """
        return self._version_name

    @version_name.setter
    def version_name(self, version_name):
        """Sets the version_name of this CreateProjectVersionRequest.


        :param version_name: The version_name of this CreateProjectVersionRequest.
        :type version_name: str
        """
        if version_name is None:
            raise ValueError("Invalid value for `version_name`, must not be `None`")

        self._version_name = version_name

    @property
    def output_config(self):
        """Gets the output_config of this CreateProjectVersionRequest.


        :return: The output_config of this CreateProjectVersionRequest.
        :rtype: CreateProjectVersionRequestOutputConfig
        """
        return self._output_config

    @output_config.setter
    def output_config(self, output_config):
        """Sets the output_config of this CreateProjectVersionRequest.


        :param output_config: The output_config of this CreateProjectVersionRequest.
        :type output_config: CreateProjectVersionRequestOutputConfig
        """
        if output_config is None:
            raise ValueError("Invalid value for `output_config`, must not be `None`")

        self._output_config = output_config

    @property
    def training_data(self):
        """Gets the training_data of this CreateProjectVersionRequest.


        :return: The training_data of this CreateProjectVersionRequest.
        :rtype: CreateProjectVersionRequestTrainingData
        """
        return self._training_data

    @training_data.setter
    def training_data(self, training_data):
        """Sets the training_data of this CreateProjectVersionRequest.


        :param training_data: The training_data of this CreateProjectVersionRequest.
        :type training_data: CreateProjectVersionRequestTrainingData
        """

        self._training_data = training_data

    @property
    def testing_data(self):
        """Gets the testing_data of this CreateProjectVersionRequest.


        :return: The testing_data of this CreateProjectVersionRequest.
        :rtype: CreateProjectVersionRequestTestingData
        """
        return self._testing_data

    @testing_data.setter
    def testing_data(self, testing_data):
        """Sets the testing_data of this CreateProjectVersionRequest.


        :param testing_data: The testing_data of this CreateProjectVersionRequest.
        :type testing_data: CreateProjectVersionRequestTestingData
        """

        self._testing_data = testing_data

    @property
    def tags(self):
        """Gets the tags of this CreateProjectVersionRequest.


        :return: The tags of this CreateProjectVersionRequest.
        :rtype: Dict
        """
        return self._tags

    @tags.setter
    def tags(self, tags):
        """Sets the tags of this CreateProjectVersionRequest.


        :param tags: The tags of this CreateProjectVersionRequest.
        :type tags: Dict
        """

        self._tags = tags

    @property
    def kms_key_id(self):
        """Gets the kms_key_id of this CreateProjectVersionRequest.


        :return: The kms_key_id of this CreateProjectVersionRequest.
        :rtype: str
        """
        return self._kms_key_id

    @kms_key_id.setter
    def kms_key_id(self, kms_key_id):
        """Sets the kms_key_id of this CreateProjectVersionRequest.


        :param kms_key_id: The kms_key_id of this CreateProjectVersionRequest.
        :type kms_key_id: str
        """

        self._kms_key_id = kms_key_id
