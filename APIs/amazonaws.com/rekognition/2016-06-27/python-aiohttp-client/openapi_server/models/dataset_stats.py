# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class DatasetStats(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, labeled_entries: int=None, total_entries: int=None, total_labels: int=None, error_entries: int=None):
        """DatasetStats - a model defined in OpenAPI

        :param labeled_entries: The labeled_entries of this DatasetStats.
        :param total_entries: The total_entries of this DatasetStats.
        :param total_labels: The total_labels of this DatasetStats.
        :param error_entries: The error_entries of this DatasetStats.
        """
        self.openapi_types = {
            'labeled_entries': int,
            'total_entries': int,
            'total_labels': int,
            'error_entries': int
        }

        self.attribute_map = {
            'labeled_entries': 'LabeledEntries',
            'total_entries': 'TotalEntries',
            'total_labels': 'TotalLabels',
            'error_entries': 'ErrorEntries'
        }

        self._labeled_entries = labeled_entries
        self._total_entries = total_entries
        self._total_labels = total_labels
        self._error_entries = error_entries

    @classmethod
    def from_dict(cls, dikt: dict) -> 'DatasetStats':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The DatasetStats of this DatasetStats.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def labeled_entries(self):
        """Gets the labeled_entries of this DatasetStats.


        :return: The labeled_entries of this DatasetStats.
        :rtype: int
        """
        return self._labeled_entries

    @labeled_entries.setter
    def labeled_entries(self, labeled_entries):
        """Sets the labeled_entries of this DatasetStats.


        :param labeled_entries: The labeled_entries of this DatasetStats.
        :type labeled_entries: int
        """

        self._labeled_entries = labeled_entries

    @property
    def total_entries(self):
        """Gets the total_entries of this DatasetStats.


        :return: The total_entries of this DatasetStats.
        :rtype: int
        """
        return self._total_entries

    @total_entries.setter
    def total_entries(self, total_entries):
        """Sets the total_entries of this DatasetStats.


        :param total_entries: The total_entries of this DatasetStats.
        :type total_entries: int
        """

        self._total_entries = total_entries

    @property
    def total_labels(self):
        """Gets the total_labels of this DatasetStats.


        :return: The total_labels of this DatasetStats.
        :rtype: int
        """
        return self._total_labels

    @total_labels.setter
    def total_labels(self, total_labels):
        """Sets the total_labels of this DatasetStats.


        :param total_labels: The total_labels of this DatasetStats.
        :type total_labels: int
        """

        self._total_labels = total_labels

    @property
    def error_entries(self):
        """Gets the error_entries of this DatasetStats.


        :return: The error_entries of this DatasetStats.
        :rtype: int
        """
        return self._error_entries

    @error_entries.setter
    def error_entries(self, error_entries):
        """Sets the error_entries of this DatasetStats.


        :param error_entries: The error_entries of this DatasetStats.
        :type error_entries: int
        """

        self._error_entries = error_entries
