# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.user_status import UserStatus
from openapi_server import util


class DisassociateFacesResponse(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, disassociated_faces: List=None, unsuccessful_face_disassociations: List=None, user_status: UserStatus=None):
        """DisassociateFacesResponse - a model defined in OpenAPI

        :param disassociated_faces: The disassociated_faces of this DisassociateFacesResponse.
        :param unsuccessful_face_disassociations: The unsuccessful_face_disassociations of this DisassociateFacesResponse.
        :param user_status: The user_status of this DisassociateFacesResponse.
        """
        self.openapi_types = {
            'disassociated_faces': List,
            'unsuccessful_face_disassociations': List,
            'user_status': UserStatus
        }

        self.attribute_map = {
            'disassociated_faces': 'DisassociatedFaces',
            'unsuccessful_face_disassociations': 'UnsuccessfulFaceDisassociations',
            'user_status': 'UserStatus'
        }

        self._disassociated_faces = disassociated_faces
        self._unsuccessful_face_disassociations = unsuccessful_face_disassociations
        self._user_status = user_status

    @classmethod
    def from_dict(cls, dikt: dict) -> 'DisassociateFacesResponse':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The DisassociateFacesResponse of this DisassociateFacesResponse.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def disassociated_faces(self):
        """Gets the disassociated_faces of this DisassociateFacesResponse.


        :return: The disassociated_faces of this DisassociateFacesResponse.
        :rtype: List
        """
        return self._disassociated_faces

    @disassociated_faces.setter
    def disassociated_faces(self, disassociated_faces):
        """Sets the disassociated_faces of this DisassociateFacesResponse.


        :param disassociated_faces: The disassociated_faces of this DisassociateFacesResponse.
        :type disassociated_faces: List
        """

        self._disassociated_faces = disassociated_faces

    @property
    def unsuccessful_face_disassociations(self):
        """Gets the unsuccessful_face_disassociations of this DisassociateFacesResponse.


        :return: The unsuccessful_face_disassociations of this DisassociateFacesResponse.
        :rtype: List
        """
        return self._unsuccessful_face_disassociations

    @unsuccessful_face_disassociations.setter
    def unsuccessful_face_disassociations(self, unsuccessful_face_disassociations):
        """Sets the unsuccessful_face_disassociations of this DisassociateFacesResponse.


        :param unsuccessful_face_disassociations: The unsuccessful_face_disassociations of this DisassociateFacesResponse.
        :type unsuccessful_face_disassociations: List
        """

        self._unsuccessful_face_disassociations = unsuccessful_face_disassociations

    @property
    def user_status(self):
        """Gets the user_status of this DisassociateFacesResponse.


        :return: The user_status of this DisassociateFacesResponse.
        :rtype: UserStatus
        """
        return self._user_status

    @user_status.setter
    def user_status(self, user_status):
        """Sets the user_status of this DisassociateFacesResponse.


        :param user_status: The user_status of this DisassociateFacesResponse.
        :type user_status: UserStatus
        """

        self._user_status = user_status
