# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class ListDatasetEntriesRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, dataset_arn: str=None, contains_labels: List=None, labeled: bool=None, source_ref_contains: str=None, has_errors: bool=None, next_token: str=None, max_results: int=None):
        """ListDatasetEntriesRequest - a model defined in OpenAPI

        :param dataset_arn: The dataset_arn of this ListDatasetEntriesRequest.
        :param contains_labels: The contains_labels of this ListDatasetEntriesRequest.
        :param labeled: The labeled of this ListDatasetEntriesRequest.
        :param source_ref_contains: The source_ref_contains of this ListDatasetEntriesRequest.
        :param has_errors: The has_errors of this ListDatasetEntriesRequest.
        :param next_token: The next_token of this ListDatasetEntriesRequest.
        :param max_results: The max_results of this ListDatasetEntriesRequest.
        """
        self.openapi_types = {
            'dataset_arn': str,
            'contains_labels': List,
            'labeled': bool,
            'source_ref_contains': str,
            'has_errors': bool,
            'next_token': str,
            'max_results': int
        }

        self.attribute_map = {
            'dataset_arn': 'DatasetArn',
            'contains_labels': 'ContainsLabels',
            'labeled': 'Labeled',
            'source_ref_contains': 'SourceRefContains',
            'has_errors': 'HasErrors',
            'next_token': 'NextToken',
            'max_results': 'MaxResults'
        }

        self._dataset_arn = dataset_arn
        self._contains_labels = contains_labels
        self._labeled = labeled
        self._source_ref_contains = source_ref_contains
        self._has_errors = has_errors
        self._next_token = next_token
        self._max_results = max_results

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ListDatasetEntriesRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ListDatasetEntriesRequest of this ListDatasetEntriesRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def dataset_arn(self):
        """Gets the dataset_arn of this ListDatasetEntriesRequest.


        :return: The dataset_arn of this ListDatasetEntriesRequest.
        :rtype: str
        """
        return self._dataset_arn

    @dataset_arn.setter
    def dataset_arn(self, dataset_arn):
        """Sets the dataset_arn of this ListDatasetEntriesRequest.


        :param dataset_arn: The dataset_arn of this ListDatasetEntriesRequest.
        :type dataset_arn: str
        """
        if dataset_arn is None:
            raise ValueError("Invalid value for `dataset_arn`, must not be `None`")

        self._dataset_arn = dataset_arn

    @property
    def contains_labels(self):
        """Gets the contains_labels of this ListDatasetEntriesRequest.


        :return: The contains_labels of this ListDatasetEntriesRequest.
        :rtype: List
        """
        return self._contains_labels

    @contains_labels.setter
    def contains_labels(self, contains_labels):
        """Sets the contains_labels of this ListDatasetEntriesRequest.


        :param contains_labels: The contains_labels of this ListDatasetEntriesRequest.
        :type contains_labels: List
        """

        self._contains_labels = contains_labels

    @property
    def labeled(self):
        """Gets the labeled of this ListDatasetEntriesRequest.


        :return: The labeled of this ListDatasetEntriesRequest.
        :rtype: bool
        """
        return self._labeled

    @labeled.setter
    def labeled(self, labeled):
        """Sets the labeled of this ListDatasetEntriesRequest.


        :param labeled: The labeled of this ListDatasetEntriesRequest.
        :type labeled: bool
        """

        self._labeled = labeled

    @property
    def source_ref_contains(self):
        """Gets the source_ref_contains of this ListDatasetEntriesRequest.


        :return: The source_ref_contains of this ListDatasetEntriesRequest.
        :rtype: str
        """
        return self._source_ref_contains

    @source_ref_contains.setter
    def source_ref_contains(self, source_ref_contains):
        """Sets the source_ref_contains of this ListDatasetEntriesRequest.


        :param source_ref_contains: The source_ref_contains of this ListDatasetEntriesRequest.
        :type source_ref_contains: str
        """

        self._source_ref_contains = source_ref_contains

    @property
    def has_errors(self):
        """Gets the has_errors of this ListDatasetEntriesRequest.


        :return: The has_errors of this ListDatasetEntriesRequest.
        :rtype: bool
        """
        return self._has_errors

    @has_errors.setter
    def has_errors(self, has_errors):
        """Sets the has_errors of this ListDatasetEntriesRequest.


        :param has_errors: The has_errors of this ListDatasetEntriesRequest.
        :type has_errors: bool
        """

        self._has_errors = has_errors

    @property
    def next_token(self):
        """Gets the next_token of this ListDatasetEntriesRequest.


        :return: The next_token of this ListDatasetEntriesRequest.
        :rtype: str
        """
        return self._next_token

    @next_token.setter
    def next_token(self, next_token):
        """Sets the next_token of this ListDatasetEntriesRequest.


        :param next_token: The next_token of this ListDatasetEntriesRequest.
        :type next_token: str
        """

        self._next_token = next_token

    @property
    def max_results(self):
        """Gets the max_results of this ListDatasetEntriesRequest.


        :return: The max_results of this ListDatasetEntriesRequest.
        :rtype: int
        """
        return self._max_results

    @max_results.setter
    def max_results(self, max_results):
        """Sets the max_results of this ListDatasetEntriesRequest.


        :param max_results: The max_results of this ListDatasetEntriesRequest.
        :type max_results: int
        """

        self._max_results = max_results
