# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.video import Video
from openapi_server.models.video_job_status import VideoJobStatus
from openapi_server import util


class GetSegmentDetectionResponse(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, job_status: VideoJobStatus=None, status_message: str=None, video_metadata: List=None, audio_metadata: List=None, next_token: str=None, segments: List=None, selected_segment_types: List=None, job_id: str=None, video: Video=None, job_tag: str=None):
        """GetSegmentDetectionResponse - a model defined in OpenAPI

        :param job_status: The job_status of this GetSegmentDetectionResponse.
        :param status_message: The status_message of this GetSegmentDetectionResponse.
        :param video_metadata: The video_metadata of this GetSegmentDetectionResponse.
        :param audio_metadata: The audio_metadata of this GetSegmentDetectionResponse.
        :param next_token: The next_token of this GetSegmentDetectionResponse.
        :param segments: The segments of this GetSegmentDetectionResponse.
        :param selected_segment_types: The selected_segment_types of this GetSegmentDetectionResponse.
        :param job_id: The job_id of this GetSegmentDetectionResponse.
        :param video: The video of this GetSegmentDetectionResponse.
        :param job_tag: The job_tag of this GetSegmentDetectionResponse.
        """
        self.openapi_types = {
            'job_status': VideoJobStatus,
            'status_message': str,
            'video_metadata': List,
            'audio_metadata': List,
            'next_token': str,
            'segments': List,
            'selected_segment_types': List,
            'job_id': str,
            'video': Video,
            'job_tag': str
        }

        self.attribute_map = {
            'job_status': 'JobStatus',
            'status_message': 'StatusMessage',
            'video_metadata': 'VideoMetadata',
            'audio_metadata': 'AudioMetadata',
            'next_token': 'NextToken',
            'segments': 'Segments',
            'selected_segment_types': 'SelectedSegmentTypes',
            'job_id': 'JobId',
            'video': 'Video',
            'job_tag': 'JobTag'
        }

        self._job_status = job_status
        self._status_message = status_message
        self._video_metadata = video_metadata
        self._audio_metadata = audio_metadata
        self._next_token = next_token
        self._segments = segments
        self._selected_segment_types = selected_segment_types
        self._job_id = job_id
        self._video = video
        self._job_tag = job_tag

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GetSegmentDetectionResponse':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The GetSegmentDetectionResponse of this GetSegmentDetectionResponse.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def job_status(self):
        """Gets the job_status of this GetSegmentDetectionResponse.


        :return: The job_status of this GetSegmentDetectionResponse.
        :rtype: VideoJobStatus
        """
        return self._job_status

    @job_status.setter
    def job_status(self, job_status):
        """Sets the job_status of this GetSegmentDetectionResponse.


        :param job_status: The job_status of this GetSegmentDetectionResponse.
        :type job_status: VideoJobStatus
        """

        self._job_status = job_status

    @property
    def status_message(self):
        """Gets the status_message of this GetSegmentDetectionResponse.


        :return: The status_message of this GetSegmentDetectionResponse.
        :rtype: str
        """
        return self._status_message

    @status_message.setter
    def status_message(self, status_message):
        """Sets the status_message of this GetSegmentDetectionResponse.


        :param status_message: The status_message of this GetSegmentDetectionResponse.
        :type status_message: str
        """

        self._status_message = status_message

    @property
    def video_metadata(self):
        """Gets the video_metadata of this GetSegmentDetectionResponse.


        :return: The video_metadata of this GetSegmentDetectionResponse.
        :rtype: List
        """
        return self._video_metadata

    @video_metadata.setter
    def video_metadata(self, video_metadata):
        """Sets the video_metadata of this GetSegmentDetectionResponse.


        :param video_metadata: The video_metadata of this GetSegmentDetectionResponse.
        :type video_metadata: List
        """

        self._video_metadata = video_metadata

    @property
    def audio_metadata(self):
        """Gets the audio_metadata of this GetSegmentDetectionResponse.


        :return: The audio_metadata of this GetSegmentDetectionResponse.
        :rtype: List
        """
        return self._audio_metadata

    @audio_metadata.setter
    def audio_metadata(self, audio_metadata):
        """Sets the audio_metadata of this GetSegmentDetectionResponse.


        :param audio_metadata: The audio_metadata of this GetSegmentDetectionResponse.
        :type audio_metadata: List
        """

        self._audio_metadata = audio_metadata

    @property
    def next_token(self):
        """Gets the next_token of this GetSegmentDetectionResponse.


        :return: The next_token of this GetSegmentDetectionResponse.
        :rtype: str
        """
        return self._next_token

    @next_token.setter
    def next_token(self, next_token):
        """Sets the next_token of this GetSegmentDetectionResponse.


        :param next_token: The next_token of this GetSegmentDetectionResponse.
        :type next_token: str
        """

        self._next_token = next_token

    @property
    def segments(self):
        """Gets the segments of this GetSegmentDetectionResponse.


        :return: The segments of this GetSegmentDetectionResponse.
        :rtype: List
        """
        return self._segments

    @segments.setter
    def segments(self, segments):
        """Sets the segments of this GetSegmentDetectionResponse.


        :param segments: The segments of this GetSegmentDetectionResponse.
        :type segments: List
        """

        self._segments = segments

    @property
    def selected_segment_types(self):
        """Gets the selected_segment_types of this GetSegmentDetectionResponse.


        :return: The selected_segment_types of this GetSegmentDetectionResponse.
        :rtype: List
        """
        return self._selected_segment_types

    @selected_segment_types.setter
    def selected_segment_types(self, selected_segment_types):
        """Sets the selected_segment_types of this GetSegmentDetectionResponse.


        :param selected_segment_types: The selected_segment_types of this GetSegmentDetectionResponse.
        :type selected_segment_types: List
        """

        self._selected_segment_types = selected_segment_types

    @property
    def job_id(self):
        """Gets the job_id of this GetSegmentDetectionResponse.


        :return: The job_id of this GetSegmentDetectionResponse.
        :rtype: str
        """
        return self._job_id

    @job_id.setter
    def job_id(self, job_id):
        """Sets the job_id of this GetSegmentDetectionResponse.


        :param job_id: The job_id of this GetSegmentDetectionResponse.
        :type job_id: str
        """

        self._job_id = job_id

    @property
    def video(self):
        """Gets the video of this GetSegmentDetectionResponse.


        :return: The video of this GetSegmentDetectionResponse.
        :rtype: Video
        """
        return self._video

    @video.setter
    def video(self, video):
        """Sets the video of this GetSegmentDetectionResponse.


        :param video: The video of this GetSegmentDetectionResponse.
        :type video: Video
        """

        self._video = video

    @property
    def job_tag(self):
        """Gets the job_tag of this GetSegmentDetectionResponse.


        :return: The job_tag of this GetSegmentDetectionResponse.
        :rtype: str
        """
        return self._job_tag

    @job_tag.setter
    def job_tag(self, job_tag):
        """Sets the job_tag of this GetSegmentDetectionResponse.


        :param job_tag: The job_tag of this GetSegmentDetectionResponse.
        :type job_tag: str
        """

        self._job_tag = job_tag
