# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class BlackFrame(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, max_pixel_threshold: float=None, min_coverage_percentage: float=None):
        """BlackFrame - a model defined in OpenAPI

        :param max_pixel_threshold: The max_pixel_threshold of this BlackFrame.
        :param min_coverage_percentage: The min_coverage_percentage of this BlackFrame.
        """
        self.openapi_types = {
            'max_pixel_threshold': float,
            'min_coverage_percentage': float
        }

        self.attribute_map = {
            'max_pixel_threshold': 'MaxPixelThreshold',
            'min_coverage_percentage': 'MinCoveragePercentage'
        }

        self._max_pixel_threshold = max_pixel_threshold
        self._min_coverage_percentage = min_coverage_percentage

    @classmethod
    def from_dict(cls, dikt: dict) -> 'BlackFrame':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The BlackFrame of this BlackFrame.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def max_pixel_threshold(self):
        """Gets the max_pixel_threshold of this BlackFrame.


        :return: The max_pixel_threshold of this BlackFrame.
        :rtype: float
        """
        return self._max_pixel_threshold

    @max_pixel_threshold.setter
    def max_pixel_threshold(self, max_pixel_threshold):
        """Sets the max_pixel_threshold of this BlackFrame.


        :param max_pixel_threshold: The max_pixel_threshold of this BlackFrame.
        :type max_pixel_threshold: float
        """

        self._max_pixel_threshold = max_pixel_threshold

    @property
    def min_coverage_percentage(self):
        """Gets the min_coverage_percentage of this BlackFrame.


        :return: The min_coverage_percentage of this BlackFrame.
        :rtype: float
        """
        return self._min_coverage_percentage

    @min_coverage_percentage.setter
    def min_coverage_percentage(self, min_coverage_percentage):
        """Sets the min_coverage_percentage of this BlackFrame.


        :param min_coverage_percentage: The min_coverage_percentage of this BlackFrame.
        :type min_coverage_percentage: float
        """

        self._min_coverage_percentage = min_coverage_percentage
