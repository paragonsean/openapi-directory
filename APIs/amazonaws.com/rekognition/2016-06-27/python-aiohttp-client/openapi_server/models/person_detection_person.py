# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.person_detail_bounding_box import PersonDetailBoundingBox
from openapi_server.models.person_detail_face import PersonDetailFace
from openapi_server import util


class PersonDetectionPerson(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, index: int=None, bounding_box: PersonDetailBoundingBox=None, face: PersonDetailFace=None):
        """PersonDetectionPerson - a model defined in OpenAPI

        :param index: The index of this PersonDetectionPerson.
        :param bounding_box: The bounding_box of this PersonDetectionPerson.
        :param face: The face of this PersonDetectionPerson.
        """
        self.openapi_types = {
            'index': int,
            'bounding_box': PersonDetailBoundingBox,
            'face': PersonDetailFace
        }

        self.attribute_map = {
            'index': 'Index',
            'bounding_box': 'BoundingBox',
            'face': 'Face'
        }

        self._index = index
        self._bounding_box = bounding_box
        self._face = face

    @classmethod
    def from_dict(cls, dikt: dict) -> 'PersonDetectionPerson':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The PersonDetection_Person of this PersonDetectionPerson.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def index(self):
        """Gets the index of this PersonDetectionPerson.


        :return: The index of this PersonDetectionPerson.
        :rtype: int
        """
        return self._index

    @index.setter
    def index(self, index):
        """Sets the index of this PersonDetectionPerson.


        :param index: The index of this PersonDetectionPerson.
        :type index: int
        """

        self._index = index

    @property
    def bounding_box(self):
        """Gets the bounding_box of this PersonDetectionPerson.


        :return: The bounding_box of this PersonDetectionPerson.
        :rtype: PersonDetailBoundingBox
        """
        return self._bounding_box

    @bounding_box.setter
    def bounding_box(self, bounding_box):
        """Sets the bounding_box of this PersonDetectionPerson.


        :param bounding_box: The bounding_box of this PersonDetectionPerson.
        :type bounding_box: PersonDetailBoundingBox
        """

        self._bounding_box = bounding_box

    @property
    def face(self):
        """Gets the face of this PersonDetectionPerson.


        :return: The face of this PersonDetectionPerson.
        :rtype: PersonDetailFace
        """
        return self._face

    @face.setter
    def face(self, face):
        """Sets the face of this PersonDetectionPerson.


        :param face: The face of this PersonDetectionPerson.
        :type face: PersonDetailFace
        """

        self._face = face
