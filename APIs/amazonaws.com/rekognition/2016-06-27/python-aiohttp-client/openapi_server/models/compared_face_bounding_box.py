# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class ComparedFaceBoundingBox(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, width: float=None, height: float=None, left: float=None, top: float=None):
        """ComparedFaceBoundingBox - a model defined in OpenAPI

        :param width: The width of this ComparedFaceBoundingBox.
        :param height: The height of this ComparedFaceBoundingBox.
        :param left: The left of this ComparedFaceBoundingBox.
        :param top: The top of this ComparedFaceBoundingBox.
        """
        self.openapi_types = {
            'width': float,
            'height': float,
            'left': float,
            'top': float
        }

        self.attribute_map = {
            'width': 'Width',
            'height': 'Height',
            'left': 'Left',
            'top': 'Top'
        }

        self._width = width
        self._height = height
        self._left = left
        self._top = top

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ComparedFaceBoundingBox':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ComparedFace_BoundingBox of this ComparedFaceBoundingBox.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def width(self):
        """Gets the width of this ComparedFaceBoundingBox.


        :return: The width of this ComparedFaceBoundingBox.
        :rtype: float
        """
        return self._width

    @width.setter
    def width(self, width):
        """Sets the width of this ComparedFaceBoundingBox.


        :param width: The width of this ComparedFaceBoundingBox.
        :type width: float
        """

        self._width = width

    @property
    def height(self):
        """Gets the height of this ComparedFaceBoundingBox.


        :return: The height of this ComparedFaceBoundingBox.
        :rtype: float
        """
        return self._height

    @height.setter
    def height(self, height):
        """Sets the height of this ComparedFaceBoundingBox.


        :param height: The height of this ComparedFaceBoundingBox.
        :type height: float
        """

        self._height = height

    @property
    def left(self):
        """Gets the left of this ComparedFaceBoundingBox.


        :return: The left of this ComparedFaceBoundingBox.
        :rtype: float
        """
        return self._left

    @left.setter
    def left(self, left):
        """Sets the left of this ComparedFaceBoundingBox.


        :param left: The left of this ComparedFaceBoundingBox.
        :type left: float
        """

        self._left = left

    @property
    def top(self):
        """Gets the top of this ComparedFaceBoundingBox.


        :return: The top of this ComparedFaceBoundingBox.
        :rtype: float
        """
        return self._top

    @top.setter
    def top(self, top):
        """Sets the top of this ComparedFaceBoundingBox.


        :param top: The top of this ComparedFaceBoundingBox.
        :type top: float
        """

        self._top = top
