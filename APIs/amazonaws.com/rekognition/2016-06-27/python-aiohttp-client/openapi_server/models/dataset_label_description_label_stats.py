# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class DatasetLabelDescriptionLabelStats(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, entry_count: int=None, bounding_box_count: int=None):
        """DatasetLabelDescriptionLabelStats - a model defined in OpenAPI

        :param entry_count: The entry_count of this DatasetLabelDescriptionLabelStats.
        :param bounding_box_count: The bounding_box_count of this DatasetLabelDescriptionLabelStats.
        """
        self.openapi_types = {
            'entry_count': int,
            'bounding_box_count': int
        }

        self.attribute_map = {
            'entry_count': 'EntryCount',
            'bounding_box_count': 'BoundingBoxCount'
        }

        self._entry_count = entry_count
        self._bounding_box_count = bounding_box_count

    @classmethod
    def from_dict(cls, dikt: dict) -> 'DatasetLabelDescriptionLabelStats':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The DatasetLabelDescription_LabelStats of this DatasetLabelDescriptionLabelStats.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def entry_count(self):
        """Gets the entry_count of this DatasetLabelDescriptionLabelStats.


        :return: The entry_count of this DatasetLabelDescriptionLabelStats.
        :rtype: int
        """
        return self._entry_count

    @entry_count.setter
    def entry_count(self, entry_count):
        """Sets the entry_count of this DatasetLabelDescriptionLabelStats.


        :param entry_count: The entry_count of this DatasetLabelDescriptionLabelStats.
        :type entry_count: int
        """

        self._entry_count = entry_count

    @property
    def bounding_box_count(self):
        """Gets the bounding_box_count of this DatasetLabelDescriptionLabelStats.


        :return: The bounding_box_count of this DatasetLabelDescriptionLabelStats.
        :rtype: int
        """
        return self._bounding_box_count

    @bounding_box_count.setter
    def bounding_box_count(self, bounding_box_count):
        """Sets the bounding_box_count of this DatasetLabelDescriptionLabelStats.


        :param bounding_box_count: The bounding_box_count of this DatasetLabelDescriptionLabelStats.
        :type bounding_box_count: int
        """

        self._bounding_box_count = bounding_box_count
