# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class DetectTextResponse(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, text_detections: List=None, text_model_version: str=None):
        """DetectTextResponse - a model defined in OpenAPI

        :param text_detections: The text_detections of this DetectTextResponse.
        :param text_model_version: The text_model_version of this DetectTextResponse.
        """
        self.openapi_types = {
            'text_detections': List,
            'text_model_version': str
        }

        self.attribute_map = {
            'text_detections': 'TextDetections',
            'text_model_version': 'TextModelVersion'
        }

        self._text_detections = text_detections
        self._text_model_version = text_model_version

    @classmethod
    def from_dict(cls, dikt: dict) -> 'DetectTextResponse':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The DetectTextResponse of this DetectTextResponse.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def text_detections(self):
        """Gets the text_detections of this DetectTextResponse.


        :return: The text_detections of this DetectTextResponse.
        :rtype: List
        """
        return self._text_detections

    @text_detections.setter
    def text_detections(self, text_detections):
        """Sets the text_detections of this DetectTextResponse.


        :param text_detections: The text_detections of this DetectTextResponse.
        :type text_detections: List
        """

        self._text_detections = text_detections

    @property
    def text_model_version(self):
        """Gets the text_model_version of this DetectTextResponse.


        :return: The text_model_version of this DetectTextResponse.
        :rtype: str
        """
        return self._text_model_version

    @text_model_version.setter
    def text_model_version(self, text_model_version):
        """Sets the text_model_version of this DetectTextResponse.


        :param text_model_version: The text_model_version of this DetectTextResponse.
        :type text_model_version: str
        """

        self._text_model_version = text_model_version
