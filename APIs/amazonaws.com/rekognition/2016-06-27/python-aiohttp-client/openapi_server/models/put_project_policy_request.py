# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class PutProjectPolicyRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, project_arn: str=None, policy_name: str=None, policy_revision_id: str=None, policy_document: str=None):
        """PutProjectPolicyRequest - a model defined in OpenAPI

        :param project_arn: The project_arn of this PutProjectPolicyRequest.
        :param policy_name: The policy_name of this PutProjectPolicyRequest.
        :param policy_revision_id: The policy_revision_id of this PutProjectPolicyRequest.
        :param policy_document: The policy_document of this PutProjectPolicyRequest.
        """
        self.openapi_types = {
            'project_arn': str,
            'policy_name': str,
            'policy_revision_id': str,
            'policy_document': str
        }

        self.attribute_map = {
            'project_arn': 'ProjectArn',
            'policy_name': 'PolicyName',
            'policy_revision_id': 'PolicyRevisionId',
            'policy_document': 'PolicyDocument'
        }

        self._project_arn = project_arn
        self._policy_name = policy_name
        self._policy_revision_id = policy_revision_id
        self._policy_document = policy_document

    @classmethod
    def from_dict(cls, dikt: dict) -> 'PutProjectPolicyRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The PutProjectPolicyRequest of this PutProjectPolicyRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def project_arn(self):
        """Gets the project_arn of this PutProjectPolicyRequest.


        :return: The project_arn of this PutProjectPolicyRequest.
        :rtype: str
        """
        return self._project_arn

    @project_arn.setter
    def project_arn(self, project_arn):
        """Sets the project_arn of this PutProjectPolicyRequest.


        :param project_arn: The project_arn of this PutProjectPolicyRequest.
        :type project_arn: str
        """
        if project_arn is None:
            raise ValueError("Invalid value for `project_arn`, must not be `None`")

        self._project_arn = project_arn

    @property
    def policy_name(self):
        """Gets the policy_name of this PutProjectPolicyRequest.


        :return: The policy_name of this PutProjectPolicyRequest.
        :rtype: str
        """
        return self._policy_name

    @policy_name.setter
    def policy_name(self, policy_name):
        """Sets the policy_name of this PutProjectPolicyRequest.


        :param policy_name: The policy_name of this PutProjectPolicyRequest.
        :type policy_name: str
        """
        if policy_name is None:
            raise ValueError("Invalid value for `policy_name`, must not be `None`")

        self._policy_name = policy_name

    @property
    def policy_revision_id(self):
        """Gets the policy_revision_id of this PutProjectPolicyRequest.


        :return: The policy_revision_id of this PutProjectPolicyRequest.
        :rtype: str
        """
        return self._policy_revision_id

    @policy_revision_id.setter
    def policy_revision_id(self, policy_revision_id):
        """Sets the policy_revision_id of this PutProjectPolicyRequest.


        :param policy_revision_id: The policy_revision_id of this PutProjectPolicyRequest.
        :type policy_revision_id: str
        """

        self._policy_revision_id = policy_revision_id

    @property
    def policy_document(self):
        """Gets the policy_document of this PutProjectPolicyRequest.


        :return: The policy_document of this PutProjectPolicyRequest.
        :rtype: str
        """
        return self._policy_document

    @policy_document.setter
    def policy_document(self, policy_document):
        """Sets the policy_document of this PutProjectPolicyRequest.


        :param policy_document: The policy_document of this PutProjectPolicyRequest.
        :type policy_document: str
        """
        if policy_document is None:
            raise ValueError("Invalid value for `policy_document`, must not be `None`")

        self._policy_document = policy_document
