# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.project_version_description_evaluation_result import ProjectVersionDescriptionEvaluationResult
from openapi_server.models.project_version_description_manifest_summary import ProjectVersionDescriptionManifestSummary
from openapi_server.models.project_version_description_output_config import ProjectVersionDescriptionOutputConfig
from openapi_server.models.project_version_description_testing_data_result import ProjectVersionDescriptionTestingDataResult
from openapi_server.models.project_version_description_training_data_result import ProjectVersionDescriptionTrainingDataResult
from openapi_server.models.project_version_status import ProjectVersionStatus
from openapi_server import util


class ProjectVersionDescription(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, project_version_arn: str=None, creation_timestamp: datetime=None, min_inference_units: int=None, status: ProjectVersionStatus=None, status_message: str=None, billable_training_time_in_seconds: int=None, training_end_timestamp: datetime=None, output_config: ProjectVersionDescriptionOutputConfig=None, training_data_result: ProjectVersionDescriptionTrainingDataResult=None, testing_data_result: ProjectVersionDescriptionTestingDataResult=None, evaluation_result: ProjectVersionDescriptionEvaluationResult=None, manifest_summary: ProjectVersionDescriptionManifestSummary=None, kms_key_id: str=None, max_inference_units: int=None, source_project_version_arn: str=None):
        """ProjectVersionDescription - a model defined in OpenAPI

        :param project_version_arn: The project_version_arn of this ProjectVersionDescription.
        :param creation_timestamp: The creation_timestamp of this ProjectVersionDescription.
        :param min_inference_units: The min_inference_units of this ProjectVersionDescription.
        :param status: The status of this ProjectVersionDescription.
        :param status_message: The status_message of this ProjectVersionDescription.
        :param billable_training_time_in_seconds: The billable_training_time_in_seconds of this ProjectVersionDescription.
        :param training_end_timestamp: The training_end_timestamp of this ProjectVersionDescription.
        :param output_config: The output_config of this ProjectVersionDescription.
        :param training_data_result: The training_data_result of this ProjectVersionDescription.
        :param testing_data_result: The testing_data_result of this ProjectVersionDescription.
        :param evaluation_result: The evaluation_result of this ProjectVersionDescription.
        :param manifest_summary: The manifest_summary of this ProjectVersionDescription.
        :param kms_key_id: The kms_key_id of this ProjectVersionDescription.
        :param max_inference_units: The max_inference_units of this ProjectVersionDescription.
        :param source_project_version_arn: The source_project_version_arn of this ProjectVersionDescription.
        """
        self.openapi_types = {
            'project_version_arn': str,
            'creation_timestamp': datetime,
            'min_inference_units': int,
            'status': ProjectVersionStatus,
            'status_message': str,
            'billable_training_time_in_seconds': int,
            'training_end_timestamp': datetime,
            'output_config': ProjectVersionDescriptionOutputConfig,
            'training_data_result': ProjectVersionDescriptionTrainingDataResult,
            'testing_data_result': ProjectVersionDescriptionTestingDataResult,
            'evaluation_result': ProjectVersionDescriptionEvaluationResult,
            'manifest_summary': ProjectVersionDescriptionManifestSummary,
            'kms_key_id': str,
            'max_inference_units': int,
            'source_project_version_arn': str
        }

        self.attribute_map = {
            'project_version_arn': 'ProjectVersionArn',
            'creation_timestamp': 'CreationTimestamp',
            'min_inference_units': 'MinInferenceUnits',
            'status': 'Status',
            'status_message': 'StatusMessage',
            'billable_training_time_in_seconds': 'BillableTrainingTimeInSeconds',
            'training_end_timestamp': 'TrainingEndTimestamp',
            'output_config': 'OutputConfig',
            'training_data_result': 'TrainingDataResult',
            'testing_data_result': 'TestingDataResult',
            'evaluation_result': 'EvaluationResult',
            'manifest_summary': 'ManifestSummary',
            'kms_key_id': 'KmsKeyId',
            'max_inference_units': 'MaxInferenceUnits',
            'source_project_version_arn': 'SourceProjectVersionArn'
        }

        self._project_version_arn = project_version_arn
        self._creation_timestamp = creation_timestamp
        self._min_inference_units = min_inference_units
        self._status = status
        self._status_message = status_message
        self._billable_training_time_in_seconds = billable_training_time_in_seconds
        self._training_end_timestamp = training_end_timestamp
        self._output_config = output_config
        self._training_data_result = training_data_result
        self._testing_data_result = testing_data_result
        self._evaluation_result = evaluation_result
        self._manifest_summary = manifest_summary
        self._kms_key_id = kms_key_id
        self._max_inference_units = max_inference_units
        self._source_project_version_arn = source_project_version_arn

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ProjectVersionDescription':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ProjectVersionDescription of this ProjectVersionDescription.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def project_version_arn(self):
        """Gets the project_version_arn of this ProjectVersionDescription.


        :return: The project_version_arn of this ProjectVersionDescription.
        :rtype: str
        """
        return self._project_version_arn

    @project_version_arn.setter
    def project_version_arn(self, project_version_arn):
        """Sets the project_version_arn of this ProjectVersionDescription.


        :param project_version_arn: The project_version_arn of this ProjectVersionDescription.
        :type project_version_arn: str
        """

        self._project_version_arn = project_version_arn

    @property
    def creation_timestamp(self):
        """Gets the creation_timestamp of this ProjectVersionDescription.


        :return: The creation_timestamp of this ProjectVersionDescription.
        :rtype: datetime
        """
        return self._creation_timestamp

    @creation_timestamp.setter
    def creation_timestamp(self, creation_timestamp):
        """Sets the creation_timestamp of this ProjectVersionDescription.


        :param creation_timestamp: The creation_timestamp of this ProjectVersionDescription.
        :type creation_timestamp: datetime
        """

        self._creation_timestamp = creation_timestamp

    @property
    def min_inference_units(self):
        """Gets the min_inference_units of this ProjectVersionDescription.


        :return: The min_inference_units of this ProjectVersionDescription.
        :rtype: int
        """
        return self._min_inference_units

    @min_inference_units.setter
    def min_inference_units(self, min_inference_units):
        """Sets the min_inference_units of this ProjectVersionDescription.


        :param min_inference_units: The min_inference_units of this ProjectVersionDescription.
        :type min_inference_units: int
        """

        self._min_inference_units = min_inference_units

    @property
    def status(self):
        """Gets the status of this ProjectVersionDescription.


        :return: The status of this ProjectVersionDescription.
        :rtype: ProjectVersionStatus
        """
        return self._status

    @status.setter
    def status(self, status):
        """Sets the status of this ProjectVersionDescription.


        :param status: The status of this ProjectVersionDescription.
        :type status: ProjectVersionStatus
        """

        self._status = status

    @property
    def status_message(self):
        """Gets the status_message of this ProjectVersionDescription.


        :return: The status_message of this ProjectVersionDescription.
        :rtype: str
        """
        return self._status_message

    @status_message.setter
    def status_message(self, status_message):
        """Sets the status_message of this ProjectVersionDescription.


        :param status_message: The status_message of this ProjectVersionDescription.
        :type status_message: str
        """

        self._status_message = status_message

    @property
    def billable_training_time_in_seconds(self):
        """Gets the billable_training_time_in_seconds of this ProjectVersionDescription.


        :return: The billable_training_time_in_seconds of this ProjectVersionDescription.
        :rtype: int
        """
        return self._billable_training_time_in_seconds

    @billable_training_time_in_seconds.setter
    def billable_training_time_in_seconds(self, billable_training_time_in_seconds):
        """Sets the billable_training_time_in_seconds of this ProjectVersionDescription.


        :param billable_training_time_in_seconds: The billable_training_time_in_seconds of this ProjectVersionDescription.
        :type billable_training_time_in_seconds: int
        """

        self._billable_training_time_in_seconds = billable_training_time_in_seconds

    @property
    def training_end_timestamp(self):
        """Gets the training_end_timestamp of this ProjectVersionDescription.


        :return: The training_end_timestamp of this ProjectVersionDescription.
        :rtype: datetime
        """
        return self._training_end_timestamp

    @training_end_timestamp.setter
    def training_end_timestamp(self, training_end_timestamp):
        """Sets the training_end_timestamp of this ProjectVersionDescription.


        :param training_end_timestamp: The training_end_timestamp of this ProjectVersionDescription.
        :type training_end_timestamp: datetime
        """

        self._training_end_timestamp = training_end_timestamp

    @property
    def output_config(self):
        """Gets the output_config of this ProjectVersionDescription.


        :return: The output_config of this ProjectVersionDescription.
        :rtype: ProjectVersionDescriptionOutputConfig
        """
        return self._output_config

    @output_config.setter
    def output_config(self, output_config):
        """Sets the output_config of this ProjectVersionDescription.


        :param output_config: The output_config of this ProjectVersionDescription.
        :type output_config: ProjectVersionDescriptionOutputConfig
        """

        self._output_config = output_config

    @property
    def training_data_result(self):
        """Gets the training_data_result of this ProjectVersionDescription.


        :return: The training_data_result of this ProjectVersionDescription.
        :rtype: ProjectVersionDescriptionTrainingDataResult
        """
        return self._training_data_result

    @training_data_result.setter
    def training_data_result(self, training_data_result):
        """Sets the training_data_result of this ProjectVersionDescription.


        :param training_data_result: The training_data_result of this ProjectVersionDescription.
        :type training_data_result: ProjectVersionDescriptionTrainingDataResult
        """

        self._training_data_result = training_data_result

    @property
    def testing_data_result(self):
        """Gets the testing_data_result of this ProjectVersionDescription.


        :return: The testing_data_result of this ProjectVersionDescription.
        :rtype: ProjectVersionDescriptionTestingDataResult
        """
        return self._testing_data_result

    @testing_data_result.setter
    def testing_data_result(self, testing_data_result):
        """Sets the testing_data_result of this ProjectVersionDescription.


        :param testing_data_result: The testing_data_result of this ProjectVersionDescription.
        :type testing_data_result: ProjectVersionDescriptionTestingDataResult
        """

        self._testing_data_result = testing_data_result

    @property
    def evaluation_result(self):
        """Gets the evaluation_result of this ProjectVersionDescription.


        :return: The evaluation_result of this ProjectVersionDescription.
        :rtype: ProjectVersionDescriptionEvaluationResult
        """
        return self._evaluation_result

    @evaluation_result.setter
    def evaluation_result(self, evaluation_result):
        """Sets the evaluation_result of this ProjectVersionDescription.


        :param evaluation_result: The evaluation_result of this ProjectVersionDescription.
        :type evaluation_result: ProjectVersionDescriptionEvaluationResult
        """

        self._evaluation_result = evaluation_result

    @property
    def manifest_summary(self):
        """Gets the manifest_summary of this ProjectVersionDescription.


        :return: The manifest_summary of this ProjectVersionDescription.
        :rtype: ProjectVersionDescriptionManifestSummary
        """
        return self._manifest_summary

    @manifest_summary.setter
    def manifest_summary(self, manifest_summary):
        """Sets the manifest_summary of this ProjectVersionDescription.


        :param manifest_summary: The manifest_summary of this ProjectVersionDescription.
        :type manifest_summary: ProjectVersionDescriptionManifestSummary
        """

        self._manifest_summary = manifest_summary

    @property
    def kms_key_id(self):
        """Gets the kms_key_id of this ProjectVersionDescription.


        :return: The kms_key_id of this ProjectVersionDescription.
        :rtype: str
        """
        return self._kms_key_id

    @kms_key_id.setter
    def kms_key_id(self, kms_key_id):
        """Sets the kms_key_id of this ProjectVersionDescription.


        :param kms_key_id: The kms_key_id of this ProjectVersionDescription.
        :type kms_key_id: str
        """

        self._kms_key_id = kms_key_id

    @property
    def max_inference_units(self):
        """Gets the max_inference_units of this ProjectVersionDescription.


        :return: The max_inference_units of this ProjectVersionDescription.
        :rtype: int
        """
        return self._max_inference_units

    @max_inference_units.setter
    def max_inference_units(self, max_inference_units):
        """Sets the max_inference_units of this ProjectVersionDescription.


        :param max_inference_units: The max_inference_units of this ProjectVersionDescription.
        :type max_inference_units: int
        """

        self._max_inference_units = max_inference_units

    @property
    def source_project_version_arn(self):
        """Gets the source_project_version_arn of this ProjectVersionDescription.


        :return: The source_project_version_arn of this ProjectVersionDescription.
        :rtype: str
        """
        return self._source_project_version_arn

    @source_project_version_arn.setter
    def source_project_version_arn(self, source_project_version_arn):
        """Sets the source_project_version_arn of this ProjectVersionDescription.


        :param source_project_version_arn: The source_project_version_arn of this ProjectVersionDescription.
        :type source_project_version_arn: str
        """

        self._source_project_version_arn = source_project_version_arn
