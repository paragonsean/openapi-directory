# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class FaceDetailEyeDirection(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, yaw: float=None, pitch: float=None, confidence: float=None):
        """FaceDetailEyeDirection - a model defined in OpenAPI

        :param yaw: The yaw of this FaceDetailEyeDirection.
        :param pitch: The pitch of this FaceDetailEyeDirection.
        :param confidence: The confidence of this FaceDetailEyeDirection.
        """
        self.openapi_types = {
            'yaw': float,
            'pitch': float,
            'confidence': float
        }

        self.attribute_map = {
            'yaw': 'Yaw',
            'pitch': 'Pitch',
            'confidence': 'Confidence'
        }

        self._yaw = yaw
        self._pitch = pitch
        self._confidence = confidence

    @classmethod
    def from_dict(cls, dikt: dict) -> 'FaceDetailEyeDirection':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The FaceDetail_EyeDirection of this FaceDetailEyeDirection.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def yaw(self):
        """Gets the yaw of this FaceDetailEyeDirection.


        :return: The yaw of this FaceDetailEyeDirection.
        :rtype: float
        """
        return self._yaw

    @yaw.setter
    def yaw(self, yaw):
        """Sets the yaw of this FaceDetailEyeDirection.


        :param yaw: The yaw of this FaceDetailEyeDirection.
        :type yaw: float
        """

        self._yaw = yaw

    @property
    def pitch(self):
        """Gets the pitch of this FaceDetailEyeDirection.


        :return: The pitch of this FaceDetailEyeDirection.
        :rtype: float
        """
        return self._pitch

    @pitch.setter
    def pitch(self, pitch):
        """Sets the pitch of this FaceDetailEyeDirection.


        :param pitch: The pitch of this FaceDetailEyeDirection.
        :type pitch: float
        """

        self._pitch = pitch

    @property
    def confidence(self):
        """Gets the confidence of this FaceDetailEyeDirection.


        :return: The confidence of this FaceDetailEyeDirection.
        :rtype: float
        """
        return self._confidence

    @confidence.setter
    def confidence(self, confidence):
        """Sets the confidence of this FaceDetailEyeDirection.


        :param confidence: The confidence of this FaceDetailEyeDirection.
        :type confidence: float
        """

        self._confidence = confidence
