# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.create_face_liveness_session_request_settings_output_config import CreateFaceLivenessSessionRequestSettingsOutputConfig
from openapi_server import util


class CreateFaceLivenessSessionRequestSettings(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, output_config: CreateFaceLivenessSessionRequestSettingsOutputConfig=None, audit_images_limit: int=None):
        """CreateFaceLivenessSessionRequestSettings - a model defined in OpenAPI

        :param output_config: The output_config of this CreateFaceLivenessSessionRequestSettings.
        :param audit_images_limit: The audit_images_limit of this CreateFaceLivenessSessionRequestSettings.
        """
        self.openapi_types = {
            'output_config': CreateFaceLivenessSessionRequestSettingsOutputConfig,
            'audit_images_limit': int
        }

        self.attribute_map = {
            'output_config': 'OutputConfig',
            'audit_images_limit': 'AuditImagesLimit'
        }

        self._output_config = output_config
        self._audit_images_limit = audit_images_limit

    @classmethod
    def from_dict(cls, dikt: dict) -> 'CreateFaceLivenessSessionRequestSettings':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The CreateFaceLivenessSessionRequest_Settings of this CreateFaceLivenessSessionRequestSettings.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def output_config(self):
        """Gets the output_config of this CreateFaceLivenessSessionRequestSettings.


        :return: The output_config of this CreateFaceLivenessSessionRequestSettings.
        :rtype: CreateFaceLivenessSessionRequestSettingsOutputConfig
        """
        return self._output_config

    @output_config.setter
    def output_config(self, output_config):
        """Sets the output_config of this CreateFaceLivenessSessionRequestSettings.


        :param output_config: The output_config of this CreateFaceLivenessSessionRequestSettings.
        :type output_config: CreateFaceLivenessSessionRequestSettingsOutputConfig
        """

        self._output_config = output_config

    @property
    def audit_images_limit(self):
        """Gets the audit_images_limit of this CreateFaceLivenessSessionRequestSettings.


        :return: The audit_images_limit of this CreateFaceLivenessSessionRequestSettings.
        :rtype: int
        """
        return self._audit_images_limit

    @audit_images_limit.setter
    def audit_images_limit(self, audit_images_limit):
        """Sets the audit_images_limit of this CreateFaceLivenessSessionRequestSettings.


        :param audit_images_limit: The audit_images_limit of this CreateFaceLivenessSessionRequestSettings.
        :type audit_images_limit: int
        """

        self._audit_images_limit = audit_images_limit
