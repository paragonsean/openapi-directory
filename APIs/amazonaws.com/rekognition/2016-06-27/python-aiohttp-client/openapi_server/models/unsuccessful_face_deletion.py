# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class UnsuccessfulFaceDeletion(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, face_id: str=None, user_id: str=None, reasons: List=None):
        """UnsuccessfulFaceDeletion - a model defined in OpenAPI

        :param face_id: The face_id of this UnsuccessfulFaceDeletion.
        :param user_id: The user_id of this UnsuccessfulFaceDeletion.
        :param reasons: The reasons of this UnsuccessfulFaceDeletion.
        """
        self.openapi_types = {
            'face_id': str,
            'user_id': str,
            'reasons': List
        }

        self.attribute_map = {
            'face_id': 'FaceId',
            'user_id': 'UserId',
            'reasons': 'Reasons'
        }

        self._face_id = face_id
        self._user_id = user_id
        self._reasons = reasons

    @classmethod
    def from_dict(cls, dikt: dict) -> 'UnsuccessfulFaceDeletion':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The UnsuccessfulFaceDeletion of this UnsuccessfulFaceDeletion.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def face_id(self):
        """Gets the face_id of this UnsuccessfulFaceDeletion.


        :return: The face_id of this UnsuccessfulFaceDeletion.
        :rtype: str
        """
        return self._face_id

    @face_id.setter
    def face_id(self, face_id):
        """Sets the face_id of this UnsuccessfulFaceDeletion.


        :param face_id: The face_id of this UnsuccessfulFaceDeletion.
        :type face_id: str
        """

        self._face_id = face_id

    @property
    def user_id(self):
        """Gets the user_id of this UnsuccessfulFaceDeletion.


        :return: The user_id of this UnsuccessfulFaceDeletion.
        :rtype: str
        """
        return self._user_id

    @user_id.setter
    def user_id(self, user_id):
        """Sets the user_id of this UnsuccessfulFaceDeletion.


        :param user_id: The user_id of this UnsuccessfulFaceDeletion.
        :type user_id: str
        """

        self._user_id = user_id

    @property
    def reasons(self):
        """Gets the reasons of this UnsuccessfulFaceDeletion.


        :return: The reasons of this UnsuccessfulFaceDeletion.
        :rtype: List
        """
        return self._reasons

    @reasons.setter
    def reasons(self, reasons):
        """Sets the reasons of this UnsuccessfulFaceDeletion.


        :param reasons: The reasons of this UnsuccessfulFaceDeletion.
        :type reasons: List
        """

        self._reasons = reasons
