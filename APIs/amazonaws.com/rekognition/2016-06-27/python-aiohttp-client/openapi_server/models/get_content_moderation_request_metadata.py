# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.content_moderation_aggregate_by import ContentModerationAggregateBy
from openapi_server.models.content_moderation_sort_by import ContentModerationSortBy
from openapi_server import util


class GetContentModerationRequestMetadata(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, sort_by: ContentModerationSortBy=None, aggregate_by: ContentModerationAggregateBy=None):
        """GetContentModerationRequestMetadata - a model defined in OpenAPI

        :param sort_by: The sort_by of this GetContentModerationRequestMetadata.
        :param aggregate_by: The aggregate_by of this GetContentModerationRequestMetadata.
        """
        self.openapi_types = {
            'sort_by': ContentModerationSortBy,
            'aggregate_by': ContentModerationAggregateBy
        }

        self.attribute_map = {
            'sort_by': 'SortBy',
            'aggregate_by': 'AggregateBy'
        }

        self._sort_by = sort_by
        self._aggregate_by = aggregate_by

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GetContentModerationRequestMetadata':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The GetContentModerationRequestMetadata of this GetContentModerationRequestMetadata.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def sort_by(self):
        """Gets the sort_by of this GetContentModerationRequestMetadata.


        :return: The sort_by of this GetContentModerationRequestMetadata.
        :rtype: ContentModerationSortBy
        """
        return self._sort_by

    @sort_by.setter
    def sort_by(self, sort_by):
        """Sets the sort_by of this GetContentModerationRequestMetadata.


        :param sort_by: The sort_by of this GetContentModerationRequestMetadata.
        :type sort_by: ContentModerationSortBy
        """

        self._sort_by = sort_by

    @property
    def aggregate_by(self):
        """Gets the aggregate_by of this GetContentModerationRequestMetadata.


        :return: The aggregate_by of this GetContentModerationRequestMetadata.
        :rtype: ContentModerationAggregateBy
        """
        return self._aggregate_by

    @aggregate_by.setter
    def aggregate_by(self, aggregate_by):
        """Sets the aggregate_by of this GetContentModerationRequestMetadata.


        :param aggregate_by: The aggregate_by of this GetContentModerationRequestMetadata.
        :type aggregate_by: ContentModerationAggregateBy
        """

        self._aggregate_by = aggregate_by
