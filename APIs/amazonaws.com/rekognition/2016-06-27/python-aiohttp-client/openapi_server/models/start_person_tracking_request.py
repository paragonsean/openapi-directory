# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.start_person_tracking_request_notification_channel import StartPersonTrackingRequestNotificationChannel
from openapi_server.models.start_person_tracking_request_video import StartPersonTrackingRequestVideo
from openapi_server import util


class StartPersonTrackingRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, video: StartPersonTrackingRequestVideo=None, client_request_token: str=None, notification_channel: StartPersonTrackingRequestNotificationChannel=None, job_tag: str=None):
        """StartPersonTrackingRequest - a model defined in OpenAPI

        :param video: The video of this StartPersonTrackingRequest.
        :param client_request_token: The client_request_token of this StartPersonTrackingRequest.
        :param notification_channel: The notification_channel of this StartPersonTrackingRequest.
        :param job_tag: The job_tag of this StartPersonTrackingRequest.
        """
        self.openapi_types = {
            'video': StartPersonTrackingRequestVideo,
            'client_request_token': str,
            'notification_channel': StartPersonTrackingRequestNotificationChannel,
            'job_tag': str
        }

        self.attribute_map = {
            'video': 'Video',
            'client_request_token': 'ClientRequestToken',
            'notification_channel': 'NotificationChannel',
            'job_tag': 'JobTag'
        }

        self._video = video
        self._client_request_token = client_request_token
        self._notification_channel = notification_channel
        self._job_tag = job_tag

    @classmethod
    def from_dict(cls, dikt: dict) -> 'StartPersonTrackingRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The StartPersonTrackingRequest of this StartPersonTrackingRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def video(self):
        """Gets the video of this StartPersonTrackingRequest.


        :return: The video of this StartPersonTrackingRequest.
        :rtype: StartPersonTrackingRequestVideo
        """
        return self._video

    @video.setter
    def video(self, video):
        """Sets the video of this StartPersonTrackingRequest.


        :param video: The video of this StartPersonTrackingRequest.
        :type video: StartPersonTrackingRequestVideo
        """
        if video is None:
            raise ValueError("Invalid value for `video`, must not be `None`")

        self._video = video

    @property
    def client_request_token(self):
        """Gets the client_request_token of this StartPersonTrackingRequest.


        :return: The client_request_token of this StartPersonTrackingRequest.
        :rtype: str
        """
        return self._client_request_token

    @client_request_token.setter
    def client_request_token(self, client_request_token):
        """Sets the client_request_token of this StartPersonTrackingRequest.


        :param client_request_token: The client_request_token of this StartPersonTrackingRequest.
        :type client_request_token: str
        """

        self._client_request_token = client_request_token

    @property
    def notification_channel(self):
        """Gets the notification_channel of this StartPersonTrackingRequest.


        :return: The notification_channel of this StartPersonTrackingRequest.
        :rtype: StartPersonTrackingRequestNotificationChannel
        """
        return self._notification_channel

    @notification_channel.setter
    def notification_channel(self, notification_channel):
        """Sets the notification_channel of this StartPersonTrackingRequest.


        :param notification_channel: The notification_channel of this StartPersonTrackingRequest.
        :type notification_channel: StartPersonTrackingRequestNotificationChannel
        """

        self._notification_channel = notification_channel

    @property
    def job_tag(self):
        """Gets the job_tag of this StartPersonTrackingRequest.


        :return: The job_tag of this StartPersonTrackingRequest.
        :rtype: str
        """
        return self._job_tag

    @job_tag.setter
    def job_tag(self, job_tag):
        """Sets the job_tag of this StartPersonTrackingRequest.


        :param job_tag: The job_tag of this StartPersonTrackingRequest.
        :type job_tag: str
        """

        self._job_tag = job_tag
