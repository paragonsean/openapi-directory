# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class DetectLabelsImageBackgroundQuality(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, brightness: float=None, sharpness: float=None, contrast: float=None):
        """DetectLabelsImageBackgroundQuality - a model defined in OpenAPI

        :param brightness: The brightness of this DetectLabelsImageBackgroundQuality.
        :param sharpness: The sharpness of this DetectLabelsImageBackgroundQuality.
        :param contrast: The contrast of this DetectLabelsImageBackgroundQuality.
        """
        self.openapi_types = {
            'brightness': float,
            'sharpness': float,
            'contrast': float
        }

        self.attribute_map = {
            'brightness': 'Brightness',
            'sharpness': 'Sharpness',
            'contrast': 'Contrast'
        }

        self._brightness = brightness
        self._sharpness = sharpness
        self._contrast = contrast

    @classmethod
    def from_dict(cls, dikt: dict) -> 'DetectLabelsImageBackgroundQuality':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The DetectLabelsImageBackground_Quality of this DetectLabelsImageBackgroundQuality.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def brightness(self):
        """Gets the brightness of this DetectLabelsImageBackgroundQuality.


        :return: The brightness of this DetectLabelsImageBackgroundQuality.
        :rtype: float
        """
        return self._brightness

    @brightness.setter
    def brightness(self, brightness):
        """Sets the brightness of this DetectLabelsImageBackgroundQuality.


        :param brightness: The brightness of this DetectLabelsImageBackgroundQuality.
        :type brightness: float
        """

        self._brightness = brightness

    @property
    def sharpness(self):
        """Gets the sharpness of this DetectLabelsImageBackgroundQuality.


        :return: The sharpness of this DetectLabelsImageBackgroundQuality.
        :rtype: float
        """
        return self._sharpness

    @sharpness.setter
    def sharpness(self, sharpness):
        """Sets the sharpness of this DetectLabelsImageBackgroundQuality.


        :param sharpness: The sharpness of this DetectLabelsImageBackgroundQuality.
        :type sharpness: float
        """

        self._sharpness = sharpness

    @property
    def contrast(self):
        """Gets the contrast of this DetectLabelsImageBackgroundQuality.


        :return: The contrast of this DetectLabelsImageBackgroundQuality.
        :rtype: float
        """
        return self._contrast

    @contrast.setter
    def contrast(self, contrast):
        """Sets the contrast of this DetectLabelsImageBackgroundQuality.


        :param contrast: The contrast of this DetectLabelsImageBackgroundQuality.
        :type contrast: float
        """

        self._contrast = contrast
