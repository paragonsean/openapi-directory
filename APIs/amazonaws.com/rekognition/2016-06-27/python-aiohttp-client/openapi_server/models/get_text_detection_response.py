# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.video import Video
from openapi_server.models.video_job_status import VideoJobStatus
from openapi_server.models.video_metadata import VideoMetadata
from openapi_server import util


class GetTextDetectionResponse(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, job_status: VideoJobStatus=None, status_message: str=None, video_metadata: VideoMetadata=None, text_detections: List=None, next_token: str=None, text_model_version: str=None, job_id: str=None, video: Video=None, job_tag: str=None):
        """GetTextDetectionResponse - a model defined in OpenAPI

        :param job_status: The job_status of this GetTextDetectionResponse.
        :param status_message: The status_message of this GetTextDetectionResponse.
        :param video_metadata: The video_metadata of this GetTextDetectionResponse.
        :param text_detections: The text_detections of this GetTextDetectionResponse.
        :param next_token: The next_token of this GetTextDetectionResponse.
        :param text_model_version: The text_model_version of this GetTextDetectionResponse.
        :param job_id: The job_id of this GetTextDetectionResponse.
        :param video: The video of this GetTextDetectionResponse.
        :param job_tag: The job_tag of this GetTextDetectionResponse.
        """
        self.openapi_types = {
            'job_status': VideoJobStatus,
            'status_message': str,
            'video_metadata': VideoMetadata,
            'text_detections': List,
            'next_token': str,
            'text_model_version': str,
            'job_id': str,
            'video': Video,
            'job_tag': str
        }

        self.attribute_map = {
            'job_status': 'JobStatus',
            'status_message': 'StatusMessage',
            'video_metadata': 'VideoMetadata',
            'text_detections': 'TextDetections',
            'next_token': 'NextToken',
            'text_model_version': 'TextModelVersion',
            'job_id': 'JobId',
            'video': 'Video',
            'job_tag': 'JobTag'
        }

        self._job_status = job_status
        self._status_message = status_message
        self._video_metadata = video_metadata
        self._text_detections = text_detections
        self._next_token = next_token
        self._text_model_version = text_model_version
        self._job_id = job_id
        self._video = video
        self._job_tag = job_tag

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GetTextDetectionResponse':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The GetTextDetectionResponse of this GetTextDetectionResponse.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def job_status(self):
        """Gets the job_status of this GetTextDetectionResponse.


        :return: The job_status of this GetTextDetectionResponse.
        :rtype: VideoJobStatus
        """
        return self._job_status

    @job_status.setter
    def job_status(self, job_status):
        """Sets the job_status of this GetTextDetectionResponse.


        :param job_status: The job_status of this GetTextDetectionResponse.
        :type job_status: VideoJobStatus
        """

        self._job_status = job_status

    @property
    def status_message(self):
        """Gets the status_message of this GetTextDetectionResponse.


        :return: The status_message of this GetTextDetectionResponse.
        :rtype: str
        """
        return self._status_message

    @status_message.setter
    def status_message(self, status_message):
        """Sets the status_message of this GetTextDetectionResponse.


        :param status_message: The status_message of this GetTextDetectionResponse.
        :type status_message: str
        """

        self._status_message = status_message

    @property
    def video_metadata(self):
        """Gets the video_metadata of this GetTextDetectionResponse.


        :return: The video_metadata of this GetTextDetectionResponse.
        :rtype: VideoMetadata
        """
        return self._video_metadata

    @video_metadata.setter
    def video_metadata(self, video_metadata):
        """Sets the video_metadata of this GetTextDetectionResponse.


        :param video_metadata: The video_metadata of this GetTextDetectionResponse.
        :type video_metadata: VideoMetadata
        """

        self._video_metadata = video_metadata

    @property
    def text_detections(self):
        """Gets the text_detections of this GetTextDetectionResponse.


        :return: The text_detections of this GetTextDetectionResponse.
        :rtype: List
        """
        return self._text_detections

    @text_detections.setter
    def text_detections(self, text_detections):
        """Sets the text_detections of this GetTextDetectionResponse.


        :param text_detections: The text_detections of this GetTextDetectionResponse.
        :type text_detections: List
        """

        self._text_detections = text_detections

    @property
    def next_token(self):
        """Gets the next_token of this GetTextDetectionResponse.


        :return: The next_token of this GetTextDetectionResponse.
        :rtype: str
        """
        return self._next_token

    @next_token.setter
    def next_token(self, next_token):
        """Sets the next_token of this GetTextDetectionResponse.


        :param next_token: The next_token of this GetTextDetectionResponse.
        :type next_token: str
        """

        self._next_token = next_token

    @property
    def text_model_version(self):
        """Gets the text_model_version of this GetTextDetectionResponse.


        :return: The text_model_version of this GetTextDetectionResponse.
        :rtype: str
        """
        return self._text_model_version

    @text_model_version.setter
    def text_model_version(self, text_model_version):
        """Sets the text_model_version of this GetTextDetectionResponse.


        :param text_model_version: The text_model_version of this GetTextDetectionResponse.
        :type text_model_version: str
        """

        self._text_model_version = text_model_version

    @property
    def job_id(self):
        """Gets the job_id of this GetTextDetectionResponse.


        :return: The job_id of this GetTextDetectionResponse.
        :rtype: str
        """
        return self._job_id

    @job_id.setter
    def job_id(self, job_id):
        """Sets the job_id of this GetTextDetectionResponse.


        :param job_id: The job_id of this GetTextDetectionResponse.
        :type job_id: str
        """

        self._job_id = job_id

    @property
    def video(self):
        """Gets the video of this GetTextDetectionResponse.


        :return: The video of this GetTextDetectionResponse.
        :rtype: Video
        """
        return self._video

    @video.setter
    def video(self, video):
        """Sets the video of this GetTextDetectionResponse.


        :param video: The video of this GetTextDetectionResponse.
        :type video: Video
        """

        self._video = video

    @property
    def job_tag(self):
        """Gets the job_tag of this GetTextDetectionResponse.


        :return: The job_tag of this GetTextDetectionResponse.
        :rtype: str
        """
        return self._job_tag

    @job_tag.setter
    def job_tag(self, job_tag):
        """Sets the job_tag of this GetTextDetectionResponse.


        :param job_tag: The job_tag of this GetTextDetectionResponse.
        :type job_tag: str
        """

        self._job_tag = job_tag
