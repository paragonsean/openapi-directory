# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class DatasetChanges(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, ground_truth: str=None):
        """DatasetChanges - a model defined in OpenAPI

        :param ground_truth: The ground_truth of this DatasetChanges.
        """
        self.openapi_types = {
            'ground_truth': str
        }

        self.attribute_map = {
            'ground_truth': 'GroundTruth'
        }

        self._ground_truth = ground_truth

    @classmethod
    def from_dict(cls, dikt: dict) -> 'DatasetChanges':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The DatasetChanges of this DatasetChanges.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def ground_truth(self):
        """Gets the ground_truth of this DatasetChanges.


        :return: The ground_truth of this DatasetChanges.
        :rtype: str
        """
        return self._ground_truth

    @ground_truth.setter
    def ground_truth(self, ground_truth):
        """Sets the ground_truth of this DatasetChanges.


        :param ground_truth: The ground_truth of this DatasetChanges.
        :type ground_truth: str
        """
        if ground_truth is None:
            raise ValueError("Invalid value for `ground_truth`, must not be `None`")

        self._ground_truth = ground_truth
