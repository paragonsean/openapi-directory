# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.general_labels_settings import GeneralLabelsSettings
from openapi_server import util


class LabelDetectionSettings(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, general_labels: GeneralLabelsSettings=None):
        """LabelDetectionSettings - a model defined in OpenAPI

        :param general_labels: The general_labels of this LabelDetectionSettings.
        """
        self.openapi_types = {
            'general_labels': GeneralLabelsSettings
        }

        self.attribute_map = {
            'general_labels': 'GeneralLabels'
        }

        self._general_labels = general_labels

    @classmethod
    def from_dict(cls, dikt: dict) -> 'LabelDetectionSettings':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The LabelDetectionSettings of this LabelDetectionSettings.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def general_labels(self):
        """Gets the general_labels of this LabelDetectionSettings.


        :return: The general_labels of this LabelDetectionSettings.
        :rtype: GeneralLabelsSettings
        """
        return self._general_labels

    @general_labels.setter
    def general_labels(self, general_labels):
        """Sets the general_labels of this LabelDetectionSettings.


        :param general_labels: The general_labels of this LabelDetectionSettings.
        :type general_labels: GeneralLabelsSettings
        """

        self._general_labels = general_labels
