# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.start_segment_detection_filters_shot_filter import StartSegmentDetectionFiltersShotFilter
from openapi_server.models.start_segment_detection_filters_technical_cue_filter import StartSegmentDetectionFiltersTechnicalCueFilter
from openapi_server import util


class StartSegmentDetectionRequestFilters(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, technical_cue_filter: StartSegmentDetectionFiltersTechnicalCueFilter=None, shot_filter: StartSegmentDetectionFiltersShotFilter=None):
        """StartSegmentDetectionRequestFilters - a model defined in OpenAPI

        :param technical_cue_filter: The technical_cue_filter of this StartSegmentDetectionRequestFilters.
        :param shot_filter: The shot_filter of this StartSegmentDetectionRequestFilters.
        """
        self.openapi_types = {
            'technical_cue_filter': StartSegmentDetectionFiltersTechnicalCueFilter,
            'shot_filter': StartSegmentDetectionFiltersShotFilter
        }

        self.attribute_map = {
            'technical_cue_filter': 'TechnicalCueFilter',
            'shot_filter': 'ShotFilter'
        }

        self._technical_cue_filter = technical_cue_filter
        self._shot_filter = shot_filter

    @classmethod
    def from_dict(cls, dikt: dict) -> 'StartSegmentDetectionRequestFilters':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The StartSegmentDetectionRequest_Filters of this StartSegmentDetectionRequestFilters.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def technical_cue_filter(self):
        """Gets the technical_cue_filter of this StartSegmentDetectionRequestFilters.


        :return: The technical_cue_filter of this StartSegmentDetectionRequestFilters.
        :rtype: StartSegmentDetectionFiltersTechnicalCueFilter
        """
        return self._technical_cue_filter

    @technical_cue_filter.setter
    def technical_cue_filter(self, technical_cue_filter):
        """Sets the technical_cue_filter of this StartSegmentDetectionRequestFilters.


        :param technical_cue_filter: The technical_cue_filter of this StartSegmentDetectionRequestFilters.
        :type technical_cue_filter: StartSegmentDetectionFiltersTechnicalCueFilter
        """

        self._technical_cue_filter = technical_cue_filter

    @property
    def shot_filter(self):
        """Gets the shot_filter of this StartSegmentDetectionRequestFilters.


        :return: The shot_filter of this StartSegmentDetectionRequestFilters.
        :rtype: StartSegmentDetectionFiltersShotFilter
        """
        return self._shot_filter

    @shot_filter.setter
    def shot_filter(self, shot_filter):
        """Sets the shot_filter of this StartSegmentDetectionRequestFilters.


        :param shot_filter: The shot_filter of this StartSegmentDetectionRequestFilters.
        :type shot_filter: StartSegmentDetectionFiltersShotFilter
        """

        self._shot_filter = shot_filter
