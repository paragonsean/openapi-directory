# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class CreateCollectionRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, collection_id: str=None, tags: Dict=None):
        """CreateCollectionRequest - a model defined in OpenAPI

        :param collection_id: The collection_id of this CreateCollectionRequest.
        :param tags: The tags of this CreateCollectionRequest.
        """
        self.openapi_types = {
            'collection_id': str,
            'tags': Dict
        }

        self.attribute_map = {
            'collection_id': 'CollectionId',
            'tags': 'Tags'
        }

        self._collection_id = collection_id
        self._tags = tags

    @classmethod
    def from_dict(cls, dikt: dict) -> 'CreateCollectionRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The CreateCollectionRequest of this CreateCollectionRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def collection_id(self):
        """Gets the collection_id of this CreateCollectionRequest.


        :return: The collection_id of this CreateCollectionRequest.
        :rtype: str
        """
        return self._collection_id

    @collection_id.setter
    def collection_id(self, collection_id):
        """Sets the collection_id of this CreateCollectionRequest.


        :param collection_id: The collection_id of this CreateCollectionRequest.
        :type collection_id: str
        """
        if collection_id is None:
            raise ValueError("Invalid value for `collection_id`, must not be `None`")

        self._collection_id = collection_id

    @property
    def tags(self):
        """Gets the tags of this CreateCollectionRequest.


        :return: The tags of this CreateCollectionRequest.
        :rtype: Dict
        """
        return self._tags

    @tags.setter
    def tags(self, tags):
        """Sets the tags of this CreateCollectionRequest.


        :param tags: The tags of this CreateCollectionRequest.
        :type tags: Dict
        """

        self._tags = tags
