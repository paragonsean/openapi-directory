# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.search_faces_by_image_response_searched_face_bounding_box import SearchFacesByImageResponseSearchedFaceBoundingBox
from openapi_server import util


class SearchFacesByImageResponse(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, searched_face_bounding_box: SearchFacesByImageResponseSearchedFaceBoundingBox=None, searched_face_confidence: float=None, face_matches: List=None, face_model_version: str=None):
        """SearchFacesByImageResponse - a model defined in OpenAPI

        :param searched_face_bounding_box: The searched_face_bounding_box of this SearchFacesByImageResponse.
        :param searched_face_confidence: The searched_face_confidence of this SearchFacesByImageResponse.
        :param face_matches: The face_matches of this SearchFacesByImageResponse.
        :param face_model_version: The face_model_version of this SearchFacesByImageResponse.
        """
        self.openapi_types = {
            'searched_face_bounding_box': SearchFacesByImageResponseSearchedFaceBoundingBox,
            'searched_face_confidence': float,
            'face_matches': List,
            'face_model_version': str
        }

        self.attribute_map = {
            'searched_face_bounding_box': 'SearchedFaceBoundingBox',
            'searched_face_confidence': 'SearchedFaceConfidence',
            'face_matches': 'FaceMatches',
            'face_model_version': 'FaceModelVersion'
        }

        self._searched_face_bounding_box = searched_face_bounding_box
        self._searched_face_confidence = searched_face_confidence
        self._face_matches = face_matches
        self._face_model_version = face_model_version

    @classmethod
    def from_dict(cls, dikt: dict) -> 'SearchFacesByImageResponse':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The SearchFacesByImageResponse of this SearchFacesByImageResponse.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def searched_face_bounding_box(self):
        """Gets the searched_face_bounding_box of this SearchFacesByImageResponse.


        :return: The searched_face_bounding_box of this SearchFacesByImageResponse.
        :rtype: SearchFacesByImageResponseSearchedFaceBoundingBox
        """
        return self._searched_face_bounding_box

    @searched_face_bounding_box.setter
    def searched_face_bounding_box(self, searched_face_bounding_box):
        """Sets the searched_face_bounding_box of this SearchFacesByImageResponse.


        :param searched_face_bounding_box: The searched_face_bounding_box of this SearchFacesByImageResponse.
        :type searched_face_bounding_box: SearchFacesByImageResponseSearchedFaceBoundingBox
        """

        self._searched_face_bounding_box = searched_face_bounding_box

    @property
    def searched_face_confidence(self):
        """Gets the searched_face_confidence of this SearchFacesByImageResponse.


        :return: The searched_face_confidence of this SearchFacesByImageResponse.
        :rtype: float
        """
        return self._searched_face_confidence

    @searched_face_confidence.setter
    def searched_face_confidence(self, searched_face_confidence):
        """Sets the searched_face_confidence of this SearchFacesByImageResponse.


        :param searched_face_confidence: The searched_face_confidence of this SearchFacesByImageResponse.
        :type searched_face_confidence: float
        """

        self._searched_face_confidence = searched_face_confidence

    @property
    def face_matches(self):
        """Gets the face_matches of this SearchFacesByImageResponse.


        :return: The face_matches of this SearchFacesByImageResponse.
        :rtype: List
        """
        return self._face_matches

    @face_matches.setter
    def face_matches(self, face_matches):
        """Sets the face_matches of this SearchFacesByImageResponse.


        :param face_matches: The face_matches of this SearchFacesByImageResponse.
        :type face_matches: List
        """

        self._face_matches = face_matches

    @property
    def face_model_version(self):
        """Gets the face_model_version of this SearchFacesByImageResponse.


        :return: The face_model_version of this SearchFacesByImageResponse.
        :rtype: str
        """
        return self._face_model_version

    @face_model_version.setter
    def face_model_version(self, face_model_version):
        """Sets the face_model_version of this SearchFacesByImageResponse.


        :param face_model_version: The face_model_version of this SearchFacesByImageResponse.
        :type face_model_version: str
        """

        self._face_model_version = face_model_version
