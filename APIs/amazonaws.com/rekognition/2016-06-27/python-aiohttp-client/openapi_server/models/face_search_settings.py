# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class FaceSearchSettings(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, collection_id: str=None, face_match_threshold: float=None):
        """FaceSearchSettings - a model defined in OpenAPI

        :param collection_id: The collection_id of this FaceSearchSettings.
        :param face_match_threshold: The face_match_threshold of this FaceSearchSettings.
        """
        self.openapi_types = {
            'collection_id': str,
            'face_match_threshold': float
        }

        self.attribute_map = {
            'collection_id': 'CollectionId',
            'face_match_threshold': 'FaceMatchThreshold'
        }

        self._collection_id = collection_id
        self._face_match_threshold = face_match_threshold

    @classmethod
    def from_dict(cls, dikt: dict) -> 'FaceSearchSettings':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The FaceSearchSettings of this FaceSearchSettings.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def collection_id(self):
        """Gets the collection_id of this FaceSearchSettings.


        :return: The collection_id of this FaceSearchSettings.
        :rtype: str
        """
        return self._collection_id

    @collection_id.setter
    def collection_id(self, collection_id):
        """Sets the collection_id of this FaceSearchSettings.


        :param collection_id: The collection_id of this FaceSearchSettings.
        :type collection_id: str
        """

        self._collection_id = collection_id

    @property
    def face_match_threshold(self):
        """Gets the face_match_threshold of this FaceSearchSettings.


        :return: The face_match_threshold of this FaceSearchSettings.
        :rtype: float
        """
        return self._face_match_threshold

    @face_match_threshold.setter
    def face_match_threshold(self, face_match_threshold):
        """Sets the face_match_threshold of this FaceSearchSettings.


        :param face_match_threshold: The face_match_threshold of this FaceSearchSettings.
        :type face_match_threshold: float
        """

        self._face_match_threshold = face_match_threshold
