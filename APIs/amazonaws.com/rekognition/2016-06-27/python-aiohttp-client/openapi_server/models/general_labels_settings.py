# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class GeneralLabelsSettings(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, label_inclusion_filters: List=None, label_exclusion_filters: List=None, label_category_inclusion_filters: List=None, label_category_exclusion_filters: List=None):
        """GeneralLabelsSettings - a model defined in OpenAPI

        :param label_inclusion_filters: The label_inclusion_filters of this GeneralLabelsSettings.
        :param label_exclusion_filters: The label_exclusion_filters of this GeneralLabelsSettings.
        :param label_category_inclusion_filters: The label_category_inclusion_filters of this GeneralLabelsSettings.
        :param label_category_exclusion_filters: The label_category_exclusion_filters of this GeneralLabelsSettings.
        """
        self.openapi_types = {
            'label_inclusion_filters': List,
            'label_exclusion_filters': List,
            'label_category_inclusion_filters': List,
            'label_category_exclusion_filters': List
        }

        self.attribute_map = {
            'label_inclusion_filters': 'LabelInclusionFilters',
            'label_exclusion_filters': 'LabelExclusionFilters',
            'label_category_inclusion_filters': 'LabelCategoryInclusionFilters',
            'label_category_exclusion_filters': 'LabelCategoryExclusionFilters'
        }

        self._label_inclusion_filters = label_inclusion_filters
        self._label_exclusion_filters = label_exclusion_filters
        self._label_category_inclusion_filters = label_category_inclusion_filters
        self._label_category_exclusion_filters = label_category_exclusion_filters

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GeneralLabelsSettings':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The GeneralLabelsSettings of this GeneralLabelsSettings.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def label_inclusion_filters(self):
        """Gets the label_inclusion_filters of this GeneralLabelsSettings.


        :return: The label_inclusion_filters of this GeneralLabelsSettings.
        :rtype: List
        """
        return self._label_inclusion_filters

    @label_inclusion_filters.setter
    def label_inclusion_filters(self, label_inclusion_filters):
        """Sets the label_inclusion_filters of this GeneralLabelsSettings.


        :param label_inclusion_filters: The label_inclusion_filters of this GeneralLabelsSettings.
        :type label_inclusion_filters: List
        """

        self._label_inclusion_filters = label_inclusion_filters

    @property
    def label_exclusion_filters(self):
        """Gets the label_exclusion_filters of this GeneralLabelsSettings.


        :return: The label_exclusion_filters of this GeneralLabelsSettings.
        :rtype: List
        """
        return self._label_exclusion_filters

    @label_exclusion_filters.setter
    def label_exclusion_filters(self, label_exclusion_filters):
        """Sets the label_exclusion_filters of this GeneralLabelsSettings.


        :param label_exclusion_filters: The label_exclusion_filters of this GeneralLabelsSettings.
        :type label_exclusion_filters: List
        """

        self._label_exclusion_filters = label_exclusion_filters

    @property
    def label_category_inclusion_filters(self):
        """Gets the label_category_inclusion_filters of this GeneralLabelsSettings.


        :return: The label_category_inclusion_filters of this GeneralLabelsSettings.
        :rtype: List
        """
        return self._label_category_inclusion_filters

    @label_category_inclusion_filters.setter
    def label_category_inclusion_filters(self, label_category_inclusion_filters):
        """Sets the label_category_inclusion_filters of this GeneralLabelsSettings.


        :param label_category_inclusion_filters: The label_category_inclusion_filters of this GeneralLabelsSettings.
        :type label_category_inclusion_filters: List
        """

        self._label_category_inclusion_filters = label_category_inclusion_filters

    @property
    def label_category_exclusion_filters(self):
        """Gets the label_category_exclusion_filters of this GeneralLabelsSettings.


        :return: The label_category_exclusion_filters of this GeneralLabelsSettings.
        :rtype: List
        """
        return self._label_category_exclusion_filters

    @label_category_exclusion_filters.setter
    def label_category_exclusion_filters(self, label_category_exclusion_filters):
        """Sets the label_category_exclusion_filters of this GeneralLabelsSettings.


        :param label_category_exclusion_filters: The label_category_exclusion_filters of this GeneralLabelsSettings.
        :type label_category_exclusion_filters: List
        """

        self._label_category_exclusion_filters = label_category_exclusion_filters
