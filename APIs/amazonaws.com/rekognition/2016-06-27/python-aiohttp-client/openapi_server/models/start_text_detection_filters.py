# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.start_text_detection_filters_word_filter import StartTextDetectionFiltersWordFilter
from openapi_server import util


class StartTextDetectionFilters(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, word_filter: StartTextDetectionFiltersWordFilter=None, regions_of_interest: List=None):
        """StartTextDetectionFilters - a model defined in OpenAPI

        :param word_filter: The word_filter of this StartTextDetectionFilters.
        :param regions_of_interest: The regions_of_interest of this StartTextDetectionFilters.
        """
        self.openapi_types = {
            'word_filter': StartTextDetectionFiltersWordFilter,
            'regions_of_interest': List
        }

        self.attribute_map = {
            'word_filter': 'WordFilter',
            'regions_of_interest': 'RegionsOfInterest'
        }

        self._word_filter = word_filter
        self._regions_of_interest = regions_of_interest

    @classmethod
    def from_dict(cls, dikt: dict) -> 'StartTextDetectionFilters':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The StartTextDetectionFilters of this StartTextDetectionFilters.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def word_filter(self):
        """Gets the word_filter of this StartTextDetectionFilters.


        :return: The word_filter of this StartTextDetectionFilters.
        :rtype: StartTextDetectionFiltersWordFilter
        """
        return self._word_filter

    @word_filter.setter
    def word_filter(self, word_filter):
        """Sets the word_filter of this StartTextDetectionFilters.


        :param word_filter: The word_filter of this StartTextDetectionFilters.
        :type word_filter: StartTextDetectionFiltersWordFilter
        """

        self._word_filter = word_filter

    @property
    def regions_of_interest(self):
        """Gets the regions_of_interest of this StartTextDetectionFilters.


        :return: The regions_of_interest of this StartTextDetectionFilters.
        :rtype: List
        """
        return self._regions_of_interest

    @regions_of_interest.setter
    def regions_of_interest(self, regions_of_interest):
        """Sets the regions_of_interest of this StartTextDetectionFilters.


        :param regions_of_interest: The regions_of_interest of this StartTextDetectionFilters.
        :type regions_of_interest: List
        """

        self._regions_of_interest = regions_of_interest
