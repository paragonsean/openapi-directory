# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class KinesisVideoStreamStartSelector(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, producer_timestamp: int=None, fragment_number: str=None):
        """KinesisVideoStreamStartSelector - a model defined in OpenAPI

        :param producer_timestamp: The producer_timestamp of this KinesisVideoStreamStartSelector.
        :param fragment_number: The fragment_number of this KinesisVideoStreamStartSelector.
        """
        self.openapi_types = {
            'producer_timestamp': int,
            'fragment_number': str
        }

        self.attribute_map = {
            'producer_timestamp': 'ProducerTimestamp',
            'fragment_number': 'FragmentNumber'
        }

        self._producer_timestamp = producer_timestamp
        self._fragment_number = fragment_number

    @classmethod
    def from_dict(cls, dikt: dict) -> 'KinesisVideoStreamStartSelector':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The KinesisVideoStreamStartSelector of this KinesisVideoStreamStartSelector.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def producer_timestamp(self):
        """Gets the producer_timestamp of this KinesisVideoStreamStartSelector.


        :return: The producer_timestamp of this KinesisVideoStreamStartSelector.
        :rtype: int
        """
        return self._producer_timestamp

    @producer_timestamp.setter
    def producer_timestamp(self, producer_timestamp):
        """Sets the producer_timestamp of this KinesisVideoStreamStartSelector.


        :param producer_timestamp: The producer_timestamp of this KinesisVideoStreamStartSelector.
        :type producer_timestamp: int
        """

        self._producer_timestamp = producer_timestamp

    @property
    def fragment_number(self):
        """Gets the fragment_number of this KinesisVideoStreamStartSelector.


        :return: The fragment_number of this KinesisVideoStreamStartSelector.
        :rtype: str
        """
        return self._fragment_number

    @fragment_number.setter
    def fragment_number(self, fragment_number):
        """Sets the fragment_number of this KinesisVideoStreamStartSelector.


        :param fragment_number: The fragment_number of this KinesisVideoStreamStartSelector.
        :type fragment_number: str
        """

        self._fragment_number = fragment_number
