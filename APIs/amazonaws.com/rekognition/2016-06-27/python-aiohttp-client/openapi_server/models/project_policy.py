# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class ProjectPolicy(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, project_arn: str=None, policy_name: str=None, policy_revision_id: str=None, policy_document: str=None, creation_timestamp: datetime=None, last_updated_timestamp: datetime=None):
        """ProjectPolicy - a model defined in OpenAPI

        :param project_arn: The project_arn of this ProjectPolicy.
        :param policy_name: The policy_name of this ProjectPolicy.
        :param policy_revision_id: The policy_revision_id of this ProjectPolicy.
        :param policy_document: The policy_document of this ProjectPolicy.
        :param creation_timestamp: The creation_timestamp of this ProjectPolicy.
        :param last_updated_timestamp: The last_updated_timestamp of this ProjectPolicy.
        """
        self.openapi_types = {
            'project_arn': str,
            'policy_name': str,
            'policy_revision_id': str,
            'policy_document': str,
            'creation_timestamp': datetime,
            'last_updated_timestamp': datetime
        }

        self.attribute_map = {
            'project_arn': 'ProjectArn',
            'policy_name': 'PolicyName',
            'policy_revision_id': 'PolicyRevisionId',
            'policy_document': 'PolicyDocument',
            'creation_timestamp': 'CreationTimestamp',
            'last_updated_timestamp': 'LastUpdatedTimestamp'
        }

        self._project_arn = project_arn
        self._policy_name = policy_name
        self._policy_revision_id = policy_revision_id
        self._policy_document = policy_document
        self._creation_timestamp = creation_timestamp
        self._last_updated_timestamp = last_updated_timestamp

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ProjectPolicy':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ProjectPolicy of this ProjectPolicy.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def project_arn(self):
        """Gets the project_arn of this ProjectPolicy.


        :return: The project_arn of this ProjectPolicy.
        :rtype: str
        """
        return self._project_arn

    @project_arn.setter
    def project_arn(self, project_arn):
        """Sets the project_arn of this ProjectPolicy.


        :param project_arn: The project_arn of this ProjectPolicy.
        :type project_arn: str
        """

        self._project_arn = project_arn

    @property
    def policy_name(self):
        """Gets the policy_name of this ProjectPolicy.


        :return: The policy_name of this ProjectPolicy.
        :rtype: str
        """
        return self._policy_name

    @policy_name.setter
    def policy_name(self, policy_name):
        """Sets the policy_name of this ProjectPolicy.


        :param policy_name: The policy_name of this ProjectPolicy.
        :type policy_name: str
        """

        self._policy_name = policy_name

    @property
    def policy_revision_id(self):
        """Gets the policy_revision_id of this ProjectPolicy.


        :return: The policy_revision_id of this ProjectPolicy.
        :rtype: str
        """
        return self._policy_revision_id

    @policy_revision_id.setter
    def policy_revision_id(self, policy_revision_id):
        """Sets the policy_revision_id of this ProjectPolicy.


        :param policy_revision_id: The policy_revision_id of this ProjectPolicy.
        :type policy_revision_id: str
        """

        self._policy_revision_id = policy_revision_id

    @property
    def policy_document(self):
        """Gets the policy_document of this ProjectPolicy.


        :return: The policy_document of this ProjectPolicy.
        :rtype: str
        """
        return self._policy_document

    @policy_document.setter
    def policy_document(self, policy_document):
        """Sets the policy_document of this ProjectPolicy.


        :param policy_document: The policy_document of this ProjectPolicy.
        :type policy_document: str
        """

        self._policy_document = policy_document

    @property
    def creation_timestamp(self):
        """Gets the creation_timestamp of this ProjectPolicy.


        :return: The creation_timestamp of this ProjectPolicy.
        :rtype: datetime
        """
        return self._creation_timestamp

    @creation_timestamp.setter
    def creation_timestamp(self, creation_timestamp):
        """Sets the creation_timestamp of this ProjectPolicy.


        :param creation_timestamp: The creation_timestamp of this ProjectPolicy.
        :type creation_timestamp: datetime
        """

        self._creation_timestamp = creation_timestamp

    @property
    def last_updated_timestamp(self):
        """Gets the last_updated_timestamp of this ProjectPolicy.


        :return: The last_updated_timestamp of this ProjectPolicy.
        :rtype: datetime
        """
        return self._last_updated_timestamp

    @last_updated_timestamp.setter
    def last_updated_timestamp(self, last_updated_timestamp):
        """Sets the last_updated_timestamp of this ProjectPolicy.


        :param last_updated_timestamp: The last_updated_timestamp of this ProjectPolicy.
        :type last_updated_timestamp: datetime
        """

        self._last_updated_timestamp = last_updated_timestamp
