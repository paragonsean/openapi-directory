# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class CreateStreamProcessorRequestDataSharingPreference(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, opt_in: bool=None):
        """CreateStreamProcessorRequestDataSharingPreference - a model defined in OpenAPI

        :param opt_in: The opt_in of this CreateStreamProcessorRequestDataSharingPreference.
        """
        self.openapi_types = {
            'opt_in': bool
        }

        self.attribute_map = {
            'opt_in': 'OptIn'
        }

        self._opt_in = opt_in

    @classmethod
    def from_dict(cls, dikt: dict) -> 'CreateStreamProcessorRequestDataSharingPreference':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The CreateStreamProcessorRequest_DataSharingPreference of this CreateStreamProcessorRequestDataSharingPreference.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def opt_in(self):
        """Gets the opt_in of this CreateStreamProcessorRequestDataSharingPreference.


        :return: The opt_in of this CreateStreamProcessorRequestDataSharingPreference.
        :rtype: bool
        """
        return self._opt_in

    @opt_in.setter
    def opt_in(self, opt_in):
        """Sets the opt_in of this CreateStreamProcessorRequestDataSharingPreference.


        :param opt_in: The opt_in of this CreateStreamProcessorRequestDataSharingPreference.
        :type opt_in: bool
        """
        if opt_in is None:
            raise ValueError("Invalid value for `opt_in`, must not be `None`")

        self._opt_in = opt_in
