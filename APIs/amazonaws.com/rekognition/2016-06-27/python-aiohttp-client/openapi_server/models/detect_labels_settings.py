# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.detect_labels_settings_general_labels import DetectLabelsSettingsGeneralLabels
from openapi_server.models.detect_labels_settings_image_properties import DetectLabelsSettingsImageProperties
from openapi_server import util


class DetectLabelsSettings(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, general_labels: DetectLabelsSettingsGeneralLabels=None, image_properties: DetectLabelsSettingsImageProperties=None):
        """DetectLabelsSettings - a model defined in OpenAPI

        :param general_labels: The general_labels of this DetectLabelsSettings.
        :param image_properties: The image_properties of this DetectLabelsSettings.
        """
        self.openapi_types = {
            'general_labels': DetectLabelsSettingsGeneralLabels,
            'image_properties': DetectLabelsSettingsImageProperties
        }

        self.attribute_map = {
            'general_labels': 'GeneralLabels',
            'image_properties': 'ImageProperties'
        }

        self._general_labels = general_labels
        self._image_properties = image_properties

    @classmethod
    def from_dict(cls, dikt: dict) -> 'DetectLabelsSettings':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The DetectLabelsSettings of this DetectLabelsSettings.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def general_labels(self):
        """Gets the general_labels of this DetectLabelsSettings.


        :return: The general_labels of this DetectLabelsSettings.
        :rtype: DetectLabelsSettingsGeneralLabels
        """
        return self._general_labels

    @general_labels.setter
    def general_labels(self, general_labels):
        """Sets the general_labels of this DetectLabelsSettings.


        :param general_labels: The general_labels of this DetectLabelsSettings.
        :type general_labels: DetectLabelsSettingsGeneralLabels
        """

        self._general_labels = general_labels

    @property
    def image_properties(self):
        """Gets the image_properties of this DetectLabelsSettings.


        :return: The image_properties of this DetectLabelsSettings.
        :rtype: DetectLabelsSettingsImageProperties
        """
        return self._image_properties

    @image_properties.setter
    def image_properties(self, image_properties):
        """Sets the image_properties of this DetectLabelsSettings.


        :param image_properties: The image_properties of this DetectLabelsSettings.
        :type image_properties: DetectLabelsSettingsImageProperties
        """

        self._image_properties = image_properties
