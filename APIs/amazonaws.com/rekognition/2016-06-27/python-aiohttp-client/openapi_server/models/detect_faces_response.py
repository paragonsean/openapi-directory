# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.orientation_correction import OrientationCorrection
from openapi_server import util


class DetectFacesResponse(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, face_details: List=None, orientation_correction: OrientationCorrection=None):
        """DetectFacesResponse - a model defined in OpenAPI

        :param face_details: The face_details of this DetectFacesResponse.
        :param orientation_correction: The orientation_correction of this DetectFacesResponse.
        """
        self.openapi_types = {
            'face_details': List,
            'orientation_correction': OrientationCorrection
        }

        self.attribute_map = {
            'face_details': 'FaceDetails',
            'orientation_correction': 'OrientationCorrection'
        }

        self._face_details = face_details
        self._orientation_correction = orientation_correction

    @classmethod
    def from_dict(cls, dikt: dict) -> 'DetectFacesResponse':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The DetectFacesResponse of this DetectFacesResponse.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def face_details(self):
        """Gets the face_details of this DetectFacesResponse.


        :return: The face_details of this DetectFacesResponse.
        :rtype: List
        """
        return self._face_details

    @face_details.setter
    def face_details(self, face_details):
        """Sets the face_details of this DetectFacesResponse.


        :param face_details: The face_details of this DetectFacesResponse.
        :type face_details: List
        """

        self._face_details = face_details

    @property
    def orientation_correction(self):
        """Gets the orientation_correction of this DetectFacesResponse.


        :return: The orientation_correction of this DetectFacesResponse.
        :rtype: OrientationCorrection
        """
        return self._orientation_correction

    @orientation_correction.setter
    def orientation_correction(self, orientation_correction):
        """Sets the orientation_correction of this DetectFacesResponse.


        :param orientation_correction: The orientation_correction of this DetectFacesResponse.
        :type orientation_correction: OrientationCorrection
        """

        self._orientation_correction = orientation_correction
