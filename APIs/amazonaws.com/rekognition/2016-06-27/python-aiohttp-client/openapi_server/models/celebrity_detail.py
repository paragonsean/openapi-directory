# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.celebrity_detail_bounding_box import CelebrityDetailBoundingBox
from openapi_server.models.celebrity_detail_face import CelebrityDetailFace
from openapi_server.models.get_celebrity_info_response_known_gender import GetCelebrityInfoResponseKnownGender
from openapi_server import util


class CelebrityDetail(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, urls: List=None, name: str=None, id: str=None, confidence: float=None, bounding_box: CelebrityDetailBoundingBox=None, face: CelebrityDetailFace=None, known_gender: GetCelebrityInfoResponseKnownGender=None):
        """CelebrityDetail - a model defined in OpenAPI

        :param urls: The urls of this CelebrityDetail.
        :param name: The name of this CelebrityDetail.
        :param id: The id of this CelebrityDetail.
        :param confidence: The confidence of this CelebrityDetail.
        :param bounding_box: The bounding_box of this CelebrityDetail.
        :param face: The face of this CelebrityDetail.
        :param known_gender: The known_gender of this CelebrityDetail.
        """
        self.openapi_types = {
            'urls': List,
            'name': str,
            'id': str,
            'confidence': float,
            'bounding_box': CelebrityDetailBoundingBox,
            'face': CelebrityDetailFace,
            'known_gender': GetCelebrityInfoResponseKnownGender
        }

        self.attribute_map = {
            'urls': 'Urls',
            'name': 'Name',
            'id': 'Id',
            'confidence': 'Confidence',
            'bounding_box': 'BoundingBox',
            'face': 'Face',
            'known_gender': 'KnownGender'
        }

        self._urls = urls
        self._name = name
        self._id = id
        self._confidence = confidence
        self._bounding_box = bounding_box
        self._face = face
        self._known_gender = known_gender

    @classmethod
    def from_dict(cls, dikt: dict) -> 'CelebrityDetail':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The CelebrityDetail of this CelebrityDetail.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def urls(self):
        """Gets the urls of this CelebrityDetail.


        :return: The urls of this CelebrityDetail.
        :rtype: List
        """
        return self._urls

    @urls.setter
    def urls(self, urls):
        """Sets the urls of this CelebrityDetail.


        :param urls: The urls of this CelebrityDetail.
        :type urls: List
        """

        self._urls = urls

    @property
    def name(self):
        """Gets the name of this CelebrityDetail.


        :return: The name of this CelebrityDetail.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this CelebrityDetail.


        :param name: The name of this CelebrityDetail.
        :type name: str
        """

        self._name = name

    @property
    def id(self):
        """Gets the id of this CelebrityDetail.


        :return: The id of this CelebrityDetail.
        :rtype: str
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this CelebrityDetail.


        :param id: The id of this CelebrityDetail.
        :type id: str
        """

        self._id = id

    @property
    def confidence(self):
        """Gets the confidence of this CelebrityDetail.


        :return: The confidence of this CelebrityDetail.
        :rtype: float
        """
        return self._confidence

    @confidence.setter
    def confidence(self, confidence):
        """Sets the confidence of this CelebrityDetail.


        :param confidence: The confidence of this CelebrityDetail.
        :type confidence: float
        """

        self._confidence = confidence

    @property
    def bounding_box(self):
        """Gets the bounding_box of this CelebrityDetail.


        :return: The bounding_box of this CelebrityDetail.
        :rtype: CelebrityDetailBoundingBox
        """
        return self._bounding_box

    @bounding_box.setter
    def bounding_box(self, bounding_box):
        """Sets the bounding_box of this CelebrityDetail.


        :param bounding_box: The bounding_box of this CelebrityDetail.
        :type bounding_box: CelebrityDetailBoundingBox
        """

        self._bounding_box = bounding_box

    @property
    def face(self):
        """Gets the face of this CelebrityDetail.


        :return: The face of this CelebrityDetail.
        :rtype: CelebrityDetailFace
        """
        return self._face

    @face.setter
    def face(self, face):
        """Sets the face of this CelebrityDetail.


        :param face: The face of this CelebrityDetail.
        :type face: CelebrityDetailFace
        """

        self._face = face

    @property
    def known_gender(self):
        """Gets the known_gender of this CelebrityDetail.


        :return: The known_gender of this CelebrityDetail.
        :rtype: GetCelebrityInfoResponseKnownGender
        """
        return self._known_gender

    @known_gender.setter
    def known_gender(self, known_gender):
        """Sets the known_gender of this CelebrityDetail.


        :param known_gender: The known_gender of this CelebrityDetail.
        :type known_gender: GetCelebrityInfoResponseKnownGender
        """

        self._known_gender = known_gender
