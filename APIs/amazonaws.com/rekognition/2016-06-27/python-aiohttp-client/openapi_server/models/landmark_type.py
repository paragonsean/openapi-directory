# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class LandmarkType(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    """
    allowed enum values
    """
    EYELEFT = 'eyeLeft'
    EYERIGHT = 'eyeRight'
    NOSE = 'nose'
    MOUTHLEFT = 'mouthLeft'
    MOUTHRIGHT = 'mouthRight'
    LEFTEYEBROWLEFT = 'leftEyeBrowLeft'
    LEFTEYEBROWRIGHT = 'leftEyeBrowRight'
    LEFTEYEBROWUP = 'leftEyeBrowUp'
    RIGHTEYEBROWLEFT = 'rightEyeBrowLeft'
    RIGHTEYEBROWRIGHT = 'rightEyeBrowRight'
    RIGHTEYEBROWUP = 'rightEyeBrowUp'
    LEFTEYELEFT = 'leftEyeLeft'
    LEFTEYERIGHT = 'leftEyeRight'
    LEFTEYEUP = 'leftEyeUp'
    LEFTEYEDOWN = 'leftEyeDown'
    RIGHTEYELEFT = 'rightEyeLeft'
    RIGHTEYERIGHT = 'rightEyeRight'
    RIGHTEYEUP = 'rightEyeUp'
    RIGHTEYEDOWN = 'rightEyeDown'
    NOSELEFT = 'noseLeft'
    NOSERIGHT = 'noseRight'
    MOUTHUP = 'mouthUp'
    MOUTHDOWN = 'mouthDown'
    LEFTPUPIL = 'leftPupil'
    RIGHTPUPIL = 'rightPupil'
    UPPERJAWLINELEFT = 'upperJawlineLeft'
    MIDJAWLINELEFT = 'midJawlineLeft'
    CHINBOTTOM = 'chinBottom'
    MIDJAWLINERIGHT = 'midJawlineRight'
    UPPERJAWLINERIGHT = 'upperJawlineRight'

    def __init__(self):
        """LandmarkType - a model defined in OpenAPI

        """
        self.openapi_types = {
        }

        self.attribute_map = {
        }

    @classmethod
    def from_dict(cls, dikt: dict) -> 'LandmarkType':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The LandmarkType of this LandmarkType.
        """
        return util.deserialize_model(dikt, cls)
