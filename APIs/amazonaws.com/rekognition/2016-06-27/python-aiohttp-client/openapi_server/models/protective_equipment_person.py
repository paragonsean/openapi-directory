# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.protective_equipment_person_bounding_box import ProtectiveEquipmentPersonBoundingBox
from openapi_server import util


class ProtectiveEquipmentPerson(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, body_parts: List=None, bounding_box: ProtectiveEquipmentPersonBoundingBox=None, confidence: float=None, id: int=None):
        """ProtectiveEquipmentPerson - a model defined in OpenAPI

        :param body_parts: The body_parts of this ProtectiveEquipmentPerson.
        :param bounding_box: The bounding_box of this ProtectiveEquipmentPerson.
        :param confidence: The confidence of this ProtectiveEquipmentPerson.
        :param id: The id of this ProtectiveEquipmentPerson.
        """
        self.openapi_types = {
            'body_parts': List,
            'bounding_box': ProtectiveEquipmentPersonBoundingBox,
            'confidence': float,
            'id': int
        }

        self.attribute_map = {
            'body_parts': 'BodyParts',
            'bounding_box': 'BoundingBox',
            'confidence': 'Confidence',
            'id': 'Id'
        }

        self._body_parts = body_parts
        self._bounding_box = bounding_box
        self._confidence = confidence
        self._id = id

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ProtectiveEquipmentPerson':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ProtectiveEquipmentPerson of this ProtectiveEquipmentPerson.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def body_parts(self):
        """Gets the body_parts of this ProtectiveEquipmentPerson.


        :return: The body_parts of this ProtectiveEquipmentPerson.
        :rtype: List
        """
        return self._body_parts

    @body_parts.setter
    def body_parts(self, body_parts):
        """Sets the body_parts of this ProtectiveEquipmentPerson.


        :param body_parts: The body_parts of this ProtectiveEquipmentPerson.
        :type body_parts: List
        """

        self._body_parts = body_parts

    @property
    def bounding_box(self):
        """Gets the bounding_box of this ProtectiveEquipmentPerson.


        :return: The bounding_box of this ProtectiveEquipmentPerson.
        :rtype: ProtectiveEquipmentPersonBoundingBox
        """
        return self._bounding_box

    @bounding_box.setter
    def bounding_box(self, bounding_box):
        """Sets the bounding_box of this ProtectiveEquipmentPerson.


        :param bounding_box: The bounding_box of this ProtectiveEquipmentPerson.
        :type bounding_box: ProtectiveEquipmentPersonBoundingBox
        """

        self._bounding_box = bounding_box

    @property
    def confidence(self):
        """Gets the confidence of this ProtectiveEquipmentPerson.


        :return: The confidence of this ProtectiveEquipmentPerson.
        :rtype: float
        """
        return self._confidence

    @confidence.setter
    def confidence(self, confidence):
        """Sets the confidence of this ProtectiveEquipmentPerson.


        :param confidence: The confidence of this ProtectiveEquipmentPerson.
        :type confidence: float
        """

        self._confidence = confidence

    @property
    def id(self):
        """Gets the id of this ProtectiveEquipmentPerson.


        :return: The id of this ProtectiveEquipmentPerson.
        :rtype: int
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this ProtectiveEquipmentPerson.


        :param id: The id of this ProtectiveEquipmentPerson.
        :type id: int
        """

        self._id = id
