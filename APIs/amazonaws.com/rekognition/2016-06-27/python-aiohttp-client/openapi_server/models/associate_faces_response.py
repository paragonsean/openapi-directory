# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.user_status import UserStatus
from openapi_server import util


class AssociateFacesResponse(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, associated_faces: List=None, unsuccessful_face_associations: List=None, user_status: UserStatus=None):
        """AssociateFacesResponse - a model defined in OpenAPI

        :param associated_faces: The associated_faces of this AssociateFacesResponse.
        :param unsuccessful_face_associations: The unsuccessful_face_associations of this AssociateFacesResponse.
        :param user_status: The user_status of this AssociateFacesResponse.
        """
        self.openapi_types = {
            'associated_faces': List,
            'unsuccessful_face_associations': List,
            'user_status': UserStatus
        }

        self.attribute_map = {
            'associated_faces': 'AssociatedFaces',
            'unsuccessful_face_associations': 'UnsuccessfulFaceAssociations',
            'user_status': 'UserStatus'
        }

        self._associated_faces = associated_faces
        self._unsuccessful_face_associations = unsuccessful_face_associations
        self._user_status = user_status

    @classmethod
    def from_dict(cls, dikt: dict) -> 'AssociateFacesResponse':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The AssociateFacesResponse of this AssociateFacesResponse.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def associated_faces(self):
        """Gets the associated_faces of this AssociateFacesResponse.


        :return: The associated_faces of this AssociateFacesResponse.
        :rtype: List
        """
        return self._associated_faces

    @associated_faces.setter
    def associated_faces(self, associated_faces):
        """Sets the associated_faces of this AssociateFacesResponse.


        :param associated_faces: The associated_faces of this AssociateFacesResponse.
        :type associated_faces: List
        """

        self._associated_faces = associated_faces

    @property
    def unsuccessful_face_associations(self):
        """Gets the unsuccessful_face_associations of this AssociateFacesResponse.


        :return: The unsuccessful_face_associations of this AssociateFacesResponse.
        :rtype: List
        """
        return self._unsuccessful_face_associations

    @unsuccessful_face_associations.setter
    def unsuccessful_face_associations(self, unsuccessful_face_associations):
        """Sets the unsuccessful_face_associations of this AssociateFacesResponse.


        :param unsuccessful_face_associations: The unsuccessful_face_associations of this AssociateFacesResponse.
        :type unsuccessful_face_associations: List
        """

        self._unsuccessful_face_associations = unsuccessful_face_associations

    @property
    def user_status(self):
        """Gets the user_status of this AssociateFacesResponse.


        :return: The user_status of this AssociateFacesResponse.
        :rtype: UserStatus
        """
        return self._user_status

    @user_status.setter
    def user_status(self, user_status):
        """Sets the user_status of this AssociateFacesResponse.


        :param user_status: The user_status of this AssociateFacesResponse.
        :type user_status: UserStatus
        """

        self._user_status = user_status
