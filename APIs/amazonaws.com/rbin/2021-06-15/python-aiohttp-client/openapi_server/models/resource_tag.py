# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class ResourceTag(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, resource_tag_key: str=None, resource_tag_value: str=None):
        """ResourceTag - a model defined in OpenAPI

        :param resource_tag_key: The resource_tag_key of this ResourceTag.
        :param resource_tag_value: The resource_tag_value of this ResourceTag.
        """
        self.openapi_types = {
            'resource_tag_key': str,
            'resource_tag_value': str
        }

        self.attribute_map = {
            'resource_tag_key': 'ResourceTagKey',
            'resource_tag_value': 'ResourceTagValue'
        }

        self._resource_tag_key = resource_tag_key
        self._resource_tag_value = resource_tag_value

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ResourceTag':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ResourceTag of this ResourceTag.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def resource_tag_key(self):
        """Gets the resource_tag_key of this ResourceTag.


        :return: The resource_tag_key of this ResourceTag.
        :rtype: str
        """
        return self._resource_tag_key

    @resource_tag_key.setter
    def resource_tag_key(self, resource_tag_key):
        """Sets the resource_tag_key of this ResourceTag.


        :param resource_tag_key: The resource_tag_key of this ResourceTag.
        :type resource_tag_key: str
        """
        if resource_tag_key is None:
            raise ValueError("Invalid value for `resource_tag_key`, must not be `None`")

        self._resource_tag_key = resource_tag_key

    @property
    def resource_tag_value(self):
        """Gets the resource_tag_value of this ResourceTag.


        :return: The resource_tag_value of this ResourceTag.
        :rtype: str
        """
        return self._resource_tag_value

    @resource_tag_value.setter
    def resource_tag_value(self, resource_tag_value):
        """Sets the resource_tag_value of this ResourceTag.


        :param resource_tag_value: The resource_tag_value of this ResourceTag.
        :type resource_tag_value: str
        """

        self._resource_tag_value = resource_tag_value
