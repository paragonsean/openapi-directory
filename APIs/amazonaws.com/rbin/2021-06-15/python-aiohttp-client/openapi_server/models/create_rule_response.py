# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.create_rule_response_lock_configuration import CreateRuleResponseLockConfiguration
from openapi_server.models.lock_state import LockState
from openapi_server.models.resource_type import ResourceType
from openapi_server.models.retention_period import RetentionPeriod
from openapi_server.models.rule_status import RuleStatus
from openapi_server import util


class CreateRuleResponse(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, identifier: str=None, retention_period: RetentionPeriod=None, description: str=None, tags: List=None, resource_type: ResourceType=None, resource_tags: List=None, status: RuleStatus=None, lock_configuration: CreateRuleResponseLockConfiguration=None, lock_state: LockState=None):
        """CreateRuleResponse - a model defined in OpenAPI

        :param identifier: The identifier of this CreateRuleResponse.
        :param retention_period: The retention_period of this CreateRuleResponse.
        :param description: The description of this CreateRuleResponse.
        :param tags: The tags of this CreateRuleResponse.
        :param resource_type: The resource_type of this CreateRuleResponse.
        :param resource_tags: The resource_tags of this CreateRuleResponse.
        :param status: The status of this CreateRuleResponse.
        :param lock_configuration: The lock_configuration of this CreateRuleResponse.
        :param lock_state: The lock_state of this CreateRuleResponse.
        """
        self.openapi_types = {
            'identifier': str,
            'retention_period': RetentionPeriod,
            'description': str,
            'tags': List,
            'resource_type': ResourceType,
            'resource_tags': List,
            'status': RuleStatus,
            'lock_configuration': CreateRuleResponseLockConfiguration,
            'lock_state': LockState
        }

        self.attribute_map = {
            'identifier': 'Identifier',
            'retention_period': 'RetentionPeriod',
            'description': 'Description',
            'tags': 'Tags',
            'resource_type': 'ResourceType',
            'resource_tags': 'ResourceTags',
            'status': 'Status',
            'lock_configuration': 'LockConfiguration',
            'lock_state': 'LockState'
        }

        self._identifier = identifier
        self._retention_period = retention_period
        self._description = description
        self._tags = tags
        self._resource_type = resource_type
        self._resource_tags = resource_tags
        self._status = status
        self._lock_configuration = lock_configuration
        self._lock_state = lock_state

    @classmethod
    def from_dict(cls, dikt: dict) -> 'CreateRuleResponse':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The CreateRuleResponse of this CreateRuleResponse.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def identifier(self):
        """Gets the identifier of this CreateRuleResponse.


        :return: The identifier of this CreateRuleResponse.
        :rtype: str
        """
        return self._identifier

    @identifier.setter
    def identifier(self, identifier):
        """Sets the identifier of this CreateRuleResponse.


        :param identifier: The identifier of this CreateRuleResponse.
        :type identifier: str
        """

        self._identifier = identifier

    @property
    def retention_period(self):
        """Gets the retention_period of this CreateRuleResponse.


        :return: The retention_period of this CreateRuleResponse.
        :rtype: RetentionPeriod
        """
        return self._retention_period

    @retention_period.setter
    def retention_period(self, retention_period):
        """Sets the retention_period of this CreateRuleResponse.


        :param retention_period: The retention_period of this CreateRuleResponse.
        :type retention_period: RetentionPeriod
        """

        self._retention_period = retention_period

    @property
    def description(self):
        """Gets the description of this CreateRuleResponse.


        :return: The description of this CreateRuleResponse.
        :rtype: str
        """
        return self._description

    @description.setter
    def description(self, description):
        """Sets the description of this CreateRuleResponse.


        :param description: The description of this CreateRuleResponse.
        :type description: str
        """

        self._description = description

    @property
    def tags(self):
        """Gets the tags of this CreateRuleResponse.


        :return: The tags of this CreateRuleResponse.
        :rtype: List
        """
        return self._tags

    @tags.setter
    def tags(self, tags):
        """Sets the tags of this CreateRuleResponse.


        :param tags: The tags of this CreateRuleResponse.
        :type tags: List
        """

        self._tags = tags

    @property
    def resource_type(self):
        """Gets the resource_type of this CreateRuleResponse.


        :return: The resource_type of this CreateRuleResponse.
        :rtype: ResourceType
        """
        return self._resource_type

    @resource_type.setter
    def resource_type(self, resource_type):
        """Sets the resource_type of this CreateRuleResponse.


        :param resource_type: The resource_type of this CreateRuleResponse.
        :type resource_type: ResourceType
        """

        self._resource_type = resource_type

    @property
    def resource_tags(self):
        """Gets the resource_tags of this CreateRuleResponse.


        :return: The resource_tags of this CreateRuleResponse.
        :rtype: List
        """
        return self._resource_tags

    @resource_tags.setter
    def resource_tags(self, resource_tags):
        """Sets the resource_tags of this CreateRuleResponse.


        :param resource_tags: The resource_tags of this CreateRuleResponse.
        :type resource_tags: List
        """

        self._resource_tags = resource_tags

    @property
    def status(self):
        """Gets the status of this CreateRuleResponse.


        :return: The status of this CreateRuleResponse.
        :rtype: RuleStatus
        """
        return self._status

    @status.setter
    def status(self, status):
        """Sets the status of this CreateRuleResponse.


        :param status: The status of this CreateRuleResponse.
        :type status: RuleStatus
        """

        self._status = status

    @property
    def lock_configuration(self):
        """Gets the lock_configuration of this CreateRuleResponse.


        :return: The lock_configuration of this CreateRuleResponse.
        :rtype: CreateRuleResponseLockConfiguration
        """
        return self._lock_configuration

    @lock_configuration.setter
    def lock_configuration(self, lock_configuration):
        """Sets the lock_configuration of this CreateRuleResponse.


        :param lock_configuration: The lock_configuration of this CreateRuleResponse.
        :type lock_configuration: CreateRuleResponseLockConfiguration
        """

        self._lock_configuration = lock_configuration

    @property
    def lock_state(self):
        """Gets the lock_state of this CreateRuleResponse.


        :return: The lock_state of this CreateRuleResponse.
        :rtype: LockState
        """
        return self._lock_state

    @lock_state.setter
    def lock_state(self, lock_state):
        """Sets the lock_state of this CreateRuleResponse.


        :param lock_state: The lock_state of this CreateRuleResponse.
        :type lock_state: LockState
        """

        self._lock_state = lock_state
