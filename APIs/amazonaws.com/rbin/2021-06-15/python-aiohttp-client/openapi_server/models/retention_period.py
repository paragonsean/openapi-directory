# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.retention_period_unit import RetentionPeriodUnit
from openapi_server import util


class RetentionPeriod(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, retention_period_value: int=None, retention_period_unit: RetentionPeriodUnit=None):
        """RetentionPeriod - a model defined in OpenAPI

        :param retention_period_value: The retention_period_value of this RetentionPeriod.
        :param retention_period_unit: The retention_period_unit of this RetentionPeriod.
        """
        self.openapi_types = {
            'retention_period_value': int,
            'retention_period_unit': RetentionPeriodUnit
        }

        self.attribute_map = {
            'retention_period_value': 'RetentionPeriodValue',
            'retention_period_unit': 'RetentionPeriodUnit'
        }

        self._retention_period_value = retention_period_value
        self._retention_period_unit = retention_period_unit

    @classmethod
    def from_dict(cls, dikt: dict) -> 'RetentionPeriod':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The RetentionPeriod of this RetentionPeriod.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def retention_period_value(self):
        """Gets the retention_period_value of this RetentionPeriod.


        :return: The retention_period_value of this RetentionPeriod.
        :rtype: int
        """
        return self._retention_period_value

    @retention_period_value.setter
    def retention_period_value(self, retention_period_value):
        """Sets the retention_period_value of this RetentionPeriod.


        :param retention_period_value: The retention_period_value of this RetentionPeriod.
        :type retention_period_value: int
        """
        if retention_period_value is None:
            raise ValueError("Invalid value for `retention_period_value`, must not be `None`")

        self._retention_period_value = retention_period_value

    @property
    def retention_period_unit(self):
        """Gets the retention_period_unit of this RetentionPeriod.


        :return: The retention_period_unit of this RetentionPeriod.
        :rtype: RetentionPeriodUnit
        """
        return self._retention_period_unit

    @retention_period_unit.setter
    def retention_period_unit(self, retention_period_unit):
        """Sets the retention_period_unit of this RetentionPeriod.


        :param retention_period_unit: The retention_period_unit of this RetentionPeriod.
        :type retention_period_unit: RetentionPeriodUnit
        """
        if retention_period_unit is None:
            raise ValueError("Invalid value for `retention_period_unit`, must not be `None`")

        self._retention_period_unit = retention_period_unit
