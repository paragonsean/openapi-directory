/*
 * Amazon Recycle Bin
 * <p>This is the <i>Recycle Bin API Reference</i>. This documentation provides descriptions and syntax for each of the actions and data types in Recycle Bin.</p> <p>Recycle Bin is a resource recovery feature that enables you to restore accidentally deleted snapshots and EBS-backed AMIs. When using Recycle Bin, if your resources are deleted, they are retained in the Recycle Bin for a time period that you specify.</p> <p>You can restore a resource from the Recycle Bin at any time before its retention period expires. After you restore a resource from the Recycle Bin, the resource is removed from the Recycle Bin, and you can then use it in the same way you use any other resource of that type in your account. If the retention period expires and the resource is not restored, the resource is permanently deleted from the Recycle Bin and is no longer available for recovery. For more information about Recycle Bin, see <a href=\"https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/snapshot-recycle-bin.html\"> Recycle Bin</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>.</p>
 *
 * The version of the OpenAPI document: 2021-06-15
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.CreateRuleResponseLockConfiguration;
import org.openapitools.client.model.LockState;
import org.openapitools.client.model.ResourceType;
import org.openapitools.client.model.RetentionPeriod;
import org.openapitools.client.model.RuleStatus;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * CreateRuleResponse
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T12:10:55.433609-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class CreateRuleResponse {
  public static final String SERIALIZED_NAME_IDENTIFIER = "Identifier";
  @SerializedName(SERIALIZED_NAME_IDENTIFIER)
  private String identifier;

  public static final String SERIALIZED_NAME_RETENTION_PERIOD = "RetentionPeriod";
  @SerializedName(SERIALIZED_NAME_RETENTION_PERIOD)
  private RetentionPeriod retentionPeriod;

  public static final String SERIALIZED_NAME_DESCRIPTION = "Description";
  @SerializedName(SERIALIZED_NAME_DESCRIPTION)
  private String description;

  public static final String SERIALIZED_NAME_TAGS = "Tags";
  @SerializedName(SERIALIZED_NAME_TAGS)
  private List tags;

  public static final String SERIALIZED_NAME_RESOURCE_TYPE = "ResourceType";
  @SerializedName(SERIALIZED_NAME_RESOURCE_TYPE)
  private ResourceType resourceType;

  public static final String SERIALIZED_NAME_RESOURCE_TAGS = "ResourceTags";
  @SerializedName(SERIALIZED_NAME_RESOURCE_TAGS)
  private List resourceTags;

  public static final String SERIALIZED_NAME_STATUS = "Status";
  @SerializedName(SERIALIZED_NAME_STATUS)
  private RuleStatus status;

  public static final String SERIALIZED_NAME_LOCK_CONFIGURATION = "LockConfiguration";
  @SerializedName(SERIALIZED_NAME_LOCK_CONFIGURATION)
  private CreateRuleResponseLockConfiguration lockConfiguration;

  public static final String SERIALIZED_NAME_LOCK_STATE = "LockState";
  @SerializedName(SERIALIZED_NAME_LOCK_STATE)
  private LockState lockState;

  public CreateRuleResponse() {
  }

  public CreateRuleResponse identifier(String identifier) {
    this.identifier = identifier;
    return this;
  }

  /**
   * Get identifier
   * @return identifier
   */
  @javax.annotation.Nullable
  public String getIdentifier() {
    return identifier;
  }

  public void setIdentifier(String identifier) {
    this.identifier = identifier;
  }


  public CreateRuleResponse retentionPeriod(RetentionPeriod retentionPeriod) {
    this.retentionPeriod = retentionPeriod;
    return this;
  }

  /**
   * Get retentionPeriod
   * @return retentionPeriod
   */
  @javax.annotation.Nullable
  public RetentionPeriod getRetentionPeriod() {
    return retentionPeriod;
  }

  public void setRetentionPeriod(RetentionPeriod retentionPeriod) {
    this.retentionPeriod = retentionPeriod;
  }


  public CreateRuleResponse description(String description) {
    this.description = description;
    return this;
  }

  /**
   * Get description
   * @return description
   */
  @javax.annotation.Nullable
  public String getDescription() {
    return description;
  }

  public void setDescription(String description) {
    this.description = description;
  }


  public CreateRuleResponse tags(List tags) {
    this.tags = tags;
    return this;
  }

  /**
   * Get tags
   * @return tags
   */
  @javax.annotation.Nullable
  public List getTags() {
    return tags;
  }

  public void setTags(List tags) {
    this.tags = tags;
  }


  public CreateRuleResponse resourceType(ResourceType resourceType) {
    this.resourceType = resourceType;
    return this;
  }

  /**
   * Get resourceType
   * @return resourceType
   */
  @javax.annotation.Nullable
  public ResourceType getResourceType() {
    return resourceType;
  }

  public void setResourceType(ResourceType resourceType) {
    this.resourceType = resourceType;
  }


  public CreateRuleResponse resourceTags(List resourceTags) {
    this.resourceTags = resourceTags;
    return this;
  }

  /**
   * Get resourceTags
   * @return resourceTags
   */
  @javax.annotation.Nullable
  public List getResourceTags() {
    return resourceTags;
  }

  public void setResourceTags(List resourceTags) {
    this.resourceTags = resourceTags;
  }


  public CreateRuleResponse status(RuleStatus status) {
    this.status = status;
    return this;
  }

  /**
   * Get status
   * @return status
   */
  @javax.annotation.Nullable
  public RuleStatus getStatus() {
    return status;
  }

  public void setStatus(RuleStatus status) {
    this.status = status;
  }


  public CreateRuleResponse lockConfiguration(CreateRuleResponseLockConfiguration lockConfiguration) {
    this.lockConfiguration = lockConfiguration;
    return this;
  }

  /**
   * Get lockConfiguration
   * @return lockConfiguration
   */
  @javax.annotation.Nullable
  public CreateRuleResponseLockConfiguration getLockConfiguration() {
    return lockConfiguration;
  }

  public void setLockConfiguration(CreateRuleResponseLockConfiguration lockConfiguration) {
    this.lockConfiguration = lockConfiguration;
  }


  public CreateRuleResponse lockState(LockState lockState) {
    this.lockState = lockState;
    return this;
  }

  /**
   * Get lockState
   * @return lockState
   */
  @javax.annotation.Nullable
  public LockState getLockState() {
    return lockState;
  }

  public void setLockState(LockState lockState) {
    this.lockState = lockState;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CreateRuleResponse createRuleResponse = (CreateRuleResponse) o;
    return Objects.equals(this.identifier, createRuleResponse.identifier) &&
        Objects.equals(this.retentionPeriod, createRuleResponse.retentionPeriod) &&
        Objects.equals(this.description, createRuleResponse.description) &&
        Objects.equals(this.tags, createRuleResponse.tags) &&
        Objects.equals(this.resourceType, createRuleResponse.resourceType) &&
        Objects.equals(this.resourceTags, createRuleResponse.resourceTags) &&
        Objects.equals(this.status, createRuleResponse.status) &&
        Objects.equals(this.lockConfiguration, createRuleResponse.lockConfiguration) &&
        Objects.equals(this.lockState, createRuleResponse.lockState);
  }

  @Override
  public int hashCode() {
    return Objects.hash(identifier, retentionPeriod, description, tags, resourceType, resourceTags, status, lockConfiguration, lockState);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CreateRuleResponse {\n");
    sb.append("    identifier: ").append(toIndentedString(identifier)).append("\n");
    sb.append("    retentionPeriod: ").append(toIndentedString(retentionPeriod)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    tags: ").append(toIndentedString(tags)).append("\n");
    sb.append("    resourceType: ").append(toIndentedString(resourceType)).append("\n");
    sb.append("    resourceTags: ").append(toIndentedString(resourceTags)).append("\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("    lockConfiguration: ").append(toIndentedString(lockConfiguration)).append("\n");
    sb.append("    lockState: ").append(toIndentedString(lockState)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("Identifier");
    openapiFields.add("RetentionPeriod");
    openapiFields.add("Description");
    openapiFields.add("Tags");
    openapiFields.add("ResourceType");
    openapiFields.add("ResourceTags");
    openapiFields.add("Status");
    openapiFields.add("LockConfiguration");
    openapiFields.add("LockState");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to CreateRuleResponse
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!CreateRuleResponse.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in CreateRuleResponse is not found in the empty JSON string", CreateRuleResponse.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!CreateRuleResponse.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `CreateRuleResponse` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // validate the optional field `Identifier`
      if (jsonObj.get("Identifier") != null && !jsonObj.get("Identifier").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("Identifier"));
      }
      // validate the optional field `RetentionPeriod`
      if (jsonObj.get("RetentionPeriod") != null && !jsonObj.get("RetentionPeriod").isJsonNull()) {
        RetentionPeriod.validateJsonElement(jsonObj.get("RetentionPeriod"));
      }
      // validate the optional field `Description`
      if (jsonObj.get("Description") != null && !jsonObj.get("Description").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("Description"));
      }
      // validate the optional field `Tags`
      if (jsonObj.get("Tags") != null && !jsonObj.get("Tags").isJsonNull()) {
        List.validateJsonElement(jsonObj.get("Tags"));
      }
      // validate the optional field `ResourceType`
      if (jsonObj.get("ResourceType") != null && !jsonObj.get("ResourceType").isJsonNull()) {
        ResourceType.validateJsonElement(jsonObj.get("ResourceType"));
      }
      // validate the optional field `ResourceTags`
      if (jsonObj.get("ResourceTags") != null && !jsonObj.get("ResourceTags").isJsonNull()) {
        List.validateJsonElement(jsonObj.get("ResourceTags"));
      }
      // validate the optional field `Status`
      if (jsonObj.get("Status") != null && !jsonObj.get("Status").isJsonNull()) {
        RuleStatus.validateJsonElement(jsonObj.get("Status"));
      }
      // validate the optional field `LockConfiguration`
      if (jsonObj.get("LockConfiguration") != null && !jsonObj.get("LockConfiguration").isJsonNull()) {
        CreateRuleResponseLockConfiguration.validateJsonElement(jsonObj.get("LockConfiguration"));
      }
      // validate the optional field `LockState`
      if (jsonObj.get("LockState") != null && !jsonObj.get("LockState").isJsonNull()) {
        LockState.validateJsonElement(jsonObj.get("LockState"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!CreateRuleResponse.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'CreateRuleResponse' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<CreateRuleResponse> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(CreateRuleResponse.class));

       return (TypeAdapter<T>) new TypeAdapter<CreateRuleResponse>() {
           @Override
           public void write(JsonWriter out, CreateRuleResponse value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public CreateRuleResponse read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of CreateRuleResponse given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of CreateRuleResponse
   * @throws IOException if the JSON string is invalid with respect to CreateRuleResponse
   */
  public static CreateRuleResponse fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, CreateRuleResponse.class);
  }

  /**
   * Convert an instance of CreateRuleResponse to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

