openapi: 3.0.0
info:
  contact:
    email: mike.ralphson@gmail.com
    name: Mike Ralphson
    url: https://github.com/mermade/aws2openapi
    x-twitter: PermittedSoc
  description: "<p>This is the <i>Recycle Bin API Reference</i>. This documentation\
    \ provides descriptions and syntax for each of the actions and data types in Recycle\
    \ Bin.</p> <p>Recycle Bin is a resource recovery feature that enables you to restore\
    \ accidentally deleted snapshots and EBS-backed AMIs. When using Recycle Bin,\
    \ if your resources are deleted, they are retained in the Recycle Bin for a time\
    \ period that you specify.</p> <p>You can restore a resource from the Recycle\
    \ Bin at any time before its retention period expires. After you restore a resource\
    \ from the Recycle Bin, the resource is removed from the Recycle Bin, and you\
    \ can then use it in the same way you use any other resource of that type in your\
    \ account. If the retention period expires and the resource is not restored, the\
    \ resource is permanently deleted from the Recycle Bin and is no longer available\
    \ for recovery. For more information about Recycle Bin, see <a href=\"https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/snapshot-recycle-bin.html\"\
    > Recycle Bin</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>.</p>"
  license:
    name: Apache 2.0 License
    url: http://www.apache.org/licenses/
  termsOfService: https://aws.amazon.com/service-terms/
  title: Amazon Recycle Bin
  version: 2021-06-15
  x-release: v4
  x-logo:
    url: https://twitter.com/awscloud/profile_image?size=original
    backgroundColor: '#FFFFFF'
  x-providerName: amazonaws.com
  x-serviceName: rbin
  x-aws-signingName: rbin
  x-origin:
  - contentType: application/json
    url: https://raw.githubusercontent.com/aws/aws-sdk-js/master/apis/rbin-2021-06-15.normal.json
    converter:
      url: https://github.com/mermade/aws2openapi
      version: 1.0.0
    x-apisguru-driver: external
  x-apiClientRegistration:
    url: https://portal.aws.amazon.com/gp/aws/developer/registration/index.html?nc2=h_ct
  x-apisguru-categories:
  - cloud
  x-preferred: true
externalDocs:
  description: Amazon Web Services documentation
  url: https://docs.aws.amazon.com/rbin/
servers:
- description: The Amazon Recycle Bin multi-region endpoint
  url: "http://rbin.{region}.amazonaws.com"
  variables:
    region:
      default: us-east-1
      description: The AWS region
      enum:
      - us-east-1
      - us-east-2
      - us-west-1
      - us-west-2
      - us-gov-west-1
      - us-gov-east-1
      - ca-central-1
      - eu-north-1
      - eu-west-1
      - eu-west-2
      - eu-west-3
      - eu-central-1
      - eu-south-1
      - af-south-1
      - ap-northeast-1
      - ap-northeast-2
      - ap-northeast-3
      - ap-southeast-1
      - ap-southeast-2
      - ap-east-1
      - ap-south-1
      - sa-east-1
      - me-south-1
- description: The Amazon Recycle Bin multi-region endpoint
  url: "https://rbin.{region}.amazonaws.com"
  variables:
    region:
      default: us-east-1
      description: The AWS region
      enum:
      - us-east-1
      - us-east-2
      - us-west-1
      - us-west-2
      - us-gov-west-1
      - us-gov-east-1
      - ca-central-1
      - eu-north-1
      - eu-west-1
      - eu-west-2
      - eu-west-3
      - eu-central-1
      - eu-south-1
      - af-south-1
      - ap-northeast-1
      - ap-northeast-2
      - ap-northeast-3
      - ap-southeast-1
      - ap-southeast-2
      - ap-east-1
      - ap-south-1
      - sa-east-1
      - me-south-1
- description: The Amazon Recycle Bin endpoint for China (Beijing) and China (Ningxia)
  url: "http://rbin.{region}.amazonaws.com.cn"
  variables:
    region:
      default: cn-north-1
      description: The AWS region
      enum:
      - cn-north-1
      - cn-northwest-1
- description: The Amazon Recycle Bin endpoint for China (Beijing) and China (Ningxia)
  url: "https://rbin.{region}.amazonaws.com.cn"
  variables:
    region:
      default: cn-north-1
      description: The AWS region
      enum:
      - cn-north-1
      - cn-northwest-1
security:
- hmac: []
paths:
  /rules:
    post:
      description: "Creates a Recycle Bin retention rule. For more information, see\
        \ <a href=\"https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/recycle-bin-working-with-rules.html#recycle-bin-create-rule\"\
        > Create Recycle Bin retention rules</a> in the <i>Amazon Elastic Compute\
        \ Cloud User Guide</i>."
      operationId: CreateRule
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateRule_request'
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateRuleResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceQuotaExceededException'
          description: ServiceQuotaExceededException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
      x-content-type: application/json
      x-accepts:
      - application/json
  /rules/{identifier}:
    delete:
      description: "Deletes a Recycle Bin retention rule. For more information, see\
        \ <a href=\"https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/recycle-bin-working-with-rules.html#recycle-bin-delete-rule\"\
        > Delete Recycle Bin retention rules</a> in the <i>Amazon Elastic Compute\
        \ Cloud User Guide</i>."
      operationId: DeleteRule
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The unique ID of the retention rule.
        explode: false
        in: path
        name: identifier
        required: true
        schema:
          pattern: "[0-9a-zA-Z]{11}"
          type: string
        style: simple
      responses:
        "204":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteRuleResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
          description: ConflictException
      x-accepts:
      - application/json
    get:
      description: Gets information about a Recycle Bin retention rule.
      operationId: GetRule
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The unique ID of the retention rule.
        explode: false
        in: path
        name: identifier
        required: true
        schema:
          pattern: "[0-9a-zA-Z]{11}"
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetRuleResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
      x-accepts:
      - application/json
    patch:
      description: "Updates an existing Recycle Bin retention rule. You can update\
        \ a retention rule's description, resource tags, and retention period at any\
        \ time after creation. You can't update a retention rule's resource type after\
        \ creation. For more information, see <a href=\"https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/recycle-bin-working-with-rules.html#recycle-bin-update-rule\"\
        > Update Recycle Bin retention rules</a> in the <i>Amazon Elastic Compute\
        \ Cloud User Guide</i>."
      operationId: UpdateRule
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The unique ID of the retention rule.
        explode: false
        in: path
        name: identifier
        required: true
        schema:
          pattern: "[0-9a-zA-Z]{11}"
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateRule_request'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateRuleResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
          description: ConflictException
      x-content-type: application/json
      x-accepts:
      - application/json
  /list-rules:
    post:
      description: Lists the Recycle Bin retention rules in the Region.
      operationId: ListRules
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: Pagination limit
        explode: true
        in: query
        name: MaxResults
        required: false
        schema:
          type: string
        style: form
      - description: Pagination token
        explode: true
        in: query
        name: NextToken
        required: false
        schema:
          type: string
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ListRules_request'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListRulesResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
      x-content-type: application/json
      x-accepts:
      - application/json
  /tags/{resourceArn}:
    get:
      description: Lists the tags assigned to a retention rule.
      operationId: ListTagsForResource
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The Amazon Resource Name (ARN) of the retention rule.
        explode: false
        in: path
        name: resourceArn
        required: true
        schema:
          maxLength: 1011
          minLength: 0
          pattern: "^arn:aws\\(-[a-z]\\{1,3\\}\\)\\{0,2\\}:rbin:[a-z\\-0-9]\\{0,63\\\
            }:[0-9]\\{12\\}:rule/[0-9a-zA-Z]\\{11\\}\\{0,1011\\}$"
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListTagsForResourceResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
      x-accepts:
      - application/json
    post:
      description: Assigns tags to the specified retention rule.
      operationId: TagResource
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The Amazon Resource Name (ARN) of the retention rule.
        explode: false
        in: path
        name: resourceArn
        required: true
        schema:
          maxLength: 1011
          minLength: 0
          pattern: "^arn:aws\\(-[a-z]\\{1,3\\}\\)\\{0,2\\}:rbin:[a-z\\-0-9]\\{0,63\\\
            }:[0-9]\\{12\\}:rule/[0-9a-zA-Z]\\{11\\}\\{0,1011\\}$"
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TagResource_request'
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TagResourceResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceQuotaExceededException'
          description: ServiceQuotaExceededException
      x-content-type: application/json
      x-accepts:
      - application/json
  /rules/{identifier}/lock:
    patch:
      description: Locks a retention rule. A locked retention rule can't be modified
        or deleted.
      operationId: LockRule
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The unique ID of the retention rule.
        explode: false
        in: path
        name: identifier
        required: true
        schema:
          pattern: "[0-9a-zA-Z]{11}"
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LockRule_request'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LockRuleResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
          description: ConflictException
      x-content-type: application/json
      x-accepts:
      - application/json
  /rules/{identifier}/unlock:
    patch:
      description: "Unlocks a retention rule. After a retention rule is unlocked,\
        \ it can be modified or deleted only after the unlock delay period expires."
      operationId: UnlockRule
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The unique ID of the retention rule.
        explode: false
        in: path
        name: identifier
        required: true
        schema:
          pattern: "[0-9a-zA-Z]{11}"
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnlockRuleResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
          description: ConflictException
      x-accepts:
      - application/json
  /tags/{resourceArn}#tagKeys:
    delete:
      description: Unassigns a tag from a retention rule.
      operationId: UntagResource
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The Amazon Resource Name (ARN) of the retention rule.
        explode: false
        in: path
        name: resourceArn
        required: true
        schema:
          maxLength: 1011
          minLength: 0
          pattern: "^arn:aws\\(-[a-z]\\{1,3\\}\\)\\{0,2\\}:rbin:[a-z\\-0-9]\\{0,63\\\
            }:[0-9]\\{12\\}:rule/[0-9a-zA-Z]\\{11\\}\\{0,1011\\}$"
          type: string
        style: simple
      - description: The tag keys of the tags to unassign. All tags that have the
          specified tag key are unassigned.
        explode: true
        in: query
        name: tagKeys
        required: true
        schema:
          items:
            $ref: '#/components/schemas/TagKey'
          maxItems: 200
          minItems: 0
          type: array
        style: form
      responses:
        "204":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UntagResourceResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
      x-accepts:
      - application/json
components:
  parameters:
    X-Amz-Content-Sha256:
      explode: false
      in: header
      name: X-Amz-Content-Sha256
      required: false
      schema:
        type: string
      style: simple
    X-Amz-Date:
      explode: false
      in: header
      name: X-Amz-Date
      required: false
      schema:
        type: string
      style: simple
    X-Amz-Algorithm:
      explode: false
      in: header
      name: X-Amz-Algorithm
      required: false
      schema:
        type: string
      style: simple
    X-Amz-Credential:
      explode: false
      in: header
      name: X-Amz-Credential
      required: false
      schema:
        type: string
      style: simple
    X-Amz-Security-Token:
      explode: false
      in: header
      name: X-Amz-Security-Token
      required: false
      schema:
        type: string
      style: simple
    X-Amz-Signature:
      explode: false
      in: header
      name: X-Amz-Signature
      required: false
      schema:
        type: string
      style: simple
    X-Amz-SignedHeaders:
      explode: false
      in: header
      name: X-Amz-SignedHeaders
      required: false
      schema:
        type: string
      style: simple
  schemas:
    CreateRuleResponse:
      example:
        Status: ""
        Identifier: ""
        Description: ""
        ResourceTags: ""
        LockConfiguration:
          UnlockDelay:
            UnlockDelayValue: ""
            UnlockDelayUnit: ""
        ResourceType: ""
        RetentionPeriod:
          RetentionPeriodUnit: ""
          RetentionPeriodValue: ""
        LockState: ""
        Tags: ""
      properties:
        Identifier:
          allOf:
          - $ref: '#/components/schemas/RuleIdentifier'
          - description: The unique ID of the retention rule.
        RetentionPeriod:
          $ref: '#/components/schemas/RetentionPeriod'
        Description:
          allOf:
          - $ref: '#/components/schemas/Description'
          - description: The retention rule description.
        Tags:
          allOf:
          - $ref: '#/components/schemas/TagList'
          - description: Information about the tags assigned to the retention rule.
        ResourceType:
          allOf:
          - $ref: '#/components/schemas/ResourceType'
          - description: The resource type retained by the retention rule.
        ResourceTags:
          allOf:
          - $ref: '#/components/schemas/ResourceTags'
          - description: Information about the resource tags used to identify resources
              that are retained by the retention rule.
        Status:
          allOf:
          - $ref: '#/components/schemas/RuleStatus'
          - description: The state of the retention rule. Only retention rules that
              are in the <code>available</code> state retain resources.
        LockConfiguration:
          $ref: '#/components/schemas/CreateRuleResponse_LockConfiguration'
        LockState:
          allOf:
          - $ref: '#/components/schemas/LockState'
          - description: "<p>The lock state for the retention rule.</p> <ul> <li>\
              \ <p> <code>locked</code> - The retention rule is locked and can't be\
              \ modified or deleted.</p> </li> <li> <p> <code>pending_unlock</code>\
              \ - The retention rule has been unlocked but it is still within the\
              \ unlock delay period. The retention rule can be modified or deleted\
              \ only after the unlock delay period has expired.</p> </li> <li> <p>\
              \ <code>unlocked</code> - The retention rule is unlocked and it can\
              \ be modified or deleted by any user with the required permissions.</p>\
              \ </li> <li> <p> <code>null</code> - The retention rule has never been\
              \ locked. Once a retention rule has been locked, it can transition between\
              \ the <code>locked</code> and <code>unlocked</code> states only; it\
              \ can never transition back to <code>null</code>.</p> </li> </ul>"
      type: object
    RetentionPeriodValue:
      maximum: 3650
      minimum: 1
      type: integer
    RetentionPeriodUnit:
      enum:
      - DAYS
      type: string
    Tag:
      description: Information about the tags to assign to the retention rule.
      properties:
        Key:
          allOf:
          - $ref: '#/components/schemas/TagKey'
          - description: The tag key.
        Value:
          allOf:
          - $ref: '#/components/schemas/TagValue'
          - description: The tag value.
      required:
      - Key
      - Value
      type: object
    ResourceTag:
      description: Information about the resource tags used to identify resources
        that are retained by the retention rule.
      properties:
        ResourceTagKey:
          allOf:
          - $ref: '#/components/schemas/ResourceTagKey'
          - description: The tag key.
        ResourceTagValue:
          allOf:
          - $ref: '#/components/schemas/ResourceTagValue'
          - description: The tag value.
      required:
      - ResourceTagKey
      type: object
    UnlockDelay:
      description: Information about the retention rule unlock delay. The unlock delay
        is the period after which a retention rule can be modified or edited after
        it has been unlocked by a user with the required permissions. The retention
        rule can't be modified or deleted during the unlock delay.
      properties:
        UnlockDelayValue:
          allOf:
          - $ref: '#/components/schemas/UnlockDelayValue'
          - description: "The unlock delay period, measured in the unit specified\
              \ for <b> UnlockDelayUnit</b>."
        UnlockDelayUnit:
          allOf:
          - $ref: '#/components/schemas/UnlockDelayUnit'
          - description: "The unit of time in which to measure the unlock delay. Currently,\
              \ the unlock delay can be measure only in days."
      required:
      - UnlockDelayUnit
      - UnlockDelayValue
      type: object
    ValidationException: {}
    ServiceQuotaExceededException: {}
    InternalServerException: {}
    DeleteRuleResponse:
      properties: {}
      type: object
    ResourceNotFoundException: {}
    ConflictException: {}
    GetRuleResponse:
      example:
        Status: ""
        LockEndTime: ""
        Identifier: ""
        Description: ""
        ResourceTags: ""
        LockConfiguration:
          UnlockDelay:
            UnlockDelayValue: ""
            UnlockDelayUnit: ""
        ResourceType: ""
        RetentionPeriod:
          RetentionPeriodUnit: ""
          RetentionPeriodValue: ""
        LockState: ""
      properties:
        Identifier:
          allOf:
          - $ref: '#/components/schemas/RuleIdentifier'
          - description: The unique ID of the retention rule.
        Description:
          allOf:
          - $ref: '#/components/schemas/Description'
          - description: The retention rule description.
        ResourceType:
          allOf:
          - $ref: '#/components/schemas/ResourceType'
          - description: The resource type retained by the retention rule.
        RetentionPeriod:
          $ref: '#/components/schemas/GetRuleResponse_RetentionPeriod'
        ResourceTags:
          allOf:
          - $ref: '#/components/schemas/ResourceTags'
          - description: Information about the resource tags used to identify resources
              that are retained by the retention rule.
        Status:
          allOf:
          - $ref: '#/components/schemas/RuleStatus'
          - description: The state of the retention rule. Only retention rules that
              are in the <code>available</code> state retain resources.
        LockConfiguration:
          $ref: '#/components/schemas/CreateRuleResponse_LockConfiguration'
        LockState:
          allOf:
          - $ref: '#/components/schemas/LockState'
          - description: "<p>The lock state for the retention rule.</p> <ul> <li>\
              \ <p> <code>locked</code> - The retention rule is locked and can't be\
              \ modified or deleted.</p> </li> <li> <p> <code>pending_unlock</code>\
              \ - The retention rule has been unlocked but it is still within the\
              \ unlock delay period. The retention rule can be modified or deleted\
              \ only after the unlock delay period has expired.</p> </li> <li> <p>\
              \ <code>unlocked</code> - The retention rule is unlocked and it can\
              \ be modified or deleted by any user with the required permissions.</p>\
              \ </li> <li> <p> <code>null</code> - The retention rule has never been\
              \ locked. Once a retention rule has been locked, it can transition between\
              \ the <code>locked</code> and <code>unlocked</code> states only; it\
              \ can never transition back to <code>null</code>.</p> </li> </ul>"
        LockEndTime:
          allOf:
          - $ref: '#/components/schemas/TimeStamp'
          - description: The date and time at which the unlock delay is set to expire.
              Only returned for retention rules that have been unlocked and that are
              still within the unlock delay period.
      type: object
    ListRulesResponse:
      example:
        NextToken: ""
        Rules: ""
      properties:
        Rules:
          allOf:
          - $ref: '#/components/schemas/RuleSummaryList'
          - description: Information about the retention rules.
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          - description: The token to use to retrieve the next page of results. This
              value is <code>null</code> when there are no more results to return.
      type: object
    ListTagsForResourceResponse:
      example:
        Tags: ""
      properties:
        Tags:
          allOf:
          - $ref: '#/components/schemas/TagList'
          - description: Information about the tags assigned to the retention rule.
      type: object
    LockRuleResponse:
      example:
        Status: ""
        Identifier: ""
        Description: ""
        ResourceTags: ""
        LockConfiguration:
          UnlockDelay:
            UnlockDelayValue: ""
            UnlockDelayUnit: ""
        ResourceType: ""
        RetentionPeriod:
          RetentionPeriodUnit: ""
          RetentionPeriodValue: ""
        LockState: ""
      properties:
        Identifier:
          allOf:
          - $ref: '#/components/schemas/RuleIdentifier'
          - description: The unique ID of the retention rule.
        Description:
          allOf:
          - $ref: '#/components/schemas/Description'
          - description: The retention rule description.
        ResourceType:
          allOf:
          - $ref: '#/components/schemas/ResourceType'
          - description: The resource type retained by the retention rule.
        RetentionPeriod:
          $ref: '#/components/schemas/RetentionPeriod'
        ResourceTags:
          allOf:
          - $ref: '#/components/schemas/ResourceTags'
          - description: Information about the resource tags used to identify resources
              that are retained by the retention rule.
        Status:
          allOf:
          - $ref: '#/components/schemas/RuleStatus'
          - description: The state of the retention rule. Only retention rules that
              are in the <code>available</code> state retain resources.
        LockConfiguration:
          $ref: '#/components/schemas/CreateRuleResponse_LockConfiguration'
        LockState:
          allOf:
          - $ref: '#/components/schemas/LockState'
          - description: "<p>The lock state for the retention rule.</p> <ul> <li>\
              \ <p> <code>locked</code> - The retention rule is locked and can't be\
              \ modified or deleted.</p> </li> <li> <p> <code>pending_unlock</code>\
              \ - The retention rule has been unlocked but it is still within the\
              \ unlock delay period. The retention rule can be modified or deleted\
              \ only after the unlock delay period has expired.</p> </li> <li> <p>\
              \ <code>unlocked</code> - The retention rule is unlocked and it can\
              \ be modified or deleted by any user with the required permissions.</p>\
              \ </li> <li> <p> <code>null</code> - The retention rule has never been\
              \ locked. Once a retention rule has been locked, it can transition between\
              \ the <code>locked</code> and <code>unlocked</code> states only; it\
              \ can never transition back to <code>null</code>.</p> </li> </ul>"
      type: object
    TagResourceResponse:
      properties: {}
      type: object
    UnlockRuleResponse:
      example:
        Status: ""
        LockEndTime: ""
        Identifier: ""
        Description: ""
        ResourceTags: ""
        LockConfiguration:
          UnlockDelay:
            UnlockDelayValue: ""
            UnlockDelayUnit: ""
        ResourceType: ""
        RetentionPeriod:
          RetentionPeriodUnit: ""
          RetentionPeriodValue: ""
        LockState: ""
      properties:
        Identifier:
          allOf:
          - $ref: '#/components/schemas/RuleIdentifier'
          - description: The unique ID of the retention rule.
        Description:
          allOf:
          - $ref: '#/components/schemas/Description'
          - description: The retention rule description.
        ResourceType:
          allOf:
          - $ref: '#/components/schemas/ResourceType'
          - description: The resource type retained by the retention rule.
        RetentionPeriod:
          $ref: '#/components/schemas/RetentionPeriod'
        ResourceTags:
          allOf:
          - $ref: '#/components/schemas/ResourceTags'
          - description: Information about the resource tags used to identify resources
              that are retained by the retention rule.
        Status:
          allOf:
          - $ref: '#/components/schemas/RuleStatus'
          - description: The state of the retention rule. Only retention rules that
              are in the <code>available</code> state retain resources.
        LockConfiguration:
          $ref: '#/components/schemas/CreateRuleResponse_LockConfiguration'
        LockState:
          allOf:
          - $ref: '#/components/schemas/LockState'
          - description: "<p>The lock state for the retention rule.</p> <ul> <li>\
              \ <p> <code>locked</code> - The retention rule is locked and can't be\
              \ modified or deleted.</p> </li> <li> <p> <code>pending_unlock</code>\
              \ - The retention rule has been unlocked but it is still within the\
              \ unlock delay period. The retention rule can be modified or deleted\
              \ only after the unlock delay period has expired.</p> </li> <li> <p>\
              \ <code>unlocked</code> - The retention rule is unlocked and it can\
              \ be modified or deleted by any user with the required permissions.</p>\
              \ </li> <li> <p> <code>null</code> - The retention rule has never been\
              \ locked. Once a retention rule has been locked, it can transition between\
              \ the <code>locked</code> and <code>unlocked</code> states only; it\
              \ can never transition back to <code>null</code>.</p> </li> </ul>"
        LockEndTime:
          allOf:
          - $ref: '#/components/schemas/TimeStamp'
          - description: The date and time at which the unlock delay is set to expire.
              Only returned for retention rules that have been unlocked and that are
              still within the unlock delay period.
      type: object
    UntagResourceResponse:
      properties: {}
      type: object
    TagKey:
      maxLength: 128
      minLength: 1
      pattern: "^([\\p{L}\\p{Z}\\p{N}_.:/=+\\-@]*)$"
      type: string
    UpdateRuleResponse:
      example:
        Status: ""
        LockEndTime: ""
        Identifier: ""
        Description: ""
        ResourceTags: ""
        ResourceType: ""
        RetentionPeriod:
          RetentionPeriodUnit: ""
          RetentionPeriodValue: ""
        LockState: ""
      properties:
        Identifier:
          allOf:
          - $ref: '#/components/schemas/RuleIdentifier'
          - description: The unique ID of the retention rule.
        RetentionPeriod:
          $ref: '#/components/schemas/RetentionPeriod'
        Description:
          allOf:
          - $ref: '#/components/schemas/Description'
          - description: The retention rule description.
        ResourceType:
          allOf:
          - $ref: '#/components/schemas/ResourceType'
          - description: The resource type retained by the retention rule.
        ResourceTags:
          allOf:
          - $ref: '#/components/schemas/ResourceTags'
          - description: Information about the resource tags used to identify resources
              that are retained by the retention rule.
        Status:
          allOf:
          - $ref: '#/components/schemas/RuleStatus'
          - description: The state of the retention rule. Only retention rules that
              are in the <code>available</code> state retain resources.
        LockState:
          allOf:
          - $ref: '#/components/schemas/LockState'
          - description: "<p>The lock state for the retention rule.</p> <ul> <li>\
              \ <p> <code>locked</code> - The retention rule is locked and can't be\
              \ modified or deleted.</p> </li> <li> <p> <code>pending_unlock</code>\
              \ - The retention rule has been unlocked but it is still within the\
              \ unlock delay period. The retention rule can be modified or deleted\
              \ only after the unlock delay period has expired.</p> </li> <li> <p>\
              \ <code>unlocked</code> - The retention rule is unlocked and it can\
              \ be modified or deleted by any user with the required permissions.</p>\
              \ </li> <li> <p> <code>null</code> - The retention rule has never been\
              \ locked. Once a retention rule has been locked, it can transition between\
              \ the <code>locked</code> and <code>unlocked</code> states only; it\
              \ can never transition back to <code>null</code>.</p> </li> </ul>"
        LockEndTime:
          allOf:
          - $ref: '#/components/schemas/TimeStamp'
          - description: The date and time at which the unlock delay is set to expire.
              Only returned for retention rules that have been unlocked and that are
              still within the unlock delay period.
      type: object
    RetentionPeriod:
      description: Information about the retention period for which the retention
        rule is to retain resources.
      example:
        RetentionPeriodUnit: ""
        RetentionPeriodValue: ""
      properties:
        RetentionPeriodValue:
          allOf:
          - $ref: '#/components/schemas/RetentionPeriodValue'
          - description: The period value for which the retention rule is to retain
              resources. The period is measured using the unit specified for <b>RetentionPeriodUnit</b>.
        RetentionPeriodUnit:
          allOf:
          - $ref: '#/components/schemas/RetentionPeriodUnit'
          - description: "The unit of time in which the retention period is measured.\
              \ Currently, only <code>DAYS</code> is supported."
      required:
      - RetentionPeriodUnit
      - RetentionPeriodValue
      type: object
    Description:
      pattern: "^[\\S ]{0,255}$"
      type: string
    TagList:
      items:
        $ref: '#/components/schemas/Tag'
      maxItems: 200
      minItems: 0
      type: array
    ResourceType:
      enum:
      - EBS_SNAPSHOT
      - EC2_IMAGE
      type: string
    ResourceTags:
      items:
        $ref: '#/components/schemas/ResourceTag'
      maxItems: 50
      minItems: 0
      type: array
    LockConfiguration:
      description: Information about a retention rule lock configuration.
      properties:
        UnlockDelay:
          $ref: '#/components/schemas/CreateRule_request_LockConfiguration_UnlockDelay'
      required:
      - UnlockDelay
      type: object
    CreateRuleRequest:
      example:
        Description: ""
        ResourceTags: ""
        LockConfiguration:
          UnlockDelay:
            UnlockDelayValue: ""
            UnlockDelayUnit: ""
        ResourceType: ""
        RetentionPeriod:
          RetentionPeriodUnit: ""
          RetentionPeriodValue: ""
        Tags: ""
      properties:
        RetentionPeriod:
          $ref: '#/components/schemas/GetRuleResponse_RetentionPeriod'
        Description:
          allOf:
          - $ref: '#/components/schemas/Description'
          - description: The retention rule description.
        Tags:
          allOf:
          - $ref: '#/components/schemas/TagList'
          - description: Information about the tags to assign to the retention rule.
        ResourceType:
          allOf:
          - $ref: '#/components/schemas/ResourceType'
          - description: "The resource type to be retained by the retention rule.\
              \ Currently, only Amazon EBS snapshots and EBS-backed AMIs are supported.\
              \ To retain snapshots, specify <code>EBS_SNAPSHOT</code>. To retain\
              \ EBS-backed AMIs, specify <code>EC2_IMAGE</code>."
        ResourceTags:
          allOf:
          - $ref: '#/components/schemas/ResourceTags'
          - description: "<p>Specifies the resource tags to use to identify resources\
              \ that are to be retained by a tag-level retention rule. For tag-level\
              \ retention rules, only deleted resources, of the specified resource\
              \ type, that have one or more of the specified tag key and value pairs\
              \ are retained. If a resource is deleted, but it does not have any of\
              \ the specified tag key and value pairs, it is immediately deleted without\
              \ being retained by the retention rule.</p> <p>You can add the same\
              \ tag key and value pair to a maximum or five retention rules.</p> <p>To\
              \ create a Region-level retention rule, omit this parameter. A Region-level\
              \ retention rule does not have any resource tags specified. It retains\
              \ all deleted resources of the specified resource type in the Region\
              \ in which the rule is created, even if the resources are not tagged.</p>"
        LockConfiguration:
          $ref: '#/components/schemas/CreateRuleResponse_LockConfiguration'
      required:
      - ResourceType
      - RetentionPeriod
      title: CreateRuleRequest
      type: object
    RuleIdentifier:
      pattern: "[0-9a-zA-Z]{11}"
      type: string
    RuleStatus:
      enum:
      - pending
      - available
      type: string
    LockState:
      enum:
      - locked
      - pending_unlock
      - unlocked
      type: string
    DeleteRuleRequest:
      properties: {}
      title: DeleteRuleRequest
      type: object
    GetRuleRequest:
      properties: {}
      title: GetRuleRequest
      type: object
    TimeStamp:
      format: date-time
      type: string
    MaxResults:
      maximum: 1000
      minimum: 1
      type: integer
    NextToken:
      pattern: "^[A-Za-z0-9+/=]{1,2048}$"
      type: string
    ListRulesRequest:
      example:
        NextToken: ""
        ResourceTags: ""
        MaxResults: ""
        ResourceType: ""
        LockState: ""
      properties:
        MaxResults:
          allOf:
          - $ref: '#/components/schemas/MaxResults'
          - description: "The maximum number of results to return with a single call.\
              \ To retrieve the remaining results, make another call with the returned\
              \ <code>NextToken</code> value."
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          - description: The token for the next page of results.
        ResourceType:
          allOf:
          - $ref: '#/components/schemas/ResourceType'
          - description: "The resource type retained by the retention rule. Only retention\
              \ rules that retain the specified resource type are listed. Currently,\
              \ only Amazon EBS snapshots and EBS-backed AMIs are supported. To list\
              \ retention rules that retain snapshots, specify <code>EBS_SNAPSHOT</code>.\
              \ To list retention rules that retain EBS-backed AMIs, specify <code>EC2_IMAGE</code>."
        ResourceTags:
          allOf:
          - $ref: '#/components/schemas/ResourceTags'
          - description: Information about the resource tags used to identify resources
              that are retained by the retention rule.
        LockState:
          allOf:
          - $ref: '#/components/schemas/LockState'
          - description: The lock state of the retention rules to list. Only retention
              rules with the specified lock state are returned.
      required:
      - ResourceType
      title: ListRulesRequest
      type: object
    RuleSummaryList:
      items:
        $ref: '#/components/schemas/RuleSummary'
      type: array
    RuleArn:
      maxLength: 1011
      minLength: 0
      pattern: "^arn:aws\\(-[a-z]\\{1,3\\}\\)\\{0,2\\}:rbin:[a-z\\-0-9]\\{0,63\\}:[0-9]\\\
        {12\\}:rule/[0-9a-zA-Z]\\{11\\}\\{0,1011\\}$"
      type: string
    ListTagsForResourceRequest:
      properties: {}
      title: ListTagsForResourceRequest
      type: object
    LockRuleRequest:
      example:
        LockConfiguration:
          UnlockDelay:
            UnlockDelayValue: ""
            UnlockDelayUnit: ""
      properties:
        LockConfiguration:
          $ref: '#/components/schemas/CreateRuleResponse_LockConfiguration'
      required:
      - LockConfiguration
      title: LockRuleRequest
      type: object
    ResourceTagKey:
      pattern: "^[\\S\\s]{1,128}$"
      type: string
    ResourceTagValue:
      pattern: "^[\\S\\s]{0,256}$"
      type: string
    RuleSummary:
      description: Information about a Recycle Bin retention rule.
      properties:
        Identifier:
          allOf:
          - $ref: '#/components/schemas/RuleIdentifier'
          - description: The unique ID of the retention rule.
        Description:
          allOf:
          - $ref: '#/components/schemas/Description'
          - description: The retention rule description.
        RetentionPeriod:
          $ref: '#/components/schemas/GetRuleResponse_RetentionPeriod'
        LockState:
          allOf:
          - $ref: '#/components/schemas/LockState'
          - description: "<p>The lock state for the retention rule.</p> <ul> <li>\
              \ <p> <code>locked</code> - The retention rule is locked and can't be\
              \ modified or deleted.</p> </li> <li> <p> <code>pending_unlock</code>\
              \ - The retention rule has been unlocked but it is still within the\
              \ unlock delay period. The retention rule can be modified or deleted\
              \ only after the unlock delay period has expired.</p> </li> <li> <p>\
              \ <code>unlocked</code> - The retention rule is unlocked and it can\
              \ be modified or deleted by any user with the required permissions.</p>\
              \ </li> <li> <p> <code>null</code> - The retention rule has never been\
              \ locked. Once a retention rule has been locked, it can transition between\
              \ the <code>locked</code> and <code>unlocked</code> states only; it\
              \ can never transition back to <code>null</code>.</p> </li> </ul>"
      type: object
    TagValue:
      maxLength: 256
      minLength: 0
      pattern: "^([\\p{L}\\p{Z}\\p{N}_.:/=+\\-@]*)$"
      type: string
    TagKeyList:
      items:
        $ref: '#/components/schemas/TagKey'
      maxItems: 200
      minItems: 0
      type: array
    TagResourceRequest:
      example:
        Tags: ""
      properties:
        Tags:
          allOf:
          - $ref: '#/components/schemas/TagList'
          - description: Information about the tags to assign to the retention rule.
      required:
      - Tags
      title: TagResourceRequest
      type: object
    UnlockDelayValue:
      maximum: 30
      minimum: 7
      type: integer
    UnlockDelayUnit:
      enum:
      - DAYS
      type: string
    UnlockRuleRequest:
      properties: {}
      title: UnlockRuleRequest
      type: object
    UntagResourceRequest:
      properties: {}
      title: UntagResourceRequest
      type: object
    UpdateRuleRequest:
      example:
        Description: ""
        ResourceTags: ""
        ResourceType: ""
        RetentionPeriod:
          RetentionPeriodUnit: ""
          RetentionPeriodValue: ""
      properties:
        RetentionPeriod:
          $ref: '#/components/schemas/GetRuleResponse_RetentionPeriod'
        Description:
          allOf:
          - $ref: '#/components/schemas/Description'
          - description: The retention rule description.
        ResourceType:
          allOf:
          - $ref: '#/components/schemas/ResourceType'
          - description: <note> <p>This parameter is currently not supported. You
              can't update a retention rule's resource type after creation.</p> </note>
        ResourceTags:
          allOf:
          - $ref: '#/components/schemas/ResourceTags'
          - description: "<p>Specifies the resource tags to use to identify resources\
              \ that are to be retained by a tag-level retention rule. For tag-level\
              \ retention rules, only deleted resources, of the specified resource\
              \ type, that have one or more of the specified tag key and value pairs\
              \ are retained. If a resource is deleted, but it does not have any of\
              \ the specified tag key and value pairs, it is immediately deleted without\
              \ being retained by the retention rule.</p> <p>You can add the same\
              \ tag key and value pair to a maximum or five retention rules.</p> <p>To\
              \ create a Region-level retention rule, omit this parameter. A Region-level\
              \ retention rule does not have any resource tags specified. It retains\
              \ all deleted resources of the specified resource type in the Region\
              \ in which the rule is created, even if the resources are not tagged.</p>"
      title: UpdateRuleRequest
      type: object
    CreateRule_request_RetentionPeriod:
      description: Information about the retention period for which the retention
        rule is to retain resources.
      properties:
        RetentionPeriodValue:
          allOf:
          - $ref: '#/components/schemas/RetentionPeriodValue'
          - description: The period value for which the retention rule is to retain
              resources. The period is measured using the unit specified for <b>RetentionPeriodUnit</b>.
        RetentionPeriodUnit:
          allOf:
          - $ref: '#/components/schemas/RetentionPeriodUnit'
          - description: "The unit of time in which the retention period is measured.\
              \ Currently, only <code>DAYS</code> is supported."
      type: object
    CreateRule_request_LockConfiguration_UnlockDelay:
      allOf:
      - $ref: '#/components/schemas/UnlockDelay'
      - description: Information about the retention rule unlock delay.
      example:
        UnlockDelayValue: ""
        UnlockDelayUnit: ""
    CreateRule_request_LockConfiguration:
      description: Information about a retention rule lock configuration.
      properties:
        UnlockDelay:
          $ref: '#/components/schemas/CreateRule_request_LockConfiguration_UnlockDelay'
      type: object
    CreateRule_request:
      properties:
        RetentionPeriod:
          $ref: '#/components/schemas/CreateRule_request_RetentionPeriod'
        Description:
          description: The retention rule description.
          pattern: "^[\\S ]{0,255}$"
          type: string
        Tags:
          description: Information about the tags to assign to the retention rule.
          items:
            $ref: '#/components/schemas/Tag'
          maxItems: 200
          minItems: 0
          type: array
        ResourceType:
          description: "The resource type to be retained by the retention rule. Currently,\
            \ only Amazon EBS snapshots and EBS-backed AMIs are supported. To retain\
            \ snapshots, specify <code>EBS_SNAPSHOT</code>. To retain EBS-backed AMIs,\
            \ specify <code>EC2_IMAGE</code>."
          enum:
          - EBS_SNAPSHOT
          - EC2_IMAGE
          type: string
        ResourceTags:
          description: "<p>Specifies the resource tags to use to identify resources\
            \ that are to be retained by a tag-level retention rule. For tag-level\
            \ retention rules, only deleted resources, of the specified resource type,\
            \ that have one or more of the specified tag key and value pairs are retained.\
            \ If a resource is deleted, but it does not have any of the specified\
            \ tag key and value pairs, it is immediately deleted without being retained\
            \ by the retention rule.</p> <p>You can add the same tag key and value\
            \ pair to a maximum or five retention rules.</p> <p>To create a Region-level\
            \ retention rule, omit this parameter. A Region-level retention rule does\
            \ not have any resource tags specified. It retains all deleted resources\
            \ of the specified resource type in the Region in which the rule is created,\
            \ even if the resources are not tagged.</p>"
          items:
            $ref: '#/components/schemas/ResourceTag'
          maxItems: 50
          minItems: 0
          type: array
        LockConfiguration:
          $ref: '#/components/schemas/CreateRule_request_LockConfiguration'
      required:
      - ResourceType
      - RetentionPeriod
      type: object
    UpdateRule_request:
      properties:
        RetentionPeriod:
          $ref: '#/components/schemas/CreateRule_request_RetentionPeriod'
        Description:
          description: The retention rule description.
          pattern: "^[\\S ]{0,255}$"
          type: string
        ResourceType:
          description: <note> <p>This parameter is currently not supported. You can't
            update a retention rule's resource type after creation.</p> </note>
          enum:
          - EBS_SNAPSHOT
          - EC2_IMAGE
          type: string
        ResourceTags:
          description: "<p>Specifies the resource tags to use to identify resources\
            \ that are to be retained by a tag-level retention rule. For tag-level\
            \ retention rules, only deleted resources, of the specified resource type,\
            \ that have one or more of the specified tag key and value pairs are retained.\
            \ If a resource is deleted, but it does not have any of the specified\
            \ tag key and value pairs, it is immediately deleted without being retained\
            \ by the retention rule.</p> <p>You can add the same tag key and value\
            \ pair to a maximum or five retention rules.</p> <p>To create a Region-level\
            \ retention rule, omit this parameter. A Region-level retention rule does\
            \ not have any resource tags specified. It retains all deleted resources\
            \ of the specified resource type in the Region in which the rule is created,\
            \ even if the resources are not tagged.</p>"
          items:
            $ref: '#/components/schemas/ResourceTag'
          maxItems: 50
          minItems: 0
          type: array
      type: object
    ListRules_request:
      properties:
        MaxResults:
          description: "The maximum number of results to return with a single call.\
            \ To retrieve the remaining results, make another call with the returned\
            \ <code>NextToken</code> value."
          maximum: 1000
          minimum: 1
          type: integer
        NextToken:
          description: The token for the next page of results.
          pattern: "^[A-Za-z0-9+/=]{1,2048}$"
          type: string
        ResourceType:
          description: "The resource type retained by the retention rule. Only retention\
            \ rules that retain the specified resource type are listed. Currently,\
            \ only Amazon EBS snapshots and EBS-backed AMIs are supported. To list\
            \ retention rules that retain snapshots, specify <code>EBS_SNAPSHOT</code>.\
            \ To list retention rules that retain EBS-backed AMIs, specify <code>EC2_IMAGE</code>."
          enum:
          - EBS_SNAPSHOT
          - EC2_IMAGE
          type: string
        ResourceTags:
          description: Information about the resource tags used to identify resources
            that are retained by the retention rule.
          items:
            $ref: '#/components/schemas/ResourceTag'
          maxItems: 50
          minItems: 0
          type: array
        LockState:
          description: The lock state of the retention rules to list. Only retention
            rules with the specified lock state are returned.
          enum:
          - locked
          - pending_unlock
          - unlocked
          type: string
      required:
      - ResourceType
      type: object
    TagResource_request:
      properties:
        Tags:
          description: Information about the tags to assign to the retention rule.
          items:
            $ref: '#/components/schemas/Tag'
          maxItems: 200
          minItems: 0
          type: array
      required:
      - Tags
      type: object
    LockRule_request:
      properties:
        LockConfiguration:
          $ref: '#/components/schemas/CreateRule_request_LockConfiguration'
      required:
      - LockConfiguration
      type: object
    CreateRuleResponse_LockConfiguration:
      allOf:
      - $ref: '#/components/schemas/LockConfiguration'
      - description: Information about the retention rule lock configuration.
      example:
        UnlockDelay:
          UnlockDelayValue: ""
          UnlockDelayUnit: ""
    GetRuleResponse_RetentionPeriod:
      allOf:
      - $ref: '#/components/schemas/RetentionPeriod'
      - description: Information about the retention period for which the retention
          rule is to retain resources.
      example:
        RetentionPeriodUnit: ""
        RetentionPeriodValue: ""
  securitySchemes:
    hmac:
      description: Amazon Signature authorization v4
      in: header
      name: Authorization
      type: apiKey
      x-amazon-apigateway-authtype: awsSigv4
x-hasEquivalentPaths: true

