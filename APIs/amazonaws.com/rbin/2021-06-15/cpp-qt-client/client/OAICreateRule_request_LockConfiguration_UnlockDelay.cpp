/**
 * Amazon Recycle Bin
 * <p>This is the <i>Recycle Bin API Reference</i>. This documentation provides descriptions and syntax for each of the actions and data types in Recycle Bin.</p> <p>Recycle Bin is a resource recovery feature that enables you to restore accidentally deleted snapshots and EBS-backed AMIs. When using Recycle Bin, if your resources are deleted, they are retained in the Recycle Bin for a time period that you specify.</p> <p>You can restore a resource from the Recycle Bin at any time before its retention period expires. After you restore a resource from the Recycle Bin, the resource is removed from the Recycle Bin, and you can then use it in the same way you use any other resource of that type in your account. If the retention period expires and the resource is not restored, the resource is permanently deleted from the Recycle Bin and is no longer available for recovery. For more information about Recycle Bin, see <a href=\"https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/snapshot-recycle-bin.html\"> Recycle Bin</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>.</p>
 *
 * The version of the OpenAPI document: 2021-06-15
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAICreateRule_request_LockConfiguration_UnlockDelay.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAICreateRule_request_LockConfiguration_UnlockDelay::OAICreateRule_request_LockConfiguration_UnlockDelay(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAICreateRule_request_LockConfiguration_UnlockDelay::OAICreateRule_request_LockConfiguration_UnlockDelay() {
    this->initializeModel();
}

OAICreateRule_request_LockConfiguration_UnlockDelay::~OAICreateRule_request_LockConfiguration_UnlockDelay() {}

void OAICreateRule_request_LockConfiguration_UnlockDelay::initializeModel() {

    m_unlock_delay_value_isSet = false;
    m_unlock_delay_value_isValid = false;

    m_unlock_delay_unit_isSet = false;
    m_unlock_delay_unit_isValid = false;
}

void OAICreateRule_request_LockConfiguration_UnlockDelay::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAICreateRule_request_LockConfiguration_UnlockDelay::fromJsonObject(QJsonObject json) {

    m_unlock_delay_value_isValid = ::OpenAPI::fromJsonValue(m_unlock_delay_value, json[QString("UnlockDelayValue")]);
    m_unlock_delay_value_isSet = !json[QString("UnlockDelayValue")].isNull() && m_unlock_delay_value_isValid;

    m_unlock_delay_unit_isValid = ::OpenAPI::fromJsonValue(m_unlock_delay_unit, json[QString("UnlockDelayUnit")]);
    m_unlock_delay_unit_isSet = !json[QString("UnlockDelayUnit")].isNull() && m_unlock_delay_unit_isValid;
}

QString OAICreateRule_request_LockConfiguration_UnlockDelay::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAICreateRule_request_LockConfiguration_UnlockDelay::asJsonObject() const {
    QJsonObject obj;
    if (m_unlock_delay_value_isSet) {
        obj.insert(QString("UnlockDelayValue"), ::OpenAPI::toJsonValue(m_unlock_delay_value));
    }
    if (m_unlock_delay_unit.isSet()) {
        obj.insert(QString("UnlockDelayUnit"), ::OpenAPI::toJsonValue(m_unlock_delay_unit));
    }
    return obj;
}

qint32 OAICreateRule_request_LockConfiguration_UnlockDelay::getUnlockDelayValue() const {
    return m_unlock_delay_value;
}
void OAICreateRule_request_LockConfiguration_UnlockDelay::setUnlockDelayValue(const qint32 &unlock_delay_value) {
    m_unlock_delay_value = unlock_delay_value;
    m_unlock_delay_value_isSet = true;
}

bool OAICreateRule_request_LockConfiguration_UnlockDelay::is_unlock_delay_value_Set() const{
    return m_unlock_delay_value_isSet;
}

bool OAICreateRule_request_LockConfiguration_UnlockDelay::is_unlock_delay_value_Valid() const{
    return m_unlock_delay_value_isValid;
}

OAIUnlockDelayUnit OAICreateRule_request_LockConfiguration_UnlockDelay::getUnlockDelayUnit() const {
    return m_unlock_delay_unit;
}
void OAICreateRule_request_LockConfiguration_UnlockDelay::setUnlockDelayUnit(const OAIUnlockDelayUnit &unlock_delay_unit) {
    m_unlock_delay_unit = unlock_delay_unit;
    m_unlock_delay_unit_isSet = true;
}

bool OAICreateRule_request_LockConfiguration_UnlockDelay::is_unlock_delay_unit_Set() const{
    return m_unlock_delay_unit_isSet;
}

bool OAICreateRule_request_LockConfiguration_UnlockDelay::is_unlock_delay_unit_Valid() const{
    return m_unlock_delay_unit_isValid;
}

bool OAICreateRule_request_LockConfiguration_UnlockDelay::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_unlock_delay_value_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_unlock_delay_unit.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAICreateRule_request_LockConfiguration_UnlockDelay::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_unlock_delay_value_isValid && m_unlock_delay_unit_isValid && true;
}

} // namespace OpenAPI
