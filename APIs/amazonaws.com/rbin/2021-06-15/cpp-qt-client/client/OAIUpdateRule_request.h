/**
 * Amazon Recycle Bin
 * <p>This is the <i>Recycle Bin API Reference</i>. This documentation provides descriptions and syntax for each of the actions and data types in Recycle Bin.</p> <p>Recycle Bin is a resource recovery feature that enables you to restore accidentally deleted snapshots and EBS-backed AMIs. When using Recycle Bin, if your resources are deleted, they are retained in the Recycle Bin for a time period that you specify.</p> <p>You can restore a resource from the Recycle Bin at any time before its retention period expires. After you restore a resource from the Recycle Bin, the resource is removed from the Recycle Bin, and you can then use it in the same way you use any other resource of that type in your account. If the retention period expires and the resource is not restored, the resource is permanently deleted from the Recycle Bin and is no longer available for recovery. For more information about Recycle Bin, see <a href=\"https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/snapshot-recycle-bin.html\"> Recycle Bin</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>.</p>
 *
 * The version of the OpenAPI document: 2021-06-15
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIUpdateRule_request.h
 *
 * 
 */

#ifndef OAIUpdateRule_request_H
#define OAIUpdateRule_request_H

#include <QJsonObject>

#include "OAICreateRule_request_RetentionPeriod.h"
#include "OAIResourceTag.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAICreateRule_request_RetentionPeriod;
class OAIResourceTag;

class OAIUpdateRule_request : public OAIObject {
public:
    OAIUpdateRule_request();
    OAIUpdateRule_request(QString json);
    ~OAIUpdateRule_request() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAICreateRule_request_RetentionPeriod getRetentionPeriod() const;
    void setRetentionPeriod(const OAICreateRule_request_RetentionPeriod &retention_period);
    bool is_retention_period_Set() const;
    bool is_retention_period_Valid() const;

    QString getDescription() const;
    void setDescription(const QString &description);
    bool is_description_Set() const;
    bool is_description_Valid() const;

    QString getResourceType() const;
    void setResourceType(const QString &resource_type);
    bool is_resource_type_Set() const;
    bool is_resource_type_Valid() const;

    QList<OAIResourceTag> getResourceTags() const;
    void setResourceTags(const QList<OAIResourceTag> &resource_tags);
    bool is_resource_tags_Set() const;
    bool is_resource_tags_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAICreateRule_request_RetentionPeriod m_retention_period;
    bool m_retention_period_isSet;
    bool m_retention_period_isValid;

    QString m_description;
    bool m_description_isSet;
    bool m_description_isValid;

    QString m_resource_type;
    bool m_resource_type_isSet;
    bool m_resource_type_isValid;

    QList<OAIResourceTag> m_resource_tags;
    bool m_resource_tags_isSet;
    bool m_resource_tags_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIUpdateRule_request)

#endif // OAIUpdateRule_request_H
