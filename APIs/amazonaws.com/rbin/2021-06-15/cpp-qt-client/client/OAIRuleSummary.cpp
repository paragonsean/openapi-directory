/**
 * Amazon Recycle Bin
 * <p>This is the <i>Recycle Bin API Reference</i>. This documentation provides descriptions and syntax for each of the actions and data types in Recycle Bin.</p> <p>Recycle Bin is a resource recovery feature that enables you to restore accidentally deleted snapshots and EBS-backed AMIs. When using Recycle Bin, if your resources are deleted, they are retained in the Recycle Bin for a time period that you specify.</p> <p>You can restore a resource from the Recycle Bin at any time before its retention period expires. After you restore a resource from the Recycle Bin, the resource is removed from the Recycle Bin, and you can then use it in the same way you use any other resource of that type in your account. If the retention period expires and the resource is not restored, the resource is permanently deleted from the Recycle Bin and is no longer available for recovery. For more information about Recycle Bin, see <a href=\"https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/snapshot-recycle-bin.html\"> Recycle Bin</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>.</p>
 *
 * The version of the OpenAPI document: 2021-06-15
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIRuleSummary.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIRuleSummary::OAIRuleSummary(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIRuleSummary::OAIRuleSummary() {
    this->initializeModel();
}

OAIRuleSummary::~OAIRuleSummary() {}

void OAIRuleSummary::initializeModel() {

    m_identifier_isSet = false;
    m_identifier_isValid = false;

    m_description_isSet = false;
    m_description_isValid = false;

    m_retention_period_isSet = false;
    m_retention_period_isValid = false;

    m_lock_state_isSet = false;
    m_lock_state_isValid = false;
}

void OAIRuleSummary::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIRuleSummary::fromJsonObject(QJsonObject json) {

    m_identifier_isValid = ::OpenAPI::fromJsonValue(m_identifier, json[QString("Identifier")]);
    m_identifier_isSet = !json[QString("Identifier")].isNull() && m_identifier_isValid;

    m_description_isValid = ::OpenAPI::fromJsonValue(m_description, json[QString("Description")]);
    m_description_isSet = !json[QString("Description")].isNull() && m_description_isValid;

    m_retention_period_isValid = ::OpenAPI::fromJsonValue(m_retention_period, json[QString("RetentionPeriod")]);
    m_retention_period_isSet = !json[QString("RetentionPeriod")].isNull() && m_retention_period_isValid;

    m_lock_state_isValid = ::OpenAPI::fromJsonValue(m_lock_state, json[QString("LockState")]);
    m_lock_state_isSet = !json[QString("LockState")].isNull() && m_lock_state_isValid;
}

QString OAIRuleSummary::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIRuleSummary::asJsonObject() const {
    QJsonObject obj;
    if (m_identifier_isSet) {
        obj.insert(QString("Identifier"), ::OpenAPI::toJsonValue(m_identifier));
    }
    if (m_description_isSet) {
        obj.insert(QString("Description"), ::OpenAPI::toJsonValue(m_description));
    }
    if (m_retention_period.isSet()) {
        obj.insert(QString("RetentionPeriod"), ::OpenAPI::toJsonValue(m_retention_period));
    }
    if (m_lock_state.isSet()) {
        obj.insert(QString("LockState"), ::OpenAPI::toJsonValue(m_lock_state));
    }
    return obj;
}

QString OAIRuleSummary::getIdentifier() const {
    return m_identifier;
}
void OAIRuleSummary::setIdentifier(const QString &identifier) {
    m_identifier = identifier;
    m_identifier_isSet = true;
}

bool OAIRuleSummary::is_identifier_Set() const{
    return m_identifier_isSet;
}

bool OAIRuleSummary::is_identifier_Valid() const{
    return m_identifier_isValid;
}

QString OAIRuleSummary::getDescription() const {
    return m_description;
}
void OAIRuleSummary::setDescription(const QString &description) {
    m_description = description;
    m_description_isSet = true;
}

bool OAIRuleSummary::is_description_Set() const{
    return m_description_isSet;
}

bool OAIRuleSummary::is_description_Valid() const{
    return m_description_isValid;
}

OAIGetRuleResponse_RetentionPeriod OAIRuleSummary::getRetentionPeriod() const {
    return m_retention_period;
}
void OAIRuleSummary::setRetentionPeriod(const OAIGetRuleResponse_RetentionPeriod &retention_period) {
    m_retention_period = retention_period;
    m_retention_period_isSet = true;
}

bool OAIRuleSummary::is_retention_period_Set() const{
    return m_retention_period_isSet;
}

bool OAIRuleSummary::is_retention_period_Valid() const{
    return m_retention_period_isValid;
}

OAILockState OAIRuleSummary::getLockState() const {
    return m_lock_state;
}
void OAIRuleSummary::setLockState(const OAILockState &lock_state) {
    m_lock_state = lock_state;
    m_lock_state_isSet = true;
}

bool OAIRuleSummary::is_lock_state_Set() const{
    return m_lock_state_isSet;
}

bool OAIRuleSummary::is_lock_state_Valid() const{
    return m_lock_state_isValid;
}

bool OAIRuleSummary::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_identifier_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_description_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_retention_period.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_lock_state.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIRuleSummary::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
