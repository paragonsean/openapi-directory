/**
 * AWS Elemental MediaPackage
 * AWS Elemental MediaPackage
 *
 * The version of the OpenAPI document: 2017-10-12
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIPresetSpeke20Audio.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIPresetSpeke20Audio::OAIPresetSpeke20Audio(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIPresetSpeke20Audio::OAIPresetSpeke20Audio() {
    this->initializeModel();
}

OAIPresetSpeke20Audio::~OAIPresetSpeke20Audio() {}

void OAIPresetSpeke20Audio::initializeModel() {

    m_value_isSet = false;
    m_value_isValid = false;
    m_value = eOAIPresetSpeke20Audio::INVALID_VALUE_OPENAPI_GENERATED;
}

void OAIPresetSpeke20Audio::fromJson(QString jsonString) {
    
    if ( jsonString.compare("PRESET-AUDIO-1", Qt::CaseInsensitive) == 0) {
        m_value = eOAIPresetSpeke20Audio::PRESET_AUDIO_1;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("PRESET-AUDIO-2", Qt::CaseInsensitive) == 0) {
        m_value = eOAIPresetSpeke20Audio::PRESET_AUDIO_2;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("PRESET-AUDIO-3", Qt::CaseInsensitive) == 0) {
        m_value = eOAIPresetSpeke20Audio::PRESET_AUDIO_3;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("SHARED", Qt::CaseInsensitive) == 0) {
        m_value = eOAIPresetSpeke20Audio::SHARED;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("UNENCRYPTED", Qt::CaseInsensitive) == 0) {
        m_value = eOAIPresetSpeke20Audio::UNENCRYPTED;
        m_value_isSet = m_value_isValid = true;
    }
}

void OAIPresetSpeke20Audio::fromJsonValue(QJsonValue json) {
fromJson(json.toString());
}

QString OAIPresetSpeke20Audio::asJson() const {
    
    QString val;
    switch (m_value){
        case eOAIPresetSpeke20Audio::PRESET_AUDIO_1:
            val = "PRESET-AUDIO-1";
            break;
        case eOAIPresetSpeke20Audio::PRESET_AUDIO_2:
            val = "PRESET-AUDIO-2";
            break;
        case eOAIPresetSpeke20Audio::PRESET_AUDIO_3:
            val = "PRESET-AUDIO-3";
            break;
        case eOAIPresetSpeke20Audio::SHARED:
            val = "SHARED";
            break;
        case eOAIPresetSpeke20Audio::UNENCRYPTED:
            val = "UNENCRYPTED";
            break;
        default:
            break;
    }
    return val;
}

QJsonValue OAIPresetSpeke20Audio::asJsonValue() const {
    
    return QJsonValue(asJson());
}


OAIPresetSpeke20Audio::eOAIPresetSpeke20Audio OAIPresetSpeke20Audio::getValue() const {
    return m_value;
}

void OAIPresetSpeke20Audio::setValue(const OAIPresetSpeke20Audio::eOAIPresetSpeke20Audio& value){
    m_value = value;
    m_value_isSet = true;
}
bool OAIPresetSpeke20Audio::isSet() const {
    
    return m_value_isSet;
}

bool OAIPresetSpeke20Audio::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_value_isValid;
}

} // namespace OpenAPI
