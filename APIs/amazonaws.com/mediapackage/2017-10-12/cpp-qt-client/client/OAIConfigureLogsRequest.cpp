/**
 * AWS Elemental MediaPackage
 * AWS Elemental MediaPackage
 *
 * The version of the OpenAPI document: 2017-10-12
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIConfigureLogsRequest.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIConfigureLogsRequest::OAIConfigureLogsRequest(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIConfigureLogsRequest::OAIConfigureLogsRequest() {
    this->initializeModel();
}

OAIConfigureLogsRequest::~OAIConfigureLogsRequest() {}

void OAIConfigureLogsRequest::initializeModel() {

    m_egress_access_logs_isSet = false;
    m_egress_access_logs_isValid = false;

    m_ingress_access_logs_isSet = false;
    m_ingress_access_logs_isValid = false;
}

void OAIConfigureLogsRequest::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIConfigureLogsRequest::fromJsonObject(QJsonObject json) {

    m_egress_access_logs_isValid = ::OpenAPI::fromJsonValue(m_egress_access_logs, json[QString("EgressAccessLogs")]);
    m_egress_access_logs_isSet = !json[QString("EgressAccessLogs")].isNull() && m_egress_access_logs_isValid;

    m_ingress_access_logs_isValid = ::OpenAPI::fromJsonValue(m_ingress_access_logs, json[QString("IngressAccessLogs")]);
    m_ingress_access_logs_isSet = !json[QString("IngressAccessLogs")].isNull() && m_ingress_access_logs_isValid;
}

QString OAIConfigureLogsRequest::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIConfigureLogsRequest::asJsonObject() const {
    QJsonObject obj;
    if (m_egress_access_logs.isSet()) {
        obj.insert(QString("EgressAccessLogs"), ::OpenAPI::toJsonValue(m_egress_access_logs));
    }
    if (m_ingress_access_logs.isSet()) {
        obj.insert(QString("IngressAccessLogs"), ::OpenAPI::toJsonValue(m_ingress_access_logs));
    }
    return obj;
}

OAIConfigureLogsResponse_EgressAccessLogs OAIConfigureLogsRequest::getEgressAccessLogs() const {
    return m_egress_access_logs;
}
void OAIConfigureLogsRequest::setEgressAccessLogs(const OAIConfigureLogsResponse_EgressAccessLogs &egress_access_logs) {
    m_egress_access_logs = egress_access_logs;
    m_egress_access_logs_isSet = true;
}

bool OAIConfigureLogsRequest::is_egress_access_logs_Set() const{
    return m_egress_access_logs_isSet;
}

bool OAIConfigureLogsRequest::is_egress_access_logs_Valid() const{
    return m_egress_access_logs_isValid;
}

OAIConfigureLogsResponse_IngressAccessLogs OAIConfigureLogsRequest::getIngressAccessLogs() const {
    return m_ingress_access_logs;
}
void OAIConfigureLogsRequest::setIngressAccessLogs(const OAIConfigureLogsResponse_IngressAccessLogs &ingress_access_logs) {
    m_ingress_access_logs = ingress_access_logs;
    m_ingress_access_logs_isSet = true;
}

bool OAIConfigureLogsRequest::is_ingress_access_logs_Set() const{
    return m_ingress_access_logs_isSet;
}

bool OAIConfigureLogsRequest::is_ingress_access_logs_Valid() const{
    return m_ingress_access_logs_isValid;
}

bool OAIConfigureLogsRequest::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_egress_access_logs.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_ingress_access_logs.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIConfigureLogsRequest::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
