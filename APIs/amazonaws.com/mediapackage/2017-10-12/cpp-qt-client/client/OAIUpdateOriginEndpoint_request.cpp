/**
 * AWS Elemental MediaPackage
 * AWS Elemental MediaPackage
 *
 * The version of the OpenAPI document: 2017-10-12
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIUpdateOriginEndpoint_request.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIUpdateOriginEndpoint_request::OAIUpdateOriginEndpoint_request(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIUpdateOriginEndpoint_request::OAIUpdateOriginEndpoint_request() {
    this->initializeModel();
}

OAIUpdateOriginEndpoint_request::~OAIUpdateOriginEndpoint_request() {}

void OAIUpdateOriginEndpoint_request::initializeModel() {

    m_authorization_isSet = false;
    m_authorization_isValid = false;

    m_cmaf_package_isSet = false;
    m_cmaf_package_isValid = false;

    m_dash_package_isSet = false;
    m_dash_package_isValid = false;

    m_description_isSet = false;
    m_description_isValid = false;

    m_hls_package_isSet = false;
    m_hls_package_isValid = false;

    m_manifest_name_isSet = false;
    m_manifest_name_isValid = false;

    m_mss_package_isSet = false;
    m_mss_package_isValid = false;

    m_origination_isSet = false;
    m_origination_isValid = false;

    m_startover_window_seconds_isSet = false;
    m_startover_window_seconds_isValid = false;

    m_time_delay_seconds_isSet = false;
    m_time_delay_seconds_isValid = false;

    m_whitelist_isSet = false;
    m_whitelist_isValid = false;
}

void OAIUpdateOriginEndpoint_request::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIUpdateOriginEndpoint_request::fromJsonObject(QJsonObject json) {

    m_authorization_isValid = ::OpenAPI::fromJsonValue(m_authorization, json[QString("authorization")]);
    m_authorization_isSet = !json[QString("authorization")].isNull() && m_authorization_isValid;

    m_cmaf_package_isValid = ::OpenAPI::fromJsonValue(m_cmaf_package, json[QString("cmafPackage")]);
    m_cmaf_package_isSet = !json[QString("cmafPackage")].isNull() && m_cmaf_package_isValid;

    m_dash_package_isValid = ::OpenAPI::fromJsonValue(m_dash_package, json[QString("dashPackage")]);
    m_dash_package_isSet = !json[QString("dashPackage")].isNull() && m_dash_package_isValid;

    m_description_isValid = ::OpenAPI::fromJsonValue(m_description, json[QString("description")]);
    m_description_isSet = !json[QString("description")].isNull() && m_description_isValid;

    m_hls_package_isValid = ::OpenAPI::fromJsonValue(m_hls_package, json[QString("hlsPackage")]);
    m_hls_package_isSet = !json[QString("hlsPackage")].isNull() && m_hls_package_isValid;

    m_manifest_name_isValid = ::OpenAPI::fromJsonValue(m_manifest_name, json[QString("manifestName")]);
    m_manifest_name_isSet = !json[QString("manifestName")].isNull() && m_manifest_name_isValid;

    m_mss_package_isValid = ::OpenAPI::fromJsonValue(m_mss_package, json[QString("mssPackage")]);
    m_mss_package_isSet = !json[QString("mssPackage")].isNull() && m_mss_package_isValid;

    m_origination_isValid = ::OpenAPI::fromJsonValue(m_origination, json[QString("origination")]);
    m_origination_isSet = !json[QString("origination")].isNull() && m_origination_isValid;

    m_startover_window_seconds_isValid = ::OpenAPI::fromJsonValue(m_startover_window_seconds, json[QString("startoverWindowSeconds")]);
    m_startover_window_seconds_isSet = !json[QString("startoverWindowSeconds")].isNull() && m_startover_window_seconds_isValid;

    m_time_delay_seconds_isValid = ::OpenAPI::fromJsonValue(m_time_delay_seconds, json[QString("timeDelaySeconds")]);
    m_time_delay_seconds_isSet = !json[QString("timeDelaySeconds")].isNull() && m_time_delay_seconds_isValid;

    m_whitelist_isValid = ::OpenAPI::fromJsonValue(m_whitelist, json[QString("whitelist")]);
    m_whitelist_isSet = !json[QString("whitelist")].isNull() && m_whitelist_isValid;
}

QString OAIUpdateOriginEndpoint_request::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIUpdateOriginEndpoint_request::asJsonObject() const {
    QJsonObject obj;
    if (m_authorization.isSet()) {
        obj.insert(QString("authorization"), ::OpenAPI::toJsonValue(m_authorization));
    }
    if (m_cmaf_package.isSet()) {
        obj.insert(QString("cmafPackage"), ::OpenAPI::toJsonValue(m_cmaf_package));
    }
    if (m_dash_package.isSet()) {
        obj.insert(QString("dashPackage"), ::OpenAPI::toJsonValue(m_dash_package));
    }
    if (m_description_isSet) {
        obj.insert(QString("description"), ::OpenAPI::toJsonValue(m_description));
    }
    if (m_hls_package.isSet()) {
        obj.insert(QString("hlsPackage"), ::OpenAPI::toJsonValue(m_hls_package));
    }
    if (m_manifest_name_isSet) {
        obj.insert(QString("manifestName"), ::OpenAPI::toJsonValue(m_manifest_name));
    }
    if (m_mss_package.isSet()) {
        obj.insert(QString("mssPackage"), ::OpenAPI::toJsonValue(m_mss_package));
    }
    if (m_origination_isSet) {
        obj.insert(QString("origination"), ::OpenAPI::toJsonValue(m_origination));
    }
    if (m_startover_window_seconds_isSet) {
        obj.insert(QString("startoverWindowSeconds"), ::OpenAPI::toJsonValue(m_startover_window_seconds));
    }
    if (m_time_delay_seconds_isSet) {
        obj.insert(QString("timeDelaySeconds"), ::OpenAPI::toJsonValue(m_time_delay_seconds));
    }
    if (m_whitelist.size() > 0) {
        obj.insert(QString("whitelist"), ::OpenAPI::toJsonValue(m_whitelist));
    }
    return obj;
}

OAICreateOriginEndpoint_request_authorization OAIUpdateOriginEndpoint_request::getAuthorization() const {
    return m_authorization;
}
void OAIUpdateOriginEndpoint_request::setAuthorization(const OAICreateOriginEndpoint_request_authorization &authorization) {
    m_authorization = authorization;
    m_authorization_isSet = true;
}

bool OAIUpdateOriginEndpoint_request::is_authorization_Set() const{
    return m_authorization_isSet;
}

bool OAIUpdateOriginEndpoint_request::is_authorization_Valid() const{
    return m_authorization_isValid;
}

OAICreateOriginEndpoint_request_cmafPackage OAIUpdateOriginEndpoint_request::getCmafPackage() const {
    return m_cmaf_package;
}
void OAIUpdateOriginEndpoint_request::setCmafPackage(const OAICreateOriginEndpoint_request_cmafPackage &cmaf_package) {
    m_cmaf_package = cmaf_package;
    m_cmaf_package_isSet = true;
}

bool OAIUpdateOriginEndpoint_request::is_cmaf_package_Set() const{
    return m_cmaf_package_isSet;
}

bool OAIUpdateOriginEndpoint_request::is_cmaf_package_Valid() const{
    return m_cmaf_package_isValid;
}

OAICreateOriginEndpoint_request_dashPackage OAIUpdateOriginEndpoint_request::getDashPackage() const {
    return m_dash_package;
}
void OAIUpdateOriginEndpoint_request::setDashPackage(const OAICreateOriginEndpoint_request_dashPackage &dash_package) {
    m_dash_package = dash_package;
    m_dash_package_isSet = true;
}

bool OAIUpdateOriginEndpoint_request::is_dash_package_Set() const{
    return m_dash_package_isSet;
}

bool OAIUpdateOriginEndpoint_request::is_dash_package_Valid() const{
    return m_dash_package_isValid;
}

QString OAIUpdateOriginEndpoint_request::getDescription() const {
    return m_description;
}
void OAIUpdateOriginEndpoint_request::setDescription(const QString &description) {
    m_description = description;
    m_description_isSet = true;
}

bool OAIUpdateOriginEndpoint_request::is_description_Set() const{
    return m_description_isSet;
}

bool OAIUpdateOriginEndpoint_request::is_description_Valid() const{
    return m_description_isValid;
}

OAICreateOriginEndpoint_request_hlsPackage OAIUpdateOriginEndpoint_request::getHlsPackage() const {
    return m_hls_package;
}
void OAIUpdateOriginEndpoint_request::setHlsPackage(const OAICreateOriginEndpoint_request_hlsPackage &hls_package) {
    m_hls_package = hls_package;
    m_hls_package_isSet = true;
}

bool OAIUpdateOriginEndpoint_request::is_hls_package_Set() const{
    return m_hls_package_isSet;
}

bool OAIUpdateOriginEndpoint_request::is_hls_package_Valid() const{
    return m_hls_package_isValid;
}

QString OAIUpdateOriginEndpoint_request::getManifestName() const {
    return m_manifest_name;
}
void OAIUpdateOriginEndpoint_request::setManifestName(const QString &manifest_name) {
    m_manifest_name = manifest_name;
    m_manifest_name_isSet = true;
}

bool OAIUpdateOriginEndpoint_request::is_manifest_name_Set() const{
    return m_manifest_name_isSet;
}

bool OAIUpdateOriginEndpoint_request::is_manifest_name_Valid() const{
    return m_manifest_name_isValid;
}

OAICreateOriginEndpoint_request_mssPackage OAIUpdateOriginEndpoint_request::getMssPackage() const {
    return m_mss_package;
}
void OAIUpdateOriginEndpoint_request::setMssPackage(const OAICreateOriginEndpoint_request_mssPackage &mss_package) {
    m_mss_package = mss_package;
    m_mss_package_isSet = true;
}

bool OAIUpdateOriginEndpoint_request::is_mss_package_Set() const{
    return m_mss_package_isSet;
}

bool OAIUpdateOriginEndpoint_request::is_mss_package_Valid() const{
    return m_mss_package_isValid;
}

QString OAIUpdateOriginEndpoint_request::getOrigination() const {
    return m_origination;
}
void OAIUpdateOriginEndpoint_request::setOrigination(const QString &origination) {
    m_origination = origination;
    m_origination_isSet = true;
}

bool OAIUpdateOriginEndpoint_request::is_origination_Set() const{
    return m_origination_isSet;
}

bool OAIUpdateOriginEndpoint_request::is_origination_Valid() const{
    return m_origination_isValid;
}

qint32 OAIUpdateOriginEndpoint_request::getStartoverWindowSeconds() const {
    return m_startover_window_seconds;
}
void OAIUpdateOriginEndpoint_request::setStartoverWindowSeconds(const qint32 &startover_window_seconds) {
    m_startover_window_seconds = startover_window_seconds;
    m_startover_window_seconds_isSet = true;
}

bool OAIUpdateOriginEndpoint_request::is_startover_window_seconds_Set() const{
    return m_startover_window_seconds_isSet;
}

bool OAIUpdateOriginEndpoint_request::is_startover_window_seconds_Valid() const{
    return m_startover_window_seconds_isValid;
}

qint32 OAIUpdateOriginEndpoint_request::getTimeDelaySeconds() const {
    return m_time_delay_seconds;
}
void OAIUpdateOriginEndpoint_request::setTimeDelaySeconds(const qint32 &time_delay_seconds) {
    m_time_delay_seconds = time_delay_seconds;
    m_time_delay_seconds_isSet = true;
}

bool OAIUpdateOriginEndpoint_request::is_time_delay_seconds_Set() const{
    return m_time_delay_seconds_isSet;
}

bool OAIUpdateOriginEndpoint_request::is_time_delay_seconds_Valid() const{
    return m_time_delay_seconds_isValid;
}

QList<QString> OAIUpdateOriginEndpoint_request::getWhitelist() const {
    return m_whitelist;
}
void OAIUpdateOriginEndpoint_request::setWhitelist(const QList<QString> &whitelist) {
    m_whitelist = whitelist;
    m_whitelist_isSet = true;
}

bool OAIUpdateOriginEndpoint_request::is_whitelist_Set() const{
    return m_whitelist_isSet;
}

bool OAIUpdateOriginEndpoint_request::is_whitelist_Valid() const{
    return m_whitelist_isValid;
}

bool OAIUpdateOriginEndpoint_request::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_authorization.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_cmaf_package.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_dash_package.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_description_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_hls_package.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_manifest_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_mss_package.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_origination_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_startover_window_seconds_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_time_delay_seconds_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_whitelist.size() > 0) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIUpdateOriginEndpoint_request::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
