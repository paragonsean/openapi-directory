/**
 * AWS Elemental MediaPackage
 * AWS Elemental MediaPackage
 *
 * The version of the OpenAPI document: 2017-10-12
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIUtcTiming.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIUtcTiming::OAIUtcTiming(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIUtcTiming::OAIUtcTiming() {
    this->initializeModel();
}

OAIUtcTiming::~OAIUtcTiming() {}

void OAIUtcTiming::initializeModel() {

    m_value_isSet = false;
    m_value_isValid = false;
    m_value = eOAIUtcTiming::INVALID_VALUE_OPENAPI_GENERATED;
}

void OAIUtcTiming::fromJson(QString jsonString) {
    
    if ( jsonString.compare("NONE", Qt::CaseInsensitive) == 0) {
        m_value = eOAIUtcTiming::NONE;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("HTTP-HEAD", Qt::CaseInsensitive) == 0) {
        m_value = eOAIUtcTiming::HTTP_HEAD;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("HTTP-ISO", Qt::CaseInsensitive) == 0) {
        m_value = eOAIUtcTiming::HTTP_ISO;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("HTTP-XSDATE", Qt::CaseInsensitive) == 0) {
        m_value = eOAIUtcTiming::HTTP_XSDATE;
        m_value_isSet = m_value_isValid = true;
    }
}

void OAIUtcTiming::fromJsonValue(QJsonValue json) {
fromJson(json.toString());
}

QString OAIUtcTiming::asJson() const {
    
    QString val;
    switch (m_value){
        case eOAIUtcTiming::NONE:
            val = "NONE";
            break;
        case eOAIUtcTiming::HTTP_HEAD:
            val = "HTTP-HEAD";
            break;
        case eOAIUtcTiming::HTTP_ISO:
            val = "HTTP-ISO";
            break;
        case eOAIUtcTiming::HTTP_XSDATE:
            val = "HTTP-XSDATE";
            break;
        default:
            break;
    }
    return val;
}

QJsonValue OAIUtcTiming::asJsonValue() const {
    
    return QJsonValue(asJson());
}


OAIUtcTiming::eOAIUtcTiming OAIUtcTiming::getValue() const {
    return m_value;
}

void OAIUtcTiming::setValue(const OAIUtcTiming::eOAIUtcTiming& value){
    m_value = value;
    m_value_isSet = true;
}
bool OAIUtcTiming::isSet() const {
    
    return m_value_isSet;
}

bool OAIUtcTiming::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_value_isValid;
}

} // namespace OpenAPI
