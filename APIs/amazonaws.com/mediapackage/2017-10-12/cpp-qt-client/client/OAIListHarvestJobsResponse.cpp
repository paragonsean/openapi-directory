/**
 * AWS Elemental MediaPackage
 * AWS Elemental MediaPackage
 *
 * The version of the OpenAPI document: 2017-10-12
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIListHarvestJobsResponse.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIListHarvestJobsResponse::OAIListHarvestJobsResponse(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIListHarvestJobsResponse::OAIListHarvestJobsResponse() {
    this->initializeModel();
}

OAIListHarvestJobsResponse::~OAIListHarvestJobsResponse() {}

void OAIListHarvestJobsResponse::initializeModel() {

    m_harvest_jobs_isSet = false;
    m_harvest_jobs_isValid = false;

    m_next_token_isSet = false;
    m_next_token_isValid = false;
}

void OAIListHarvestJobsResponse::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIListHarvestJobsResponse::fromJsonObject(QJsonObject json) {

    m_harvest_jobs_isValid = ::OpenAPI::fromJsonValue(m_harvest_jobs, json[QString("HarvestJobs")]);
    m_harvest_jobs_isSet = !json[QString("HarvestJobs")].isNull() && m_harvest_jobs_isValid;

    m_next_token_isValid = ::OpenAPI::fromJsonValue(m_next_token, json[QString("NextToken")]);
    m_next_token_isSet = !json[QString("NextToken")].isNull() && m_next_token_isValid;
}

QString OAIListHarvestJobsResponse::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIListHarvestJobsResponse::asJsonObject() const {
    QJsonObject obj;
    if (m_harvest_jobs.isSet()) {
        obj.insert(QString("HarvestJobs"), ::OpenAPI::toJsonValue(m_harvest_jobs));
    }
    if (m_next_token_isSet) {
        obj.insert(QString("NextToken"), ::OpenAPI::toJsonValue(m_next_token));
    }
    return obj;
}

QList OAIListHarvestJobsResponse::getHarvestJobs() const {
    return m_harvest_jobs;
}
void OAIListHarvestJobsResponse::setHarvestJobs(const QList &harvest_jobs) {
    m_harvest_jobs = harvest_jobs;
    m_harvest_jobs_isSet = true;
}

bool OAIListHarvestJobsResponse::is_harvest_jobs_Set() const{
    return m_harvest_jobs_isSet;
}

bool OAIListHarvestJobsResponse::is_harvest_jobs_Valid() const{
    return m_harvest_jobs_isValid;
}

QString OAIListHarvestJobsResponse::getNextToken() const {
    return m_next_token;
}
void OAIListHarvestJobsResponse::setNextToken(const QString &next_token) {
    m_next_token = next_token;
    m_next_token_isSet = true;
}

bool OAIListHarvestJobsResponse::is_next_token_Set() const{
    return m_next_token_isSet;
}

bool OAIListHarvestJobsResponse::is_next_token_Valid() const{
    return m_next_token_isValid;
}

bool OAIListHarvestJobsResponse::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_harvest_jobs.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_next_token_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIListHarvestJobsResponse::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
