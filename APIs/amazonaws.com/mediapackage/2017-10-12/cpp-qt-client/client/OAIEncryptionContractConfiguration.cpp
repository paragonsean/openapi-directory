/**
 * AWS Elemental MediaPackage
 * AWS Elemental MediaPackage
 *
 * The version of the OpenAPI document: 2017-10-12
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIEncryptionContractConfiguration.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIEncryptionContractConfiguration::OAIEncryptionContractConfiguration(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIEncryptionContractConfiguration::OAIEncryptionContractConfiguration() {
    this->initializeModel();
}

OAIEncryptionContractConfiguration::~OAIEncryptionContractConfiguration() {}

void OAIEncryptionContractConfiguration::initializeModel() {

    m_preset_speke20_audio_isSet = false;
    m_preset_speke20_audio_isValid = false;

    m_preset_speke20_video_isSet = false;
    m_preset_speke20_video_isValid = false;
}

void OAIEncryptionContractConfiguration::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIEncryptionContractConfiguration::fromJsonObject(QJsonObject json) {

    m_preset_speke20_audio_isValid = ::OpenAPI::fromJsonValue(m_preset_speke20_audio, json[QString("PresetSpeke20Audio")]);
    m_preset_speke20_audio_isSet = !json[QString("PresetSpeke20Audio")].isNull() && m_preset_speke20_audio_isValid;

    m_preset_speke20_video_isValid = ::OpenAPI::fromJsonValue(m_preset_speke20_video, json[QString("PresetSpeke20Video")]);
    m_preset_speke20_video_isSet = !json[QString("PresetSpeke20Video")].isNull() && m_preset_speke20_video_isValid;
}

QString OAIEncryptionContractConfiguration::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIEncryptionContractConfiguration::asJsonObject() const {
    QJsonObject obj;
    if (m_preset_speke20_audio.isSet()) {
        obj.insert(QString("PresetSpeke20Audio"), ::OpenAPI::toJsonValue(m_preset_speke20_audio));
    }
    if (m_preset_speke20_video.isSet()) {
        obj.insert(QString("PresetSpeke20Video"), ::OpenAPI::toJsonValue(m_preset_speke20_video));
    }
    return obj;
}

OAIPresetSpeke20Audio OAIEncryptionContractConfiguration::getPresetSpeke20Audio() const {
    return m_preset_speke20_audio;
}
void OAIEncryptionContractConfiguration::setPresetSpeke20Audio(const OAIPresetSpeke20Audio &preset_speke20_audio) {
    m_preset_speke20_audio = preset_speke20_audio;
    m_preset_speke20_audio_isSet = true;
}

bool OAIEncryptionContractConfiguration::is_preset_speke20_audio_Set() const{
    return m_preset_speke20_audio_isSet;
}

bool OAIEncryptionContractConfiguration::is_preset_speke20_audio_Valid() const{
    return m_preset_speke20_audio_isValid;
}

OAIPresetSpeke20Video OAIEncryptionContractConfiguration::getPresetSpeke20Video() const {
    return m_preset_speke20_video;
}
void OAIEncryptionContractConfiguration::setPresetSpeke20Video(const OAIPresetSpeke20Video &preset_speke20_video) {
    m_preset_speke20_video = preset_speke20_video;
    m_preset_speke20_video_isSet = true;
}

bool OAIEncryptionContractConfiguration::is_preset_speke20_video_Set() const{
    return m_preset_speke20_video_isSet;
}

bool OAIEncryptionContractConfiguration::is_preset_speke20_video_Valid() const{
    return m_preset_speke20_video_isValid;
}

bool OAIEncryptionContractConfiguration::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_preset_speke20_audio.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_preset_speke20_video.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIEncryptionContractConfiguration::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_preset_speke20_audio_isValid && m_preset_speke20_video_isValid && true;
}

} // namespace OpenAPI
