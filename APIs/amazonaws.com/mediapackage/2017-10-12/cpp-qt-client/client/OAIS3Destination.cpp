/**
 * AWS Elemental MediaPackage
 * AWS Elemental MediaPackage
 *
 * The version of the OpenAPI document: 2017-10-12
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIS3Destination.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIS3Destination::OAIS3Destination(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIS3Destination::OAIS3Destination() {
    this->initializeModel();
}

OAIS3Destination::~OAIS3Destination() {}

void OAIS3Destination::initializeModel() {

    m_bucket_name_isSet = false;
    m_bucket_name_isValid = false;

    m_manifest_key_isSet = false;
    m_manifest_key_isValid = false;

    m_role_arn_isSet = false;
    m_role_arn_isValid = false;
}

void OAIS3Destination::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIS3Destination::fromJsonObject(QJsonObject json) {

    m_bucket_name_isValid = ::OpenAPI::fromJsonValue(m_bucket_name, json[QString("BucketName")]);
    m_bucket_name_isSet = !json[QString("BucketName")].isNull() && m_bucket_name_isValid;

    m_manifest_key_isValid = ::OpenAPI::fromJsonValue(m_manifest_key, json[QString("ManifestKey")]);
    m_manifest_key_isSet = !json[QString("ManifestKey")].isNull() && m_manifest_key_isValid;

    m_role_arn_isValid = ::OpenAPI::fromJsonValue(m_role_arn, json[QString("RoleArn")]);
    m_role_arn_isSet = !json[QString("RoleArn")].isNull() && m_role_arn_isValid;
}

QString OAIS3Destination::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIS3Destination::asJsonObject() const {
    QJsonObject obj;
    if (m_bucket_name_isSet) {
        obj.insert(QString("BucketName"), ::OpenAPI::toJsonValue(m_bucket_name));
    }
    if (m_manifest_key_isSet) {
        obj.insert(QString("ManifestKey"), ::OpenAPI::toJsonValue(m_manifest_key));
    }
    if (m_role_arn_isSet) {
        obj.insert(QString("RoleArn"), ::OpenAPI::toJsonValue(m_role_arn));
    }
    return obj;
}

QString OAIS3Destination::getBucketName() const {
    return m_bucket_name;
}
void OAIS3Destination::setBucketName(const QString &bucket_name) {
    m_bucket_name = bucket_name;
    m_bucket_name_isSet = true;
}

bool OAIS3Destination::is_bucket_name_Set() const{
    return m_bucket_name_isSet;
}

bool OAIS3Destination::is_bucket_name_Valid() const{
    return m_bucket_name_isValid;
}

QString OAIS3Destination::getManifestKey() const {
    return m_manifest_key;
}
void OAIS3Destination::setManifestKey(const QString &manifest_key) {
    m_manifest_key = manifest_key;
    m_manifest_key_isSet = true;
}

bool OAIS3Destination::is_manifest_key_Set() const{
    return m_manifest_key_isSet;
}

bool OAIS3Destination::is_manifest_key_Valid() const{
    return m_manifest_key_isValid;
}

QString OAIS3Destination::getRoleArn() const {
    return m_role_arn;
}
void OAIS3Destination::setRoleArn(const QString &role_arn) {
    m_role_arn = role_arn;
    m_role_arn_isSet = true;
}

bool OAIS3Destination::is_role_arn_Set() const{
    return m_role_arn_isSet;
}

bool OAIS3Destination::is_role_arn_Valid() const{
    return m_role_arn_isValid;
}

bool OAIS3Destination::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_bucket_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_manifest_key_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_role_arn_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIS3Destination::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_bucket_name_isValid && m_manifest_key_isValid && m_role_arn_isValid && true;
}

} // namespace OpenAPI
