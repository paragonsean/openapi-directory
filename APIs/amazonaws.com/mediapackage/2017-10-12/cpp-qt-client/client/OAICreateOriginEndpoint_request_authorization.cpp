/**
 * AWS Elemental MediaPackage
 * AWS Elemental MediaPackage
 *
 * The version of the OpenAPI document: 2017-10-12
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAICreateOriginEndpoint_request_authorization.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAICreateOriginEndpoint_request_authorization::OAICreateOriginEndpoint_request_authorization(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAICreateOriginEndpoint_request_authorization::OAICreateOriginEndpoint_request_authorization() {
    this->initializeModel();
}

OAICreateOriginEndpoint_request_authorization::~OAICreateOriginEndpoint_request_authorization() {}

void OAICreateOriginEndpoint_request_authorization::initializeModel() {

    m_cdn_identifier_secret_isSet = false;
    m_cdn_identifier_secret_isValid = false;

    m_secrets_role_arn_isSet = false;
    m_secrets_role_arn_isValid = false;
}

void OAICreateOriginEndpoint_request_authorization::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAICreateOriginEndpoint_request_authorization::fromJsonObject(QJsonObject json) {

    m_cdn_identifier_secret_isValid = ::OpenAPI::fromJsonValue(m_cdn_identifier_secret, json[QString("CdnIdentifierSecret")]);
    m_cdn_identifier_secret_isSet = !json[QString("CdnIdentifierSecret")].isNull() && m_cdn_identifier_secret_isValid;

    m_secrets_role_arn_isValid = ::OpenAPI::fromJsonValue(m_secrets_role_arn, json[QString("SecretsRoleArn")]);
    m_secrets_role_arn_isSet = !json[QString("SecretsRoleArn")].isNull() && m_secrets_role_arn_isValid;
}

QString OAICreateOriginEndpoint_request_authorization::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAICreateOriginEndpoint_request_authorization::asJsonObject() const {
    QJsonObject obj;
    if (m_cdn_identifier_secret_isSet) {
        obj.insert(QString("CdnIdentifierSecret"), ::OpenAPI::toJsonValue(m_cdn_identifier_secret));
    }
    if (m_secrets_role_arn_isSet) {
        obj.insert(QString("SecretsRoleArn"), ::OpenAPI::toJsonValue(m_secrets_role_arn));
    }
    return obj;
}

QString OAICreateOriginEndpoint_request_authorization::getCdnIdentifierSecret() const {
    return m_cdn_identifier_secret;
}
void OAICreateOriginEndpoint_request_authorization::setCdnIdentifierSecret(const QString &cdn_identifier_secret) {
    m_cdn_identifier_secret = cdn_identifier_secret;
    m_cdn_identifier_secret_isSet = true;
}

bool OAICreateOriginEndpoint_request_authorization::is_cdn_identifier_secret_Set() const{
    return m_cdn_identifier_secret_isSet;
}

bool OAICreateOriginEndpoint_request_authorization::is_cdn_identifier_secret_Valid() const{
    return m_cdn_identifier_secret_isValid;
}

QString OAICreateOriginEndpoint_request_authorization::getSecretsRoleArn() const {
    return m_secrets_role_arn;
}
void OAICreateOriginEndpoint_request_authorization::setSecretsRoleArn(const QString &secrets_role_arn) {
    m_secrets_role_arn = secrets_role_arn;
    m_secrets_role_arn_isSet = true;
}

bool OAICreateOriginEndpoint_request_authorization::is_secrets_role_arn_Set() const{
    return m_secrets_role_arn_isSet;
}

bool OAICreateOriginEndpoint_request_authorization::is_secrets_role_arn_Valid() const{
    return m_secrets_role_arn_isValid;
}

bool OAICreateOriginEndpoint_request_authorization::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_cdn_identifier_secret_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_secrets_role_arn_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAICreateOriginEndpoint_request_authorization::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
