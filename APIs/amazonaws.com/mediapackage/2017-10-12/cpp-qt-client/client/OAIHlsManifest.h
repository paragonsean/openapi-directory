/**
 * AWS Elemental MediaPackage
 * AWS Elemental MediaPackage
 *
 * The version of the OpenAPI document: 2017-10-12
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIHlsManifest.h
 *
 * A HTTP Live Streaming (HLS) manifest configuration.
 */

#ifndef OAIHlsManifest_H
#define OAIHlsManifest_H

#include <QJsonObject>

#include "OAIAdMarkers.h"
#include "OAIAdsOnDeliveryRestrictions.h"
#include "OAIPlaylistType.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIHlsManifest : public OAIObject {
public:
    OAIHlsManifest();
    OAIHlsManifest(QString json);
    ~OAIHlsManifest() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAIAdMarkers getAdMarkers() const;
    void setAdMarkers(const OAIAdMarkers &ad_markers);
    bool is_ad_markers_Set() const;
    bool is_ad_markers_Valid() const;

    QString getId() const;
    void setId(const QString &id);
    bool is_id_Set() const;
    bool is_id_Valid() const;

    bool getIncludeIframeOnlyStream() const;
    void setIncludeIframeOnlyStream(const bool &include_iframe_only_stream);
    bool is_include_iframe_only_stream_Set() const;
    bool is_include_iframe_only_stream_Valid() const;

    QString getManifestName() const;
    void setManifestName(const QString &manifest_name);
    bool is_manifest_name_Set() const;
    bool is_manifest_name_Valid() const;

    OAIPlaylistType getPlaylistType() const;
    void setPlaylistType(const OAIPlaylistType &playlist_type);
    bool is_playlist_type_Set() const;
    bool is_playlist_type_Valid() const;

    qint32 getPlaylistWindowSeconds() const;
    void setPlaylistWindowSeconds(const qint32 &playlist_window_seconds);
    bool is_playlist_window_seconds_Set() const;
    bool is_playlist_window_seconds_Valid() const;

    qint32 getProgramDateTimeIntervalSeconds() const;
    void setProgramDateTimeIntervalSeconds(const qint32 &program_date_time_interval_seconds);
    bool is_program_date_time_interval_seconds_Set() const;
    bool is_program_date_time_interval_seconds_Valid() const;

    QString getUrl() const;
    void setUrl(const QString &url);
    bool is_url_Set() const;
    bool is_url_Valid() const;

    QList getAdTriggers() const;
    void setAdTriggers(const QList &ad_triggers);
    bool is_ad_triggers_Set() const;
    bool is_ad_triggers_Valid() const;

    OAIAdsOnDeliveryRestrictions getAdsOnDeliveryRestrictions() const;
    void setAdsOnDeliveryRestrictions(const OAIAdsOnDeliveryRestrictions &ads_on_delivery_restrictions);
    bool is_ads_on_delivery_restrictions_Set() const;
    bool is_ads_on_delivery_restrictions_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAIAdMarkers m_ad_markers;
    bool m_ad_markers_isSet;
    bool m_ad_markers_isValid;

    QString m_id;
    bool m_id_isSet;
    bool m_id_isValid;

    bool m_include_iframe_only_stream;
    bool m_include_iframe_only_stream_isSet;
    bool m_include_iframe_only_stream_isValid;

    QString m_manifest_name;
    bool m_manifest_name_isSet;
    bool m_manifest_name_isValid;

    OAIPlaylistType m_playlist_type;
    bool m_playlist_type_isSet;
    bool m_playlist_type_isValid;

    qint32 m_playlist_window_seconds;
    bool m_playlist_window_seconds_isSet;
    bool m_playlist_window_seconds_isValid;

    qint32 m_program_date_time_interval_seconds;
    bool m_program_date_time_interval_seconds_isSet;
    bool m_program_date_time_interval_seconds_isValid;

    QString m_url;
    bool m_url_isSet;
    bool m_url_isValid;

    QList m_ad_triggers;
    bool m_ad_triggers_isSet;
    bool m_ad_triggers_isValid;

    OAIAdsOnDeliveryRestrictions m_ads_on_delivery_restrictions;
    bool m_ads_on_delivery_restrictions_isSet;
    bool m_ads_on_delivery_restrictions_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIHlsManifest)

#endif // OAIHlsManifest_H
