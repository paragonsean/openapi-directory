/**
 * AWS Elemental MediaPackage
 * AWS Elemental MediaPackage
 *
 * The version of the OpenAPI document: 2017-10-12
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import CreateHarvestJobRequestS3Destination from './CreateHarvestJobRequestS3Destination';

/**
 * The CreateHarvestJobRequest model module.
 * @module model/CreateHarvestJobRequest
 * @version 2017-10-12
 */
class CreateHarvestJobRequest {
    /**
     * Constructs a new <code>CreateHarvestJobRequest</code>.
     * @alias module:model/CreateHarvestJobRequest
     * @param endTime {String} The end of the time-window which will be harvested 
     * @param id {String} The ID of the HarvestJob. The ID must be unique within the region and it cannot be changed after the HarvestJob is submitted 
     * @param originEndpointId {String} The ID of the OriginEndpoint that the HarvestJob will harvest from. This cannot be changed after the HarvestJob is submitted. 
     * @param s3Destination {module:model/CreateHarvestJobRequestS3Destination} 
     * @param startTime {String} The start of the time-window which will be harvested 
     */
    constructor(endTime, id, originEndpointId, s3Destination, startTime) { 
        
        CreateHarvestJobRequest.initialize(this, endTime, id, originEndpointId, s3Destination, startTime);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, endTime, id, originEndpointId, s3Destination, startTime) { 
        obj['endTime'] = endTime;
        obj['id'] = id;
        obj['originEndpointId'] = originEndpointId;
        obj['s3Destination'] = s3Destination;
        obj['startTime'] = startTime;
    }

    /**
     * Constructs a <code>CreateHarvestJobRequest</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/CreateHarvestJobRequest} obj Optional instance to populate.
     * @return {module:model/CreateHarvestJobRequest} The populated <code>CreateHarvestJobRequest</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new CreateHarvestJobRequest();

            if (data.hasOwnProperty('endTime')) {
                obj['endTime'] = ApiClient.convertToType(data['endTime'], 'String');
            }
            if (data.hasOwnProperty('id')) {
                obj['id'] = ApiClient.convertToType(data['id'], 'String');
            }
            if (data.hasOwnProperty('originEndpointId')) {
                obj['originEndpointId'] = ApiClient.convertToType(data['originEndpointId'], 'String');
            }
            if (data.hasOwnProperty('s3Destination')) {
                obj['s3Destination'] = CreateHarvestJobRequestS3Destination.constructFromObject(data['s3Destination']);
            }
            if (data.hasOwnProperty('startTime')) {
                obj['startTime'] = ApiClient.convertToType(data['startTime'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>CreateHarvestJobRequest</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>CreateHarvestJobRequest</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of CreateHarvestJobRequest.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['endTime'] && !(typeof data['endTime'] === 'string' || data['endTime'] instanceof String)) {
            throw new Error("Expected the field `endTime` to be a primitive type in the JSON string but got " + data['endTime']);
        }
        // ensure the json data is a string
        if (data['id'] && !(typeof data['id'] === 'string' || data['id'] instanceof String)) {
            throw new Error("Expected the field `id` to be a primitive type in the JSON string but got " + data['id']);
        }
        // ensure the json data is a string
        if (data['originEndpointId'] && !(typeof data['originEndpointId'] === 'string' || data['originEndpointId'] instanceof String)) {
            throw new Error("Expected the field `originEndpointId` to be a primitive type in the JSON string but got " + data['originEndpointId']);
        }
        // validate the optional field `s3Destination`
        if (data['s3Destination']) { // data not null
          CreateHarvestJobRequestS3Destination.validateJSON(data['s3Destination']);
        }
        // ensure the json data is a string
        if (data['startTime'] && !(typeof data['startTime'] === 'string' || data['startTime'] instanceof String)) {
            throw new Error("Expected the field `startTime` to be a primitive type in the JSON string but got " + data['startTime']);
        }

        return true;
    }


}

CreateHarvestJobRequest.RequiredProperties = ["endTime", "id", "originEndpointId", "s3Destination", "startTime"];

/**
 * The end of the time-window which will be harvested 
 * @member {String} endTime
 */
CreateHarvestJobRequest.prototype['endTime'] = undefined;

/**
 * The ID of the HarvestJob. The ID must be unique within the region and it cannot be changed after the HarvestJob is submitted 
 * @member {String} id
 */
CreateHarvestJobRequest.prototype['id'] = undefined;

/**
 * The ID of the OriginEndpoint that the HarvestJob will harvest from. This cannot be changed after the HarvestJob is submitted. 
 * @member {String} originEndpointId
 */
CreateHarvestJobRequest.prototype['originEndpointId'] = undefined;

/**
 * @member {module:model/CreateHarvestJobRequestS3Destination} s3Destination
 */
CreateHarvestJobRequest.prototype['s3Destination'] = undefined;

/**
 * The start of the time-window which will be harvested 
 * @member {String} startTime
 */
CreateHarvestJobRequest.prototype['startTime'] = undefined;






export default CreateHarvestJobRequest;

