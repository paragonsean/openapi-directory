/**
 * AWS Elemental MediaPackage
 * AWS Elemental MediaPackage
 *
 * The version of the OpenAPI document: 2017-10-12
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import SpekeKeyProviderEncryptionContractConfiguration from './SpekeKeyProviderEncryptionContractConfiguration';

/**
 * The SpekeKeyProvider model module.
 * @module model/SpekeKeyProvider
 * @version 2017-10-12
 */
class SpekeKeyProvider {
    /**
     * Constructs a new <code>SpekeKeyProvider</code>.
     * A configuration for accessing an external Secure Packager and Encoder Key Exchange (SPEKE) service that will provide encryption keys.
     * @alias module:model/SpekeKeyProvider
     * @param resourceId {String} 
     * @param roleArn {String} 
     * @param systemIds {Array} 
     * @param url {String} 
     */
    constructor(resourceId, roleArn, systemIds, url) { 
        
        SpekeKeyProvider.initialize(this, resourceId, roleArn, systemIds, url);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, resourceId, roleArn, systemIds, url) { 
        obj['ResourceId'] = resourceId;
        obj['RoleArn'] = roleArn;
        obj['SystemIds'] = systemIds;
        obj['Url'] = url;
    }

    /**
     * Constructs a <code>SpekeKeyProvider</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/SpekeKeyProvider} obj Optional instance to populate.
     * @return {module:model/SpekeKeyProvider} The populated <code>SpekeKeyProvider</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new SpekeKeyProvider();

            if (data.hasOwnProperty('CertificateArn')) {
                obj['CertificateArn'] = ApiClient.convertToType(data['CertificateArn'], 'String');
            }
            if (data.hasOwnProperty('EncryptionContractConfiguration')) {
                obj['EncryptionContractConfiguration'] = SpekeKeyProviderEncryptionContractConfiguration.constructFromObject(data['EncryptionContractConfiguration']);
            }
            if (data.hasOwnProperty('ResourceId')) {
                obj['ResourceId'] = ApiClient.convertToType(data['ResourceId'], 'String');
            }
            if (data.hasOwnProperty('RoleArn')) {
                obj['RoleArn'] = ApiClient.convertToType(data['RoleArn'], 'String');
            }
            if (data.hasOwnProperty('SystemIds')) {
                obj['SystemIds'] = ApiClient.convertToType(data['SystemIds'], Array);
            }
            if (data.hasOwnProperty('Url')) {
                obj['Url'] = ApiClient.convertToType(data['Url'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>SpekeKeyProvider</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>SpekeKeyProvider</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of SpekeKeyProvider.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // validate the optional field `CertificateArn`
        if (data['CertificateArn']) { // data not null
          String.validateJSON(data['CertificateArn']);
        }
        // validate the optional field `EncryptionContractConfiguration`
        if (data['EncryptionContractConfiguration']) { // data not null
          SpekeKeyProviderEncryptionContractConfiguration.validateJSON(data['EncryptionContractConfiguration']);
        }
        // validate the optional field `ResourceId`
        if (data['ResourceId']) { // data not null
          String.validateJSON(data['ResourceId']);
        }
        // validate the optional field `RoleArn`
        if (data['RoleArn']) { // data not null
          String.validateJSON(data['RoleArn']);
        }
        // validate the optional field `SystemIds`
        if (data['SystemIds']) { // data not null
          Array.validateJSON(data['SystemIds']);
        }
        // validate the optional field `Url`
        if (data['Url']) { // data not null
          String.validateJSON(data['Url']);
        }

        return true;
    }


}

SpekeKeyProvider.RequiredProperties = ["ResourceId", "RoleArn", "SystemIds", "Url"];

/**
 * @member {String} CertificateArn
 */
SpekeKeyProvider.prototype['CertificateArn'] = undefined;

/**
 * @member {module:model/SpekeKeyProviderEncryptionContractConfiguration} EncryptionContractConfiguration
 */
SpekeKeyProvider.prototype['EncryptionContractConfiguration'] = undefined;

/**
 * @member {String} ResourceId
 */
SpekeKeyProvider.prototype['ResourceId'] = undefined;

/**
 * @member {String} RoleArn
 */
SpekeKeyProvider.prototype['RoleArn'] = undefined;

/**
 * @member {Array} SystemIds
 */
SpekeKeyProvider.prototype['SystemIds'] = undefined;

/**
 * @member {String} Url
 */
SpekeKeyProvider.prototype['Url'] = undefined;






export default SpekeKeyProvider;

