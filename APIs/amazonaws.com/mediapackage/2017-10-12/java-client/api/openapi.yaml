openapi: 3.0.0
info:
  contact:
    email: mike.ralphson@gmail.com
    name: Mike Ralphson
    url: https://github.com/mermade/aws2openapi
    x-twitter: PermittedSoc
  description: AWS Elemental MediaPackage
  license:
    name: Apache 2.0 License
    url: http://www.apache.org/licenses/
  termsOfService: https://aws.amazon.com/service-terms/
  title: AWS Elemental MediaPackage
  version: 2017-10-12
  x-release: v4
  x-logo:
    url: https://twitter.com/awscloud/profile_image?size=original
    backgroundColor: '#FFFFFF'
  x-providerName: amazonaws.com
  x-serviceName: mediapackage
  x-aws-signingName: mediapackage
  x-origin:
  - contentType: application/json
    url: https://raw.githubusercontent.com/aws/aws-sdk-js/master/apis/mediapackage-2017-10-12.normal.json
    converter:
      url: https://github.com/mermade/aws2openapi
      version: 1.0.0
    x-apisguru-driver: external
  x-apiClientRegistration:
    url: https://portal.aws.amazon.com/gp/aws/developer/registration/index.html?nc2=h_ct
  x-apisguru-categories:
  - cloud
  x-preferred: true
externalDocs:
  description: Amazon Web Services documentation
  url: https://docs.aws.amazon.com/mediapackage/
servers:
- description: The MediaPackage multi-region endpoint
  url: "http://mediapackage.{region}.amazonaws.com"
  variables:
    region:
      default: us-east-1
      description: The AWS region
      enum:
      - us-east-1
      - us-east-2
      - us-west-1
      - us-west-2
      - us-gov-west-1
      - us-gov-east-1
      - ca-central-1
      - eu-north-1
      - eu-west-1
      - eu-west-2
      - eu-west-3
      - eu-central-1
      - eu-south-1
      - af-south-1
      - ap-northeast-1
      - ap-northeast-2
      - ap-northeast-3
      - ap-southeast-1
      - ap-southeast-2
      - ap-east-1
      - ap-south-1
      - sa-east-1
      - me-south-1
- description: The MediaPackage multi-region endpoint
  url: "https://mediapackage.{region}.amazonaws.com"
  variables:
    region:
      default: us-east-1
      description: The AWS region
      enum:
      - us-east-1
      - us-east-2
      - us-west-1
      - us-west-2
      - us-gov-west-1
      - us-gov-east-1
      - ca-central-1
      - eu-north-1
      - eu-west-1
      - eu-west-2
      - eu-west-3
      - eu-central-1
      - eu-south-1
      - af-south-1
      - ap-northeast-1
      - ap-northeast-2
      - ap-northeast-3
      - ap-southeast-1
      - ap-southeast-2
      - ap-east-1
      - ap-south-1
      - sa-east-1
      - me-south-1
- description: The MediaPackage endpoint for China (Beijing) and China (Ningxia)
  url: "http://mediapackage.{region}.amazonaws.com.cn"
  variables:
    region:
      default: cn-north-1
      description: The AWS region
      enum:
      - cn-north-1
      - cn-northwest-1
- description: The MediaPackage endpoint for China (Beijing) and China (Ningxia)
  url: "https://mediapackage.{region}.amazonaws.com.cn"
  variables:
    region:
      default: cn-north-1
      description: The AWS region
      enum:
      - cn-north-1
      - cn-northwest-1
security:
- hmac: []
paths:
  /channels/{id}/configure_logs:
    put:
      description: Changes the Channel's properities to configure log subscription
      operationId: ConfigureLogs
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The ID of the channel to log subscription.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ConfigureLogs_request'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConfigureLogsResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnprocessableEntityException'
          description: UnprocessableEntityException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
          description: InternalServerErrorException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
          description: ForbiddenException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
          description: NotFoundException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
          description: ServiceUnavailableException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
          description: TooManyRequestsException
      x-content-type: application/json
      x-accepts:
      - application/json
  /channels:
    get:
      description: Returns a collection of Channels.
      operationId: ListChannels
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: Upper bound on number of records to return.
        explode: true
        in: query
        name: maxResults
        required: false
        schema:
          maximum: 1000
          minimum: 1
          type: integer
        style: form
      - description: A token used to resume pagination from the end of a previous
          request.
        explode: true
        in: query
        name: nextToken
        required: false
        schema:
          type: string
        style: form
      - description: Pagination limit
        explode: true
        in: query
        name: MaxResults
        required: false
        schema:
          type: string
        style: form
      - description: Pagination token
        explode: true
        in: query
        name: NextToken
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListChannelsResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnprocessableEntityException'
          description: UnprocessableEntityException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
          description: InternalServerErrorException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
          description: ForbiddenException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
          description: NotFoundException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
          description: ServiceUnavailableException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
          description: TooManyRequestsException
      x-accepts:
      - application/json
    post:
      description: Creates a new Channel.
      operationId: CreateChannel
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateChannel_request'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateChannelResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnprocessableEntityException'
          description: UnprocessableEntityException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
          description: InternalServerErrorException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
          description: ForbiddenException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
          description: NotFoundException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
          description: ServiceUnavailableException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
          description: TooManyRequestsException
      x-content-type: application/json
      x-accepts:
      - application/json
  /harvest_jobs:
    get:
      description: Returns a collection of HarvestJob records.
      operationId: ListHarvestJobs
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: "When specified, the request will return only HarvestJobs associated\
          \ with the given Channel ID."
        explode: true
        in: query
        name: includeChannelId
        required: false
        schema:
          type: string
        style: form
      - description: "When specified, the request will return only HarvestJobs in\
          \ the given status."
        explode: true
        in: query
        name: includeStatus
        required: false
        schema:
          type: string
        style: form
      - description: The upper bound on the number of records to return.
        explode: true
        in: query
        name: maxResults
        required: false
        schema:
          maximum: 1000
          minimum: 1
          type: integer
        style: form
      - description: A token used to resume pagination from the end of a previous
          request.
        explode: true
        in: query
        name: nextToken
        required: false
        schema:
          type: string
        style: form
      - description: Pagination limit
        explode: true
        in: query
        name: MaxResults
        required: false
        schema:
          type: string
        style: form
      - description: Pagination token
        explode: true
        in: query
        name: NextToken
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListHarvestJobsResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnprocessableEntityException'
          description: UnprocessableEntityException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
          description: InternalServerErrorException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
          description: ForbiddenException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
          description: NotFoundException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
          description: ServiceUnavailableException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
          description: TooManyRequestsException
      x-accepts:
      - application/json
    post:
      description: Creates a new HarvestJob record.
      operationId: CreateHarvestJob
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateHarvestJob_request'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateHarvestJobResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnprocessableEntityException'
          description: UnprocessableEntityException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
          description: InternalServerErrorException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
          description: ForbiddenException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
          description: NotFoundException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
          description: ServiceUnavailableException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
          description: TooManyRequestsException
      x-content-type: application/json
      x-accepts:
      - application/json
  /origin_endpoints:
    get:
      description: Returns a collection of OriginEndpoint records.
      operationId: ListOriginEndpoints
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: "When specified, the request will return only OriginEndpoints\
          \ associated with the given Channel ID."
        explode: true
        in: query
        name: channelId
        required: false
        schema:
          type: string
        style: form
      - description: The upper bound on the number of records to return.
        explode: true
        in: query
        name: maxResults
        required: false
        schema:
          maximum: 1000
          minimum: 1
          type: integer
        style: form
      - description: A token used to resume pagination from the end of a previous
          request.
        explode: true
        in: query
        name: nextToken
        required: false
        schema:
          type: string
        style: form
      - description: Pagination limit
        explode: true
        in: query
        name: MaxResults
        required: false
        schema:
          type: string
        style: form
      - description: Pagination token
        explode: true
        in: query
        name: NextToken
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListOriginEndpointsResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnprocessableEntityException'
          description: UnprocessableEntityException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
          description: InternalServerErrorException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
          description: ForbiddenException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
          description: NotFoundException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
          description: ServiceUnavailableException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
          description: TooManyRequestsException
      x-accepts:
      - application/json
    post:
      description: Creates a new OriginEndpoint record.
      operationId: CreateOriginEndpoint
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateOriginEndpoint_request'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateOriginEndpointResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnprocessableEntityException'
          description: UnprocessableEntityException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
          description: InternalServerErrorException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
          description: ForbiddenException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
          description: NotFoundException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
          description: ServiceUnavailableException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
          description: TooManyRequestsException
      x-content-type: application/json
      x-accepts:
      - application/json
  /channels/{id}:
    delete:
      description: Deletes an existing Channel.
      operationId: DeleteChannel
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The ID of the Channel to delete.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "202":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteChannelResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnprocessableEntityException'
          description: UnprocessableEntityException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
          description: InternalServerErrorException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
          description: ForbiddenException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
          description: NotFoundException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
          description: ServiceUnavailableException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
          description: TooManyRequestsException
      x-accepts:
      - application/json
    get:
      description: Gets details about a Channel.
      operationId: DescribeChannel
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The ID of a Channel.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DescribeChannelResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnprocessableEntityException'
          description: UnprocessableEntityException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
          description: InternalServerErrorException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
          description: ForbiddenException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
          description: NotFoundException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
          description: ServiceUnavailableException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
          description: TooManyRequestsException
      x-accepts:
      - application/json
    put:
      description: Updates an existing Channel.
      operationId: UpdateChannel
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The ID of the Channel to update.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateChannel_request'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateChannelResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnprocessableEntityException'
          description: UnprocessableEntityException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
          description: InternalServerErrorException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
          description: ForbiddenException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
          description: NotFoundException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
          description: ServiceUnavailableException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
          description: TooManyRequestsException
      x-content-type: application/json
      x-accepts:
      - application/json
  /origin_endpoints/{id}:
    delete:
      description: Deletes an existing OriginEndpoint.
      operationId: DeleteOriginEndpoint
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The ID of the OriginEndpoint to delete.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "202":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteOriginEndpointResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnprocessableEntityException'
          description: UnprocessableEntityException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
          description: InternalServerErrorException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
          description: ForbiddenException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
          description: NotFoundException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
          description: ServiceUnavailableException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
          description: TooManyRequestsException
      x-accepts:
      - application/json
    get:
      description: Gets details about an existing OriginEndpoint.
      operationId: DescribeOriginEndpoint
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The ID of the OriginEndpoint.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DescribeOriginEndpointResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnprocessableEntityException'
          description: UnprocessableEntityException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
          description: InternalServerErrorException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
          description: ForbiddenException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
          description: NotFoundException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
          description: ServiceUnavailableException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
          description: TooManyRequestsException
      x-accepts:
      - application/json
    put:
      description: Updates an existing OriginEndpoint.
      operationId: UpdateOriginEndpoint
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The ID of the OriginEndpoint to update.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateOriginEndpoint_request'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateOriginEndpointResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnprocessableEntityException'
          description: UnprocessableEntityException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
          description: InternalServerErrorException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
          description: ForbiddenException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
          description: NotFoundException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
          description: ServiceUnavailableException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
          description: TooManyRequestsException
      x-content-type: application/json
      x-accepts:
      - application/json
  /harvest_jobs/{id}:
    get:
      description: Gets details about an existing HarvestJob.
      operationId: DescribeHarvestJob
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The ID of the HarvestJob.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DescribeHarvestJobResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnprocessableEntityException'
          description: UnprocessableEntityException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
          description: InternalServerErrorException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
          description: ForbiddenException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
          description: NotFoundException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
          description: ServiceUnavailableException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
          description: TooManyRequestsException
      x-accepts:
      - application/json
  /tags/{resource-arn}:
    get:
      description: ""
      operationId: ListTagsForResource
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: ""
        explode: false
        in: path
        name: resource-arn
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListTagsForResourceResponse'
          description: Success
      x-accepts:
      - application/json
    post:
      description: ""
      operationId: TagResource
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: ""
        explode: false
        in: path
        name: resource-arn
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TagResource_request'
        required: true
      responses:
        "204":
          description: Success
      x-content-type: application/json
      x-accepts:
      - application/json
  /channels/{id}/credentials:
    put:
      deprecated: true
      description: Changes the Channel's first IngestEndpoint's username and password.
        WARNING - This API is deprecated. Please use RotateIngestEndpointCredentials
        instead
      operationId: RotateChannelCredentials
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The ID of the channel to update.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RotateChannelCredentialsResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnprocessableEntityException'
          description: UnprocessableEntityException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
          description: InternalServerErrorException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
          description: ForbiddenException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
          description: NotFoundException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
          description: ServiceUnavailableException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
          description: TooManyRequestsException
      x-accepts:
      - application/json
  /channels/{id}/ingest_endpoints/{ingest_endpoint_id}/credentials:
    put:
      description: "Rotate the IngestEndpoint's username and password, as specified\
        \ by the IngestEndpoint's id."
      operationId: RotateIngestEndpointCredentials
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The ID of the channel the IngestEndpoint is on.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - description: The id of the IngestEndpoint whose credentials should be rotated
        explode: false
        in: path
        name: ingest_endpoint_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RotateIngestEndpointCredentialsResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnprocessableEntityException'
          description: UnprocessableEntityException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
          description: InternalServerErrorException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
          description: ForbiddenException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
          description: NotFoundException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
          description: ServiceUnavailableException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
          description: TooManyRequestsException
      x-accepts:
      - application/json
  /tags/{resource-arn}#tagKeys:
    delete:
      description: ""
      operationId: UntagResource
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: ""
        explode: false
        in: path
        name: resource-arn
        required: true
        schema:
          type: string
        style: simple
      - description: The key(s) of tag to be deleted
        explode: true
        in: query
        name: tagKeys
        required: true
        schema:
          items:
            $ref: '#/components/schemas/__string'
          type: array
        style: form
      responses:
        "204":
          description: Success
      x-accepts:
      - application/json
components:
  parameters:
    X-Amz-Content-Sha256:
      explode: false
      in: header
      name: X-Amz-Content-Sha256
      required: false
      schema:
        type: string
      style: simple
    X-Amz-Date:
      explode: false
      in: header
      name: X-Amz-Date
      required: false
      schema:
        type: string
      style: simple
    X-Amz-Algorithm:
      explode: false
      in: header
      name: X-Amz-Algorithm
      required: false
      schema:
        type: string
      style: simple
    X-Amz-Credential:
      explode: false
      in: header
      name: X-Amz-Credential
      required: false
      schema:
        type: string
      style: simple
    X-Amz-Security-Token:
      explode: false
      in: header
      name: X-Amz-Security-Token
      required: false
      schema:
        type: string
      style: simple
    X-Amz-Signature:
      explode: false
      in: header
      name: X-Amz-Signature
      required: false
      schema:
        type: string
      style: simple
    X-Amz-SignedHeaders:
      explode: false
      in: header
      name: X-Amz-SignedHeaders
      required: false
      schema:
        type: string
      style: simple
  schemas:
    ConfigureLogsResponse:
      example:
        Description: ""
        CreatedAt: ""
        IngressAccessLogs:
          LogGroupName: ""
        HlsIngest:
          IngestEndpoints: ""
        EgressAccessLogs:
          LogGroupName: ""
        Id: ""
        Arn: ""
        Tags: ""
      properties:
        Arn:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The Amazon Resource Name (ARN) assigned to the Channel.
            xml:
              name: arn
        CreatedAt:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The date and time the Channel was created.
            xml:
              name: createdAt
        Description:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: A short text description of the Channel.
            xml:
              name: description
        EgressAccessLogs:
          $ref: '#/components/schemas/ConfigureLogsResponse_EgressAccessLogs'
        HlsIngest:
          $ref: '#/components/schemas/ConfigureLogsResponse_HlsIngest'
        Id:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The ID of the Channel.
            xml:
              name: id
        IngressAccessLogs:
          $ref: '#/components/schemas/ConfigureLogsResponse_IngressAccessLogs'
        Tags:
          allOf:
          - $ref: '#/components/schemas/Tags'
          - xml:
              name: tags
      type: object
    __string:
      type: string
    UnprocessableEntityException: {}
    InternalServerErrorException: {}
    ForbiddenException: {}
    NotFoundException: {}
    ServiceUnavailableException: {}
    TooManyRequestsException: {}
    CreateChannelResponse:
      example:
        Description: ""
        CreatedAt: ""
        IngressAccessLogs:
          LogGroupName: ""
        HlsIngest:
          IngestEndpoints: ""
        EgressAccessLogs:
          LogGroupName: ""
        Id: ""
        Arn: ""
        Tags: ""
      properties:
        Arn:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The Amazon Resource Name (ARN) assigned to the Channel.
            xml:
              name: arn
        CreatedAt:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The date and time the Channel was created.
            xml:
              name: createdAt
        Description:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: A short text description of the Channel.
            xml:
              name: description
        EgressAccessLogs:
          $ref: '#/components/schemas/ConfigureLogsResponse_EgressAccessLogs'
        HlsIngest:
          $ref: '#/components/schemas/ConfigureLogsResponse_HlsIngest'
        Id:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The ID of the Channel.
            xml:
              name: id
        IngressAccessLogs:
          $ref: '#/components/schemas/ConfigureLogsResponse_IngressAccessLogs'
        Tags:
          allOf:
          - $ref: '#/components/schemas/Tags'
          - xml:
              name: tags
      type: object
    CreateHarvestJobResponse:
      example:
        S3Destination:
          ManifestKey: ""
          BucketName: ""
          RoleArn: ""
        Status: ""
        EndTime: ""
        CreatedAt: ""
        OriginEndpointId: ""
        StartTime: ""
        Id: ""
        Arn: ""
        ChannelId: ""
      properties:
        Arn:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: |
              The Amazon Resource Name (ARN) assigned to the HarvestJob.
            xml:
              name: arn
        ChannelId:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: |
              The ID of the Channel that the HarvestJob will harvest from.
            xml:
              name: channelId
        CreatedAt:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: |
              The date and time the HarvestJob was submitted.
            xml:
              name: createdAt
        EndTime:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: |
              The end of the time-window which will be harvested.
            xml:
              name: endTime
        Id:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: |
              The ID of the HarvestJob. The ID must be unique within the region
              and it cannot be changed after the HarvestJob is submitted.
            xml:
              name: id
        OriginEndpointId:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: |
              The ID of the OriginEndpoint that the HarvestJob will harvest from.
              This cannot be changed after the HarvestJob is submitted.
            xml:
              name: originEndpointId
        S3Destination:
          $ref: '#/components/schemas/CreateHarvestJobResponse_S3Destination'
        StartTime:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: |
              The start of the time-window which will be harvested.
            xml:
              name: startTime
        Status:
          allOf:
          - $ref: '#/components/schemas/Status'
          - description: |
              The current status of the HarvestJob. Consider setting up a CloudWatch Event to listen for
              HarvestJobs as they succeed or fail. In the event of failure, the CloudWatch Event will
              include an explanation of why the HarvestJob failed.
            xml:
              name: status
      type: object
    CreateOriginEndpointResponse:
      example:
        MssPackage:
          ManifestWindowSeconds: ""
          StreamSelection:
            MinVideoBitsPerSecond: ""
            StreamOrder: ""
            MaxVideoBitsPerSecond: ""
          SegmentDurationSeconds: ""
          Encryption:
            SpekeKeyProvider:
              ResourceId: ""
              SystemIds: ""
              EncryptionContractConfiguration:
                PresetSpeke20Audio: ""
                PresetSpeke20Video: ""
              RoleArn: ""
              Url: ""
              CertificateArn: ""
        Description: ""
        CreatedAt: ""
        ChannelId: ""
        Origination: ""
        TimeDelaySeconds: ""
        Url: ""
        Authorization:
          SecretsRoleArn: ""
          CdnIdentifierSecret: ""
        ManifestName: ""
        CmafPackage:
          SegmentPrefix: ""
          StreamSelection:
            MinVideoBitsPerSecond: ""
            StreamOrder: ""
            MaxVideoBitsPerSecond: ""
          SegmentDurationSeconds: ""
          Encryption:
            KeyRotationIntervalSeconds: ""
            ConstantInitializationVector: ""
            SpekeKeyProvider:
              ResourceId: ""
              SystemIds: ""
              EncryptionContractConfiguration:
                PresetSpeke20Audio: ""
                PresetSpeke20Video: ""
              RoleArn: ""
              Url: ""
              CertificateArn: ""
            EncryptionMethod: ""
          HlsManifests: ""
        Whitelist: ""
        Id: ""
        Arn: ""
        HlsPackage:
          AdsOnDeliveryRestrictions: ""
          AdMarkers: ""
          ProgramDateTimeIntervalSeconds: ""
          StreamSelection:
            MinVideoBitsPerSecond: ""
            StreamOrder: ""
            MaxVideoBitsPerSecond: ""
          PlaylistWindowSeconds: ""
          IncludeIframeOnlyStream: ""
          UseAudioRenditionGroup: ""
          SegmentDurationSeconds: ""
          Encryption:
            KeyRotationIntervalSeconds: ""
            RepeatExtXKey: ""
            ConstantInitializationVector: ""
            SpekeKeyProvider:
              ResourceId: ""
              SystemIds: ""
              EncryptionContractConfiguration:
                PresetSpeke20Audio: ""
                PresetSpeke20Video: ""
              RoleArn: ""
              Url: ""
              CertificateArn: ""
            EncryptionMethod: ""
          AdTriggers: ""
          IncludeDvbSubtitles: ""
          PlaylistType: ""
        DashPackage:
          AdsOnDeliveryRestrictions: ""
          ManifestWindowSeconds: ""
          ManifestLayout: ""
          StreamSelection:
            MinVideoBitsPerSecond: ""
            StreamOrder: ""
            MaxVideoBitsPerSecond: ""
          IncludeIframeOnlyStream: ""
          Encryption:
            KeyRotationIntervalSeconds: ""
            SpekeKeyProvider:
              ResourceId: ""
              SystemIds: ""
              EncryptionContractConfiguration:
                PresetSpeke20Audio: ""
                PresetSpeke20Video: ""
              RoleArn: ""
              Url: ""
              CertificateArn: ""
          SegmentTemplateFormat: ""
          AdTriggers: ""
          Profile: ""
          PeriodTriggers: ""
          SuggestedPresentationDelaySeconds: ""
          UtcTiming: ""
          MinBufferTimeSeconds: ""
          SegmentDurationSeconds: ""
          MinUpdatePeriodSeconds: ""
          UtcTimingUri: ""
        Tags: ""
        StartoverWindowSeconds: ""
      properties:
        Arn:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The Amazon Resource Name (ARN) assigned to the OriginEndpoint.
            xml:
              name: arn
        Authorization:
          $ref: '#/components/schemas/CreateOriginEndpointResponse_Authorization'
        ChannelId:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The ID of the Channel the OriginEndpoint is associated with.
            xml:
              name: channelId
        CmafPackage:
          $ref: '#/components/schemas/CreateOriginEndpointResponse_CmafPackage'
        CreatedAt:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The date and time the OriginEndpoint was created.
            xml:
              name: createdAt
        DashPackage:
          $ref: '#/components/schemas/CreateOriginEndpointResponse_DashPackage'
        Description:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: A short text description of the OriginEndpoint.
            xml:
              name: description
        HlsPackage:
          $ref: '#/components/schemas/CreateOriginEndpointResponse_HlsPackage'
        Id:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The ID of the OriginEndpoint.
            xml:
              name: id
        ManifestName:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: A short string appended to the end of the OriginEndpoint
              URL.
            xml:
              name: manifestName
        MssPackage:
          $ref: '#/components/schemas/CreateOriginEndpointResponse_MssPackage'
        Origination:
          allOf:
          - $ref: '#/components/schemas/Origination'
          - description: |
              Control whether origination of video is allowed for this OriginEndpoint. If set to ALLOW, the OriginEndpoint
              may by requested, pursuant to any other form of access control. If set to DENY, the OriginEndpoint may not be
              requested. This can be helpful for Live to VOD harvesting, or for temporarily disabling origination
            xml:
              name: origination
        StartoverWindowSeconds:
          allOf:
          - $ref: '#/components/schemas/__integer'
          - description: |
              Maximum duration (seconds) of content to retain for startover playback.
              If not specified, startover playback will be disabled for the OriginEndpoint.
            xml:
              name: startoverWindowSeconds
        Tags:
          allOf:
          - $ref: '#/components/schemas/Tags'
          - xml:
              name: tags
        TimeDelaySeconds:
          allOf:
          - $ref: '#/components/schemas/__integer'
          - description: |
              Amount of delay (seconds) to enforce on the playback of live content.
              If not specified, there will be no time delay in effect for the OriginEndpoint.
            xml:
              name: timeDelaySeconds
        Url:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The URL of the packaged OriginEndpoint for consumption.
            xml:
              name: url
        Whitelist:
          allOf:
          - $ref: '#/components/schemas/__listOf__string'
          - description: A list of source IP CIDR blocks that will be allowed to access
              the OriginEndpoint.
            xml:
              name: whitelist
      type: object
    CmafEncryption:
      description: A Common Media Application Format (CMAF) encryption configuration.
      properties:
        ConstantInitializationVector:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: "An optional 128-bit, 16-byte hex value represented by a\
              \ 32-character string, used in conjunction with the key for encrypting\
              \ blocks. If you don't specify a value, then MediaPackage creates the\
              \ constant initialization vector (IV)."
            xml:
              name: constantInitializationVector
        EncryptionMethod:
          allOf:
          - $ref: '#/components/schemas/CmafEncryptionMethod'
          - xml:
              name: encryptionMethod
        KeyRotationIntervalSeconds:
          allOf:
          - $ref: '#/components/schemas/__integer'
          - description: Time (in seconds) between each encryption key rotation.
            xml:
              name: keyRotationIntervalSeconds
        SpekeKeyProvider:
          $ref: '#/components/schemas/CmafEncryption_SpekeKeyProvider'
      required:
      - SpekeKeyProvider
      type: object
    __listOfHlsManifestCreateOrUpdateParameters:
      items:
        $ref: '#/components/schemas/HlsManifestCreateOrUpdateParameters'
      type: array
    __integer:
      type: integer
    StreamSelection:
      description: A StreamSelection configuration.
      properties:
        MaxVideoBitsPerSecond:
          allOf:
          - $ref: '#/components/schemas/__integer'
          - description: The maximum video bitrate (bps) to include in output.
            xml:
              name: maxVideoBitsPerSecond
        MinVideoBitsPerSecond:
          allOf:
          - $ref: '#/components/schemas/__integer'
          - description: The minimum video bitrate (bps) to include in output.
            xml:
              name: minVideoBitsPerSecond
        StreamOrder:
          allOf:
          - $ref: '#/components/schemas/StreamOrder'
          - description: A directive that determines the order of streams in the output.
            xml:
              name: streamOrder
      type: object
    AdTriggers:
      description: |
        A list of SCTE-35 message types that are treated as ad markers in the output.  If empty, no
        ad markers are output.  Specify multiple items to create ad markers for all of the included
        message types.
      items:
        $ref: '#/components/schemas/__AdTriggersElement'
      type: array
    AdsOnDeliveryRestrictions:
      description: |
        This setting allows the delivery restriction flags on SCTE-35 segmentation descriptors to
        determine whether a message signals an ad.  Choosing "NONE" means no SCTE-35 messages become
        ads.  Choosing "RESTRICTED" means SCTE-35 messages of the types specified in AdTriggers that
        contain delivery restrictions will be treated as ads.  Choosing "UNRESTRICTED" means SCTE-35
        messages of the types specified in AdTriggers that do not contain delivery restrictions will
        be treated as ads.  Choosing "BOTH" means all SCTE-35 messages of the types specified in
        AdTriggers will be treated as ads.  Note that Splice Insert messages do not have these flags
        and are always treated as ads if specified in AdTriggers.
      enum:
      - NONE
      - RESTRICTED
      - UNRESTRICTED
      - BOTH
      type: string
    DashEncryption:
      description: A Dynamic Adaptive Streaming over HTTP (DASH) encryption configuration.
      properties:
        KeyRotationIntervalSeconds:
          allOf:
          - $ref: '#/components/schemas/__integer'
          - description: Time (in seconds) between each encryption key rotation.
            xml:
              name: keyRotationIntervalSeconds
        SpekeKeyProvider:
          $ref: '#/components/schemas/CmafEncryption_SpekeKeyProvider'
      required:
      - SpekeKeyProvider
      type: object
    __boolean:
      type: boolean
    ManifestLayout:
      enum:
      - FULL
      - COMPACT
      type: string
    __listOf__PeriodTriggersElement:
      items:
        $ref: '#/components/schemas/__PeriodTriggersElement'
      type: array
    Profile:
      enum:
      - NONE
      - HBBTV_1_5
      - HYBRIDCAST
      - DVB_DASH_2014
      type: string
    SegmentTemplateFormat:
      enum:
      - NUMBER_WITH_TIMELINE
      - TIME_WITH_TIMELINE
      - NUMBER_WITH_DURATION
      type: string
    UtcTiming:
      enum:
      - NONE
      - HTTP-HEAD
      - HTTP-ISO
      - HTTP-XSDATE
      type: string
    AdMarkers:
      enum:
      - NONE
      - SCTE35_ENHANCED
      - PASSTHROUGH
      - DATERANGE
      type: string
    HlsEncryption:
      description: An HTTP Live Streaming (HLS) encryption configuration.
      properties:
        ConstantInitializationVector:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: |
              A constant initialization vector for encryption (optional).
              When not specified the initialization vector will be periodically rotated.
            xml:
              name: constantInitializationVector
        EncryptionMethod:
          allOf:
          - $ref: '#/components/schemas/EncryptionMethod'
          - description: The encryption method to use.
            xml:
              name: encryptionMethod
        KeyRotationIntervalSeconds:
          allOf:
          - $ref: '#/components/schemas/__integer'
          - description: Interval (in seconds) between each encryption key rotation.
            xml:
              name: keyRotationIntervalSeconds
        RepeatExtXKey:
          allOf:
          - $ref: '#/components/schemas/__boolean'
          - description: "When enabled, the EXT-X-KEY tag will be repeated in output\
              \ manifests."
            xml:
              name: repeatExtXKey
        SpekeKeyProvider:
          $ref: '#/components/schemas/CmafEncryption_SpekeKeyProvider'
      required:
      - SpekeKeyProvider
      type: object
    PlaylistType:
      enum:
      - NONE
      - EVENT
      - VOD
      type: string
    MssEncryption:
      description: A Microsoft Smooth Streaming (MSS) encryption configuration.
      properties:
        SpekeKeyProvider:
          $ref: '#/components/schemas/CmafEncryption_SpekeKeyProvider'
      required:
      - SpekeKeyProvider
      type: object
    DeleteChannelResponse:
      properties: {}
      type: object
    DeleteOriginEndpointResponse:
      properties: {}
      type: object
    DescribeChannelResponse:
      example:
        Description: ""
        CreatedAt: ""
        IngressAccessLogs:
          LogGroupName: ""
        HlsIngest:
          IngestEndpoints: ""
        EgressAccessLogs:
          LogGroupName: ""
        Id: ""
        Arn: ""
        Tags: ""
      properties:
        Arn:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The Amazon Resource Name (ARN) assigned to the Channel.
            xml:
              name: arn
        CreatedAt:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The date and time the Channel was created.
            xml:
              name: createdAt
        Description:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: A short text description of the Channel.
            xml:
              name: description
        EgressAccessLogs:
          $ref: '#/components/schemas/ConfigureLogsResponse_EgressAccessLogs'
        HlsIngest:
          $ref: '#/components/schemas/ConfigureLogsResponse_HlsIngest'
        Id:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The ID of the Channel.
            xml:
              name: id
        IngressAccessLogs:
          $ref: '#/components/schemas/ConfigureLogsResponse_IngressAccessLogs'
        Tags:
          allOf:
          - $ref: '#/components/schemas/Tags'
          - xml:
              name: tags
      type: object
    DescribeHarvestJobResponse:
      example:
        S3Destination:
          ManifestKey: ""
          BucketName: ""
          RoleArn: ""
        Status: ""
        EndTime: ""
        CreatedAt: ""
        OriginEndpointId: ""
        StartTime: ""
        Id: ""
        Arn: ""
        ChannelId: ""
      properties:
        Arn:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: |
              The Amazon Resource Name (ARN) assigned to the HarvestJob.
            xml:
              name: arn
        ChannelId:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: |
              The ID of the Channel that the HarvestJob will harvest from.
            xml:
              name: channelId
        CreatedAt:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: |
              The date and time the HarvestJob was submitted.
            xml:
              name: createdAt
        EndTime:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: |
              The end of the time-window which will be harvested.
            xml:
              name: endTime
        Id:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: |
              The ID of the HarvestJob. The ID must be unique within the region
              and it cannot be changed after the HarvestJob is submitted.
            xml:
              name: id
        OriginEndpointId:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: |
              The ID of the OriginEndpoint that the HarvestJob will harvest from.
              This cannot be changed after the HarvestJob is submitted.
            xml:
              name: originEndpointId
        S3Destination:
          $ref: '#/components/schemas/CreateHarvestJobResponse_S3Destination'
        StartTime:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: |
              The start of the time-window which will be harvested.
            xml:
              name: startTime
        Status:
          allOf:
          - $ref: '#/components/schemas/Status'
          - description: |
              The current status of the HarvestJob. Consider setting up a CloudWatch Event to listen for
              HarvestJobs as they succeed or fail. In the event of failure, the CloudWatch Event will
              include an explanation of why the HarvestJob failed.
            xml:
              name: status
      type: object
    DescribeOriginEndpointResponse:
      example:
        MssPackage:
          ManifestWindowSeconds: ""
          StreamSelection:
            MinVideoBitsPerSecond: ""
            StreamOrder: ""
            MaxVideoBitsPerSecond: ""
          SegmentDurationSeconds: ""
          Encryption:
            SpekeKeyProvider:
              ResourceId: ""
              SystemIds: ""
              EncryptionContractConfiguration:
                PresetSpeke20Audio: ""
                PresetSpeke20Video: ""
              RoleArn: ""
              Url: ""
              CertificateArn: ""
        Description: ""
        CreatedAt: ""
        ChannelId: ""
        Origination: ""
        TimeDelaySeconds: ""
        Url: ""
        Authorization:
          SecretsRoleArn: ""
          CdnIdentifierSecret: ""
        ManifestName: ""
        CmafPackage:
          SegmentPrefix: ""
          StreamSelection:
            MinVideoBitsPerSecond: ""
            StreamOrder: ""
            MaxVideoBitsPerSecond: ""
          SegmentDurationSeconds: ""
          Encryption:
            KeyRotationIntervalSeconds: ""
            ConstantInitializationVector: ""
            SpekeKeyProvider:
              ResourceId: ""
              SystemIds: ""
              EncryptionContractConfiguration:
                PresetSpeke20Audio: ""
                PresetSpeke20Video: ""
              RoleArn: ""
              Url: ""
              CertificateArn: ""
            EncryptionMethod: ""
          HlsManifests: ""
        Whitelist: ""
        Id: ""
        Arn: ""
        HlsPackage:
          AdsOnDeliveryRestrictions: ""
          AdMarkers: ""
          ProgramDateTimeIntervalSeconds: ""
          StreamSelection:
            MinVideoBitsPerSecond: ""
            StreamOrder: ""
            MaxVideoBitsPerSecond: ""
          PlaylistWindowSeconds: ""
          IncludeIframeOnlyStream: ""
          UseAudioRenditionGroup: ""
          SegmentDurationSeconds: ""
          Encryption:
            KeyRotationIntervalSeconds: ""
            RepeatExtXKey: ""
            ConstantInitializationVector: ""
            SpekeKeyProvider:
              ResourceId: ""
              SystemIds: ""
              EncryptionContractConfiguration:
                PresetSpeke20Audio: ""
                PresetSpeke20Video: ""
              RoleArn: ""
              Url: ""
              CertificateArn: ""
            EncryptionMethod: ""
          AdTriggers: ""
          IncludeDvbSubtitles: ""
          PlaylistType: ""
        DashPackage:
          AdsOnDeliveryRestrictions: ""
          ManifestWindowSeconds: ""
          ManifestLayout: ""
          StreamSelection:
            MinVideoBitsPerSecond: ""
            StreamOrder: ""
            MaxVideoBitsPerSecond: ""
          IncludeIframeOnlyStream: ""
          Encryption:
            KeyRotationIntervalSeconds: ""
            SpekeKeyProvider:
              ResourceId: ""
              SystemIds: ""
              EncryptionContractConfiguration:
                PresetSpeke20Audio: ""
                PresetSpeke20Video: ""
              RoleArn: ""
              Url: ""
              CertificateArn: ""
          SegmentTemplateFormat: ""
          AdTriggers: ""
          Profile: ""
          PeriodTriggers: ""
          SuggestedPresentationDelaySeconds: ""
          UtcTiming: ""
          MinBufferTimeSeconds: ""
          SegmentDurationSeconds: ""
          MinUpdatePeriodSeconds: ""
          UtcTimingUri: ""
        Tags: ""
        StartoverWindowSeconds: ""
      properties:
        Arn:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The Amazon Resource Name (ARN) assigned to the OriginEndpoint.
            xml:
              name: arn
        Authorization:
          $ref: '#/components/schemas/CreateOriginEndpointResponse_Authorization'
        ChannelId:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The ID of the Channel the OriginEndpoint is associated with.
            xml:
              name: channelId
        CmafPackage:
          $ref: '#/components/schemas/CreateOriginEndpointResponse_CmafPackage'
        CreatedAt:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The date and time the OriginEndpoint was created.
            xml:
              name: createdAt
        DashPackage:
          $ref: '#/components/schemas/CreateOriginEndpointResponse_DashPackage'
        Description:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: A short text description of the OriginEndpoint.
            xml:
              name: description
        HlsPackage:
          $ref: '#/components/schemas/CreateOriginEndpointResponse_HlsPackage'
        Id:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The ID of the OriginEndpoint.
            xml:
              name: id
        ManifestName:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: A short string appended to the end of the OriginEndpoint
              URL.
            xml:
              name: manifestName
        MssPackage:
          $ref: '#/components/schemas/CreateOriginEndpointResponse_MssPackage'
        Origination:
          allOf:
          - $ref: '#/components/schemas/Origination'
          - description: |
              Control whether origination of video is allowed for this OriginEndpoint. If set to ALLOW, the OriginEndpoint
              may by requested, pursuant to any other form of access control. If set to DENY, the OriginEndpoint may not be
              requested. This can be helpful for Live to VOD harvesting, or for temporarily disabling origination
            xml:
              name: origination
        StartoverWindowSeconds:
          allOf:
          - $ref: '#/components/schemas/__integer'
          - description: |
              Maximum duration (seconds) of content to retain for startover playback.
              If not specified, startover playback will be disabled for the OriginEndpoint.
            xml:
              name: startoverWindowSeconds
        Tags:
          allOf:
          - $ref: '#/components/schemas/Tags'
          - xml:
              name: tags
        TimeDelaySeconds:
          allOf:
          - $ref: '#/components/schemas/__integer'
          - description: |
              Amount of delay (seconds) to enforce on the playback of live content.
              If not specified, there will be no time delay in effect for the OriginEndpoint.
            xml:
              name: timeDelaySeconds
        Url:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The URL of the packaged OriginEndpoint for consumption.
            xml:
              name: url
        Whitelist:
          allOf:
          - $ref: '#/components/schemas/__listOf__string'
          - description: A list of source IP CIDR blocks that will be allowed to access
              the OriginEndpoint.
            xml:
              name: whitelist
      type: object
    ListChannelsResponse:
      example:
        NextToken: ""
        Channels: ""
      properties:
        Channels:
          allOf:
          - $ref: '#/components/schemas/__listOfChannel'
          - description: A list of Channel records.
            xml:
              name: channels
        NextToken:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: A token that can be used to resume pagination from the end
              of the collection.
            xml:
              name: nextToken
      type: object
    ListHarvestJobsResponse:
      example:
        NextToken: ""
        HarvestJobs: ""
      properties:
        HarvestJobs:
          allOf:
          - $ref: '#/components/schemas/__listOfHarvestJob'
          - description: A list of HarvestJob records.
            xml:
              name: harvestJobs
        NextToken:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: A token that can be used to resume pagination from the end
              of the collection.
            xml:
              name: nextToken
      type: object
    ListOriginEndpointsResponse:
      example:
        OriginEndpoints: ""
        NextToken: ""
      properties:
        NextToken:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: A token that can be used to resume pagination from the end
              of the collection.
            xml:
              name: nextToken
        OriginEndpoints:
          allOf:
          - $ref: '#/components/schemas/__listOfOriginEndpoint'
          - description: A list of OriginEndpoint records.
            xml:
              name: originEndpoints
      type: object
    ListTagsForResourceResponse:
      example:
        Tags: ""
      properties:
        Tags:
          allOf:
          - $ref: '#/components/schemas/__mapOf__string'
          - xml:
              name: tags
      type: object
    RotateChannelCredentialsResponse:
      deprecated: true
      example:
        Description: ""
        CreatedAt: ""
        IngressAccessLogs:
          LogGroupName: ""
        HlsIngest:
          IngestEndpoints: ""
        EgressAccessLogs:
          LogGroupName: ""
        Id: ""
        Arn: ""
        Tags: ""
      properties:
        Arn:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The Amazon Resource Name (ARN) assigned to the Channel.
            xml:
              name: arn
        CreatedAt:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The date and time the Channel was created.
            xml:
              name: createdAt
        Description:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: A short text description of the Channel.
            xml:
              name: description
        EgressAccessLogs:
          $ref: '#/components/schemas/ConfigureLogsResponse_EgressAccessLogs'
        HlsIngest:
          $ref: '#/components/schemas/ConfigureLogsResponse_HlsIngest'
        Id:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The ID of the Channel.
            xml:
              name: id
        IngressAccessLogs:
          $ref: '#/components/schemas/ConfigureLogsResponse_IngressAccessLogs'
        Tags:
          allOf:
          - $ref: '#/components/schemas/Tags'
          - xml:
              name: tags
      type: object
    RotateIngestEndpointCredentialsResponse:
      example:
        Description: ""
        CreatedAt: ""
        IngressAccessLogs:
          LogGroupName: ""
        HlsIngest:
          IngestEndpoints: ""
        EgressAccessLogs:
          LogGroupName: ""
        Id: ""
        Arn: ""
        Tags: ""
      properties:
        Arn:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The Amazon Resource Name (ARN) assigned to the Channel.
            xml:
              name: arn
        CreatedAt:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The date and time the Channel was created.
            xml:
              name: createdAt
        Description:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: A short text description of the Channel.
            xml:
              name: description
        EgressAccessLogs:
          $ref: '#/components/schemas/ConfigureLogsResponse_EgressAccessLogs'
        HlsIngest:
          $ref: '#/components/schemas/ConfigureLogsResponse_HlsIngest'
        Id:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The ID of the Channel.
            xml:
              name: id
        IngressAccessLogs:
          $ref: '#/components/schemas/ConfigureLogsResponse_IngressAccessLogs'
        Tags:
          allOf:
          - $ref: '#/components/schemas/Tags'
          - xml:
              name: tags
      type: object
    UpdateChannelResponse:
      example:
        Description: ""
        CreatedAt: ""
        IngressAccessLogs:
          LogGroupName: ""
        HlsIngest:
          IngestEndpoints: ""
        EgressAccessLogs:
          LogGroupName: ""
        Id: ""
        Arn: ""
        Tags: ""
      properties:
        Arn:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The Amazon Resource Name (ARN) assigned to the Channel.
            xml:
              name: arn
        CreatedAt:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The date and time the Channel was created.
            xml:
              name: createdAt
        Description:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: A short text description of the Channel.
            xml:
              name: description
        EgressAccessLogs:
          $ref: '#/components/schemas/ConfigureLogsResponse_EgressAccessLogs'
        HlsIngest:
          $ref: '#/components/schemas/ConfigureLogsResponse_HlsIngest'
        Id:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The ID of the Channel.
            xml:
              name: id
        IngressAccessLogs:
          $ref: '#/components/schemas/ConfigureLogsResponse_IngressAccessLogs'
        Tags:
          allOf:
          - $ref: '#/components/schemas/Tags'
          - xml:
              name: tags
      type: object
    UpdateOriginEndpointResponse:
      example:
        MssPackage:
          ManifestWindowSeconds: ""
          StreamSelection:
            MinVideoBitsPerSecond: ""
            StreamOrder: ""
            MaxVideoBitsPerSecond: ""
          SegmentDurationSeconds: ""
          Encryption:
            SpekeKeyProvider:
              ResourceId: ""
              SystemIds: ""
              EncryptionContractConfiguration:
                PresetSpeke20Audio: ""
                PresetSpeke20Video: ""
              RoleArn: ""
              Url: ""
              CertificateArn: ""
        Description: ""
        CreatedAt: ""
        ChannelId: ""
        Origination: ""
        TimeDelaySeconds: ""
        Url: ""
        Authorization:
          SecretsRoleArn: ""
          CdnIdentifierSecret: ""
        ManifestName: ""
        CmafPackage:
          SegmentPrefix: ""
          StreamSelection:
            MinVideoBitsPerSecond: ""
            StreamOrder: ""
            MaxVideoBitsPerSecond: ""
          SegmentDurationSeconds: ""
          Encryption:
            KeyRotationIntervalSeconds: ""
            ConstantInitializationVector: ""
            SpekeKeyProvider:
              ResourceId: ""
              SystemIds: ""
              EncryptionContractConfiguration:
                PresetSpeke20Audio: ""
                PresetSpeke20Video: ""
              RoleArn: ""
              Url: ""
              CertificateArn: ""
            EncryptionMethod: ""
          HlsManifests: ""
        Whitelist: ""
        Id: ""
        Arn: ""
        HlsPackage:
          AdsOnDeliveryRestrictions: ""
          AdMarkers: ""
          ProgramDateTimeIntervalSeconds: ""
          StreamSelection:
            MinVideoBitsPerSecond: ""
            StreamOrder: ""
            MaxVideoBitsPerSecond: ""
          PlaylistWindowSeconds: ""
          IncludeIframeOnlyStream: ""
          UseAudioRenditionGroup: ""
          SegmentDurationSeconds: ""
          Encryption:
            KeyRotationIntervalSeconds: ""
            RepeatExtXKey: ""
            ConstantInitializationVector: ""
            SpekeKeyProvider:
              ResourceId: ""
              SystemIds: ""
              EncryptionContractConfiguration:
                PresetSpeke20Audio: ""
                PresetSpeke20Video: ""
              RoleArn: ""
              Url: ""
              CertificateArn: ""
            EncryptionMethod: ""
          AdTriggers: ""
          IncludeDvbSubtitles: ""
          PlaylistType: ""
        DashPackage:
          AdsOnDeliveryRestrictions: ""
          ManifestWindowSeconds: ""
          ManifestLayout: ""
          StreamSelection:
            MinVideoBitsPerSecond: ""
            StreamOrder: ""
            MaxVideoBitsPerSecond: ""
          IncludeIframeOnlyStream: ""
          Encryption:
            KeyRotationIntervalSeconds: ""
            SpekeKeyProvider:
              ResourceId: ""
              SystemIds: ""
              EncryptionContractConfiguration:
                PresetSpeke20Audio: ""
                PresetSpeke20Video: ""
              RoleArn: ""
              Url: ""
              CertificateArn: ""
          SegmentTemplateFormat: ""
          AdTriggers: ""
          Profile: ""
          PeriodTriggers: ""
          SuggestedPresentationDelaySeconds: ""
          UtcTiming: ""
          MinBufferTimeSeconds: ""
          SegmentDurationSeconds: ""
          MinUpdatePeriodSeconds: ""
          UtcTimingUri: ""
        Tags: ""
        StartoverWindowSeconds: ""
      properties:
        Arn:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The Amazon Resource Name (ARN) assigned to the OriginEndpoint.
            xml:
              name: arn
        Authorization:
          $ref: '#/components/schemas/CreateOriginEndpointResponse_Authorization'
        ChannelId:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The ID of the Channel the OriginEndpoint is associated with.
            xml:
              name: channelId
        CmafPackage:
          $ref: '#/components/schemas/CreateOriginEndpointResponse_CmafPackage'
        CreatedAt:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The date and time the OriginEndpoint was created.
            xml:
              name: createdAt
        DashPackage:
          $ref: '#/components/schemas/CreateOriginEndpointResponse_DashPackage'
        Description:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: A short text description of the OriginEndpoint.
            xml:
              name: description
        HlsPackage:
          $ref: '#/components/schemas/CreateOriginEndpointResponse_HlsPackage'
        Id:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The ID of the OriginEndpoint.
            xml:
              name: id
        ManifestName:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: A short string appended to the end of the OriginEndpoint
              URL.
            xml:
              name: manifestName
        MssPackage:
          $ref: '#/components/schemas/CreateOriginEndpointResponse_MssPackage'
        Origination:
          allOf:
          - $ref: '#/components/schemas/Origination'
          - description: |
              Control whether origination of video is allowed for this OriginEndpoint. If set to ALLOW, the OriginEndpoint
              may by requested, pursuant to any other form of access control. If set to DENY, the OriginEndpoint may not be
              requested. This can be helpful for Live to VOD harvesting, or for temporarily disabling origination
            xml:
              name: origination
        StartoverWindowSeconds:
          allOf:
          - $ref: '#/components/schemas/__integer'
          - description: |
              Maximum duration (seconds) of content to retain for startover playback.
              If not specified, startover playback will be disabled for the OriginEndpoint.
            xml:
              name: startoverWindowSeconds
        Tags:
          allOf:
          - $ref: '#/components/schemas/Tags'
          - xml:
              name: tags
        TimeDelaySeconds:
          allOf:
          - $ref: '#/components/schemas/__integer'
          - description: |
              Amount of delay (seconds) to enforce on the playback of live content.
              If not specified, there will be no time delay in effect for the OriginEndpoint.
            xml:
              name: timeDelaySeconds
        Url:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The URL of the packaged OriginEndpoint for consumption.
            xml:
              name: url
        Whitelist:
          allOf:
          - $ref: '#/components/schemas/__listOf__string'
          - description: A list of source IP CIDR blocks that will be allowed to access
              the OriginEndpoint.
            xml:
              name: whitelist
      type: object
    __AdTriggersElement:
      enum:
      - SPLICE_INSERT
      - BREAK
      - PROVIDER_ADVERTISEMENT
      - DISTRIBUTOR_ADVERTISEMENT
      - PROVIDER_PLACEMENT_OPPORTUNITY
      - DISTRIBUTOR_PLACEMENT_OPPORTUNITY
      - PROVIDER_OVERLAY_PLACEMENT_OPPORTUNITY
      - DISTRIBUTOR_OVERLAY_PLACEMENT_OPPORTUNITY
      type: string
    Authorization:
      description: CDN Authorization credentials
      properties:
        CdnIdentifierSecret:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: |
              The Amazon Resource Name (ARN) for the secret in Secrets Manager that your Content Distribution Network (CDN) uses for authorization to access your endpoint.
            xml:
              name: cdnIdentifierSecret
        SecretsRoleArn:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: |
              The Amazon Resource Name (ARN) for the IAM role that allows MediaPackage to communicate with AWS Secrets Manager.
            xml:
              name: secretsRoleArn
      required:
      - CdnIdentifierSecret
      - SecretsRoleArn
      type: object
    EgressAccessLogs:
      description: Configure egress access logging.
      properties:
        LogGroupName:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: Customize the log group name.
            xml:
              name: logGroupName
      type: object
    HlsIngest:
      description: An HTTP Live Streaming (HLS) ingest resource configuration.
      properties:
        IngestEndpoints:
          allOf:
          - $ref: '#/components/schemas/__listOfIngestEndpoint'
          - description: A list of endpoints to which the source stream should be
              sent.
            xml:
              name: ingestEndpoints
      type: object
    IngressAccessLogs:
      description: Configure ingress access logging.
      properties:
        LogGroupName:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: Customize the log group name.
            xml:
              name: logGroupName
      type: object
    Tags:
      additionalProperties:
        $ref: '#/components/schemas/__string'
      description: A collection of tags associated with a resource
      type: object
    Channel:
      description: A Channel resource configuration.
      properties:
        Arn:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The Amazon Resource Name (ARN) assigned to the Channel.
            xml:
              name: arn
        CreatedAt:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The date and time the Channel was created.
            xml:
              name: createdAt
        Description:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: A short text description of the Channel.
            xml:
              name: description
        EgressAccessLogs:
          $ref: '#/components/schemas/ConfigureLogsResponse_EgressAccessLogs'
        HlsIngest:
          $ref: '#/components/schemas/ConfigureLogsResponse_HlsIngest'
        Id:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The ID of the Channel.
            xml:
              name: id
        IngressAccessLogs:
          $ref: '#/components/schemas/ConfigureLogsResponse_IngressAccessLogs'
        Tags:
          allOf:
          - $ref: '#/components/schemas/Tags'
          - xml:
              name: tags
      type: object
    CmafEncryptionMethod:
      description: The encryption method to use.
      enum:
      - SAMPLE_AES
      - AES_CTR
      type: string
    SpekeKeyProvider:
      description: A configuration for accessing an external Secure Packager and Encoder
        Key Exchange (SPEKE) service that will provide encryption keys.
      properties:
        CertificateArn:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: |
              An Amazon Resource Name (ARN) of a Certificate Manager certificate
              that MediaPackage will use for enforcing secure end-to-end data
              transfer with the key provider service.
            xml:
              name: certificateArn
        EncryptionContractConfiguration:
          $ref: '#/components/schemas/SpekeKeyProvider_EncryptionContractConfiguration'
        ResourceId:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The resource ID to include in key requests.
            xml:
              name: resourceId
        RoleArn:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: |
              An Amazon Resource Name (ARN) of an IAM role that AWS Elemental
              MediaPackage will assume when accessing the key provider service.
            xml:
              name: roleArn
        SystemIds:
          allOf:
          - $ref: '#/components/schemas/__listOf__string'
          - description: The system IDs to include in key requests.
            xml:
              name: systemIds
        Url:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The URL of the external key provider service.
            xml:
              name: url
      required:
      - ResourceId
      - RoleArn
      - SystemIds
      - Url
      type: object
    __listOfHlsManifest:
      items:
        $ref: '#/components/schemas/HlsManifest'
      type: array
    CmafPackage:
      description: A Common Media Application Format (CMAF) packaging configuration.
      properties:
        Encryption:
          $ref: '#/components/schemas/CreateOriginEndpoint_request_cmafPackage_Encryption'
        HlsManifests:
          allOf:
          - $ref: '#/components/schemas/__listOfHlsManifest'
          - description: A list of HLS manifest configurations
            xml:
              name: hlsManifests
        SegmentDurationSeconds:
          allOf:
          - $ref: '#/components/schemas/__integer'
          - description: |
              Duration (in seconds) of each segment. Actual segments will be
              rounded to the nearest multiple of the source segment duration.
            xml:
              name: segmentDurationSeconds
        SegmentPrefix:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: "An optional custom string that is prepended to the name\
              \ of each segment. If not specified, it defaults to the ChannelId."
            xml:
              name: segmentPrefix
        StreamSelection:
          $ref: '#/components/schemas/CreateOriginEndpoint_request_cmafPackage_StreamSelection'
      type: object
    CmafPackageCreateOrUpdateParameters:
      description: A Common Media Application Format (CMAF) packaging configuration.
      properties:
        Encryption:
          $ref: '#/components/schemas/CreateOriginEndpoint_request_cmafPackage_Encryption'
        HlsManifests:
          allOf:
          - $ref: '#/components/schemas/__listOfHlsManifestCreateOrUpdateParameters'
          - description: A list of HLS manifest configurations
            xml:
              name: hlsManifests
        SegmentDurationSeconds:
          allOf:
          - $ref: '#/components/schemas/__integer'
          - description: |
              Duration (in seconds) of each segment. Actual segments will be
              rounded to the nearest multiple of the source segment duration.
            xml:
              name: segmentDurationSeconds
        SegmentPrefix:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: "An optional custom string that is prepended to the name\
              \ of each segment. If not specified, it defaults to the ChannelId."
            xml:
              name: segmentPrefix
        StreamSelection:
          $ref: '#/components/schemas/CreateOriginEndpoint_request_cmafPackage_StreamSelection'
      type: object
    ConfigureLogsRequest:
      description: the option to configure log subscription.
      example:
        IngressAccessLogs:
          LogGroupName: ""
        EgressAccessLogs:
          LogGroupName: ""
      properties:
        EgressAccessLogs:
          $ref: '#/components/schemas/ConfigureLogsResponse_EgressAccessLogs'
        IngressAccessLogs:
          $ref: '#/components/schemas/ConfigureLogsResponse_IngressAccessLogs'
      title: ConfigureLogsRequest
      type: object
    CreateChannelRequest:
      description: A new Channel configuration.
      example:
        Description: ""
        Id: ""
        Tags: ""
      properties:
        Description:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: A short text description of the Channel.
            xml:
              name: description
        Id:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: |
              The ID of the Channel. The ID must be unique within the region and it
              cannot be changed after a Channel is created.
            xml:
              name: id
        Tags:
          allOf:
          - $ref: '#/components/schemas/Tags'
          - xml:
              name: tags
      required:
      - Id
      title: CreateChannelRequest
      type: object
    S3Destination:
      description: |
        Configuration parameters for where in an S3 bucket to place the harvested content
      properties:
        BucketName:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: |
              The name of an S3 bucket within which harvested content will be exported
            xml:
              name: bucketName
        ManifestKey:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: |
              The key in the specified S3 bucket where the harvested top-level manifest will be placed.
            xml:
              name: manifestKey
        RoleArn:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: |
              The IAM role used to write to the specified S3 bucket
            xml:
              name: roleArn
      required:
      - BucketName
      - ManifestKey
      - RoleArn
      type: object
    CreateHarvestJobRequest:
      description: Configuration parameters used to create a new HarvestJob.
      example:
        S3Destination:
          ManifestKey: ""
          BucketName: ""
          RoleArn: ""
        EndTime: ""
        OriginEndpointId: ""
        StartTime: ""
        Id: ""
      properties:
        EndTime:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: |
              The end of the time-window which will be harvested
            xml:
              name: endTime
        Id:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: |
              The ID of the HarvestJob. The ID must be unique within the region
              and it cannot be changed after the HarvestJob is submitted
            xml:
              name: id
        OriginEndpointId:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: |
              The ID of the OriginEndpoint that the HarvestJob will harvest from.
              This cannot be changed after the HarvestJob is submitted.
            xml:
              name: originEndpointId
        S3Destination:
          $ref: '#/components/schemas/CreateHarvestJobResponse_S3Destination'
        StartTime:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: |
              The start of the time-window which will be harvested
            xml:
              name: startTime
      required:
      - EndTime
      - Id
      - OriginEndpointId
      - S3Destination
      - StartTime
      title: CreateHarvestJobRequest
      type: object
    Status:
      enum:
      - IN_PROGRESS
      - SUCCEEDED
      - FAILED
      type: string
    DashPackage:
      description: A Dynamic Adaptive Streaming over HTTP (DASH) packaging configuration.
      properties:
        AdTriggers:
          allOf:
          - $ref: '#/components/schemas/AdTriggers'
          - xml:
              name: adTriggers
        AdsOnDeliveryRestrictions:
          allOf:
          - $ref: '#/components/schemas/AdsOnDeliveryRestrictions'
          - xml:
              name: adsOnDeliveryRestrictions
        Encryption:
          $ref: '#/components/schemas/CreateOriginEndpoint_request_dashPackage_Encryption'
        IncludeIframeOnlyStream:
          allOf:
          - $ref: '#/components/schemas/__boolean'
          - description: "When enabled, an I-Frame only stream will be included in\
              \ the output."
            xml:
              name: includeIframeOnlyStream
        ManifestLayout:
          allOf:
          - $ref: '#/components/schemas/ManifestLayout'
          - description: "Determines the position of some tags in the Media Presentation\
              \ Description (MPD).  When set to FULL, elements like SegmentTemplate\
              \ and ContentProtection are included in each Representation.  When set\
              \ to COMPACT, duplicate elements are combined and presented at the AdaptationSet\
              \ level."
            xml:
              name: manifestLayout
        ManifestWindowSeconds:
          allOf:
          - $ref: '#/components/schemas/__integer'
          - description: Time window (in seconds) contained in each manifest.
            xml:
              name: manifestWindowSeconds
        MinBufferTimeSeconds:
          allOf:
          - $ref: '#/components/schemas/__integer'
          - description: Minimum duration (in seconds) that a player will buffer media
              before starting the presentation.
            xml:
              name: minBufferTimeSeconds
        MinUpdatePeriodSeconds:
          allOf:
          - $ref: '#/components/schemas/__integer'
          - description: Minimum duration (in seconds) between potential changes to
              the Dynamic Adaptive Streaming over HTTP (DASH) Media Presentation Description
              (MPD).
            xml:
              name: minUpdatePeriodSeconds
        PeriodTriggers:
          allOf:
          - $ref: '#/components/schemas/__listOf__PeriodTriggersElement'
          - description: |
              A list of triggers that controls when the outgoing Dynamic Adaptive Streaming over HTTP (DASH)
              Media Presentation Description (MPD) will be partitioned into multiple periods. If empty, the content will not
              be partitioned into more than one period. If the list contains "ADS", new periods will be created where
              the Channel source contains SCTE-35 ad markers.
            xml:
              name: periodTriggers
        Profile:
          allOf:
          - $ref: '#/components/schemas/Profile'
          - description: "The Dynamic Adaptive Streaming over HTTP (DASH) profile\
              \ type.  When set to \"HBBTV_1_5\", HbbTV 1.5 compliant output is enabled.\
              \ When set to \"DVB-DASH_2014\", DVB-DASH 2014 compliant output is enabled."
            xml:
              name: profile
        SegmentDurationSeconds:
          allOf:
          - $ref: '#/components/schemas/__integer'
          - description: |
              Duration (in seconds) of each segment. Actual segments will be
              rounded to the nearest multiple of the source segment duration.
            xml:
              name: segmentDurationSeconds
        SegmentTemplateFormat:
          allOf:
          - $ref: '#/components/schemas/SegmentTemplateFormat'
          - description: "Determines the type of SegmentTemplate included in the Media\
              \ Presentation Description (MPD).  When set to NUMBER_WITH_TIMELINE,\
              \ a full timeline is presented in each SegmentTemplate, with $Number$\
              \ media URLs.  When set to TIME_WITH_TIMELINE, a full timeline is presented\
              \ in each SegmentTemplate, with $Time$ media URLs. When set to NUMBER_WITH_DURATION,\
              \ only a duration is included in each SegmentTemplate, with $Number$\
              \ media URLs."
            xml:
              name: segmentTemplateFormat
        StreamSelection:
          $ref: '#/components/schemas/CreateOriginEndpoint_request_cmafPackage_StreamSelection'
        SuggestedPresentationDelaySeconds:
          allOf:
          - $ref: '#/components/schemas/__integer'
          - description: Duration (in seconds) to delay live content before presentation.
            xml:
              name: suggestedPresentationDelaySeconds
        UtcTiming:
          allOf:
          - $ref: '#/components/schemas/UtcTiming'
          - description: Determines the type of UTCTiming included in the Media Presentation
              Description (MPD)
            xml:
              name: utcTiming
        UtcTimingUri:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: "Specifies the value attribute of the UTCTiming field when\
              \ utcTiming is set to HTTP-ISO, HTTP-HEAD or HTTP-XSDATE"
            xml:
              name: utcTimingUri
      type: object
    HlsPackage:
      description: An HTTP Live Streaming (HLS) packaging configuration.
      properties:
        AdMarkers:
          allOf:
          - $ref: '#/components/schemas/AdMarkers'
          - description: "This setting controls how ad markers are included in the\
              \ packaged OriginEndpoint.\n\"NONE\" will omit all SCTE-35 ad markers\
              \ from the output.\n\"PASSTHROUGH\" causes the manifest to contain a\
              \ copy of the SCTE-35 ad\nmarkers (comments) taken directly from the\
              \ input HTTP Live Streaming (HLS) manifest.\n\"SCTE35_ENHANCED\" generates\
              \ ad markers and blackout tags based on SCTE-35\nmessages in the input\
              \ source.\n\"DATERANGE\" inserts EXT-X-DATERANGE tags to signal ad and\
              \ program transition events \nin HLS and CMAF manifests. For this option,\
              \ you must set a programDateTimeIntervalSeconds value \nthat is greater\
              \ than 0.\n"
            xml:
              name: adMarkers
        AdTriggers:
          allOf:
          - $ref: '#/components/schemas/AdTriggers'
          - xml:
              name: adTriggers
        AdsOnDeliveryRestrictions:
          allOf:
          - $ref: '#/components/schemas/AdsOnDeliveryRestrictions'
          - xml:
              name: adsOnDeliveryRestrictions
        Encryption:
          $ref: '#/components/schemas/CreateOriginEndpoint_request_hlsPackage_Encryption'
        IncludeDvbSubtitles:
          allOf:
          - $ref: '#/components/schemas/__boolean'
          - description: "When enabled, MediaPackage passes through digital video\
              \ broadcasting (DVB) subtitles into the output."
            xml:
              name: includeDvbSubtitles
        IncludeIframeOnlyStream:
          allOf:
          - $ref: '#/components/schemas/__boolean'
          - description: "When enabled, an I-Frame only stream will be included in\
              \ the output."
            xml:
              name: includeIframeOnlyStream
        PlaylistType:
          allOf:
          - $ref: '#/components/schemas/PlaylistType'
          - description: |
              The HTTP Live Streaming (HLS) playlist type.
              When either "EVENT" or "VOD" is specified, a corresponding EXT-X-PLAYLIST-TYPE
              entry will be included in the media playlist.
            xml:
              name: playlistType
        PlaylistWindowSeconds:
          allOf:
          - $ref: '#/components/schemas/__integer'
          - description: Time window (in seconds) contained in each parent manifest.
            xml:
              name: playlistWindowSeconds
        ProgramDateTimeIntervalSeconds:
          allOf:
          - $ref: '#/components/schemas/__integer'
          - description: |
              The interval (in seconds) between each EXT-X-PROGRAM-DATE-TIME tag
              inserted into manifests. Additionally, when an interval is specified
              ID3Timed Metadata messages will be generated every 5 seconds using the
              ingest time of the content.
              If the interval is not specified, or set to 0, then
              no EXT-X-PROGRAM-DATE-TIME tags will be inserted into manifests and no
              ID3Timed Metadata messages will be generated. Note that irrespective
              of this parameter, if any ID3 Timed Metadata is found in HTTP Live Streaming (HLS) input,
              it will be passed through to HLS output.
            xml:
              name: programDateTimeIntervalSeconds
        SegmentDurationSeconds:
          allOf:
          - $ref: '#/components/schemas/__integer'
          - description: |
              Duration (in seconds) of each fragment. Actual fragments will be
              rounded to the nearest multiple of the source fragment duration.
            xml:
              name: segmentDurationSeconds
        StreamSelection:
          $ref: '#/components/schemas/CreateOriginEndpoint_request_cmafPackage_StreamSelection'
        UseAudioRenditionGroup:
          allOf:
          - $ref: '#/components/schemas/__boolean'
          - description: "When enabled, audio streams will be placed in rendition\
              \ groups in the output."
            xml:
              name: useAudioRenditionGroup
      type: object
    MssPackage:
      description: A Microsoft Smooth Streaming (MSS) packaging configuration.
      properties:
        Encryption:
          $ref: '#/components/schemas/CreateOriginEndpoint_request_mssPackage_Encryption'
        ManifestWindowSeconds:
          allOf:
          - $ref: '#/components/schemas/__integer'
          - description: The time window (in seconds) contained in each manifest.
            xml:
              name: manifestWindowSeconds
        SegmentDurationSeconds:
          allOf:
          - $ref: '#/components/schemas/__integer'
          - description: The duration (in seconds) of each segment.
            xml:
              name: segmentDurationSeconds
        StreamSelection:
          $ref: '#/components/schemas/CreateOriginEndpoint_request_cmafPackage_StreamSelection'
      type: object
    Origination:
      enum:
      - ALLOW
      - DENY
      type: string
    __listOf__string:
      items:
        $ref: '#/components/schemas/__string'
      type: array
    CreateOriginEndpointRequest:
      description: Configuration parameters used to create a new OriginEndpoint.
      example:
        MssPackage:
          ManifestWindowSeconds: ""
          StreamSelection:
            MinVideoBitsPerSecond: ""
            StreamOrder: ""
            MaxVideoBitsPerSecond: ""
          SegmentDurationSeconds: ""
          Encryption:
            SpekeKeyProvider:
              ResourceId: ""
              SystemIds: ""
              EncryptionContractConfiguration:
                PresetSpeke20Audio: ""
                PresetSpeke20Video: ""
              RoleArn: ""
              Url: ""
              CertificateArn: ""
        Description: ""
        ChannelId: ""
        Origination: ""
        TimeDelaySeconds: ""
        Authorization:
          SecretsRoleArn: ""
          CdnIdentifierSecret: ""
        ManifestName: ""
        CmafPackage:
          SegmentPrefix: ""
          StreamSelection:
            MinVideoBitsPerSecond: ""
            StreamOrder: ""
            MaxVideoBitsPerSecond: ""
          SegmentDurationSeconds: ""
          Encryption:
            KeyRotationIntervalSeconds: ""
            ConstantInitializationVector: ""
            SpekeKeyProvider:
              ResourceId: ""
              SystemIds: ""
              EncryptionContractConfiguration:
                PresetSpeke20Audio: ""
                PresetSpeke20Video: ""
              RoleArn: ""
              Url: ""
              CertificateArn: ""
            EncryptionMethod: ""
          HlsManifests: ""
        Whitelist: ""
        Id: ""
        HlsPackage:
          AdsOnDeliveryRestrictions: ""
          AdMarkers: ""
          ProgramDateTimeIntervalSeconds: ""
          StreamSelection:
            MinVideoBitsPerSecond: ""
            StreamOrder: ""
            MaxVideoBitsPerSecond: ""
          PlaylistWindowSeconds: ""
          IncludeIframeOnlyStream: ""
          UseAudioRenditionGroup: ""
          SegmentDurationSeconds: ""
          Encryption:
            KeyRotationIntervalSeconds: ""
            RepeatExtXKey: ""
            ConstantInitializationVector: ""
            SpekeKeyProvider:
              ResourceId: ""
              SystemIds: ""
              EncryptionContractConfiguration:
                PresetSpeke20Audio: ""
                PresetSpeke20Video: ""
              RoleArn: ""
              Url: ""
              CertificateArn: ""
            EncryptionMethod: ""
          AdTriggers: ""
          IncludeDvbSubtitles: ""
          PlaylistType: ""
        DashPackage:
          AdsOnDeliveryRestrictions: ""
          ManifestWindowSeconds: ""
          ManifestLayout: ""
          StreamSelection:
            MinVideoBitsPerSecond: ""
            StreamOrder: ""
            MaxVideoBitsPerSecond: ""
          IncludeIframeOnlyStream: ""
          Encryption:
            KeyRotationIntervalSeconds: ""
            SpekeKeyProvider:
              ResourceId: ""
              SystemIds: ""
              EncryptionContractConfiguration:
                PresetSpeke20Audio: ""
                PresetSpeke20Video: ""
              RoleArn: ""
              Url: ""
              CertificateArn: ""
          SegmentTemplateFormat: ""
          AdTriggers: ""
          Profile: ""
          PeriodTriggers: ""
          SuggestedPresentationDelaySeconds: ""
          UtcTiming: ""
          MinBufferTimeSeconds: ""
          SegmentDurationSeconds: ""
          MinUpdatePeriodSeconds: ""
          UtcTimingUri: ""
        Tags: ""
        StartoverWindowSeconds: ""
      properties:
        Authorization:
          $ref: '#/components/schemas/CreateOriginEndpointResponse_Authorization'
        ChannelId:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: |
              The ID of the Channel that the OriginEndpoint will be associated with.
              This cannot be changed after the OriginEndpoint is created.
            xml:
              name: channelId
        CmafPackage:
          $ref: '#/components/schemas/CreateOriginEndpointRequest_CmafPackage'
        DashPackage:
          $ref: '#/components/schemas/CreateOriginEndpointResponse_DashPackage'
        Description:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: A short text description of the OriginEndpoint.
            xml:
              name: description
        HlsPackage:
          $ref: '#/components/schemas/CreateOriginEndpointResponse_HlsPackage'
        Id:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: |
              The ID of the OriginEndpoint.  The ID must be unique within the region
              and it cannot be changed after the OriginEndpoint is created.
            xml:
              name: id
        ManifestName:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: A short string that will be used as the filename of the OriginEndpoint
              URL (defaults to "index").
            xml:
              name: manifestName
        MssPackage:
          $ref: '#/components/schemas/CreateOriginEndpointResponse_MssPackage'
        Origination:
          allOf:
          - $ref: '#/components/schemas/Origination'
          - description: |
              Control whether origination of video is allowed for this OriginEndpoint. If set to ALLOW, the OriginEndpoint
              may by requested, pursuant to any other form of access control. If set to DENY, the OriginEndpoint may not be
              requested. This can be helpful for Live to VOD harvesting, or for temporarily disabling origination
            xml:
              name: origination
        StartoverWindowSeconds:
          allOf:
          - $ref: '#/components/schemas/__integer'
          - description: |
              Maximum duration (seconds) of content to retain for startover playback.
              If not specified, startover playback will be disabled for the OriginEndpoint.
            xml:
              name: startoverWindowSeconds
        Tags:
          allOf:
          - $ref: '#/components/schemas/Tags'
          - xml:
              name: tags
        TimeDelaySeconds:
          allOf:
          - $ref: '#/components/schemas/__integer'
          - description: |
              Amount of delay (seconds) to enforce on the playback of live content.
              If not specified, there will be no time delay in effect for the OriginEndpoint.
            xml:
              name: timeDelaySeconds
        Whitelist:
          allOf:
          - $ref: '#/components/schemas/__listOf__string'
          - description: A list of source IP CIDR blocks that will be allowed to access
              the OriginEndpoint.
            xml:
              name: whitelist
      required:
      - ChannelId
      - Id
      title: CreateOriginEndpointRequest
      type: object
    DeleteChannelRequest:
      properties: {}
      title: DeleteChannelRequest
      type: object
    DeleteOriginEndpointRequest:
      properties: {}
      title: DeleteOriginEndpointRequest
      type: object
    DescribeChannelRequest:
      properties: {}
      title: DescribeChannelRequest
      type: object
    DescribeHarvestJobRequest:
      properties: {}
      title: DescribeHarvestJobRequest
      type: object
    DescribeOriginEndpointRequest:
      properties: {}
      title: DescribeOriginEndpointRequest
      type: object
    PresetSpeke20Audio:
      enum:
      - PRESET-AUDIO-1
      - PRESET-AUDIO-2
      - PRESET-AUDIO-3
      - SHARED
      - UNENCRYPTED
      type: string
    PresetSpeke20Video:
      enum:
      - PRESET-VIDEO-1
      - PRESET-VIDEO-2
      - PRESET-VIDEO-3
      - PRESET-VIDEO-4
      - PRESET-VIDEO-5
      - PRESET-VIDEO-6
      - PRESET-VIDEO-7
      - PRESET-VIDEO-8
      - SHARED
      - UNENCRYPTED
      type: string
    EncryptionContractConfiguration:
      description: "Use encryptionContractConfiguration to configure one or more content\
        \ encryption keys for your endpoints that use SPEKE 2.0. \nThe encryption\
        \ contract defines which content keys are used to encrypt the audio and video\
        \ tracks in your stream. \nTo configure the encryption contract, specify which\
        \ audio and video encryption presets to use.\nNote the following considerations\
        \ when using encryptionContractConfiguration:\nencryptionContractConfiguration\
        \ can be used for DASH or CMAF endpoints that use SPEKE 2.0. SPEKE 2.0 relies\
        \ on the CPIX 2.3 specification.\nYou must disable key rotation for this endpoint\
        \ by setting keyRotationIntervalSeconds to 0.\n"
      properties:
        PresetSpeke20Audio:
          allOf:
          - $ref: '#/components/schemas/PresetSpeke20Audio'
          - description: A collection of audio encryption presets.
            xml:
              name: presetSpeke20Audio
        PresetSpeke20Video:
          allOf:
          - $ref: '#/components/schemas/PresetSpeke20Video'
          - description: A collection of video encryption presets.
            xml:
              name: presetSpeke20Video
      required:
      - PresetSpeke20Audio
      - PresetSpeke20Video
      type: object
    EncryptionMethod:
      enum:
      - AES_128
      - SAMPLE_AES
      type: string
    HarvestJob:
      description: A HarvestJob resource configuration
      properties:
        Arn:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: |
              The Amazon Resource Name (ARN) assigned to the HarvestJob.
            xml:
              name: arn
        ChannelId:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: |
              The ID of the Channel that the HarvestJob will harvest from.
            xml:
              name: channelId
        CreatedAt:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: |
              The date and time the HarvestJob was submitted.
            xml:
              name: createdAt
        EndTime:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: |
              The end of the time-window which will be harvested.
            xml:
              name: endTime
        Id:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: |
              The ID of the HarvestJob. The ID must be unique within the region
              and it cannot be changed after the HarvestJob is submitted.
            xml:
              name: id
        OriginEndpointId:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: |
              The ID of the OriginEndpoint that the HarvestJob will harvest from.
              This cannot be changed after the HarvestJob is submitted.
            xml:
              name: originEndpointId
        S3Destination:
          $ref: '#/components/schemas/CreateHarvestJobResponse_S3Destination'
        StartTime:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: |
              The start of the time-window which will be harvested.
            xml:
              name: startTime
        Status:
          allOf:
          - $ref: '#/components/schemas/Status'
          - description: |
              The current status of the HarvestJob. Consider setting up a CloudWatch Event to listen for
              HarvestJobs as they succeed or fail. In the event of failure, the CloudWatch Event will
              include an explanation of why the HarvestJob failed.
            xml:
              name: status
      type: object
    __listOfIngestEndpoint:
      items:
        $ref: '#/components/schemas/IngestEndpoint'
      type: array
    HlsManifest:
      description: A HTTP Live Streaming (HLS) manifest configuration.
      properties:
        AdMarkers:
          allOf:
          - $ref: '#/components/schemas/AdMarkers'
          - description: "This setting controls how ad markers are included in the\
              \ packaged OriginEndpoint.\n\"NONE\" will omit all SCTE-35 ad markers\
              \ from the output.\n\"PASSTHROUGH\" causes the manifest to contain a\
              \ copy of the SCTE-35 ad\nmarkers (comments) taken directly from the\
              \ input HTTP Live Streaming (HLS) manifest.\n\"SCTE35_ENHANCED\" generates\
              \ ad markers and blackout tags based on SCTE-35\nmessages in the input\
              \ source.\n\"DATERANGE\" inserts EXT-X-DATERANGE tags to signal ad and\
              \ program transition events \nin HLS and CMAF manifests. For this option,\
              \ you must set a programDateTimeIntervalSeconds value \nthat is greater\
              \ than 0.\n"
            xml:
              name: adMarkers
        Id:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The ID of the manifest. The ID must be unique within the
              OriginEndpoint and it cannot be changed after it is created.
            xml:
              name: id
        IncludeIframeOnlyStream:
          allOf:
          - $ref: '#/components/schemas/__boolean'
          - description: "When enabled, an I-Frame only stream will be included in\
              \ the output."
            xml:
              name: includeIframeOnlyStream
        ManifestName:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: "An optional short string appended to the end of the OriginEndpoint\
              \ URL. If not specified, defaults to the manifestName for the OriginEndpoint."
            xml:
              name: manifestName
        PlaylistType:
          allOf:
          - $ref: '#/components/schemas/PlaylistType'
          - description: |
              The HTTP Live Streaming (HLS) playlist type.
              When either "EVENT" or "VOD" is specified, a corresponding EXT-X-PLAYLIST-TYPE
              entry will be included in the media playlist.
            xml:
              name: playlistType
        PlaylistWindowSeconds:
          allOf:
          - $ref: '#/components/schemas/__integer'
          - description: Time window (in seconds) contained in each parent manifest.
            xml:
              name: playlistWindowSeconds
        ProgramDateTimeIntervalSeconds:
          allOf:
          - $ref: '#/components/schemas/__integer'
          - description: |
              The interval (in seconds) between each EXT-X-PROGRAM-DATE-TIME tag
              inserted into manifests. Additionally, when an interval is specified
              ID3Timed Metadata messages will be generated every 5 seconds using the
              ingest time of the content.
              If the interval is not specified, or set to 0, then
              no EXT-X-PROGRAM-DATE-TIME tags will be inserted into manifests and no
              ID3Timed Metadata messages will be generated. Note that irrespective
              of this parameter, if any ID3 Timed Metadata is found in HTTP Live Streaming (HLS) input,
              it will be passed through to HLS output.
            xml:
              name: programDateTimeIntervalSeconds
        Url:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The URL of the packaged OriginEndpoint for consumption.
            xml:
              name: url
        AdTriggers:
          allOf:
          - $ref: '#/components/schemas/AdTriggers'
          - xml:
              name: adTriggers
        AdsOnDeliveryRestrictions:
          allOf:
          - $ref: '#/components/schemas/AdsOnDeliveryRestrictions'
          - xml:
              name: adsOnDeliveryRestrictions
      required:
      - Id
      type: object
    HlsManifestCreateOrUpdateParameters:
      description: A HTTP Live Streaming (HLS) manifest configuration.
      properties:
        AdMarkers:
          allOf:
          - $ref: '#/components/schemas/AdMarkers'
          - description: "This setting controls how ad markers are included in the\
              \ packaged OriginEndpoint.\n\"NONE\" will omit all SCTE-35 ad markers\
              \ from the output.\n\"PASSTHROUGH\" causes the manifest to contain a\
              \ copy of the SCTE-35 ad\nmarkers (comments) taken directly from the\
              \ input HTTP Live Streaming (HLS) manifest.\n\"SCTE35_ENHANCED\" generates\
              \ ad markers and blackout tags based on SCTE-35\nmessages in the input\
              \ source.\n\"DATERANGE\" inserts EXT-X-DATERANGE tags to signal ad and\
              \ program transition events \nin HLS and CMAF manifests. For this option,\
              \ you must set a programDateTimeIntervalSeconds value \nthat is greater\
              \ than 0.\n"
            xml:
              name: adMarkers
        AdTriggers:
          allOf:
          - $ref: '#/components/schemas/AdTriggers'
          - xml:
              name: adTriggers
        AdsOnDeliveryRestrictions:
          allOf:
          - $ref: '#/components/schemas/AdsOnDeliveryRestrictions'
          - xml:
              name: adsOnDeliveryRestrictions
        Id:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The ID of the manifest. The ID must be unique within the
              OriginEndpoint and it cannot be changed after it is created.
            xml:
              name: id
        IncludeIframeOnlyStream:
          allOf:
          - $ref: '#/components/schemas/__boolean'
          - description: "When enabled, an I-Frame only stream will be included in\
              \ the output."
            xml:
              name: includeIframeOnlyStream
        ManifestName:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: "An optional short string appended to the end of the OriginEndpoint\
              \ URL. If not specified, defaults to the manifestName for the OriginEndpoint."
            xml:
              name: manifestName
        PlaylistType:
          allOf:
          - $ref: '#/components/schemas/PlaylistType'
          - description: |
              The HTTP Live Streaming (HLS) playlist type.
              When either "EVENT" or "VOD" is specified, a corresponding EXT-X-PLAYLIST-TYPE
              entry will be included in the media playlist.
            xml:
              name: playlistType
        PlaylistWindowSeconds:
          allOf:
          - $ref: '#/components/schemas/__integer'
          - description: Time window (in seconds) contained in each parent manifest.
            xml:
              name: playlistWindowSeconds
        ProgramDateTimeIntervalSeconds:
          allOf:
          - $ref: '#/components/schemas/__integer'
          - description: |
              The interval (in seconds) between each EXT-X-PROGRAM-DATE-TIME tag
              inserted into manifests. Additionally, when an interval is specified
              ID3Timed Metadata messages will be generated every 5 seconds using the
              ingest time of the content.
              If the interval is not specified, or set to 0, then
              no EXT-X-PROGRAM-DATE-TIME tags will be inserted into manifests and no
              ID3Timed Metadata messages will be generated. Note that irrespective
              of this parameter, if any ID3 Timed Metadata is found in HTTP Live Streaming (HLS) input,
              it will be passed through to HLS output.
            xml:
              name: programDateTimeIntervalSeconds
      required:
      - Id
      type: object
    IngestEndpoint:
      description: An endpoint for ingesting source content for a Channel.
      properties:
        Id:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The system generated unique identifier for the IngestEndpoint
            xml:
              name: id
        Password:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The system generated password for ingest authentication.
            xml:
              name: password
        Url:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The ingest URL to which the source stream should be sent.
            xml:
              name: url
        Username:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The system generated username for ingest authentication.
            xml:
              name: username
      type: object
    MaxResults:
      maximum: 1000
      minimum: 1
      type: integer
    ListChannelsRequest:
      properties: {}
      title: ListChannelsRequest
      type: object
    __listOfChannel:
      items:
        $ref: '#/components/schemas/Channel'
      type: array
    ListHarvestJobsRequest:
      properties: {}
      title: ListHarvestJobsRequest
      type: object
    __listOfHarvestJob:
      items:
        $ref: '#/components/schemas/HarvestJob'
      type: array
    ListOriginEndpointsRequest:
      properties: {}
      title: ListOriginEndpointsRequest
      type: object
    __listOfOriginEndpoint:
      items:
        $ref: '#/components/schemas/OriginEndpoint'
      type: array
    ListTagsForResourceRequest:
      properties: {}
      title: ListTagsForResourceRequest
      type: object
    __mapOf__string:
      additionalProperties:
        $ref: '#/components/schemas/__string'
      type: object
    OriginEndpoint:
      description: An OriginEndpoint resource configuration.
      properties:
        Arn:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The Amazon Resource Name (ARN) assigned to the OriginEndpoint.
            xml:
              name: arn
        Authorization:
          $ref: '#/components/schemas/CreateOriginEndpointResponse_Authorization'
        ChannelId:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The ID of the Channel the OriginEndpoint is associated with.
            xml:
              name: channelId
        CmafPackage:
          $ref: '#/components/schemas/CreateOriginEndpointResponse_CmafPackage'
        CreatedAt:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The date and time the OriginEndpoint was created.
            xml:
              name: createdAt
        DashPackage:
          $ref: '#/components/schemas/CreateOriginEndpointResponse_DashPackage'
        Description:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: A short text description of the OriginEndpoint.
            xml:
              name: description
        HlsPackage:
          $ref: '#/components/schemas/CreateOriginEndpointResponse_HlsPackage'
        Id:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The ID of the OriginEndpoint.
            xml:
              name: id
        ManifestName:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: A short string appended to the end of the OriginEndpoint
              URL.
            xml:
              name: manifestName
        MssPackage:
          $ref: '#/components/schemas/CreateOriginEndpointResponse_MssPackage'
        Origination:
          allOf:
          - $ref: '#/components/schemas/Origination'
          - description: |
              Control whether origination of video is allowed for this OriginEndpoint. If set to ALLOW, the OriginEndpoint
              may by requested, pursuant to any other form of access control. If set to DENY, the OriginEndpoint may not be
              requested. This can be helpful for Live to VOD harvesting, or for temporarily disabling origination
            xml:
              name: origination
        StartoverWindowSeconds:
          allOf:
          - $ref: '#/components/schemas/__integer'
          - description: |
              Maximum duration (seconds) of content to retain for startover playback.
              If not specified, startover playback will be disabled for the OriginEndpoint.
            xml:
              name: startoverWindowSeconds
        Tags:
          allOf:
          - $ref: '#/components/schemas/Tags'
          - xml:
              name: tags
        TimeDelaySeconds:
          allOf:
          - $ref: '#/components/schemas/__integer'
          - description: |
              Amount of delay (seconds) to enforce on the playback of live content.
              If not specified, there will be no time delay in effect for the OriginEndpoint.
            xml:
              name: timeDelaySeconds
        Url:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The URL of the packaged OriginEndpoint for consumption.
            xml:
              name: url
        Whitelist:
          allOf:
          - $ref: '#/components/schemas/__listOf__string'
          - description: A list of source IP CIDR blocks that will be allowed to access
              the OriginEndpoint.
            xml:
              name: whitelist
      type: object
    RotateChannelCredentialsRequest:
      deprecated: true
      properties: {}
      title: RotateChannelCredentialsRequest
      type: object
    RotateIngestEndpointCredentialsRequest:
      properties: {}
      title: RotateIngestEndpointCredentialsRequest
      type: object
    StreamOrder:
      enum:
      - ORIGINAL
      - VIDEO_BITRATE_ASCENDING
      - VIDEO_BITRATE_DESCENDING
      type: string
    TagResourceRequest:
      example:
        Tags: ""
      properties:
        Tags:
          allOf:
          - $ref: '#/components/schemas/__mapOf__string'
          - xml:
              name: tags
      required:
      - Tags
      title: TagResourceRequest
      type: object
    UntagResourceRequest:
      properties: {}
      title: UntagResourceRequest
      type: object
    UpdateChannelRequest:
      description: Configuration parameters used to update the Channel.
      example:
        Description: ""
      properties:
        Description:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: A short text description of the Channel.
            xml:
              name: description
      title: UpdateChannelRequest
      type: object
    UpdateOriginEndpointRequest:
      description: Configuration parameters used to update an existing OriginEndpoint.
      example:
        Authorization:
          SecretsRoleArn: ""
          CdnIdentifierSecret: ""
        MssPackage:
          ManifestWindowSeconds: ""
          StreamSelection:
            MinVideoBitsPerSecond: ""
            StreamOrder: ""
            MaxVideoBitsPerSecond: ""
          SegmentDurationSeconds: ""
          Encryption:
            SpekeKeyProvider:
              ResourceId: ""
              SystemIds: ""
              EncryptionContractConfiguration:
                PresetSpeke20Audio: ""
                PresetSpeke20Video: ""
              RoleArn: ""
              Url: ""
              CertificateArn: ""
        ManifestName: ""
        Description: ""
        CmafPackage:
          SegmentPrefix: ""
          StreamSelection:
            MinVideoBitsPerSecond: ""
            StreamOrder: ""
            MaxVideoBitsPerSecond: ""
          SegmentDurationSeconds: ""
          Encryption:
            KeyRotationIntervalSeconds: ""
            ConstantInitializationVector: ""
            SpekeKeyProvider:
              ResourceId: ""
              SystemIds: ""
              EncryptionContractConfiguration:
                PresetSpeke20Audio: ""
                PresetSpeke20Video: ""
              RoleArn: ""
              Url: ""
              CertificateArn: ""
            EncryptionMethod: ""
          HlsManifests: ""
        Whitelist: ""
        HlsPackage:
          AdsOnDeliveryRestrictions: ""
          AdMarkers: ""
          ProgramDateTimeIntervalSeconds: ""
          StreamSelection:
            MinVideoBitsPerSecond: ""
            StreamOrder: ""
            MaxVideoBitsPerSecond: ""
          PlaylistWindowSeconds: ""
          IncludeIframeOnlyStream: ""
          UseAudioRenditionGroup: ""
          SegmentDurationSeconds: ""
          Encryption:
            KeyRotationIntervalSeconds: ""
            RepeatExtXKey: ""
            ConstantInitializationVector: ""
            SpekeKeyProvider:
              ResourceId: ""
              SystemIds: ""
              EncryptionContractConfiguration:
                PresetSpeke20Audio: ""
                PresetSpeke20Video: ""
              RoleArn: ""
              Url: ""
              CertificateArn: ""
            EncryptionMethod: ""
          AdTriggers: ""
          IncludeDvbSubtitles: ""
          PlaylistType: ""
        DashPackage:
          AdsOnDeliveryRestrictions: ""
          ManifestWindowSeconds: ""
          ManifestLayout: ""
          StreamSelection:
            MinVideoBitsPerSecond: ""
            StreamOrder: ""
            MaxVideoBitsPerSecond: ""
          IncludeIframeOnlyStream: ""
          Encryption:
            KeyRotationIntervalSeconds: ""
            SpekeKeyProvider:
              ResourceId: ""
              SystemIds: ""
              EncryptionContractConfiguration:
                PresetSpeke20Audio: ""
                PresetSpeke20Video: ""
              RoleArn: ""
              Url: ""
              CertificateArn: ""
          SegmentTemplateFormat: ""
          AdTriggers: ""
          Profile: ""
          PeriodTriggers: ""
          SuggestedPresentationDelaySeconds: ""
          UtcTiming: ""
          MinBufferTimeSeconds: ""
          SegmentDurationSeconds: ""
          MinUpdatePeriodSeconds: ""
          UtcTimingUri: ""
        Origination: ""
        TimeDelaySeconds: ""
        StartoverWindowSeconds: ""
      properties:
        Authorization:
          $ref: '#/components/schemas/CreateOriginEndpointResponse_Authorization'
        CmafPackage:
          $ref: '#/components/schemas/CreateOriginEndpointRequest_CmafPackage'
        DashPackage:
          $ref: '#/components/schemas/CreateOriginEndpointResponse_DashPackage'
        Description:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: A short text description of the OriginEndpoint.
            xml:
              name: description
        HlsPackage:
          $ref: '#/components/schemas/CreateOriginEndpointResponse_HlsPackage'
        ManifestName:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: A short string that will be appended to the end of the Endpoint
              URL.
            xml:
              name: manifestName
        MssPackage:
          $ref: '#/components/schemas/CreateOriginEndpointResponse_MssPackage'
        Origination:
          allOf:
          - $ref: '#/components/schemas/Origination'
          - description: |
              Control whether origination of video is allowed for this OriginEndpoint. If set to ALLOW, the OriginEndpoint
              may by requested, pursuant to any other form of access control. If set to DENY, the OriginEndpoint may not be
              requested. This can be helpful for Live to VOD harvesting, or for temporarily disabling origination
            xml:
              name: origination
        StartoverWindowSeconds:
          allOf:
          - $ref: '#/components/schemas/__integer'
          - description: |
              Maximum duration (in seconds) of content to retain for startover playback.
              If not specified, startover playback will be disabled for the OriginEndpoint.
            xml:
              name: startoverWindowSeconds
        TimeDelaySeconds:
          allOf:
          - $ref: '#/components/schemas/__integer'
          - description: |
              Amount of delay (in seconds) to enforce on the playback of live content.
              If not specified, there will be no time delay in effect for the OriginEndpoint.
            xml:
              name: timeDelaySeconds
        Whitelist:
          allOf:
          - $ref: '#/components/schemas/__listOf__string'
          - description: A list of source IP CIDR blocks that will be allowed to access
              the OriginEndpoint.
            xml:
              name: whitelist
      title: UpdateOriginEndpointRequest
      type: object
    __PeriodTriggersElement:
      enum:
      - ADS
      type: string
    ConfigureLogs_request_egressAccessLogs:
      description: Configure egress access logging.
      properties:
        LogGroupName:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: Customize the log group name.
            xml:
              name: logGroupName
      type: object
    ConfigureLogs_request_ingressAccessLogs:
      description: Configure ingress access logging.
      properties:
        LogGroupName:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: Customize the log group name.
            xml:
              name: logGroupName
      type: object
    ConfigureLogs_request:
      properties:
        egressAccessLogs:
          $ref: '#/components/schemas/ConfigureLogs_request_egressAccessLogs'
        ingressAccessLogs:
          $ref: '#/components/schemas/ConfigureLogs_request_ingressAccessLogs'
      type: object
    CreateChannel_request:
      properties:
        description:
          description: A short text description of the Channel.
          type: string
        id:
          description: |
            The ID of the Channel. The ID must be unique within the region and it
            cannot be changed after a Channel is created.
          type: string
        tags:
          additionalProperties:
            $ref: '#/components/schemas/__string'
          description: A collection of tags associated with a resource
          type: object
      required:
      - id
      type: object
    CreateHarvestJob_request_s3Destination:
      description: |
        Configuration parameters for where in an S3 bucket to place the harvested content
      properties:
        BucketName:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: |
              The name of an S3 bucket within which harvested content will be exported
            xml:
              name: bucketName
        ManifestKey:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: |
              The key in the specified S3 bucket where the harvested top-level manifest will be placed.
            xml:
              name: manifestKey
        RoleArn:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: |
              The IAM role used to write to the specified S3 bucket
            xml:
              name: roleArn
      type: object
    CreateHarvestJob_request:
      properties:
        endTime:
          description: |
            The end of the time-window which will be harvested
          type: string
        id:
          description: |
            The ID of the HarvestJob. The ID must be unique within the region
            and it cannot be changed after the HarvestJob is submitted
          type: string
        originEndpointId:
          description: |
            The ID of the OriginEndpoint that the HarvestJob will harvest from.
            This cannot be changed after the HarvestJob is submitted.
          type: string
        s3Destination:
          $ref: '#/components/schemas/CreateHarvestJob_request_s3Destination'
        startTime:
          description: |
            The start of the time-window which will be harvested
          type: string
      required:
      - endTime
      - id
      - originEndpointId
      - s3Destination
      - startTime
      type: object
    CreateOriginEndpoint_request_authorization:
      description: CDN Authorization credentials
      properties:
        CdnIdentifierSecret:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: |
              The Amazon Resource Name (ARN) for the secret in Secrets Manager that your Content Distribution Network (CDN) uses for authorization to access your endpoint.
            xml:
              name: cdnIdentifierSecret
        SecretsRoleArn:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: |
              The Amazon Resource Name (ARN) for the IAM role that allows MediaPackage to communicate with AWS Secrets Manager.
            xml:
              name: secretsRoleArn
      type: object
    CreateOriginEndpoint_request_cmafPackage_Encryption:
      allOf:
      - $ref: '#/components/schemas/CmafEncryption'
      - xml:
          name: encryption
      example:
        KeyRotationIntervalSeconds: ""
        ConstantInitializationVector: ""
        SpekeKeyProvider:
          ResourceId: ""
          SystemIds: ""
          EncryptionContractConfiguration:
            PresetSpeke20Audio: ""
            PresetSpeke20Video: ""
          RoleArn: ""
          Url: ""
          CertificateArn: ""
        EncryptionMethod: ""
    CreateOriginEndpoint_request_cmafPackage_StreamSelection:
      allOf:
      - $ref: '#/components/schemas/StreamSelection'
      - xml:
          name: streamSelection
      example:
        MinVideoBitsPerSecond: ""
        StreamOrder: ""
        MaxVideoBitsPerSecond: ""
    CreateOriginEndpoint_request_cmafPackage:
      description: A Common Media Application Format (CMAF) packaging configuration.
      properties:
        Encryption:
          $ref: '#/components/schemas/CreateOriginEndpoint_request_cmafPackage_Encryption'
        HlsManifests:
          allOf:
          - $ref: '#/components/schemas/__listOfHlsManifestCreateOrUpdateParameters'
          - description: A list of HLS manifest configurations
            xml:
              name: hlsManifests
        SegmentDurationSeconds:
          allOf:
          - $ref: '#/components/schemas/__integer'
          - description: |
              Duration (in seconds) of each segment. Actual segments will be
              rounded to the nearest multiple of the source segment duration.
            xml:
              name: segmentDurationSeconds
        SegmentPrefix:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: "An optional custom string that is prepended to the name\
              \ of each segment. If not specified, it defaults to the ChannelId."
            xml:
              name: segmentPrefix
        StreamSelection:
          $ref: '#/components/schemas/CreateOriginEndpoint_request_cmafPackage_StreamSelection'
      type: object
    CreateOriginEndpoint_request_dashPackage_Encryption:
      allOf:
      - $ref: '#/components/schemas/DashEncryption'
      - xml:
          name: encryption
      example:
        KeyRotationIntervalSeconds: ""
        SpekeKeyProvider:
          ResourceId: ""
          SystemIds: ""
          EncryptionContractConfiguration:
            PresetSpeke20Audio: ""
            PresetSpeke20Video: ""
          RoleArn: ""
          Url: ""
          CertificateArn: ""
    CreateOriginEndpoint_request_dashPackage:
      description: A Dynamic Adaptive Streaming over HTTP (DASH) packaging configuration.
      properties:
        AdTriggers:
          allOf:
          - $ref: '#/components/schemas/AdTriggers'
          - xml:
              name: adTriggers
        AdsOnDeliveryRestrictions:
          allOf:
          - $ref: '#/components/schemas/AdsOnDeliveryRestrictions'
          - xml:
              name: adsOnDeliveryRestrictions
        Encryption:
          $ref: '#/components/schemas/CreateOriginEndpoint_request_dashPackage_Encryption'
        IncludeIframeOnlyStream:
          allOf:
          - $ref: '#/components/schemas/__boolean'
          - description: "When enabled, an I-Frame only stream will be included in\
              \ the output."
            xml:
              name: includeIframeOnlyStream
        ManifestLayout:
          allOf:
          - $ref: '#/components/schemas/ManifestLayout'
          - description: "Determines the position of some tags in the Media Presentation\
              \ Description (MPD).  When set to FULL, elements like SegmentTemplate\
              \ and ContentProtection are included in each Representation.  When set\
              \ to COMPACT, duplicate elements are combined and presented at the AdaptationSet\
              \ level."
            xml:
              name: manifestLayout
        ManifestWindowSeconds:
          allOf:
          - $ref: '#/components/schemas/__integer'
          - description: Time window (in seconds) contained in each manifest.
            xml:
              name: manifestWindowSeconds
        MinBufferTimeSeconds:
          allOf:
          - $ref: '#/components/schemas/__integer'
          - description: Minimum duration (in seconds) that a player will buffer media
              before starting the presentation.
            xml:
              name: minBufferTimeSeconds
        MinUpdatePeriodSeconds:
          allOf:
          - $ref: '#/components/schemas/__integer'
          - description: Minimum duration (in seconds) between potential changes to
              the Dynamic Adaptive Streaming over HTTP (DASH) Media Presentation Description
              (MPD).
            xml:
              name: minUpdatePeriodSeconds
        PeriodTriggers:
          allOf:
          - $ref: '#/components/schemas/__listOf__PeriodTriggersElement'
          - description: |
              A list of triggers that controls when the outgoing Dynamic Adaptive Streaming over HTTP (DASH)
              Media Presentation Description (MPD) will be partitioned into multiple periods. If empty, the content will not
              be partitioned into more than one period. If the list contains "ADS", new periods will be created where
              the Channel source contains SCTE-35 ad markers.
            xml:
              name: periodTriggers
        Profile:
          allOf:
          - $ref: '#/components/schemas/Profile'
          - description: "The Dynamic Adaptive Streaming over HTTP (DASH) profile\
              \ type.  When set to \"HBBTV_1_5\", HbbTV 1.5 compliant output is enabled.\
              \ When set to \"DVB-DASH_2014\", DVB-DASH 2014 compliant output is enabled."
            xml:
              name: profile
        SegmentDurationSeconds:
          allOf:
          - $ref: '#/components/schemas/__integer'
          - description: |
              Duration (in seconds) of each segment. Actual segments will be
              rounded to the nearest multiple of the source segment duration.
            xml:
              name: segmentDurationSeconds
        SegmentTemplateFormat:
          allOf:
          - $ref: '#/components/schemas/SegmentTemplateFormat'
          - description: "Determines the type of SegmentTemplate included in the Media\
              \ Presentation Description (MPD).  When set to NUMBER_WITH_TIMELINE,\
              \ a full timeline is presented in each SegmentTemplate, with $Number$\
              \ media URLs.  When set to TIME_WITH_TIMELINE, a full timeline is presented\
              \ in each SegmentTemplate, with $Time$ media URLs. When set to NUMBER_WITH_DURATION,\
              \ only a duration is included in each SegmentTemplate, with $Number$\
              \ media URLs."
            xml:
              name: segmentTemplateFormat
        StreamSelection:
          $ref: '#/components/schemas/CreateOriginEndpoint_request_cmafPackage_StreamSelection'
        SuggestedPresentationDelaySeconds:
          allOf:
          - $ref: '#/components/schemas/__integer'
          - description: Duration (in seconds) to delay live content before presentation.
            xml:
              name: suggestedPresentationDelaySeconds
        UtcTiming:
          allOf:
          - $ref: '#/components/schemas/UtcTiming'
          - description: Determines the type of UTCTiming included in the Media Presentation
              Description (MPD)
            xml:
              name: utcTiming
        UtcTimingUri:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: "Specifies the value attribute of the UTCTiming field when\
              \ utcTiming is set to HTTP-ISO, HTTP-HEAD or HTTP-XSDATE"
            xml:
              name: utcTimingUri
      type: object
    CreateOriginEndpoint_request_hlsPackage_Encryption:
      allOf:
      - $ref: '#/components/schemas/HlsEncryption'
      - xml:
          name: encryption
      example:
        KeyRotationIntervalSeconds: ""
        RepeatExtXKey: ""
        ConstantInitializationVector: ""
        SpekeKeyProvider:
          ResourceId: ""
          SystemIds: ""
          EncryptionContractConfiguration:
            PresetSpeke20Audio: ""
            PresetSpeke20Video: ""
          RoleArn: ""
          Url: ""
          CertificateArn: ""
        EncryptionMethod: ""
    CreateOriginEndpoint_request_hlsPackage:
      description: An HTTP Live Streaming (HLS) packaging configuration.
      properties:
        AdMarkers:
          allOf:
          - $ref: '#/components/schemas/AdMarkers'
          - description: "This setting controls how ad markers are included in the\
              \ packaged OriginEndpoint.\n\"NONE\" will omit all SCTE-35 ad markers\
              \ from the output.\n\"PASSTHROUGH\" causes the manifest to contain a\
              \ copy of the SCTE-35 ad\nmarkers (comments) taken directly from the\
              \ input HTTP Live Streaming (HLS) manifest.\n\"SCTE35_ENHANCED\" generates\
              \ ad markers and blackout tags based on SCTE-35\nmessages in the input\
              \ source.\n\"DATERANGE\" inserts EXT-X-DATERANGE tags to signal ad and\
              \ program transition events \nin HLS and CMAF manifests. For this option,\
              \ you must set a programDateTimeIntervalSeconds value \nthat is greater\
              \ than 0.\n"
            xml:
              name: adMarkers
        AdTriggers:
          allOf:
          - $ref: '#/components/schemas/AdTriggers'
          - xml:
              name: adTriggers
        AdsOnDeliveryRestrictions:
          allOf:
          - $ref: '#/components/schemas/AdsOnDeliveryRestrictions'
          - xml:
              name: adsOnDeliveryRestrictions
        Encryption:
          $ref: '#/components/schemas/CreateOriginEndpoint_request_hlsPackage_Encryption'
        IncludeDvbSubtitles:
          allOf:
          - $ref: '#/components/schemas/__boolean'
          - description: "When enabled, MediaPackage passes through digital video\
              \ broadcasting (DVB) subtitles into the output."
            xml:
              name: includeDvbSubtitles
        IncludeIframeOnlyStream:
          allOf:
          - $ref: '#/components/schemas/__boolean'
          - description: "When enabled, an I-Frame only stream will be included in\
              \ the output."
            xml:
              name: includeIframeOnlyStream
        PlaylistType:
          allOf:
          - $ref: '#/components/schemas/PlaylistType'
          - description: |
              The HTTP Live Streaming (HLS) playlist type.
              When either "EVENT" or "VOD" is specified, a corresponding EXT-X-PLAYLIST-TYPE
              entry will be included in the media playlist.
            xml:
              name: playlistType
        PlaylistWindowSeconds:
          allOf:
          - $ref: '#/components/schemas/__integer'
          - description: Time window (in seconds) contained in each parent manifest.
            xml:
              name: playlistWindowSeconds
        ProgramDateTimeIntervalSeconds:
          allOf:
          - $ref: '#/components/schemas/__integer'
          - description: |
              The interval (in seconds) between each EXT-X-PROGRAM-DATE-TIME tag
              inserted into manifests. Additionally, when an interval is specified
              ID3Timed Metadata messages will be generated every 5 seconds using the
              ingest time of the content.
              If the interval is not specified, or set to 0, then
              no EXT-X-PROGRAM-DATE-TIME tags will be inserted into manifests and no
              ID3Timed Metadata messages will be generated. Note that irrespective
              of this parameter, if any ID3 Timed Metadata is found in HTTP Live Streaming (HLS) input,
              it will be passed through to HLS output.
            xml:
              name: programDateTimeIntervalSeconds
        SegmentDurationSeconds:
          allOf:
          - $ref: '#/components/schemas/__integer'
          - description: |
              Duration (in seconds) of each fragment. Actual fragments will be
              rounded to the nearest multiple of the source fragment duration.
            xml:
              name: segmentDurationSeconds
        StreamSelection:
          $ref: '#/components/schemas/CreateOriginEndpoint_request_cmafPackage_StreamSelection'
        UseAudioRenditionGroup:
          allOf:
          - $ref: '#/components/schemas/__boolean'
          - description: "When enabled, audio streams will be placed in rendition\
              \ groups in the output."
            xml:
              name: useAudioRenditionGroup
      type: object
    CreateOriginEndpoint_request_mssPackage_Encryption:
      allOf:
      - $ref: '#/components/schemas/MssEncryption'
      - xml:
          name: encryption
      example:
        SpekeKeyProvider:
          ResourceId: ""
          SystemIds: ""
          EncryptionContractConfiguration:
            PresetSpeke20Audio: ""
            PresetSpeke20Video: ""
          RoleArn: ""
          Url: ""
          CertificateArn: ""
    CreateOriginEndpoint_request_mssPackage:
      description: A Microsoft Smooth Streaming (MSS) packaging configuration.
      properties:
        Encryption:
          $ref: '#/components/schemas/CreateOriginEndpoint_request_mssPackage_Encryption'
        ManifestWindowSeconds:
          allOf:
          - $ref: '#/components/schemas/__integer'
          - description: The time window (in seconds) contained in each manifest.
            xml:
              name: manifestWindowSeconds
        SegmentDurationSeconds:
          allOf:
          - $ref: '#/components/schemas/__integer'
          - description: The duration (in seconds) of each segment.
            xml:
              name: segmentDurationSeconds
        StreamSelection:
          $ref: '#/components/schemas/CreateOriginEndpoint_request_cmafPackage_StreamSelection'
      type: object
    CreateOriginEndpoint_request:
      properties:
        authorization:
          $ref: '#/components/schemas/CreateOriginEndpoint_request_authorization'
        channelId:
          description: |
            The ID of the Channel that the OriginEndpoint will be associated with.
            This cannot be changed after the OriginEndpoint is created.
          type: string
        cmafPackage:
          $ref: '#/components/schemas/CreateOriginEndpoint_request_cmafPackage'
        dashPackage:
          $ref: '#/components/schemas/CreateOriginEndpoint_request_dashPackage'
        description:
          description: A short text description of the OriginEndpoint.
          type: string
        hlsPackage:
          $ref: '#/components/schemas/CreateOriginEndpoint_request_hlsPackage'
        id:
          description: |
            The ID of the OriginEndpoint.  The ID must be unique within the region
            and it cannot be changed after the OriginEndpoint is created.
          type: string
        manifestName:
          description: A short string that will be used as the filename of the OriginEndpoint
            URL (defaults to "index").
          type: string
        mssPackage:
          $ref: '#/components/schemas/CreateOriginEndpoint_request_mssPackage'
        origination:
          description: |
            Control whether origination of video is allowed for this OriginEndpoint. If set to ALLOW, the OriginEndpoint
            may by requested, pursuant to any other form of access control. If set to DENY, the OriginEndpoint may not be
            requested. This can be helpful for Live to VOD harvesting, or for temporarily disabling origination
          enum:
          - ALLOW
          - DENY
          type: string
        startoverWindowSeconds:
          description: |
            Maximum duration (seconds) of content to retain for startover playback.
            If not specified, startover playback will be disabled for the OriginEndpoint.
          type: integer
        tags:
          additionalProperties:
            $ref: '#/components/schemas/__string'
          description: A collection of tags associated with a resource
          type: object
        timeDelaySeconds:
          description: |
            Amount of delay (seconds) to enforce on the playback of live content.
            If not specified, there will be no time delay in effect for the OriginEndpoint.
          type: integer
        whitelist:
          description: A list of source IP CIDR blocks that will be allowed to access
            the OriginEndpoint.
          items:
            $ref: '#/components/schemas/__string'
          type: array
      required:
      - channelId
      - id
      type: object
    UpdateChannel_request:
      properties:
        description:
          description: A short text description of the Channel.
          type: string
      type: object
    UpdateOriginEndpoint_request:
      properties:
        authorization:
          $ref: '#/components/schemas/CreateOriginEndpoint_request_authorization'
        cmafPackage:
          $ref: '#/components/schemas/CreateOriginEndpoint_request_cmafPackage'
        dashPackage:
          $ref: '#/components/schemas/CreateOriginEndpoint_request_dashPackage'
        description:
          description: A short text description of the OriginEndpoint.
          type: string
        hlsPackage:
          $ref: '#/components/schemas/CreateOriginEndpoint_request_hlsPackage'
        manifestName:
          description: A short string that will be appended to the end of the Endpoint
            URL.
          type: string
        mssPackage:
          $ref: '#/components/schemas/CreateOriginEndpoint_request_mssPackage'
        origination:
          description: |
            Control whether origination of video is allowed for this OriginEndpoint. If set to ALLOW, the OriginEndpoint
            may by requested, pursuant to any other form of access control. If set to DENY, the OriginEndpoint may not be
            requested. This can be helpful for Live to VOD harvesting, or for temporarily disabling origination
          enum:
          - ALLOW
          - DENY
          type: string
        startoverWindowSeconds:
          description: |
            Maximum duration (in seconds) of content to retain for startover playback.
            If not specified, startover playback will be disabled for the OriginEndpoint.
          type: integer
        timeDelaySeconds:
          description: |
            Amount of delay (in seconds) to enforce on the playback of live content.
            If not specified, there will be no time delay in effect for the OriginEndpoint.
          type: integer
        whitelist:
          description: A list of source IP CIDR blocks that will be allowed to access
            the OriginEndpoint.
          items:
            $ref: '#/components/schemas/__string'
          type: array
      type: object
    TagResource_request:
      properties:
        tags:
          additionalProperties:
            $ref: '#/components/schemas/__string'
          description: ""
          type: object
      required:
      - tags
      type: object
    ConfigureLogsResponse_EgressAccessLogs:
      allOf:
      - $ref: '#/components/schemas/EgressAccessLogs'
      - xml:
          name: egressAccessLogs
      example:
        LogGroupName: ""
    ConfigureLogsResponse_HlsIngest:
      allOf:
      - $ref: '#/components/schemas/HlsIngest'
      - xml:
          name: hlsIngest
      example:
        IngestEndpoints: ""
    ConfigureLogsResponse_IngressAccessLogs:
      allOf:
      - $ref: '#/components/schemas/IngressAccessLogs'
      - xml:
          name: ingressAccessLogs
      example:
        LogGroupName: ""
    CreateHarvestJobResponse_S3Destination:
      allOf:
      - $ref: '#/components/schemas/S3Destination'
      - xml:
          name: s3Destination
      example:
        ManifestKey: ""
        BucketName: ""
        RoleArn: ""
    CreateOriginEndpointResponse_Authorization:
      allOf:
      - $ref: '#/components/schemas/Authorization'
      - xml:
          name: authorization
      example:
        SecretsRoleArn: ""
        CdnIdentifierSecret: ""
    CreateOriginEndpointResponse_CmafPackage:
      allOf:
      - $ref: '#/components/schemas/CmafPackage'
      - xml:
          name: cmafPackage
      example:
        SegmentPrefix: ""
        StreamSelection:
          MinVideoBitsPerSecond: ""
          StreamOrder: ""
          MaxVideoBitsPerSecond: ""
        SegmentDurationSeconds: ""
        Encryption:
          KeyRotationIntervalSeconds: ""
          ConstantInitializationVector: ""
          SpekeKeyProvider:
            ResourceId: ""
            SystemIds: ""
            EncryptionContractConfiguration:
              PresetSpeke20Audio: ""
              PresetSpeke20Video: ""
            RoleArn: ""
            Url: ""
            CertificateArn: ""
          EncryptionMethod: ""
        HlsManifests: ""
    CreateOriginEndpointResponse_DashPackage:
      allOf:
      - $ref: '#/components/schemas/DashPackage'
      - xml:
          name: dashPackage
      example:
        AdsOnDeliveryRestrictions: ""
        ManifestWindowSeconds: ""
        ManifestLayout: ""
        StreamSelection:
          MinVideoBitsPerSecond: ""
          StreamOrder: ""
          MaxVideoBitsPerSecond: ""
        IncludeIframeOnlyStream: ""
        Encryption:
          KeyRotationIntervalSeconds: ""
          SpekeKeyProvider:
            ResourceId: ""
            SystemIds: ""
            EncryptionContractConfiguration:
              PresetSpeke20Audio: ""
              PresetSpeke20Video: ""
            RoleArn: ""
            Url: ""
            CertificateArn: ""
        SegmentTemplateFormat: ""
        AdTriggers: ""
        Profile: ""
        PeriodTriggers: ""
        SuggestedPresentationDelaySeconds: ""
        UtcTiming: ""
        MinBufferTimeSeconds: ""
        SegmentDurationSeconds: ""
        MinUpdatePeriodSeconds: ""
        UtcTimingUri: ""
    CreateOriginEndpointResponse_HlsPackage:
      allOf:
      - $ref: '#/components/schemas/HlsPackage'
      - xml:
          name: hlsPackage
      example:
        AdsOnDeliveryRestrictions: ""
        AdMarkers: ""
        ProgramDateTimeIntervalSeconds: ""
        StreamSelection:
          MinVideoBitsPerSecond: ""
          StreamOrder: ""
          MaxVideoBitsPerSecond: ""
        PlaylistWindowSeconds: ""
        IncludeIframeOnlyStream: ""
        UseAudioRenditionGroup: ""
        SegmentDurationSeconds: ""
        Encryption:
          KeyRotationIntervalSeconds: ""
          RepeatExtXKey: ""
          ConstantInitializationVector: ""
          SpekeKeyProvider:
            ResourceId: ""
            SystemIds: ""
            EncryptionContractConfiguration:
              PresetSpeke20Audio: ""
              PresetSpeke20Video: ""
            RoleArn: ""
            Url: ""
            CertificateArn: ""
          EncryptionMethod: ""
        AdTriggers: ""
        IncludeDvbSubtitles: ""
        PlaylistType: ""
    CreateOriginEndpointResponse_MssPackage:
      allOf:
      - $ref: '#/components/schemas/MssPackage'
      - xml:
          name: mssPackage
      example:
        ManifestWindowSeconds: ""
        StreamSelection:
          MinVideoBitsPerSecond: ""
          StreamOrder: ""
          MaxVideoBitsPerSecond: ""
        SegmentDurationSeconds: ""
        Encryption:
          SpekeKeyProvider:
            ResourceId: ""
            SystemIds: ""
            EncryptionContractConfiguration:
              PresetSpeke20Audio: ""
              PresetSpeke20Video: ""
            RoleArn: ""
            Url: ""
            CertificateArn: ""
    CmafEncryption_SpekeKeyProvider:
      allOf:
      - $ref: '#/components/schemas/SpekeKeyProvider'
      - xml:
          name: spekeKeyProvider
      example:
        ResourceId: ""
        SystemIds: ""
        EncryptionContractConfiguration:
          PresetSpeke20Audio: ""
          PresetSpeke20Video: ""
        RoleArn: ""
        Url: ""
        CertificateArn: ""
    SpekeKeyProvider_EncryptionContractConfiguration:
      allOf:
      - $ref: '#/components/schemas/EncryptionContractConfiguration'
      - xml:
          name: encryptionContractConfiguration
      example:
        PresetSpeke20Audio: ""
        PresetSpeke20Video: ""
    CreateOriginEndpointRequest_CmafPackage:
      allOf:
      - $ref: '#/components/schemas/CmafPackageCreateOrUpdateParameters'
      - xml:
          name: cmafPackage
      example:
        SegmentPrefix: ""
        StreamSelection:
          MinVideoBitsPerSecond: ""
          StreamOrder: ""
          MaxVideoBitsPerSecond: ""
        SegmentDurationSeconds: ""
        Encryption:
          KeyRotationIntervalSeconds: ""
          ConstantInitializationVector: ""
          SpekeKeyProvider:
            ResourceId: ""
            SystemIds: ""
            EncryptionContractConfiguration:
              PresetSpeke20Audio: ""
              PresetSpeke20Video: ""
            RoleArn: ""
            Url: ""
            CertificateArn: ""
          EncryptionMethod: ""
        HlsManifests: ""
  securitySchemes:
    hmac:
      description: Amazon Signature authorization v4
      in: header
      name: Authorization
      type: apiKey
      x-amazon-apigateway-authtype: awsSigv4
x-hasEquivalentPaths: true

