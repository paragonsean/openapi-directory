/*
 * AWS Elemental MediaPackage
 * AWS Elemental MediaPackage
 *
 * The version of the OpenAPI document: 2017-10-12
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;
import org.openapitools.client.model.CreateHarvestJobResponseS3Destination;
import org.openapitools.client.model.Status;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * DescribeHarvestJobResponse
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T12:13:13.054796-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class DescribeHarvestJobResponse {
  public static final String SERIALIZED_NAME_ARN = "Arn";
  @SerializedName(SERIALIZED_NAME_ARN)
  private String arn;

  public static final String SERIALIZED_NAME_CHANNEL_ID = "ChannelId";
  @SerializedName(SERIALIZED_NAME_CHANNEL_ID)
  private String channelId;

  public static final String SERIALIZED_NAME_CREATED_AT = "CreatedAt";
  @SerializedName(SERIALIZED_NAME_CREATED_AT)
  private String createdAt;

  public static final String SERIALIZED_NAME_END_TIME = "EndTime";
  @SerializedName(SERIALIZED_NAME_END_TIME)
  private String endTime;

  public static final String SERIALIZED_NAME_ID = "Id";
  @SerializedName(SERIALIZED_NAME_ID)
  private String id;

  public static final String SERIALIZED_NAME_ORIGIN_ENDPOINT_ID = "OriginEndpointId";
  @SerializedName(SERIALIZED_NAME_ORIGIN_ENDPOINT_ID)
  private String originEndpointId;

  public static final String SERIALIZED_NAME_S3_DESTINATION = "S3Destination";
  @SerializedName(SERIALIZED_NAME_S3_DESTINATION)
  private CreateHarvestJobResponseS3Destination s3Destination;

  public static final String SERIALIZED_NAME_START_TIME = "StartTime";
  @SerializedName(SERIALIZED_NAME_START_TIME)
  private String startTime;

  public static final String SERIALIZED_NAME_STATUS = "Status";
  @SerializedName(SERIALIZED_NAME_STATUS)
  private Status status;

  public DescribeHarvestJobResponse() {
  }

  public DescribeHarvestJobResponse arn(String arn) {
    this.arn = arn;
    return this;
  }

  /**
   * Get arn
   * @return arn
   */
  @javax.annotation.Nullable
  public String getArn() {
    return arn;
  }

  public void setArn(String arn) {
    this.arn = arn;
  }


  public DescribeHarvestJobResponse channelId(String channelId) {
    this.channelId = channelId;
    return this;
  }

  /**
   * Get channelId
   * @return channelId
   */
  @javax.annotation.Nullable
  public String getChannelId() {
    return channelId;
  }

  public void setChannelId(String channelId) {
    this.channelId = channelId;
  }


  public DescribeHarvestJobResponse createdAt(String createdAt) {
    this.createdAt = createdAt;
    return this;
  }

  /**
   * Get createdAt
   * @return createdAt
   */
  @javax.annotation.Nullable
  public String getCreatedAt() {
    return createdAt;
  }

  public void setCreatedAt(String createdAt) {
    this.createdAt = createdAt;
  }


  public DescribeHarvestJobResponse endTime(String endTime) {
    this.endTime = endTime;
    return this;
  }

  /**
   * Get endTime
   * @return endTime
   */
  @javax.annotation.Nullable
  public String getEndTime() {
    return endTime;
  }

  public void setEndTime(String endTime) {
    this.endTime = endTime;
  }


  public DescribeHarvestJobResponse id(String id) {
    this.id = id;
    return this;
  }

  /**
   * Get id
   * @return id
   */
  @javax.annotation.Nullable
  public String getId() {
    return id;
  }

  public void setId(String id) {
    this.id = id;
  }


  public DescribeHarvestJobResponse originEndpointId(String originEndpointId) {
    this.originEndpointId = originEndpointId;
    return this;
  }

  /**
   * Get originEndpointId
   * @return originEndpointId
   */
  @javax.annotation.Nullable
  public String getOriginEndpointId() {
    return originEndpointId;
  }

  public void setOriginEndpointId(String originEndpointId) {
    this.originEndpointId = originEndpointId;
  }


  public DescribeHarvestJobResponse s3Destination(CreateHarvestJobResponseS3Destination s3Destination) {
    this.s3Destination = s3Destination;
    return this;
  }

  /**
   * Get s3Destination
   * @return s3Destination
   */
  @javax.annotation.Nullable
  public CreateHarvestJobResponseS3Destination getS3Destination() {
    return s3Destination;
  }

  public void setS3Destination(CreateHarvestJobResponseS3Destination s3Destination) {
    this.s3Destination = s3Destination;
  }


  public DescribeHarvestJobResponse startTime(String startTime) {
    this.startTime = startTime;
    return this;
  }

  /**
   * Get startTime
   * @return startTime
   */
  @javax.annotation.Nullable
  public String getStartTime() {
    return startTime;
  }

  public void setStartTime(String startTime) {
    this.startTime = startTime;
  }


  public DescribeHarvestJobResponse status(Status status) {
    this.status = status;
    return this;
  }

  /**
   * Get status
   * @return status
   */
  @javax.annotation.Nullable
  public Status getStatus() {
    return status;
  }

  public void setStatus(Status status) {
    this.status = status;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    DescribeHarvestJobResponse describeHarvestJobResponse = (DescribeHarvestJobResponse) o;
    return Objects.equals(this.arn, describeHarvestJobResponse.arn) &&
        Objects.equals(this.channelId, describeHarvestJobResponse.channelId) &&
        Objects.equals(this.createdAt, describeHarvestJobResponse.createdAt) &&
        Objects.equals(this.endTime, describeHarvestJobResponse.endTime) &&
        Objects.equals(this.id, describeHarvestJobResponse.id) &&
        Objects.equals(this.originEndpointId, describeHarvestJobResponse.originEndpointId) &&
        Objects.equals(this.s3Destination, describeHarvestJobResponse.s3Destination) &&
        Objects.equals(this.startTime, describeHarvestJobResponse.startTime) &&
        Objects.equals(this.status, describeHarvestJobResponse.status);
  }

  @Override
  public int hashCode() {
    return Objects.hash(arn, channelId, createdAt, endTime, id, originEndpointId, s3Destination, startTime, status);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class DescribeHarvestJobResponse {\n");
    sb.append("    arn: ").append(toIndentedString(arn)).append("\n");
    sb.append("    channelId: ").append(toIndentedString(channelId)).append("\n");
    sb.append("    createdAt: ").append(toIndentedString(createdAt)).append("\n");
    sb.append("    endTime: ").append(toIndentedString(endTime)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    originEndpointId: ").append(toIndentedString(originEndpointId)).append("\n");
    sb.append("    s3Destination: ").append(toIndentedString(s3Destination)).append("\n");
    sb.append("    startTime: ").append(toIndentedString(startTime)).append("\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("Arn");
    openapiFields.add("ChannelId");
    openapiFields.add("CreatedAt");
    openapiFields.add("EndTime");
    openapiFields.add("Id");
    openapiFields.add("OriginEndpointId");
    openapiFields.add("S3Destination");
    openapiFields.add("StartTime");
    openapiFields.add("Status");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to DescribeHarvestJobResponse
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!DescribeHarvestJobResponse.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in DescribeHarvestJobResponse is not found in the empty JSON string", DescribeHarvestJobResponse.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!DescribeHarvestJobResponse.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `DescribeHarvestJobResponse` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // validate the optional field `Arn`
      if (jsonObj.get("Arn") != null && !jsonObj.get("Arn").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("Arn"));
      }
      // validate the optional field `ChannelId`
      if (jsonObj.get("ChannelId") != null && !jsonObj.get("ChannelId").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("ChannelId"));
      }
      // validate the optional field `CreatedAt`
      if (jsonObj.get("CreatedAt") != null && !jsonObj.get("CreatedAt").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("CreatedAt"));
      }
      // validate the optional field `EndTime`
      if (jsonObj.get("EndTime") != null && !jsonObj.get("EndTime").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("EndTime"));
      }
      // validate the optional field `Id`
      if (jsonObj.get("Id") != null && !jsonObj.get("Id").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("Id"));
      }
      // validate the optional field `OriginEndpointId`
      if (jsonObj.get("OriginEndpointId") != null && !jsonObj.get("OriginEndpointId").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("OriginEndpointId"));
      }
      // validate the optional field `S3Destination`
      if (jsonObj.get("S3Destination") != null && !jsonObj.get("S3Destination").isJsonNull()) {
        CreateHarvestJobResponseS3Destination.validateJsonElement(jsonObj.get("S3Destination"));
      }
      // validate the optional field `StartTime`
      if (jsonObj.get("StartTime") != null && !jsonObj.get("StartTime").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("StartTime"));
      }
      // validate the optional field `Status`
      if (jsonObj.get("Status") != null && !jsonObj.get("Status").isJsonNull()) {
        Status.validateJsonElement(jsonObj.get("Status"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!DescribeHarvestJobResponse.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'DescribeHarvestJobResponse' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<DescribeHarvestJobResponse> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(DescribeHarvestJobResponse.class));

       return (TypeAdapter<T>) new TypeAdapter<DescribeHarvestJobResponse>() {
           @Override
           public void write(JsonWriter out, DescribeHarvestJobResponse value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public DescribeHarvestJobResponse read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of DescribeHarvestJobResponse given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of DescribeHarvestJobResponse
   * @throws IOException if the JSON string is invalid with respect to DescribeHarvestJobResponse
   */
  public static DescribeHarvestJobResponse fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, DescribeHarvestJobResponse.class);
  }

  /**
   * Convert an instance of DescribeHarvestJobResponse to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

