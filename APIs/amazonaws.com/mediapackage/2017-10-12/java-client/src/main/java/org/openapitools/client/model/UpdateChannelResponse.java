/*
 * AWS Elemental MediaPackage
 * AWS Elemental MediaPackage
 *
 * The version of the OpenAPI document: 2017-10-12
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;
import java.util.Map;
import org.openapitools.client.model.ConfigureLogsResponseEgressAccessLogs;
import org.openapitools.client.model.ConfigureLogsResponseHlsIngest;
import org.openapitools.client.model.ConfigureLogsResponseIngressAccessLogs;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * UpdateChannelResponse
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T12:13:13.054796-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class UpdateChannelResponse {
  public static final String SERIALIZED_NAME_ARN = "Arn";
  @SerializedName(SERIALIZED_NAME_ARN)
  private String arn;

  public static final String SERIALIZED_NAME_CREATED_AT = "CreatedAt";
  @SerializedName(SERIALIZED_NAME_CREATED_AT)
  private String createdAt;

  public static final String SERIALIZED_NAME_DESCRIPTION = "Description";
  @SerializedName(SERIALIZED_NAME_DESCRIPTION)
  private String description;

  public static final String SERIALIZED_NAME_EGRESS_ACCESS_LOGS = "EgressAccessLogs";
  @SerializedName(SERIALIZED_NAME_EGRESS_ACCESS_LOGS)
  private ConfigureLogsResponseEgressAccessLogs egressAccessLogs;

  public static final String SERIALIZED_NAME_HLS_INGEST = "HlsIngest";
  @SerializedName(SERIALIZED_NAME_HLS_INGEST)
  private ConfigureLogsResponseHlsIngest hlsIngest;

  public static final String SERIALIZED_NAME_ID = "Id";
  @SerializedName(SERIALIZED_NAME_ID)
  private String id;

  public static final String SERIALIZED_NAME_INGRESS_ACCESS_LOGS = "IngressAccessLogs";
  @SerializedName(SERIALIZED_NAME_INGRESS_ACCESS_LOGS)
  private ConfigureLogsResponseIngressAccessLogs ingressAccessLogs;

  public static final String SERIALIZED_NAME_TAGS = "Tags";
  @SerializedName(SERIALIZED_NAME_TAGS)
  private Map tags;

  public UpdateChannelResponse() {
  }

  public UpdateChannelResponse arn(String arn) {
    this.arn = arn;
    return this;
  }

  /**
   * Get arn
   * @return arn
   */
  @javax.annotation.Nullable
  public String getArn() {
    return arn;
  }

  public void setArn(String arn) {
    this.arn = arn;
  }


  public UpdateChannelResponse createdAt(String createdAt) {
    this.createdAt = createdAt;
    return this;
  }

  /**
   * Get createdAt
   * @return createdAt
   */
  @javax.annotation.Nullable
  public String getCreatedAt() {
    return createdAt;
  }

  public void setCreatedAt(String createdAt) {
    this.createdAt = createdAt;
  }


  public UpdateChannelResponse description(String description) {
    this.description = description;
    return this;
  }

  /**
   * Get description
   * @return description
   */
  @javax.annotation.Nullable
  public String getDescription() {
    return description;
  }

  public void setDescription(String description) {
    this.description = description;
  }


  public UpdateChannelResponse egressAccessLogs(ConfigureLogsResponseEgressAccessLogs egressAccessLogs) {
    this.egressAccessLogs = egressAccessLogs;
    return this;
  }

  /**
   * Get egressAccessLogs
   * @return egressAccessLogs
   */
  @javax.annotation.Nullable
  public ConfigureLogsResponseEgressAccessLogs getEgressAccessLogs() {
    return egressAccessLogs;
  }

  public void setEgressAccessLogs(ConfigureLogsResponseEgressAccessLogs egressAccessLogs) {
    this.egressAccessLogs = egressAccessLogs;
  }


  public UpdateChannelResponse hlsIngest(ConfigureLogsResponseHlsIngest hlsIngest) {
    this.hlsIngest = hlsIngest;
    return this;
  }

  /**
   * Get hlsIngest
   * @return hlsIngest
   */
  @javax.annotation.Nullable
  public ConfigureLogsResponseHlsIngest getHlsIngest() {
    return hlsIngest;
  }

  public void setHlsIngest(ConfigureLogsResponseHlsIngest hlsIngest) {
    this.hlsIngest = hlsIngest;
  }


  public UpdateChannelResponse id(String id) {
    this.id = id;
    return this;
  }

  /**
   * Get id
   * @return id
   */
  @javax.annotation.Nullable
  public String getId() {
    return id;
  }

  public void setId(String id) {
    this.id = id;
  }


  public UpdateChannelResponse ingressAccessLogs(ConfigureLogsResponseIngressAccessLogs ingressAccessLogs) {
    this.ingressAccessLogs = ingressAccessLogs;
    return this;
  }

  /**
   * Get ingressAccessLogs
   * @return ingressAccessLogs
   */
  @javax.annotation.Nullable
  public ConfigureLogsResponseIngressAccessLogs getIngressAccessLogs() {
    return ingressAccessLogs;
  }

  public void setIngressAccessLogs(ConfigureLogsResponseIngressAccessLogs ingressAccessLogs) {
    this.ingressAccessLogs = ingressAccessLogs;
  }


  public UpdateChannelResponse tags(Map tags) {
    this.tags = tags;
    return this;
  }

  /**
   * Get tags
   * @return tags
   */
  @javax.annotation.Nullable
  public Map getTags() {
    return tags;
  }

  public void setTags(Map tags) {
    this.tags = tags;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    UpdateChannelResponse updateChannelResponse = (UpdateChannelResponse) o;
    return Objects.equals(this.arn, updateChannelResponse.arn) &&
        Objects.equals(this.createdAt, updateChannelResponse.createdAt) &&
        Objects.equals(this.description, updateChannelResponse.description) &&
        Objects.equals(this.egressAccessLogs, updateChannelResponse.egressAccessLogs) &&
        Objects.equals(this.hlsIngest, updateChannelResponse.hlsIngest) &&
        Objects.equals(this.id, updateChannelResponse.id) &&
        Objects.equals(this.ingressAccessLogs, updateChannelResponse.ingressAccessLogs) &&
        Objects.equals(this.tags, updateChannelResponse.tags);
  }

  @Override
  public int hashCode() {
    return Objects.hash(arn, createdAt, description, egressAccessLogs, hlsIngest, id, ingressAccessLogs, tags);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class UpdateChannelResponse {\n");
    sb.append("    arn: ").append(toIndentedString(arn)).append("\n");
    sb.append("    createdAt: ").append(toIndentedString(createdAt)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    egressAccessLogs: ").append(toIndentedString(egressAccessLogs)).append("\n");
    sb.append("    hlsIngest: ").append(toIndentedString(hlsIngest)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    ingressAccessLogs: ").append(toIndentedString(ingressAccessLogs)).append("\n");
    sb.append("    tags: ").append(toIndentedString(tags)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("Arn");
    openapiFields.add("CreatedAt");
    openapiFields.add("Description");
    openapiFields.add("EgressAccessLogs");
    openapiFields.add("HlsIngest");
    openapiFields.add("Id");
    openapiFields.add("IngressAccessLogs");
    openapiFields.add("Tags");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to UpdateChannelResponse
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!UpdateChannelResponse.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in UpdateChannelResponse is not found in the empty JSON string", UpdateChannelResponse.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!UpdateChannelResponse.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `UpdateChannelResponse` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // validate the optional field `Arn`
      if (jsonObj.get("Arn") != null && !jsonObj.get("Arn").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("Arn"));
      }
      // validate the optional field `CreatedAt`
      if (jsonObj.get("CreatedAt") != null && !jsonObj.get("CreatedAt").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("CreatedAt"));
      }
      // validate the optional field `Description`
      if (jsonObj.get("Description") != null && !jsonObj.get("Description").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("Description"));
      }
      // validate the optional field `EgressAccessLogs`
      if (jsonObj.get("EgressAccessLogs") != null && !jsonObj.get("EgressAccessLogs").isJsonNull()) {
        ConfigureLogsResponseEgressAccessLogs.validateJsonElement(jsonObj.get("EgressAccessLogs"));
      }
      // validate the optional field `HlsIngest`
      if (jsonObj.get("HlsIngest") != null && !jsonObj.get("HlsIngest").isJsonNull()) {
        ConfigureLogsResponseHlsIngest.validateJsonElement(jsonObj.get("HlsIngest"));
      }
      // validate the optional field `Id`
      if (jsonObj.get("Id") != null && !jsonObj.get("Id").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("Id"));
      }
      // validate the optional field `IngressAccessLogs`
      if (jsonObj.get("IngressAccessLogs") != null && !jsonObj.get("IngressAccessLogs").isJsonNull()) {
        ConfigureLogsResponseIngressAccessLogs.validateJsonElement(jsonObj.get("IngressAccessLogs"));
      }
      // validate the optional field `Tags`
      if (jsonObj.get("Tags") != null && !jsonObj.get("Tags").isJsonNull()) {
        Map.validateJsonElement(jsonObj.get("Tags"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!UpdateChannelResponse.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'UpdateChannelResponse' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<UpdateChannelResponse> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(UpdateChannelResponse.class));

       return (TypeAdapter<T>) new TypeAdapter<UpdateChannelResponse>() {
           @Override
           public void write(JsonWriter out, UpdateChannelResponse value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public UpdateChannelResponse read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of UpdateChannelResponse given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of UpdateChannelResponse
   * @throws IOException if the JSON string is invalid with respect to UpdateChannelResponse
   */
  public static UpdateChannelResponse fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, UpdateChannelResponse.class);
  }

  /**
   * Convert an instance of UpdateChannelResponse to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

