# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.ad_markers import AdMarkers
from openapi_server.models.ads_on_delivery_restrictions import AdsOnDeliveryRestrictions
from openapi_server.models.playlist_type import PlaylistType
from openapi_server import util


class HlsManifest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, ad_markers: AdMarkers=None, id: str=None, include_iframe_only_stream: bool=None, manifest_name: str=None, playlist_type: PlaylistType=None, playlist_window_seconds: int=None, program_date_time_interval_seconds: int=None, url: str=None, ad_triggers: List=None, ads_on_delivery_restrictions: AdsOnDeliveryRestrictions=None):
        """HlsManifest - a model defined in OpenAPI

        :param ad_markers: The ad_markers of this HlsManifest.
        :param id: The id of this HlsManifest.
        :param include_iframe_only_stream: The include_iframe_only_stream of this HlsManifest.
        :param manifest_name: The manifest_name of this HlsManifest.
        :param playlist_type: The playlist_type of this HlsManifest.
        :param playlist_window_seconds: The playlist_window_seconds of this HlsManifest.
        :param program_date_time_interval_seconds: The program_date_time_interval_seconds of this HlsManifest.
        :param url: The url of this HlsManifest.
        :param ad_triggers: The ad_triggers of this HlsManifest.
        :param ads_on_delivery_restrictions: The ads_on_delivery_restrictions of this HlsManifest.
        """
        self.openapi_types = {
            'ad_markers': AdMarkers,
            'id': str,
            'include_iframe_only_stream': bool,
            'manifest_name': str,
            'playlist_type': PlaylistType,
            'playlist_window_seconds': int,
            'program_date_time_interval_seconds': int,
            'url': str,
            'ad_triggers': List,
            'ads_on_delivery_restrictions': AdsOnDeliveryRestrictions
        }

        self.attribute_map = {
            'ad_markers': 'AdMarkers',
            'id': 'Id',
            'include_iframe_only_stream': 'IncludeIframeOnlyStream',
            'manifest_name': 'ManifestName',
            'playlist_type': 'PlaylistType',
            'playlist_window_seconds': 'PlaylistWindowSeconds',
            'program_date_time_interval_seconds': 'ProgramDateTimeIntervalSeconds',
            'url': 'Url',
            'ad_triggers': 'AdTriggers',
            'ads_on_delivery_restrictions': 'AdsOnDeliveryRestrictions'
        }

        self._ad_markers = ad_markers
        self._id = id
        self._include_iframe_only_stream = include_iframe_only_stream
        self._manifest_name = manifest_name
        self._playlist_type = playlist_type
        self._playlist_window_seconds = playlist_window_seconds
        self._program_date_time_interval_seconds = program_date_time_interval_seconds
        self._url = url
        self._ad_triggers = ad_triggers
        self._ads_on_delivery_restrictions = ads_on_delivery_restrictions

    @classmethod
    def from_dict(cls, dikt: dict) -> 'HlsManifest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The HlsManifest of this HlsManifest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def ad_markers(self):
        """Gets the ad_markers of this HlsManifest.


        :return: The ad_markers of this HlsManifest.
        :rtype: AdMarkers
        """
        return self._ad_markers

    @ad_markers.setter
    def ad_markers(self, ad_markers):
        """Sets the ad_markers of this HlsManifest.


        :param ad_markers: The ad_markers of this HlsManifest.
        :type ad_markers: AdMarkers
        """

        self._ad_markers = ad_markers

    @property
    def id(self):
        """Gets the id of this HlsManifest.


        :return: The id of this HlsManifest.
        :rtype: str
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this HlsManifest.


        :param id: The id of this HlsManifest.
        :type id: str
        """
        if id is None:
            raise ValueError("Invalid value for `id`, must not be `None`")

        self._id = id

    @property
    def include_iframe_only_stream(self):
        """Gets the include_iframe_only_stream of this HlsManifest.


        :return: The include_iframe_only_stream of this HlsManifest.
        :rtype: bool
        """
        return self._include_iframe_only_stream

    @include_iframe_only_stream.setter
    def include_iframe_only_stream(self, include_iframe_only_stream):
        """Sets the include_iframe_only_stream of this HlsManifest.


        :param include_iframe_only_stream: The include_iframe_only_stream of this HlsManifest.
        :type include_iframe_only_stream: bool
        """

        self._include_iframe_only_stream = include_iframe_only_stream

    @property
    def manifest_name(self):
        """Gets the manifest_name of this HlsManifest.


        :return: The manifest_name of this HlsManifest.
        :rtype: str
        """
        return self._manifest_name

    @manifest_name.setter
    def manifest_name(self, manifest_name):
        """Sets the manifest_name of this HlsManifest.


        :param manifest_name: The manifest_name of this HlsManifest.
        :type manifest_name: str
        """

        self._manifest_name = manifest_name

    @property
    def playlist_type(self):
        """Gets the playlist_type of this HlsManifest.


        :return: The playlist_type of this HlsManifest.
        :rtype: PlaylistType
        """
        return self._playlist_type

    @playlist_type.setter
    def playlist_type(self, playlist_type):
        """Sets the playlist_type of this HlsManifest.


        :param playlist_type: The playlist_type of this HlsManifest.
        :type playlist_type: PlaylistType
        """

        self._playlist_type = playlist_type

    @property
    def playlist_window_seconds(self):
        """Gets the playlist_window_seconds of this HlsManifest.


        :return: The playlist_window_seconds of this HlsManifest.
        :rtype: int
        """
        return self._playlist_window_seconds

    @playlist_window_seconds.setter
    def playlist_window_seconds(self, playlist_window_seconds):
        """Sets the playlist_window_seconds of this HlsManifest.


        :param playlist_window_seconds: The playlist_window_seconds of this HlsManifest.
        :type playlist_window_seconds: int
        """

        self._playlist_window_seconds = playlist_window_seconds

    @property
    def program_date_time_interval_seconds(self):
        """Gets the program_date_time_interval_seconds of this HlsManifest.


        :return: The program_date_time_interval_seconds of this HlsManifest.
        :rtype: int
        """
        return self._program_date_time_interval_seconds

    @program_date_time_interval_seconds.setter
    def program_date_time_interval_seconds(self, program_date_time_interval_seconds):
        """Sets the program_date_time_interval_seconds of this HlsManifest.


        :param program_date_time_interval_seconds: The program_date_time_interval_seconds of this HlsManifest.
        :type program_date_time_interval_seconds: int
        """

        self._program_date_time_interval_seconds = program_date_time_interval_seconds

    @property
    def url(self):
        """Gets the url of this HlsManifest.


        :return: The url of this HlsManifest.
        :rtype: str
        """
        return self._url

    @url.setter
    def url(self, url):
        """Sets the url of this HlsManifest.


        :param url: The url of this HlsManifest.
        :type url: str
        """

        self._url = url

    @property
    def ad_triggers(self):
        """Gets the ad_triggers of this HlsManifest.


        :return: The ad_triggers of this HlsManifest.
        :rtype: List
        """
        return self._ad_triggers

    @ad_triggers.setter
    def ad_triggers(self, ad_triggers):
        """Sets the ad_triggers of this HlsManifest.


        :param ad_triggers: The ad_triggers of this HlsManifest.
        :type ad_triggers: List
        """

        self._ad_triggers = ad_triggers

    @property
    def ads_on_delivery_restrictions(self):
        """Gets the ads_on_delivery_restrictions of this HlsManifest.


        :return: The ads_on_delivery_restrictions of this HlsManifest.
        :rtype: AdsOnDeliveryRestrictions
        """
        return self._ads_on_delivery_restrictions

    @ads_on_delivery_restrictions.setter
    def ads_on_delivery_restrictions(self, ads_on_delivery_restrictions):
        """Sets the ads_on_delivery_restrictions of this HlsManifest.


        :param ads_on_delivery_restrictions: The ads_on_delivery_restrictions of this HlsManifest.
        :type ads_on_delivery_restrictions: AdsOnDeliveryRestrictions
        """

        self._ads_on_delivery_restrictions = ads_on_delivery_restrictions
