# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class ConfigureLogsResponseIngressAccessLogs(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, log_group_name: str=None):
        """ConfigureLogsResponseIngressAccessLogs - a model defined in OpenAPI

        :param log_group_name: The log_group_name of this ConfigureLogsResponseIngressAccessLogs.
        """
        self.openapi_types = {
            'log_group_name': str
        }

        self.attribute_map = {
            'log_group_name': 'LogGroupName'
        }

        self._log_group_name = log_group_name

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ConfigureLogsResponseIngressAccessLogs':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ConfigureLogsResponse_IngressAccessLogs of this ConfigureLogsResponseIngressAccessLogs.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def log_group_name(self):
        """Gets the log_group_name of this ConfigureLogsResponseIngressAccessLogs.


        :return: The log_group_name of this ConfigureLogsResponseIngressAccessLogs.
        :rtype: str
        """
        return self._log_group_name

    @log_group_name.setter
    def log_group_name(self, log_group_name):
        """Sets the log_group_name of this ConfigureLogsResponseIngressAccessLogs.


        :param log_group_name: The log_group_name of this ConfigureLogsResponseIngressAccessLogs.
        :type log_group_name: str
        """

        self._log_group_name = log_group_name
