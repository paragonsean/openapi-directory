openapi: 3.0.0
info:
  contact:
    email: mike.ralphson@gmail.com
    name: Mike Ralphson
    url: https://github.com/mermade/aws2openapi
    x-twitter: PermittedSoc
  description: AWS Elemental MediaPackage
  license:
    name: Apache 2.0 License
    url: http://www.apache.org/licenses/
  termsOfService: https://aws.amazon.com/service-terms/
  title: AWS Elemental MediaPackage
  version: 2017-10-12
  x-release: v4
  x-logo:
    url: https://twitter.com/awscloud/profile_image?size=original
    backgroundColor: '#FFFFFF'
  x-providerName: amazonaws.com
  x-serviceName: mediapackage
  x-aws-signingName: mediapackage
  x-origin:
  - contentType: application/json
    url: https://raw.githubusercontent.com/aws/aws-sdk-js/master/apis/mediapackage-2017-10-12.normal.json
    converter:
      url: https://github.com/mermade/aws2openapi
      version: 1.0.0
    x-apisguru-driver: external
  x-apiClientRegistration:
    url: https://portal.aws.amazon.com/gp/aws/developer/registration/index.html?nc2=h_ct
  x-apisguru-categories:
  - cloud
  x-preferred: true
externalDocs:
  description: Amazon Web Services documentation
  url: https://docs.aws.amazon.com/mediapackage/
servers:
- description: The MediaPackage multi-region endpoint
  url: "http://mediapackage.{region}.amazonaws.com"
  variables:
    region:
      default: us-east-1
      description: The AWS region
      enum:
      - us-east-1
      - us-east-2
      - us-west-1
      - us-west-2
      - us-gov-west-1
      - us-gov-east-1
      - ca-central-1
      - eu-north-1
      - eu-west-1
      - eu-west-2
      - eu-west-3
      - eu-central-1
      - eu-south-1
      - af-south-1
      - ap-northeast-1
      - ap-northeast-2
      - ap-northeast-3
      - ap-southeast-1
      - ap-southeast-2
      - ap-east-1
      - ap-south-1
      - sa-east-1
      - me-south-1
- description: The MediaPackage multi-region endpoint
  url: "https://mediapackage.{region}.amazonaws.com"
  variables:
    region:
      default: us-east-1
      description: The AWS region
      enum:
      - us-east-1
      - us-east-2
      - us-west-1
      - us-west-2
      - us-gov-west-1
      - us-gov-east-1
      - ca-central-1
      - eu-north-1
      - eu-west-1
      - eu-west-2
      - eu-west-3
      - eu-central-1
      - eu-south-1
      - af-south-1
      - ap-northeast-1
      - ap-northeast-2
      - ap-northeast-3
      - ap-southeast-1
      - ap-southeast-2
      - ap-east-1
      - ap-south-1
      - sa-east-1
      - me-south-1
- description: The MediaPackage endpoint for China (Beijing) and China (Ningxia)
  url: "http://mediapackage.{region}.amazonaws.com.cn"
  variables:
    region:
      default: cn-north-1
      description: The AWS region
      enum:
      - cn-north-1
      - cn-northwest-1
- description: The MediaPackage endpoint for China (Beijing) and China (Ningxia)
  url: "https://mediapackage.{region}.amazonaws.com.cn"
  variables:
    region:
      default: cn-north-1
      description: The AWS region
      enum:
      - cn-north-1
      - cn-northwest-1
security:
- hmac: []
paths:
  /channels:
    get:
      description: Returns a collection of Channels.
      operationId: list_channels
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: Upper bound on number of records to return.
        explode: true
        in: query
        name: maxResults
        required: false
        schema:
          maximum: 1000
          minimum: 1
          type: integer
        style: form
      - description: A token used to resume pagination from the end of a previous
          request.
        explode: true
        in: query
        name: nextToken
        required: false
        schema:
          type: string
        style: form
      - description: Pagination limit
        explode: true
        in: query
        name: MaxResults
        required: false
        schema:
          type: string
        style: form
      - description: Pagination token
        explode: true
        in: query
        name: NextToken
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListChannelsResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnprocessableEntityException'
          description: UnprocessableEntityException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
          description: InternalServerErrorException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
          description: ForbiddenException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
          description: NotFoundException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
          description: ServiceUnavailableException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
          description: TooManyRequestsException
      x-openapi-router-controller: openapi_server.controllers.default_controller
    post:
      description: Creates a new Channel.
      operationId: create_channel
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateChannel_request'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateChannelResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnprocessableEntityException'
          description: UnprocessableEntityException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
          description: InternalServerErrorException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
          description: ForbiddenException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
          description: NotFoundException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
          description: ServiceUnavailableException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
          description: TooManyRequestsException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /channels/{id}:
    delete:
      description: Deletes an existing Channel.
      operationId: delete_channel
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The ID of the Channel to delete.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "202":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteChannelResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnprocessableEntityException'
          description: UnprocessableEntityException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
          description: InternalServerErrorException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
          description: ForbiddenException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
          description: NotFoundException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
          description: ServiceUnavailableException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
          description: TooManyRequestsException
      x-openapi-router-controller: openapi_server.controllers.default_controller
    get:
      description: Gets details about a Channel.
      operationId: describe_channel
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The ID of a Channel.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DescribeChannelResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnprocessableEntityException'
          description: UnprocessableEntityException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
          description: InternalServerErrorException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
          description: ForbiddenException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
          description: NotFoundException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
          description: ServiceUnavailableException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
          description: TooManyRequestsException
      x-openapi-router-controller: openapi_server.controllers.default_controller
    put:
      description: Updates an existing Channel.
      operationId: update_channel
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The ID of the Channel to update.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateChannel_request'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateChannelResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnprocessableEntityException'
          description: UnprocessableEntityException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
          description: InternalServerErrorException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
          description: ForbiddenException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
          description: NotFoundException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
          description: ServiceUnavailableException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
          description: TooManyRequestsException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /channels/{id}/configure_logs:
    put:
      description: Changes the Channel's properities to configure log subscription
      operationId: configure_logs
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The ID of the channel to log subscription.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ConfigureLogs_request'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConfigureLogsResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnprocessableEntityException'
          description: UnprocessableEntityException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
          description: InternalServerErrorException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
          description: ForbiddenException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
          description: NotFoundException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
          description: ServiceUnavailableException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
          description: TooManyRequestsException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /channels/{id}/credentials:
    put:
      deprecated: true
      description: Changes the Channel's first IngestEndpoint's username and password.
        WARNING - This API is deprecated. Please use RotateIngestEndpointCredentials
        instead
      operationId: rotate_channel_credentials
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The ID of the channel to update.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RotateChannelCredentialsResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnprocessableEntityException'
          description: UnprocessableEntityException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
          description: InternalServerErrorException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
          description: ForbiddenException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
          description: NotFoundException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
          description: ServiceUnavailableException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
          description: TooManyRequestsException
      x-openapi-router-controller: openapi_server.controllers.default_controller
  /channels/{id}/ingest_endpoints/{ingest_endpoint_id}/credentials:
    put:
      description: "Rotate the IngestEndpoint's username and password, as specified\
        \ by the IngestEndpoint's id."
      operationId: rotate_ingest_endpoint_credentials
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The ID of the channel the IngestEndpoint is on.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - description: The id of the IngestEndpoint whose credentials should be rotated
        explode: false
        in: path
        name: ingest_endpoint_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RotateIngestEndpointCredentialsResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnprocessableEntityException'
          description: UnprocessableEntityException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
          description: InternalServerErrorException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
          description: ForbiddenException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
          description: NotFoundException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
          description: ServiceUnavailableException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
          description: TooManyRequestsException
      x-openapi-router-controller: openapi_server.controllers.default_controller
  /harvest_jobs:
    get:
      description: Returns a collection of HarvestJob records.
      operationId: list_harvest_jobs
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: "When specified, the request will return only HarvestJobs associated\
          \ with the given Channel ID."
        explode: true
        in: query
        name: includeChannelId
        required: false
        schema:
          type: string
        style: form
      - description: "When specified, the request will return only HarvestJobs in\
          \ the given status."
        explode: true
        in: query
        name: includeStatus
        required: false
        schema:
          type: string
        style: form
      - description: The upper bound on the number of records to return.
        explode: true
        in: query
        name: maxResults
        required: false
        schema:
          maximum: 1000
          minimum: 1
          type: integer
        style: form
      - description: A token used to resume pagination from the end of a previous
          request.
        explode: true
        in: query
        name: nextToken
        required: false
        schema:
          type: string
        style: form
      - description: Pagination limit
        explode: true
        in: query
        name: MaxResults
        required: false
        schema:
          type: string
        style: form
      - description: Pagination token
        explode: true
        in: query
        name: NextToken
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListHarvestJobsResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnprocessableEntityException'
          description: UnprocessableEntityException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
          description: InternalServerErrorException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
          description: ForbiddenException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
          description: NotFoundException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
          description: ServiceUnavailableException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
          description: TooManyRequestsException
      x-openapi-router-controller: openapi_server.controllers.default_controller
    post:
      description: Creates a new HarvestJob record.
      operationId: create_harvest_job
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateHarvestJob_request'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateHarvestJobResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnprocessableEntityException'
          description: UnprocessableEntityException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
          description: InternalServerErrorException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
          description: ForbiddenException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
          description: NotFoundException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
          description: ServiceUnavailableException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
          description: TooManyRequestsException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /harvest_jobs/{id}:
    get:
      description: Gets details about an existing HarvestJob.
      operationId: describe_harvest_job
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The ID of the HarvestJob.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DescribeHarvestJobResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnprocessableEntityException'
          description: UnprocessableEntityException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
          description: InternalServerErrorException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
          description: ForbiddenException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
          description: NotFoundException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
          description: ServiceUnavailableException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
          description: TooManyRequestsException
      x-openapi-router-controller: openapi_server.controllers.default_controller
  /origin_endpoints:
    get:
      description: Returns a collection of OriginEndpoint records.
      operationId: list_origin_endpoints
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: "When specified, the request will return only OriginEndpoints\
          \ associated with the given Channel ID."
        explode: true
        in: query
        name: channelId
        required: false
        schema:
          type: string
        style: form
      - description: The upper bound on the number of records to return.
        explode: true
        in: query
        name: maxResults
        required: false
        schema:
          maximum: 1000
          minimum: 1
          type: integer
        style: form
      - description: A token used to resume pagination from the end of a previous
          request.
        explode: true
        in: query
        name: nextToken
        required: false
        schema:
          type: string
        style: form
      - description: Pagination limit
        explode: true
        in: query
        name: MaxResults
        required: false
        schema:
          type: string
        style: form
      - description: Pagination token
        explode: true
        in: query
        name: NextToken
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListOriginEndpointsResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnprocessableEntityException'
          description: UnprocessableEntityException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
          description: InternalServerErrorException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
          description: ForbiddenException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
          description: NotFoundException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
          description: ServiceUnavailableException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
          description: TooManyRequestsException
      x-openapi-router-controller: openapi_server.controllers.default_controller
    post:
      description: Creates a new OriginEndpoint record.
      operationId: create_origin_endpoint
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateOriginEndpoint_request'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateOriginEndpointResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnprocessableEntityException'
          description: UnprocessableEntityException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
          description: InternalServerErrorException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
          description: ForbiddenException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
          description: NotFoundException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
          description: ServiceUnavailableException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
          description: TooManyRequestsException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /origin_endpoints/{id}:
    delete:
      description: Deletes an existing OriginEndpoint.
      operationId: delete_origin_endpoint
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The ID of the OriginEndpoint to delete.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "202":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteOriginEndpointResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnprocessableEntityException'
          description: UnprocessableEntityException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
          description: InternalServerErrorException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
          description: ForbiddenException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
          description: NotFoundException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
          description: ServiceUnavailableException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
          description: TooManyRequestsException
      x-openapi-router-controller: openapi_server.controllers.default_controller
    get:
      description: Gets details about an existing OriginEndpoint.
      operationId: describe_origin_endpoint
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The ID of the OriginEndpoint.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DescribeOriginEndpointResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnprocessableEntityException'
          description: UnprocessableEntityException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
          description: InternalServerErrorException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
          description: ForbiddenException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
          description: NotFoundException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
          description: ServiceUnavailableException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
          description: TooManyRequestsException
      x-openapi-router-controller: openapi_server.controllers.default_controller
    put:
      description: Updates an existing OriginEndpoint.
      operationId: update_origin_endpoint
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The ID of the OriginEndpoint to update.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateOriginEndpoint_request'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateOriginEndpointResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnprocessableEntityException'
          description: UnprocessableEntityException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
          description: InternalServerErrorException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
          description: ForbiddenException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
          description: NotFoundException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
          description: ServiceUnavailableException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
          description: TooManyRequestsException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /tags/{resource-arn}:
    get:
      description: ""
      operationId: list_tags_for_resource
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: ""
        explode: false
        in: path
        name: resource-arn
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListTagsForResourceResponse'
          description: Success
      x-openapi-router-controller: openapi_server.controllers.default_controller
    post:
      description: ""
      operationId: tag_resource
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: ""
        explode: false
        in: path
        name: resource-arn
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TagResource_request'
        required: true
        x-body-name: body
      responses:
        "204":
          description: Success
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /tags/{resource-arn}#tagKeys:
    delete:
      description: ""
      operationId: untag_resource
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: ""
        explode: false
        in: path
        name: resource-arn
        required: true
        schema:
          type: string
        style: simple
      - description: The key(s) of tag to be deleted
        explode: true
        in: query
        name: tagKeys
        required: true
        schema:
          items:
            $ref: '#/components/schemas/__string'
          type: array
        style: form
      responses:
        "204":
          description: Success
      x-openapi-router-controller: openapi_server.controllers.default_controller
components:
  parameters:
    X-Amz-Content-Sha256:
      explode: false
      in: header
      name: X-Amz-Content-Sha256
      required: false
      schema:
        type: string
      style: simple
    X-Amz-Date:
      explode: false
      in: header
      name: X-Amz-Date
      required: false
      schema:
        type: string
      style: simple
    X-Amz-Algorithm:
      explode: false
      in: header
      name: X-Amz-Algorithm
      required: false
      schema:
        type: string
      style: simple
    X-Amz-Credential:
      explode: false
      in: header
      name: X-Amz-Credential
      required: false
      schema:
        type: string
      style: simple
    X-Amz-Security-Token:
      explode: false
      in: header
      name: X-Amz-Security-Token
      required: false
      schema:
        type: string
      style: simple
    X-Amz-Signature:
      explode: false
      in: header
      name: X-Amz-Signature
      required: false
      schema:
        type: string
      style: simple
    X-Amz-SignedHeaders:
      explode: false
      in: header
      name: X-Amz-SignedHeaders
      required: false
      schema:
        type: string
      style: simple
  schemas:
    ConfigureLogsResponse:
      example:
        Description: ""
        CreatedAt: ""
        IngressAccessLogs:
          LogGroupName: ""
        HlsIngest:
          IngestEndpoints: ""
        EgressAccessLogs:
          LogGroupName: ""
        Id: ""
        Arn: ""
        Tags: ""
      properties:
        Arn:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The Amazon Resource Name (ARN) assigned to the Channel.
            xml:
              name: arn
          title: Arn
        CreatedAt:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The date and time the Channel was created.
            xml:
              name: createdAt
          title: CreatedAt
        Description:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: A short text description of the Channel.
            xml:
              name: description
          title: Description
        EgressAccessLogs:
          $ref: '#/components/schemas/ConfigureLogsResponse_EgressAccessLogs'
        HlsIngest:
          $ref: '#/components/schemas/ConfigureLogsResponse_HlsIngest'
        Id:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The ID of the Channel.
            xml:
              name: id
          title: Id
        IngressAccessLogs:
          $ref: '#/components/schemas/ConfigureLogsResponse_IngressAccessLogs'
        Tags:
          allOf:
          - $ref: '#/components/schemas/Tags'
          - xml:
              name: tags
          title: Tags
      title: ConfigureLogsResponse
      type: object
    __string:
      title: __string
      type: string
    UnprocessableEntityException: {}
    InternalServerErrorException: {}
    ForbiddenException: {}
    NotFoundException: {}
    ServiceUnavailableException: {}
    TooManyRequestsException: {}
    CreateChannelResponse:
      example:
        Description: ""
        CreatedAt: ""
        IngressAccessLogs:
          LogGroupName: ""
        HlsIngest:
          IngestEndpoints: ""
        EgressAccessLogs:
          LogGroupName: ""
        Id: ""
        Arn: ""
        Tags: ""
      properties:
        Arn:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The Amazon Resource Name (ARN) assigned to the Channel.
            xml:
              name: arn
          title: Arn
        CreatedAt:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The date and time the Channel was created.
            xml:
              name: createdAt
          title: CreatedAt
        Description:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: A short text description of the Channel.
            xml:
              name: description
          title: Description
        EgressAccessLogs:
          $ref: '#/components/schemas/ConfigureLogsResponse_EgressAccessLogs'
        HlsIngest:
          $ref: '#/components/schemas/ConfigureLogsResponse_HlsIngest'
        Id:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The ID of the Channel.
            xml:
              name: id
          title: Id
        IngressAccessLogs:
          $ref: '#/components/schemas/ConfigureLogsResponse_IngressAccessLogs'
        Tags:
          allOf:
          - $ref: '#/components/schemas/Tags'
          - xml:
              name: tags
          title: Tags
      title: CreateChannelResponse
      type: object
    CreateHarvestJobResponse:
      example:
        S3Destination:
          ManifestKey: ""
          BucketName: ""
          RoleArn: ""
        Status: ""
        EndTime: ""
        CreatedAt: ""
        OriginEndpointId: ""
        StartTime: ""
        Id: ""
        Arn: ""
        ChannelId: ""
      properties:
        Arn:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: |
              The Amazon Resource Name (ARN) assigned to the HarvestJob.
            xml:
              name: arn
          title: Arn
        ChannelId:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: |
              The ID of the Channel that the HarvestJob will harvest from.
            xml:
              name: channelId
          title: ChannelId
        CreatedAt:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: |
              The date and time the HarvestJob was submitted.
            xml:
              name: createdAt
          title: CreatedAt
        EndTime:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: |
              The end of the time-window which will be harvested.
            xml:
              name: endTime
          title: EndTime
        Id:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: |
              The ID of the HarvestJob. The ID must be unique within the region
              and it cannot be changed after the HarvestJob is submitted.
            xml:
              name: id
          title: Id
        OriginEndpointId:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: |
              The ID of the OriginEndpoint that the HarvestJob will harvest from.
              This cannot be changed after the HarvestJob is submitted.
            xml:
              name: originEndpointId
          title: OriginEndpointId
        S3Destination:
          $ref: '#/components/schemas/CreateHarvestJobResponse_S3Destination'
        StartTime:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: |
              The start of the time-window which will be harvested.
            xml:
              name: startTime
          title: StartTime
        Status:
          allOf:
          - $ref: '#/components/schemas/Status'
          - description: |
              The current status of the HarvestJob. Consider setting up a CloudWatch Event to listen for
              HarvestJobs as they succeed or fail. In the event of failure, the CloudWatch Event will
              include an explanation of why the HarvestJob failed.
            xml:
              name: status
          title: Status
      title: CreateHarvestJobResponse
      type: object
    CreateOriginEndpointResponse:
      example:
        MssPackage:
          ManifestWindowSeconds: ""
          StreamSelection:
            MinVideoBitsPerSecond: ""
            StreamOrder: ""
            MaxVideoBitsPerSecond: ""
          SegmentDurationSeconds: ""
          Encryption:
            SpekeKeyProvider:
              ResourceId: ""
              SystemIds: ""
              EncryptionContractConfiguration:
                PresetSpeke20Audio: ""
                PresetSpeke20Video: ""
              RoleArn: ""
              Url: ""
              CertificateArn: ""
        Description: ""
        CreatedAt: ""
        ChannelId: ""
        Origination: ""
        TimeDelaySeconds: ""
        Url: ""
        Authorization:
          SecretsRoleArn: ""
          CdnIdentifierSecret: ""
        ManifestName: ""
        CmafPackage:
          SegmentPrefix: ""
          StreamSelection:
            MinVideoBitsPerSecond: ""
            StreamOrder: ""
            MaxVideoBitsPerSecond: ""
          SegmentDurationSeconds: ""
          Encryption:
            KeyRotationIntervalSeconds: ""
            ConstantInitializationVector: ""
            SpekeKeyProvider:
              ResourceId: ""
              SystemIds: ""
              EncryptionContractConfiguration:
                PresetSpeke20Audio: ""
                PresetSpeke20Video: ""
              RoleArn: ""
              Url: ""
              CertificateArn: ""
            EncryptionMethod: ""
          HlsManifests: ""
        Whitelist: ""
        Id: ""
        Arn: ""
        HlsPackage:
          AdsOnDeliveryRestrictions: ""
          AdMarkers: ""
          ProgramDateTimeIntervalSeconds: ""
          StreamSelection:
            MinVideoBitsPerSecond: ""
            StreamOrder: ""
            MaxVideoBitsPerSecond: ""
          PlaylistWindowSeconds: ""
          IncludeIframeOnlyStream: ""
          UseAudioRenditionGroup: ""
          SegmentDurationSeconds: ""
          Encryption:
            KeyRotationIntervalSeconds: ""
            RepeatExtXKey: ""
            ConstantInitializationVector: ""
            SpekeKeyProvider:
              ResourceId: ""
              SystemIds: ""
              EncryptionContractConfiguration:
                PresetSpeke20Audio: ""
                PresetSpeke20Video: ""
              RoleArn: ""
              Url: ""
              CertificateArn: ""
            EncryptionMethod: ""
          AdTriggers: ""
          IncludeDvbSubtitles: ""
          PlaylistType: ""
        DashPackage:
          AdsOnDeliveryRestrictions: ""
          ManifestWindowSeconds: ""
          ManifestLayout: ""
          StreamSelection:
            MinVideoBitsPerSecond: ""
            StreamOrder: ""
            MaxVideoBitsPerSecond: ""
          IncludeIframeOnlyStream: ""
          Encryption:
            KeyRotationIntervalSeconds: ""
            SpekeKeyProvider:
              ResourceId: ""
              SystemIds: ""
              EncryptionContractConfiguration:
                PresetSpeke20Audio: ""
                PresetSpeke20Video: ""
              RoleArn: ""
              Url: ""
              CertificateArn: ""
          SegmentTemplateFormat: ""
          AdTriggers: ""
          Profile: ""
          PeriodTriggers: ""
          SuggestedPresentationDelaySeconds: ""
          UtcTiming: ""
          MinBufferTimeSeconds: ""
          SegmentDurationSeconds: ""
          MinUpdatePeriodSeconds: ""
          UtcTimingUri: ""
        Tags: ""
        StartoverWindowSeconds: ""
      properties:
        Arn:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The Amazon Resource Name (ARN) assigned to the OriginEndpoint.
            xml:
              name: arn
          title: Arn
        Authorization:
          $ref: '#/components/schemas/CreateOriginEndpointResponse_Authorization'
        ChannelId:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The ID of the Channel the OriginEndpoint is associated with.
            xml:
              name: channelId
          title: ChannelId
        CmafPackage:
          $ref: '#/components/schemas/CreateOriginEndpointResponse_CmafPackage'
        CreatedAt:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The date and time the OriginEndpoint was created.
            xml:
              name: createdAt
          title: CreatedAt
        DashPackage:
          $ref: '#/components/schemas/CreateOriginEndpointResponse_DashPackage'
        Description:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: A short text description of the OriginEndpoint.
            xml:
              name: description
          title: Description
        HlsPackage:
          $ref: '#/components/schemas/CreateOriginEndpointResponse_HlsPackage'
        Id:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The ID of the OriginEndpoint.
            xml:
              name: id
          title: Id
        ManifestName:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: A short string appended to the end of the OriginEndpoint
              URL.
            xml:
              name: manifestName
          title: ManifestName
        MssPackage:
          $ref: '#/components/schemas/CreateOriginEndpointResponse_MssPackage'
        Origination:
          allOf:
          - $ref: '#/components/schemas/Origination'
          - description: |
              Control whether origination of video is allowed for this OriginEndpoint. If set to ALLOW, the OriginEndpoint
              may by requested, pursuant to any other form of access control. If set to DENY, the OriginEndpoint may not be
              requested. This can be helpful for Live to VOD harvesting, or for temporarily disabling origination
            xml:
              name: origination
          title: Origination
        StartoverWindowSeconds:
          allOf:
          - $ref: '#/components/schemas/__integer'
          - description: |
              Maximum duration (seconds) of content to retain for startover playback.
              If not specified, startover playback will be disabled for the OriginEndpoint.
            xml:
              name: startoverWindowSeconds
          title: StartoverWindowSeconds
        Tags:
          allOf:
          - $ref: '#/components/schemas/Tags'
          - xml:
              name: tags
          title: Tags
        TimeDelaySeconds:
          allOf:
          - $ref: '#/components/schemas/__integer'
          - description: |
              Amount of delay (seconds) to enforce on the playback of live content.
              If not specified, there will be no time delay in effect for the OriginEndpoint.
            xml:
              name: timeDelaySeconds
          title: TimeDelaySeconds
        Url:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The URL of the packaged OriginEndpoint for consumption.
            xml:
              name: url
          title: Url
        Whitelist:
          allOf:
          - $ref: '#/components/schemas/__listOf__string'
          - description: A list of source IP CIDR blocks that will be allowed to access
              the OriginEndpoint.
            xml:
              name: whitelist
          title: Whitelist
      title: CreateOriginEndpointResponse
      type: object
    CmafEncryption:
      description: A Common Media Application Format (CMAF) encryption configuration.
      properties:
        ConstantInitializationVector:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: "An optional 128-bit, 16-byte hex value represented by a\
              \ 32-character string, used in conjunction with the key for encrypting\
              \ blocks. If you don't specify a value, then MediaPackage creates the\
              \ constant initialization vector (IV)."
            xml:
              name: constantInitializationVector
          title: ConstantInitializationVector
        EncryptionMethod:
          allOf:
          - $ref: '#/components/schemas/CmafEncryptionMethod'
          - xml:
              name: encryptionMethod
          title: EncryptionMethod
        KeyRotationIntervalSeconds:
          allOf:
          - $ref: '#/components/schemas/__integer'
          - description: Time (in seconds) between each encryption key rotation.
            xml:
              name: keyRotationIntervalSeconds
          title: KeyRotationIntervalSeconds
        SpekeKeyProvider:
          $ref: '#/components/schemas/CmafEncryption_SpekeKeyProvider'
      required:
      - SpekeKeyProvider
      title: CmafEncryption
      type: object
    __listOfHlsManifestCreateOrUpdateParameters:
      items:
        $ref: '#/components/schemas/HlsManifestCreateOrUpdateParameters'
      type: array
    __integer:
      type: integer
    StreamSelection:
      description: A StreamSelection configuration.
      properties:
        MaxVideoBitsPerSecond:
          allOf:
          - $ref: '#/components/schemas/__integer'
          - description: The maximum video bitrate (bps) to include in output.
            xml:
              name: maxVideoBitsPerSecond
          title: MaxVideoBitsPerSecond
        MinVideoBitsPerSecond:
          allOf:
          - $ref: '#/components/schemas/__integer'
          - description: The minimum video bitrate (bps) to include in output.
            xml:
              name: minVideoBitsPerSecond
          title: MinVideoBitsPerSecond
        StreamOrder:
          allOf:
          - $ref: '#/components/schemas/StreamOrder'
          - description: A directive that determines the order of streams in the output.
            xml:
              name: streamOrder
          title: StreamOrder
      title: StreamSelection
      type: object
    AdTriggers:
      description: |
        A list of SCTE-35 message types that are treated as ad markers in the output.  If empty, no
        ad markers are output.  Specify multiple items to create ad markers for all of the included
        message types.
      items:
        $ref: '#/components/schemas/__AdTriggersElement'
      type: array
    AdsOnDeliveryRestrictions:
      description: |
        This setting allows the delivery restriction flags on SCTE-35 segmentation descriptors to
        determine whether a message signals an ad.  Choosing "NONE" means no SCTE-35 messages become
        ads.  Choosing "RESTRICTED" means SCTE-35 messages of the types specified in AdTriggers that
        contain delivery restrictions will be treated as ads.  Choosing "UNRESTRICTED" means SCTE-35
        messages of the types specified in AdTriggers that do not contain delivery restrictions will
        be treated as ads.  Choosing "BOTH" means all SCTE-35 messages of the types specified in
        AdTriggers will be treated as ads.  Note that Splice Insert messages do not have these flags
        and are always treated as ads if specified in AdTriggers.
      enum:
      - NONE
      - RESTRICTED
      - UNRESTRICTED
      - BOTH
      title: AdsOnDeliveryRestrictions
      type: string
    DashEncryption:
      description: A Dynamic Adaptive Streaming over HTTP (DASH) encryption configuration.
      properties:
        KeyRotationIntervalSeconds:
          allOf:
          - $ref: '#/components/schemas/__integer'
          - description: Time (in seconds) between each encryption key rotation.
            xml:
              name: keyRotationIntervalSeconds
          title: KeyRotationIntervalSeconds
        SpekeKeyProvider:
          $ref: '#/components/schemas/CmafEncryption_SpekeKeyProvider'
      required:
      - SpekeKeyProvider
      title: DashEncryption
      type: object
    __boolean:
      type: boolean
    ManifestLayout:
      enum:
      - FULL
      - COMPACT
      title: ManifestLayout
      type: string
    __listOf__PeriodTriggersElement:
      items:
        $ref: '#/components/schemas/__PeriodTriggersElement'
      type: array
    Profile:
      enum:
      - NONE
      - HBBTV_1_5
      - HYBRIDCAST
      - DVB_DASH_2014
      title: Profile
      type: string
    SegmentTemplateFormat:
      enum:
      - NUMBER_WITH_TIMELINE
      - TIME_WITH_TIMELINE
      - NUMBER_WITH_DURATION
      title: SegmentTemplateFormat
      type: string
    UtcTiming:
      enum:
      - NONE
      - HTTP-HEAD
      - HTTP-ISO
      - HTTP-XSDATE
      title: UtcTiming
      type: string
    AdMarkers:
      enum:
      - NONE
      - SCTE35_ENHANCED
      - PASSTHROUGH
      - DATERANGE
      title: AdMarkers
      type: string
    HlsEncryption:
      description: An HTTP Live Streaming (HLS) encryption configuration.
      properties:
        ConstantInitializationVector:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: |
              A constant initialization vector for encryption (optional).
              When not specified the initialization vector will be periodically rotated.
            xml:
              name: constantInitializationVector
          title: ConstantInitializationVector
        EncryptionMethod:
          allOf:
          - $ref: '#/components/schemas/EncryptionMethod'
          - description: The encryption method to use.
            xml:
              name: encryptionMethod
          title: EncryptionMethod
        KeyRotationIntervalSeconds:
          allOf:
          - $ref: '#/components/schemas/__integer'
          - description: Interval (in seconds) between each encryption key rotation.
            xml:
              name: keyRotationIntervalSeconds
          title: KeyRotationIntervalSeconds
        RepeatExtXKey:
          allOf:
          - $ref: '#/components/schemas/__boolean'
          - description: "When enabled, the EXT-X-KEY tag will be repeated in output\
              \ manifests."
            xml:
              name: repeatExtXKey
          title: RepeatExtXKey
        SpekeKeyProvider:
          $ref: '#/components/schemas/CmafEncryption_SpekeKeyProvider'
      required:
      - SpekeKeyProvider
      title: HlsEncryption
      type: object
    PlaylistType:
      enum:
      - NONE
      - EVENT
      - VOD
      title: PlaylistType
      type: string
    MssEncryption:
      description: A Microsoft Smooth Streaming (MSS) encryption configuration.
      properties:
        SpekeKeyProvider:
          $ref: '#/components/schemas/CmafEncryption_SpekeKeyProvider'
      required:
      - SpekeKeyProvider
      title: MssEncryption
      type: object
    DeleteChannelResponse:
      properties: {}
      type: object
    DeleteOriginEndpointResponse:
      properties: {}
      type: object
    DescribeChannelResponse:
      example:
        Description: ""
        CreatedAt: ""
        IngressAccessLogs:
          LogGroupName: ""
        HlsIngest:
          IngestEndpoints: ""
        EgressAccessLogs:
          LogGroupName: ""
        Id: ""
        Arn: ""
        Tags: ""
      properties:
        Arn:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The Amazon Resource Name (ARN) assigned to the Channel.
            xml:
              name: arn
          title: Arn
        CreatedAt:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The date and time the Channel was created.
            xml:
              name: createdAt
          title: CreatedAt
        Description:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: A short text description of the Channel.
            xml:
              name: description
          title: Description
        EgressAccessLogs:
          $ref: '#/components/schemas/ConfigureLogsResponse_EgressAccessLogs'
        HlsIngest:
          $ref: '#/components/schemas/ConfigureLogsResponse_HlsIngest'
        Id:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The ID of the Channel.
            xml:
              name: id
          title: Id
        IngressAccessLogs:
          $ref: '#/components/schemas/ConfigureLogsResponse_IngressAccessLogs'
        Tags:
          allOf:
          - $ref: '#/components/schemas/Tags'
          - xml:
              name: tags
          title: Tags
      title: DescribeChannelResponse
      type: object
    DescribeHarvestJobResponse:
      example:
        S3Destination:
          ManifestKey: ""
          BucketName: ""
          RoleArn: ""
        Status: ""
        EndTime: ""
        CreatedAt: ""
        OriginEndpointId: ""
        StartTime: ""
        Id: ""
        Arn: ""
        ChannelId: ""
      properties:
        Arn:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: |
              The Amazon Resource Name (ARN) assigned to the HarvestJob.
            xml:
              name: arn
          title: Arn
        ChannelId:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: |
              The ID of the Channel that the HarvestJob will harvest from.
            xml:
              name: channelId
          title: ChannelId
        CreatedAt:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: |
              The date and time the HarvestJob was submitted.
            xml:
              name: createdAt
          title: CreatedAt
        EndTime:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: |
              The end of the time-window which will be harvested.
            xml:
              name: endTime
          title: EndTime
        Id:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: |
              The ID of the HarvestJob. The ID must be unique within the region
              and it cannot be changed after the HarvestJob is submitted.
            xml:
              name: id
          title: Id
        OriginEndpointId:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: |
              The ID of the OriginEndpoint that the HarvestJob will harvest from.
              This cannot be changed after the HarvestJob is submitted.
            xml:
              name: originEndpointId
          title: OriginEndpointId
        S3Destination:
          $ref: '#/components/schemas/CreateHarvestJobResponse_S3Destination'
        StartTime:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: |
              The start of the time-window which will be harvested.
            xml:
              name: startTime
          title: StartTime
        Status:
          allOf:
          - $ref: '#/components/schemas/Status'
          - description: |
              The current status of the HarvestJob. Consider setting up a CloudWatch Event to listen for
              HarvestJobs as they succeed or fail. In the event of failure, the CloudWatch Event will
              include an explanation of why the HarvestJob failed.
            xml:
              name: status
          title: Status
      title: DescribeHarvestJobResponse
      type: object
    DescribeOriginEndpointResponse:
      example:
        MssPackage:
          ManifestWindowSeconds: ""
          StreamSelection:
            MinVideoBitsPerSecond: ""
            StreamOrder: ""
            MaxVideoBitsPerSecond: ""
          SegmentDurationSeconds: ""
          Encryption:
            SpekeKeyProvider:
              ResourceId: ""
              SystemIds: ""
              EncryptionContractConfiguration:
                PresetSpeke20Audio: ""
                PresetSpeke20Video: ""
              RoleArn: ""
              Url: ""
              CertificateArn: ""
        Description: ""
        CreatedAt: ""
        ChannelId: ""
        Origination: ""
        TimeDelaySeconds: ""
        Url: ""
        Authorization:
          SecretsRoleArn: ""
          CdnIdentifierSecret: ""
        ManifestName: ""
        CmafPackage:
          SegmentPrefix: ""
          StreamSelection:
            MinVideoBitsPerSecond: ""
            StreamOrder: ""
            MaxVideoBitsPerSecond: ""
          SegmentDurationSeconds: ""
          Encryption:
            KeyRotationIntervalSeconds: ""
            ConstantInitializationVector: ""
            SpekeKeyProvider:
              ResourceId: ""
              SystemIds: ""
              EncryptionContractConfiguration:
                PresetSpeke20Audio: ""
                PresetSpeke20Video: ""
              RoleArn: ""
              Url: ""
              CertificateArn: ""
            EncryptionMethod: ""
          HlsManifests: ""
        Whitelist: ""
        Id: ""
        Arn: ""
        HlsPackage:
          AdsOnDeliveryRestrictions: ""
          AdMarkers: ""
          ProgramDateTimeIntervalSeconds: ""
          StreamSelection:
            MinVideoBitsPerSecond: ""
            StreamOrder: ""
            MaxVideoBitsPerSecond: ""
          PlaylistWindowSeconds: ""
          IncludeIframeOnlyStream: ""
          UseAudioRenditionGroup: ""
          SegmentDurationSeconds: ""
          Encryption:
            KeyRotationIntervalSeconds: ""
            RepeatExtXKey: ""
            ConstantInitializationVector: ""
            SpekeKeyProvider:
              ResourceId: ""
              SystemIds: ""
              EncryptionContractConfiguration:
                PresetSpeke20Audio: ""
                PresetSpeke20Video: ""
              RoleArn: ""
              Url: ""
              CertificateArn: ""
            EncryptionMethod: ""
          AdTriggers: ""
          IncludeDvbSubtitles: ""
          PlaylistType: ""
        DashPackage:
          AdsOnDeliveryRestrictions: ""
          ManifestWindowSeconds: ""
          ManifestLayout: ""
          StreamSelection:
            MinVideoBitsPerSecond: ""
            StreamOrder: ""
            MaxVideoBitsPerSecond: ""
          IncludeIframeOnlyStream: ""
          Encryption:
            KeyRotationIntervalSeconds: ""
            SpekeKeyProvider:
              ResourceId: ""
              SystemIds: ""
              EncryptionContractConfiguration:
                PresetSpeke20Audio: ""
                PresetSpeke20Video: ""
              RoleArn: ""
              Url: ""
              CertificateArn: ""
          SegmentTemplateFormat: ""
          AdTriggers: ""
          Profile: ""
          PeriodTriggers: ""
          SuggestedPresentationDelaySeconds: ""
          UtcTiming: ""
          MinBufferTimeSeconds: ""
          SegmentDurationSeconds: ""
          MinUpdatePeriodSeconds: ""
          UtcTimingUri: ""
        Tags: ""
        StartoverWindowSeconds: ""
      properties:
        Arn:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The Amazon Resource Name (ARN) assigned to the OriginEndpoint.
            xml:
              name: arn
          title: Arn
        Authorization:
          $ref: '#/components/schemas/CreateOriginEndpointResponse_Authorization'
        ChannelId:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The ID of the Channel the OriginEndpoint is associated with.
            xml:
              name: channelId
          title: ChannelId
        CmafPackage:
          $ref: '#/components/schemas/CreateOriginEndpointResponse_CmafPackage'
        CreatedAt:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The date and time the OriginEndpoint was created.
            xml:
              name: createdAt
          title: CreatedAt
        DashPackage:
          $ref: '#/components/schemas/CreateOriginEndpointResponse_DashPackage'
        Description:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: A short text description of the OriginEndpoint.
            xml:
              name: description
          title: Description
        HlsPackage:
          $ref: '#/components/schemas/CreateOriginEndpointResponse_HlsPackage'
        Id:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The ID of the OriginEndpoint.
            xml:
              name: id
          title: Id
        ManifestName:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: A short string appended to the end of the OriginEndpoint
              URL.
            xml:
              name: manifestName
          title: ManifestName
        MssPackage:
          $ref: '#/components/schemas/CreateOriginEndpointResponse_MssPackage'
        Origination:
          allOf:
          - $ref: '#/components/schemas/Origination'
          - description: |
              Control whether origination of video is allowed for this OriginEndpoint. If set to ALLOW, the OriginEndpoint
              may by requested, pursuant to any other form of access control. If set to DENY, the OriginEndpoint may not be
              requested. This can be helpful for Live to VOD harvesting, or for temporarily disabling origination
            xml:
              name: origination
          title: Origination
        StartoverWindowSeconds:
          allOf:
          - $ref: '#/components/schemas/__integer'
          - description: |
              Maximum duration (seconds) of content to retain for startover playback.
              If not specified, startover playback will be disabled for the OriginEndpoint.
            xml:
              name: startoverWindowSeconds
          title: StartoverWindowSeconds
        Tags:
          allOf:
          - $ref: '#/components/schemas/Tags'
          - xml:
              name: tags
          title: Tags
        TimeDelaySeconds:
          allOf:
          - $ref: '#/components/schemas/__integer'
          - description: |
              Amount of delay (seconds) to enforce on the playback of live content.
              If not specified, there will be no time delay in effect for the OriginEndpoint.
            xml:
              name: timeDelaySeconds
          title: TimeDelaySeconds
        Url:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The URL of the packaged OriginEndpoint for consumption.
            xml:
              name: url
          title: Url
        Whitelist:
          allOf:
          - $ref: '#/components/schemas/__listOf__string'
          - description: A list of source IP CIDR blocks that will be allowed to access
              the OriginEndpoint.
            xml:
              name: whitelist
          title: Whitelist
      title: DescribeOriginEndpointResponse
      type: object
    ListChannelsResponse:
      example:
        NextToken: ""
        Channels: ""
      properties:
        Channels:
          allOf:
          - $ref: '#/components/schemas/__listOfChannel'
          - description: A list of Channel records.
            xml:
              name: channels
          title: Channels
        NextToken:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: A token that can be used to resume pagination from the end
              of the collection.
            xml:
              name: nextToken
          title: NextToken
      title: ListChannelsResponse
      type: object
    ListHarvestJobsResponse:
      example:
        NextToken: ""
        HarvestJobs: ""
      properties:
        HarvestJobs:
          allOf:
          - $ref: '#/components/schemas/__listOfHarvestJob'
          - description: A list of HarvestJob records.
            xml:
              name: harvestJobs
          title: HarvestJobs
        NextToken:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: A token that can be used to resume pagination from the end
              of the collection.
            xml:
              name: nextToken
          title: NextToken
      title: ListHarvestJobsResponse
      type: object
    ListOriginEndpointsResponse:
      example:
        OriginEndpoints: ""
        NextToken: ""
      properties:
        NextToken:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: A token that can be used to resume pagination from the end
              of the collection.
            xml:
              name: nextToken
          title: NextToken
        OriginEndpoints:
          allOf:
          - $ref: '#/components/schemas/__listOfOriginEndpoint'
          - description: A list of OriginEndpoint records.
            xml:
              name: originEndpoints
          title: OriginEndpoints
      title: ListOriginEndpointsResponse
      type: object
    ListTagsForResourceResponse:
      example:
        Tags: ""
      properties:
        Tags:
          allOf:
          - $ref: '#/components/schemas/__mapOf__string'
          - xml:
              name: tags
          title: Tags
      title: ListTagsForResourceResponse
      type: object
    RotateChannelCredentialsResponse:
      deprecated: true
      example:
        Description: ""
        CreatedAt: ""
        IngressAccessLogs:
          LogGroupName: ""
        HlsIngest:
          IngestEndpoints: ""
        EgressAccessLogs:
          LogGroupName: ""
        Id: ""
        Arn: ""
        Tags: ""
      properties:
        Arn:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The Amazon Resource Name (ARN) assigned to the Channel.
            xml:
              name: arn
          title: Arn
        CreatedAt:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The date and time the Channel was created.
            xml:
              name: createdAt
          title: CreatedAt
        Description:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: A short text description of the Channel.
            xml:
              name: description
          title: Description
        EgressAccessLogs:
          $ref: '#/components/schemas/ConfigureLogsResponse_EgressAccessLogs'
        HlsIngest:
          $ref: '#/components/schemas/ConfigureLogsResponse_HlsIngest'
        Id:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The ID of the Channel.
            xml:
              name: id
          title: Id
        IngressAccessLogs:
          $ref: '#/components/schemas/ConfigureLogsResponse_IngressAccessLogs'
        Tags:
          allOf:
          - $ref: '#/components/schemas/Tags'
          - xml:
              name: tags
          title: Tags
      title: RotateChannelCredentialsResponse
      type: object
    RotateIngestEndpointCredentialsResponse:
      example:
        Description: ""
        CreatedAt: ""
        IngressAccessLogs:
          LogGroupName: ""
        HlsIngest:
          IngestEndpoints: ""
        EgressAccessLogs:
          LogGroupName: ""
        Id: ""
        Arn: ""
        Tags: ""
      properties:
        Arn:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The Amazon Resource Name (ARN) assigned to the Channel.
            xml:
              name: arn
          title: Arn
        CreatedAt:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The date and time the Channel was created.
            xml:
              name: createdAt
          title: CreatedAt
        Description:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: A short text description of the Channel.
            xml:
              name: description
          title: Description
        EgressAccessLogs:
          $ref: '#/components/schemas/ConfigureLogsResponse_EgressAccessLogs'
        HlsIngest:
          $ref: '#/components/schemas/ConfigureLogsResponse_HlsIngest'
        Id:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The ID of the Channel.
            xml:
              name: id
          title: Id
        IngressAccessLogs:
          $ref: '#/components/schemas/ConfigureLogsResponse_IngressAccessLogs'
        Tags:
          allOf:
          - $ref: '#/components/schemas/Tags'
          - xml:
              name: tags
          title: Tags
      title: RotateIngestEndpointCredentialsResponse
      type: object
    UpdateChannelResponse:
      example:
        Description: ""
        CreatedAt: ""
        IngressAccessLogs:
          LogGroupName: ""
        HlsIngest:
          IngestEndpoints: ""
        EgressAccessLogs:
          LogGroupName: ""
        Id: ""
        Arn: ""
        Tags: ""
      properties:
        Arn:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The Amazon Resource Name (ARN) assigned to the Channel.
            xml:
              name: arn
          title: Arn
        CreatedAt:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The date and time the Channel was created.
            xml:
              name: createdAt
          title: CreatedAt
        Description:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: A short text description of the Channel.
            xml:
              name: description
          title: Description
        EgressAccessLogs:
          $ref: '#/components/schemas/ConfigureLogsResponse_EgressAccessLogs'
        HlsIngest:
          $ref: '#/components/schemas/ConfigureLogsResponse_HlsIngest'
        Id:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The ID of the Channel.
            xml:
              name: id
          title: Id
        IngressAccessLogs:
          $ref: '#/components/schemas/ConfigureLogsResponse_IngressAccessLogs'
        Tags:
          allOf:
          - $ref: '#/components/schemas/Tags'
          - xml:
              name: tags
          title: Tags
      title: UpdateChannelResponse
      type: object
    UpdateOriginEndpointResponse:
      example:
        MssPackage:
          ManifestWindowSeconds: ""
          StreamSelection:
            MinVideoBitsPerSecond: ""
            StreamOrder: ""
            MaxVideoBitsPerSecond: ""
          SegmentDurationSeconds: ""
          Encryption:
            SpekeKeyProvider:
              ResourceId: ""
              SystemIds: ""
              EncryptionContractConfiguration:
                PresetSpeke20Audio: ""
                PresetSpeke20Video: ""
              RoleArn: ""
              Url: ""
              CertificateArn: ""
        Description: ""
        CreatedAt: ""
        ChannelId: ""
        Origination: ""
        TimeDelaySeconds: ""
        Url: ""
        Authorization:
          SecretsRoleArn: ""
          CdnIdentifierSecret: ""
        ManifestName: ""
        CmafPackage:
          SegmentPrefix: ""
          StreamSelection:
            MinVideoBitsPerSecond: ""
            StreamOrder: ""
            MaxVideoBitsPerSecond: ""
          SegmentDurationSeconds: ""
          Encryption:
            KeyRotationIntervalSeconds: ""
            ConstantInitializationVector: ""
            SpekeKeyProvider:
              ResourceId: ""
              SystemIds: ""
              EncryptionContractConfiguration:
                PresetSpeke20Audio: ""
                PresetSpeke20Video: ""
              RoleArn: ""
              Url: ""
              CertificateArn: ""
            EncryptionMethod: ""
          HlsManifests: ""
        Whitelist: ""
        Id: ""
        Arn: ""
        HlsPackage:
          AdsOnDeliveryRestrictions: ""
          AdMarkers: ""
          ProgramDateTimeIntervalSeconds: ""
          StreamSelection:
            MinVideoBitsPerSecond: ""
            StreamOrder: ""
            MaxVideoBitsPerSecond: ""
          PlaylistWindowSeconds: ""
          IncludeIframeOnlyStream: ""
          UseAudioRenditionGroup: ""
          SegmentDurationSeconds: ""
          Encryption:
            KeyRotationIntervalSeconds: ""
            RepeatExtXKey: ""
            ConstantInitializationVector: ""
            SpekeKeyProvider:
              ResourceId: ""
              SystemIds: ""
              EncryptionContractConfiguration:
                PresetSpeke20Audio: ""
                PresetSpeke20Video: ""
              RoleArn: ""
              Url: ""
              CertificateArn: ""
            EncryptionMethod: ""
          AdTriggers: ""
          IncludeDvbSubtitles: ""
          PlaylistType: ""
        DashPackage:
          AdsOnDeliveryRestrictions: ""
          ManifestWindowSeconds: ""
          ManifestLayout: ""
          StreamSelection:
            MinVideoBitsPerSecond: ""
            StreamOrder: ""
            MaxVideoBitsPerSecond: ""
          IncludeIframeOnlyStream: ""
          Encryption:
            KeyRotationIntervalSeconds: ""
            SpekeKeyProvider:
              ResourceId: ""
              SystemIds: ""
              EncryptionContractConfiguration:
                PresetSpeke20Audio: ""
                PresetSpeke20Video: ""
              RoleArn: ""
              Url: ""
              CertificateArn: ""
          SegmentTemplateFormat: ""
          AdTriggers: ""
          Profile: ""
          PeriodTriggers: ""
          SuggestedPresentationDelaySeconds: ""
          UtcTiming: ""
          MinBufferTimeSeconds: ""
          SegmentDurationSeconds: ""
          MinUpdatePeriodSeconds: ""
          UtcTimingUri: ""
        Tags: ""
        StartoverWindowSeconds: ""
      properties:
        Arn:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The Amazon Resource Name (ARN) assigned to the OriginEndpoint.
            xml:
              name: arn
          title: Arn
        Authorization:
          $ref: '#/components/schemas/CreateOriginEndpointResponse_Authorization'
        ChannelId:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The ID of the Channel the OriginEndpoint is associated with.
            xml:
              name: channelId
          title: ChannelId
        CmafPackage:
          $ref: '#/components/schemas/CreateOriginEndpointResponse_CmafPackage'
        CreatedAt:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The date and time the OriginEndpoint was created.
            xml:
              name: createdAt
          title: CreatedAt
        DashPackage:
          $ref: '#/components/schemas/CreateOriginEndpointResponse_DashPackage'
        Description:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: A short text description of the OriginEndpoint.
            xml:
              name: description
          title: Description
        HlsPackage:
          $ref: '#/components/schemas/CreateOriginEndpointResponse_HlsPackage'
        Id:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The ID of the OriginEndpoint.
            xml:
              name: id
          title: Id
        ManifestName:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: A short string appended to the end of the OriginEndpoint
              URL.
            xml:
              name: manifestName
          title: ManifestName
        MssPackage:
          $ref: '#/components/schemas/CreateOriginEndpointResponse_MssPackage'
        Origination:
          allOf:
          - $ref: '#/components/schemas/Origination'
          - description: |
              Control whether origination of video is allowed for this OriginEndpoint. If set to ALLOW, the OriginEndpoint
              may by requested, pursuant to any other form of access control. If set to DENY, the OriginEndpoint may not be
              requested. This can be helpful for Live to VOD harvesting, or for temporarily disabling origination
            xml:
              name: origination
          title: Origination
        StartoverWindowSeconds:
          allOf:
          - $ref: '#/components/schemas/__integer'
          - description: |
              Maximum duration (seconds) of content to retain for startover playback.
              If not specified, startover playback will be disabled for the OriginEndpoint.
            xml:
              name: startoverWindowSeconds
          title: StartoverWindowSeconds
        Tags:
          allOf:
          - $ref: '#/components/schemas/Tags'
          - xml:
              name: tags
          title: Tags
        TimeDelaySeconds:
          allOf:
          - $ref: '#/components/schemas/__integer'
          - description: |
              Amount of delay (seconds) to enforce on the playback of live content.
              If not specified, there will be no time delay in effect for the OriginEndpoint.
            xml:
              name: timeDelaySeconds
          title: TimeDelaySeconds
        Url:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The URL of the packaged OriginEndpoint for consumption.
            xml:
              name: url
          title: Url
        Whitelist:
          allOf:
          - $ref: '#/components/schemas/__listOf__string'
          - description: A list of source IP CIDR blocks that will be allowed to access
              the OriginEndpoint.
            xml:
              name: whitelist
          title: Whitelist
      title: UpdateOriginEndpointResponse
      type: object
    __AdTriggersElement:
      enum:
      - SPLICE_INSERT
      - BREAK
      - PROVIDER_ADVERTISEMENT
      - DISTRIBUTOR_ADVERTISEMENT
      - PROVIDER_PLACEMENT_OPPORTUNITY
      - DISTRIBUTOR_PLACEMENT_OPPORTUNITY
      - PROVIDER_OVERLAY_PLACEMENT_OPPORTUNITY
      - DISTRIBUTOR_OVERLAY_PLACEMENT_OPPORTUNITY
      title: __AdTriggersElement
      type: string
    Authorization:
      description: CDN Authorization credentials
      properties:
        CdnIdentifierSecret:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: |
              The Amazon Resource Name (ARN) for the secret in Secrets Manager that your Content Distribution Network (CDN) uses for authorization to access your endpoint.
            xml:
              name: cdnIdentifierSecret
          title: CdnIdentifierSecret
        SecretsRoleArn:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: |
              The Amazon Resource Name (ARN) for the IAM role that allows MediaPackage to communicate with AWS Secrets Manager.
            xml:
              name: secretsRoleArn
          title: SecretsRoleArn
      required:
      - CdnIdentifierSecret
      - SecretsRoleArn
      title: Authorization
      type: object
    EgressAccessLogs:
      description: Configure egress access logging.
      properties:
        LogGroupName:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: Customize the log group name.
            xml:
              name: logGroupName
          title: LogGroupName
      title: EgressAccessLogs
      type: object
    HlsIngest:
      description: An HTTP Live Streaming (HLS) ingest resource configuration.
      properties:
        IngestEndpoints:
          allOf:
          - $ref: '#/components/schemas/__listOfIngestEndpoint'
          - description: A list of endpoints to which the source stream should be
              sent.
            xml:
              name: ingestEndpoints
          title: IngestEndpoints
      title: HlsIngest
      type: object
    IngressAccessLogs:
      description: Configure ingress access logging.
      properties:
        LogGroupName:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: Customize the log group name.
            xml:
              name: logGroupName
          title: LogGroupName
      title: IngressAccessLogs
      type: object
    Tags:
      additionalProperties:
        $ref: '#/components/schemas/__string'
      description: A collection of tags associated with a resource
      type: object
    Channel:
      description: A Channel resource configuration.
      properties:
        Arn:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The Amazon Resource Name (ARN) assigned to the Channel.
            xml:
              name: arn
          title: Arn
        CreatedAt:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The date and time the Channel was created.
            xml:
              name: createdAt
          title: CreatedAt
        Description:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: A short text description of the Channel.
            xml:
              name: description
          title: Description
        EgressAccessLogs:
          $ref: '#/components/schemas/ConfigureLogsResponse_EgressAccessLogs'
        HlsIngest:
          $ref: '#/components/schemas/ConfigureLogsResponse_HlsIngest'
        Id:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The ID of the Channel.
            xml:
              name: id
          title: Id
        IngressAccessLogs:
          $ref: '#/components/schemas/ConfigureLogsResponse_IngressAccessLogs'
        Tags:
          allOf:
          - $ref: '#/components/schemas/Tags'
          - xml:
              name: tags
          title: Tags
      title: Channel
      type: object
    CmafEncryptionMethod:
      description: The encryption method to use.
      enum:
      - SAMPLE_AES
      - AES_CTR
      title: CmafEncryptionMethod
      type: string
    SpekeKeyProvider:
      description: A configuration for accessing an external Secure Packager and Encoder
        Key Exchange (SPEKE) service that will provide encryption keys.
      properties:
        CertificateArn:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: |
              An Amazon Resource Name (ARN) of a Certificate Manager certificate
              that MediaPackage will use for enforcing secure end-to-end data
              transfer with the key provider service.
            xml:
              name: certificateArn
          title: CertificateArn
        EncryptionContractConfiguration:
          $ref: '#/components/schemas/SpekeKeyProvider_EncryptionContractConfiguration'
        ResourceId:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The resource ID to include in key requests.
            xml:
              name: resourceId
          title: ResourceId
        RoleArn:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: |
              An Amazon Resource Name (ARN) of an IAM role that AWS Elemental
              MediaPackage will assume when accessing the key provider service.
            xml:
              name: roleArn
          title: RoleArn
        SystemIds:
          allOf:
          - $ref: '#/components/schemas/__listOf__string'
          - description: The system IDs to include in key requests.
            xml:
              name: systemIds
          title: SystemIds
        Url:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The URL of the external key provider service.
            xml:
              name: url
          title: Url
      required:
      - ResourceId
      - RoleArn
      - SystemIds
      - Url
      title: SpekeKeyProvider
      type: object
    __listOfHlsManifest:
      items:
        $ref: '#/components/schemas/HlsManifest'
      type: array
    CmafPackage:
      description: A Common Media Application Format (CMAF) packaging configuration.
      properties:
        Encryption:
          $ref: '#/components/schemas/CreateOriginEndpoint_request_cmafPackage_Encryption'
        HlsManifests:
          allOf:
          - $ref: '#/components/schemas/__listOfHlsManifest'
          - description: A list of HLS manifest configurations
            xml:
              name: hlsManifests
          title: HlsManifests
        SegmentDurationSeconds:
          allOf:
          - $ref: '#/components/schemas/__integer'
          - description: |
              Duration (in seconds) of each segment. Actual segments will be
              rounded to the nearest multiple of the source segment duration.
            xml:
              name: segmentDurationSeconds
          title: SegmentDurationSeconds
        SegmentPrefix:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: "An optional custom string that is prepended to the name\
              \ of each segment. If not specified, it defaults to the ChannelId."
            xml:
              name: segmentPrefix
          title: SegmentPrefix
        StreamSelection:
          $ref: '#/components/schemas/CreateOriginEndpoint_request_cmafPackage_StreamSelection'
      title: CmafPackage
      type: object
    CmafPackageCreateOrUpdateParameters:
      description: A Common Media Application Format (CMAF) packaging configuration.
      properties:
        Encryption:
          $ref: '#/components/schemas/CreateOriginEndpoint_request_cmafPackage_Encryption'
        HlsManifests:
          allOf:
          - $ref: '#/components/schemas/__listOfHlsManifestCreateOrUpdateParameters'
          - description: A list of HLS manifest configurations
            xml:
              name: hlsManifests
          title: HlsManifests
        SegmentDurationSeconds:
          allOf:
          - $ref: '#/components/schemas/__integer'
          - description: |
              Duration (in seconds) of each segment. Actual segments will be
              rounded to the nearest multiple of the source segment duration.
            xml:
              name: segmentDurationSeconds
          title: SegmentDurationSeconds
        SegmentPrefix:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: "An optional custom string that is prepended to the name\
              \ of each segment. If not specified, it defaults to the ChannelId."
            xml:
              name: segmentPrefix
          title: SegmentPrefix
        StreamSelection:
          $ref: '#/components/schemas/CreateOriginEndpoint_request_cmafPackage_StreamSelection'
      title: CmafPackageCreateOrUpdateParameters
      type: object
    ConfigureLogsRequest:
      description: the option to configure log subscription.
      example:
        IngressAccessLogs:
          LogGroupName: ""
        EgressAccessLogs:
          LogGroupName: ""
      properties:
        EgressAccessLogs:
          $ref: '#/components/schemas/ConfigureLogsResponse_EgressAccessLogs'
        IngressAccessLogs:
          $ref: '#/components/schemas/ConfigureLogsResponse_IngressAccessLogs'
      title: ConfigureLogsRequest
      type: object
    CreateChannelRequest:
      description: A new Channel configuration.
      example:
        Description: ""
        Id: ""
        Tags: ""
      properties:
        Description:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: A short text description of the Channel.
            xml:
              name: description
        Id:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: |
              The ID of the Channel. The ID must be unique within the region and it
              cannot be changed after a Channel is created.
            xml:
              name: id
        Tags:
          allOf:
          - $ref: '#/components/schemas/Tags'
          - xml:
              name: tags
      required:
      - Id
      title: CreateChannelRequest
      type: object
    S3Destination:
      description: |
        Configuration parameters for where in an S3 bucket to place the harvested content
      properties:
        BucketName:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: |
              The name of an S3 bucket within which harvested content will be exported
            xml:
              name: bucketName
          title: BucketName
        ManifestKey:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: |
              The key in the specified S3 bucket where the harvested top-level manifest will be placed.
            xml:
              name: manifestKey
          title: ManifestKey
        RoleArn:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: |
              The IAM role used to write to the specified S3 bucket
            xml:
              name: roleArn
          title: RoleArn
      required:
      - BucketName
      - ManifestKey
      - RoleArn
      title: S3Destination
      type: object
    CreateHarvestJobRequest:
      description: Configuration parameters used to create a new HarvestJob.
      example:
        S3Destination:
          ManifestKey: ""
          BucketName: ""
          RoleArn: ""
        EndTime: ""
        OriginEndpointId: ""
        StartTime: ""
        Id: ""
      properties:
        EndTime:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: |
              The end of the time-window which will be harvested
            xml:
              name: endTime
        Id:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: |
              The ID of the HarvestJob. The ID must be unique within the region
              and it cannot be changed after the HarvestJob is submitted
            xml:
              name: id
        OriginEndpointId:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: |
              The ID of the OriginEndpoint that the HarvestJob will harvest from.
              This cannot be changed after the HarvestJob is submitted.
            xml:
              name: originEndpointId
        S3Destination:
          $ref: '#/components/schemas/CreateHarvestJobResponse_S3Destination'
        StartTime:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: |
              The start of the time-window which will be harvested
            xml:
              name: startTime
      required:
      - EndTime
      - Id
      - OriginEndpointId
      - S3Destination
      - StartTime
      title: CreateHarvestJobRequest
      type: object
    Status:
      enum:
      - IN_PROGRESS
      - SUCCEEDED
      - FAILED
      title: Status
      type: string
    DashPackage:
      description: A Dynamic Adaptive Streaming over HTTP (DASH) packaging configuration.
      properties:
        AdTriggers:
          allOf:
          - $ref: '#/components/schemas/AdTriggers'
          - xml:
              name: adTriggers
          title: AdTriggers
        AdsOnDeliveryRestrictions:
          allOf:
          - $ref: '#/components/schemas/AdsOnDeliveryRestrictions'
          - xml:
              name: adsOnDeliveryRestrictions
          title: AdsOnDeliveryRestrictions
        Encryption:
          $ref: '#/components/schemas/CreateOriginEndpoint_request_dashPackage_Encryption'
        IncludeIframeOnlyStream:
          allOf:
          - $ref: '#/components/schemas/__boolean'
          - description: "When enabled, an I-Frame only stream will be included in\
              \ the output."
            xml:
              name: includeIframeOnlyStream
          title: IncludeIframeOnlyStream
        ManifestLayout:
          allOf:
          - $ref: '#/components/schemas/ManifestLayout'
          - description: "Determines the position of some tags in the Media Presentation\
              \ Description (MPD).  When set to FULL, elements like SegmentTemplate\
              \ and ContentProtection are included in each Representation.  When set\
              \ to COMPACT, duplicate elements are combined and presented at the AdaptationSet\
              \ level."
            xml:
              name: manifestLayout
          title: ManifestLayout
        ManifestWindowSeconds:
          allOf:
          - $ref: '#/components/schemas/__integer'
          - description: Time window (in seconds) contained in each manifest.
            xml:
              name: manifestWindowSeconds
          title: ManifestWindowSeconds
        MinBufferTimeSeconds:
          allOf:
          - $ref: '#/components/schemas/__integer'
          - description: Minimum duration (in seconds) that a player will buffer media
              before starting the presentation.
            xml:
              name: minBufferTimeSeconds
          title: MinBufferTimeSeconds
        MinUpdatePeriodSeconds:
          allOf:
          - $ref: '#/components/schemas/__integer'
          - description: Minimum duration (in seconds) between potential changes to
              the Dynamic Adaptive Streaming over HTTP (DASH) Media Presentation Description
              (MPD).
            xml:
              name: minUpdatePeriodSeconds
          title: MinUpdatePeriodSeconds
        PeriodTriggers:
          allOf:
          - $ref: '#/components/schemas/__listOf__PeriodTriggersElement'
          - description: |
              A list of triggers that controls when the outgoing Dynamic Adaptive Streaming over HTTP (DASH)
              Media Presentation Description (MPD) will be partitioned into multiple periods. If empty, the content will not
              be partitioned into more than one period. If the list contains "ADS", new periods will be created where
              the Channel source contains SCTE-35 ad markers.
            xml:
              name: periodTriggers
          title: PeriodTriggers
        Profile:
          allOf:
          - $ref: '#/components/schemas/Profile'
          - description: "The Dynamic Adaptive Streaming over HTTP (DASH) profile\
              \ type.  When set to \"HBBTV_1_5\", HbbTV 1.5 compliant output is enabled.\
              \ When set to \"DVB-DASH_2014\", DVB-DASH 2014 compliant output is enabled."
            xml:
              name: profile
          title: Profile
        SegmentDurationSeconds:
          allOf:
          - $ref: '#/components/schemas/__integer'
          - description: |
              Duration (in seconds) of each segment. Actual segments will be
              rounded to the nearest multiple of the source segment duration.
            xml:
              name: segmentDurationSeconds
          title: SegmentDurationSeconds
        SegmentTemplateFormat:
          allOf:
          - $ref: '#/components/schemas/SegmentTemplateFormat'
          - description: "Determines the type of SegmentTemplate included in the Media\
              \ Presentation Description (MPD).  When set to NUMBER_WITH_TIMELINE,\
              \ a full timeline is presented in each SegmentTemplate, with $Number$\
              \ media URLs.  When set to TIME_WITH_TIMELINE, a full timeline is presented\
              \ in each SegmentTemplate, with $Time$ media URLs. When set to NUMBER_WITH_DURATION,\
              \ only a duration is included in each SegmentTemplate, with $Number$\
              \ media URLs."
            xml:
              name: segmentTemplateFormat
          title: SegmentTemplateFormat
        StreamSelection:
          $ref: '#/components/schemas/CreateOriginEndpoint_request_cmafPackage_StreamSelection'
        SuggestedPresentationDelaySeconds:
          allOf:
          - $ref: '#/components/schemas/__integer'
          - description: Duration (in seconds) to delay live content before presentation.
            xml:
              name: suggestedPresentationDelaySeconds
          title: SuggestedPresentationDelaySeconds
        UtcTiming:
          allOf:
          - $ref: '#/components/schemas/UtcTiming'
          - description: Determines the type of UTCTiming included in the Media Presentation
              Description (MPD)
            xml:
              name: utcTiming
          title: UtcTiming
        UtcTimingUri:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: "Specifies the value attribute of the UTCTiming field when\
              \ utcTiming is set to HTTP-ISO, HTTP-HEAD or HTTP-XSDATE"
            xml:
              name: utcTimingUri
          title: UtcTimingUri
      title: DashPackage
      type: object
    HlsPackage:
      description: An HTTP Live Streaming (HLS) packaging configuration.
      properties:
        AdMarkers:
          allOf:
          - $ref: '#/components/schemas/AdMarkers'
          - description: "This setting controls how ad markers are included in the\
              \ packaged OriginEndpoint.\n\"NONE\" will omit all SCTE-35 ad markers\
              \ from the output.\n\"PASSTHROUGH\" causes the manifest to contain a\
              \ copy of the SCTE-35 ad\nmarkers (comments) taken directly from the\
              \ input HTTP Live Streaming (HLS) manifest.\n\"SCTE35_ENHANCED\" generates\
              \ ad markers and blackout tags based on SCTE-35\nmessages in the input\
              \ source.\n\"DATERANGE\" inserts EXT-X-DATERANGE tags to signal ad and\
              \ program transition events \nin HLS and CMAF manifests. For this option,\
              \ you must set a programDateTimeIntervalSeconds value \nthat is greater\
              \ than 0.\n"
            xml:
              name: adMarkers
          title: AdMarkers
        AdTriggers:
          allOf:
          - $ref: '#/components/schemas/AdTriggers'
          - xml:
              name: adTriggers
          title: AdTriggers
        AdsOnDeliveryRestrictions:
          allOf:
          - $ref: '#/components/schemas/AdsOnDeliveryRestrictions'
          - xml:
              name: adsOnDeliveryRestrictions
          title: AdsOnDeliveryRestrictions
        Encryption:
          $ref: '#/components/schemas/CreateOriginEndpoint_request_hlsPackage_Encryption'
        IncludeDvbSubtitles:
          allOf:
          - $ref: '#/components/schemas/__boolean'
          - description: "When enabled, MediaPackage passes through digital video\
              \ broadcasting (DVB) subtitles into the output."
            xml:
              name: includeDvbSubtitles
          title: IncludeDvbSubtitles
        IncludeIframeOnlyStream:
          allOf:
          - $ref: '#/components/schemas/__boolean'
          - description: "When enabled, an I-Frame only stream will be included in\
              \ the output."
            xml:
              name: includeIframeOnlyStream
          title: IncludeIframeOnlyStream
        PlaylistType:
          allOf:
          - $ref: '#/components/schemas/PlaylistType'
          - description: |
              The HTTP Live Streaming (HLS) playlist type.
              When either "EVENT" or "VOD" is specified, a corresponding EXT-X-PLAYLIST-TYPE
              entry will be included in the media playlist.
            xml:
              name: playlistType
          title: PlaylistType
        PlaylistWindowSeconds:
          allOf:
          - $ref: '#/components/schemas/__integer'
          - description: Time window (in seconds) contained in each parent manifest.
            xml:
              name: playlistWindowSeconds
          title: PlaylistWindowSeconds
        ProgramDateTimeIntervalSeconds:
          allOf:
          - $ref: '#/components/schemas/__integer'
          - description: |
              The interval (in seconds) between each EXT-X-PROGRAM-DATE-TIME tag
              inserted into manifests. Additionally, when an interval is specified
              ID3Timed Metadata messages will be generated every 5 seconds using the
              ingest time of the content.
              If the interval is not specified, or set to 0, then
              no EXT-X-PROGRAM-DATE-TIME tags will be inserted into manifests and no
              ID3Timed Metadata messages will be generated. Note that irrespective
              of this parameter, if any ID3 Timed Metadata is found in HTTP Live Streaming (HLS) input,
              it will be passed through to HLS output.
            xml:
              name: programDateTimeIntervalSeconds
          title: ProgramDateTimeIntervalSeconds
        SegmentDurationSeconds:
          allOf:
          - $ref: '#/components/schemas/__integer'
          - description: |
              Duration (in seconds) of each fragment. Actual fragments will be
              rounded to the nearest multiple of the source fragment duration.
            xml:
              name: segmentDurationSeconds
          title: SegmentDurationSeconds
        StreamSelection:
          $ref: '#/components/schemas/CreateOriginEndpoint_request_cmafPackage_StreamSelection'
        UseAudioRenditionGroup:
          allOf:
          - $ref: '#/components/schemas/__boolean'
          - description: "When enabled, audio streams will be placed in rendition\
              \ groups in the output."
            xml:
              name: useAudioRenditionGroup
          title: UseAudioRenditionGroup
      title: HlsPackage
      type: object
    MssPackage:
      description: A Microsoft Smooth Streaming (MSS) packaging configuration.
      properties:
        Encryption:
          $ref: '#/components/schemas/CreateOriginEndpoint_request_mssPackage_Encryption'
        ManifestWindowSeconds:
          allOf:
          - $ref: '#/components/schemas/__integer'
          - description: The time window (in seconds) contained in each manifest.
            xml:
              name: manifestWindowSeconds
          title: ManifestWindowSeconds
        SegmentDurationSeconds:
          allOf:
          - $ref: '#/components/schemas/__integer'
          - description: The duration (in seconds) of each segment.
            xml:
              name: segmentDurationSeconds
          title: SegmentDurationSeconds
        StreamSelection:
          $ref: '#/components/schemas/CreateOriginEndpoint_request_cmafPackage_StreamSelection'
      title: MssPackage
      type: object
    Origination:
      enum:
      - ALLOW
      - DENY
      title: Origination
      type: string
    __listOf__string:
      items:
        $ref: '#/components/schemas/__string'
      type: array
    CreateOriginEndpointRequest:
      description: Configuration parameters used to create a new OriginEndpoint.
      example:
        MssPackage:
          ManifestWindowSeconds: ""
          StreamSelection:
            MinVideoBitsPerSecond: ""
            StreamOrder: ""
            MaxVideoBitsPerSecond: ""
          SegmentDurationSeconds: ""
          Encryption:
            SpekeKeyProvider:
              ResourceId: ""
              SystemIds: ""
              EncryptionContractConfiguration:
                PresetSpeke20Audio: ""
                PresetSpeke20Video: ""
              RoleArn: ""
              Url: ""
              CertificateArn: ""
        Description: ""
        ChannelId: ""
        Origination: ""
        TimeDelaySeconds: ""
        Authorization:
          SecretsRoleArn: ""
          CdnIdentifierSecret: ""
        ManifestName: ""
        CmafPackage:
          SegmentPrefix: ""
          StreamSelection:
            MinVideoBitsPerSecond: ""
            StreamOrder: ""
            MaxVideoBitsPerSecond: ""
          SegmentDurationSeconds: ""
          Encryption:
            KeyRotationIntervalSeconds: ""
            ConstantInitializationVector: ""
            SpekeKeyProvider:
              ResourceId: ""
              SystemIds: ""
              EncryptionContractConfiguration:
                PresetSpeke20Audio: ""
                PresetSpeke20Video: ""
              RoleArn: ""
              Url: ""
              CertificateArn: ""
            EncryptionMethod: ""
          HlsManifests: ""
        Whitelist: ""
        Id: ""
        HlsPackage:
          AdsOnDeliveryRestrictions: ""
          AdMarkers: ""
          ProgramDateTimeIntervalSeconds: ""
          StreamSelection:
            MinVideoBitsPerSecond: ""
            StreamOrder: ""
            MaxVideoBitsPerSecond: ""
          PlaylistWindowSeconds: ""
          IncludeIframeOnlyStream: ""
          UseAudioRenditionGroup: ""
          SegmentDurationSeconds: ""
          Encryption:
            KeyRotationIntervalSeconds: ""
            RepeatExtXKey: ""
            ConstantInitializationVector: ""
            SpekeKeyProvider:
              ResourceId: ""
              SystemIds: ""
              EncryptionContractConfiguration:
                PresetSpeke20Audio: ""
                PresetSpeke20Video: ""
              RoleArn: ""
              Url: ""
              CertificateArn: ""
            EncryptionMethod: ""
          AdTriggers: ""
          IncludeDvbSubtitles: ""
          PlaylistType: ""
        DashPackage:
          AdsOnDeliveryRestrictions: ""
          ManifestWindowSeconds: ""
          ManifestLayout: ""
          StreamSelection:
            MinVideoBitsPerSecond: ""
            StreamOrder: ""
            MaxVideoBitsPerSecond: ""
          IncludeIframeOnlyStream: ""
          Encryption:
            KeyRotationIntervalSeconds: ""
            SpekeKeyProvider:
              ResourceId: ""
              SystemIds: ""
              EncryptionContractConfiguration:
                PresetSpeke20Audio: ""
                PresetSpeke20Video: ""
              RoleArn: ""
              Url: ""
              CertificateArn: ""
          SegmentTemplateFormat: ""
          AdTriggers: ""
          Profile: ""
          PeriodTriggers: ""
          SuggestedPresentationDelaySeconds: ""
          UtcTiming: ""
          MinBufferTimeSeconds: ""
          SegmentDurationSeconds: ""
          MinUpdatePeriodSeconds: ""
          UtcTimingUri: ""
        Tags: ""
        StartoverWindowSeconds: ""
      properties:
        Authorization:
          $ref: '#/components/schemas/CreateOriginEndpointResponse_Authorization'
        ChannelId:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: |
              The ID of the Channel that the OriginEndpoint will be associated with.
              This cannot be changed after the OriginEndpoint is created.
            xml:
              name: channelId
        CmafPackage:
          $ref: '#/components/schemas/CreateOriginEndpointRequest_CmafPackage'
        DashPackage:
          $ref: '#/components/schemas/CreateOriginEndpointResponse_DashPackage'
        Description:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: A short text description of the OriginEndpoint.
            xml:
              name: description
        HlsPackage:
          $ref: '#/components/schemas/CreateOriginEndpointResponse_HlsPackage'
        Id:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: |
              The ID of the OriginEndpoint.  The ID must be unique within the region
              and it cannot be changed after the OriginEndpoint is created.
            xml:
              name: id
        ManifestName:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: A short string that will be used as the filename of the OriginEndpoint
              URL (defaults to "index").
            xml:
              name: manifestName
        MssPackage:
          $ref: '#/components/schemas/CreateOriginEndpointResponse_MssPackage'
        Origination:
          allOf:
          - $ref: '#/components/schemas/Origination'
          - description: |
              Control whether origination of video is allowed for this OriginEndpoint. If set to ALLOW, the OriginEndpoint
              may by requested, pursuant to any other form of access control. If set to DENY, the OriginEndpoint may not be
              requested. This can be helpful for Live to VOD harvesting, or for temporarily disabling origination
            xml:
              name: origination
        StartoverWindowSeconds:
          allOf:
          - $ref: '#/components/schemas/__integer'
          - description: |
              Maximum duration (seconds) of content to retain for startover playback.
              If not specified, startover playback will be disabled for the OriginEndpoint.
            xml:
              name: startoverWindowSeconds
        Tags:
          allOf:
          - $ref: '#/components/schemas/Tags'
          - xml:
              name: tags
        TimeDelaySeconds:
          allOf:
          - $ref: '#/components/schemas/__integer'
          - description: |
              Amount of delay (seconds) to enforce on the playback of live content.
              If not specified, there will be no time delay in effect for the OriginEndpoint.
            xml:
              name: timeDelaySeconds
        Whitelist:
          allOf:
          - $ref: '#/components/schemas/__listOf__string'
          - description: A list of source IP CIDR blocks that will be allowed to access
              the OriginEndpoint.
            xml:
              name: whitelist
      required:
      - ChannelId
      - Id
      title: CreateOriginEndpointRequest
      type: object
    DeleteChannelRequest:
      properties: {}
      title: DeleteChannelRequest
      type: object
    DeleteOriginEndpointRequest:
      properties: {}
      title: DeleteOriginEndpointRequest
      type: object
    DescribeChannelRequest:
      properties: {}
      title: DescribeChannelRequest
      type: object
    DescribeHarvestJobRequest:
      properties: {}
      title: DescribeHarvestJobRequest
      type: object
    DescribeOriginEndpointRequest:
      properties: {}
      title: DescribeOriginEndpointRequest
      type: object
    PresetSpeke20Audio:
      enum:
      - PRESET-AUDIO-1
      - PRESET-AUDIO-2
      - PRESET-AUDIO-3
      - SHARED
      - UNENCRYPTED
      title: PresetSpeke20Audio
      type: string
    PresetSpeke20Video:
      enum:
      - PRESET-VIDEO-1
      - PRESET-VIDEO-2
      - PRESET-VIDEO-3
      - PRESET-VIDEO-4
      - PRESET-VIDEO-5
      - PRESET-VIDEO-6
      - PRESET-VIDEO-7
      - PRESET-VIDEO-8
      - SHARED
      - UNENCRYPTED
      title: PresetSpeke20Video
      type: string
    EncryptionContractConfiguration:
      description: "Use encryptionContractConfiguration to configure one or more content\
        \ encryption keys for your endpoints that use SPEKE 2.0. \nThe encryption\
        \ contract defines which content keys are used to encrypt the audio and video\
        \ tracks in your stream. \nTo configure the encryption contract, specify which\
        \ audio and video encryption presets to use.\nNote the following considerations\
        \ when using encryptionContractConfiguration:\nencryptionContractConfiguration\
        \ can be used for DASH or CMAF endpoints that use SPEKE 2.0. SPEKE 2.0 relies\
        \ on the CPIX 2.3 specification.\nYou must disable key rotation for this endpoint\
        \ by setting keyRotationIntervalSeconds to 0.\n"
      properties:
        PresetSpeke20Audio:
          allOf:
          - $ref: '#/components/schemas/PresetSpeke20Audio'
          - description: A collection of audio encryption presets.
            xml:
              name: presetSpeke20Audio
          title: PresetSpeke20Audio
        PresetSpeke20Video:
          allOf:
          - $ref: '#/components/schemas/PresetSpeke20Video'
          - description: A collection of video encryption presets.
            xml:
              name: presetSpeke20Video
          title: PresetSpeke20Video
      required:
      - PresetSpeke20Audio
      - PresetSpeke20Video
      title: EncryptionContractConfiguration
      type: object
    EncryptionMethod:
      enum:
      - AES_128
      - SAMPLE_AES
      title: EncryptionMethod
      type: string
    HarvestJob:
      description: A HarvestJob resource configuration
      properties:
        Arn:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: |
              The Amazon Resource Name (ARN) assigned to the HarvestJob.
            xml:
              name: arn
          title: Arn
        ChannelId:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: |
              The ID of the Channel that the HarvestJob will harvest from.
            xml:
              name: channelId
          title: ChannelId
        CreatedAt:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: |
              The date and time the HarvestJob was submitted.
            xml:
              name: createdAt
          title: CreatedAt
        EndTime:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: |
              The end of the time-window which will be harvested.
            xml:
              name: endTime
          title: EndTime
        Id:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: |
              The ID of the HarvestJob. The ID must be unique within the region
              and it cannot be changed after the HarvestJob is submitted.
            xml:
              name: id
          title: Id
        OriginEndpointId:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: |
              The ID of the OriginEndpoint that the HarvestJob will harvest from.
              This cannot be changed after the HarvestJob is submitted.
            xml:
              name: originEndpointId
          title: OriginEndpointId
        S3Destination:
          $ref: '#/components/schemas/CreateHarvestJobResponse_S3Destination'
        StartTime:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: |
              The start of the time-window which will be harvested.
            xml:
              name: startTime
          title: StartTime
        Status:
          allOf:
          - $ref: '#/components/schemas/Status'
          - description: |
              The current status of the HarvestJob. Consider setting up a CloudWatch Event to listen for
              HarvestJobs as they succeed or fail. In the event of failure, the CloudWatch Event will
              include an explanation of why the HarvestJob failed.
            xml:
              name: status
          title: Status
      title: HarvestJob
      type: object
    __listOfIngestEndpoint:
      items:
        $ref: '#/components/schemas/IngestEndpoint'
      type: array
    HlsManifest:
      description: A HTTP Live Streaming (HLS) manifest configuration.
      properties:
        AdMarkers:
          allOf:
          - $ref: '#/components/schemas/AdMarkers'
          - description: "This setting controls how ad markers are included in the\
              \ packaged OriginEndpoint.\n\"NONE\" will omit all SCTE-35 ad markers\
              \ from the output.\n\"PASSTHROUGH\" causes the manifest to contain a\
              \ copy of the SCTE-35 ad\nmarkers (comments) taken directly from the\
              \ input HTTP Live Streaming (HLS) manifest.\n\"SCTE35_ENHANCED\" generates\
              \ ad markers and blackout tags based on SCTE-35\nmessages in the input\
              \ source.\n\"DATERANGE\" inserts EXT-X-DATERANGE tags to signal ad and\
              \ program transition events \nin HLS and CMAF manifests. For this option,\
              \ you must set a programDateTimeIntervalSeconds value \nthat is greater\
              \ than 0.\n"
            xml:
              name: adMarkers
          title: AdMarkers
        Id:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The ID of the manifest. The ID must be unique within the
              OriginEndpoint and it cannot be changed after it is created.
            xml:
              name: id
          title: Id
        IncludeIframeOnlyStream:
          allOf:
          - $ref: '#/components/schemas/__boolean'
          - description: "When enabled, an I-Frame only stream will be included in\
              \ the output."
            xml:
              name: includeIframeOnlyStream
          title: IncludeIframeOnlyStream
        ManifestName:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: "An optional short string appended to the end of the OriginEndpoint\
              \ URL. If not specified, defaults to the manifestName for the OriginEndpoint."
            xml:
              name: manifestName
          title: ManifestName
        PlaylistType:
          allOf:
          - $ref: '#/components/schemas/PlaylistType'
          - description: |
              The HTTP Live Streaming (HLS) playlist type.
              When either "EVENT" or "VOD" is specified, a corresponding EXT-X-PLAYLIST-TYPE
              entry will be included in the media playlist.
            xml:
              name: playlistType
          title: PlaylistType
        PlaylistWindowSeconds:
          allOf:
          - $ref: '#/components/schemas/__integer'
          - description: Time window (in seconds) contained in each parent manifest.
            xml:
              name: playlistWindowSeconds
          title: PlaylistWindowSeconds
        ProgramDateTimeIntervalSeconds:
          allOf:
          - $ref: '#/components/schemas/__integer'
          - description: |
              The interval (in seconds) between each EXT-X-PROGRAM-DATE-TIME tag
              inserted into manifests. Additionally, when an interval is specified
              ID3Timed Metadata messages will be generated every 5 seconds using the
              ingest time of the content.
              If the interval is not specified, or set to 0, then
              no EXT-X-PROGRAM-DATE-TIME tags will be inserted into manifests and no
              ID3Timed Metadata messages will be generated. Note that irrespective
              of this parameter, if any ID3 Timed Metadata is found in HTTP Live Streaming (HLS) input,
              it will be passed through to HLS output.
            xml:
              name: programDateTimeIntervalSeconds
          title: ProgramDateTimeIntervalSeconds
        Url:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The URL of the packaged OriginEndpoint for consumption.
            xml:
              name: url
          title: Url
        AdTriggers:
          allOf:
          - $ref: '#/components/schemas/AdTriggers'
          - xml:
              name: adTriggers
          title: AdTriggers
        AdsOnDeliveryRestrictions:
          allOf:
          - $ref: '#/components/schemas/AdsOnDeliveryRestrictions'
          - xml:
              name: adsOnDeliveryRestrictions
          title: AdsOnDeliveryRestrictions
      required:
      - Id
      title: HlsManifest
      type: object
    HlsManifestCreateOrUpdateParameters:
      description: A HTTP Live Streaming (HLS) manifest configuration.
      properties:
        AdMarkers:
          allOf:
          - $ref: '#/components/schemas/AdMarkers'
          - description: "This setting controls how ad markers are included in the\
              \ packaged OriginEndpoint.\n\"NONE\" will omit all SCTE-35 ad markers\
              \ from the output.\n\"PASSTHROUGH\" causes the manifest to contain a\
              \ copy of the SCTE-35 ad\nmarkers (comments) taken directly from the\
              \ input HTTP Live Streaming (HLS) manifest.\n\"SCTE35_ENHANCED\" generates\
              \ ad markers and blackout tags based on SCTE-35\nmessages in the input\
              \ source.\n\"DATERANGE\" inserts EXT-X-DATERANGE tags to signal ad and\
              \ program transition events \nin HLS and CMAF manifests. For this option,\
              \ you must set a programDateTimeIntervalSeconds value \nthat is greater\
              \ than 0.\n"
            xml:
              name: adMarkers
          title: AdMarkers
        AdTriggers:
          allOf:
          - $ref: '#/components/schemas/AdTriggers'
          - xml:
              name: adTriggers
          title: AdTriggers
        AdsOnDeliveryRestrictions:
          allOf:
          - $ref: '#/components/schemas/AdsOnDeliveryRestrictions'
          - xml:
              name: adsOnDeliveryRestrictions
          title: AdsOnDeliveryRestrictions
        Id:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The ID of the manifest. The ID must be unique within the
              OriginEndpoint and it cannot be changed after it is created.
            xml:
              name: id
          title: Id
        IncludeIframeOnlyStream:
          allOf:
          - $ref: '#/components/schemas/__boolean'
          - description: "When enabled, an I-Frame only stream will be included in\
              \ the output."
            xml:
              name: includeIframeOnlyStream
          title: IncludeIframeOnlyStream
        ManifestName:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: "An optional short string appended to the end of the OriginEndpoint\
              \ URL. If not specified, defaults to the manifestName for the OriginEndpoint."
            xml:
              name: manifestName
          title: ManifestName
        PlaylistType:
          allOf:
          - $ref: '#/components/schemas/PlaylistType'
          - description: |
              The HTTP Live Streaming (HLS) playlist type.
              When either "EVENT" or "VOD" is specified, a corresponding EXT-X-PLAYLIST-TYPE
              entry will be included in the media playlist.
            xml:
              name: playlistType
          title: PlaylistType
        PlaylistWindowSeconds:
          allOf:
          - $ref: '#/components/schemas/__integer'
          - description: Time window (in seconds) contained in each parent manifest.
            xml:
              name: playlistWindowSeconds
          title: PlaylistWindowSeconds
        ProgramDateTimeIntervalSeconds:
          allOf:
          - $ref: '#/components/schemas/__integer'
          - description: |
              The interval (in seconds) between each EXT-X-PROGRAM-DATE-TIME tag
              inserted into manifests. Additionally, when an interval is specified
              ID3Timed Metadata messages will be generated every 5 seconds using the
              ingest time of the content.
              If the interval is not specified, or set to 0, then
              no EXT-X-PROGRAM-DATE-TIME tags will be inserted into manifests and no
              ID3Timed Metadata messages will be generated. Note that irrespective
              of this parameter, if any ID3 Timed Metadata is found in HTTP Live Streaming (HLS) input,
              it will be passed through to HLS output.
            xml:
              name: programDateTimeIntervalSeconds
          title: ProgramDateTimeIntervalSeconds
      required:
      - Id
      title: HlsManifestCreateOrUpdateParameters
      type: object
    IngestEndpoint:
      description: An endpoint for ingesting source content for a Channel.
      properties:
        Id:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The system generated unique identifier for the IngestEndpoint
            xml:
              name: id
          title: Id
        Password:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The system generated password for ingest authentication.
            xml:
              name: password
          title: Password
        Url:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The ingest URL to which the source stream should be sent.
            xml:
              name: url
          title: Url
        Username:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The system generated username for ingest authentication.
            xml:
              name: username
          title: Username
      title: IngestEndpoint
      type: object
    MaxResults:
      maximum: 1000
      minimum: 1
      type: integer
    ListChannelsRequest:
      properties: {}
      title: ListChannelsRequest
      type: object
    __listOfChannel:
      items:
        $ref: '#/components/schemas/Channel'
      type: array
    ListHarvestJobsRequest:
      properties: {}
      title: ListHarvestJobsRequest
      type: object
    __listOfHarvestJob:
      items:
        $ref: '#/components/schemas/HarvestJob'
      type: array
    ListOriginEndpointsRequest:
      properties: {}
      title: ListOriginEndpointsRequest
      type: object
    __listOfOriginEndpoint:
      items:
        $ref: '#/components/schemas/OriginEndpoint'
      type: array
    ListTagsForResourceRequest:
      properties: {}
      title: ListTagsForResourceRequest
      type: object
    __mapOf__string:
      additionalProperties:
        $ref: '#/components/schemas/__string'
      type: object
    OriginEndpoint:
      description: An OriginEndpoint resource configuration.
      properties:
        Arn:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The Amazon Resource Name (ARN) assigned to the OriginEndpoint.
            xml:
              name: arn
          title: Arn
        Authorization:
          $ref: '#/components/schemas/CreateOriginEndpointResponse_Authorization'
        ChannelId:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The ID of the Channel the OriginEndpoint is associated with.
            xml:
              name: channelId
          title: ChannelId
        CmafPackage:
          $ref: '#/components/schemas/CreateOriginEndpointResponse_CmafPackage'
        CreatedAt:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The date and time the OriginEndpoint was created.
            xml:
              name: createdAt
          title: CreatedAt
        DashPackage:
          $ref: '#/components/schemas/CreateOriginEndpointResponse_DashPackage'
        Description:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: A short text description of the OriginEndpoint.
            xml:
              name: description
          title: Description
        HlsPackage:
          $ref: '#/components/schemas/CreateOriginEndpointResponse_HlsPackage'
        Id:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The ID of the OriginEndpoint.
            xml:
              name: id
          title: Id
        ManifestName:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: A short string appended to the end of the OriginEndpoint
              URL.
            xml:
              name: manifestName
          title: ManifestName
        MssPackage:
          $ref: '#/components/schemas/CreateOriginEndpointResponse_MssPackage'
        Origination:
          allOf:
          - $ref: '#/components/schemas/Origination'
          - description: |
              Control whether origination of video is allowed for this OriginEndpoint. If set to ALLOW, the OriginEndpoint
              may by requested, pursuant to any other form of access control. If set to DENY, the OriginEndpoint may not be
              requested. This can be helpful for Live to VOD harvesting, or for temporarily disabling origination
            xml:
              name: origination
          title: Origination
        StartoverWindowSeconds:
          allOf:
          - $ref: '#/components/schemas/__integer'
          - description: |
              Maximum duration (seconds) of content to retain for startover playback.
              If not specified, startover playback will be disabled for the OriginEndpoint.
            xml:
              name: startoverWindowSeconds
          title: StartoverWindowSeconds
        Tags:
          allOf:
          - $ref: '#/components/schemas/Tags'
          - xml:
              name: tags
          title: Tags
        TimeDelaySeconds:
          allOf:
          - $ref: '#/components/schemas/__integer'
          - description: |
              Amount of delay (seconds) to enforce on the playback of live content.
              If not specified, there will be no time delay in effect for the OriginEndpoint.
            xml:
              name: timeDelaySeconds
          title: TimeDelaySeconds
        Url:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The URL of the packaged OriginEndpoint for consumption.
            xml:
              name: url
          title: Url
        Whitelist:
          allOf:
          - $ref: '#/components/schemas/__listOf__string'
          - description: A list of source IP CIDR blocks that will be allowed to access
              the OriginEndpoint.
            xml:
              name: whitelist
          title: Whitelist
      title: OriginEndpoint
      type: object
    RotateChannelCredentialsRequest:
      deprecated: true
      properties: {}
      title: RotateChannelCredentialsRequest
      type: object
    RotateIngestEndpointCredentialsRequest:
      properties: {}
      title: RotateIngestEndpointCredentialsRequest
      type: object
    StreamOrder:
      enum:
      - ORIGINAL
      - VIDEO_BITRATE_ASCENDING
      - VIDEO_BITRATE_DESCENDING
      title: StreamOrder
      type: string
    TagResourceRequest:
      example:
        Tags: ""
      properties:
        Tags:
          allOf:
          - $ref: '#/components/schemas/__mapOf__string'
          - xml:
              name: tags
      required:
      - Tags
      title: TagResourceRequest
      type: object
    UntagResourceRequest:
      properties: {}
      title: UntagResourceRequest
      type: object
    UpdateChannelRequest:
      description: Configuration parameters used to update the Channel.
      example:
        Description: ""
      properties:
        Description:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: A short text description of the Channel.
            xml:
              name: description
      title: UpdateChannelRequest
      type: object
    UpdateOriginEndpointRequest:
      description: Configuration parameters used to update an existing OriginEndpoint.
      example:
        Authorization:
          SecretsRoleArn: ""
          CdnIdentifierSecret: ""
        MssPackage:
          ManifestWindowSeconds: ""
          StreamSelection:
            MinVideoBitsPerSecond: ""
            StreamOrder: ""
            MaxVideoBitsPerSecond: ""
          SegmentDurationSeconds: ""
          Encryption:
            SpekeKeyProvider:
              ResourceId: ""
              SystemIds: ""
              EncryptionContractConfiguration:
                PresetSpeke20Audio: ""
                PresetSpeke20Video: ""
              RoleArn: ""
              Url: ""
              CertificateArn: ""
        ManifestName: ""
        Description: ""
        CmafPackage:
          SegmentPrefix: ""
          StreamSelection:
            MinVideoBitsPerSecond: ""
            StreamOrder: ""
            MaxVideoBitsPerSecond: ""
          SegmentDurationSeconds: ""
          Encryption:
            KeyRotationIntervalSeconds: ""
            ConstantInitializationVector: ""
            SpekeKeyProvider:
              ResourceId: ""
              SystemIds: ""
              EncryptionContractConfiguration:
                PresetSpeke20Audio: ""
                PresetSpeke20Video: ""
              RoleArn: ""
              Url: ""
              CertificateArn: ""
            EncryptionMethod: ""
          HlsManifests: ""
        Whitelist: ""
        HlsPackage:
          AdsOnDeliveryRestrictions: ""
          AdMarkers: ""
          ProgramDateTimeIntervalSeconds: ""
          StreamSelection:
            MinVideoBitsPerSecond: ""
            StreamOrder: ""
            MaxVideoBitsPerSecond: ""
          PlaylistWindowSeconds: ""
          IncludeIframeOnlyStream: ""
          UseAudioRenditionGroup: ""
          SegmentDurationSeconds: ""
          Encryption:
            KeyRotationIntervalSeconds: ""
            RepeatExtXKey: ""
            ConstantInitializationVector: ""
            SpekeKeyProvider:
              ResourceId: ""
              SystemIds: ""
              EncryptionContractConfiguration:
                PresetSpeke20Audio: ""
                PresetSpeke20Video: ""
              RoleArn: ""
              Url: ""
              CertificateArn: ""
            EncryptionMethod: ""
          AdTriggers: ""
          IncludeDvbSubtitles: ""
          PlaylistType: ""
        DashPackage:
          AdsOnDeliveryRestrictions: ""
          ManifestWindowSeconds: ""
          ManifestLayout: ""
          StreamSelection:
            MinVideoBitsPerSecond: ""
            StreamOrder: ""
            MaxVideoBitsPerSecond: ""
          IncludeIframeOnlyStream: ""
          Encryption:
            KeyRotationIntervalSeconds: ""
            SpekeKeyProvider:
              ResourceId: ""
              SystemIds: ""
              EncryptionContractConfiguration:
                PresetSpeke20Audio: ""
                PresetSpeke20Video: ""
              RoleArn: ""
              Url: ""
              CertificateArn: ""
          SegmentTemplateFormat: ""
          AdTriggers: ""
          Profile: ""
          PeriodTriggers: ""
          SuggestedPresentationDelaySeconds: ""
          UtcTiming: ""
          MinBufferTimeSeconds: ""
          SegmentDurationSeconds: ""
          MinUpdatePeriodSeconds: ""
          UtcTimingUri: ""
        Origination: ""
        TimeDelaySeconds: ""
        StartoverWindowSeconds: ""
      properties:
        Authorization:
          $ref: '#/components/schemas/CreateOriginEndpointResponse_Authorization'
        CmafPackage:
          $ref: '#/components/schemas/CreateOriginEndpointRequest_CmafPackage'
        DashPackage:
          $ref: '#/components/schemas/CreateOriginEndpointResponse_DashPackage'
        Description:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: A short text description of the OriginEndpoint.
            xml:
              name: description
        HlsPackage:
          $ref: '#/components/schemas/CreateOriginEndpointResponse_HlsPackage'
        ManifestName:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: A short string that will be appended to the end of the Endpoint
              URL.
            xml:
              name: manifestName
        MssPackage:
          $ref: '#/components/schemas/CreateOriginEndpointResponse_MssPackage'
        Origination:
          allOf:
          - $ref: '#/components/schemas/Origination'
          - description: |
              Control whether origination of video is allowed for this OriginEndpoint. If set to ALLOW, the OriginEndpoint
              may by requested, pursuant to any other form of access control. If set to DENY, the OriginEndpoint may not be
              requested. This can be helpful for Live to VOD harvesting, or for temporarily disabling origination
            xml:
              name: origination
        StartoverWindowSeconds:
          allOf:
          - $ref: '#/components/schemas/__integer'
          - description: |
              Maximum duration (in seconds) of content to retain for startover playback.
              If not specified, startover playback will be disabled for the OriginEndpoint.
            xml:
              name: startoverWindowSeconds
        TimeDelaySeconds:
          allOf:
          - $ref: '#/components/schemas/__integer'
          - description: |
              Amount of delay (in seconds) to enforce on the playback of live content.
              If not specified, there will be no time delay in effect for the OriginEndpoint.
            xml:
              name: timeDelaySeconds
        Whitelist:
          allOf:
          - $ref: '#/components/schemas/__listOf__string'
          - description: A list of source IP CIDR blocks that will be allowed to access
              the OriginEndpoint.
            xml:
              name: whitelist
      title: UpdateOriginEndpointRequest
      type: object
    __PeriodTriggersElement:
      enum:
      - ADS
      title: __PeriodTriggersElement
      type: string
    ConfigureLogs_request_egressAccessLogs:
      description: Configure egress access logging.
      properties:
        LogGroupName:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: Customize the log group name.
            xml:
              name: logGroupName
          title: LogGroupName
      title: ConfigureLogs_request_egressAccessLogs
      type: object
    ConfigureLogs_request_ingressAccessLogs:
      description: Configure ingress access logging.
      properties:
        LogGroupName:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: Customize the log group name.
            xml:
              name: logGroupName
          title: LogGroupName
      title: ConfigureLogs_request_ingressAccessLogs
      type: object
    ConfigureLogs_request:
      properties:
        egressAccessLogs:
          $ref: '#/components/schemas/ConfigureLogs_request_egressAccessLogs'
        ingressAccessLogs:
          $ref: '#/components/schemas/ConfigureLogs_request_ingressAccessLogs'
      title: ConfigureLogs_request
      type: object
    CreateChannel_request:
      properties:
        description:
          description: A short text description of the Channel.
          title: description
          type: string
        id:
          description: |
            The ID of the Channel. The ID must be unique within the region and it
            cannot be changed after a Channel is created.
          title: id
          type: string
        tags:
          additionalProperties:
            $ref: '#/components/schemas/__string'
          description: A collection of tags associated with a resource
          title: tags
          type: object
      required:
      - id
      title: CreateChannel_request
      type: object
    CreateHarvestJob_request_s3Destination:
      description: |
        Configuration parameters for where in an S3 bucket to place the harvested content
      properties:
        BucketName:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: |
              The name of an S3 bucket within which harvested content will be exported
            xml:
              name: bucketName
          title: BucketName
        ManifestKey:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: |
              The key in the specified S3 bucket where the harvested top-level manifest will be placed.
            xml:
              name: manifestKey
          title: ManifestKey
        RoleArn:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: |
              The IAM role used to write to the specified S3 bucket
            xml:
              name: roleArn
          title: RoleArn
      title: CreateHarvestJob_request_s3Destination
      type: object
    CreateHarvestJob_request:
      properties:
        endTime:
          description: |
            The end of the time-window which will be harvested
          title: endTime
          type: string
        id:
          description: |
            The ID of the HarvestJob. The ID must be unique within the region
            and it cannot be changed after the HarvestJob is submitted
          title: id
          type: string
        originEndpointId:
          description: |
            The ID of the OriginEndpoint that the HarvestJob will harvest from.
            This cannot be changed after the HarvestJob is submitted.
          title: originEndpointId
          type: string
        s3Destination:
          $ref: '#/components/schemas/CreateHarvestJob_request_s3Destination'
        startTime:
          description: |
            The start of the time-window which will be harvested
          title: startTime
          type: string
      required:
      - endTime
      - id
      - originEndpointId
      - s3Destination
      - startTime
      title: CreateHarvestJob_request
      type: object
    CreateOriginEndpoint_request_authorization:
      description: CDN Authorization credentials
      properties:
        CdnIdentifierSecret:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: |
              The Amazon Resource Name (ARN) for the secret in Secrets Manager that your Content Distribution Network (CDN) uses for authorization to access your endpoint.
            xml:
              name: cdnIdentifierSecret
          title: CdnIdentifierSecret
        SecretsRoleArn:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: |
              The Amazon Resource Name (ARN) for the IAM role that allows MediaPackage to communicate with AWS Secrets Manager.
            xml:
              name: secretsRoleArn
          title: SecretsRoleArn
      title: CreateOriginEndpoint_request_authorization
      type: object
    CreateOriginEndpoint_request_cmafPackage_Encryption:
      allOf:
      - $ref: '#/components/schemas/CmafEncryption'
      - xml:
          name: encryption
      example:
        KeyRotationIntervalSeconds: ""
        ConstantInitializationVector: ""
        SpekeKeyProvider:
          ResourceId: ""
          SystemIds: ""
          EncryptionContractConfiguration:
            PresetSpeke20Audio: ""
            PresetSpeke20Video: ""
          RoleArn: ""
          Url: ""
          CertificateArn: ""
        EncryptionMethod: ""
      title: CreateOriginEndpoint_request_cmafPackage_Encryption
    CreateOriginEndpoint_request_cmafPackage_StreamSelection:
      allOf:
      - $ref: '#/components/schemas/StreamSelection'
      - xml:
          name: streamSelection
      example:
        MinVideoBitsPerSecond: ""
        StreamOrder: ""
        MaxVideoBitsPerSecond: ""
      title: CreateOriginEndpoint_request_cmafPackage_StreamSelection
    CreateOriginEndpoint_request_cmafPackage:
      description: A Common Media Application Format (CMAF) packaging configuration.
      properties:
        Encryption:
          $ref: '#/components/schemas/CreateOriginEndpoint_request_cmafPackage_Encryption'
        HlsManifests:
          allOf:
          - $ref: '#/components/schemas/__listOfHlsManifestCreateOrUpdateParameters'
          - description: A list of HLS manifest configurations
            xml:
              name: hlsManifests
          title: HlsManifests
        SegmentDurationSeconds:
          allOf:
          - $ref: '#/components/schemas/__integer'
          - description: |
              Duration (in seconds) of each segment. Actual segments will be
              rounded to the nearest multiple of the source segment duration.
            xml:
              name: segmentDurationSeconds
          title: SegmentDurationSeconds
        SegmentPrefix:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: "An optional custom string that is prepended to the name\
              \ of each segment. If not specified, it defaults to the ChannelId."
            xml:
              name: segmentPrefix
          title: SegmentPrefix
        StreamSelection:
          $ref: '#/components/schemas/CreateOriginEndpoint_request_cmafPackage_StreamSelection'
      title: CreateOriginEndpoint_request_cmafPackage
      type: object
    CreateOriginEndpoint_request_dashPackage_Encryption:
      allOf:
      - $ref: '#/components/schemas/DashEncryption'
      - xml:
          name: encryption
      example:
        KeyRotationIntervalSeconds: ""
        SpekeKeyProvider:
          ResourceId: ""
          SystemIds: ""
          EncryptionContractConfiguration:
            PresetSpeke20Audio: ""
            PresetSpeke20Video: ""
          RoleArn: ""
          Url: ""
          CertificateArn: ""
      title: CreateOriginEndpoint_request_dashPackage_Encryption
    CreateOriginEndpoint_request_dashPackage:
      description: A Dynamic Adaptive Streaming over HTTP (DASH) packaging configuration.
      properties:
        AdTriggers:
          allOf:
          - $ref: '#/components/schemas/AdTriggers'
          - xml:
              name: adTriggers
          title: AdTriggers
        AdsOnDeliveryRestrictions:
          allOf:
          - $ref: '#/components/schemas/AdsOnDeliveryRestrictions'
          - xml:
              name: adsOnDeliveryRestrictions
          title: AdsOnDeliveryRestrictions
        Encryption:
          $ref: '#/components/schemas/CreateOriginEndpoint_request_dashPackage_Encryption'
        IncludeIframeOnlyStream:
          allOf:
          - $ref: '#/components/schemas/__boolean'
          - description: "When enabled, an I-Frame only stream will be included in\
              \ the output."
            xml:
              name: includeIframeOnlyStream
          title: IncludeIframeOnlyStream
        ManifestLayout:
          allOf:
          - $ref: '#/components/schemas/ManifestLayout'
          - description: "Determines the position of some tags in the Media Presentation\
              \ Description (MPD).  When set to FULL, elements like SegmentTemplate\
              \ and ContentProtection are included in each Representation.  When set\
              \ to COMPACT, duplicate elements are combined and presented at the AdaptationSet\
              \ level."
            xml:
              name: manifestLayout
          title: ManifestLayout
        ManifestWindowSeconds:
          allOf:
          - $ref: '#/components/schemas/__integer'
          - description: Time window (in seconds) contained in each manifest.
            xml:
              name: manifestWindowSeconds
          title: ManifestWindowSeconds
        MinBufferTimeSeconds:
          allOf:
          - $ref: '#/components/schemas/__integer'
          - description: Minimum duration (in seconds) that a player will buffer media
              before starting the presentation.
            xml:
              name: minBufferTimeSeconds
          title: MinBufferTimeSeconds
        MinUpdatePeriodSeconds:
          allOf:
          - $ref: '#/components/schemas/__integer'
          - description: Minimum duration (in seconds) between potential changes to
              the Dynamic Adaptive Streaming over HTTP (DASH) Media Presentation Description
              (MPD).
            xml:
              name: minUpdatePeriodSeconds
          title: MinUpdatePeriodSeconds
        PeriodTriggers:
          allOf:
          - $ref: '#/components/schemas/__listOf__PeriodTriggersElement'
          - description: |
              A list of triggers that controls when the outgoing Dynamic Adaptive Streaming over HTTP (DASH)
              Media Presentation Description (MPD) will be partitioned into multiple periods. If empty, the content will not
              be partitioned into more than one period. If the list contains "ADS", new periods will be created where
              the Channel source contains SCTE-35 ad markers.
            xml:
              name: periodTriggers
          title: PeriodTriggers
        Profile:
          allOf:
          - $ref: '#/components/schemas/Profile'
          - description: "The Dynamic Adaptive Streaming over HTTP (DASH) profile\
              \ type.  When set to \"HBBTV_1_5\", HbbTV 1.5 compliant output is enabled.\
              \ When set to \"DVB-DASH_2014\", DVB-DASH 2014 compliant output is enabled."
            xml:
              name: profile
          title: Profile
        SegmentDurationSeconds:
          allOf:
          - $ref: '#/components/schemas/__integer'
          - description: |
              Duration (in seconds) of each segment. Actual segments will be
              rounded to the nearest multiple of the source segment duration.
            xml:
              name: segmentDurationSeconds
          title: SegmentDurationSeconds
        SegmentTemplateFormat:
          allOf:
          - $ref: '#/components/schemas/SegmentTemplateFormat'
          - description: "Determines the type of SegmentTemplate included in the Media\
              \ Presentation Description (MPD).  When set to NUMBER_WITH_TIMELINE,\
              \ a full timeline is presented in each SegmentTemplate, with $Number$\
              \ media URLs.  When set to TIME_WITH_TIMELINE, a full timeline is presented\
              \ in each SegmentTemplate, with $Time$ media URLs. When set to NUMBER_WITH_DURATION,\
              \ only a duration is included in each SegmentTemplate, with $Number$\
              \ media URLs."
            xml:
              name: segmentTemplateFormat
          title: SegmentTemplateFormat
        StreamSelection:
          $ref: '#/components/schemas/CreateOriginEndpoint_request_cmafPackage_StreamSelection'
        SuggestedPresentationDelaySeconds:
          allOf:
          - $ref: '#/components/schemas/__integer'
          - description: Duration (in seconds) to delay live content before presentation.
            xml:
              name: suggestedPresentationDelaySeconds
          title: SuggestedPresentationDelaySeconds
        UtcTiming:
          allOf:
          - $ref: '#/components/schemas/UtcTiming'
          - description: Determines the type of UTCTiming included in the Media Presentation
              Description (MPD)
            xml:
              name: utcTiming
          title: UtcTiming
        UtcTimingUri:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: "Specifies the value attribute of the UTCTiming field when\
              \ utcTiming is set to HTTP-ISO, HTTP-HEAD or HTTP-XSDATE"
            xml:
              name: utcTimingUri
          title: UtcTimingUri
      title: CreateOriginEndpoint_request_dashPackage
      type: object
    CreateOriginEndpoint_request_hlsPackage_Encryption:
      allOf:
      - $ref: '#/components/schemas/HlsEncryption'
      - xml:
          name: encryption
      example:
        KeyRotationIntervalSeconds: ""
        RepeatExtXKey: ""
        ConstantInitializationVector: ""
        SpekeKeyProvider:
          ResourceId: ""
          SystemIds: ""
          EncryptionContractConfiguration:
            PresetSpeke20Audio: ""
            PresetSpeke20Video: ""
          RoleArn: ""
          Url: ""
          CertificateArn: ""
        EncryptionMethod: ""
      title: CreateOriginEndpoint_request_hlsPackage_Encryption
    CreateOriginEndpoint_request_hlsPackage:
      description: An HTTP Live Streaming (HLS) packaging configuration.
      properties:
        AdMarkers:
          allOf:
          - $ref: '#/components/schemas/AdMarkers'
          - description: "This setting controls how ad markers are included in the\
              \ packaged OriginEndpoint.\n\"NONE\" will omit all SCTE-35 ad markers\
              \ from the output.\n\"PASSTHROUGH\" causes the manifest to contain a\
              \ copy of the SCTE-35 ad\nmarkers (comments) taken directly from the\
              \ input HTTP Live Streaming (HLS) manifest.\n\"SCTE35_ENHANCED\" generates\
              \ ad markers and blackout tags based on SCTE-35\nmessages in the input\
              \ source.\n\"DATERANGE\" inserts EXT-X-DATERANGE tags to signal ad and\
              \ program transition events \nin HLS and CMAF manifests. For this option,\
              \ you must set a programDateTimeIntervalSeconds value \nthat is greater\
              \ than 0.\n"
            xml:
              name: adMarkers
          title: AdMarkers
        AdTriggers:
          allOf:
          - $ref: '#/components/schemas/AdTriggers'
          - xml:
              name: adTriggers
          title: AdTriggers
        AdsOnDeliveryRestrictions:
          allOf:
          - $ref: '#/components/schemas/AdsOnDeliveryRestrictions'
          - xml:
              name: adsOnDeliveryRestrictions
          title: AdsOnDeliveryRestrictions
        Encryption:
          $ref: '#/components/schemas/CreateOriginEndpoint_request_hlsPackage_Encryption'
        IncludeDvbSubtitles:
          allOf:
          - $ref: '#/components/schemas/__boolean'
          - description: "When enabled, MediaPackage passes through digital video\
              \ broadcasting (DVB) subtitles into the output."
            xml:
              name: includeDvbSubtitles
          title: IncludeDvbSubtitles
        IncludeIframeOnlyStream:
          allOf:
          - $ref: '#/components/schemas/__boolean'
          - description: "When enabled, an I-Frame only stream will be included in\
              \ the output."
            xml:
              name: includeIframeOnlyStream
          title: IncludeIframeOnlyStream
        PlaylistType:
          allOf:
          - $ref: '#/components/schemas/PlaylistType'
          - description: |
              The HTTP Live Streaming (HLS) playlist type.
              When either "EVENT" or "VOD" is specified, a corresponding EXT-X-PLAYLIST-TYPE
              entry will be included in the media playlist.
            xml:
              name: playlistType
          title: PlaylistType
        PlaylistWindowSeconds:
          allOf:
          - $ref: '#/components/schemas/__integer'
          - description: Time window (in seconds) contained in each parent manifest.
            xml:
              name: playlistWindowSeconds
          title: PlaylistWindowSeconds
        ProgramDateTimeIntervalSeconds:
          allOf:
          - $ref: '#/components/schemas/__integer'
          - description: |
              The interval (in seconds) between each EXT-X-PROGRAM-DATE-TIME tag
              inserted into manifests. Additionally, when an interval is specified
              ID3Timed Metadata messages will be generated every 5 seconds using the
              ingest time of the content.
              If the interval is not specified, or set to 0, then
              no EXT-X-PROGRAM-DATE-TIME tags will be inserted into manifests and no
              ID3Timed Metadata messages will be generated. Note that irrespective
              of this parameter, if any ID3 Timed Metadata is found in HTTP Live Streaming (HLS) input,
              it will be passed through to HLS output.
            xml:
              name: programDateTimeIntervalSeconds
          title: ProgramDateTimeIntervalSeconds
        SegmentDurationSeconds:
          allOf:
          - $ref: '#/components/schemas/__integer'
          - description: |
              Duration (in seconds) of each fragment. Actual fragments will be
              rounded to the nearest multiple of the source fragment duration.
            xml:
              name: segmentDurationSeconds
          title: SegmentDurationSeconds
        StreamSelection:
          $ref: '#/components/schemas/CreateOriginEndpoint_request_cmafPackage_StreamSelection'
        UseAudioRenditionGroup:
          allOf:
          - $ref: '#/components/schemas/__boolean'
          - description: "When enabled, audio streams will be placed in rendition\
              \ groups in the output."
            xml:
              name: useAudioRenditionGroup
          title: UseAudioRenditionGroup
      title: CreateOriginEndpoint_request_hlsPackage
      type: object
    CreateOriginEndpoint_request_mssPackage_Encryption:
      allOf:
      - $ref: '#/components/schemas/MssEncryption'
      - xml:
          name: encryption
      example:
        SpekeKeyProvider:
          ResourceId: ""
          SystemIds: ""
          EncryptionContractConfiguration:
            PresetSpeke20Audio: ""
            PresetSpeke20Video: ""
          RoleArn: ""
          Url: ""
          CertificateArn: ""
      title: CreateOriginEndpoint_request_mssPackage_Encryption
    CreateOriginEndpoint_request_mssPackage:
      description: A Microsoft Smooth Streaming (MSS) packaging configuration.
      properties:
        Encryption:
          $ref: '#/components/schemas/CreateOriginEndpoint_request_mssPackage_Encryption'
        ManifestWindowSeconds:
          allOf:
          - $ref: '#/components/schemas/__integer'
          - description: The time window (in seconds) contained in each manifest.
            xml:
              name: manifestWindowSeconds
          title: ManifestWindowSeconds
        SegmentDurationSeconds:
          allOf:
          - $ref: '#/components/schemas/__integer'
          - description: The duration (in seconds) of each segment.
            xml:
              name: segmentDurationSeconds
          title: SegmentDurationSeconds
        StreamSelection:
          $ref: '#/components/schemas/CreateOriginEndpoint_request_cmafPackage_StreamSelection'
      title: CreateOriginEndpoint_request_mssPackage
      type: object
    CreateOriginEndpoint_request:
      properties:
        authorization:
          $ref: '#/components/schemas/CreateOriginEndpoint_request_authorization'
        channelId:
          description: |
            The ID of the Channel that the OriginEndpoint will be associated with.
            This cannot be changed after the OriginEndpoint is created.
          title: channelId
          type: string
        cmafPackage:
          $ref: '#/components/schemas/CreateOriginEndpoint_request_cmafPackage'
        dashPackage:
          $ref: '#/components/schemas/CreateOriginEndpoint_request_dashPackage'
        description:
          description: A short text description of the OriginEndpoint.
          title: description
          type: string
        hlsPackage:
          $ref: '#/components/schemas/CreateOriginEndpoint_request_hlsPackage'
        id:
          description: |
            The ID of the OriginEndpoint.  The ID must be unique within the region
            and it cannot be changed after the OriginEndpoint is created.
          title: id
          type: string
        manifestName:
          description: A short string that will be used as the filename of the OriginEndpoint
            URL (defaults to "index").
          title: manifestName
          type: string
        mssPackage:
          $ref: '#/components/schemas/CreateOriginEndpoint_request_mssPackage'
        origination:
          description: |
            Control whether origination of video is allowed for this OriginEndpoint. If set to ALLOW, the OriginEndpoint
            may by requested, pursuant to any other form of access control. If set to DENY, the OriginEndpoint may not be
            requested. This can be helpful for Live to VOD harvesting, or for temporarily disabling origination
          enum:
          - ALLOW
          - DENY
          title: origination
          type: string
        startoverWindowSeconds:
          description: |
            Maximum duration (seconds) of content to retain for startover playback.
            If not specified, startover playback will be disabled for the OriginEndpoint.
          title: startoverWindowSeconds
          type: integer
        tags:
          additionalProperties:
            $ref: '#/components/schemas/__string'
          description: A collection of tags associated with a resource
          title: tags
          type: object
        timeDelaySeconds:
          description: |
            Amount of delay (seconds) to enforce on the playback of live content.
            If not specified, there will be no time delay in effect for the OriginEndpoint.
          title: timeDelaySeconds
          type: integer
        whitelist:
          description: A list of source IP CIDR blocks that will be allowed to access
            the OriginEndpoint.
          items:
            $ref: '#/components/schemas/__string'
          title: whitelist
          type: array
      required:
      - channelId
      - id
      title: CreateOriginEndpoint_request
      type: object
    UpdateChannel_request:
      properties:
        description:
          description: A short text description of the Channel.
          title: description
          type: string
      title: UpdateChannel_request
      type: object
    UpdateOriginEndpoint_request:
      properties:
        authorization:
          $ref: '#/components/schemas/CreateOriginEndpoint_request_authorization'
        cmafPackage:
          $ref: '#/components/schemas/CreateOriginEndpoint_request_cmafPackage'
        dashPackage:
          $ref: '#/components/schemas/CreateOriginEndpoint_request_dashPackage'
        description:
          description: A short text description of the OriginEndpoint.
          title: description
          type: string
        hlsPackage:
          $ref: '#/components/schemas/CreateOriginEndpoint_request_hlsPackage'
        manifestName:
          description: A short string that will be appended to the end of the Endpoint
            URL.
          title: manifestName
          type: string
        mssPackage:
          $ref: '#/components/schemas/CreateOriginEndpoint_request_mssPackage'
        origination:
          description: |
            Control whether origination of video is allowed for this OriginEndpoint. If set to ALLOW, the OriginEndpoint
            may by requested, pursuant to any other form of access control. If set to DENY, the OriginEndpoint may not be
            requested. This can be helpful for Live to VOD harvesting, or for temporarily disabling origination
          enum:
          - ALLOW
          - DENY
          title: origination
          type: string
        startoverWindowSeconds:
          description: |
            Maximum duration (in seconds) of content to retain for startover playback.
            If not specified, startover playback will be disabled for the OriginEndpoint.
          title: startoverWindowSeconds
          type: integer
        timeDelaySeconds:
          description: |
            Amount of delay (in seconds) to enforce on the playback of live content.
            If not specified, there will be no time delay in effect for the OriginEndpoint.
          title: timeDelaySeconds
          type: integer
        whitelist:
          description: A list of source IP CIDR blocks that will be allowed to access
            the OriginEndpoint.
          items:
            $ref: '#/components/schemas/__string'
          title: whitelist
          type: array
      title: UpdateOriginEndpoint_request
      type: object
    TagResource_request:
      properties:
        tags:
          additionalProperties:
            $ref: '#/components/schemas/__string'
          description: ""
          title: tags
          type: object
      required:
      - tags
      title: TagResource_request
      type: object
    ConfigureLogsResponse_EgressAccessLogs:
      allOf:
      - $ref: '#/components/schemas/EgressAccessLogs'
      - xml:
          name: egressAccessLogs
      example:
        LogGroupName: ""
      title: ConfigureLogsResponse_EgressAccessLogs
    ConfigureLogsResponse_HlsIngest:
      allOf:
      - $ref: '#/components/schemas/HlsIngest'
      - xml:
          name: hlsIngest
      example:
        IngestEndpoints: ""
      title: ConfigureLogsResponse_HlsIngest
    ConfigureLogsResponse_IngressAccessLogs:
      allOf:
      - $ref: '#/components/schemas/IngressAccessLogs'
      - xml:
          name: ingressAccessLogs
      example:
        LogGroupName: ""
      title: ConfigureLogsResponse_IngressAccessLogs
    CreateHarvestJobResponse_S3Destination:
      allOf:
      - $ref: '#/components/schemas/S3Destination'
      - xml:
          name: s3Destination
      example:
        ManifestKey: ""
        BucketName: ""
        RoleArn: ""
      title: CreateHarvestJobResponse_S3Destination
    CreateOriginEndpointResponse_Authorization:
      allOf:
      - $ref: '#/components/schemas/Authorization'
      - xml:
          name: authorization
      example:
        SecretsRoleArn: ""
        CdnIdentifierSecret: ""
      title: CreateOriginEndpointResponse_Authorization
    CreateOriginEndpointResponse_CmafPackage:
      allOf:
      - $ref: '#/components/schemas/CmafPackage'
      - xml:
          name: cmafPackage
      example:
        SegmentPrefix: ""
        StreamSelection:
          MinVideoBitsPerSecond: ""
          StreamOrder: ""
          MaxVideoBitsPerSecond: ""
        SegmentDurationSeconds: ""
        Encryption:
          KeyRotationIntervalSeconds: ""
          ConstantInitializationVector: ""
          SpekeKeyProvider:
            ResourceId: ""
            SystemIds: ""
            EncryptionContractConfiguration:
              PresetSpeke20Audio: ""
              PresetSpeke20Video: ""
            RoleArn: ""
            Url: ""
            CertificateArn: ""
          EncryptionMethod: ""
        HlsManifests: ""
      title: CreateOriginEndpointResponse_CmafPackage
    CreateOriginEndpointResponse_DashPackage:
      allOf:
      - $ref: '#/components/schemas/DashPackage'
      - xml:
          name: dashPackage
      example:
        AdsOnDeliveryRestrictions: ""
        ManifestWindowSeconds: ""
        ManifestLayout: ""
        StreamSelection:
          MinVideoBitsPerSecond: ""
          StreamOrder: ""
          MaxVideoBitsPerSecond: ""
        IncludeIframeOnlyStream: ""
        Encryption:
          KeyRotationIntervalSeconds: ""
          SpekeKeyProvider:
            ResourceId: ""
            SystemIds: ""
            EncryptionContractConfiguration:
              PresetSpeke20Audio: ""
              PresetSpeke20Video: ""
            RoleArn: ""
            Url: ""
            CertificateArn: ""
        SegmentTemplateFormat: ""
        AdTriggers: ""
        Profile: ""
        PeriodTriggers: ""
        SuggestedPresentationDelaySeconds: ""
        UtcTiming: ""
        MinBufferTimeSeconds: ""
        SegmentDurationSeconds: ""
        MinUpdatePeriodSeconds: ""
        UtcTimingUri: ""
      title: CreateOriginEndpointResponse_DashPackage
    CreateOriginEndpointResponse_HlsPackage:
      allOf:
      - $ref: '#/components/schemas/HlsPackage'
      - xml:
          name: hlsPackage
      example:
        AdsOnDeliveryRestrictions: ""
        AdMarkers: ""
        ProgramDateTimeIntervalSeconds: ""
        StreamSelection:
          MinVideoBitsPerSecond: ""
          StreamOrder: ""
          MaxVideoBitsPerSecond: ""
        PlaylistWindowSeconds: ""
        IncludeIframeOnlyStream: ""
        UseAudioRenditionGroup: ""
        SegmentDurationSeconds: ""
        Encryption:
          KeyRotationIntervalSeconds: ""
          RepeatExtXKey: ""
          ConstantInitializationVector: ""
          SpekeKeyProvider:
            ResourceId: ""
            SystemIds: ""
            EncryptionContractConfiguration:
              PresetSpeke20Audio: ""
              PresetSpeke20Video: ""
            RoleArn: ""
            Url: ""
            CertificateArn: ""
          EncryptionMethod: ""
        AdTriggers: ""
        IncludeDvbSubtitles: ""
        PlaylistType: ""
      title: CreateOriginEndpointResponse_HlsPackage
    CreateOriginEndpointResponse_MssPackage:
      allOf:
      - $ref: '#/components/schemas/MssPackage'
      - xml:
          name: mssPackage
      example:
        ManifestWindowSeconds: ""
        StreamSelection:
          MinVideoBitsPerSecond: ""
          StreamOrder: ""
          MaxVideoBitsPerSecond: ""
        SegmentDurationSeconds: ""
        Encryption:
          SpekeKeyProvider:
            ResourceId: ""
            SystemIds: ""
            EncryptionContractConfiguration:
              PresetSpeke20Audio: ""
              PresetSpeke20Video: ""
            RoleArn: ""
            Url: ""
            CertificateArn: ""
      title: CreateOriginEndpointResponse_MssPackage
    CmafEncryption_SpekeKeyProvider:
      allOf:
      - $ref: '#/components/schemas/SpekeKeyProvider'
      - xml:
          name: spekeKeyProvider
      example:
        ResourceId: ""
        SystemIds: ""
        EncryptionContractConfiguration:
          PresetSpeke20Audio: ""
          PresetSpeke20Video: ""
        RoleArn: ""
        Url: ""
        CertificateArn: ""
      title: CmafEncryption_SpekeKeyProvider
    SpekeKeyProvider_EncryptionContractConfiguration:
      allOf:
      - $ref: '#/components/schemas/EncryptionContractConfiguration'
      - xml:
          name: encryptionContractConfiguration
      example:
        PresetSpeke20Audio: ""
        PresetSpeke20Video: ""
      title: SpekeKeyProvider_EncryptionContractConfiguration
    CreateOriginEndpointRequest_CmafPackage:
      allOf:
      - $ref: '#/components/schemas/CmafPackageCreateOrUpdateParameters'
      - xml:
          name: cmafPackage
      example:
        SegmentPrefix: ""
        StreamSelection:
          MinVideoBitsPerSecond: ""
          StreamOrder: ""
          MaxVideoBitsPerSecond: ""
        SegmentDurationSeconds: ""
        Encryption:
          KeyRotationIntervalSeconds: ""
          ConstantInitializationVector: ""
          SpekeKeyProvider:
            ResourceId: ""
            SystemIds: ""
            EncryptionContractConfiguration:
              PresetSpeke20Audio: ""
              PresetSpeke20Video: ""
            RoleArn: ""
            Url: ""
            CertificateArn: ""
          EncryptionMethod: ""
        HlsManifests: ""
      title: CreateOriginEndpointRequest_CmafPackage
  securitySchemes:
    hmac:
      description: Amazon Signature authorization v4
      in: header
      name: Authorization
      type: apiKey
      x-amazon-apigateway-authtype: awsSigv4
      x-apikeyInfoFunc: openapi_server.controllers.security_controller.info_from_hmac
x-hasEquivalentPaths: true
