# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.start_codegen_job_request_codegen_job_to_create_features import StartCodegenJobRequestCodegenJobToCreateFeatures
from openapi_server.models.start_codegen_job_request_codegen_job_to_create_generic_data_schema import StartCodegenJobRequestCodegenJobToCreateGenericDataSchema
from openapi_server.models.start_codegen_job_request_codegen_job_to_create_render_config import StartCodegenJobRequestCodegenJobToCreateRenderConfig
from openapi_server import util


class StartCodegenJobData(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, render_config: StartCodegenJobRequestCodegenJobToCreateRenderConfig=None, generic_data_schema: StartCodegenJobRequestCodegenJobToCreateGenericDataSchema=None, auto_generate_forms: bool=None, features: StartCodegenJobRequestCodegenJobToCreateFeatures=None, tags: Dict=None):
        """StartCodegenJobData - a model defined in OpenAPI

        :param render_config: The render_config of this StartCodegenJobData.
        :param generic_data_schema: The generic_data_schema of this StartCodegenJobData.
        :param auto_generate_forms: The auto_generate_forms of this StartCodegenJobData.
        :param features: The features of this StartCodegenJobData.
        :param tags: The tags of this StartCodegenJobData.
        """
        self.openapi_types = {
            'render_config': StartCodegenJobRequestCodegenJobToCreateRenderConfig,
            'generic_data_schema': StartCodegenJobRequestCodegenJobToCreateGenericDataSchema,
            'auto_generate_forms': bool,
            'features': StartCodegenJobRequestCodegenJobToCreateFeatures,
            'tags': Dict
        }

        self.attribute_map = {
            'render_config': 'renderConfig',
            'generic_data_schema': 'genericDataSchema',
            'auto_generate_forms': 'autoGenerateForms',
            'features': 'features',
            'tags': 'tags'
        }

        self._render_config = render_config
        self._generic_data_schema = generic_data_schema
        self._auto_generate_forms = auto_generate_forms
        self._features = features
        self._tags = tags

    @classmethod
    def from_dict(cls, dikt: dict) -> 'StartCodegenJobData':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The StartCodegenJobData of this StartCodegenJobData.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def render_config(self):
        """Gets the render_config of this StartCodegenJobData.


        :return: The render_config of this StartCodegenJobData.
        :rtype: StartCodegenJobRequestCodegenJobToCreateRenderConfig
        """
        return self._render_config

    @render_config.setter
    def render_config(self, render_config):
        """Sets the render_config of this StartCodegenJobData.


        :param render_config: The render_config of this StartCodegenJobData.
        :type render_config: StartCodegenJobRequestCodegenJobToCreateRenderConfig
        """
        if render_config is None:
            raise ValueError("Invalid value for `render_config`, must not be `None`")

        self._render_config = render_config

    @property
    def generic_data_schema(self):
        """Gets the generic_data_schema of this StartCodegenJobData.


        :return: The generic_data_schema of this StartCodegenJobData.
        :rtype: StartCodegenJobRequestCodegenJobToCreateGenericDataSchema
        """
        return self._generic_data_schema

    @generic_data_schema.setter
    def generic_data_schema(self, generic_data_schema):
        """Sets the generic_data_schema of this StartCodegenJobData.


        :param generic_data_schema: The generic_data_schema of this StartCodegenJobData.
        :type generic_data_schema: StartCodegenJobRequestCodegenJobToCreateGenericDataSchema
        """

        self._generic_data_schema = generic_data_schema

    @property
    def auto_generate_forms(self):
        """Gets the auto_generate_forms of this StartCodegenJobData.


        :return: The auto_generate_forms of this StartCodegenJobData.
        :rtype: bool
        """
        return self._auto_generate_forms

    @auto_generate_forms.setter
    def auto_generate_forms(self, auto_generate_forms):
        """Sets the auto_generate_forms of this StartCodegenJobData.


        :param auto_generate_forms: The auto_generate_forms of this StartCodegenJobData.
        :type auto_generate_forms: bool
        """

        self._auto_generate_forms = auto_generate_forms

    @property
    def features(self):
        """Gets the features of this StartCodegenJobData.


        :return: The features of this StartCodegenJobData.
        :rtype: StartCodegenJobRequestCodegenJobToCreateFeatures
        """
        return self._features

    @features.setter
    def features(self, features):
        """Sets the features of this StartCodegenJobData.


        :param features: The features of this StartCodegenJobData.
        :type features: StartCodegenJobRequestCodegenJobToCreateFeatures
        """

        self._features = features

    @property
    def tags(self):
        """Gets the tags of this StartCodegenJobData.


        :return: The tags of this StartCodegenJobData.
        :rtype: Dict
        """
        return self._tags

    @tags.setter
    def tags(self, tags):
        """Sets the tags of this StartCodegenJobData.


        :param tags: The tags of this StartCodegenJobData.
        :type tags: Dict
        """

        self._tags = tags
