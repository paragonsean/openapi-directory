# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.create_form_request_form_to_create_cta import CreateFormRequestFormToCreateCta
from openapi_server.models.create_form_request_form_to_create_data_type import CreateFormRequestFormToCreateDataType
from openapi_server.models.create_form_request_form_to_create_style import CreateFormRequestFormToCreateStyle
from openapi_server.models.form_action_type import FormActionType
from openapi_server.models.label_decorator import LabelDecorator
from openapi_server import util


class UpdateFormData(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, name: str=None, data_type: CreateFormRequestFormToCreateDataType=None, form_action_type: FormActionType=None, fields: Dict=None, style: CreateFormRequestFormToCreateStyle=None, sectional_elements: Dict=None, schema_version: str=None, cta: CreateFormRequestFormToCreateCta=None, label_decorator: LabelDecorator=None):
        """UpdateFormData - a model defined in OpenAPI

        :param name: The name of this UpdateFormData.
        :param data_type: The data_type of this UpdateFormData.
        :param form_action_type: The form_action_type of this UpdateFormData.
        :param fields: The fields of this UpdateFormData.
        :param style: The style of this UpdateFormData.
        :param sectional_elements: The sectional_elements of this UpdateFormData.
        :param schema_version: The schema_version of this UpdateFormData.
        :param cta: The cta of this UpdateFormData.
        :param label_decorator: The label_decorator of this UpdateFormData.
        """
        self.openapi_types = {
            'name': str,
            'data_type': CreateFormRequestFormToCreateDataType,
            'form_action_type': FormActionType,
            'fields': Dict,
            'style': CreateFormRequestFormToCreateStyle,
            'sectional_elements': Dict,
            'schema_version': str,
            'cta': CreateFormRequestFormToCreateCta,
            'label_decorator': LabelDecorator
        }

        self.attribute_map = {
            'name': 'name',
            'data_type': 'dataType',
            'form_action_type': 'formActionType',
            'fields': 'fields',
            'style': 'style',
            'sectional_elements': 'sectionalElements',
            'schema_version': 'schemaVersion',
            'cta': 'cta',
            'label_decorator': 'labelDecorator'
        }

        self._name = name
        self._data_type = data_type
        self._form_action_type = form_action_type
        self._fields = fields
        self._style = style
        self._sectional_elements = sectional_elements
        self._schema_version = schema_version
        self._cta = cta
        self._label_decorator = label_decorator

    @classmethod
    def from_dict(cls, dikt: dict) -> 'UpdateFormData':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The UpdateFormData of this UpdateFormData.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def name(self):
        """Gets the name of this UpdateFormData.


        :return: The name of this UpdateFormData.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this UpdateFormData.


        :param name: The name of this UpdateFormData.
        :type name: str
        """

        self._name = name

    @property
    def data_type(self):
        """Gets the data_type of this UpdateFormData.


        :return: The data_type of this UpdateFormData.
        :rtype: CreateFormRequestFormToCreateDataType
        """
        return self._data_type

    @data_type.setter
    def data_type(self, data_type):
        """Sets the data_type of this UpdateFormData.


        :param data_type: The data_type of this UpdateFormData.
        :type data_type: CreateFormRequestFormToCreateDataType
        """

        self._data_type = data_type

    @property
    def form_action_type(self):
        """Gets the form_action_type of this UpdateFormData.


        :return: The form_action_type of this UpdateFormData.
        :rtype: FormActionType
        """
        return self._form_action_type

    @form_action_type.setter
    def form_action_type(self, form_action_type):
        """Sets the form_action_type of this UpdateFormData.


        :param form_action_type: The form_action_type of this UpdateFormData.
        :type form_action_type: FormActionType
        """

        self._form_action_type = form_action_type

    @property
    def fields(self):
        """Gets the fields of this UpdateFormData.


        :return: The fields of this UpdateFormData.
        :rtype: Dict
        """
        return self._fields

    @fields.setter
    def fields(self, fields):
        """Sets the fields of this UpdateFormData.


        :param fields: The fields of this UpdateFormData.
        :type fields: Dict
        """

        self._fields = fields

    @property
    def style(self):
        """Gets the style of this UpdateFormData.


        :return: The style of this UpdateFormData.
        :rtype: CreateFormRequestFormToCreateStyle
        """
        return self._style

    @style.setter
    def style(self, style):
        """Sets the style of this UpdateFormData.


        :param style: The style of this UpdateFormData.
        :type style: CreateFormRequestFormToCreateStyle
        """

        self._style = style

    @property
    def sectional_elements(self):
        """Gets the sectional_elements of this UpdateFormData.


        :return: The sectional_elements of this UpdateFormData.
        :rtype: Dict
        """
        return self._sectional_elements

    @sectional_elements.setter
    def sectional_elements(self, sectional_elements):
        """Sets the sectional_elements of this UpdateFormData.


        :param sectional_elements: The sectional_elements of this UpdateFormData.
        :type sectional_elements: Dict
        """

        self._sectional_elements = sectional_elements

    @property
    def schema_version(self):
        """Gets the schema_version of this UpdateFormData.


        :return: The schema_version of this UpdateFormData.
        :rtype: str
        """
        return self._schema_version

    @schema_version.setter
    def schema_version(self, schema_version):
        """Sets the schema_version of this UpdateFormData.


        :param schema_version: The schema_version of this UpdateFormData.
        :type schema_version: str
        """

        self._schema_version = schema_version

    @property
    def cta(self):
        """Gets the cta of this UpdateFormData.


        :return: The cta of this UpdateFormData.
        :rtype: CreateFormRequestFormToCreateCta
        """
        return self._cta

    @cta.setter
    def cta(self, cta):
        """Sets the cta of this UpdateFormData.


        :param cta: The cta of this UpdateFormData.
        :type cta: CreateFormRequestFormToCreateCta
        """

        self._cta = cta

    @property
    def label_decorator(self):
        """Gets the label_decorator of this UpdateFormData.


        :return: The label_decorator of this UpdateFormData.
        :rtype: LabelDecorator
        """
        return self._label_decorator

    @label_decorator.setter
    def label_decorator(self, label_decorator):
        """Sets the label_decorator of this UpdateFormData.


        :param label_decorator: The label_decorator of this UpdateFormData.
        :type label_decorator: LabelDecorator
        """

        self._label_decorator = label_decorator
