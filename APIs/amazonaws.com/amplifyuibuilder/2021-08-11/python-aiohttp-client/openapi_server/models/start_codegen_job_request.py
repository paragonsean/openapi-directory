# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.start_codegen_job_request_codegen_job_to_create import StartCodegenJobRequestCodegenJobToCreate
from openapi_server import util


class StartCodegenJobRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, codegen_job_to_create: StartCodegenJobRequestCodegenJobToCreate=None):
        """StartCodegenJobRequest - a model defined in OpenAPI

        :param codegen_job_to_create: The codegen_job_to_create of this StartCodegenJobRequest.
        """
        self.openapi_types = {
            'codegen_job_to_create': StartCodegenJobRequestCodegenJobToCreate
        }

        self.attribute_map = {
            'codegen_job_to_create': 'codegenJobToCreate'
        }

        self._codegen_job_to_create = codegen_job_to_create

    @classmethod
    def from_dict(cls, dikt: dict) -> 'StartCodegenJobRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The StartCodegenJob_request of this StartCodegenJobRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def codegen_job_to_create(self):
        """Gets the codegen_job_to_create of this StartCodegenJobRequest.


        :return: The codegen_job_to_create of this StartCodegenJobRequest.
        :rtype: StartCodegenJobRequestCodegenJobToCreate
        """
        return self._codegen_job_to_create

    @codegen_job_to_create.setter
    def codegen_job_to_create(self, codegen_job_to_create):
        """Sets the codegen_job_to_create of this StartCodegenJobRequest.


        :param codegen_job_to_create: The codegen_job_to_create of this StartCodegenJobRequest.
        :type codegen_job_to_create: StartCodegenJobRequestCodegenJobToCreate
        """
        if codegen_job_to_create is None:
            raise ValueError("Invalid value for `codegen_job_to_create`, must not be `None`")

        self._codegen_job_to_create = codegen_job_to_create
