# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.form_data_source_type import FormDataSourceType
from openapi_server import util


class FormSummaryDataType(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, data_source_type: FormDataSourceType=None, data_type_name: str=None):
        """FormSummaryDataType - a model defined in OpenAPI

        :param data_source_type: The data_source_type of this FormSummaryDataType.
        :param data_type_name: The data_type_name of this FormSummaryDataType.
        """
        self.openapi_types = {
            'data_source_type': FormDataSourceType,
            'data_type_name': str
        }

        self.attribute_map = {
            'data_source_type': 'dataSourceType',
            'data_type_name': 'dataTypeName'
        }

        self._data_source_type = data_source_type
        self._data_type_name = data_type_name

    @classmethod
    def from_dict(cls, dikt: dict) -> 'FormSummaryDataType':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The FormSummary_dataType of this FormSummaryDataType.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def data_source_type(self):
        """Gets the data_source_type of this FormSummaryDataType.


        :return: The data_source_type of this FormSummaryDataType.
        :rtype: FormDataSourceType
        """
        return self._data_source_type

    @data_source_type.setter
    def data_source_type(self, data_source_type):
        """Sets the data_source_type of this FormSummaryDataType.


        :param data_source_type: The data_source_type of this FormSummaryDataType.
        :type data_source_type: FormDataSourceType
        """
        if data_source_type is None:
            raise ValueError("Invalid value for `data_source_type`, must not be `None`")

        self._data_source_type = data_source_type

    @property
    def data_type_name(self):
        """Gets the data_type_name of this FormSummaryDataType.


        :return: The data_type_name of this FormSummaryDataType.
        :rtype: str
        """
        return self._data_type_name

    @data_type_name.setter
    def data_type_name(self, data_type_name):
        """Sets the data_type_name of this FormSummaryDataType.


        :param data_type_name: The data_type_name of this FormSummaryDataType.
        :type data_type_name: str
        """
        if data_type_name is None:
            raise ValueError("Invalid value for `data_type_name`, must not be `None`")

        self._data_type_name = data_type_name
