# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class ComponentBindingPropertiesValueBindingProperties(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, model: str=None, _field: str=None, predicates: List=None, user_attribute: str=None, bucket: str=None, key: str=None, default_value: str=None, slot_name: str=None):
        """ComponentBindingPropertiesValueBindingProperties - a model defined in OpenAPI

        :param model: The model of this ComponentBindingPropertiesValueBindingProperties.
        :param _field: The _field of this ComponentBindingPropertiesValueBindingProperties.
        :param predicates: The predicates of this ComponentBindingPropertiesValueBindingProperties.
        :param user_attribute: The user_attribute of this ComponentBindingPropertiesValueBindingProperties.
        :param bucket: The bucket of this ComponentBindingPropertiesValueBindingProperties.
        :param key: The key of this ComponentBindingPropertiesValueBindingProperties.
        :param default_value: The default_value of this ComponentBindingPropertiesValueBindingProperties.
        :param slot_name: The slot_name of this ComponentBindingPropertiesValueBindingProperties.
        """
        self.openapi_types = {
            'model': str,
            '_field': str,
            'predicates': List,
            'user_attribute': str,
            'bucket': str,
            'key': str,
            'default_value': str,
            'slot_name': str
        }

        self.attribute_map = {
            'model': 'model',
            '_field': 'field',
            'predicates': 'predicates',
            'user_attribute': 'userAttribute',
            'bucket': 'bucket',
            'key': 'key',
            'default_value': 'defaultValue',
            'slot_name': 'slotName'
        }

        self._model = model
        self.__field = _field
        self._predicates = predicates
        self._user_attribute = user_attribute
        self._bucket = bucket
        self._key = key
        self._default_value = default_value
        self._slot_name = slot_name

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ComponentBindingPropertiesValueBindingProperties':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ComponentBindingPropertiesValue_bindingProperties of this ComponentBindingPropertiesValueBindingProperties.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def model(self):
        """Gets the model of this ComponentBindingPropertiesValueBindingProperties.


        :return: The model of this ComponentBindingPropertiesValueBindingProperties.
        :rtype: str
        """
        return self._model

    @model.setter
    def model(self, model):
        """Sets the model of this ComponentBindingPropertiesValueBindingProperties.


        :param model: The model of this ComponentBindingPropertiesValueBindingProperties.
        :type model: str
        """

        self._model = model

    @property
    def _field(self):
        """Gets the _field of this ComponentBindingPropertiesValueBindingProperties.


        :return: The _field of this ComponentBindingPropertiesValueBindingProperties.
        :rtype: str
        """
        return self.__field

    @_field.setter
    def _field(self, _field):
        """Sets the _field of this ComponentBindingPropertiesValueBindingProperties.


        :param _field: The _field of this ComponentBindingPropertiesValueBindingProperties.
        :type _field: str
        """

        self.__field = _field

    @property
    def predicates(self):
        """Gets the predicates of this ComponentBindingPropertiesValueBindingProperties.


        :return: The predicates of this ComponentBindingPropertiesValueBindingProperties.
        :rtype: List
        """
        return self._predicates

    @predicates.setter
    def predicates(self, predicates):
        """Sets the predicates of this ComponentBindingPropertiesValueBindingProperties.


        :param predicates: The predicates of this ComponentBindingPropertiesValueBindingProperties.
        :type predicates: List
        """

        self._predicates = predicates

    @property
    def user_attribute(self):
        """Gets the user_attribute of this ComponentBindingPropertiesValueBindingProperties.


        :return: The user_attribute of this ComponentBindingPropertiesValueBindingProperties.
        :rtype: str
        """
        return self._user_attribute

    @user_attribute.setter
    def user_attribute(self, user_attribute):
        """Sets the user_attribute of this ComponentBindingPropertiesValueBindingProperties.


        :param user_attribute: The user_attribute of this ComponentBindingPropertiesValueBindingProperties.
        :type user_attribute: str
        """

        self._user_attribute = user_attribute

    @property
    def bucket(self):
        """Gets the bucket of this ComponentBindingPropertiesValueBindingProperties.


        :return: The bucket of this ComponentBindingPropertiesValueBindingProperties.
        :rtype: str
        """
        return self._bucket

    @bucket.setter
    def bucket(self, bucket):
        """Sets the bucket of this ComponentBindingPropertiesValueBindingProperties.


        :param bucket: The bucket of this ComponentBindingPropertiesValueBindingProperties.
        :type bucket: str
        """

        self._bucket = bucket

    @property
    def key(self):
        """Gets the key of this ComponentBindingPropertiesValueBindingProperties.


        :return: The key of this ComponentBindingPropertiesValueBindingProperties.
        :rtype: str
        """
        return self._key

    @key.setter
    def key(self, key):
        """Sets the key of this ComponentBindingPropertiesValueBindingProperties.


        :param key: The key of this ComponentBindingPropertiesValueBindingProperties.
        :type key: str
        """

        self._key = key

    @property
    def default_value(self):
        """Gets the default_value of this ComponentBindingPropertiesValueBindingProperties.


        :return: The default_value of this ComponentBindingPropertiesValueBindingProperties.
        :rtype: str
        """
        return self._default_value

    @default_value.setter
    def default_value(self, default_value):
        """Sets the default_value of this ComponentBindingPropertiesValueBindingProperties.


        :param default_value: The default_value of this ComponentBindingPropertiesValueBindingProperties.
        :type default_value: str
        """

        self._default_value = default_value

    @property
    def slot_name(self):
        """Gets the slot_name of this ComponentBindingPropertiesValueBindingProperties.


        :return: The slot_name of this ComponentBindingPropertiesValueBindingProperties.
        :rtype: str
        """
        return self._slot_name

    @slot_name.setter
    def slot_name(self, slot_name):
        """Sets the slot_name of this ComponentBindingPropertiesValueBindingProperties.


        :param slot_name: The slot_name of this ComponentBindingPropertiesValueBindingProperties.
        :type slot_name: str
        """

        self._slot_name = slot_name
