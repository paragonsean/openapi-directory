# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class CodegenJobSummary(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, app_id: str=None, environment_name: str=None, id: str=None, created_at: datetime=None, modified_at: datetime=None):
        """CodegenJobSummary - a model defined in OpenAPI

        :param app_id: The app_id of this CodegenJobSummary.
        :param environment_name: The environment_name of this CodegenJobSummary.
        :param id: The id of this CodegenJobSummary.
        :param created_at: The created_at of this CodegenJobSummary.
        :param modified_at: The modified_at of this CodegenJobSummary.
        """
        self.openapi_types = {
            'app_id': str,
            'environment_name': str,
            'id': str,
            'created_at': datetime,
            'modified_at': datetime
        }

        self.attribute_map = {
            'app_id': 'appId',
            'environment_name': 'environmentName',
            'id': 'id',
            'created_at': 'createdAt',
            'modified_at': 'modifiedAt'
        }

        self._app_id = app_id
        self._environment_name = environment_name
        self._id = id
        self._created_at = created_at
        self._modified_at = modified_at

    @classmethod
    def from_dict(cls, dikt: dict) -> 'CodegenJobSummary':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The CodegenJobSummary of this CodegenJobSummary.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def app_id(self):
        """Gets the app_id of this CodegenJobSummary.


        :return: The app_id of this CodegenJobSummary.
        :rtype: str
        """
        return self._app_id

    @app_id.setter
    def app_id(self, app_id):
        """Sets the app_id of this CodegenJobSummary.


        :param app_id: The app_id of this CodegenJobSummary.
        :type app_id: str
        """
        if app_id is None:
            raise ValueError("Invalid value for `app_id`, must not be `None`")

        self._app_id = app_id

    @property
    def environment_name(self):
        """Gets the environment_name of this CodegenJobSummary.


        :return: The environment_name of this CodegenJobSummary.
        :rtype: str
        """
        return self._environment_name

    @environment_name.setter
    def environment_name(self, environment_name):
        """Sets the environment_name of this CodegenJobSummary.


        :param environment_name: The environment_name of this CodegenJobSummary.
        :type environment_name: str
        """
        if environment_name is None:
            raise ValueError("Invalid value for `environment_name`, must not be `None`")

        self._environment_name = environment_name

    @property
    def id(self):
        """Gets the id of this CodegenJobSummary.


        :return: The id of this CodegenJobSummary.
        :rtype: str
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this CodegenJobSummary.


        :param id: The id of this CodegenJobSummary.
        :type id: str
        """
        if id is None:
            raise ValueError("Invalid value for `id`, must not be `None`")

        self._id = id

    @property
    def created_at(self):
        """Gets the created_at of this CodegenJobSummary.


        :return: The created_at of this CodegenJobSummary.
        :rtype: datetime
        """
        return self._created_at

    @created_at.setter
    def created_at(self, created_at):
        """Sets the created_at of this CodegenJobSummary.


        :param created_at: The created_at of this CodegenJobSummary.
        :type created_at: datetime
        """

        self._created_at = created_at

    @property
    def modified_at(self):
        """Gets the modified_at of this CodegenJobSummary.


        :return: The modified_at of this CodegenJobSummary.
        :rtype: datetime
        """
        return self._modified_at

    @modified_at.setter
    def modified_at(self, modified_at):
        """Sets the modified_at of this CodegenJobSummary.


        :param modified_at: The modified_at of this CodegenJobSummary.
        :type modified_at: datetime
        """

        self._modified_at = modified_at
