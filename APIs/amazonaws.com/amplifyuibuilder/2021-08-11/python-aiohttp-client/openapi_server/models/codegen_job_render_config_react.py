# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.js_module import JSModule
from openapi_server.models.js_script import JSScript
from openapi_server.models.js_target import JSTarget
from openapi_server.models.react_start_codegen_job_data_api_configuration import ReactStartCodegenJobDataApiConfiguration
from openapi_server import util


class CodegenJobRenderConfigReact(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, module: JSModule=None, target: JSTarget=None, script: JSScript=None, render_type_declarations: bool=None, inline_source_map: bool=None, api_configuration: ReactStartCodegenJobDataApiConfiguration=None):
        """CodegenJobRenderConfigReact - a model defined in OpenAPI

        :param module: The module of this CodegenJobRenderConfigReact.
        :param target: The target of this CodegenJobRenderConfigReact.
        :param script: The script of this CodegenJobRenderConfigReact.
        :param render_type_declarations: The render_type_declarations of this CodegenJobRenderConfigReact.
        :param inline_source_map: The inline_source_map of this CodegenJobRenderConfigReact.
        :param api_configuration: The api_configuration of this CodegenJobRenderConfigReact.
        """
        self.openapi_types = {
            'module': JSModule,
            'target': JSTarget,
            'script': JSScript,
            'render_type_declarations': bool,
            'inline_source_map': bool,
            'api_configuration': ReactStartCodegenJobDataApiConfiguration
        }

        self.attribute_map = {
            'module': 'module',
            'target': 'target',
            'script': 'script',
            'render_type_declarations': 'renderTypeDeclarations',
            'inline_source_map': 'inlineSourceMap',
            'api_configuration': 'apiConfiguration'
        }

        self._module = module
        self._target = target
        self._script = script
        self._render_type_declarations = render_type_declarations
        self._inline_source_map = inline_source_map
        self._api_configuration = api_configuration

    @classmethod
    def from_dict(cls, dikt: dict) -> 'CodegenJobRenderConfigReact':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The CodegenJobRenderConfig_react of this CodegenJobRenderConfigReact.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def module(self):
        """Gets the module of this CodegenJobRenderConfigReact.


        :return: The module of this CodegenJobRenderConfigReact.
        :rtype: JSModule
        """
        return self._module

    @module.setter
    def module(self, module):
        """Sets the module of this CodegenJobRenderConfigReact.


        :param module: The module of this CodegenJobRenderConfigReact.
        :type module: JSModule
        """

        self._module = module

    @property
    def target(self):
        """Gets the target of this CodegenJobRenderConfigReact.


        :return: The target of this CodegenJobRenderConfigReact.
        :rtype: JSTarget
        """
        return self._target

    @target.setter
    def target(self, target):
        """Sets the target of this CodegenJobRenderConfigReact.


        :param target: The target of this CodegenJobRenderConfigReact.
        :type target: JSTarget
        """

        self._target = target

    @property
    def script(self):
        """Gets the script of this CodegenJobRenderConfigReact.


        :return: The script of this CodegenJobRenderConfigReact.
        :rtype: JSScript
        """
        return self._script

    @script.setter
    def script(self, script):
        """Sets the script of this CodegenJobRenderConfigReact.


        :param script: The script of this CodegenJobRenderConfigReact.
        :type script: JSScript
        """

        self._script = script

    @property
    def render_type_declarations(self):
        """Gets the render_type_declarations of this CodegenJobRenderConfigReact.


        :return: The render_type_declarations of this CodegenJobRenderConfigReact.
        :rtype: bool
        """
        return self._render_type_declarations

    @render_type_declarations.setter
    def render_type_declarations(self, render_type_declarations):
        """Sets the render_type_declarations of this CodegenJobRenderConfigReact.


        :param render_type_declarations: The render_type_declarations of this CodegenJobRenderConfigReact.
        :type render_type_declarations: bool
        """

        self._render_type_declarations = render_type_declarations

    @property
    def inline_source_map(self):
        """Gets the inline_source_map of this CodegenJobRenderConfigReact.


        :return: The inline_source_map of this CodegenJobRenderConfigReact.
        :rtype: bool
        """
        return self._inline_source_map

    @inline_source_map.setter
    def inline_source_map(self, inline_source_map):
        """Sets the inline_source_map of this CodegenJobRenderConfigReact.


        :param inline_source_map: The inline_source_map of this CodegenJobRenderConfigReact.
        :type inline_source_map: bool
        """

        self._inline_source_map = inline_source_map

    @property
    def api_configuration(self):
        """Gets the api_configuration of this CodegenJobRenderConfigReact.


        :return: The api_configuration of this CodegenJobRenderConfigReact.
        :rtype: ReactStartCodegenJobDataApiConfiguration
        """
        return self._api_configuration

    @api_configuration.setter
    def api_configuration(self, api_configuration):
        """Sets the api_configuration of this CodegenJobRenderConfigReact.


        :param api_configuration: The api_configuration of this CodegenJobRenderConfigReact.
        :type api_configuration: ReactStartCodegenJobDataApiConfiguration
        """

        self._api_configuration = api_configuration
