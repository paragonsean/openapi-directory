# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class FormBindingElement(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, element: str=None, _property: str=None):
        """FormBindingElement - a model defined in OpenAPI

        :param element: The element of this FormBindingElement.
        :param _property: The _property of this FormBindingElement.
        """
        self.openapi_types = {
            'element': str,
            '_property': str
        }

        self.attribute_map = {
            'element': 'element',
            '_property': 'property'
        }

        self._element = element
        self.__property = _property

    @classmethod
    def from_dict(cls, dikt: dict) -> 'FormBindingElement':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The FormBindingElement of this FormBindingElement.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def element(self):
        """Gets the element of this FormBindingElement.


        :return: The element of this FormBindingElement.
        :rtype: str
        """
        return self._element

    @element.setter
    def element(self, element):
        """Sets the element of this FormBindingElement.


        :param element: The element of this FormBindingElement.
        :type element: str
        """
        if element is None:
            raise ValueError("Invalid value for `element`, must not be `None`")

        self._element = element

    @property
    def _property(self):
        """Gets the _property of this FormBindingElement.


        :return: The _property of this FormBindingElement.
        :rtype: str
        """
        return self.__property

    @_property.setter
    def _property(self, _property):
        """Sets the _property of this FormBindingElement.


        :param _property: The _property of this FormBindingElement.
        :type _property: str
        """
        if _property is None:
            raise ValueError("Invalid value for `_property`, must not be `None`")

        self.__property = _property
