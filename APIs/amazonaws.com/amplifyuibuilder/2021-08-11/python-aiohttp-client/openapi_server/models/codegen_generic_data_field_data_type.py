# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class CodegenGenericDataFieldDataType(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    """
    allowed enum values
    """
    ID = 'ID'
    STRING = 'String'
    INT = 'Int'
    FLOAT = 'Float'
    AWSDATE = 'AWSDate'
    AWSTIME = 'AWSTime'
    AWSDATETIME = 'AWSDateTime'
    AWSTIMESTAMP = 'AWSTimestamp'
    AWSEMAIL = 'AWSEmail'
    AWSURL = 'AWSURL'
    AWSIPADDRESS = 'AWSIPAddress'
    BOOLEAN = 'Boolean'
    AWSJSON = 'AWSJSON'
    AWSPHONE = 'AWSPhone'
    ENUM = 'Enum'
    MODEL = 'Model'
    NONMODEL = 'NonModel'

    def __init__(self):
        """CodegenGenericDataFieldDataType - a model defined in OpenAPI

        """
        self.openapi_types = {
        }

        self.attribute_map = {
        }

    @classmethod
    def from_dict(cls, dikt: dict) -> 'CodegenGenericDataFieldDataType':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The CodegenGenericDataFieldDataType of this CodegenGenericDataFieldDataType.
        """
        return util.deserialize_model(dikt, cls)
