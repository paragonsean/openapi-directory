# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.create_form_request_form_to_create import CreateFormRequestFormToCreate
from openapi_server import util


class CreateFormRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, form_to_create: CreateFormRequestFormToCreate=None):
        """CreateFormRequest - a model defined in OpenAPI

        :param form_to_create: The form_to_create of this CreateFormRequest.
        """
        self.openapi_types = {
            'form_to_create': CreateFormRequestFormToCreate
        }

        self.attribute_map = {
            'form_to_create': 'formToCreate'
        }

        self._form_to_create = form_to_create

    @classmethod
    def from_dict(cls, dikt: dict) -> 'CreateFormRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The CreateForm_request of this CreateFormRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def form_to_create(self):
        """Gets the form_to_create of this CreateFormRequest.


        :return: The form_to_create of this CreateFormRequest.
        :rtype: CreateFormRequestFormToCreate
        """
        return self._form_to_create

    @form_to_create.setter
    def form_to_create(self, form_to_create):
        """Sets the form_to_create of this CreateFormRequest.


        :param form_to_create: The form_to_create of this CreateFormRequest.
        :type form_to_create: CreateFormRequestFormToCreate
        """
        if form_to_create is None:
            raise ValueError("Invalid value for `form_to_create`, must not be `None`")

        self._form_to_create = form_to_create
