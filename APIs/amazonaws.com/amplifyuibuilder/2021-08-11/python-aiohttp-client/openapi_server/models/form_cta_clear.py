# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.form_button_position import FormButtonPosition
from openapi_server import util


class FormCTAClear(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, excluded: bool=None, children: str=None, position: FormButtonPosition=None):
        """FormCTAClear - a model defined in OpenAPI

        :param excluded: The excluded of this FormCTAClear.
        :param children: The children of this FormCTAClear.
        :param position: The position of this FormCTAClear.
        """
        self.openapi_types = {
            'excluded': bool,
            'children': str,
            'position': FormButtonPosition
        }

        self.attribute_map = {
            'excluded': 'excluded',
            'children': 'children',
            'position': 'position'
        }

        self._excluded = excluded
        self._children = children
        self._position = position

    @classmethod
    def from_dict(cls, dikt: dict) -> 'FormCTAClear':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The FormCTA_clear of this FormCTAClear.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def excluded(self):
        """Gets the excluded of this FormCTAClear.


        :return: The excluded of this FormCTAClear.
        :rtype: bool
        """
        return self._excluded

    @excluded.setter
    def excluded(self, excluded):
        """Sets the excluded of this FormCTAClear.


        :param excluded: The excluded of this FormCTAClear.
        :type excluded: bool
        """

        self._excluded = excluded

    @property
    def children(self):
        """Gets the children of this FormCTAClear.


        :return: The children of this FormCTAClear.
        :rtype: str
        """
        return self._children

    @children.setter
    def children(self, children):
        """Sets the children of this FormCTAClear.


        :param children: The children of this FormCTAClear.
        :type children: str
        """

        self._children = children

    @property
    def position(self):
        """Gets the position of this FormCTAClear.


        :return: The position of this FormCTAClear.
        :rtype: FormButtonPosition
        """
        return self._position

    @position.setter
    def position(self, position):
        """Sets the position of this FormCTAClear.


        :param position: The position of this FormCTAClear.
        :type position: FormButtonPosition
        """

        self._position = position
