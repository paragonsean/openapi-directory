# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.field_config_input_type import FieldConfigInputType
from openapi_server.models.field_config_position import FieldConfigPosition
from openapi_server import util


class FieldConfig(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, label: str=None, position: FieldConfigPosition=None, excluded: bool=None, input_type: FieldConfigInputType=None, validations: List=None):
        """FieldConfig - a model defined in OpenAPI

        :param label: The label of this FieldConfig.
        :param position: The position of this FieldConfig.
        :param excluded: The excluded of this FieldConfig.
        :param input_type: The input_type of this FieldConfig.
        :param validations: The validations of this FieldConfig.
        """
        self.openapi_types = {
            'label': str,
            'position': FieldConfigPosition,
            'excluded': bool,
            'input_type': FieldConfigInputType,
            'validations': List
        }

        self.attribute_map = {
            'label': 'label',
            'position': 'position',
            'excluded': 'excluded',
            'input_type': 'inputType',
            'validations': 'validations'
        }

        self._label = label
        self._position = position
        self._excluded = excluded
        self._input_type = input_type
        self._validations = validations

    @classmethod
    def from_dict(cls, dikt: dict) -> 'FieldConfig':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The FieldConfig of this FieldConfig.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def label(self):
        """Gets the label of this FieldConfig.


        :return: The label of this FieldConfig.
        :rtype: str
        """
        return self._label

    @label.setter
    def label(self, label):
        """Sets the label of this FieldConfig.


        :param label: The label of this FieldConfig.
        :type label: str
        """

        self._label = label

    @property
    def position(self):
        """Gets the position of this FieldConfig.


        :return: The position of this FieldConfig.
        :rtype: FieldConfigPosition
        """
        return self._position

    @position.setter
    def position(self, position):
        """Sets the position of this FieldConfig.


        :param position: The position of this FieldConfig.
        :type position: FieldConfigPosition
        """

        self._position = position

    @property
    def excluded(self):
        """Gets the excluded of this FieldConfig.


        :return: The excluded of this FieldConfig.
        :rtype: bool
        """
        return self._excluded

    @excluded.setter
    def excluded(self, excluded):
        """Sets the excluded of this FieldConfig.


        :param excluded: The excluded of this FieldConfig.
        :type excluded: bool
        """

        self._excluded = excluded

    @property
    def input_type(self):
        """Gets the input_type of this FieldConfig.


        :return: The input_type of this FieldConfig.
        :rtype: FieldConfigInputType
        """
        return self._input_type

    @input_type.setter
    def input_type(self, input_type):
        """Sets the input_type of this FieldConfig.


        :param input_type: The input_type of this FieldConfig.
        :type input_type: FieldConfigInputType
        """

        self._input_type = input_type

    @property
    def validations(self):
        """Gets the validations of this FieldConfig.


        :return: The validations of this FieldConfig.
        :rtype: List
        """
        return self._validations

    @validations.setter
    def validations(self, validations):
        """Sets the validations of this FieldConfig.


        :param validations: The validations of this FieldConfig.
        :type validations: List
        """

        self._validations = validations
