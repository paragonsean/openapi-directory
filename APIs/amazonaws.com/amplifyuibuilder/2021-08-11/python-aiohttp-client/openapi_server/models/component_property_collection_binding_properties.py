# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class ComponentPropertyCollectionBindingProperties(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, _property: str=None, _field: str=None):
        """ComponentPropertyCollectionBindingProperties - a model defined in OpenAPI

        :param _property: The _property of this ComponentPropertyCollectionBindingProperties.
        :param _field: The _field of this ComponentPropertyCollectionBindingProperties.
        """
        self.openapi_types = {
            '_property': str,
            '_field': str
        }

        self.attribute_map = {
            '_property': 'property',
            '_field': 'field'
        }

        self.__property = _property
        self.__field = _field

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ComponentPropertyCollectionBindingProperties':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ComponentProperty_collectionBindingProperties of this ComponentPropertyCollectionBindingProperties.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def _property(self):
        """Gets the _property of this ComponentPropertyCollectionBindingProperties.


        :return: The _property of this ComponentPropertyCollectionBindingProperties.
        :rtype: str
        """
        return self.__property

    @_property.setter
    def _property(self, _property):
        """Sets the _property of this ComponentPropertyCollectionBindingProperties.


        :param _property: The _property of this ComponentPropertyCollectionBindingProperties.
        :type _property: str
        """
        if _property is None:
            raise ValueError("Invalid value for `_property`, must not be `None`")

        self.__property = _property

    @property
    def _field(self):
        """Gets the _field of this ComponentPropertyCollectionBindingProperties.


        :return: The _field of this ComponentPropertyCollectionBindingProperties.
        :rtype: str
        """
        return self.__field

    @_field.setter
    def _field(self, _field):
        """Sets the _field of this ComponentPropertyCollectionBindingProperties.


        :param _field: The _field of this ComponentPropertyCollectionBindingProperties.
        :type _field: str
        """

        self.__field = _field
