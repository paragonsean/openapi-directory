# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.fixed_position import FixedPosition
from openapi_server import util


class FieldConfigPosition(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, fixed: FixedPosition=None, right_of: str=None, below: str=None):
        """FieldConfigPosition - a model defined in OpenAPI

        :param fixed: The fixed of this FieldConfigPosition.
        :param right_of: The right_of of this FieldConfigPosition.
        :param below: The below of this FieldConfigPosition.
        """
        self.openapi_types = {
            'fixed': FixedPosition,
            'right_of': str,
            'below': str
        }

        self.attribute_map = {
            'fixed': 'fixed',
            'right_of': 'rightOf',
            'below': 'below'
        }

        self._fixed = fixed
        self._right_of = right_of
        self._below = below

    @classmethod
    def from_dict(cls, dikt: dict) -> 'FieldConfigPosition':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The FieldConfig_position of this FieldConfigPosition.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def fixed(self):
        """Gets the fixed of this FieldConfigPosition.


        :return: The fixed of this FieldConfigPosition.
        :rtype: FixedPosition
        """
        return self._fixed

    @fixed.setter
    def fixed(self, fixed):
        """Sets the fixed of this FieldConfigPosition.


        :param fixed: The fixed of this FieldConfigPosition.
        :type fixed: FixedPosition
        """

        self._fixed = fixed

    @property
    def right_of(self):
        """Gets the right_of of this FieldConfigPosition.


        :return: The right_of of this FieldConfigPosition.
        :rtype: str
        """
        return self._right_of

    @right_of.setter
    def right_of(self, right_of):
        """Sets the right_of of this FieldConfigPosition.


        :param right_of: The right_of of this FieldConfigPosition.
        :type right_of: str
        """

        self._right_of = right_of

    @property
    def below(self):
        """Gets the below of this FieldConfigPosition.


        :return: The below of this FieldConfigPosition.
        :rtype: str
        """
        return self._below

    @below.setter
    def below(self, below):
        """Sets the below of this FieldConfigPosition.


        :param below: The below of this FieldConfigPosition.
        :type below: str
        """

        self._below = below
