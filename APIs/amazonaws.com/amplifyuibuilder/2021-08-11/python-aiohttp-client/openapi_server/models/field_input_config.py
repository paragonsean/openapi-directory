# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.field_input_config_file_uploader_config import FieldInputConfigFileUploaderConfig
from openapi_server.models.field_input_config_value_mappings import FieldInputConfigValueMappings
from openapi_server import util


class FieldInputConfig(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, type: str=None, required: bool=None, read_only: bool=None, placeholder: str=None, default_value: str=None, descriptive_text: str=None, default_checked: bool=None, default_country_code: str=None, value_mappings: FieldInputConfigValueMappings=None, name: str=None, min_value: float=None, max_value: float=None, step: float=None, value: str=None, is_array: bool=None, file_uploader_config: FieldInputConfigFileUploaderConfig=None):
        """FieldInputConfig - a model defined in OpenAPI

        :param type: The type of this FieldInputConfig.
        :param required: The required of this FieldInputConfig.
        :param read_only: The read_only of this FieldInputConfig.
        :param placeholder: The placeholder of this FieldInputConfig.
        :param default_value: The default_value of this FieldInputConfig.
        :param descriptive_text: The descriptive_text of this FieldInputConfig.
        :param default_checked: The default_checked of this FieldInputConfig.
        :param default_country_code: The default_country_code of this FieldInputConfig.
        :param value_mappings: The value_mappings of this FieldInputConfig.
        :param name: The name of this FieldInputConfig.
        :param min_value: The min_value of this FieldInputConfig.
        :param max_value: The max_value of this FieldInputConfig.
        :param step: The step of this FieldInputConfig.
        :param value: The value of this FieldInputConfig.
        :param is_array: The is_array of this FieldInputConfig.
        :param file_uploader_config: The file_uploader_config of this FieldInputConfig.
        """
        self.openapi_types = {
            'type': str,
            'required': bool,
            'read_only': bool,
            'placeholder': str,
            'default_value': str,
            'descriptive_text': str,
            'default_checked': bool,
            'default_country_code': str,
            'value_mappings': FieldInputConfigValueMappings,
            'name': str,
            'min_value': float,
            'max_value': float,
            'step': float,
            'value': str,
            'is_array': bool,
            'file_uploader_config': FieldInputConfigFileUploaderConfig
        }

        self.attribute_map = {
            'type': 'type',
            'required': 'required',
            'read_only': 'readOnly',
            'placeholder': 'placeholder',
            'default_value': 'defaultValue',
            'descriptive_text': 'descriptiveText',
            'default_checked': 'defaultChecked',
            'default_country_code': 'defaultCountryCode',
            'value_mappings': 'valueMappings',
            'name': 'name',
            'min_value': 'minValue',
            'max_value': 'maxValue',
            'step': 'step',
            'value': 'value',
            'is_array': 'isArray',
            'file_uploader_config': 'fileUploaderConfig'
        }

        self._type = type
        self._required = required
        self._read_only = read_only
        self._placeholder = placeholder
        self._default_value = default_value
        self._descriptive_text = descriptive_text
        self._default_checked = default_checked
        self._default_country_code = default_country_code
        self._value_mappings = value_mappings
        self._name = name
        self._min_value = min_value
        self._max_value = max_value
        self._step = step
        self._value = value
        self._is_array = is_array
        self._file_uploader_config = file_uploader_config

    @classmethod
    def from_dict(cls, dikt: dict) -> 'FieldInputConfig':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The FieldInputConfig of this FieldInputConfig.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def type(self):
        """Gets the type of this FieldInputConfig.


        :return: The type of this FieldInputConfig.
        :rtype: str
        """
        return self._type

    @type.setter
    def type(self, type):
        """Sets the type of this FieldInputConfig.


        :param type: The type of this FieldInputConfig.
        :type type: str
        """
        if type is None:
            raise ValueError("Invalid value for `type`, must not be `None`")

        self._type = type

    @property
    def required(self):
        """Gets the required of this FieldInputConfig.


        :return: The required of this FieldInputConfig.
        :rtype: bool
        """
        return self._required

    @required.setter
    def required(self, required):
        """Sets the required of this FieldInputConfig.


        :param required: The required of this FieldInputConfig.
        :type required: bool
        """

        self._required = required

    @property
    def read_only(self):
        """Gets the read_only of this FieldInputConfig.


        :return: The read_only of this FieldInputConfig.
        :rtype: bool
        """
        return self._read_only

    @read_only.setter
    def read_only(self, read_only):
        """Sets the read_only of this FieldInputConfig.


        :param read_only: The read_only of this FieldInputConfig.
        :type read_only: bool
        """

        self._read_only = read_only

    @property
    def placeholder(self):
        """Gets the placeholder of this FieldInputConfig.


        :return: The placeholder of this FieldInputConfig.
        :rtype: str
        """
        return self._placeholder

    @placeholder.setter
    def placeholder(self, placeholder):
        """Sets the placeholder of this FieldInputConfig.


        :param placeholder: The placeholder of this FieldInputConfig.
        :type placeholder: str
        """

        self._placeholder = placeholder

    @property
    def default_value(self):
        """Gets the default_value of this FieldInputConfig.


        :return: The default_value of this FieldInputConfig.
        :rtype: str
        """
        return self._default_value

    @default_value.setter
    def default_value(self, default_value):
        """Sets the default_value of this FieldInputConfig.


        :param default_value: The default_value of this FieldInputConfig.
        :type default_value: str
        """

        self._default_value = default_value

    @property
    def descriptive_text(self):
        """Gets the descriptive_text of this FieldInputConfig.


        :return: The descriptive_text of this FieldInputConfig.
        :rtype: str
        """
        return self._descriptive_text

    @descriptive_text.setter
    def descriptive_text(self, descriptive_text):
        """Sets the descriptive_text of this FieldInputConfig.


        :param descriptive_text: The descriptive_text of this FieldInputConfig.
        :type descriptive_text: str
        """

        self._descriptive_text = descriptive_text

    @property
    def default_checked(self):
        """Gets the default_checked of this FieldInputConfig.


        :return: The default_checked of this FieldInputConfig.
        :rtype: bool
        """
        return self._default_checked

    @default_checked.setter
    def default_checked(self, default_checked):
        """Sets the default_checked of this FieldInputConfig.


        :param default_checked: The default_checked of this FieldInputConfig.
        :type default_checked: bool
        """

        self._default_checked = default_checked

    @property
    def default_country_code(self):
        """Gets the default_country_code of this FieldInputConfig.


        :return: The default_country_code of this FieldInputConfig.
        :rtype: str
        """
        return self._default_country_code

    @default_country_code.setter
    def default_country_code(self, default_country_code):
        """Sets the default_country_code of this FieldInputConfig.


        :param default_country_code: The default_country_code of this FieldInputConfig.
        :type default_country_code: str
        """

        self._default_country_code = default_country_code

    @property
    def value_mappings(self):
        """Gets the value_mappings of this FieldInputConfig.


        :return: The value_mappings of this FieldInputConfig.
        :rtype: FieldInputConfigValueMappings
        """
        return self._value_mappings

    @value_mappings.setter
    def value_mappings(self, value_mappings):
        """Sets the value_mappings of this FieldInputConfig.


        :param value_mappings: The value_mappings of this FieldInputConfig.
        :type value_mappings: FieldInputConfigValueMappings
        """

        self._value_mappings = value_mappings

    @property
    def name(self):
        """Gets the name of this FieldInputConfig.


        :return: The name of this FieldInputConfig.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this FieldInputConfig.


        :param name: The name of this FieldInputConfig.
        :type name: str
        """

        self._name = name

    @property
    def min_value(self):
        """Gets the min_value of this FieldInputConfig.


        :return: The min_value of this FieldInputConfig.
        :rtype: float
        """
        return self._min_value

    @min_value.setter
    def min_value(self, min_value):
        """Sets the min_value of this FieldInputConfig.


        :param min_value: The min_value of this FieldInputConfig.
        :type min_value: float
        """

        self._min_value = min_value

    @property
    def max_value(self):
        """Gets the max_value of this FieldInputConfig.


        :return: The max_value of this FieldInputConfig.
        :rtype: float
        """
        return self._max_value

    @max_value.setter
    def max_value(self, max_value):
        """Sets the max_value of this FieldInputConfig.


        :param max_value: The max_value of this FieldInputConfig.
        :type max_value: float
        """

        self._max_value = max_value

    @property
    def step(self):
        """Gets the step of this FieldInputConfig.


        :return: The step of this FieldInputConfig.
        :rtype: float
        """
        return self._step

    @step.setter
    def step(self, step):
        """Sets the step of this FieldInputConfig.


        :param step: The step of this FieldInputConfig.
        :type step: float
        """

        self._step = step

    @property
    def value(self):
        """Gets the value of this FieldInputConfig.


        :return: The value of this FieldInputConfig.
        :rtype: str
        """
        return self._value

    @value.setter
    def value(self, value):
        """Sets the value of this FieldInputConfig.


        :param value: The value of this FieldInputConfig.
        :type value: str
        """

        self._value = value

    @property
    def is_array(self):
        """Gets the is_array of this FieldInputConfig.


        :return: The is_array of this FieldInputConfig.
        :rtype: bool
        """
        return self._is_array

    @is_array.setter
    def is_array(self, is_array):
        """Sets the is_array of this FieldInputConfig.


        :param is_array: The is_array of this FieldInputConfig.
        :type is_array: bool
        """

        self._is_array = is_array

    @property
    def file_uploader_config(self):
        """Gets the file_uploader_config of this FieldInputConfig.


        :return: The file_uploader_config of this FieldInputConfig.
        :rtype: FieldInputConfigFileUploaderConfig
        """
        return self._file_uploader_config

    @file_uploader_config.setter
    def file_uploader_config(self, file_uploader_config):
        """Sets the file_uploader_config of this FieldInputConfig.


        :param file_uploader_config: The file_uploader_config of this FieldInputConfig.
        :type file_uploader_config: FieldInputConfigFileUploaderConfig
        """

        self._file_uploader_config = file_uploader_config
