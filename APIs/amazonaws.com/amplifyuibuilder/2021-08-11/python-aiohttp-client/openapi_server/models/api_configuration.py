# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.api_configuration_graph_ql_config import ApiConfigurationGraphQLConfig
from openapi_server import util


class ApiConfiguration(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, graph_ql_config: ApiConfigurationGraphQLConfig=None, data_store_config: object=None, no_api_config: object=None):
        """ApiConfiguration - a model defined in OpenAPI

        :param graph_ql_config: The graph_ql_config of this ApiConfiguration.
        :param data_store_config: The data_store_config of this ApiConfiguration.
        :param no_api_config: The no_api_config of this ApiConfiguration.
        """
        self.openapi_types = {
            'graph_ql_config': ApiConfigurationGraphQLConfig,
            'data_store_config': object,
            'no_api_config': object
        }

        self.attribute_map = {
            'graph_ql_config': 'graphQLConfig',
            'data_store_config': 'dataStoreConfig',
            'no_api_config': 'noApiConfig'
        }

        self._graph_ql_config = graph_ql_config
        self._data_store_config = data_store_config
        self._no_api_config = no_api_config

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ApiConfiguration':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ApiConfiguration of this ApiConfiguration.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def graph_ql_config(self):
        """Gets the graph_ql_config of this ApiConfiguration.


        :return: The graph_ql_config of this ApiConfiguration.
        :rtype: ApiConfigurationGraphQLConfig
        """
        return self._graph_ql_config

    @graph_ql_config.setter
    def graph_ql_config(self, graph_ql_config):
        """Sets the graph_ql_config of this ApiConfiguration.


        :param graph_ql_config: The graph_ql_config of this ApiConfiguration.
        :type graph_ql_config: ApiConfigurationGraphQLConfig
        """

        self._graph_ql_config = graph_ql_config

    @property
    def data_store_config(self):
        """Gets the data_store_config of this ApiConfiguration.


        :return: The data_store_config of this ApiConfiguration.
        :rtype: object
        """
        return self._data_store_config

    @data_store_config.setter
    def data_store_config(self, data_store_config):
        """Sets the data_store_config of this ApiConfiguration.


        :param data_store_config: The data_store_config of this ApiConfiguration.
        :type data_store_config: object
        """

        self._data_store_config = data_store_config

    @property
    def no_api_config(self):
        """Gets the no_api_config of this ApiConfiguration.


        :return: The no_api_config of this ApiConfiguration.
        :rtype: object
        """
        return self._no_api_config

    @no_api_config.setter
    def no_api_config(self, no_api_config):
        """Sets the no_api_config of this ApiConfiguration.


        :param no_api_config: The no_api_config of this ApiConfiguration.
        :type no_api_config: object
        """

        self._no_api_config = no_api_config
