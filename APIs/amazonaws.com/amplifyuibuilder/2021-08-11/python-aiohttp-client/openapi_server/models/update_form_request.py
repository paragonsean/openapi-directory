# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.update_form_request_updated_form import UpdateFormRequestUpdatedForm
from openapi_server import util


class UpdateFormRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, updated_form: UpdateFormRequestUpdatedForm=None):
        """UpdateFormRequest - a model defined in OpenAPI

        :param updated_form: The updated_form of this UpdateFormRequest.
        """
        self.openapi_types = {
            'updated_form': UpdateFormRequestUpdatedForm
        }

        self.attribute_map = {
            'updated_form': 'updatedForm'
        }

        self._updated_form = updated_form

    @classmethod
    def from_dict(cls, dikt: dict) -> 'UpdateFormRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The UpdateForm_request of this UpdateFormRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def updated_form(self):
        """Gets the updated_form of this UpdateFormRequest.


        :return: The updated_form of this UpdateFormRequest.
        :rtype: UpdateFormRequestUpdatedForm
        """
        return self._updated_form

    @updated_form.setter
    def updated_form(self, updated_form):
        """Sets the updated_form of this UpdateFormRequest.


        :param updated_form: The updated_form of this UpdateFormRequest.
        :type updated_form: UpdateFormRequestUpdatedForm
        """
        if updated_form is None:
            raise ValueError("Invalid value for `updated_form`, must not be `None`")

        self._updated_form = updated_form
