# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.form_input_value_property_binding_properties import FormInputValuePropertyBindingProperties
from openapi_server import util


class FormInputValueProperty(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, value: str=None, binding_properties: FormInputValuePropertyBindingProperties=None, concat: List=None):
        """FormInputValueProperty - a model defined in OpenAPI

        :param value: The value of this FormInputValueProperty.
        :param binding_properties: The binding_properties of this FormInputValueProperty.
        :param concat: The concat of this FormInputValueProperty.
        """
        self.openapi_types = {
            'value': str,
            'binding_properties': FormInputValuePropertyBindingProperties,
            'concat': List
        }

        self.attribute_map = {
            'value': 'value',
            'binding_properties': 'bindingProperties',
            'concat': 'concat'
        }

        self._value = value
        self._binding_properties = binding_properties
        self._concat = concat

    @classmethod
    def from_dict(cls, dikt: dict) -> 'FormInputValueProperty':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The FormInputValueProperty of this FormInputValueProperty.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def value(self):
        """Gets the value of this FormInputValueProperty.


        :return: The value of this FormInputValueProperty.
        :rtype: str
        """
        return self._value

    @value.setter
    def value(self, value):
        """Sets the value of this FormInputValueProperty.


        :param value: The value of this FormInputValueProperty.
        :type value: str
        """

        self._value = value

    @property
    def binding_properties(self):
        """Gets the binding_properties of this FormInputValueProperty.


        :return: The binding_properties of this FormInputValueProperty.
        :rtype: FormInputValuePropertyBindingProperties
        """
        return self._binding_properties

    @binding_properties.setter
    def binding_properties(self, binding_properties):
        """Sets the binding_properties of this FormInputValueProperty.


        :param binding_properties: The binding_properties of this FormInputValueProperty.
        :type binding_properties: FormInputValuePropertyBindingProperties
        """

        self._binding_properties = binding_properties

    @property
    def concat(self):
        """Gets the concat of this FormInputValueProperty.


        :return: The concat of this FormInputValueProperty.
        :rtype: List
        """
        return self._concat

    @concat.setter
    def concat(self, concat):
        """Sets the concat of this FormInputValueProperty.


        :param concat: The concat of this FormInputValueProperty.
        :type concat: List
        """

        self._concat = concat
