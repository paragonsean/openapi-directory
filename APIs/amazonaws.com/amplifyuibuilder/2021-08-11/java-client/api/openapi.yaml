openapi: 3.0.0
info:
  contact:
    email: mike.ralphson@gmail.com
    name: Mike Ralphson
    url: https://github.com/mermade/aws2openapi
    x-twitter: PermittedSoc
  description: "<p>The Amplify UI Builder API provides a programmatic interface for\
    \ creating and configuring user interface (UI) component libraries and themes\
    \ for use in your Amplify applications. You can then connect these UI components\
    \ to an application's backend Amazon Web Services resources.</p> <p>You can also\
    \ use the Amplify Studio visual designer to create UI components and model data\
    \ for an app. For more information, see <a href=\"https://docs.amplify.aws/console/adminui/intro\"\
    >Introduction</a> in the <i>Amplify Docs</i>.</p> <p>The Amplify Framework is\
    \ a comprehensive set of SDKs, libraries, tools, and documentation for client\
    \ app development. For more information, see the <a href=\"https://docs.amplify.aws/\"\
    >Amplify Framework</a>. For more information about deploying an Amplify application\
    \ to Amazon Web Services, see the <a href=\"https://docs.aws.amazon.com/amplify/latest/userguide/welcome.html\"\
    >Amplify User Guide</a>.</p>"
  license:
    name: Apache 2.0 License
    url: http://www.apache.org/licenses/
  termsOfService: https://aws.amazon.com/service-terms/
  title: AWS Amplify UI Builder
  version: 2021-08-11
  x-release: v4
  x-logo:
    url: https://twitter.com/awscloud/profile_image?size=original
    backgroundColor: '#FFFFFF'
  x-providerName: amazonaws.com
  x-serviceName: amplifyuibuilder
  x-aws-signingName: amplifyuibuilder
  x-origin:
  - contentType: application/json
    url: https://raw.githubusercontent.com/aws/aws-sdk-js/master/apis/amplifyuibuilder-2021-08-11.normal.json
    converter:
      url: https://github.com/mermade/aws2openapi
      version: 1.0.0
    x-apisguru-driver: external
  x-apiClientRegistration:
    url: https://portal.aws.amazon.com/gp/aws/developer/registration/index.html?nc2=h_ct
  x-apisguru-categories:
  - cloud
  x-preferred: true
externalDocs:
  description: Amazon Web Services documentation
  url: https://docs.aws.amazon.com/amplifyuibuilder/
servers:
- description: The AWS Amplify UI Builder multi-region endpoint
  url: "http://amplifyuibuilder.{region}.amazonaws.com"
  variables:
    region:
      default: us-east-1
      description: The AWS region
      enum:
      - us-east-1
      - us-east-2
      - us-west-1
      - us-west-2
      - us-gov-west-1
      - us-gov-east-1
      - ca-central-1
      - eu-north-1
      - eu-west-1
      - eu-west-2
      - eu-west-3
      - eu-central-1
      - eu-south-1
      - af-south-1
      - ap-northeast-1
      - ap-northeast-2
      - ap-northeast-3
      - ap-southeast-1
      - ap-southeast-2
      - ap-east-1
      - ap-south-1
      - sa-east-1
      - me-south-1
- description: The AWS Amplify UI Builder multi-region endpoint
  url: "https://amplifyuibuilder.{region}.amazonaws.com"
  variables:
    region:
      default: us-east-1
      description: The AWS region
      enum:
      - us-east-1
      - us-east-2
      - us-west-1
      - us-west-2
      - us-gov-west-1
      - us-gov-east-1
      - ca-central-1
      - eu-north-1
      - eu-west-1
      - eu-west-2
      - eu-west-3
      - eu-central-1
      - eu-south-1
      - af-south-1
      - ap-northeast-1
      - ap-northeast-2
      - ap-northeast-3
      - ap-southeast-1
      - ap-southeast-2
      - ap-east-1
      - ap-south-1
      - sa-east-1
      - me-south-1
- description: The AWS Amplify UI Builder endpoint for China (Beijing) and China (Ningxia)
  url: "http://amplifyuibuilder.{region}.amazonaws.com.cn"
  variables:
    region:
      default: cn-north-1
      description: The AWS region
      enum:
      - cn-north-1
      - cn-northwest-1
- description: The AWS Amplify UI Builder endpoint for China (Beijing) and China (Ningxia)
  url: "https://amplifyuibuilder.{region}.amazonaws.com.cn"
  variables:
    region:
      default: cn-north-1
      description: The AWS region
      enum:
      - cn-north-1
      - cn-northwest-1
security:
- hmac: []
paths:
  /app/{appId}/environment/{environmentName}/components:
    get:
      description: Retrieves a list of components for a specified Amplify app and
        backend environment.
      operationId: ListComponents
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The unique ID for the Amplify app.
        explode: false
        in: path
        name: appId
        required: true
        schema:
          type: string
        style: simple
      - description: The name of the backend environment that is a part of the Amplify
          app.
        explode: false
        in: path
        name: environmentName
        required: true
        schema:
          type: string
        style: simple
      - description: The token to request the next page of results.
        explode: true
        in: query
        name: nextToken
        required: false
        schema:
          type: string
        style: form
      - description: The maximum number of components to retrieve.
        explode: true
        in: query
        name: maxResults
        required: false
        schema:
          maximum: 100
          minimum: 1
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListComponentsResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterException'
          description: InvalidParameterException
      x-accepts:
      - application/json
    post:
      description: Creates a new component for an Amplify app.
      operationId: CreateComponent
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The unique ID of the Amplify app to associate with the component.
        explode: false
        in: path
        name: appId
        required: true
        schema:
          type: string
        style: simple
      - description: The name of the backend environment that is a part of the Amplify
          app.
        explode: false
        in: path
        name: environmentName
        required: true
        schema:
          type: string
        style: simple
      - description: The unique client token.
        explode: true
        in: query
        name: clientToken
        required: false
        schema:
          type: string
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateComponent_request'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateComponentResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceQuotaExceededException'
          description: ServiceQuotaExceededException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceConflictException'
          description: ResourceConflictException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterException'
          description: InvalidParameterException
      x-content-type: application/json
      x-accepts:
      - application/json
  /app/{appId}/environment/{environmentName}/forms:
    get:
      description: Retrieves a list of forms for a specified Amplify app and backend
        environment.
      operationId: ListForms
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The unique ID for the Amplify app.
        explode: false
        in: path
        name: appId
        required: true
        schema:
          type: string
        style: simple
      - description: The name of the backend environment that is a part of the Amplify
          app.
        explode: false
        in: path
        name: environmentName
        required: true
        schema:
          type: string
        style: simple
      - description: The token to request the next page of results.
        explode: true
        in: query
        name: nextToken
        required: false
        schema:
          type: string
        style: form
      - description: The maximum number of forms to retrieve.
        explode: true
        in: query
        name: maxResults
        required: false
        schema:
          maximum: 100
          minimum: 1
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListFormsResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterException'
          description: InvalidParameterException
      x-accepts:
      - application/json
    post:
      description: Creates a new form for an Amplify app.
      operationId: CreateForm
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The unique ID of the Amplify app to associate with the form.
        explode: false
        in: path
        name: appId
        required: true
        schema:
          type: string
        style: simple
      - description: The name of the backend environment that is a part of the Amplify
          app.
        explode: false
        in: path
        name: environmentName
        required: true
        schema:
          type: string
        style: simple
      - description: The unique client token.
        explode: true
        in: query
        name: clientToken
        required: false
        schema:
          type: string
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateForm_request'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateFormResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceQuotaExceededException'
          description: ServiceQuotaExceededException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceConflictException'
          description: ResourceConflictException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterException'
          description: InvalidParameterException
      x-content-type: application/json
      x-accepts:
      - application/json
  /app/{appId}/environment/{environmentName}/themes:
    get:
      description: Retrieves a list of themes for a specified Amplify app and backend
        environment.
      operationId: ListThemes
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The unique ID for the Amplify app.
        explode: false
        in: path
        name: appId
        required: true
        schema:
          type: string
        style: simple
      - description: The name of the backend environment that is a part of the Amplify
          app.
        explode: false
        in: path
        name: environmentName
        required: true
        schema:
          type: string
        style: simple
      - description: The token to request the next page of results.
        explode: true
        in: query
        name: nextToken
        required: false
        schema:
          type: string
        style: form
      - description: The maximum number of theme results to return in the response.
        explode: true
        in: query
        name: maxResults
        required: false
        schema:
          maximum: 100
          minimum: 1
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListThemesResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterException'
          description: InvalidParameterException
      x-accepts:
      - application/json
    post:
      description: Creates a theme to apply to the components in an Amplify app.
      operationId: CreateTheme
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The unique ID of the Amplify app associated with the theme.
        explode: false
        in: path
        name: appId
        required: true
        schema:
          type: string
        style: simple
      - description: The name of the backend environment that is a part of the Amplify
          app.
        explode: false
        in: path
        name: environmentName
        required: true
        schema:
          type: string
        style: simple
      - description: The unique client token.
        explode: true
        in: query
        name: clientToken
        required: false
        schema:
          type: string
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateTheme_request'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateThemeResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceQuotaExceededException'
          description: ServiceQuotaExceededException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceConflictException'
          description: ResourceConflictException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterException'
          description: InvalidParameterException
      x-content-type: application/json
      x-accepts:
      - application/json
  /app/{appId}/environment/{environmentName}/components/{id}:
    delete:
      description: Deletes a component from an Amplify app.
      operationId: DeleteComponent
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The unique ID of the Amplify app associated with the component
          to delete.
        explode: false
        in: path
        name: appId
        required: true
        schema:
          type: string
        style: simple
      - description: The name of the backend environment that is a part of the Amplify
          app.
        explode: false
        in: path
        name: environmentName
        required: true
        schema:
          type: string
        style: simple
      - description: The unique ID of the component to delete.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterException'
          description: InvalidParameterException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
      x-accepts:
      - application/json
    get:
      description: Returns an existing component for an Amplify app.
      operationId: GetComponent
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The unique ID of the Amplify app.
        explode: false
        in: path
        name: appId
        required: true
        schema:
          type: string
        style: simple
      - description: The name of the backend environment that is part of the Amplify
          app.
        explode: false
        in: path
        name: environmentName
        required: true
        schema:
          type: string
        style: simple
      - description: The unique ID of the component.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetComponentResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterException'
          description: InvalidParameterException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
      x-accepts:
      - application/json
    patch:
      description: Updates an existing component.
      operationId: UpdateComponent
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The unique ID for the Amplify app.
        explode: false
        in: path
        name: appId
        required: true
        schema:
          type: string
        style: simple
      - description: The name of the backend environment that is part of the Amplify
          app.
        explode: false
        in: path
        name: environmentName
        required: true
        schema:
          type: string
        style: simple
      - description: The unique ID for the component.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - description: The unique client token.
        explode: true
        in: query
        name: clientToken
        required: false
        schema:
          type: string
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateComponent_request'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateComponentResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceConflictException'
          description: ResourceConflictException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterException'
          description: InvalidParameterException
      x-content-type: application/json
      x-accepts:
      - application/json
  /app/{appId}/environment/{environmentName}/forms/{id}:
    delete:
      description: Deletes a form from an Amplify app.
      operationId: DeleteForm
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The unique ID of the Amplify app associated with the form to
          delete.
        explode: false
        in: path
        name: appId
        required: true
        schema:
          type: string
        style: simple
      - description: The name of the backend environment that is a part of the Amplify
          app.
        explode: false
        in: path
        name: environmentName
        required: true
        schema:
          type: string
        style: simple
      - description: The unique ID of the form to delete.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterException'
          description: InvalidParameterException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
      x-accepts:
      - application/json
    get:
      description: Returns an existing form for an Amplify app.
      operationId: GetForm
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The unique ID of the Amplify app.
        explode: false
        in: path
        name: appId
        required: true
        schema:
          type: string
        style: simple
      - description: The name of the backend environment that is part of the Amplify
          app.
        explode: false
        in: path
        name: environmentName
        required: true
        schema:
          type: string
        style: simple
      - description: The unique ID of the form.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetFormResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterException'
          description: InvalidParameterException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
      x-accepts:
      - application/json
    patch:
      description: Updates an existing form.
      operationId: UpdateForm
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The unique ID for the Amplify app.
        explode: false
        in: path
        name: appId
        required: true
        schema:
          type: string
        style: simple
      - description: The name of the backend environment that is part of the Amplify
          app.
        explode: false
        in: path
        name: environmentName
        required: true
        schema:
          type: string
        style: simple
      - description: The unique ID for the form.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - description: The unique client token.
        explode: true
        in: query
        name: clientToken
        required: false
        schema:
          type: string
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateForm_request'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateFormResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceConflictException'
          description: ResourceConflictException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterException'
          description: InvalidParameterException
      x-content-type: application/json
      x-accepts:
      - application/json
  /app/{appId}/environment/{environmentName}/themes/{id}:
    delete:
      description: Deletes a theme from an Amplify app.
      operationId: DeleteTheme
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The unique ID of the Amplify app associated with the theme to
          delete.
        explode: false
        in: path
        name: appId
        required: true
        schema:
          type: string
        style: simple
      - description: The name of the backend environment that is a part of the Amplify
          app.
        explode: false
        in: path
        name: environmentName
        required: true
        schema:
          type: string
        style: simple
      - description: The unique ID of the theme to delete.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterException'
          description: InvalidParameterException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
      x-accepts:
      - application/json
    get:
      description: Returns an existing theme for an Amplify app.
      operationId: GetTheme
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The unique ID of the Amplify app.
        explode: false
        in: path
        name: appId
        required: true
        schema:
          type: string
        style: simple
      - description: The name of the backend environment that is part of the Amplify
          app.
        explode: false
        in: path
        name: environmentName
        required: true
        schema:
          type: string
        style: simple
      - description: The unique ID for the theme.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetThemeResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterException'
          description: InvalidParameterException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
      x-accepts:
      - application/json
    patch:
      description: Updates an existing theme.
      operationId: UpdateTheme
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The unique ID for the Amplify app.
        explode: false
        in: path
        name: appId
        required: true
        schema:
          type: string
        style: simple
      - description: The name of the backend environment that is part of the Amplify
          app.
        explode: false
        in: path
        name: environmentName
        required: true
        schema:
          type: string
        style: simple
      - description: The unique ID for the theme.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - description: The unique client token.
        explode: true
        in: query
        name: clientToken
        required: false
        schema:
          type: string
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateTheme_request'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateThemeResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceConflictException'
          description: ResourceConflictException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterException'
          description: InvalidParameterException
      x-content-type: application/json
      x-accepts:
      - application/json
  /tokens/{provider}:
    post:
      description: Exchanges an access code for a token.
      operationId: ExchangeCodeForToken
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The third-party provider for the token. The only valid value
          is <code>figma</code>.
        explode: false
        in: path
        name: provider
        required: true
        schema:
          enum:
          - figma
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ExchangeCodeForToken_request'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExchangeCodeForTokenResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterException'
          description: InvalidParameterException
      x-content-type: application/json
      x-accepts:
      - application/json
  /export/app/{appId}/environment/{environmentName}/components:
    get:
      description: Exports component configurations to code that is ready to integrate
        into an Amplify app.
      operationId: ExportComponents
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The unique ID of the Amplify app to export components to.
        explode: false
        in: path
        name: appId
        required: true
        schema:
          type: string
        style: simple
      - description: The name of the backend environment that is a part of the Amplify
          app.
        explode: false
        in: path
        name: environmentName
        required: true
        schema:
          type: string
        style: simple
      - description: The token to request the next page of results.
        explode: true
        in: query
        name: nextToken
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExportComponentsResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterException'
          description: InvalidParameterException
      x-accepts:
      - application/json
  /export/app/{appId}/environment/{environmentName}/forms:
    get:
      description: Exports form configurations to code that is ready to integrate
        into an Amplify app.
      operationId: ExportForms
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The unique ID of the Amplify app to export forms to.
        explode: false
        in: path
        name: appId
        required: true
        schema:
          type: string
        style: simple
      - description: The name of the backend environment that is a part of the Amplify
          app.
        explode: false
        in: path
        name: environmentName
        required: true
        schema:
          type: string
        style: simple
      - description: The token to request the next page of results.
        explode: true
        in: query
        name: nextToken
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExportFormsResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterException'
          description: InvalidParameterException
      x-accepts:
      - application/json
  /export/app/{appId}/environment/{environmentName}/themes:
    get:
      description: Exports theme configurations to code that is ready to integrate
        into an Amplify app.
      operationId: ExportThemes
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The unique ID of the Amplify app to export the themes to.
        explode: false
        in: path
        name: appId
        required: true
        schema:
          type: string
        style: simple
      - description: The name of the backend environment that is part of the Amplify
          app.
        explode: false
        in: path
        name: environmentName
        required: true
        schema:
          type: string
        style: simple
      - description: The token to request the next page of results.
        explode: true
        in: query
        name: nextToken
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExportThemesResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterException'
          description: InvalidParameterException
      x-accepts:
      - application/json
  /app/{appId}/environment/{environmentName}/codegen-jobs/{id}:
    get:
      description: Returns an existing code generation job.
      operationId: GetCodegenJob
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The unique ID of the Amplify app associated with the code generation
          job.
        explode: false
        in: path
        name: appId
        required: true
        schema:
          maxLength: 20
          minLength: 1
          pattern: "d[a-z0-9]+"
          type: string
        style: simple
      - description: The name of the backend environment that is a part of the Amplify
          app associated with the code generation job.
        explode: false
        in: path
        name: environmentName
        required: true
        schema:
          type: string
        style: simple
      - description: The unique ID of the code generation job.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetCodegenJobResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterException'
          description: InvalidParameterException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
      x-accepts:
      - application/json
  /app/{appId}/environment/{environmentName}/metadata:
    get:
      description: Returns existing metadata for an Amplify app.
      operationId: GetMetadata
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The unique ID of the Amplify app.
        explode: false
        in: path
        name: appId
        required: true
        schema:
          type: string
        style: simple
      - description: The name of the backend environment that is part of the Amplify
          app.
        explode: false
        in: path
        name: environmentName
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetMetadataResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedException'
          description: UnauthorizedException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterException'
          description: InvalidParameterException
      x-accepts:
      - application/json
  /app/{appId}/environment/{environmentName}/codegen-jobs:
    get:
      description: Retrieves a list of code generation jobs for a specified Amplify
        app and backend environment.
      operationId: ListCodegenJobs
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The unique ID for the Amplify app.
        explode: false
        in: path
        name: appId
        required: true
        schema:
          maxLength: 20
          minLength: 1
          pattern: "d[a-z0-9]+"
          type: string
        style: simple
      - description: The name of the backend environment that is a part of the Amplify
          app.
        explode: false
        in: path
        name: environmentName
        required: true
        schema:
          type: string
        style: simple
      - description: The token to request the next page of results.
        explode: true
        in: query
        name: nextToken
        required: false
        schema:
          type: string
        style: form
      - description: The maximum number of jobs to retrieve.
        explode: true
        in: query
        name: maxResults
        required: false
        schema:
          maximum: 100
          minimum: 1
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListCodegenJobsResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterException'
          description: InvalidParameterException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
      x-accepts:
      - application/json
    post:
      description: Starts a code generation job for a specified Amplify app and backend
        environment.
      operationId: StartCodegenJob
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The unique ID for the Amplify app.
        explode: false
        in: path
        name: appId
        required: true
        schema:
          maxLength: 20
          minLength: 1
          pattern: "d[a-z0-9]+"
          type: string
        style: simple
      - description: The name of the backend environment that is a part of the Amplify
          app.
        explode: false
        in: path
        name: environmentName
        required: true
        schema:
          type: string
        style: simple
      - description: The idempotency token used to ensure that the code generation
          job request completes only once.
        explode: true
        in: query
        name: clientToken
        required: false
        schema:
          type: string
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StartCodegenJob_request'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StartCodegenJobResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterException'
          description: InvalidParameterException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
      x-content-type: application/json
      x-accepts:
      - application/json
  /app/{appId}/environment/{environmentName}/metadata/features/{featureName}:
    put:
      description: Stores the metadata information about a feature on a form.
      operationId: PutMetadataFlag
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The unique ID for the Amplify app.
        explode: false
        in: path
        name: appId
        required: true
        schema:
          type: string
        style: simple
      - description: The name of the backend environment that is part of the Amplify
          app.
        explode: false
        in: path
        name: environmentName
        required: true
        schema:
          type: string
        style: simple
      - description: The name of the feature associated with the metadata.
        explode: false
        in: path
        name: featureName
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PutMetadataFlag_request'
        required: true
      responses:
        "200":
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedException'
          description: UnauthorizedException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterException'
          description: InvalidParameterException
      x-content-type: application/json
      x-accepts:
      - application/json
  /tokens/{provider}/refresh:
    post:
      description: Refreshes a previously issued access token that might have expired.
      operationId: RefreshToken
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The third-party provider for the token. The only valid value
          is <code>figma</code>.
        explode: false
        in: path
        name: provider
        required: true
        schema:
          enum:
          - figma
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RefreshToken_request'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RefreshTokenResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterException'
          description: InvalidParameterException
      x-content-type: application/json
      x-accepts:
      - application/json
components:
  parameters:
    X-Amz-Content-Sha256:
      explode: false
      in: header
      name: X-Amz-Content-Sha256
      required: false
      schema:
        type: string
      style: simple
    X-Amz-Date:
      explode: false
      in: header
      name: X-Amz-Date
      required: false
      schema:
        type: string
      style: simple
    X-Amz-Algorithm:
      explode: false
      in: header
      name: X-Amz-Algorithm
      required: false
      schema:
        type: string
      style: simple
    X-Amz-Credential:
      explode: false
      in: header
      name: X-Amz-Credential
      required: false
      schema:
        type: string
      style: simple
    X-Amz-Security-Token:
      explode: false
      in: header
      name: X-Amz-Security-Token
      required: false
      schema:
        type: string
      style: simple
    X-Amz-Signature:
      explode: false
      in: header
      name: X-Amz-Signature
      required: false
      schema:
        type: string
      style: simple
    X-Amz-SignedHeaders:
      explode: false
      in: header
      name: X-Amz-SignedHeaders
      required: false
      schema:
        type: string
      style: simple
  schemas:
    CreateComponentResponse:
      example:
        entity:
          sourceId: ""
          componentType: ""
          bindingProperties: ""
          schemaVersion: ""
          modifiedAt: ""
          collectionProperties: ""
          variants: ""
          overrides: ""
          tags: ""
          createdAt: ""
          children: ""
          environmentName: ""
          appId: ""
          name: ""
          id: ""
          properties: ""
          events: ""
      properties:
        entity:
          $ref: '#/components/schemas/CreateComponentResponse_entity'
      type: object
    ComponentName:
      maxLength: 255
      minLength: 1
      type: string
    String:
      type: string
    ComponentType:
      maxLength: 255
      minLength: 1
      type: string
    ComponentChildList:
      items:
        $ref: '#/components/schemas/ComponentChild'
      type: array
    ComponentVariants:
      items:
        $ref: '#/components/schemas/ComponentVariant'
      type: array
    ComponentOverrides:
      additionalProperties:
        $ref: '#/components/schemas/ComponentOverridesValue'
      type: object
    ComponentBindingProperties:
      additionalProperties:
        $ref: '#/components/schemas/ComponentBindingPropertiesValue'
      type: object
    ComponentCollectionProperties:
      additionalProperties:
        $ref: '#/components/schemas/ComponentDataConfiguration'
      type: object
    Tags:
      additionalProperties:
        $ref: '#/components/schemas/TagValue'
      type: object
    ComponentEvents:
      additionalProperties:
        $ref: '#/components/schemas/ComponentEvent'
      type: object
    ServiceQuotaExceededException: {}
    ResourceConflictException: {}
    InternalServerException: {}
    InvalidParameterException: {}
    CreateFormResponse:
      example:
        entity:
          schemaVersion: ""
          dataType:
            dataTypeName: ""
            dataSourceType: ""
          formActionType: ""
          sectionalElements: ""
          tags: ""
          cta:
            cancel:
              excluded: ""
              children: ""
              position:
                below: ""
                fixed: ""
                rightOf: ""
            submit:
              excluded: ""
              children: ""
              position:
                below: ""
                fixed: ""
                rightOf: ""
            clear:
              excluded: ""
              children: ""
              position:
                below: ""
                fixed: ""
                rightOf: ""
            position: ""
          environmentName: ""
          appId: ""
          name: ""
          style:
            horizontalGap:
              tokenReference: ""
              value: ""
            outerPadding:
              tokenReference: ""
              value: ""
            verticalGap:
              tokenReference: ""
              value: ""
          id: ""
          fields: ""
          labelDecorator: ""
      properties:
        entity:
          $ref: '#/components/schemas/CreateFormResponse_entity'
      type: object
    FormName:
      maxLength: 255
      minLength: 1
      type: string
    FormDataTypeConfig:
      description: Describes the data type configuration for the data source associated
        with a form.
      properties:
        dataSourceType:
          allOf:
          - $ref: '#/components/schemas/FormDataSourceType'
          - description: "The data source type, either an Amplify DataStore model\
              \ or a custom data type."
        dataTypeName:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The unique name of the data type you are using as the data
              source for the form.
      required:
      - dataSourceType
      - dataTypeName
      type: object
    FormActionType:
      enum:
      - create
      - update
      type: string
    FieldsMap:
      additionalProperties:
        $ref: '#/components/schemas/FieldConfig'
      type: object
    FormStyle:
      description: Describes the configuration for the form's style.
      properties:
        horizontalGap:
          $ref: '#/components/schemas/FormStyle_horizontalGap'
        verticalGap:
          $ref: '#/components/schemas/FormStyle_verticalGap'
        outerPadding:
          $ref: '#/components/schemas/FormStyle_outerPadding'
      type: object
    SectionalElementMap:
      additionalProperties:
        $ref: '#/components/schemas/SectionalElement'
      type: object
    FormCTA:
      description: Describes the call to action button configuration for the form.
      properties:
        position:
          allOf:
          - $ref: '#/components/schemas/FormButtonsPosition'
          - description: The position of the button.
        clear:
          $ref: '#/components/schemas/FormCTA_clear'
        cancel:
          $ref: '#/components/schemas/FormCTA_cancel'
        submit:
          $ref: '#/components/schemas/FormCTA_submit'
      type: object
    LabelDecorator:
      enum:
      - required
      - optional
      - none
      type: string
    CreateThemeResponse:
      example:
        entity:
          createdAt: ""
          environmentName: ""
          modifiedAt: ""
          appId: ""
          values: ""
          name: ""
          id: ""
          overrides: ""
          tags: ""
      properties:
        entity:
          $ref: '#/components/schemas/CreateThemeResponse_entity'
      type: object
    ThemeName:
      maxLength: 255
      minLength: 1
      type: string
    ThemeValuesList:
      items:
        $ref: '#/components/schemas/ThemeValues'
      type: array
    ResourceNotFoundException: {}
    ExchangeCodeForTokenResponse:
      example:
        expiresIn: ""
        accessToken: ""
        refreshToken: ""
      properties:
        accessToken:
          allOf:
          - $ref: '#/components/schemas/SensitiveString'
          - description: The access token.
        expiresIn:
          allOf:
          - $ref: '#/components/schemas/Integer'
          - description: The date and time when the new access token expires.
        refreshToken:
          allOf:
          - $ref: '#/components/schemas/SensitiveString'
          - description: The token to use to refresh a previously issued access token
              that might have expired.
      required:
      - accessToken
      - expiresIn
      - refreshToken
      type: object
    SensitiveString:
      format: password
      type: string
    ExportComponentsResponse:
      example:
        entities: ""
        nextToken: ""
      properties:
        entities:
          allOf:
          - $ref: '#/components/schemas/ComponentList'
          - description: Represents the configuration of the exported components.
        nextToken:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The pagination token that's included if more results are
              available.
      required:
      - entities
      type: object
    ExportFormsResponse:
      example:
        entities: ""
        nextToken: ""
      properties:
        entities:
          allOf:
          - $ref: '#/components/schemas/FormList'
          - description: Represents the configuration of the exported forms.
        nextToken:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The pagination token that's included if more results are
              available.
      required:
      - entities
      type: object
    ExportThemesResponse:
      example:
        entities: ""
        nextToken: ""
      properties:
        entities:
          allOf:
          - $ref: '#/components/schemas/ThemeList'
          - description: Represents the configuration of the exported themes.
        nextToken:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The pagination token that's included if more results are
              available.
      required:
      - entities
      type: object
    GetCodegenJobResponse:
      example:
        job:
          autoGenerateForms: ""
          modifiedAt: ""
          genericDataSchema:
            nonModels: ""
            models: ""
            enums: ""
            dataSourceType: ""
          statusMessage: ""
          tags: ""
          features:
            isRelationshipSupported: ""
            isNonModelSupported: ""
          createdAt: ""
          environmentName: ""
          appId: ""
          renderConfig:
            react:
              apiConfiguration:
                noApiConfig: ""
                graphQLConfig:
                  typesFilePath: ""
                  subscriptionsFilePath: ""
                  fragmentsFilePath: ""
                  queriesFilePath: ""
                  mutationsFilePath: ""
                dataStoreConfig: ""
              renderTypeDeclarations: ""
              module: ""
              inlineSourceMap: ""
              script: ""
              target: ""
          id: ""
          asset:
            downloadUrl: ""
          status: ""
      properties:
        job:
          $ref: '#/components/schemas/GetCodegenJobResponse_job'
      type: object
    ThrottlingException: {}
    GetComponentResponse:
      example:
        component:
          sourceId: ""
          componentType: ""
          bindingProperties: ""
          schemaVersion: ""
          modifiedAt: ""
          collectionProperties: ""
          variants: ""
          overrides: ""
          tags: ""
          createdAt: ""
          children: ""
          environmentName: ""
          appId: ""
          name: ""
          id: ""
          properties: ""
          events: ""
      properties:
        component:
          $ref: '#/components/schemas/GetComponentResponse_component'
      type: object
    GetFormResponse:
      example:
        form:
          schemaVersion: ""
          dataType:
            dataTypeName: ""
            dataSourceType: ""
          formActionType: ""
          sectionalElements: ""
          tags: ""
          cta:
            cancel:
              excluded: ""
              children: ""
              position:
                below: ""
                fixed: ""
                rightOf: ""
            submit:
              excluded: ""
              children: ""
              position:
                below: ""
                fixed: ""
                rightOf: ""
            clear:
              excluded: ""
              children: ""
              position:
                below: ""
                fixed: ""
                rightOf: ""
            position: ""
          environmentName: ""
          appId: ""
          name: ""
          style:
            horizontalGap:
              tokenReference: ""
              value: ""
            outerPadding:
              tokenReference: ""
              value: ""
            verticalGap:
              tokenReference: ""
              value: ""
          id: ""
          fields: ""
          labelDecorator: ""
      properties:
        form:
          $ref: '#/components/schemas/GetFormResponse_form'
      type: object
    GetMetadataResponse:
      example:
        features: ""
      properties:
        features:
          allOf:
          - $ref: '#/components/schemas/FeaturesMap'
          - description: Represents the configuration settings for the features metadata.
      required:
      - features
      type: object
    UnauthorizedException: {}
    GetThemeResponse:
      example:
        theme:
          createdAt: ""
          environmentName: ""
          modifiedAt: ""
          appId: ""
          values: ""
          name: ""
          id: ""
          overrides: ""
          tags: ""
      properties:
        theme:
          $ref: '#/components/schemas/GetThemeResponse_theme'
      type: object
    ListCodegenJobsResponse:
      example:
        entities: ""
        nextToken: ""
      properties:
        entities:
          allOf:
          - $ref: '#/components/schemas/CodegenJobSummaryList'
          - description: The list of code generation jobs for the Amplify app.
        nextToken:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The pagination token that's included if more results are
              available.
      required:
      - entities
      type: object
    ListComponentsResponse:
      example:
        entities: ""
        nextToken: ""
      properties:
        entities:
          allOf:
          - $ref: '#/components/schemas/ComponentSummaryList'
          - description: The list of components for the Amplify app.
        nextToken:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The pagination token that's included if more results are
              available.
      required:
      - entities
      type: object
    ListFormsResponse:
      example:
        entities: ""
        nextToken: ""
      properties:
        entities:
          allOf:
          - $ref: '#/components/schemas/FormSummaryList'
          - description: The list of forms for the Amplify app.
        nextToken:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The pagination token that's included if more results are
              available.
      required:
      - entities
      type: object
    ListThemesResponse:
      example:
        entities: ""
        nextToken: ""
      properties:
        entities:
          allOf:
          - $ref: '#/components/schemas/ThemeSummaryList'
          - description: The list of themes for the Amplify app.
        nextToken:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The pagination token that's returned if more results are
              available.
      required:
      - entities
      type: object
    RefreshTokenResponse:
      example:
        expiresIn: ""
        accessToken: ""
      properties:
        accessToken:
          allOf:
          - $ref: '#/components/schemas/SensitiveString'
          - description: The access token.
        expiresIn:
          allOf:
          - $ref: '#/components/schemas/Integer'
          - description: The date and time when the new access token expires.
      required:
      - accessToken
      - expiresIn
      type: object
    StartCodegenJobResponse:
      example:
        entity:
          autoGenerateForms: ""
          modifiedAt: ""
          genericDataSchema:
            nonModels: ""
            models: ""
            enums: ""
            dataSourceType: ""
          statusMessage: ""
          tags: ""
          features:
            isRelationshipSupported: ""
            isNonModelSupported: ""
          createdAt: ""
          environmentName: ""
          appId: ""
          renderConfig:
            react:
              apiConfiguration:
                noApiConfig: ""
                graphQLConfig:
                  typesFilePath: ""
                  subscriptionsFilePath: ""
                  fragmentsFilePath: ""
                  queriesFilePath: ""
                  mutationsFilePath: ""
                dataStoreConfig: ""
              renderTypeDeclarations: ""
              module: ""
              inlineSourceMap: ""
              script: ""
              target: ""
          id: ""
          asset:
            downloadUrl: ""
          status: ""
      properties:
        entity:
          $ref: '#/components/schemas/StartCodegenJobResponse_entity'
      type: object
    CodegenJobRenderConfig:
      description: Describes the configuration information for rendering the UI component
        associated with the code generation job.
      example:
        react:
          apiConfiguration:
            noApiConfig: ""
            graphQLConfig:
              typesFilePath: ""
              subscriptionsFilePath: ""
              fragmentsFilePath: ""
              queriesFilePath: ""
              mutationsFilePath: ""
            dataStoreConfig: ""
          renderTypeDeclarations: ""
          module: ""
          inlineSourceMap: ""
          script: ""
          target: ""
      properties:
        react:
          $ref: '#/components/schemas/CodegenJobRenderConfig_react'
      type: object
    CodegenJobGenericDataSchema:
      description: Describes the data schema for a code generation job.
      example:
        nonModels: ""
        models: ""
        enums: ""
        dataSourceType: ""
      properties:
        dataSourceType:
          allOf:
          - $ref: '#/components/schemas/CodegenJobGenericDataSourceType'
          - description: "The type of the data source for the schema. Currently, the\
              \ only valid value is an Amplify <code>DataStore</code>."
        models:
          allOf:
          - $ref: '#/components/schemas/CodegenGenericDataModels'
          - description: The name of a <code>CodegenGenericDataModel</code>.
        enums:
          allOf:
          - $ref: '#/components/schemas/CodegenGenericDataEnums'
          - description: The name of a <code>CodegenGenericDataEnum</code>.
        nonModels:
          allOf:
          - $ref: '#/components/schemas/CodegenGenericDataNonModels'
          - description: The name of a <code>CodegenGenericDataNonModel</code>.
      required:
      - dataSourceType
      - enums
      - models
      - nonModels
      type: object
    Boolean:
      type: boolean
    CodegenFeatureFlags:
      description: Describes the feature flags that you can specify for a code generation
        job.
      example:
        isRelationshipSupported: ""
        isNonModelSupported: ""
      properties:
        isRelationshipSupported:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          - description: Specifes whether a code generation job supports data relationships.
        isNonModelSupported:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          - description: Specifies whether a code generation job supports non models.
      type: object
    UpdateComponentResponse:
      example:
        entity:
          sourceId: ""
          componentType: ""
          bindingProperties: ""
          schemaVersion: ""
          modifiedAt: ""
          collectionProperties: ""
          variants: ""
          overrides: ""
          tags: ""
          createdAt: ""
          children: ""
          environmentName: ""
          appId: ""
          name: ""
          id: ""
          properties: ""
          events: ""
      properties:
        entity:
          $ref: '#/components/schemas/UpdateComponentResponse_entity'
      type: object
    Uuid:
      type: string
    UpdateFormResponse:
      example:
        entity:
          schemaVersion: ""
          dataType:
            dataTypeName: ""
            dataSourceType: ""
          formActionType: ""
          sectionalElements: ""
          tags: ""
          cta:
            cancel:
              excluded: ""
              children: ""
              position:
                below: ""
                fixed: ""
                rightOf: ""
            submit:
              excluded: ""
              children: ""
              position:
                below: ""
                fixed: ""
                rightOf: ""
            clear:
              excluded: ""
              children: ""
              position:
                below: ""
                fixed: ""
                rightOf: ""
            position: ""
          environmentName: ""
          appId: ""
          name: ""
          style:
            horizontalGap:
              tokenReference: ""
              value: ""
            outerPadding:
              tokenReference: ""
              value: ""
            verticalGap:
              tokenReference: ""
              value: ""
          id: ""
          fields: ""
          labelDecorator: ""
      properties:
        entity:
          $ref: '#/components/schemas/UpdateFormResponse_entity'
      type: object
    UpdateThemeResponse:
      example:
        entity:
          createdAt: ""
          environmentName: ""
          modifiedAt: ""
          appId: ""
          values: ""
          name: ""
          id: ""
          overrides: ""
          tags: ""
      properties:
        entity:
          $ref: '#/components/schemas/UpdateThemeResponse_entity'
      type: object
    ComponentProperty:
      description: Describes the configuration for all of a component's properties.
        Use <code>ComponentProperty</code> to specify the values to render or bind
        by default.
      properties:
        value:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The value to assign to the component property.
        bindingProperties:
          $ref: '#/components/schemas/ComponentProperty_bindingProperties'
        collectionBindingProperties:
          $ref: '#/components/schemas/ComponentProperty_collectionBindingProperties'
        defaultValue:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The default value to assign to the component property.
        model:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The data model to use to assign a value to the component
              property.
        bindings:
          allOf:
          - $ref: '#/components/schemas/FormBindings'
          - description: The information to bind the component property to form data.
        event:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: An event that occurs in your app. Use this for workflow data
              binding.
        userAttribute:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: An authenticated user attribute to use to assign a value
              to the component property.
        concat:
          allOf:
          - $ref: '#/components/schemas/ComponentPropertyList'
          - description: A list of component properties to concatenate to create the
              value to assign to this component property.
        condition:
          $ref: '#/components/schemas/ComponentProperty_condition'
        configured:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          - description: Specifies whether the user configured the property in Amplify
              Studio after importing it.
        type:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The component type.
        importedValue:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The default value assigned to the property when the component
              is imported into an app.
        componentName:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The name of the component that is affected by an event.
        property:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The name of the component's property that is affected by
              an event.
      type: object
    ComponentProperties:
      additionalProperties:
        $ref: '#/components/schemas/ComponentProperty'
      type: object
    MutationActionSetStateParameter:
      description: Represents the state configuration when an action modifies a property
        of another element within the same component.
      properties:
        componentName:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The name of the component that is being modified.
        property:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The name of the component property to apply the state configuration
              to.
        set:
          $ref: '#/components/schemas/MutationActionSetStateParameter_set'
      required:
      - componentName
      - property
      - set
      type: object
    ActionParameters:
      description: Represents the event action configuration for an element of a <code>Component</code>
        or <code>ComponentChild</code>. Use for the workflow feature in Amplify Studio
        that allows you to bind events and actions to components. <code>ActionParameters</code>
        defines the action that is performed when an event occurs on the component.
      properties:
        type:
          $ref: '#/components/schemas/ActionParameters_type'
        url:
          $ref: '#/components/schemas/ActionParameters_url'
        anchor:
          $ref: '#/components/schemas/ActionParameters_anchor'
        target:
          $ref: '#/components/schemas/ActionParameters_target'
        global:
          $ref: '#/components/schemas/ActionParameters_global'
        model:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The name of the data model. Use when the action performs
              an operation on an Amplify DataStore model.
        id:
          $ref: '#/components/schemas/ActionParameters_id'
        fields:
          allOf:
          - $ref: '#/components/schemas/ComponentProperties'
          - description: A dictionary of key-value pairs mapping Amplify Studio properties
              to fields in a data model. Use when the action performs an operation
              on an Amplify DataStore model.
        state:
          $ref: '#/components/schemas/ActionParameters_state'
      type: object
    GraphQLRenderConfig:
      description: Describes the GraphQL configuration for an API for a code generation
        job.
      properties:
        typesFilePath:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: "The path to the GraphQL types file, relative to the component\
              \ output directory."
        queriesFilePath:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: "The path to the GraphQL queries file, relative to the component\
              \ output directory."
        mutationsFilePath:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: "The path to the GraphQL mutations file, relative to the\
              \ component output directory."
        subscriptionsFilePath:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: "The path to the GraphQL subscriptions file, relative to\
              \ the component output directory."
        fragmentsFilePath:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: "The path to the GraphQL fragments file, relative to the\
              \ component output directory."
      required:
      - fragmentsFilePath
      - mutationsFilePath
      - queriesFilePath
      - subscriptionsFilePath
      - typesFilePath
      type: object
    DataStoreRenderConfig:
      description: Describes the DataStore configuration for an API for a code generation
        job.
      properties: {}
      type: object
    NoApiRenderConfig:
      description: Describes the configuration for an application with no API being
        used.
      properties: {}
      type: object
    ApiConfiguration:
      description: Describes the API configuration for a code generation job.
      properties:
        graphQLConfig:
          $ref: '#/components/schemas/ApiConfiguration_graphQLConfig'
        dataStoreConfig:
          allOf:
          - $ref: '#/components/schemas/DataStoreRenderConfig'
          - description: The configuration for an application using DataStore APIs.
        noApiConfig:
          allOf:
          - $ref: '#/components/schemas/NoApiRenderConfig'
          - description: The configuration for an application with no API being used.
      type: object
    AppId:
      maxLength: 20
      minLength: 1
      pattern: "d[a-z0-9]+"
      type: string
    AssociatedFieldsList:
      items:
        $ref: '#/components/schemas/String'
      type: array
    CodegenGenericDataEnumValuesList:
      items:
        $ref: '#/components/schemas/String'
      type: array
    CodegenGenericDataEnum:
      description: Describes the enums in a generic data schema.
      properties:
        values:
          allOf:
          - $ref: '#/components/schemas/CodegenGenericDataEnumValuesList'
          - description: The list of enum values in the generic data schema.
      required:
      - values
      type: object
    CodegenGenericDataEnums:
      additionalProperties:
        $ref: '#/components/schemas/CodegenGenericDataEnum'
      type: object
    CodegenGenericDataFieldDataType:
      enum:
      - ID
      - String
      - Int
      - Float
      - AWSDate
      - AWSTime
      - AWSDateTime
      - AWSTimestamp
      - AWSEmail
      - AWSURL
      - AWSIPAddress
      - Boolean
      - AWSJSON
      - AWSPhone
      - Enum
      - Model
      - NonModel
      type: string
    CodegenGenericDataRelationshipType:
      description: Describes the relationship between generic data models.
      properties:
        type:
          allOf:
          - $ref: '#/components/schemas/GenericDataRelationshipType'
          - description: The data relationship type.
        relatedModelName:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The name of the related model in the data relationship.
        relatedModelFields:
          allOf:
          - $ref: '#/components/schemas/RelatedModelFieldsList'
          - description: The related model fields in the data relationship.
        canUnlinkAssociatedModel:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          - description: Specifies whether the relationship can unlink the associated
              model.
        relatedJoinFieldName:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The name of the related join field in the data relationship.
        relatedJoinTableName:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The name of the related join table in the data relationship.
        belongsToFieldOnRelatedModel:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: 'The value of the <code>belongsTo</code> field on the related
              data model. '
        associatedFields:
          allOf:
          - $ref: '#/components/schemas/AssociatedFieldsList'
          - description: The associated fields of the data relationship.
        isHasManyIndex:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          - description: Specifies whether the <code>@index</code> directive is supported
              for a <code>hasMany</code> data relationship.
      required:
      - relatedModelName
      - type
      type: object
    CodegenGenericDataField:
      description: Describes a field in a generic data schema.
      properties:
        dataType:
          allOf:
          - $ref: '#/components/schemas/CodegenGenericDataFieldDataType'
          - description: The data type for the generic data field.
        dataTypeValue:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The value of the data type for the generic data field.
        required:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          - description: Specifies whether the generic data field is required.
        readOnly:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          - description: Specifies whether the generic data field is read-only.
        isArray:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          - description: Specifies whether the generic data field is an array.
        relationship:
          $ref: '#/components/schemas/CodegenGenericDataField_relationship'
      required:
      - dataType
      - dataTypeValue
      - isArray
      - readOnly
      - required
      type: object
    CodegenGenericDataFields:
      additionalProperties:
        $ref: '#/components/schemas/CodegenGenericDataField'
      type: object
    CodegenPrimaryKeysList:
      items:
        $ref: '#/components/schemas/String'
      type: array
    CodegenGenericDataModel:
      description: Describes a model in a generic data schema.
      properties:
        fields:
          allOf:
          - $ref: '#/components/schemas/CodegenGenericDataFields'
          - description: The fields in the generic data model.
        isJoinTable:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          - description: Specifies whether the generic data model is a join table.
        primaryKeys:
          allOf:
          - $ref: '#/components/schemas/CodegenPrimaryKeysList'
          - description: The primary keys of the generic data model.
      required:
      - fields
      - primaryKeys
      type: object
    CodegenGenericDataModels:
      additionalProperties:
        $ref: '#/components/schemas/CodegenGenericDataModel'
      type: object
    CodegenGenericDataNonModelFields:
      additionalProperties:
        $ref: '#/components/schemas/CodegenGenericDataField'
      type: object
    CodegenGenericDataNonModel:
      description: Describes a non-model in a generic data schema.
      properties:
        fields:
          allOf:
          - $ref: '#/components/schemas/CodegenGenericDataNonModelFields'
          - description: The fields in a generic data schema non model.
      required:
      - fields
      type: object
    CodegenGenericDataNonModels:
      additionalProperties:
        $ref: '#/components/schemas/CodegenGenericDataNonModel'
      type: object
    GenericDataRelationshipType:
      enum:
      - HAS_MANY
      - HAS_ONE
      - BELONGS_TO
      type: string
    RelatedModelFieldsList:
      items:
        $ref: '#/components/schemas/String'
      type: array
    CodegenJobStatus:
      enum:
      - in_progress
      - failed
      - succeeded
      type: string
    CodegenJobAsset:
      description: Describes an asset for a code generation job.
      properties:
        downloadUrl:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The URL to use to access the asset.
      type: object
    SyntheticTimestamp_date_time:
      format: date-time
      type: string
    CodegenJob:
      description: Describes the configuration for a code generation job that is associated
        with an Amplify app.
      properties:
        id:
          allOf:
          - $ref: '#/components/schemas/Uuid'
          - description: The unique ID for the code generation job.
        appId:
          allOf:
          - $ref: '#/components/schemas/AppId'
          - description: The ID of the Amplify app associated with the code generation
              job.
        environmentName:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The name of the backend environment associated with the code
              generation job.
        renderConfig:
          $ref: '#/components/schemas/CodegenJobRenderConfig'
        genericDataSchema:
          $ref: '#/components/schemas/CodegenJobGenericDataSchema'
        autoGenerateForms:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          - description: Specifies whether to autogenerate forms in the code generation
              job.
        features:
          $ref: '#/components/schemas/CodegenFeatureFlags'
        status:
          allOf:
          - $ref: '#/components/schemas/CodegenJobStatus'
          - description: The status of the code generation job.
        statusMessage:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The customized status message for the code generation job.
        asset:
          $ref: '#/components/schemas/CodegenJob_asset'
        tags:
          allOf:
          - $ref: '#/components/schemas/Tags'
          - description: One or more key-value pairs to use when tagging the code
              generation job.
        createdAt:
          allOf:
          - $ref: '#/components/schemas/SyntheticTimestamp_date_time'
          - description: The time that the code generation job was created.
        modifiedAt:
          allOf:
          - $ref: '#/components/schemas/SyntheticTimestamp_date_time'
          - description: The time that the code generation job was modified.
      required:
      - appId
      - environmentName
      - id
      type: object
    CodegenJobGenericDataSourceType:
      enum:
      - DataStore
      type: string
    ReactStartCodegenJobData:
      description: Describes the code generation job configuration for a React project.
      properties:
        module:
          allOf:
          - $ref: '#/components/schemas/JSModule'
          - description: The JavaScript module type.
        target:
          allOf:
          - $ref: '#/components/schemas/JSTarget'
          - description: The ECMAScript specification to use.
        script:
          allOf:
          - $ref: '#/components/schemas/JSScript'
          - description: The file type to use for a JavaScript project.
        renderTypeDeclarations:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          - description: Specifies whether the code generation job should render type
              declaration files.
        inlineSourceMap:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          - description: Specifies whether the code generation job should render inline
              source maps.
        apiConfiguration:
          $ref: '#/components/schemas/ReactStartCodegenJobData_apiConfiguration'
      type: object
    CodegenJobSummary:
      description: A summary of the basic information about the code generation job.
      properties:
        appId:
          allOf:
          - $ref: '#/components/schemas/AppId'
          - description: The unique ID of the Amplify app associated with the code
              generation job.
        environmentName:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The name of the backend environment associated with the code
              generation job.
        id:
          allOf:
          - $ref: '#/components/schemas/Uuid'
          - description: The unique ID for the code generation job summary.
        createdAt:
          allOf:
          - $ref: '#/components/schemas/SyntheticTimestamp_date_time'
          - description: The time that the code generation job summary was created.
        modifiedAt:
          allOf:
          - $ref: '#/components/schemas/SyntheticTimestamp_date_time'
          - description: The time that the code generation job summary was modified.
      required:
      - appId
      - environmentName
      - id
      type: object
    CodegenJobSummaryList:
      items:
        $ref: '#/components/schemas/CodegenJobSummary'
      type: array
    Component:
      description: "Contains the configuration settings for a user interface (UI)\
        \ element for an Amplify app. A component is configured as a primary, stand-alone\
        \ UI element. Use <code>ComponentChild</code> to configure an instance of\
        \ a <code>Component</code>. A <code>ComponentChild</code> instance inherits\
        \ the configuration of the main <code>Component</code>."
      properties:
        appId:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The unique ID of the Amplify app associated with the component.
        environmentName:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The name of the backend environment that is a part of the
              Amplify app.
        sourceId:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: "The unique ID of the component in its original source system,\
              \ such as Figma."
        id:
          allOf:
          - $ref: '#/components/schemas/Uuid'
          - description: The unique ID of the component.
        name:
          allOf:
          - $ref: '#/components/schemas/ComponentName'
          - description: The name of the component.
        componentType:
          allOf:
          - $ref: '#/components/schemas/ComponentType'
          - description: The type of the component. This can be an Amplify custom
              UI component or another custom component.
        properties:
          description: Describes the component's properties. You can't specify <code>tags</code>
            as a valid property for <code>properties</code>.
        children:
          allOf:
          - $ref: '#/components/schemas/ComponentChildList'
          - description: A list of the component's <code>ComponentChild</code> instances.
        variants:
          allOf:
          - $ref: '#/components/schemas/ComponentVariants'
          - description: A list of the component's variants. A variant is a unique
              style configuration of a main component.
        overrides:
          allOf:
          - $ref: '#/components/schemas/ComponentOverrides'
          - description: Describes the component's properties that can be overriden
              in a customized instance of the component. You can't specify <code>tags</code>
              as a valid property for <code>overrides</code>.
        bindingProperties:
          allOf:
          - $ref: '#/components/schemas/ComponentBindingProperties'
          - description: <p>The information to connect a component's properties to
              data at runtime. You can't specify <code>tags</code> as a valid property
              for <code>bindingProperties</code>.</p> <p/>
        collectionProperties:
          allOf:
          - $ref: '#/components/schemas/ComponentCollectionProperties'
          - description: The data binding configuration for the component's properties.
              Use this for a collection component. You can't specify <code>tags</code>
              as a valid property for <code>collectionProperties</code>.
        createdAt:
          allOf:
          - $ref: '#/components/schemas/SyntheticTimestamp_date_time'
          - description: The time that the component was created.
        modifiedAt:
          allOf:
          - $ref: '#/components/schemas/SyntheticTimestamp_date_time'
          - description: The time that the component was modified.
        tags:
          allOf:
          - $ref: '#/components/schemas/Tags'
          - description: One or more key-value pairs to use when tagging the component.
        events:
          allOf:
          - $ref: '#/components/schemas/ComponentEvents'
          - description: Describes the events that can be raised on the component.
              Use for the workflow feature in Amplify Studio that allows you to bind
              events and actions to components.
        schemaVersion:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The schema version of the component when it was imported.
      required:
      - appId
      - bindingProperties
      - componentType
      - createdAt
      - environmentName
      - id
      - name
      - overrides
      - properties
      - variants
      type: object
    ComponentBindingPropertiesValue:
      description: Represents the data binding configuration for a component at runtime.
        You can use <code>ComponentBindingPropertiesValue</code> to add exposed properties
        to a component to allow different values to be entered when a component is
        reused in different places in an app.
      properties:
        type:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The property type.
        bindingProperties:
          $ref: '#/components/schemas/ComponentBindingPropertiesValue_bindingProperties'
        defaultValue:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The default value of the property.
      type: object
    ComponentBindingPropertiesValueProperties:
      description: "Represents the data binding configuration for a specific property\
        \ using data stored in Amazon Web Services. For Amazon Web Services connected\
        \ properties, you can bind a property to data stored in an Amazon S3 bucket,\
        \ an Amplify DataStore model or an authenticated user attribute."
      properties:
        model:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: An Amplify DataStore model.
        field:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The field to bind the data to.
        predicates:
          allOf:
          - $ref: '#/components/schemas/PredicateList'
          - description: A list of predicates for binding a component's properties
              to data.
        userAttribute:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: An authenticated user attribute.
        bucket:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: An Amazon S3 bucket.
        key:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The storage key for an Amazon S3 bucket.
        defaultValue:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The default value to assign to the property.
        slotName:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The name of a component slot.
      type: object
    PredicateList:
      items:
        $ref: '#/components/schemas/Predicate'
      type: array
    ComponentChild:
      description: A nested UI configuration within a parent <code>Component</code>.
      properties:
        componentType:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: 'The type of the child component. '
        name:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The name of the child component.
        properties:
          description: Describes the properties of the child component. You can't
            specify <code>tags</code> as a valid property for <code>properties</code>.
        children:
          allOf:
          - $ref: '#/components/schemas/ComponentChildList'
          - description: The list of <code>ComponentChild</code> instances for this
              component.
        events:
          allOf:
          - $ref: '#/components/schemas/ComponentEvents'
          - description: Describes the events that can be raised on the child component.
              Use for the workflow feature in Amplify Studio that allows you to bind
              events and actions to components.
        sourceId:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: "The unique ID of the child component in its original source\
              \ system, such as Figma."
      required:
      - componentType
      - name
      - properties
      type: object
    ComponentDataConfiguration:
      description: Describes the configuration for binding a component's properties
        to data.
      properties:
        model:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The name of the data model to use to bind data to a component.
        sort:
          allOf:
          - $ref: '#/components/schemas/SortPropertyList'
          - description: Describes how to sort the component's properties.
        predicate:
          $ref: '#/components/schemas/ComponentDataConfiguration_predicate'
        identifiers:
          allOf:
          - $ref: '#/components/schemas/IdentifierList'
          - description: "A list of IDs to use to bind data to a component. Use this\
              \ property to bind specifically chosen data, rather than data retrieved\
              \ from a query."
      required:
      - model
      type: object
    ComponentConditionProperty:
      description: "Represents a conditional expression to set a component property.\
        \ Use <code>ComponentConditionProperty</code> to set a property to different\
        \ values conditionally, based on the value of another property."
      properties:
        property:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The name of the conditional property.
        field:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The name of a field. Specify this when the property is a
              data model.
        operator:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: "The operator to use to perform the evaluation, such as <code>eq</code>\
              \ to represent equals."
        operand:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The value of the property to evaluate.
        then:
          $ref: '#/components/schemas/ComponentConditionProperty_then'
        else:
          $ref: '#/components/schemas/ComponentConditionProperty_else'
        operandType:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The type of the property to evaluate.
      type: object
    SortPropertyList:
      items:
        $ref: '#/components/schemas/SortProperty'
      type: array
    Predicate:
      description: Stores information for generating Amplify DataStore queries. Use
        a <code>Predicate</code> to retrieve a subset of the data in a collection.
      properties:
        or:
          allOf:
          - $ref: '#/components/schemas/PredicateList'
          - description: A list of predicates to combine logically.
        and:
          allOf:
          - $ref: '#/components/schemas/PredicateList'
          - description: A list of predicates to combine logically.
        field:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The field to query.
        operator:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The operator to use to perform the evaluation.
        operand:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The value to use when performing the evaluation.
        operandType:
          allOf:
          - $ref: '#/components/schemas/OperandType'
          - description: The type of value to use when performing the evaluation.
      type: object
    IdentifierList:
      items:
        $ref: '#/components/schemas/String'
      type: array
    ComponentEvent:
      description: 'Describes the configuration of an event. You can bind an event
        and a corresponding action to a <code>Component</code> or a <code>ComponentChild</code>.
        A button click is an example of an event. '
      properties:
        action:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The action to perform when a specific event is raised.
        parameters:
          $ref: '#/components/schemas/ComponentEvent_parameters'
        bindingEvent:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: "Binds an event to an action on a component. When you specify\
              \ a <code>bindingEvent</code>, the event is called when the action is\
              \ performed."
      type: object
    ComponentList:
      items:
        $ref: '#/components/schemas/Component'
      type: array
    ComponentOverridesValue:
      additionalProperties:
        $ref: '#/components/schemas/String'
      type: object
    ComponentPropertyBindingProperties:
      description: Associates a component property to a binding property. This enables
        exposed properties on the top level component to propagate data to the component's
        property values.
      properties:
        property:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The component property to bind to the data field.
        field:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The data field to bind the property to.
      required:
      - property
      type: object
    FormBindings:
      additionalProperties:
        $ref: '#/components/schemas/FormBindingElement'
      type: object
    ComponentPropertyList:
      items:
        $ref: '#/components/schemas/ComponentProperty'
      type: array
    ComponentSummary:
      description: Contains a summary of a component. This is a read-only data type
        that is returned by <code>ListComponents</code>.
      properties:
        appId:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The unique ID of the Amplify app associated with the component.
        environmentName:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The name of the backend environment that is a part of the
              Amplify app.
        id:
          allOf:
          - $ref: '#/components/schemas/Uuid'
          - description: The unique ID of the component.
        name:
          allOf:
          - $ref: '#/components/schemas/ComponentName'
          - description: The name of the component.
        componentType:
          allOf:
          - $ref: '#/components/schemas/ComponentType'
          - description: The component type.
      required:
      - appId
      - componentType
      - environmentName
      - id
      - name
      type: object
    ComponentSummaryList:
      items:
        $ref: '#/components/schemas/ComponentSummary'
      type: array
    ComponentVariantValues:
      additionalProperties:
        $ref: '#/components/schemas/String'
      type: object
    ComponentVariant:
      description: Describes the style configuration of a unique variation of a main
        component.
      properties:
        variantValues:
          allOf:
          - $ref: '#/components/schemas/ComponentVariantValues'
          - description: The combination of variants that comprise this variant. You
              can't specify <code>tags</code> as a valid property for <code>variantValues</code>.
        overrides:
          allOf:
          - $ref: '#/components/schemas/ComponentOverrides'
          - description: The properties of the component variant that can be overriden
              when customizing an instance of the component. You can't specify <code>tags</code>
              as a valid property for <code>overrides</code>.
      type: object
    CreateComponentData:
      description: Represents all of the information that is required to create a
        component.
      properties:
        name:
          allOf:
          - $ref: '#/components/schemas/ComponentName'
          - description: The name of the component
        sourceId:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: "The unique ID of the component in its original source system,\
              \ such as Figma."
        componentType:
          allOf:
          - $ref: '#/components/schemas/ComponentType'
          - description: The component type. This can be an Amplify custom UI component
              or another custom component.
        properties:
          description: Describes the component's properties.
        children:
          allOf:
          - $ref: '#/components/schemas/ComponentChildList'
          - description: A list of child components that are instances of the main
              component.
        variants:
          allOf:
          - $ref: '#/components/schemas/ComponentVariants'
          - description: A list of the unique variants of this component.
        overrides:
          allOf:
          - $ref: '#/components/schemas/ComponentOverrides'
          - description: Describes the component properties that can be overriden
              to customize an instance of the component.
        bindingProperties:
          allOf:
          - $ref: '#/components/schemas/ComponentBindingProperties'
          - description: The data binding information for the component's properties.
        collectionProperties:
          allOf:
          - $ref: '#/components/schemas/ComponentCollectionProperties'
          - description: The data binding configuration for customizing a component's
              properties. Use this for a collection component.
        tags:
          allOf:
          - $ref: '#/components/schemas/Tags'
          - description: One or more key-value pairs to use when tagging the component
              data.
        events:
          allOf:
          - $ref: '#/components/schemas/ComponentEvents'
          - description: The event configuration for the component. Use for the workflow
              feature in Amplify Studio that allows you to bind events and actions
              to components.
        schemaVersion:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The schema version of the component when it was imported.
      required:
      - bindingProperties
      - componentType
      - name
      - overrides
      - properties
      - variants
      type: object
    CreateComponentRequest:
      example:
        componentToCreate:
          sourceId: ""
          componentType: ""
          bindingProperties: ""
          schemaVersion: ""
          children: ""
          name: ""
          collectionProperties: ""
          variants: ""
          overrides: ""
          properties: ""
          events: ""
          tags: ""
      properties:
        componentToCreate:
          $ref: '#/components/schemas/CreateComponentRequest_componentToCreate'
      required:
      - componentToCreate
      title: CreateComponentRequest
      type: object
    CreateFormData:
      description: Represents all of the information that is required to create a
        form.
      properties:
        name:
          allOf:
          - $ref: '#/components/schemas/FormName'
          - description: The name of the form.
        dataType:
          $ref: '#/components/schemas/CreateForm_request_formToCreate_dataType'
        formActionType:
          allOf:
          - $ref: '#/components/schemas/FormActionType'
          - description: Specifies whether to perform a create or update action on
              the form.
        fields:
          allOf:
          - $ref: '#/components/schemas/FieldsMap'
          - description: The configuration information for the form's fields.
        style:
          $ref: '#/components/schemas/CreateForm_request_formToCreate_style'
        sectionalElements:
          allOf:
          - $ref: '#/components/schemas/SectionalElementMap'
          - description: The configuration information for the visual helper elements
              for the form. These elements are not associated with any data.
        schemaVersion:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The schema version of the form.
        cta:
          $ref: '#/components/schemas/CreateForm_request_formToCreate_cta'
        tags:
          allOf:
          - $ref: '#/components/schemas/Tags'
          - description: One or more key-value pairs to use when tagging the form
              data.
        labelDecorator:
          allOf:
          - $ref: '#/components/schemas/LabelDecorator'
          - description: Specifies an icon or decoration to display on the form.
      required:
      - dataType
      - fields
      - formActionType
      - name
      - schemaVersion
      - sectionalElements
      - style
      type: object
    CreateFormRequest:
      example:
        formToCreate:
          cta:
            cancel:
              excluded: ""
              children: ""
              position:
                below: ""
                fixed: ""
                rightOf: ""
            submit:
              excluded: ""
              children: ""
              position:
                below: ""
                fixed: ""
                rightOf: ""
            clear:
              excluded: ""
              children: ""
              position:
                below: ""
                fixed: ""
                rightOf: ""
            position: ""
          schemaVersion: ""
          dataType:
            dataTypeName: ""
            dataSourceType: ""
          name: ""
          formActionType: ""
          style:
            horizontalGap:
              tokenReference: ""
              value: ""
            outerPadding:
              tokenReference: ""
              value: ""
            verticalGap:
              tokenReference: ""
              value: ""
          fields: ""
          sectionalElements: ""
          labelDecorator: ""
          tags: ""
      properties:
        formToCreate:
          $ref: '#/components/schemas/CreateFormRequest_formToCreate'
      required:
      - formToCreate
      title: CreateFormRequest
      type: object
    Form:
      description: Contains the configuration settings for a <code>Form</code> user
        interface (UI) element for an Amplify app. A form is a component you can add
        to your project by specifying a data source as the default configuration for
        the form.
      properties:
        appId:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The unique ID of the Amplify app associated with the form.
        environmentName:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The name of the backend environment that is a part of the
              Amplify app.
        id:
          allOf:
          - $ref: '#/components/schemas/Uuid'
          - description: The unique ID of the form.
        name:
          allOf:
          - $ref: '#/components/schemas/FormName'
          - description: The name of the form.
        formActionType:
          allOf:
          - $ref: '#/components/schemas/FormActionType'
          - description: The operation to perform on the specified form.
        style:
          $ref: '#/components/schemas/Form_style'
        dataType:
          $ref: '#/components/schemas/CreateForm_request_formToCreate_dataType'
        fields:
          allOf:
          - $ref: '#/components/schemas/FieldsMap'
          - description: Stores the information about the form's fields.
        sectionalElements:
          allOf:
          - $ref: '#/components/schemas/SectionalElementMap'
          - description: Stores the visual helper elements for the form that are not
              associated with any data.
        schemaVersion:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The schema version of the form when it was imported.
        tags:
          allOf:
          - $ref: '#/components/schemas/Tags'
          - description: One or more key-value pairs to use when tagging the form.
        cta:
          $ref: '#/components/schemas/Form_cta'
        labelDecorator:
          allOf:
          - $ref: '#/components/schemas/LabelDecorator'
          - description: Specifies an icon or decoration to display on the form.
      required:
      - appId
      - dataType
      - environmentName
      - fields
      - formActionType
      - id
      - name
      - schemaVersion
      - sectionalElements
      - style
      type: object
    CreateThemeData:
      description: Represents all of the information that is required to create a
        theme.
      properties:
        name:
          allOf:
          - $ref: '#/components/schemas/ThemeName'
          - description: The name of the theme.
        values:
          allOf:
          - $ref: '#/components/schemas/ThemeValuesList'
          - description: A list of key-value pairs that deﬁnes the properties of the
              theme.
        overrides:
          allOf:
          - $ref: '#/components/schemas/ThemeValuesList'
          - description: Describes the properties that can be overriden to customize
              an instance of the theme.
        tags:
          allOf:
          - $ref: '#/components/schemas/Tags'
          - description: One or more key-value pairs to use when tagging the theme
              data.
      required:
      - name
      - values
      type: object
    CreateThemeRequest:
      example:
        themeToCreate:
          values: ""
          name: ""
          overrides: ""
          tags: ""
      properties:
        themeToCreate:
          $ref: '#/components/schemas/CreateThemeRequest_themeToCreate'
      required:
      - themeToCreate
      title: CreateThemeRequest
      type: object
    Theme:
      description: A theme is a collection of style settings that apply globally to
        the components associated with an Amplify application.
      properties:
        appId:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The unique ID for the Amplify app associated with the theme.
        environmentName:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The name of the backend environment that is a part of the
              Amplify app.
        id:
          allOf:
          - $ref: '#/components/schemas/Uuid'
          - description: The ID for the theme.
        name:
          allOf:
          - $ref: '#/components/schemas/ThemeName'
          - description: The name of the theme.
        createdAt:
          allOf:
          - $ref: '#/components/schemas/SyntheticTimestamp_date_time'
          - description: The time that the theme was created.
        modifiedAt:
          allOf:
          - $ref: '#/components/schemas/SyntheticTimestamp_date_time'
          - description: The time that the theme was modified.
        values:
          allOf:
          - $ref: '#/components/schemas/ThemeValuesList'
          - description: A list of key-value pairs that defines the properties of
              the theme.
        overrides:
          allOf:
          - $ref: '#/components/schemas/ThemeValuesList'
          - description: Describes the properties that can be overriden to customize
              a theme.
        tags:
          allOf:
          - $ref: '#/components/schemas/Tags'
          - description: One or more key-value pairs to use when tagging the theme.
      required:
      - appId
      - createdAt
      - environmentName
      - id
      - name
      - values
      type: object
    DeleteComponentRequest:
      properties: {}
      title: DeleteComponentRequest
      type: object
    DeleteFormRequest:
      properties: {}
      title: DeleteFormRequest
      type: object
    DeleteThemeRequest:
      properties: {}
      title: DeleteThemeRequest
      type: object
    TokenProviders:
      enum:
      - figma
      type: string
    ExchangeCodeForTokenRequestBody:
      description: Describes the configuration of a request to exchange an access
        code for a token.
      properties:
        code:
          allOf:
          - $ref: '#/components/schemas/SensitiveString'
          - description: The access code to send in the request.
        redirectUri:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The location of the application that will receive the access
              code.
        clientId:
          allOf:
          - $ref: '#/components/schemas/SensitiveString'
          - description: The ID of the client to request the token from.
      required:
      - code
      - redirectUri
      type: object
    ExchangeCodeForTokenRequest:
      example:
        request:
          redirectUri: ""
          code: ""
          clientId: ""
      properties:
        request:
          $ref: '#/components/schemas/ExchangeCodeForTokenRequest_request'
      required:
      - request
      title: ExchangeCodeForTokenRequest
      type: object
    Integer:
      type: integer
    ExportComponentsRequest:
      properties: {}
      title: ExportComponentsRequest
      type: object
    ExportFormsRequest:
      properties: {}
      title: ExportFormsRequest
      type: object
    FormList:
      items:
        $ref: '#/components/schemas/Form'
      type: array
    ExportThemesRequest:
      properties: {}
      title: ExportThemesRequest
      type: object
    ThemeList:
      items:
        $ref: '#/components/schemas/Theme'
      type: array
    FeaturesMap:
      additionalProperties:
        $ref: '#/components/schemas/String'
      type: object
    FieldPosition:
      description: Describes the field position.
      properties:
        fixed:
          allOf:
          - $ref: '#/components/schemas/FixedPosition'
          - description: The field position is fixed and doesn't change in relation
              to other fields.
        rightOf:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The field position is to the right of the field specified
              by the string.
        below:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The field position is below the field specified by the string.
      type: object
    FieldInputConfig:
      description: Describes the configuration for the default input values to display
        for a field.
      properties:
        type:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: 'The input type for the field. '
        required:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          - description: Specifies a field that requires input.
        readOnly:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          - description: Specifies a read only field.
        placeholder:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The text to display as a placeholder for the field.
        defaultValue:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The default value for the field.
        descriptiveText:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The text to display to describe the field.
        defaultChecked:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          - description: Specifies whether a field has a default value.
        defaultCountryCode:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The default country code for a phone number.
        valueMappings:
          $ref: '#/components/schemas/FieldInputConfig_valueMappings'
        name:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The name of the field.
        minValue:
          allOf:
          - $ref: '#/components/schemas/Float'
          - description: The minimum value to display for the field.
        maxValue:
          allOf:
          - $ref: '#/components/schemas/Float'
          - description: The maximum value to display for the field.
        step:
          allOf:
          - $ref: '#/components/schemas/Float'
          - description: The stepping increment for a numeric value in a field.
        value:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The value for the field.
        isArray:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          - description: Specifies whether to render the field as an array. This property
              is ignored if the <code>dataSourceType</code> for the form is a Data
              Store.
        fileUploaderConfig:
          $ref: '#/components/schemas/FieldInputConfig_fileUploaderConfig'
      required:
      - type
      type: object
    ValidationsList:
      items:
        $ref: '#/components/schemas/FieldValidationConfiguration'
      type: array
    FieldConfig:
      description: Describes the configuration information for a field in a table.
      properties:
        label:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The label for the field.
        position:
          $ref: '#/components/schemas/FieldConfig_position'
        excluded:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          - description: Specifies whether to hide a field.
        inputType:
          $ref: '#/components/schemas/FieldConfig_inputType'
        validations:
          allOf:
          - $ref: '#/components/schemas/ValidationsList'
          - description: The validations to perform on the value in the field.
      type: object
    ValueMappings:
      description: Represents the data binding configuration for a value map.
      properties:
        values:
          allOf:
          - $ref: '#/components/schemas/ValueMappingList'
          - description: The value and display value pairs.
        bindingProperties:
          allOf:
          - $ref: '#/components/schemas/FormInputBindingProperties'
          - description: The information to bind fields to data at runtime.
      required:
      - values
      type: object
    Float:
      format: float
      type: number
    FileUploaderFieldConfig:
      description: Describes the configuration for the file uploader field.
      properties:
        accessLevel:
          allOf:
          - $ref: '#/components/schemas/StorageAccessLevel'
          - description: "The access level to assign to the uploaded files in the\
              \ Amazon S3 bucket where they are stored. The valid values for this\
              \ property are <code>private</code>, <code>protected</code>, or <code>public</code>.\
              \ For detailed information about the permissions associated with each\
              \ access level, see <a href=\"https://docs.amplify.aws/lib/storage/configureaccess/q/platform/js/\"\
              >File access levels</a> in the <i>Amplify documentation</i>."
        acceptedFileTypes:
          allOf:
          - $ref: '#/components/schemas/StrValues'
          - description: The file types that are allowed to be uploaded by the file
              uploader. Provide this information in an array of strings specifying
              the valid file extensions.
        showThumbnails:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          - description: Specifies whether to display or hide the image preview after
              selecting a file for upload. The default value is <code>true</code>
              to display the image preview.
        isResumable:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          - description: "<p>Allows the file upload operation to be paused and resumed.\
              \ The default value is <code>false</code>.</p> <p>When <code>isResumable</code>\
              \ is set to <code>true</code>, the file uploader uses a multipart upload\
              \ to break the files into chunks before upload. The progress of the\
              \ upload isn't continuous, because the file uploader uploads a chunk\
              \ at a time.</p>"
        maxFileCount:
          allOf:
          - $ref: '#/components/schemas/Integer'
          - description: Specifies the maximum number of files that can be selected
              to upload. The default value is an unlimited number of files.
        maxSize:
          allOf:
          - $ref: '#/components/schemas/Integer'
          - description: The maximum file size in bytes that the file uploader will
              accept. The default value is an unlimited file size.
      required:
      - acceptedFileTypes
      - accessLevel
      type: object
    FixedPosition:
      enum:
      - first
      type: string
    StrValues:
      items:
        $ref: '#/components/schemas/String'
      type: array
    NumValues:
      items:
        $ref: '#/components/schemas/Integer'
      type: array
    FieldValidationConfiguration:
      description: Describes the validation configuration for a field.
      properties:
        type:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: 'The validation to perform on an object type.<code/> '
        strValues:
          allOf:
          - $ref: '#/components/schemas/StrValues'
          - description: The validation to perform on a string value.
        numValues:
          allOf:
          - $ref: '#/components/schemas/NumValues'
          - description: The validation to perform on a number value.
        validationMessage:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The validation message to display.
      required:
      - type
      type: object
    StorageAccessLevel:
      enum:
      - public
      - protected
      - private
      type: string
    FormBindingElement:
      description: Describes how to bind a component property to form data.
      properties:
        element:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The name of the component to retrieve a value from.
        property:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The property to retrieve a value from.
      required:
      - element
      - property
      type: object
    FormButton:
      description: Describes the configuration for a button UI element that is a part
        of a form.
      properties:
        excluded:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          - description: Specifies whether the button is visible on the form.
        children:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: Describes the button's properties.
        position:
          $ref: '#/components/schemas/FormButton_position'
      type: object
    FormButtonsPosition:
      enum:
      - top
      - bottom
      - top_and_bottom
      type: string
    FormDataSourceType:
      enum:
      - DataStore
      - Custom
      type: string
    FormInputBindingPropertiesValue:
      description: Represents the data binding configuration for a form's input fields
        at runtime.You can use <code>FormInputBindingPropertiesValue</code> to add
        exposed properties to a form to allow different values to be entered when
        a form is reused in different places in an app.
      properties:
        type:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The property type.
        bindingProperties:
          $ref: '#/components/schemas/FormInputBindingPropertiesValue_bindingProperties'
      type: object
    FormInputBindingProperties:
      additionalProperties:
        $ref: '#/components/schemas/FormInputBindingPropertiesValue'
      type: object
    FormInputBindingPropertiesValueProperties:
      description: "Represents the data binding configuration for a specific property\
        \ using data stored in Amazon Web Services. For Amazon Web Services connected\
        \ properties, you can bind a property to data stored in an Amplify DataStore\
        \ model."
      properties:
        model:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: An Amplify DataStore model.
      type: object
    FormInputValuePropertyBindingProperties:
      description: Associates a form property to a binding property. This enables
        exposed properties on the top level form to propagate data to the form's property
        values.
      properties:
        property:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The form property to bind to the data field.
        field:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The data field to bind the property to.
      required:
      - property
      type: object
    FormInputValuePropertyList:
      items:
        $ref: '#/components/schemas/FormInputValueProperty'
      type: array
    FormInputValueProperty:
      description: Describes the configuration for an input field on a form. Use <code>FormInputValueProperty</code>
        to specify the values to render or bind by default.
      properties:
        value:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The value to assign to the input field.
        bindingProperties:
          $ref: '#/components/schemas/FormInputValueProperty_bindingProperties'
        concat:
          allOf:
          - $ref: '#/components/schemas/FormInputValuePropertyList'
          - description: A list of form properties to concatenate to create the value
              to assign to this field property.
      type: object
    FormStyleConfig:
      description: Describes the configuration settings for the form's style properties.
      properties:
        tokenReference:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: A reference to a design token to use to bind the form's style
              properties to an existing theme.
        value:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The value of the style setting.
      type: object
    FormSummary:
      description: Describes the basic information about a form.
      properties:
        appId:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The unique ID for the app associated with the form summary.
        dataType:
          $ref: '#/components/schemas/FormSummary_dataType'
        environmentName:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The name of the backend environment that is part of the Amplify
              app.
        formActionType:
          allOf:
          - $ref: '#/components/schemas/FormActionType'
          - description: The type of operation to perform on the form.
        id:
          allOf:
          - $ref: '#/components/schemas/Uuid'
          - description: The ID of the form.
        name:
          allOf:
          - $ref: '#/components/schemas/FormName'
          - description: The name of the form.
      required:
      - appId
      - dataType
      - environmentName
      - formActionType
      - id
      - name
      type: object
    FormSummaryList:
      items:
        $ref: '#/components/schemas/FormSummary'
      type: array
    GetCodegenJobRequest:
      properties: {}
      title: GetCodegenJobRequest
      type: object
    GetComponentRequest:
      properties: {}
      title: GetComponentRequest
      type: object
    GetFormRequest:
      properties: {}
      title: GetFormRequest
      type: object
    GetMetadataRequest:
      properties: {}
      title: GetMetadataRequest
      type: object
    GetThemeRequest:
      properties: {}
      title: GetThemeRequest
      type: object
    JSModule:
      enum:
      - es2020
      - esnext
      type: string
    JSScript:
      enum:
      - jsx
      - tsx
      - js
      type: string
    JSTarget:
      enum:
      - es2015
      - es2020
      type: string
    ListCodegenJobsLimit:
      maximum: 100
      minimum: 1
      type: integer
    ListCodegenJobsRequest:
      properties: {}
      title: ListCodegenJobsRequest
      type: object
    ListComponentsLimit:
      maximum: 100
      minimum: 1
      type: integer
    ListComponentsRequest:
      properties: {}
      title: ListComponentsRequest
      type: object
    ListFormsLimit:
      maximum: 100
      minimum: 1
      type: integer
    ListFormsRequest:
      properties: {}
      title: ListFormsRequest
      type: object
    ListThemesLimit:
      maximum: 100
      minimum: 1
      type: integer
    ListThemesRequest:
      properties: {}
      title: ListThemesRequest
      type: object
    ThemeSummaryList:
      items:
        $ref: '#/components/schemas/ThemeSummary'
      type: array
    OperandType:
      pattern: boolean|string|number
      type: string
    PutMetadataFlagBody:
      description: Stores the metadata information about a feature on a form.
      properties:
        newValue:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The new information to store.
      required:
      - newValue
      type: object
    PutMetadataFlagRequest:
      example:
        body:
          newValue: ""
      properties:
        body:
          $ref: '#/components/schemas/PutMetadataFlagRequest_body'
      required:
      - body
      title: PutMetadataFlagRequest
      type: object
    RefreshTokenRequestBody:
      description: Describes a refresh token.
      properties:
        token:
          allOf:
          - $ref: '#/components/schemas/SensitiveString'
          - description: The token to use to refresh a previously issued access token
              that might have expired.
        clientId:
          allOf:
          - $ref: '#/components/schemas/SensitiveString'
          - description: The ID of the client to request the token from.
      required:
      - token
      type: object
    RefreshTokenRequest:
      example:
        refreshTokenBody:
          clientId: ""
          token: ""
      properties:
        refreshTokenBody:
          $ref: '#/components/schemas/RefreshTokenRequest_refreshTokenBody'
      required:
      - refreshTokenBody
      title: RefreshTokenRequest
      type: object
    SectionalElement:
      description: "Stores the configuration information for a visual helper element\
        \ for a form. A sectional element can be a header, a text block, or a divider.\
        \ These elements are static and not associated with any data."
      properties:
        type:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: "The type of sectional element. Valid values are <code>Heading</code>,\
              \ <code>Text</code>, and <code>Divider</code>."
        position:
          $ref: '#/components/schemas/SectionalElement_position'
        text:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The text for a <code>Text</code> sectional element.
        level:
          allOf:
          - $ref: '#/components/schemas/Integer'
          - description: Specifies the size of the font for a <code>Heading</code>
              sectional element. Valid values are <code>1 | 2 | 3 | 4 | 5 | 6</code>.
        orientation:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: Specifies the orientation for a <code>Divider</code> sectional
              element. Valid values are <code>horizontal</code> or <code>vertical</code>.
        excluded:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          - description: Excludes a sectional element that was generated by default
              for a specified data model.
      required:
      - type
      type: object
    SortDirection:
      enum:
      - ASC
      - DESC
      type: string
    SortProperty:
      description: Describes how to sort the data that you bind to a component.
      properties:
        field:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The field to perform the sort on.
        direction:
          allOf:
          - $ref: '#/components/schemas/SortDirection'
          - description: "The direction of the sort, either ascending or descending."
      required:
      - direction
      - field
      type: object
    StartCodegenJobData:
      description: The code generation job resource configuration.
      properties:
        renderConfig:
          $ref: '#/components/schemas/StartCodegenJob_request_codegenJobToCreate_renderConfig'
        genericDataSchema:
          $ref: '#/components/schemas/StartCodegenJob_request_codegenJobToCreate_genericDataSchema'
        autoGenerateForms:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          - description: Specifies whether to autogenerate forms in the code generation
              job.
        features:
          $ref: '#/components/schemas/StartCodegenJob_request_codegenJobToCreate_features'
        tags:
          allOf:
          - $ref: '#/components/schemas/Tags'
          - description: One or more key-value pairs to use when tagging the code
              generation job data.
      required:
      - renderConfig
      type: object
    StartCodegenJobRequest:
      example:
        codegenJobToCreate:
          features:
            isRelationshipSupported: ""
            isNonModelSupported: ""
          autoGenerateForms: ""
          renderConfig:
            react:
              apiConfiguration:
                noApiConfig: ""
                graphQLConfig:
                  typesFilePath: ""
                  subscriptionsFilePath: ""
                  fragmentsFilePath: ""
                  queriesFilePath: ""
                  mutationsFilePath: ""
                dataStoreConfig: ""
              renderTypeDeclarations: ""
              module: ""
              inlineSourceMap: ""
              script: ""
              target: ""
          genericDataSchema:
            nonModels: ""
            models: ""
            enums: ""
            dataSourceType: ""
          tags: ""
      properties:
        codegenJobToCreate:
          $ref: '#/components/schemas/StartCodegenJobRequest_codegenJobToCreate'
      required:
      - codegenJobToCreate
      title: StartCodegenJobRequest
      type: object
    TagKey:
      maxLength: 128
      minLength: 1
      pattern: "(?!aws:)[a-zA-Z+-=._:/]+"
      type: string
    TagValue:
      maxLength: 256
      minLength: 1
      type: string
    ThemeSummary:
      description: Describes the basic information about a theme.
      properties:
        appId:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The unique ID for the app associated with the theme summary.
        environmentName:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The name of the backend environment that is part of the Amplify
              app.
        id:
          allOf:
          - $ref: '#/components/schemas/Uuid'
          - description: The ID of the theme.
        name:
          allOf:
          - $ref: '#/components/schemas/ThemeName'
          - description: The name of the theme.
      required:
      - appId
      - environmentName
      - id
      - name
      type: object
    ThemeValue:
      description: Describes the configuration of a theme's properties.
      properties:
        value:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The value of a theme property.
        children:
          allOf:
          - $ref: '#/components/schemas/ThemeValuesList'
          - description: A list of key-value pairs that define the theme's properties.
      type: object
    ThemeValues:
      description: A key-value pair that defines a property of a theme.
      properties:
        key:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The name of the property.
        value:
          $ref: '#/components/schemas/ThemeValues_value'
      type: object
    UpdateComponentData:
      description: "Updates and saves all of the information about a component, based\
        \ on component ID."
      properties:
        id:
          allOf:
          - $ref: '#/components/schemas/Uuid'
          - description: The unique ID of the component to update.
        name:
          allOf:
          - $ref: '#/components/schemas/ComponentName'
          - description: The name of the component to update.
        sourceId:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: "The unique ID of the component in its original source system,\
              \ such as Figma."
        componentType:
          allOf:
          - $ref: '#/components/schemas/ComponentType'
          - description: The type of the component. This can be an Amplify custom
              UI component or another custom component.
        properties:
          description: Describes the component's properties.
        children:
          allOf:
          - $ref: '#/components/schemas/ComponentChildList'
          - description: The components that are instances of the main component.
        variants:
          allOf:
          - $ref: '#/components/schemas/ComponentVariants'
          - description: A list of the unique variants of the main component being
              updated.
        overrides:
          allOf:
          - $ref: '#/components/schemas/ComponentOverrides'
          - description: Describes the properties that can be overriden to customize
              the component.
        bindingProperties:
          allOf:
          - $ref: '#/components/schemas/ComponentBindingProperties'
          - description: The data binding information for the component's properties.
        collectionProperties:
          allOf:
          - $ref: '#/components/schemas/ComponentCollectionProperties'
          - description: The configuration for binding a component's properties to
              a data model. Use this for a collection component.
        events:
          allOf:
          - $ref: '#/components/schemas/ComponentEvents'
          - description: The event configuration for the component. Use for the workflow
              feature in Amplify Studio that allows you to bind events and actions
              to components.
        schemaVersion:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The schema version of the component when it was imported.
      type: object
    UpdateComponentRequest:
      example:
        updatedComponent:
          sourceId: ""
          componentType: ""
          bindingProperties: ""
          schemaVersion: ""
          children: ""
          name: ""
          collectionProperties: ""
          id: ""
          variants: ""
          overrides: ""
          properties: ""
          events: ""
      properties:
        updatedComponent:
          $ref: '#/components/schemas/UpdateComponentRequest_updatedComponent'
      required:
      - updatedComponent
      title: UpdateComponentRequest
      type: object
    UpdateFormData:
      description: "Updates and saves all of the information about a form, based on\
        \ form ID."
      properties:
        name:
          allOf:
          - $ref: '#/components/schemas/FormName'
          - description: The name of the form.
        dataType:
          $ref: '#/components/schemas/CreateForm_request_formToCreate_dataType'
        formActionType:
          allOf:
          - $ref: '#/components/schemas/FormActionType'
          - description: Specifies whether to perform a create or update action on
              the form.
        fields:
          allOf:
          - $ref: '#/components/schemas/FieldsMap'
          - description: The configuration information for the form's fields.
        style:
          $ref: '#/components/schemas/CreateForm_request_formToCreate_style'
        sectionalElements:
          allOf:
          - $ref: '#/components/schemas/SectionalElementMap'
          - description: The configuration information for the visual helper elements
              for the form. These elements are not associated with any data.
        schemaVersion:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The schema version of the form.
        cta:
          $ref: '#/components/schemas/CreateForm_request_formToCreate_cta'
        labelDecorator:
          allOf:
          - $ref: '#/components/schemas/LabelDecorator'
          - description: Specifies an icon or decoration to display on the form.
      type: object
    UpdateFormRequest:
      example:
        updatedForm:
          cta:
            cancel:
              excluded: ""
              children: ""
              position:
                below: ""
                fixed: ""
                rightOf: ""
            submit:
              excluded: ""
              children: ""
              position:
                below: ""
                fixed: ""
                rightOf: ""
            clear:
              excluded: ""
              children: ""
              position:
                below: ""
                fixed: ""
                rightOf: ""
            position: ""
          schemaVersion: ""
          dataType:
            dataTypeName: ""
            dataSourceType: ""
          name: ""
          formActionType: ""
          style:
            horizontalGap:
              tokenReference: ""
              value: ""
            outerPadding:
              tokenReference: ""
              value: ""
            verticalGap:
              tokenReference: ""
              value: ""
          fields: ""
          sectionalElements: ""
          labelDecorator: ""
      properties:
        updatedForm:
          $ref: '#/components/schemas/UpdateFormRequest_updatedForm'
      required:
      - updatedForm
      title: UpdateFormRequest
      type: object
    UpdateThemeData:
      description: Saves the data binding information for a theme.
      properties:
        id:
          allOf:
          - $ref: '#/components/schemas/Uuid'
          - description: The unique ID of the theme to update.
        name:
          allOf:
          - $ref: '#/components/schemas/ThemeName'
          - description: The name of the theme to update.
        values:
          allOf:
          - $ref: '#/components/schemas/ThemeValuesList'
          - description: A list of key-value pairs that define the theme's properties.
        overrides:
          allOf:
          - $ref: '#/components/schemas/ThemeValuesList'
          - description: Describes the properties that can be overriden to customize
              the theme.
      required:
      - values
      type: object
    UpdateThemeRequest:
      example:
        updatedTheme:
          values: ""
          name: ""
          id: ""
          overrides: ""
      properties:
        updatedTheme:
          $ref: '#/components/schemas/UpdateThemeRequest_updatedTheme'
      required:
      - updatedTheme
      title: UpdateThemeRequest
      type: object
    ValueMapping:
      description: Associates a complex object with a display value. Use <code>ValueMapping</code>
        to store how to represent complex objects when they are displayed.
      properties:
        displayValue:
          $ref: '#/components/schemas/ValueMapping_displayValue'
        value:
          $ref: '#/components/schemas/ValueMapping_value'
      required:
      - value
      type: object
    ValueMappingList:
      items:
        $ref: '#/components/schemas/ValueMapping'
      type: array
    CreateComponent_request_componentToCreate:
      description: Represents all of the information that is required to create a
        component.
      properties:
        name:
          allOf:
          - $ref: '#/components/schemas/ComponentName'
          - description: The name of the component
        sourceId:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: "The unique ID of the component in its original source system,\
              \ such as Figma."
        componentType:
          allOf:
          - $ref: '#/components/schemas/ComponentType'
          - description: The component type. This can be an Amplify custom UI component
              or another custom component.
        properties:
          description: Describes the component's properties.
        children:
          allOf:
          - $ref: '#/components/schemas/ComponentChildList'
          - description: A list of child components that are instances of the main
              component.
        variants:
          allOf:
          - $ref: '#/components/schemas/ComponentVariants'
          - description: A list of the unique variants of this component.
        overrides:
          allOf:
          - $ref: '#/components/schemas/ComponentOverrides'
          - description: Describes the component properties that can be overriden
              to customize an instance of the component.
        bindingProperties:
          allOf:
          - $ref: '#/components/schemas/ComponentBindingProperties'
          - description: The data binding information for the component's properties.
        collectionProperties:
          allOf:
          - $ref: '#/components/schemas/ComponentCollectionProperties'
          - description: The data binding configuration for customizing a component's
              properties. Use this for a collection component.
        tags:
          allOf:
          - $ref: '#/components/schemas/Tags'
          - description: One or more key-value pairs to use when tagging the component
              data.
        events:
          allOf:
          - $ref: '#/components/schemas/ComponentEvents'
          - description: The event configuration for the component. Use for the workflow
              feature in Amplify Studio that allows you to bind events and actions
              to components.
        schemaVersion:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The schema version of the component when it was imported.
      type: object
    CreateComponent_request:
      properties:
        componentToCreate:
          $ref: '#/components/schemas/CreateComponent_request_componentToCreate'
      required:
      - componentToCreate
      type: object
    CreateForm_request_formToCreate_dataType:
      allOf:
      - $ref: '#/components/schemas/FormDataTypeConfig'
      - description: The type of data source to use to create the form.
      example:
        dataTypeName: ""
        dataSourceType: ""
    CreateForm_request_formToCreate_style:
      allOf:
      - $ref: '#/components/schemas/FormStyle'
      - description: The configuration for the form's style.
      example:
        horizontalGap:
          tokenReference: ""
          value: ""
        outerPadding:
          tokenReference: ""
          value: ""
        verticalGap:
          tokenReference: ""
          value: ""
    CreateForm_request_formToCreate_cta:
      allOf:
      - $ref: '#/components/schemas/FormCTA'
      - description: The <code>FormCTA</code> object that stores the call to action
          configuration for the form.
      example:
        cancel:
          excluded: ""
          children: ""
          position:
            below: ""
            fixed: ""
            rightOf: ""
        submit:
          excluded: ""
          children: ""
          position:
            below: ""
            fixed: ""
            rightOf: ""
        clear:
          excluded: ""
          children: ""
          position:
            below: ""
            fixed: ""
            rightOf: ""
        position: ""
    CreateForm_request_formToCreate:
      description: Represents all of the information that is required to create a
        form.
      properties:
        name:
          allOf:
          - $ref: '#/components/schemas/FormName'
          - description: The name of the form.
        dataType:
          $ref: '#/components/schemas/CreateForm_request_formToCreate_dataType'
        formActionType:
          allOf:
          - $ref: '#/components/schemas/FormActionType'
          - description: Specifies whether to perform a create or update action on
              the form.
        fields:
          allOf:
          - $ref: '#/components/schemas/FieldsMap'
          - description: The configuration information for the form's fields.
        style:
          $ref: '#/components/schemas/CreateForm_request_formToCreate_style'
        sectionalElements:
          allOf:
          - $ref: '#/components/schemas/SectionalElementMap'
          - description: The configuration information for the visual helper elements
              for the form. These elements are not associated with any data.
        schemaVersion:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The schema version of the form.
        cta:
          $ref: '#/components/schemas/CreateForm_request_formToCreate_cta'
        tags:
          allOf:
          - $ref: '#/components/schemas/Tags'
          - description: One or more key-value pairs to use when tagging the form
              data.
        labelDecorator:
          allOf:
          - $ref: '#/components/schemas/LabelDecorator'
          - description: Specifies an icon or decoration to display on the form.
      type: object
    CreateForm_request:
      properties:
        formToCreate:
          $ref: '#/components/schemas/CreateForm_request_formToCreate'
      required:
      - formToCreate
      type: object
    CreateTheme_request_themeToCreate:
      description: Represents all of the information that is required to create a
        theme.
      properties:
        name:
          allOf:
          - $ref: '#/components/schemas/ThemeName'
          - description: The name of the theme.
        values:
          allOf:
          - $ref: '#/components/schemas/ThemeValuesList'
          - description: A list of key-value pairs that deﬁnes the properties of the
              theme.
        overrides:
          allOf:
          - $ref: '#/components/schemas/ThemeValuesList'
          - description: Describes the properties that can be overriden to customize
              an instance of the theme.
        tags:
          allOf:
          - $ref: '#/components/schemas/Tags'
          - description: One or more key-value pairs to use when tagging the theme
              data.
      type: object
    CreateTheme_request:
      properties:
        themeToCreate:
          $ref: '#/components/schemas/CreateTheme_request_themeToCreate'
      required:
      - themeToCreate
      type: object
    UpdateComponent_request_updatedComponent:
      description: "Updates and saves all of the information about a component, based\
        \ on component ID."
      properties:
        id:
          allOf:
          - $ref: '#/components/schemas/Uuid'
          - description: The unique ID of the component to update.
        name:
          allOf:
          - $ref: '#/components/schemas/ComponentName'
          - description: The name of the component to update.
        sourceId:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: "The unique ID of the component in its original source system,\
              \ such as Figma."
        componentType:
          allOf:
          - $ref: '#/components/schemas/ComponentType'
          - description: The type of the component. This can be an Amplify custom
              UI component or another custom component.
        properties:
          description: Describes the component's properties.
        children:
          allOf:
          - $ref: '#/components/schemas/ComponentChildList'
          - description: The components that are instances of the main component.
        variants:
          allOf:
          - $ref: '#/components/schemas/ComponentVariants'
          - description: A list of the unique variants of the main component being
              updated.
        overrides:
          allOf:
          - $ref: '#/components/schemas/ComponentOverrides'
          - description: Describes the properties that can be overriden to customize
              the component.
        bindingProperties:
          allOf:
          - $ref: '#/components/schemas/ComponentBindingProperties'
          - description: The data binding information for the component's properties.
        collectionProperties:
          allOf:
          - $ref: '#/components/schemas/ComponentCollectionProperties'
          - description: The configuration for binding a component's properties to
              a data model. Use this for a collection component.
        events:
          allOf:
          - $ref: '#/components/schemas/ComponentEvents'
          - description: The event configuration for the component. Use for the workflow
              feature in Amplify Studio that allows you to bind events and actions
              to components.
        schemaVersion:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The schema version of the component when it was imported.
      type: object
    UpdateComponent_request:
      properties:
        updatedComponent:
          $ref: '#/components/schemas/UpdateComponent_request_updatedComponent'
      required:
      - updatedComponent
      type: object
    UpdateForm_request_updatedForm:
      description: "Updates and saves all of the information about a form, based on\
        \ form ID."
      properties:
        name:
          allOf:
          - $ref: '#/components/schemas/FormName'
          - description: The name of the form.
        dataType:
          $ref: '#/components/schemas/CreateForm_request_formToCreate_dataType'
        formActionType:
          allOf:
          - $ref: '#/components/schemas/FormActionType'
          - description: Specifies whether to perform a create or update action on
              the form.
        fields:
          allOf:
          - $ref: '#/components/schemas/FieldsMap'
          - description: The configuration information for the form's fields.
        style:
          $ref: '#/components/schemas/CreateForm_request_formToCreate_style'
        sectionalElements:
          allOf:
          - $ref: '#/components/schemas/SectionalElementMap'
          - description: The configuration information for the visual helper elements
              for the form. These elements are not associated with any data.
        schemaVersion:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The schema version of the form.
        cta:
          $ref: '#/components/schemas/CreateForm_request_formToCreate_cta'
        labelDecorator:
          allOf:
          - $ref: '#/components/schemas/LabelDecorator'
          - description: Specifies an icon or decoration to display on the form.
      type: object
    UpdateForm_request:
      properties:
        updatedForm:
          $ref: '#/components/schemas/UpdateForm_request_updatedForm'
      required:
      - updatedForm
      type: object
    UpdateTheme_request_updatedTheme:
      description: Saves the data binding information for a theme.
      properties:
        id:
          allOf:
          - $ref: '#/components/schemas/Uuid'
          - description: The unique ID of the theme to update.
        name:
          allOf:
          - $ref: '#/components/schemas/ThemeName'
          - description: The name of the theme to update.
        values:
          allOf:
          - $ref: '#/components/schemas/ThemeValuesList'
          - description: A list of key-value pairs that define the theme's properties.
        overrides:
          allOf:
          - $ref: '#/components/schemas/ThemeValuesList'
          - description: Describes the properties that can be overriden to customize
              the theme.
      type: object
    UpdateTheme_request:
      properties:
        updatedTheme:
          $ref: '#/components/schemas/UpdateTheme_request_updatedTheme'
      required:
      - updatedTheme
      type: object
    ExchangeCodeForToken_request_request:
      description: Describes the configuration of a request to exchange an access
        code for a token.
      properties:
        code:
          allOf:
          - $ref: '#/components/schemas/SensitiveString'
          - description: The access code to send in the request.
        redirectUri:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The location of the application that will receive the access
              code.
        clientId:
          allOf:
          - $ref: '#/components/schemas/SensitiveString'
          - description: The ID of the client to request the token from.
      type: object
    ExchangeCodeForToken_request:
      properties:
        request:
          $ref: '#/components/schemas/ExchangeCodeForToken_request_request'
      required:
      - request
      type: object
    StartCodegenJob_request_codegenJobToCreate_renderConfig:
      allOf:
      - $ref: '#/components/schemas/CodegenJobRenderConfig'
      - description: The code generation configuration for the codegen job.
      example:
        react:
          apiConfiguration:
            noApiConfig: ""
            graphQLConfig:
              typesFilePath: ""
              subscriptionsFilePath: ""
              fragmentsFilePath: ""
              queriesFilePath: ""
              mutationsFilePath: ""
            dataStoreConfig: ""
          renderTypeDeclarations: ""
          module: ""
          inlineSourceMap: ""
          script: ""
          target: ""
    StartCodegenJob_request_codegenJobToCreate_genericDataSchema:
      allOf:
      - $ref: '#/components/schemas/CodegenJobGenericDataSchema'
      - description: The data schema to use for a code generation job.
      example:
        nonModels: ""
        models: ""
        enums: ""
        dataSourceType: ""
    StartCodegenJob_request_codegenJobToCreate_features:
      allOf:
      - $ref: '#/components/schemas/CodegenFeatureFlags'
      - description: The feature flags for a code generation job.
      example:
        isRelationshipSupported: ""
        isNonModelSupported: ""
    StartCodegenJob_request_codegenJobToCreate:
      description: The code generation job resource configuration.
      properties:
        renderConfig:
          $ref: '#/components/schemas/StartCodegenJob_request_codegenJobToCreate_renderConfig'
        genericDataSchema:
          $ref: '#/components/schemas/StartCodegenJob_request_codegenJobToCreate_genericDataSchema'
        autoGenerateForms:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          - description: Specifies whether to autogenerate forms in the code generation
              job.
        features:
          $ref: '#/components/schemas/StartCodegenJob_request_codegenJobToCreate_features'
        tags:
          allOf:
          - $ref: '#/components/schemas/Tags'
          - description: One or more key-value pairs to use when tagging the code
              generation job data.
      type: object
    StartCodegenJob_request:
      properties:
        codegenJobToCreate:
          $ref: '#/components/schemas/StartCodegenJob_request_codegenJobToCreate'
      required:
      - codegenJobToCreate
      type: object
    PutMetadataFlag_request_body:
      description: Stores the metadata information about a feature on a form.
      properties:
        newValue:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The new information to store.
      type: object
    PutMetadataFlag_request:
      properties:
        body:
          $ref: '#/components/schemas/PutMetadataFlag_request_body'
      required:
      - body
      type: object
    RefreshToken_request_refreshTokenBody:
      description: Describes a refresh token.
      properties:
        token:
          allOf:
          - $ref: '#/components/schemas/SensitiveString'
          - description: The token to use to refresh a previously issued access token
              that might have expired.
        clientId:
          allOf:
          - $ref: '#/components/schemas/SensitiveString'
          - description: The ID of the client to request the token from.
      type: object
    RefreshToken_request:
      properties:
        refreshTokenBody:
          $ref: '#/components/schemas/RefreshToken_request_refreshTokenBody'
      required:
      - refreshTokenBody
      type: object
    CreateComponentResponse_entity:
      allOf:
      - $ref: '#/components/schemas/Component'
      - description: Describes the configuration of the new component.
      example:
        sourceId: ""
        componentType: ""
        bindingProperties: ""
        schemaVersion: ""
        modifiedAt: ""
        collectionProperties: ""
        variants: ""
        overrides: ""
        tags: ""
        createdAt: ""
        children: ""
        environmentName: ""
        appId: ""
        name: ""
        id: ""
        properties: ""
        events: ""
    CreateFormResponse_entity:
      allOf:
      - $ref: '#/components/schemas/Form'
      - description: Describes the configuration of the new form.
      example:
        schemaVersion: ""
        dataType:
          dataTypeName: ""
          dataSourceType: ""
        formActionType: ""
        sectionalElements: ""
        tags: ""
        cta:
          cancel:
            excluded: ""
            children: ""
            position:
              below: ""
              fixed: ""
              rightOf: ""
          submit:
            excluded: ""
            children: ""
            position:
              below: ""
              fixed: ""
              rightOf: ""
          clear:
            excluded: ""
            children: ""
            position:
              below: ""
              fixed: ""
              rightOf: ""
          position: ""
        environmentName: ""
        appId: ""
        name: ""
        style:
          horizontalGap:
            tokenReference: ""
            value: ""
          outerPadding:
            tokenReference: ""
            value: ""
          verticalGap:
            tokenReference: ""
            value: ""
        id: ""
        fields: ""
        labelDecorator: ""
    FormStyle_horizontalGap:
      allOf:
      - $ref: '#/components/schemas/FormStyleConfig'
      - description: The spacing for the horizontal gap.
      example:
        tokenReference: ""
        value: ""
    FormStyle_verticalGap:
      allOf:
      - $ref: '#/components/schemas/FormStyleConfig'
      - description: The spacing for the vertical gap.
      example:
        tokenReference: ""
        value: ""
    FormStyle_outerPadding:
      allOf:
      - $ref: '#/components/schemas/FormStyleConfig'
      - description: The size of the outer padding for the form.
      example:
        tokenReference: ""
        value: ""
    FormCTA_clear:
      allOf:
      - $ref: '#/components/schemas/FormButton'
      - description: Displays a clear button.
      example:
        excluded: ""
        children: ""
        position:
          below: ""
          fixed: ""
          rightOf: ""
    FormCTA_cancel:
      allOf:
      - $ref: '#/components/schemas/FormButton'
      - description: Displays a cancel button.
      example:
        excluded: ""
        children: ""
        position:
          below: ""
          fixed: ""
          rightOf: ""
    FormCTA_submit:
      allOf:
      - $ref: '#/components/schemas/FormButton'
      - description: Displays a submit button.
      example:
        excluded: ""
        children: ""
        position:
          below: ""
          fixed: ""
          rightOf: ""
    CreateThemeResponse_entity:
      allOf:
      - $ref: '#/components/schemas/Theme'
      - description: Describes the configuration of the new theme.
      example:
        createdAt: ""
        environmentName: ""
        modifiedAt: ""
        appId: ""
        values: ""
        name: ""
        id: ""
        overrides: ""
        tags: ""
    GetCodegenJobResponse_job:
      allOf:
      - $ref: '#/components/schemas/CodegenJob'
      - description: The configuration settings for the code generation job.
      example:
        autoGenerateForms: ""
        modifiedAt: ""
        genericDataSchema:
          nonModels: ""
          models: ""
          enums: ""
          dataSourceType: ""
        statusMessage: ""
        tags: ""
        features:
          isRelationshipSupported: ""
          isNonModelSupported: ""
        createdAt: ""
        environmentName: ""
        appId: ""
        renderConfig:
          react:
            apiConfiguration:
              noApiConfig: ""
              graphQLConfig:
                typesFilePath: ""
                subscriptionsFilePath: ""
                fragmentsFilePath: ""
                queriesFilePath: ""
                mutationsFilePath: ""
              dataStoreConfig: ""
            renderTypeDeclarations: ""
            module: ""
            inlineSourceMap: ""
            script: ""
            target: ""
        id: ""
        asset:
          downloadUrl: ""
        status: ""
    GetComponentResponse_component:
      allOf:
      - $ref: '#/components/schemas/Component'
      - description: Represents the configuration settings for the component.
      example:
        sourceId: ""
        componentType: ""
        bindingProperties: ""
        schemaVersion: ""
        modifiedAt: ""
        collectionProperties: ""
        variants: ""
        overrides: ""
        tags: ""
        createdAt: ""
        children: ""
        environmentName: ""
        appId: ""
        name: ""
        id: ""
        properties: ""
        events: ""
    GetFormResponse_form:
      allOf:
      - $ref: '#/components/schemas/Form'
      - description: Represents the configuration settings for the form.
      example:
        schemaVersion: ""
        dataType:
          dataTypeName: ""
          dataSourceType: ""
        formActionType: ""
        sectionalElements: ""
        tags: ""
        cta:
          cancel:
            excluded: ""
            children: ""
            position:
              below: ""
              fixed: ""
              rightOf: ""
          submit:
            excluded: ""
            children: ""
            position:
              below: ""
              fixed: ""
              rightOf: ""
          clear:
            excluded: ""
            children: ""
            position:
              below: ""
              fixed: ""
              rightOf: ""
          position: ""
        environmentName: ""
        appId: ""
        name: ""
        style:
          horizontalGap:
            tokenReference: ""
            value: ""
          outerPadding:
            tokenReference: ""
            value: ""
          verticalGap:
            tokenReference: ""
            value: ""
        id: ""
        fields: ""
        labelDecorator: ""
    GetThemeResponse_theme:
      allOf:
      - $ref: '#/components/schemas/Theme'
      - description: Represents the configuration settings for the theme.
      example:
        createdAt: ""
        environmentName: ""
        modifiedAt: ""
        appId: ""
        values: ""
        name: ""
        id: ""
        overrides: ""
        tags: ""
    StartCodegenJobResponse_entity:
      allOf:
      - $ref: '#/components/schemas/CodegenJob'
      - description: The code generation job for a UI component that is associated
          with an Amplify app.
      example:
        autoGenerateForms: ""
        modifiedAt: ""
        genericDataSchema:
          nonModels: ""
          models: ""
          enums: ""
          dataSourceType: ""
        statusMessage: ""
        tags: ""
        features:
          isRelationshipSupported: ""
          isNonModelSupported: ""
        createdAt: ""
        environmentName: ""
        appId: ""
        renderConfig:
          react:
            apiConfiguration:
              noApiConfig: ""
              graphQLConfig:
                typesFilePath: ""
                subscriptionsFilePath: ""
                fragmentsFilePath: ""
                queriesFilePath: ""
                mutationsFilePath: ""
              dataStoreConfig: ""
            renderTypeDeclarations: ""
            module: ""
            inlineSourceMap: ""
            script: ""
            target: ""
        id: ""
        asset:
          downloadUrl: ""
        status: ""
    CodegenJobRenderConfig_react:
      allOf:
      - $ref: '#/components/schemas/ReactStartCodegenJobData'
      - description: The name of the <code>ReactStartCodegenJobData</code> object.
      example:
        apiConfiguration:
          noApiConfig: ""
          graphQLConfig:
            typesFilePath: ""
            subscriptionsFilePath: ""
            fragmentsFilePath: ""
            queriesFilePath: ""
            mutationsFilePath: ""
          dataStoreConfig: ""
        renderTypeDeclarations: ""
        module: ""
        inlineSourceMap: ""
        script: ""
        target: ""
    UpdateComponentResponse_entity:
      allOf:
      - $ref: '#/components/schemas/Component'
      - description: Describes the configuration of the updated component.
      example:
        sourceId: ""
        componentType: ""
        bindingProperties: ""
        schemaVersion: ""
        modifiedAt: ""
        collectionProperties: ""
        variants: ""
        overrides: ""
        tags: ""
        createdAt: ""
        children: ""
        environmentName: ""
        appId: ""
        name: ""
        id: ""
        properties: ""
        events: ""
    UpdateFormResponse_entity:
      allOf:
      - $ref: '#/components/schemas/Form'
      - description: Describes the configuration of the updated form.
      example:
        schemaVersion: ""
        dataType:
          dataTypeName: ""
          dataSourceType: ""
        formActionType: ""
        sectionalElements: ""
        tags: ""
        cta:
          cancel:
            excluded: ""
            children: ""
            position:
              below: ""
              fixed: ""
              rightOf: ""
          submit:
            excluded: ""
            children: ""
            position:
              below: ""
              fixed: ""
              rightOf: ""
          clear:
            excluded: ""
            children: ""
            position:
              below: ""
              fixed: ""
              rightOf: ""
          position: ""
        environmentName: ""
        appId: ""
        name: ""
        style:
          horizontalGap:
            tokenReference: ""
            value: ""
          outerPadding:
            tokenReference: ""
            value: ""
          verticalGap:
            tokenReference: ""
            value: ""
        id: ""
        fields: ""
        labelDecorator: ""
    UpdateThemeResponse_entity:
      allOf:
      - $ref: '#/components/schemas/Theme'
      - description: Describes the configuration of the updated theme.
      example:
        createdAt: ""
        environmentName: ""
        modifiedAt: ""
        appId: ""
        values: ""
        name: ""
        id: ""
        overrides: ""
        tags: ""
    ComponentProperty_bindingProperties:
      allOf:
      - $ref: '#/components/schemas/ComponentPropertyBindingProperties'
      - description: The information to bind the component property to data at runtime.
    ComponentProperty_collectionBindingProperties:
      allOf:
      - $ref: '#/components/schemas/ComponentPropertyBindingProperties'
      - description: The information to bind the component property to data at runtime.
          Use this for collection components.
    ComponentProperty_condition:
      allOf:
      - $ref: '#/components/schemas/ComponentConditionProperty'
      - description: The conditional expression to use to assign a value to the component
          property.
    MutationActionSetStateParameter_set:
      allOf:
      - $ref: '#/components/schemas/ComponentProperty'
      - description: The state configuration to assign to the property.
    ActionParameters_type:
      allOf:
      - $ref: '#/components/schemas/ComponentProperty'
      - description: The type of navigation action. Valid values are <code>url</code>
          and <code>anchor</code>. This value is required for a navigation action.
    ActionParameters_url:
      allOf:
      - $ref: '#/components/schemas/ComponentProperty'
      - description: The URL to the location to open. Specify this value for a navigation
          action.
    ActionParameters_anchor:
      allOf:
      - $ref: '#/components/schemas/ComponentProperty'
      - description: The HTML anchor link to the location to open. Specify this value
          for a navigation action.
    ActionParameters_target:
      allOf:
      - $ref: '#/components/schemas/ComponentProperty'
      - description: The element within the same component to modify when the action
          occurs.
    ActionParameters_global:
      allOf:
      - $ref: '#/components/schemas/ComponentProperty'
      - description: Specifies whether the user should be signed out globally. Specify
          this value for an auth sign out action.
    ActionParameters_id:
      allOf:
      - $ref: '#/components/schemas/ComponentProperty'
      - description: The unique ID of the component that the <code>ActionParameters</code>
          apply to.
    ActionParameters_state:
      allOf:
      - $ref: '#/components/schemas/MutationActionSetStateParameter'
      - description: A key-value pair that specifies the state property name and its
          initial value.
    ApiConfiguration_graphQLConfig:
      allOf:
      - $ref: '#/components/schemas/GraphQLRenderConfig'
      - description: The configuration for an application using GraphQL APIs.
      example:
        typesFilePath: ""
        subscriptionsFilePath: ""
        fragmentsFilePath: ""
        queriesFilePath: ""
        mutationsFilePath: ""
    CodegenGenericDataField_relationship:
      allOf:
      - $ref: '#/components/schemas/CodegenGenericDataRelationshipType'
      - description: The relationship of the generic data schema.
    CodegenJob_asset:
      allOf:
      - $ref: '#/components/schemas/CodegenJobAsset'
      - description: The <code>CodegenJobAsset</code> to use for the code generation
          job.
      example:
        downloadUrl: ""
    ReactStartCodegenJobData_apiConfiguration:
      allOf:
      - $ref: '#/components/schemas/ApiConfiguration'
      - description: The API configuration for the code generation job.
      example:
        noApiConfig: ""
        graphQLConfig:
          typesFilePath: ""
          subscriptionsFilePath: ""
          fragmentsFilePath: ""
          queriesFilePath: ""
          mutationsFilePath: ""
        dataStoreConfig: ""
    ComponentBindingPropertiesValue_bindingProperties:
      allOf:
      - $ref: '#/components/schemas/ComponentBindingPropertiesValueProperties'
      - description: Describes the properties to customize with data at runtime.
    ComponentDataConfiguration_predicate:
      allOf:
      - $ref: '#/components/schemas/Predicate'
      - description: Represents the conditional logic to use when binding data to
          a component. Use this property to retrieve only a subset of the data in
          a collection.
    ComponentConditionProperty_then:
      allOf:
      - $ref: '#/components/schemas/ComponentProperty'
      - description: The value to assign to the property if the condition is met.
    ComponentConditionProperty_else:
      allOf:
      - $ref: '#/components/schemas/ComponentProperty'
      - description: The value to assign to the property if the condition is not met.
    ComponentEvent_parameters:
      allOf:
      - $ref: '#/components/schemas/ActionParameters'
      - description: Describes information about the action.
    CreateComponentRequest_componentToCreate:
      allOf:
      - $ref: '#/components/schemas/CreateComponentData'
      - description: Represents the configuration of the component to create.
      example:
        sourceId: ""
        componentType: ""
        bindingProperties: ""
        schemaVersion: ""
        children: ""
        name: ""
        collectionProperties: ""
        variants: ""
        overrides: ""
        properties: ""
        events: ""
        tags: ""
    CreateFormRequest_formToCreate:
      allOf:
      - $ref: '#/components/schemas/CreateFormData'
      - description: Represents the configuration of the form to create.
      example:
        cta:
          cancel:
            excluded: ""
            children: ""
            position:
              below: ""
              fixed: ""
              rightOf: ""
          submit:
            excluded: ""
            children: ""
            position:
              below: ""
              fixed: ""
              rightOf: ""
          clear:
            excluded: ""
            children: ""
            position:
              below: ""
              fixed: ""
              rightOf: ""
          position: ""
        schemaVersion: ""
        dataType:
          dataTypeName: ""
          dataSourceType: ""
        name: ""
        formActionType: ""
        style:
          horizontalGap:
            tokenReference: ""
            value: ""
          outerPadding:
            tokenReference: ""
            value: ""
          verticalGap:
            tokenReference: ""
            value: ""
        fields: ""
        sectionalElements: ""
        labelDecorator: ""
        tags: ""
    Form_style:
      allOf:
      - $ref: '#/components/schemas/FormStyle'
      - description: Stores the configuration for the form's style.
      example:
        horizontalGap:
          tokenReference: ""
          value: ""
        outerPadding:
          tokenReference: ""
          value: ""
        verticalGap:
          tokenReference: ""
          value: ""
    Form_cta:
      allOf:
      - $ref: '#/components/schemas/FormCTA'
      - description: Stores the call to action configuration for the form.
      example:
        cancel:
          excluded: ""
          children: ""
          position:
            below: ""
            fixed: ""
            rightOf: ""
        submit:
          excluded: ""
          children: ""
          position:
            below: ""
            fixed: ""
            rightOf: ""
        clear:
          excluded: ""
          children: ""
          position:
            below: ""
            fixed: ""
            rightOf: ""
        position: ""
    CreateThemeRequest_themeToCreate:
      allOf:
      - $ref: '#/components/schemas/CreateThemeData'
      - description: Represents the configuration of the theme to create.
      example:
        values: ""
        name: ""
        overrides: ""
        tags: ""
    ExchangeCodeForTokenRequest_request:
      allOf:
      - $ref: '#/components/schemas/ExchangeCodeForTokenRequestBody'
      - description: Describes the configuration of the request.
      example:
        redirectUri: ""
        code: ""
        clientId: ""
    FieldInputConfig_valueMappings:
      allOf:
      - $ref: '#/components/schemas/ValueMappings'
      - description: The information to use to customize the input fields with data
          at runtime.
    FieldInputConfig_fileUploaderConfig:
      allOf:
      - $ref: '#/components/schemas/FileUploaderFieldConfig'
      - description: The configuration for the file uploader field.
    FieldConfig_position:
      allOf:
      - $ref: '#/components/schemas/FieldPosition'
      - description: Specifies the field position.
    FieldConfig_inputType:
      allOf:
      - $ref: '#/components/schemas/FieldInputConfig'
      - description: Describes the configuration for the default input value to display
          for a field.
    FormButton_position:
      allOf:
      - $ref: '#/components/schemas/FieldPosition'
      - description: The position of the button.
      example:
        below: ""
        fixed: ""
        rightOf: ""
    FormInputBindingPropertiesValue_bindingProperties:
      allOf:
      - $ref: '#/components/schemas/FormInputBindingPropertiesValueProperties'
      - description: Describes the properties to customize with data at runtime.
    FormInputValueProperty_bindingProperties:
      allOf:
      - $ref: '#/components/schemas/FormInputValuePropertyBindingProperties'
      - description: The information to bind fields to data at runtime.
    FormSummary_dataType:
      allOf:
      - $ref: '#/components/schemas/FormDataTypeConfig'
      - description: The form's data source type.
    PutMetadataFlagRequest_body:
      allOf:
      - $ref: '#/components/schemas/PutMetadataFlagBody'
      - description: The metadata information to store.
      example:
        newValue: ""
    RefreshTokenRequest_refreshTokenBody:
      allOf:
      - $ref: '#/components/schemas/RefreshTokenRequestBody'
      - description: Information about the refresh token request.
      example:
        clientId: ""
        token: ""
    SectionalElement_position:
      allOf:
      - $ref: '#/components/schemas/FieldPosition'
      - description: Specifies the position of the text in a field for a <code>Text</code>
          sectional element.
    StartCodegenJobRequest_codegenJobToCreate:
      allOf:
      - $ref: '#/components/schemas/StartCodegenJobData'
      - description: The code generation job resource configuration.
      example:
        features:
          isRelationshipSupported: ""
          isNonModelSupported: ""
        autoGenerateForms: ""
        renderConfig:
          react:
            apiConfiguration:
              noApiConfig: ""
              graphQLConfig:
                typesFilePath: ""
                subscriptionsFilePath: ""
                fragmentsFilePath: ""
                queriesFilePath: ""
                mutationsFilePath: ""
              dataStoreConfig: ""
            renderTypeDeclarations: ""
            module: ""
            inlineSourceMap: ""
            script: ""
            target: ""
        genericDataSchema:
          nonModels: ""
          models: ""
          enums: ""
          dataSourceType: ""
        tags: ""
    ThemeValues_value:
      allOf:
      - $ref: '#/components/schemas/ThemeValue'
      - description: The value of the property.
    UpdateComponentRequest_updatedComponent:
      allOf:
      - $ref: '#/components/schemas/UpdateComponentData'
      - description: The configuration of the updated component.
      example:
        sourceId: ""
        componentType: ""
        bindingProperties: ""
        schemaVersion: ""
        children: ""
        name: ""
        collectionProperties: ""
        id: ""
        variants: ""
        overrides: ""
        properties: ""
        events: ""
    UpdateFormRequest_updatedForm:
      allOf:
      - $ref: '#/components/schemas/UpdateFormData'
      - description: The request accepts the following data in JSON format.
      example:
        cta:
          cancel:
            excluded: ""
            children: ""
            position:
              below: ""
              fixed: ""
              rightOf: ""
          submit:
            excluded: ""
            children: ""
            position:
              below: ""
              fixed: ""
              rightOf: ""
          clear:
            excluded: ""
            children: ""
            position:
              below: ""
              fixed: ""
              rightOf: ""
          position: ""
        schemaVersion: ""
        dataType:
          dataTypeName: ""
          dataSourceType: ""
        name: ""
        formActionType: ""
        style:
          horizontalGap:
            tokenReference: ""
            value: ""
          outerPadding:
            tokenReference: ""
            value: ""
          verticalGap:
            tokenReference: ""
            value: ""
        fields: ""
        sectionalElements: ""
        labelDecorator: ""
    UpdateThemeRequest_updatedTheme:
      allOf:
      - $ref: '#/components/schemas/UpdateThemeData'
      - description: The configuration of the updated theme.
      example:
        values: ""
        name: ""
        id: ""
        overrides: ""
    ValueMapping_displayValue:
      allOf:
      - $ref: '#/components/schemas/FormInputValueProperty'
      - description: The value to display for the complex object.
    ValueMapping_value:
      allOf:
      - $ref: '#/components/schemas/FormInputValueProperty'
      - description: The complex object.
  securitySchemes:
    hmac:
      description: Amazon Signature authorization v4
      in: header
      name: Authorization
      type: apiKey
      x-amazon-apigateway-authtype: awsSigv4

