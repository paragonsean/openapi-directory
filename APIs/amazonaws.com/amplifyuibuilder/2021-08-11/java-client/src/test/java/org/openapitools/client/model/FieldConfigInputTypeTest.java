/*
 * AWS Amplify UI Builder
 * <p>The Amplify UI Builder API provides a programmatic interface for creating and configuring user interface (UI) component libraries and themes for use in your Amplify applications. You can then connect these UI components to an application's backend Amazon Web Services resources.</p> <p>You can also use the Amplify Studio visual designer to create UI components and model data for an app. For more information, see <a href=\"https://docs.amplify.aws/console/adminui/intro\">Introduction</a> in the <i>Amplify Docs</i>.</p> <p>The Amplify Framework is a comprehensive set of SDKs, libraries, tools, and documentation for client app development. For more information, see the <a href=\"https://docs.amplify.aws/\">Amplify Framework</a>. For more information about deploying an Amplify application to Amazon Web Services, see the <a href=\"https://docs.aws.amazon.com/amplify/latest/userguide/welcome.html\">Amplify User Guide</a>.</p>
 *
 * The version of the OpenAPI document: 2021-08-11
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;
import org.openapitools.client.model.FieldInputConfigFileUploaderConfig;
import org.openapitools.client.model.FieldInputConfigValueMappings;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

/**
 * Model tests for FieldConfigInputType
 */
public class FieldConfigInputTypeTest {
    private final FieldConfigInputType model = new FieldConfigInputType();

    /**
     * Model tests for FieldConfigInputType
     */
    @Test
    public void testFieldConfigInputType() {
        // TODO: test FieldConfigInputType
    }

    /**
     * Test the property 'type'
     */
    @Test
    public void typeTest() {
        // TODO: test type
    }

    /**
     * Test the property 'required'
     */
    @Test
    public void requiredTest() {
        // TODO: test required
    }

    /**
     * Test the property 'readOnly'
     */
    @Test
    public void readOnlyTest() {
        // TODO: test readOnly
    }

    /**
     * Test the property 'placeholder'
     */
    @Test
    public void placeholderTest() {
        // TODO: test placeholder
    }

    /**
     * Test the property 'defaultValue'
     */
    @Test
    public void defaultValueTest() {
        // TODO: test defaultValue
    }

    /**
     * Test the property 'descriptiveText'
     */
    @Test
    public void descriptiveTextTest() {
        // TODO: test descriptiveText
    }

    /**
     * Test the property 'defaultChecked'
     */
    @Test
    public void defaultCheckedTest() {
        // TODO: test defaultChecked
    }

    /**
     * Test the property 'defaultCountryCode'
     */
    @Test
    public void defaultCountryCodeTest() {
        // TODO: test defaultCountryCode
    }

    /**
     * Test the property 'valueMappings'
     */
    @Test
    public void valueMappingsTest() {
        // TODO: test valueMappings
    }

    /**
     * Test the property 'name'
     */
    @Test
    public void nameTest() {
        // TODO: test name
    }

    /**
     * Test the property 'minValue'
     */
    @Test
    public void minValueTest() {
        // TODO: test minValue
    }

    /**
     * Test the property 'maxValue'
     */
    @Test
    public void maxValueTest() {
        // TODO: test maxValue
    }

    /**
     * Test the property 'step'
     */
    @Test
    public void stepTest() {
        // TODO: test step
    }

    /**
     * Test the property 'value'
     */
    @Test
    public void valueTest() {
        // TODO: test value
    }

    /**
     * Test the property 'isArray'
     */
    @Test
    public void isArrayTest() {
        // TODO: test isArray
    }

    /**
     * Test the property 'fileUploaderConfig'
     */
    @Test
    public void fileUploaderConfigTest() {
        // TODO: test fileUploaderConfig
    }

}
