/*
 * AWS Amplify UI Builder
 * <p>The Amplify UI Builder API provides a programmatic interface for creating and configuring user interface (UI) component libraries and themes for use in your Amplify applications. You can then connect these UI components to an application's backend Amazon Web Services resources.</p> <p>You can also use the Amplify Studio visual designer to create UI components and model data for an app. For more information, see <a href=\"https://docs.amplify.aws/console/adminui/intro\">Introduction</a> in the <i>Amplify Docs</i>.</p> <p>The Amplify Framework is a comprehensive set of SDKs, libraries, tools, and documentation for client app development. For more information, see the <a href=\"https://docs.amplify.aws/\">Amplify Framework</a>. For more information about deploying an Amplify application to Amazon Web Services, see the <a href=\"https://docs.aws.amazon.com/amplify/latest/userguide/welcome.html\">Amplify User Guide</a>.</p>
 *
 * The version of the OpenAPI document: 2021-08-11
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;
import java.util.List;
import java.util.Map;
import org.openapitools.client.model.ComponentPropertyBindingProperties;
import org.openapitools.client.model.ComponentPropertyCollectionBindingProperties;
import org.openapitools.client.model.ComponentPropertyCondition;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

/**
 * Model tests for ActionParametersGlobal
 */
public class ActionParametersGlobalTest {
    private final ActionParametersGlobal model = new ActionParametersGlobal();

    /**
     * Model tests for ActionParametersGlobal
     */
    @Test
    public void testActionParametersGlobal() {
        // TODO: test ActionParametersGlobal
    }

    /**
     * Test the property 'value'
     */
    @Test
    public void valueTest() {
        // TODO: test value
    }

    /**
     * Test the property 'bindingProperties'
     */
    @Test
    public void bindingPropertiesTest() {
        // TODO: test bindingProperties
    }

    /**
     * Test the property 'collectionBindingProperties'
     */
    @Test
    public void collectionBindingPropertiesTest() {
        // TODO: test collectionBindingProperties
    }

    /**
     * Test the property 'defaultValue'
     */
    @Test
    public void defaultValueTest() {
        // TODO: test defaultValue
    }

    /**
     * Test the property 'model'
     */
    @Test
    public void modelTest() {
        // TODO: test model
    }

    /**
     * Test the property 'bindings'
     */
    @Test
    public void bindingsTest() {
        // TODO: test bindings
    }

    /**
     * Test the property 'event'
     */
    @Test
    public void eventTest() {
        // TODO: test event
    }

    /**
     * Test the property 'userAttribute'
     */
    @Test
    public void userAttributeTest() {
        // TODO: test userAttribute
    }

    /**
     * Test the property 'concat'
     */
    @Test
    public void concatTest() {
        // TODO: test concat
    }

    /**
     * Test the property 'condition'
     */
    @Test
    public void conditionTest() {
        // TODO: test condition
    }

    /**
     * Test the property 'configured'
     */
    @Test
    public void configuredTest() {
        // TODO: test configured
    }

    /**
     * Test the property 'type'
     */
    @Test
    public void typeTest() {
        // TODO: test type
    }

    /**
     * Test the property 'importedValue'
     */
    @Test
    public void importedValueTest() {
        // TODO: test importedValue
    }

    /**
     * Test the property 'componentName'
     */
    @Test
    public void componentNameTest() {
        // TODO: test componentName
    }

    /**
     * Test the property 'property'
     */
    @Test
    public void propertyTest() {
        // TODO: test property
    }

}
