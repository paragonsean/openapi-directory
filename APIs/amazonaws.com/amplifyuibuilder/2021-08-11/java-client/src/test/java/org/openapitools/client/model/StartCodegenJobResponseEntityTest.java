/*
 * AWS Amplify UI Builder
 * <p>The Amplify UI Builder API provides a programmatic interface for creating and configuring user interface (UI) component libraries and themes for use in your Amplify applications. You can then connect these UI components to an application's backend Amazon Web Services resources.</p> <p>You can also use the Amplify Studio visual designer to create UI components and model data for an app. For more information, see <a href=\"https://docs.amplify.aws/console/adminui/intro\">Introduction</a> in the <i>Amplify Docs</i>.</p> <p>The Amplify Framework is a comprehensive set of SDKs, libraries, tools, and documentation for client app development. For more information, see the <a href=\"https://docs.amplify.aws/\">Amplify Framework</a>. For more information about deploying an Amplify application to Amazon Web Services, see the <a href=\"https://docs.aws.amazon.com/amplify/latest/userguide/welcome.html\">Amplify User Guide</a>.</p>
 *
 * The version of the OpenAPI document: 2021-08-11
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.time.OffsetDateTime;
import java.util.Arrays;
import java.util.Map;
import org.openapitools.client.model.CodegenFeatureFlags;
import org.openapitools.client.model.CodegenJobAsset;
import org.openapitools.client.model.CodegenJobGenericDataSchema;
import org.openapitools.client.model.CodegenJobRenderConfig;
import org.openapitools.client.model.CodegenJobStatus;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

/**
 * Model tests for StartCodegenJobResponseEntity
 */
public class StartCodegenJobResponseEntityTest {
    private final StartCodegenJobResponseEntity model = new StartCodegenJobResponseEntity();

    /**
     * Model tests for StartCodegenJobResponseEntity
     */
    @Test
    public void testStartCodegenJobResponseEntity() {
        // TODO: test StartCodegenJobResponseEntity
    }

    /**
     * Test the property 'id'
     */
    @Test
    public void idTest() {
        // TODO: test id
    }

    /**
     * Test the property 'appId'
     */
    @Test
    public void appIdTest() {
        // TODO: test appId
    }

    /**
     * Test the property 'environmentName'
     */
    @Test
    public void environmentNameTest() {
        // TODO: test environmentName
    }

    /**
     * Test the property 'renderConfig'
     */
    @Test
    public void renderConfigTest() {
        // TODO: test renderConfig
    }

    /**
     * Test the property 'genericDataSchema'
     */
    @Test
    public void genericDataSchemaTest() {
        // TODO: test genericDataSchema
    }

    /**
     * Test the property 'autoGenerateForms'
     */
    @Test
    public void autoGenerateFormsTest() {
        // TODO: test autoGenerateForms
    }

    /**
     * Test the property 'features'
     */
    @Test
    public void featuresTest() {
        // TODO: test features
    }

    /**
     * Test the property 'status'
     */
    @Test
    public void statusTest() {
        // TODO: test status
    }

    /**
     * Test the property 'statusMessage'
     */
    @Test
    public void statusMessageTest() {
        // TODO: test statusMessage
    }

    /**
     * Test the property 'asset'
     */
    @Test
    public void assetTest() {
        // TODO: test asset
    }

    /**
     * Test the property 'tags'
     */
    @Test
    public void tagsTest() {
        // TODO: test tags
    }

    /**
     * Test the property 'createdAt'
     */
    @Test
    public void createdAtTest() {
        // TODO: test createdAt
    }

    /**
     * Test the property 'modifiedAt'
     */
    @Test
    public void modifiedAtTest() {
        // TODO: test modifiedAt
    }

}
