/**
 * AWS Amplify UI Builder
 * <p>The Amplify UI Builder API provides a programmatic interface for creating and configuring user interface (UI) component libraries and themes for use in your Amplify applications. You can then connect these UI components to an application's backend Amazon Web Services resources.</p> <p>You can also use the Amplify Studio visual designer to create UI components and model data for an app. For more information, see <a href=\"https://docs.amplify.aws/console/adminui/intro\">Introduction</a> in the <i>Amplify Docs</i>.</p> <p>The Amplify Framework is a comprehensive set of SDKs, libraries, tools, and documentation for client app development. For more information, see the <a href=\"https://docs.amplify.aws/\">Amplify Framework</a>. For more information about deploying an Amplify application to Amazon Web Services, see the <a href=\"https://docs.aws.amazon.com/amplify/latest/userguide/welcome.html\">Amplify User Guide</a>.</p>
 *
 * The version of the OpenAPI document: 2021-08-11
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAICodegenGenericDataModel.h
 *
 * Describes a model in a generic data schema.
 */

#ifndef OAICodegenGenericDataModel_H
#define OAICodegenGenericDataModel_H

#include <QJsonObject>

#include <QList>
#include <QMap>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAICodegenGenericDataModel : public OAIObject {
public:
    OAICodegenGenericDataModel();
    OAICodegenGenericDataModel(QString json);
    ~OAICodegenGenericDataModel() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QMap getFields() const;
    void setFields(const QMap &fields);
    bool is_fields_Set() const;
    bool is_fields_Valid() const;

    bool getIsJoinTable() const;
    void setIsJoinTable(const bool &is_join_table);
    bool is_is_join_table_Set() const;
    bool is_is_join_table_Valid() const;

    QList getPrimaryKeys() const;
    void setPrimaryKeys(const QList &primary_keys);
    bool is_primary_keys_Set() const;
    bool is_primary_keys_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QMap m_fields;
    bool m_fields_isSet;
    bool m_fields_isValid;

    bool m_is_join_table;
    bool m_is_join_table_isSet;
    bool m_is_join_table_isValid;

    QList m_primary_keys;
    bool m_primary_keys_isSet;
    bool m_primary_keys_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAICodegenGenericDataModel)

#endif // OAICodegenGenericDataModel_H
