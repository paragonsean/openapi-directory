/**
 * AWS Amplify UI Builder
 * <p>The Amplify UI Builder API provides a programmatic interface for creating and configuring user interface (UI) component libraries and themes for use in your Amplify applications. You can then connect these UI components to an application's backend Amazon Web Services resources.</p> <p>You can also use the Amplify Studio visual designer to create UI components and model data for an app. For more information, see <a href=\"https://docs.amplify.aws/console/adminui/intro\">Introduction</a> in the <i>Amplify Docs</i>.</p> <p>The Amplify Framework is a comprehensive set of SDKs, libraries, tools, and documentation for client app development. For more information, see the <a href=\"https://docs.amplify.aws/\">Amplify Framework</a>. For more information about deploying an Amplify application to Amazon Web Services, see the <a href=\"https://docs.aws.amazon.com/amplify/latest/userguide/welcome.html\">Amplify User Guide</a>.</p>
 *
 * The version of the OpenAPI document: 2021-08-11
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIValueMapping.h
 *
 * Associates a complex object with a display value. Use &lt;code&gt;ValueMapping&lt;/code&gt; to store how to represent complex objects when they are displayed.
 */

#ifndef OAIValueMapping_H
#define OAIValueMapping_H

#include <QJsonObject>

#include "OAIValueMapping_displayValue.h"
#include "OAIValueMapping_value.h"

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIValueMapping_displayValue;
class OAIValueMapping_value;

class OAIValueMapping : public OAIObject {
public:
    OAIValueMapping();
    OAIValueMapping(QString json);
    ~OAIValueMapping() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAIValueMapping_displayValue getDisplayValue() const;
    void setDisplayValue(const OAIValueMapping_displayValue &display_value);
    bool is_display_value_Set() const;
    bool is_display_value_Valid() const;

    OAIValueMapping_value getValue() const;
    void setValue(const OAIValueMapping_value &value);
    bool is_value_Set() const;
    bool is_value_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAIValueMapping_displayValue m_display_value;
    bool m_display_value_isSet;
    bool m_display_value_isValid;

    OAIValueMapping_value m_value;
    bool m_value_isSet;
    bool m_value_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIValueMapping)

#endif // OAIValueMapping_H
