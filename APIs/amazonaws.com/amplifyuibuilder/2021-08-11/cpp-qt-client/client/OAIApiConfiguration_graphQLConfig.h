/**
 * AWS Amplify UI Builder
 * <p>The Amplify UI Builder API provides a programmatic interface for creating and configuring user interface (UI) component libraries and themes for use in your Amplify applications. You can then connect these UI components to an application's backend Amazon Web Services resources.</p> <p>You can also use the Amplify Studio visual designer to create UI components and model data for an app. For more information, see <a href=\"https://docs.amplify.aws/console/adminui/intro\">Introduction</a> in the <i>Amplify Docs</i>.</p> <p>The Amplify Framework is a comprehensive set of SDKs, libraries, tools, and documentation for client app development. For more information, see the <a href=\"https://docs.amplify.aws/\">Amplify Framework</a>. For more information about deploying an Amplify application to Amazon Web Services, see the <a href=\"https://docs.aws.amazon.com/amplify/latest/userguide/welcome.html\">Amplify User Guide</a>.</p>
 *
 * The version of the OpenAPI document: 2021-08-11
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIApiConfiguration_graphQLConfig.h
 *
 * 
 */

#ifndef OAIApiConfiguration_graphQLConfig_H
#define OAIApiConfiguration_graphQLConfig_H

#include <QJsonObject>

#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIApiConfiguration_graphQLConfig : public OAIObject {
public:
    OAIApiConfiguration_graphQLConfig();
    OAIApiConfiguration_graphQLConfig(QString json);
    ~OAIApiConfiguration_graphQLConfig() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getTypesFilePath() const;
    void setTypesFilePath(const QString &types_file_path);
    bool is_types_file_path_Set() const;
    bool is_types_file_path_Valid() const;

    QString getQueriesFilePath() const;
    void setQueriesFilePath(const QString &queries_file_path);
    bool is_queries_file_path_Set() const;
    bool is_queries_file_path_Valid() const;

    QString getMutationsFilePath() const;
    void setMutationsFilePath(const QString &mutations_file_path);
    bool is_mutations_file_path_Set() const;
    bool is_mutations_file_path_Valid() const;

    QString getSubscriptionsFilePath() const;
    void setSubscriptionsFilePath(const QString &subscriptions_file_path);
    bool is_subscriptions_file_path_Set() const;
    bool is_subscriptions_file_path_Valid() const;

    QString getFragmentsFilePath() const;
    void setFragmentsFilePath(const QString &fragments_file_path);
    bool is_fragments_file_path_Set() const;
    bool is_fragments_file_path_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_types_file_path;
    bool m_types_file_path_isSet;
    bool m_types_file_path_isValid;

    QString m_queries_file_path;
    bool m_queries_file_path_isSet;
    bool m_queries_file_path_isValid;

    QString m_mutations_file_path;
    bool m_mutations_file_path_isSet;
    bool m_mutations_file_path_isValid;

    QString m_subscriptions_file_path;
    bool m_subscriptions_file_path_isSet;
    bool m_subscriptions_file_path_isValid;

    QString m_fragments_file_path;
    bool m_fragments_file_path_isSet;
    bool m_fragments_file_path_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIApiConfiguration_graphQLConfig)

#endif // OAIApiConfiguration_graphQLConfig_H
