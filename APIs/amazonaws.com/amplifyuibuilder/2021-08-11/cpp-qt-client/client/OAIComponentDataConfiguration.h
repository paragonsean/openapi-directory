/**
 * AWS Amplify UI Builder
 * <p>The Amplify UI Builder API provides a programmatic interface for creating and configuring user interface (UI) component libraries and themes for use in your Amplify applications. You can then connect these UI components to an application's backend Amazon Web Services resources.</p> <p>You can also use the Amplify Studio visual designer to create UI components and model data for an app. For more information, see <a href=\"https://docs.amplify.aws/console/adminui/intro\">Introduction</a> in the <i>Amplify Docs</i>.</p> <p>The Amplify Framework is a comprehensive set of SDKs, libraries, tools, and documentation for client app development. For more information, see the <a href=\"https://docs.amplify.aws/\">Amplify Framework</a>. For more information about deploying an Amplify application to Amazon Web Services, see the <a href=\"https://docs.aws.amazon.com/amplify/latest/userguide/welcome.html\">Amplify User Guide</a>.</p>
 *
 * The version of the OpenAPI document: 2021-08-11
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIComponentDataConfiguration.h
 *
 * Describes the configuration for binding a component&#39;s properties to data.
 */

#ifndef OAIComponentDataConfiguration_H
#define OAIComponentDataConfiguration_H

#include <QJsonObject>

#include "OAIComponentDataConfiguration_predicate.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIComponentDataConfiguration_predicate;

class OAIComponentDataConfiguration : public OAIObject {
public:
    OAIComponentDataConfiguration();
    OAIComponentDataConfiguration(QString json);
    ~OAIComponentDataConfiguration() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getModel() const;
    void setModel(const QString &model);
    bool is_model_Set() const;
    bool is_model_Valid() const;

    QList getSort() const;
    void setSort(const QList &sort);
    bool is_sort_Set() const;
    bool is_sort_Valid() const;

    OAIComponentDataConfiguration_predicate getPredicate() const;
    void setPredicate(const OAIComponentDataConfiguration_predicate &predicate);
    bool is_predicate_Set() const;
    bool is_predicate_Valid() const;

    QList getIdentifiers() const;
    void setIdentifiers(const QList &identifiers);
    bool is_identifiers_Set() const;
    bool is_identifiers_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_model;
    bool m_model_isSet;
    bool m_model_isValid;

    QList m_sort;
    bool m_sort_isSet;
    bool m_sort_isValid;

    OAIComponentDataConfiguration_predicate m_predicate;
    bool m_predicate_isSet;
    bool m_predicate_isValid;

    QList m_identifiers;
    bool m_identifiers_isSet;
    bool m_identifiers_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIComponentDataConfiguration)

#endif // OAIComponentDataConfiguration_H
