/**
 * AWS Amplify UI Builder
 * <p>The Amplify UI Builder API provides a programmatic interface for creating and configuring user interface (UI) component libraries and themes for use in your Amplify applications. You can then connect these UI components to an application's backend Amazon Web Services resources.</p> <p>You can also use the Amplify Studio visual designer to create UI components and model data for an app. For more information, see <a href=\"https://docs.amplify.aws/console/adminui/intro\">Introduction</a> in the <i>Amplify Docs</i>.</p> <p>The Amplify Framework is a comprehensive set of SDKs, libraries, tools, and documentation for client app development. For more information, see the <a href=\"https://docs.amplify.aws/\">Amplify Framework</a>. For more information about deploying an Amplify application to Amazon Web Services, see the <a href=\"https://docs.aws.amazon.com/amplify/latest/userguide/welcome.html\">Amplify User Guide</a>.</p>
 *
 * The version of the OpenAPI document: 2021-08-11
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAITheme.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAITheme::OAITheme(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAITheme::OAITheme() {
    this->initializeModel();
}

OAITheme::~OAITheme() {}

void OAITheme::initializeModel() {

    m_app_id_isSet = false;
    m_app_id_isValid = false;

    m_environment_name_isSet = false;
    m_environment_name_isValid = false;

    m_id_isSet = false;
    m_id_isValid = false;

    m_name_isSet = false;
    m_name_isValid = false;

    m_created_at_isSet = false;
    m_created_at_isValid = false;

    m_modified_at_isSet = false;
    m_modified_at_isValid = false;

    m_values_isSet = false;
    m_values_isValid = false;

    m_overrides_isSet = false;
    m_overrides_isValid = false;

    m_tags_isSet = false;
    m_tags_isValid = false;
}

void OAITheme::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAITheme::fromJsonObject(QJsonObject json) {

    m_app_id_isValid = ::OpenAPI::fromJsonValue(m_app_id, json[QString("appId")]);
    m_app_id_isSet = !json[QString("appId")].isNull() && m_app_id_isValid;

    m_environment_name_isValid = ::OpenAPI::fromJsonValue(m_environment_name, json[QString("environmentName")]);
    m_environment_name_isSet = !json[QString("environmentName")].isNull() && m_environment_name_isValid;

    m_id_isValid = ::OpenAPI::fromJsonValue(m_id, json[QString("id")]);
    m_id_isSet = !json[QString("id")].isNull() && m_id_isValid;

    m_name_isValid = ::OpenAPI::fromJsonValue(m_name, json[QString("name")]);
    m_name_isSet = !json[QString("name")].isNull() && m_name_isValid;

    m_created_at_isValid = ::OpenAPI::fromJsonValue(m_created_at, json[QString("createdAt")]);
    m_created_at_isSet = !json[QString("createdAt")].isNull() && m_created_at_isValid;

    m_modified_at_isValid = ::OpenAPI::fromJsonValue(m_modified_at, json[QString("modifiedAt")]);
    m_modified_at_isSet = !json[QString("modifiedAt")].isNull() && m_modified_at_isValid;

    m_values_isValid = ::OpenAPI::fromJsonValue(m_values, json[QString("values")]);
    m_values_isSet = !json[QString("values")].isNull() && m_values_isValid;

    m_overrides_isValid = ::OpenAPI::fromJsonValue(m_overrides, json[QString("overrides")]);
    m_overrides_isSet = !json[QString("overrides")].isNull() && m_overrides_isValid;

    m_tags_isValid = ::OpenAPI::fromJsonValue(m_tags, json[QString("tags")]);
    m_tags_isSet = !json[QString("tags")].isNull() && m_tags_isValid;
}

QString OAITheme::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAITheme::asJsonObject() const {
    QJsonObject obj;
    if (m_app_id_isSet) {
        obj.insert(QString("appId"), ::OpenAPI::toJsonValue(m_app_id));
    }
    if (m_environment_name_isSet) {
        obj.insert(QString("environmentName"), ::OpenAPI::toJsonValue(m_environment_name));
    }
    if (m_id_isSet) {
        obj.insert(QString("id"), ::OpenAPI::toJsonValue(m_id));
    }
    if (m_name_isSet) {
        obj.insert(QString("name"), ::OpenAPI::toJsonValue(m_name));
    }
    if (m_created_at_isSet) {
        obj.insert(QString("createdAt"), ::OpenAPI::toJsonValue(m_created_at));
    }
    if (m_modified_at_isSet) {
        obj.insert(QString("modifiedAt"), ::OpenAPI::toJsonValue(m_modified_at));
    }
    if (m_values.isSet()) {
        obj.insert(QString("values"), ::OpenAPI::toJsonValue(m_values));
    }
    if (m_overrides.isSet()) {
        obj.insert(QString("overrides"), ::OpenAPI::toJsonValue(m_overrides));
    }
    if (m_tags.isSet()) {
        obj.insert(QString("tags"), ::OpenAPI::toJsonValue(m_tags));
    }
    return obj;
}

QString OAITheme::getAppId() const {
    return m_app_id;
}
void OAITheme::setAppId(const QString &app_id) {
    m_app_id = app_id;
    m_app_id_isSet = true;
}

bool OAITheme::is_app_id_Set() const{
    return m_app_id_isSet;
}

bool OAITheme::is_app_id_Valid() const{
    return m_app_id_isValid;
}

QString OAITheme::getEnvironmentName() const {
    return m_environment_name;
}
void OAITheme::setEnvironmentName(const QString &environment_name) {
    m_environment_name = environment_name;
    m_environment_name_isSet = true;
}

bool OAITheme::is_environment_name_Set() const{
    return m_environment_name_isSet;
}

bool OAITheme::is_environment_name_Valid() const{
    return m_environment_name_isValid;
}

QString OAITheme::getId() const {
    return m_id;
}
void OAITheme::setId(const QString &id) {
    m_id = id;
    m_id_isSet = true;
}

bool OAITheme::is_id_Set() const{
    return m_id_isSet;
}

bool OAITheme::is_id_Valid() const{
    return m_id_isValid;
}

QString OAITheme::getName() const {
    return m_name;
}
void OAITheme::setName(const QString &name) {
    m_name = name;
    m_name_isSet = true;
}

bool OAITheme::is_name_Set() const{
    return m_name_isSet;
}

bool OAITheme::is_name_Valid() const{
    return m_name_isValid;
}

QDateTime OAITheme::getCreatedAt() const {
    return m_created_at;
}
void OAITheme::setCreatedAt(const QDateTime &created_at) {
    m_created_at = created_at;
    m_created_at_isSet = true;
}

bool OAITheme::is_created_at_Set() const{
    return m_created_at_isSet;
}

bool OAITheme::is_created_at_Valid() const{
    return m_created_at_isValid;
}

QDateTime OAITheme::getModifiedAt() const {
    return m_modified_at;
}
void OAITheme::setModifiedAt(const QDateTime &modified_at) {
    m_modified_at = modified_at;
    m_modified_at_isSet = true;
}

bool OAITheme::is_modified_at_Set() const{
    return m_modified_at_isSet;
}

bool OAITheme::is_modified_at_Valid() const{
    return m_modified_at_isValid;
}

QList OAITheme::getValues() const {
    return m_values;
}
void OAITheme::setValues(const QList &values) {
    m_values = values;
    m_values_isSet = true;
}

bool OAITheme::is_values_Set() const{
    return m_values_isSet;
}

bool OAITheme::is_values_Valid() const{
    return m_values_isValid;
}

QList OAITheme::getOverrides() const {
    return m_overrides;
}
void OAITheme::setOverrides(const QList &overrides) {
    m_overrides = overrides;
    m_overrides_isSet = true;
}

bool OAITheme::is_overrides_Set() const{
    return m_overrides_isSet;
}

bool OAITheme::is_overrides_Valid() const{
    return m_overrides_isValid;
}

QMap OAITheme::getTags() const {
    return m_tags;
}
void OAITheme::setTags(const QMap &tags) {
    m_tags = tags;
    m_tags_isSet = true;
}

bool OAITheme::is_tags_Set() const{
    return m_tags_isSet;
}

bool OAITheme::is_tags_Valid() const{
    return m_tags_isValid;
}

bool OAITheme::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_app_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_environment_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_created_at_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_modified_at_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_values.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_overrides.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_tags.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAITheme::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_app_id_isValid && m_environment_name_isValid && m_id_isValid && m_name_isValid && m_created_at_isValid && m_values_isValid && true;
}

} // namespace OpenAPI
