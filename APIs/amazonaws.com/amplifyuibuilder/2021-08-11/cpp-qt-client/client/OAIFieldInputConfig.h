/**
 * AWS Amplify UI Builder
 * <p>The Amplify UI Builder API provides a programmatic interface for creating and configuring user interface (UI) component libraries and themes for use in your Amplify applications. You can then connect these UI components to an application's backend Amazon Web Services resources.</p> <p>You can also use the Amplify Studio visual designer to create UI components and model data for an app. For more information, see <a href=\"https://docs.amplify.aws/console/adminui/intro\">Introduction</a> in the <i>Amplify Docs</i>.</p> <p>The Amplify Framework is a comprehensive set of SDKs, libraries, tools, and documentation for client app development. For more information, see the <a href=\"https://docs.amplify.aws/\">Amplify Framework</a>. For more information about deploying an Amplify application to Amazon Web Services, see the <a href=\"https://docs.aws.amazon.com/amplify/latest/userguide/welcome.html\">Amplify User Guide</a>.</p>
 *
 * The version of the OpenAPI document: 2021-08-11
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIFieldInputConfig.h
 *
 * Describes the configuration for the default input values to display for a field.
 */

#ifndef OAIFieldInputConfig_H
#define OAIFieldInputConfig_H

#include <QJsonObject>

#include "OAIFieldInputConfig_fileUploaderConfig.h"
#include "OAIFieldInputConfig_valueMappings.h"
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIFieldInputConfig_valueMappings;
class OAIFieldInputConfig_fileUploaderConfig;

class OAIFieldInputConfig : public OAIObject {
public:
    OAIFieldInputConfig();
    OAIFieldInputConfig(QString json);
    ~OAIFieldInputConfig() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getType() const;
    void setType(const QString &type);
    bool is_type_Set() const;
    bool is_type_Valid() const;

    bool getRequired() const;
    void setRequired(const bool &required);
    bool is_required_Set() const;
    bool is_required_Valid() const;

    bool getReadOnly() const;
    void setReadOnly(const bool &read_only);
    bool is_read_only_Set() const;
    bool is_read_only_Valid() const;

    QString getPlaceholder() const;
    void setPlaceholder(const QString &placeholder);
    bool is_placeholder_Set() const;
    bool is_placeholder_Valid() const;

    QString getDefaultValue() const;
    void setDefaultValue(const QString &default_value);
    bool is_default_value_Set() const;
    bool is_default_value_Valid() const;

    QString getDescriptiveText() const;
    void setDescriptiveText(const QString &descriptive_text);
    bool is_descriptive_text_Set() const;
    bool is_descriptive_text_Valid() const;

    bool getDefaultChecked() const;
    void setDefaultChecked(const bool &default_checked);
    bool is_default_checked_Set() const;
    bool is_default_checked_Valid() const;

    QString getDefaultCountryCode() const;
    void setDefaultCountryCode(const QString &default_country_code);
    bool is_default_country_code_Set() const;
    bool is_default_country_code_Valid() const;

    OAIFieldInputConfig_valueMappings getValueMappings() const;
    void setValueMappings(const OAIFieldInputConfig_valueMappings &value_mappings);
    bool is_value_mappings_Set() const;
    bool is_value_mappings_Valid() const;

    QString getName() const;
    void setName(const QString &name);
    bool is_name_Set() const;
    bool is_name_Valid() const;

    float getMinValue() const;
    void setMinValue(const float &min_value);
    bool is_min_value_Set() const;
    bool is_min_value_Valid() const;

    float getMaxValue() const;
    void setMaxValue(const float &max_value);
    bool is_max_value_Set() const;
    bool is_max_value_Valid() const;

    float getStep() const;
    void setStep(const float &step);
    bool is_step_Set() const;
    bool is_step_Valid() const;

    QString getValue() const;
    void setValue(const QString &value);
    bool is_value_Set() const;
    bool is_value_Valid() const;

    bool getIsArray() const;
    void setIsArray(const bool &is_array);
    bool is_is_array_Set() const;
    bool is_is_array_Valid() const;

    OAIFieldInputConfig_fileUploaderConfig getFileUploaderConfig() const;
    void setFileUploaderConfig(const OAIFieldInputConfig_fileUploaderConfig &file_uploader_config);
    bool is_file_uploader_config_Set() const;
    bool is_file_uploader_config_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_type;
    bool m_type_isSet;
    bool m_type_isValid;

    bool m_required;
    bool m_required_isSet;
    bool m_required_isValid;

    bool m_read_only;
    bool m_read_only_isSet;
    bool m_read_only_isValid;

    QString m_placeholder;
    bool m_placeholder_isSet;
    bool m_placeholder_isValid;

    QString m_default_value;
    bool m_default_value_isSet;
    bool m_default_value_isValid;

    QString m_descriptive_text;
    bool m_descriptive_text_isSet;
    bool m_descriptive_text_isValid;

    bool m_default_checked;
    bool m_default_checked_isSet;
    bool m_default_checked_isValid;

    QString m_default_country_code;
    bool m_default_country_code_isSet;
    bool m_default_country_code_isValid;

    OAIFieldInputConfig_valueMappings m_value_mappings;
    bool m_value_mappings_isSet;
    bool m_value_mappings_isValid;

    QString m_name;
    bool m_name_isSet;
    bool m_name_isValid;

    float m_min_value;
    bool m_min_value_isSet;
    bool m_min_value_isValid;

    float m_max_value;
    bool m_max_value_isSet;
    bool m_max_value_isValid;

    float m_step;
    bool m_step_isSet;
    bool m_step_isValid;

    QString m_value;
    bool m_value_isSet;
    bool m_value_isValid;

    bool m_is_array;
    bool m_is_array_isSet;
    bool m_is_array_isValid;

    OAIFieldInputConfig_fileUploaderConfig m_file_uploader_config;
    bool m_file_uploader_config_isSet;
    bool m_file_uploader_config_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIFieldInputConfig)

#endif // OAIFieldInputConfig_H
