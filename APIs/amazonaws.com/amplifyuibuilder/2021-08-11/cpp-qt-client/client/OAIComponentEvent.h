/**
 * AWS Amplify UI Builder
 * <p>The Amplify UI Builder API provides a programmatic interface for creating and configuring user interface (UI) component libraries and themes for use in your Amplify applications. You can then connect these UI components to an application's backend Amazon Web Services resources.</p> <p>You can also use the Amplify Studio visual designer to create UI components and model data for an app. For more information, see <a href=\"https://docs.amplify.aws/console/adminui/intro\">Introduction</a> in the <i>Amplify Docs</i>.</p> <p>The Amplify Framework is a comprehensive set of SDKs, libraries, tools, and documentation for client app development. For more information, see the <a href=\"https://docs.amplify.aws/\">Amplify Framework</a>. For more information about deploying an Amplify application to Amazon Web Services, see the <a href=\"https://docs.aws.amazon.com/amplify/latest/userguide/welcome.html\">Amplify User Guide</a>.</p>
 *
 * The version of the OpenAPI document: 2021-08-11
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIComponentEvent.h
 *
 * Describes the configuration of an event. You can bind an event and a corresponding action to a &lt;code&gt;Component&lt;/code&gt; or a &lt;code&gt;ComponentChild&lt;/code&gt;. A button click is an example of an event. 
 */

#ifndef OAIComponentEvent_H
#define OAIComponentEvent_H

#include <QJsonObject>

#include "OAIComponentEvent_parameters.h"
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIComponentEvent_parameters;

class OAIComponentEvent : public OAIObject {
public:
    OAIComponentEvent();
    OAIComponentEvent(QString json);
    ~OAIComponentEvent() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getAction() const;
    void setAction(const QString &action);
    bool is_action_Set() const;
    bool is_action_Valid() const;

    OAIComponentEvent_parameters getParameters() const;
    void setParameters(const OAIComponentEvent_parameters &parameters);
    bool is_parameters_Set() const;
    bool is_parameters_Valid() const;

    QString getBindingEvent() const;
    void setBindingEvent(const QString &binding_event);
    bool is_binding_event_Set() const;
    bool is_binding_event_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_action;
    bool m_action_isSet;
    bool m_action_isValid;

    OAIComponentEvent_parameters m_parameters;
    bool m_parameters_isSet;
    bool m_parameters_isValid;

    QString m_binding_event;
    bool m_binding_event_isSet;
    bool m_binding_event_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIComponentEvent)

#endif // OAIComponentEvent_H
