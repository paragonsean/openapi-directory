/**
 * AWS Amplify UI Builder
 * <p>The Amplify UI Builder API provides a programmatic interface for creating and configuring user interface (UI) component libraries and themes for use in your Amplify applications. You can then connect these UI components to an application's backend Amazon Web Services resources.</p> <p>You can also use the Amplify Studio visual designer to create UI components and model data for an app. For more information, see <a href=\"https://docs.amplify.aws/console/adminui/intro\">Introduction</a> in the <i>Amplify Docs</i>.</p> <p>The Amplify Framework is a comprehensive set of SDKs, libraries, tools, and documentation for client app development. For more information, see the <a href=\"https://docs.amplify.aws/\">Amplify Framework</a>. For more information about deploying an Amplify application to Amazon Web Services, see the <a href=\"https://docs.aws.amazon.com/amplify/latest/userguide/welcome.html\">Amplify User Guide</a>.</p>
 *
 * The version of the OpenAPI document: 2021-08-11
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIFormSummary_dataType.h
 *
 * 
 */

#ifndef OAIFormSummary_dataType_H
#define OAIFormSummary_dataType_H

#include <QJsonObject>

#include "OAIFormDataSourceType.h"
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIFormSummary_dataType : public OAIObject {
public:
    OAIFormSummary_dataType();
    OAIFormSummary_dataType(QString json);
    ~OAIFormSummary_dataType() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAIFormDataSourceType getDataSourceType() const;
    void setDataSourceType(const OAIFormDataSourceType &data_source_type);
    bool is_data_source_type_Set() const;
    bool is_data_source_type_Valid() const;

    QString getDataTypeName() const;
    void setDataTypeName(const QString &data_type_name);
    bool is_data_type_name_Set() const;
    bool is_data_type_name_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAIFormDataSourceType m_data_source_type;
    bool m_data_source_type_isSet;
    bool m_data_source_type_isValid;

    QString m_data_type_name;
    bool m_data_type_name_isSet;
    bool m_data_type_name_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIFormSummary_dataType)

#endif // OAIFormSummary_dataType_H
