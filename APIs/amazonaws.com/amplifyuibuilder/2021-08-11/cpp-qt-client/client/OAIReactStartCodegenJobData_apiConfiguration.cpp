/**
 * AWS Amplify UI Builder
 * <p>The Amplify UI Builder API provides a programmatic interface for creating and configuring user interface (UI) component libraries and themes for use in your Amplify applications. You can then connect these UI components to an application's backend Amazon Web Services resources.</p> <p>You can also use the Amplify Studio visual designer to create UI components and model data for an app. For more information, see <a href=\"https://docs.amplify.aws/console/adminui/intro\">Introduction</a> in the <i>Amplify Docs</i>.</p> <p>The Amplify Framework is a comprehensive set of SDKs, libraries, tools, and documentation for client app development. For more information, see the <a href=\"https://docs.amplify.aws/\">Amplify Framework</a>. For more information about deploying an Amplify application to Amazon Web Services, see the <a href=\"https://docs.aws.amazon.com/amplify/latest/userguide/welcome.html\">Amplify User Guide</a>.</p>
 *
 * The version of the OpenAPI document: 2021-08-11
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIReactStartCodegenJobData_apiConfiguration.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIReactStartCodegenJobData_apiConfiguration::OAIReactStartCodegenJobData_apiConfiguration(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIReactStartCodegenJobData_apiConfiguration::OAIReactStartCodegenJobData_apiConfiguration() {
    this->initializeModel();
}

OAIReactStartCodegenJobData_apiConfiguration::~OAIReactStartCodegenJobData_apiConfiguration() {}

void OAIReactStartCodegenJobData_apiConfiguration::initializeModel() {

    m_graph_ql_config_isSet = false;
    m_graph_ql_config_isValid = false;

    m_data_store_config_isSet = false;
    m_data_store_config_isValid = false;

    m_no_api_config_isSet = false;
    m_no_api_config_isValid = false;
}

void OAIReactStartCodegenJobData_apiConfiguration::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIReactStartCodegenJobData_apiConfiguration::fromJsonObject(QJsonObject json) {

    m_graph_ql_config_isValid = ::OpenAPI::fromJsonValue(m_graph_ql_config, json[QString("graphQLConfig")]);
    m_graph_ql_config_isSet = !json[QString("graphQLConfig")].isNull() && m_graph_ql_config_isValid;

    m_data_store_config_isValid = ::OpenAPI::fromJsonValue(m_data_store_config, json[QString("dataStoreConfig")]);
    m_data_store_config_isSet = !json[QString("dataStoreConfig")].isNull() && m_data_store_config_isValid;

    m_no_api_config_isValid = ::OpenAPI::fromJsonValue(m_no_api_config, json[QString("noApiConfig")]);
    m_no_api_config_isSet = !json[QString("noApiConfig")].isNull() && m_no_api_config_isValid;
}

QString OAIReactStartCodegenJobData_apiConfiguration::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIReactStartCodegenJobData_apiConfiguration::asJsonObject() const {
    QJsonObject obj;
    if (m_graph_ql_config.isSet()) {
        obj.insert(QString("graphQLConfig"), ::OpenAPI::toJsonValue(m_graph_ql_config));
    }
    if (m_data_store_config.isSet()) {
        obj.insert(QString("dataStoreConfig"), ::OpenAPI::toJsonValue(m_data_store_config));
    }
    if (m_no_api_config.isSet()) {
        obj.insert(QString("noApiConfig"), ::OpenAPI::toJsonValue(m_no_api_config));
    }
    return obj;
}

OAIApiConfiguration_graphQLConfig OAIReactStartCodegenJobData_apiConfiguration::getGraphQlConfig() const {
    return m_graph_ql_config;
}
void OAIReactStartCodegenJobData_apiConfiguration::setGraphQlConfig(const OAIApiConfiguration_graphQLConfig &graph_ql_config) {
    m_graph_ql_config = graph_ql_config;
    m_graph_ql_config_isSet = true;
}

bool OAIReactStartCodegenJobData_apiConfiguration::is_graph_ql_config_Set() const{
    return m_graph_ql_config_isSet;
}

bool OAIReactStartCodegenJobData_apiConfiguration::is_graph_ql_config_Valid() const{
    return m_graph_ql_config_isValid;
}

OAIObject OAIReactStartCodegenJobData_apiConfiguration::getDataStoreConfig() const {
    return m_data_store_config;
}
void OAIReactStartCodegenJobData_apiConfiguration::setDataStoreConfig(const OAIObject &data_store_config) {
    m_data_store_config = data_store_config;
    m_data_store_config_isSet = true;
}

bool OAIReactStartCodegenJobData_apiConfiguration::is_data_store_config_Set() const{
    return m_data_store_config_isSet;
}

bool OAIReactStartCodegenJobData_apiConfiguration::is_data_store_config_Valid() const{
    return m_data_store_config_isValid;
}

OAIObject OAIReactStartCodegenJobData_apiConfiguration::getNoApiConfig() const {
    return m_no_api_config;
}
void OAIReactStartCodegenJobData_apiConfiguration::setNoApiConfig(const OAIObject &no_api_config) {
    m_no_api_config = no_api_config;
    m_no_api_config_isSet = true;
}

bool OAIReactStartCodegenJobData_apiConfiguration::is_no_api_config_Set() const{
    return m_no_api_config_isSet;
}

bool OAIReactStartCodegenJobData_apiConfiguration::is_no_api_config_Valid() const{
    return m_no_api_config_isValid;
}

bool OAIReactStartCodegenJobData_apiConfiguration::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_graph_ql_config.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_data_store_config.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_no_api_config.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIReactStartCodegenJobData_apiConfiguration::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
