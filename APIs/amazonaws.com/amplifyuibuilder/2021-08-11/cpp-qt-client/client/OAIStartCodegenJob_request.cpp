/**
 * AWS Amplify UI Builder
 * <p>The Amplify UI Builder API provides a programmatic interface for creating and configuring user interface (UI) component libraries and themes for use in your Amplify applications. You can then connect these UI components to an application's backend Amazon Web Services resources.</p> <p>You can also use the Amplify Studio visual designer to create UI components and model data for an app. For more information, see <a href=\"https://docs.amplify.aws/console/adminui/intro\">Introduction</a> in the <i>Amplify Docs</i>.</p> <p>The Amplify Framework is a comprehensive set of SDKs, libraries, tools, and documentation for client app development. For more information, see the <a href=\"https://docs.amplify.aws/\">Amplify Framework</a>. For more information about deploying an Amplify application to Amazon Web Services, see the <a href=\"https://docs.aws.amazon.com/amplify/latest/userguide/welcome.html\">Amplify User Guide</a>.</p>
 *
 * The version of the OpenAPI document: 2021-08-11
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIStartCodegenJob_request.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIStartCodegenJob_request::OAIStartCodegenJob_request(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIStartCodegenJob_request::OAIStartCodegenJob_request() {
    this->initializeModel();
}

OAIStartCodegenJob_request::~OAIStartCodegenJob_request() {}

void OAIStartCodegenJob_request::initializeModel() {

    m_codegen_job_to_create_isSet = false;
    m_codegen_job_to_create_isValid = false;
}

void OAIStartCodegenJob_request::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIStartCodegenJob_request::fromJsonObject(QJsonObject json) {

    m_codegen_job_to_create_isValid = ::OpenAPI::fromJsonValue(m_codegen_job_to_create, json[QString("codegenJobToCreate")]);
    m_codegen_job_to_create_isSet = !json[QString("codegenJobToCreate")].isNull() && m_codegen_job_to_create_isValid;
}

QString OAIStartCodegenJob_request::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIStartCodegenJob_request::asJsonObject() const {
    QJsonObject obj;
    if (m_codegen_job_to_create.isSet()) {
        obj.insert(QString("codegenJobToCreate"), ::OpenAPI::toJsonValue(m_codegen_job_to_create));
    }
    return obj;
}

OAIStartCodegenJob_request_codegenJobToCreate OAIStartCodegenJob_request::getCodegenJobToCreate() const {
    return m_codegen_job_to_create;
}
void OAIStartCodegenJob_request::setCodegenJobToCreate(const OAIStartCodegenJob_request_codegenJobToCreate &codegen_job_to_create) {
    m_codegen_job_to_create = codegen_job_to_create;
    m_codegen_job_to_create_isSet = true;
}

bool OAIStartCodegenJob_request::is_codegen_job_to_create_Set() const{
    return m_codegen_job_to_create_isSet;
}

bool OAIStartCodegenJob_request::is_codegen_job_to_create_Valid() const{
    return m_codegen_job_to_create_isValid;
}

bool OAIStartCodegenJob_request::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_codegen_job_to_create.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIStartCodegenJob_request::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_codegen_job_to_create_isValid && true;
}

} // namespace OpenAPI
