/**
 * AWS Amplify UI Builder
 * <p>The Amplify UI Builder API provides a programmatic interface for creating and configuring user interface (UI) component libraries and themes for use in your Amplify applications. You can then connect these UI components to an application's backend Amazon Web Services resources.</p> <p>You can also use the Amplify Studio visual designer to create UI components and model data for an app. For more information, see <a href=\"https://docs.amplify.aws/console/adminui/intro\">Introduction</a> in the <i>Amplify Docs</i>.</p> <p>The Amplify Framework is a comprehensive set of SDKs, libraries, tools, and documentation for client app development. For more information, see the <a href=\"https://docs.amplify.aws/\">Amplify Framework</a>. For more information about deploying an Amplify application to Amazon Web Services, see the <a href=\"https://docs.aws.amazon.com/amplify/latest/userguide/welcome.html\">Amplify User Guide</a>.</p>
 *
 * The version of the OpenAPI document: 2021-08-11
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIFormStyle_horizontalGap.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIFormStyle_horizontalGap::OAIFormStyle_horizontalGap(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIFormStyle_horizontalGap::OAIFormStyle_horizontalGap() {
    this->initializeModel();
}

OAIFormStyle_horizontalGap::~OAIFormStyle_horizontalGap() {}

void OAIFormStyle_horizontalGap::initializeModel() {

    m_token_reference_isSet = false;
    m_token_reference_isValid = false;

    m_value_isSet = false;
    m_value_isValid = false;
}

void OAIFormStyle_horizontalGap::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIFormStyle_horizontalGap::fromJsonObject(QJsonObject json) {

    m_token_reference_isValid = ::OpenAPI::fromJsonValue(m_token_reference, json[QString("tokenReference")]);
    m_token_reference_isSet = !json[QString("tokenReference")].isNull() && m_token_reference_isValid;

    m_value_isValid = ::OpenAPI::fromJsonValue(m_value, json[QString("value")]);
    m_value_isSet = !json[QString("value")].isNull() && m_value_isValid;
}

QString OAIFormStyle_horizontalGap::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIFormStyle_horizontalGap::asJsonObject() const {
    QJsonObject obj;
    if (m_token_reference_isSet) {
        obj.insert(QString("tokenReference"), ::OpenAPI::toJsonValue(m_token_reference));
    }
    if (m_value_isSet) {
        obj.insert(QString("value"), ::OpenAPI::toJsonValue(m_value));
    }
    return obj;
}

QString OAIFormStyle_horizontalGap::getTokenReference() const {
    return m_token_reference;
}
void OAIFormStyle_horizontalGap::setTokenReference(const QString &token_reference) {
    m_token_reference = token_reference;
    m_token_reference_isSet = true;
}

bool OAIFormStyle_horizontalGap::is_token_reference_Set() const{
    return m_token_reference_isSet;
}

bool OAIFormStyle_horizontalGap::is_token_reference_Valid() const{
    return m_token_reference_isValid;
}

QString OAIFormStyle_horizontalGap::getValue() const {
    return m_value;
}
void OAIFormStyle_horizontalGap::setValue(const QString &value) {
    m_value = value;
    m_value_isSet = true;
}

bool OAIFormStyle_horizontalGap::is_value_Set() const{
    return m_value_isSet;
}

bool OAIFormStyle_horizontalGap::is_value_Valid() const{
    return m_value_isValid;
}

bool OAIFormStyle_horizontalGap::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_token_reference_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_value_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIFormStyle_horizontalGap::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
