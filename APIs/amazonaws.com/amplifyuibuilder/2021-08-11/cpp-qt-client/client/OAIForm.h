/**
 * AWS Amplify UI Builder
 * <p>The Amplify UI Builder API provides a programmatic interface for creating and configuring user interface (UI) component libraries and themes for use in your Amplify applications. You can then connect these UI components to an application's backend Amazon Web Services resources.</p> <p>You can also use the Amplify Studio visual designer to create UI components and model data for an app. For more information, see <a href=\"https://docs.amplify.aws/console/adminui/intro\">Introduction</a> in the <i>Amplify Docs</i>.</p> <p>The Amplify Framework is a comprehensive set of SDKs, libraries, tools, and documentation for client app development. For more information, see the <a href=\"https://docs.amplify.aws/\">Amplify Framework</a>. For more information about deploying an Amplify application to Amazon Web Services, see the <a href=\"https://docs.aws.amazon.com/amplify/latest/userguide/welcome.html\">Amplify User Guide</a>.</p>
 *
 * The version of the OpenAPI document: 2021-08-11
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIForm.h
 *
 * Contains the configuration settings for a &lt;code&gt;Form&lt;/code&gt; user interface (UI) element for an Amplify app. A form is a component you can add to your project by specifying a data source as the default configuration for the form.
 */

#ifndef OAIForm_H
#define OAIForm_H

#include <QJsonObject>

#include "OAICreateForm_request_formToCreate_dataType.h"
#include "OAIFormActionType.h"
#include "OAIForm_cta.h"
#include "OAIForm_style.h"
#include "OAILabelDecorator.h"
#include <QMap>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIForm_style;
class OAICreateForm_request_formToCreate_dataType;
class OAIForm_cta;

class OAIForm : public OAIObject {
public:
    OAIForm();
    OAIForm(QString json);
    ~OAIForm() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getAppId() const;
    void setAppId(const QString &app_id);
    bool is_app_id_Set() const;
    bool is_app_id_Valid() const;

    QString getEnvironmentName() const;
    void setEnvironmentName(const QString &environment_name);
    bool is_environment_name_Set() const;
    bool is_environment_name_Valid() const;

    QString getId() const;
    void setId(const QString &id);
    bool is_id_Set() const;
    bool is_id_Valid() const;

    QString getName() const;
    void setName(const QString &name);
    bool is_name_Set() const;
    bool is_name_Valid() const;

    OAIFormActionType getFormActionType() const;
    void setFormActionType(const OAIFormActionType &form_action_type);
    bool is_form_action_type_Set() const;
    bool is_form_action_type_Valid() const;

    OAIForm_style getStyle() const;
    void setStyle(const OAIForm_style &style);
    bool is_style_Set() const;
    bool is_style_Valid() const;

    OAICreateForm_request_formToCreate_dataType getDataType() const;
    void setDataType(const OAICreateForm_request_formToCreate_dataType &data_type);
    bool is_data_type_Set() const;
    bool is_data_type_Valid() const;

    QMap getFields() const;
    void setFields(const QMap &fields);
    bool is_fields_Set() const;
    bool is_fields_Valid() const;

    QMap getSectionalElements() const;
    void setSectionalElements(const QMap &sectional_elements);
    bool is_sectional_elements_Set() const;
    bool is_sectional_elements_Valid() const;

    QString getSchemaVersion() const;
    void setSchemaVersion(const QString &schema_version);
    bool is_schema_version_Set() const;
    bool is_schema_version_Valid() const;

    QMap getTags() const;
    void setTags(const QMap &tags);
    bool is_tags_Set() const;
    bool is_tags_Valid() const;

    OAIForm_cta getCta() const;
    void setCta(const OAIForm_cta &cta);
    bool is_cta_Set() const;
    bool is_cta_Valid() const;

    OAILabelDecorator getLabelDecorator() const;
    void setLabelDecorator(const OAILabelDecorator &label_decorator);
    bool is_label_decorator_Set() const;
    bool is_label_decorator_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_app_id;
    bool m_app_id_isSet;
    bool m_app_id_isValid;

    QString m_environment_name;
    bool m_environment_name_isSet;
    bool m_environment_name_isValid;

    QString m_id;
    bool m_id_isSet;
    bool m_id_isValid;

    QString m_name;
    bool m_name_isSet;
    bool m_name_isValid;

    OAIFormActionType m_form_action_type;
    bool m_form_action_type_isSet;
    bool m_form_action_type_isValid;

    OAIForm_style m_style;
    bool m_style_isSet;
    bool m_style_isValid;

    OAICreateForm_request_formToCreate_dataType m_data_type;
    bool m_data_type_isSet;
    bool m_data_type_isValid;

    QMap m_fields;
    bool m_fields_isSet;
    bool m_fields_isValid;

    QMap m_sectional_elements;
    bool m_sectional_elements_isSet;
    bool m_sectional_elements_isValid;

    QString m_schema_version;
    bool m_schema_version_isSet;
    bool m_schema_version_isValid;

    QMap m_tags;
    bool m_tags_isSet;
    bool m_tags_isValid;

    OAIForm_cta m_cta;
    bool m_cta_isSet;
    bool m_cta_isValid;

    OAILabelDecorator m_label_decorator;
    bool m_label_decorator_isSet;
    bool m_label_decorator_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIForm)

#endif // OAIForm_H
