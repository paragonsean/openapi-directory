/**
 * AWS Amplify UI Builder
 * <p>The Amplify UI Builder API provides a programmatic interface for creating and configuring user interface (UI) component libraries and themes for use in your Amplify applications. You can then connect these UI components to an application's backend Amazon Web Services resources.</p> <p>You can also use the Amplify Studio visual designer to create UI components and model data for an app. For more information, see <a href=\"https://docs.amplify.aws/console/adminui/intro\">Introduction</a> in the <i>Amplify Docs</i>.</p> <p>The Amplify Framework is a comprehensive set of SDKs, libraries, tools, and documentation for client app development. For more information, see the <a href=\"https://docs.amplify.aws/\">Amplify Framework</a>. For more information about deploying an Amplify application to Amazon Web Services, see the <a href=\"https://docs.aws.amazon.com/amplify/latest/userguide/welcome.html\">Amplify User Guide</a>.</p>
 *
 * The version of the OpenAPI document: 2021-08-11
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIFieldInputConfig_valueMappings.h
 *
 * 
 */

#ifndef OAIFieldInputConfig_valueMappings_H
#define OAIFieldInputConfig_valueMappings_H

#include <QJsonObject>

#include <QList>
#include <QMap>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIFieldInputConfig_valueMappings : public OAIObject {
public:
    OAIFieldInputConfig_valueMappings();
    OAIFieldInputConfig_valueMappings(QString json);
    ~OAIFieldInputConfig_valueMappings() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QList getValues() const;
    void setValues(const QList &values);
    bool is_values_Set() const;
    bool is_values_Valid() const;

    QMap getBindingProperties() const;
    void setBindingProperties(const QMap &binding_properties);
    bool is_binding_properties_Set() const;
    bool is_binding_properties_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QList m_values;
    bool m_values_isSet;
    bool m_values_isValid;

    QMap m_binding_properties;
    bool m_binding_properties_isSet;
    bool m_binding_properties_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIFieldInputConfig_valueMappings)

#endif // OAIFieldInputConfig_valueMappings_H
