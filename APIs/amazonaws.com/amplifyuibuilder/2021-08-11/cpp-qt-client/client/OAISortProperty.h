/**
 * AWS Amplify UI Builder
 * <p>The Amplify UI Builder API provides a programmatic interface for creating and configuring user interface (UI) component libraries and themes for use in your Amplify applications. You can then connect these UI components to an application's backend Amazon Web Services resources.</p> <p>You can also use the Amplify Studio visual designer to create UI components and model data for an app. For more information, see <a href=\"https://docs.amplify.aws/console/adminui/intro\">Introduction</a> in the <i>Amplify Docs</i>.</p> <p>The Amplify Framework is a comprehensive set of SDKs, libraries, tools, and documentation for client app development. For more information, see the <a href=\"https://docs.amplify.aws/\">Amplify Framework</a>. For more information about deploying an Amplify application to Amazon Web Services, see the <a href=\"https://docs.aws.amazon.com/amplify/latest/userguide/welcome.html\">Amplify User Guide</a>.</p>
 *
 * The version of the OpenAPI document: 2021-08-11
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAISortProperty.h
 *
 * Describes how to sort the data that you bind to a component.
 */

#ifndef OAISortProperty_H
#define OAISortProperty_H

#include <QJsonObject>

#include "OAISortDirection.h"
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAISortProperty : public OAIObject {
public:
    OAISortProperty();
    OAISortProperty(QString json);
    ~OAISortProperty() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getField() const;
    void setField(const QString &field);
    bool is_field_Set() const;
    bool is_field_Valid() const;

    OAISortDirection getDirection() const;
    void setDirection(const OAISortDirection &direction);
    bool is_direction_Set() const;
    bool is_direction_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_field;
    bool m_field_isSet;
    bool m_field_isValid;

    OAISortDirection m_direction;
    bool m_direction_isSet;
    bool m_direction_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAISortProperty)

#endif // OAISortProperty_H
