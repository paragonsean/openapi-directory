/**
 * AWS Amplify UI Builder
 * <p>The Amplify UI Builder API provides a programmatic interface for creating and configuring user interface (UI) component libraries and themes for use in your Amplify applications. You can then connect these UI components to an application's backend Amazon Web Services resources.</p> <p>You can also use the Amplify Studio visual designer to create UI components and model data for an app. For more information, see <a href=\"https://docs.amplify.aws/console/adminui/intro\">Introduction</a> in the <i>Amplify Docs</i>.</p> <p>The Amplify Framework is a comprehensive set of SDKs, libraries, tools, and documentation for client app development. For more information, see the <a href=\"https://docs.amplify.aws/\">Amplify Framework</a>. For more information about deploying an Amplify application to Amazon Web Services, see the <a href=\"https://docs.aws.amazon.com/amplify/latest/userguide/welcome.html\">Amplify User Guide</a>.</p>
 *
 * The version of the OpenAPI document: 2021-08-11
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAICodegenGenericDataField.h
 *
 * Describes a field in a generic data schema.
 */

#ifndef OAICodegenGenericDataField_H
#define OAICodegenGenericDataField_H

#include <QJsonObject>

#include "OAICodegenGenericDataFieldDataType.h"
#include "OAICodegenGenericDataField_relationship.h"
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAICodegenGenericDataField_relationship;

class OAICodegenGenericDataField : public OAIObject {
public:
    OAICodegenGenericDataField();
    OAICodegenGenericDataField(QString json);
    ~OAICodegenGenericDataField() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAICodegenGenericDataFieldDataType getDataType() const;
    void setDataType(const OAICodegenGenericDataFieldDataType &data_type);
    bool is_data_type_Set() const;
    bool is_data_type_Valid() const;

    QString getDataTypeValue() const;
    void setDataTypeValue(const QString &data_type_value);
    bool is_data_type_value_Set() const;
    bool is_data_type_value_Valid() const;

    bool getRequired() const;
    void setRequired(const bool &required);
    bool is_required_Set() const;
    bool is_required_Valid() const;

    bool getReadOnly() const;
    void setReadOnly(const bool &read_only);
    bool is_read_only_Set() const;
    bool is_read_only_Valid() const;

    bool getIsArray() const;
    void setIsArray(const bool &is_array);
    bool is_is_array_Set() const;
    bool is_is_array_Valid() const;

    OAICodegenGenericDataField_relationship getRelationship() const;
    void setRelationship(const OAICodegenGenericDataField_relationship &relationship);
    bool is_relationship_Set() const;
    bool is_relationship_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAICodegenGenericDataFieldDataType m_data_type;
    bool m_data_type_isSet;
    bool m_data_type_isValid;

    QString m_data_type_value;
    bool m_data_type_value_isSet;
    bool m_data_type_value_isValid;

    bool m_required;
    bool m_required_isSet;
    bool m_required_isValid;

    bool m_read_only;
    bool m_read_only_isSet;
    bool m_read_only_isValid;

    bool m_is_array;
    bool m_is_array_isSet;
    bool m_is_array_isValid;

    OAICodegenGenericDataField_relationship m_relationship;
    bool m_relationship_isSet;
    bool m_relationship_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAICodegenGenericDataField)

#endif // OAICodegenGenericDataField_H
