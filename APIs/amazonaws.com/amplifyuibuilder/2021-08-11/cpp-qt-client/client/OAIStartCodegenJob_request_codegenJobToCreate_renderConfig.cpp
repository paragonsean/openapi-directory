/**
 * AWS Amplify UI Builder
 * <p>The Amplify UI Builder API provides a programmatic interface for creating and configuring user interface (UI) component libraries and themes for use in your Amplify applications. You can then connect these UI components to an application's backend Amazon Web Services resources.</p> <p>You can also use the Amplify Studio visual designer to create UI components and model data for an app. For more information, see <a href=\"https://docs.amplify.aws/console/adminui/intro\">Introduction</a> in the <i>Amplify Docs</i>.</p> <p>The Amplify Framework is a comprehensive set of SDKs, libraries, tools, and documentation for client app development. For more information, see the <a href=\"https://docs.amplify.aws/\">Amplify Framework</a>. For more information about deploying an Amplify application to Amazon Web Services, see the <a href=\"https://docs.aws.amazon.com/amplify/latest/userguide/welcome.html\">Amplify User Guide</a>.</p>
 *
 * The version of the OpenAPI document: 2021-08-11
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIStartCodegenJob_request_codegenJobToCreate_renderConfig.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIStartCodegenJob_request_codegenJobToCreate_renderConfig::OAIStartCodegenJob_request_codegenJobToCreate_renderConfig(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIStartCodegenJob_request_codegenJobToCreate_renderConfig::OAIStartCodegenJob_request_codegenJobToCreate_renderConfig() {
    this->initializeModel();
}

OAIStartCodegenJob_request_codegenJobToCreate_renderConfig::~OAIStartCodegenJob_request_codegenJobToCreate_renderConfig() {}

void OAIStartCodegenJob_request_codegenJobToCreate_renderConfig::initializeModel() {

    m_react_isSet = false;
    m_react_isValid = false;
}

void OAIStartCodegenJob_request_codegenJobToCreate_renderConfig::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIStartCodegenJob_request_codegenJobToCreate_renderConfig::fromJsonObject(QJsonObject json) {

    m_react_isValid = ::OpenAPI::fromJsonValue(m_react, json[QString("react")]);
    m_react_isSet = !json[QString("react")].isNull() && m_react_isValid;
}

QString OAIStartCodegenJob_request_codegenJobToCreate_renderConfig::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIStartCodegenJob_request_codegenJobToCreate_renderConfig::asJsonObject() const {
    QJsonObject obj;
    if (m_react.isSet()) {
        obj.insert(QString("react"), ::OpenAPI::toJsonValue(m_react));
    }
    return obj;
}

OAICodegenJobRenderConfig_react OAIStartCodegenJob_request_codegenJobToCreate_renderConfig::getReact() const {
    return m_react;
}
void OAIStartCodegenJob_request_codegenJobToCreate_renderConfig::setReact(const OAICodegenJobRenderConfig_react &react) {
    m_react = react;
    m_react_isSet = true;
}

bool OAIStartCodegenJob_request_codegenJobToCreate_renderConfig::is_react_Set() const{
    return m_react_isSet;
}

bool OAIStartCodegenJob_request_codegenJobToCreate_renderConfig::is_react_Valid() const{
    return m_react_isValid;
}

bool OAIStartCodegenJob_request_codegenJobToCreate_renderConfig::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_react.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIStartCodegenJob_request_codegenJobToCreate_renderConfig::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
