/**
 * AWS Amplify UI Builder
 * <p>The Amplify UI Builder API provides a programmatic interface for creating and configuring user interface (UI) component libraries and themes for use in your Amplify applications. You can then connect these UI components to an application's backend Amazon Web Services resources.</p> <p>You can also use the Amplify Studio visual designer to create UI components and model data for an app. For more information, see <a href=\"https://docs.amplify.aws/console/adminui/intro\">Introduction</a> in the <i>Amplify Docs</i>.</p> <p>The Amplify Framework is a comprehensive set of SDKs, libraries, tools, and documentation for client app development. For more information, see the <a href=\"https://docs.amplify.aws/\">Amplify Framework</a>. For more information about deploying an Amplify application to Amazon Web Services, see the <a href=\"https://docs.aws.amazon.com/amplify/latest/userguide/welcome.html\">Amplify User Guide</a>.</p>
 *
 * The version of the OpenAPI document: 2021-08-11
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIFieldConfig.h
 *
 * Describes the configuration information for a field in a table.
 */

#ifndef OAIFieldConfig_H
#define OAIFieldConfig_H

#include <QJsonObject>

#include "OAIFieldConfig_inputType.h"
#include "OAIFieldConfig_position.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIFieldConfig_position;
class OAIFieldConfig_inputType;

class OAIFieldConfig : public OAIObject {
public:
    OAIFieldConfig();
    OAIFieldConfig(QString json);
    ~OAIFieldConfig() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getLabel() const;
    void setLabel(const QString &label);
    bool is_label_Set() const;
    bool is_label_Valid() const;

    OAIFieldConfig_position getPosition() const;
    void setPosition(const OAIFieldConfig_position &position);
    bool is_position_Set() const;
    bool is_position_Valid() const;

    bool getExcluded() const;
    void setExcluded(const bool &excluded);
    bool is_excluded_Set() const;
    bool is_excluded_Valid() const;

    OAIFieldConfig_inputType getInputType() const;
    void setInputType(const OAIFieldConfig_inputType &input_type);
    bool is_input_type_Set() const;
    bool is_input_type_Valid() const;

    QList getValidations() const;
    void setValidations(const QList &validations);
    bool is_validations_Set() const;
    bool is_validations_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_label;
    bool m_label_isSet;
    bool m_label_isValid;

    OAIFieldConfig_position m_position;
    bool m_position_isSet;
    bool m_position_isValid;

    bool m_excluded;
    bool m_excluded_isSet;
    bool m_excluded_isValid;

    OAIFieldConfig_inputType m_input_type;
    bool m_input_type_isSet;
    bool m_input_type_isValid;

    QList m_validations;
    bool m_validations_isSet;
    bool m_validations_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIFieldConfig)

#endif // OAIFieldConfig_H
