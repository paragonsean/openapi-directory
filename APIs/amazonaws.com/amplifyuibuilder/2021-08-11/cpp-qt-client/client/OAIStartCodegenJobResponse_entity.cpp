/**
 * AWS Amplify UI Builder
 * <p>The Amplify UI Builder API provides a programmatic interface for creating and configuring user interface (UI) component libraries and themes for use in your Amplify applications. You can then connect these UI components to an application's backend Amazon Web Services resources.</p> <p>You can also use the Amplify Studio visual designer to create UI components and model data for an app. For more information, see <a href=\"https://docs.amplify.aws/console/adminui/intro\">Introduction</a> in the <i>Amplify Docs</i>.</p> <p>The Amplify Framework is a comprehensive set of SDKs, libraries, tools, and documentation for client app development. For more information, see the <a href=\"https://docs.amplify.aws/\">Amplify Framework</a>. For more information about deploying an Amplify application to Amazon Web Services, see the <a href=\"https://docs.aws.amazon.com/amplify/latest/userguide/welcome.html\">Amplify User Guide</a>.</p>
 *
 * The version of the OpenAPI document: 2021-08-11
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIStartCodegenJobResponse_entity.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIStartCodegenJobResponse_entity::OAIStartCodegenJobResponse_entity(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIStartCodegenJobResponse_entity::OAIStartCodegenJobResponse_entity() {
    this->initializeModel();
}

OAIStartCodegenJobResponse_entity::~OAIStartCodegenJobResponse_entity() {}

void OAIStartCodegenJobResponse_entity::initializeModel() {

    m_id_isSet = false;
    m_id_isValid = false;

    m_app_id_isSet = false;
    m_app_id_isValid = false;

    m_environment_name_isSet = false;
    m_environment_name_isValid = false;

    m_render_config_isSet = false;
    m_render_config_isValid = false;

    m_generic_data_schema_isSet = false;
    m_generic_data_schema_isValid = false;

    m_auto_generate_forms_isSet = false;
    m_auto_generate_forms_isValid = false;

    m_features_isSet = false;
    m_features_isValid = false;

    m_status_isSet = false;
    m_status_isValid = false;

    m_status_message_isSet = false;
    m_status_message_isValid = false;

    m_asset_isSet = false;
    m_asset_isValid = false;

    m_tags_isSet = false;
    m_tags_isValid = false;

    m_created_at_isSet = false;
    m_created_at_isValid = false;

    m_modified_at_isSet = false;
    m_modified_at_isValid = false;
}

void OAIStartCodegenJobResponse_entity::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIStartCodegenJobResponse_entity::fromJsonObject(QJsonObject json) {

    m_id_isValid = ::OpenAPI::fromJsonValue(m_id, json[QString("id")]);
    m_id_isSet = !json[QString("id")].isNull() && m_id_isValid;

    m_app_id_isValid = ::OpenAPI::fromJsonValue(m_app_id, json[QString("appId")]);
    m_app_id_isSet = !json[QString("appId")].isNull() && m_app_id_isValid;

    m_environment_name_isValid = ::OpenAPI::fromJsonValue(m_environment_name, json[QString("environmentName")]);
    m_environment_name_isSet = !json[QString("environmentName")].isNull() && m_environment_name_isValid;

    m_render_config_isValid = ::OpenAPI::fromJsonValue(m_render_config, json[QString("renderConfig")]);
    m_render_config_isSet = !json[QString("renderConfig")].isNull() && m_render_config_isValid;

    m_generic_data_schema_isValid = ::OpenAPI::fromJsonValue(m_generic_data_schema, json[QString("genericDataSchema")]);
    m_generic_data_schema_isSet = !json[QString("genericDataSchema")].isNull() && m_generic_data_schema_isValid;

    m_auto_generate_forms_isValid = ::OpenAPI::fromJsonValue(m_auto_generate_forms, json[QString("autoGenerateForms")]);
    m_auto_generate_forms_isSet = !json[QString("autoGenerateForms")].isNull() && m_auto_generate_forms_isValid;

    m_features_isValid = ::OpenAPI::fromJsonValue(m_features, json[QString("features")]);
    m_features_isSet = !json[QString("features")].isNull() && m_features_isValid;

    m_status_isValid = ::OpenAPI::fromJsonValue(m_status, json[QString("status")]);
    m_status_isSet = !json[QString("status")].isNull() && m_status_isValid;

    m_status_message_isValid = ::OpenAPI::fromJsonValue(m_status_message, json[QString("statusMessage")]);
    m_status_message_isSet = !json[QString("statusMessage")].isNull() && m_status_message_isValid;

    m_asset_isValid = ::OpenAPI::fromJsonValue(m_asset, json[QString("asset")]);
    m_asset_isSet = !json[QString("asset")].isNull() && m_asset_isValid;

    m_tags_isValid = ::OpenAPI::fromJsonValue(m_tags, json[QString("tags")]);
    m_tags_isSet = !json[QString("tags")].isNull() && m_tags_isValid;

    m_created_at_isValid = ::OpenAPI::fromJsonValue(m_created_at, json[QString("createdAt")]);
    m_created_at_isSet = !json[QString("createdAt")].isNull() && m_created_at_isValid;

    m_modified_at_isValid = ::OpenAPI::fromJsonValue(m_modified_at, json[QString("modifiedAt")]);
    m_modified_at_isSet = !json[QString("modifiedAt")].isNull() && m_modified_at_isValid;
}

QString OAIStartCodegenJobResponse_entity::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIStartCodegenJobResponse_entity::asJsonObject() const {
    QJsonObject obj;
    if (m_id_isSet) {
        obj.insert(QString("id"), ::OpenAPI::toJsonValue(m_id));
    }
    if (m_app_id_isSet) {
        obj.insert(QString("appId"), ::OpenAPI::toJsonValue(m_app_id));
    }
    if (m_environment_name_isSet) {
        obj.insert(QString("environmentName"), ::OpenAPI::toJsonValue(m_environment_name));
    }
    if (m_render_config.isSet()) {
        obj.insert(QString("renderConfig"), ::OpenAPI::toJsonValue(m_render_config));
    }
    if (m_generic_data_schema.isSet()) {
        obj.insert(QString("genericDataSchema"), ::OpenAPI::toJsonValue(m_generic_data_schema));
    }
    if (m_auto_generate_forms_isSet) {
        obj.insert(QString("autoGenerateForms"), ::OpenAPI::toJsonValue(m_auto_generate_forms));
    }
    if (m_features.isSet()) {
        obj.insert(QString("features"), ::OpenAPI::toJsonValue(m_features));
    }
    if (m_status.isSet()) {
        obj.insert(QString("status"), ::OpenAPI::toJsonValue(m_status));
    }
    if (m_status_message_isSet) {
        obj.insert(QString("statusMessage"), ::OpenAPI::toJsonValue(m_status_message));
    }
    if (m_asset.isSet()) {
        obj.insert(QString("asset"), ::OpenAPI::toJsonValue(m_asset));
    }
    if (m_tags.isSet()) {
        obj.insert(QString("tags"), ::OpenAPI::toJsonValue(m_tags));
    }
    if (m_created_at_isSet) {
        obj.insert(QString("createdAt"), ::OpenAPI::toJsonValue(m_created_at));
    }
    if (m_modified_at_isSet) {
        obj.insert(QString("modifiedAt"), ::OpenAPI::toJsonValue(m_modified_at));
    }
    return obj;
}

QString OAIStartCodegenJobResponse_entity::getId() const {
    return m_id;
}
void OAIStartCodegenJobResponse_entity::setId(const QString &id) {
    m_id = id;
    m_id_isSet = true;
}

bool OAIStartCodegenJobResponse_entity::is_id_Set() const{
    return m_id_isSet;
}

bool OAIStartCodegenJobResponse_entity::is_id_Valid() const{
    return m_id_isValid;
}

QString OAIStartCodegenJobResponse_entity::getAppId() const {
    return m_app_id;
}
void OAIStartCodegenJobResponse_entity::setAppId(const QString &app_id) {
    m_app_id = app_id;
    m_app_id_isSet = true;
}

bool OAIStartCodegenJobResponse_entity::is_app_id_Set() const{
    return m_app_id_isSet;
}

bool OAIStartCodegenJobResponse_entity::is_app_id_Valid() const{
    return m_app_id_isValid;
}

QString OAIStartCodegenJobResponse_entity::getEnvironmentName() const {
    return m_environment_name;
}
void OAIStartCodegenJobResponse_entity::setEnvironmentName(const QString &environment_name) {
    m_environment_name = environment_name;
    m_environment_name_isSet = true;
}

bool OAIStartCodegenJobResponse_entity::is_environment_name_Set() const{
    return m_environment_name_isSet;
}

bool OAIStartCodegenJobResponse_entity::is_environment_name_Valid() const{
    return m_environment_name_isValid;
}

OAICodegenJobRenderConfig OAIStartCodegenJobResponse_entity::getRenderConfig() const {
    return m_render_config;
}
void OAIStartCodegenJobResponse_entity::setRenderConfig(const OAICodegenJobRenderConfig &render_config) {
    m_render_config = render_config;
    m_render_config_isSet = true;
}

bool OAIStartCodegenJobResponse_entity::is_render_config_Set() const{
    return m_render_config_isSet;
}

bool OAIStartCodegenJobResponse_entity::is_render_config_Valid() const{
    return m_render_config_isValid;
}

OAICodegenJobGenericDataSchema OAIStartCodegenJobResponse_entity::getGenericDataSchema() const {
    return m_generic_data_schema;
}
void OAIStartCodegenJobResponse_entity::setGenericDataSchema(const OAICodegenJobGenericDataSchema &generic_data_schema) {
    m_generic_data_schema = generic_data_schema;
    m_generic_data_schema_isSet = true;
}

bool OAIStartCodegenJobResponse_entity::is_generic_data_schema_Set() const{
    return m_generic_data_schema_isSet;
}

bool OAIStartCodegenJobResponse_entity::is_generic_data_schema_Valid() const{
    return m_generic_data_schema_isValid;
}

bool OAIStartCodegenJobResponse_entity::getAutoGenerateForms() const {
    return m_auto_generate_forms;
}
void OAIStartCodegenJobResponse_entity::setAutoGenerateForms(const bool &auto_generate_forms) {
    m_auto_generate_forms = auto_generate_forms;
    m_auto_generate_forms_isSet = true;
}

bool OAIStartCodegenJobResponse_entity::is_auto_generate_forms_Set() const{
    return m_auto_generate_forms_isSet;
}

bool OAIStartCodegenJobResponse_entity::is_auto_generate_forms_Valid() const{
    return m_auto_generate_forms_isValid;
}

OAICodegenFeatureFlags OAIStartCodegenJobResponse_entity::getFeatures() const {
    return m_features;
}
void OAIStartCodegenJobResponse_entity::setFeatures(const OAICodegenFeatureFlags &features) {
    m_features = features;
    m_features_isSet = true;
}

bool OAIStartCodegenJobResponse_entity::is_features_Set() const{
    return m_features_isSet;
}

bool OAIStartCodegenJobResponse_entity::is_features_Valid() const{
    return m_features_isValid;
}

OAICodegenJobStatus OAIStartCodegenJobResponse_entity::getStatus() const {
    return m_status;
}
void OAIStartCodegenJobResponse_entity::setStatus(const OAICodegenJobStatus &status) {
    m_status = status;
    m_status_isSet = true;
}

bool OAIStartCodegenJobResponse_entity::is_status_Set() const{
    return m_status_isSet;
}

bool OAIStartCodegenJobResponse_entity::is_status_Valid() const{
    return m_status_isValid;
}

QString OAIStartCodegenJobResponse_entity::getStatusMessage() const {
    return m_status_message;
}
void OAIStartCodegenJobResponse_entity::setStatusMessage(const QString &status_message) {
    m_status_message = status_message;
    m_status_message_isSet = true;
}

bool OAIStartCodegenJobResponse_entity::is_status_message_Set() const{
    return m_status_message_isSet;
}

bool OAIStartCodegenJobResponse_entity::is_status_message_Valid() const{
    return m_status_message_isValid;
}

OAICodegenJob_asset OAIStartCodegenJobResponse_entity::getAsset() const {
    return m_asset;
}
void OAIStartCodegenJobResponse_entity::setAsset(const OAICodegenJob_asset &asset) {
    m_asset = asset;
    m_asset_isSet = true;
}

bool OAIStartCodegenJobResponse_entity::is_asset_Set() const{
    return m_asset_isSet;
}

bool OAIStartCodegenJobResponse_entity::is_asset_Valid() const{
    return m_asset_isValid;
}

QMap OAIStartCodegenJobResponse_entity::getTags() const {
    return m_tags;
}
void OAIStartCodegenJobResponse_entity::setTags(const QMap &tags) {
    m_tags = tags;
    m_tags_isSet = true;
}

bool OAIStartCodegenJobResponse_entity::is_tags_Set() const{
    return m_tags_isSet;
}

bool OAIStartCodegenJobResponse_entity::is_tags_Valid() const{
    return m_tags_isValid;
}

QDateTime OAIStartCodegenJobResponse_entity::getCreatedAt() const {
    return m_created_at;
}
void OAIStartCodegenJobResponse_entity::setCreatedAt(const QDateTime &created_at) {
    m_created_at = created_at;
    m_created_at_isSet = true;
}

bool OAIStartCodegenJobResponse_entity::is_created_at_Set() const{
    return m_created_at_isSet;
}

bool OAIStartCodegenJobResponse_entity::is_created_at_Valid() const{
    return m_created_at_isValid;
}

QDateTime OAIStartCodegenJobResponse_entity::getModifiedAt() const {
    return m_modified_at;
}
void OAIStartCodegenJobResponse_entity::setModifiedAt(const QDateTime &modified_at) {
    m_modified_at = modified_at;
    m_modified_at_isSet = true;
}

bool OAIStartCodegenJobResponse_entity::is_modified_at_Set() const{
    return m_modified_at_isSet;
}

bool OAIStartCodegenJobResponse_entity::is_modified_at_Valid() const{
    return m_modified_at_isValid;
}

bool OAIStartCodegenJobResponse_entity::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_app_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_environment_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_render_config.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_generic_data_schema.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_auto_generate_forms_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_features.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_status.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_status_message_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_asset.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_tags.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_created_at_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_modified_at_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIStartCodegenJobResponse_entity::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_id_isValid && m_app_id_isValid && m_environment_name_isValid && true;
}

} // namespace OpenAPI
