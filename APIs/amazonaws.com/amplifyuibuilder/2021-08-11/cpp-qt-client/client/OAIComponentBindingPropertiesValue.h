/**
 * AWS Amplify UI Builder
 * <p>The Amplify UI Builder API provides a programmatic interface for creating and configuring user interface (UI) component libraries and themes for use in your Amplify applications. You can then connect these UI components to an application's backend Amazon Web Services resources.</p> <p>You can also use the Amplify Studio visual designer to create UI components and model data for an app. For more information, see <a href=\"https://docs.amplify.aws/console/adminui/intro\">Introduction</a> in the <i>Amplify Docs</i>.</p> <p>The Amplify Framework is a comprehensive set of SDKs, libraries, tools, and documentation for client app development. For more information, see the <a href=\"https://docs.amplify.aws/\">Amplify Framework</a>. For more information about deploying an Amplify application to Amazon Web Services, see the <a href=\"https://docs.aws.amazon.com/amplify/latest/userguide/welcome.html\">Amplify User Guide</a>.</p>
 *
 * The version of the OpenAPI document: 2021-08-11
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIComponentBindingPropertiesValue.h
 *
 * Represents the data binding configuration for a component at runtime. You can use &lt;code&gt;ComponentBindingPropertiesValue&lt;/code&gt; to add exposed properties to a component to allow different values to be entered when a component is reused in different places in an app.
 */

#ifndef OAIComponentBindingPropertiesValue_H
#define OAIComponentBindingPropertiesValue_H

#include <QJsonObject>

#include "OAIComponentBindingPropertiesValue_bindingProperties.h"
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIComponentBindingPropertiesValue_bindingProperties;

class OAIComponentBindingPropertiesValue : public OAIObject {
public:
    OAIComponentBindingPropertiesValue();
    OAIComponentBindingPropertiesValue(QString json);
    ~OAIComponentBindingPropertiesValue() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getType() const;
    void setType(const QString &type);
    bool is_type_Set() const;
    bool is_type_Valid() const;

    OAIComponentBindingPropertiesValue_bindingProperties getBindingProperties() const;
    void setBindingProperties(const OAIComponentBindingPropertiesValue_bindingProperties &binding_properties);
    bool is_binding_properties_Set() const;
    bool is_binding_properties_Valid() const;

    QString getDefaultValue() const;
    void setDefaultValue(const QString &default_value);
    bool is_default_value_Set() const;
    bool is_default_value_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_type;
    bool m_type_isSet;
    bool m_type_isValid;

    OAIComponentBindingPropertiesValue_bindingProperties m_binding_properties;
    bool m_binding_properties_isSet;
    bool m_binding_properties_isValid;

    QString m_default_value;
    bool m_default_value_isSet;
    bool m_default_value_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIComponentBindingPropertiesValue)

#endif // OAIComponentBindingPropertiesValue_H
