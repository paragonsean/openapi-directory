/**
 * AWS Amplify UI Builder
 * <p>The Amplify UI Builder API provides a programmatic interface for creating and configuring user interface (UI) component libraries and themes for use in your Amplify applications. You can then connect these UI components to an application's backend Amazon Web Services resources.</p> <p>You can also use the Amplify Studio visual designer to create UI components and model data for an app. For more information, see <a href=\"https://docs.amplify.aws/console/adminui/intro\">Introduction</a> in the <i>Amplify Docs</i>.</p> <p>The Amplify Framework is a comprehensive set of SDKs, libraries, tools, and documentation for client app development. For more information, see the <a href=\"https://docs.amplify.aws/\">Amplify Framework</a>. For more information about deploying an Amplify application to Amazon Web Services, see the <a href=\"https://docs.aws.amazon.com/amplify/latest/userguide/welcome.html\">Amplify User Guide</a>.</p>
 *
 * The version of the OpenAPI document: 2021-08-11
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.AwsAmplifyUiBuilder);
  }
}(this, function(expect, AwsAmplifyUiBuilder) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new AwsAmplifyUiBuilder.StartCodegenJobData();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('StartCodegenJobData', function() {
    it('should create an instance of StartCodegenJobData', function() {
      // uncomment below and update the code to test StartCodegenJobData
      //var instance = new AwsAmplifyUiBuilder.StartCodegenJobData();
      //expect(instance).to.be.a(AwsAmplifyUiBuilder.StartCodegenJobData);
    });

    it('should have the property renderConfig (base name: "renderConfig")', function() {
      // uncomment below and update the code to test the property renderConfig
      //var instance = new AwsAmplifyUiBuilder.StartCodegenJobData();
      //expect(instance).to.be();
    });

    it('should have the property genericDataSchema (base name: "genericDataSchema")', function() {
      // uncomment below and update the code to test the property genericDataSchema
      //var instance = new AwsAmplifyUiBuilder.StartCodegenJobData();
      //expect(instance).to.be();
    });

    it('should have the property autoGenerateForms (base name: "autoGenerateForms")', function() {
      // uncomment below and update the code to test the property autoGenerateForms
      //var instance = new AwsAmplifyUiBuilder.StartCodegenJobData();
      //expect(instance).to.be();
    });

    it('should have the property features (base name: "features")', function() {
      // uncomment below and update the code to test the property features
      //var instance = new AwsAmplifyUiBuilder.StartCodegenJobData();
      //expect(instance).to.be();
    });

    it('should have the property tags (base name: "tags")', function() {
      // uncomment below and update the code to test the property tags
      //var instance = new AwsAmplifyUiBuilder.StartCodegenJobData();
      //expect(instance).to.be();
    });

  });

}));
