/**
 * AWS Amplify UI Builder
 * <p>The Amplify UI Builder API provides a programmatic interface for creating and configuring user interface (UI) component libraries and themes for use in your Amplify applications. You can then connect these UI components to an application's backend Amazon Web Services resources.</p> <p>You can also use the Amplify Studio visual designer to create UI components and model data for an app. For more information, see <a href=\"https://docs.amplify.aws/console/adminui/intro\">Introduction</a> in the <i>Amplify Docs</i>.</p> <p>The Amplify Framework is a comprehensive set of SDKs, libraries, tools, and documentation for client app development. For more information, see the <a href=\"https://docs.amplify.aws/\">Amplify Framework</a>. For more information about deploying an Amplify application to Amazon Web Services, see the <a href=\"https://docs.aws.amazon.com/amplify/latest/userguide/welcome.html\">Amplify User Guide</a>.</p>
 *
 * The version of the OpenAPI document: 2021-08-11
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.AwsAmplifyUiBuilder);
  }
}(this, function(expect, AwsAmplifyUiBuilder) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new AwsAmplifyUiBuilder.FieldInputConfig();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('FieldInputConfig', function() {
    it('should create an instance of FieldInputConfig', function() {
      // uncomment below and update the code to test FieldInputConfig
      //var instance = new AwsAmplifyUiBuilder.FieldInputConfig();
      //expect(instance).to.be.a(AwsAmplifyUiBuilder.FieldInputConfig);
    });

    it('should have the property type (base name: "type")', function() {
      // uncomment below and update the code to test the property type
      //var instance = new AwsAmplifyUiBuilder.FieldInputConfig();
      //expect(instance).to.be();
    });

    it('should have the property required (base name: "required")', function() {
      // uncomment below and update the code to test the property required
      //var instance = new AwsAmplifyUiBuilder.FieldInputConfig();
      //expect(instance).to.be();
    });

    it('should have the property readOnly (base name: "readOnly")', function() {
      // uncomment below and update the code to test the property readOnly
      //var instance = new AwsAmplifyUiBuilder.FieldInputConfig();
      //expect(instance).to.be();
    });

    it('should have the property placeholder (base name: "placeholder")', function() {
      // uncomment below and update the code to test the property placeholder
      //var instance = new AwsAmplifyUiBuilder.FieldInputConfig();
      //expect(instance).to.be();
    });

    it('should have the property defaultValue (base name: "defaultValue")', function() {
      // uncomment below and update the code to test the property defaultValue
      //var instance = new AwsAmplifyUiBuilder.FieldInputConfig();
      //expect(instance).to.be();
    });

    it('should have the property descriptiveText (base name: "descriptiveText")', function() {
      // uncomment below and update the code to test the property descriptiveText
      //var instance = new AwsAmplifyUiBuilder.FieldInputConfig();
      //expect(instance).to.be();
    });

    it('should have the property defaultChecked (base name: "defaultChecked")', function() {
      // uncomment below and update the code to test the property defaultChecked
      //var instance = new AwsAmplifyUiBuilder.FieldInputConfig();
      //expect(instance).to.be();
    });

    it('should have the property defaultCountryCode (base name: "defaultCountryCode")', function() {
      // uncomment below and update the code to test the property defaultCountryCode
      //var instance = new AwsAmplifyUiBuilder.FieldInputConfig();
      //expect(instance).to.be();
    });

    it('should have the property valueMappings (base name: "valueMappings")', function() {
      // uncomment below and update the code to test the property valueMappings
      //var instance = new AwsAmplifyUiBuilder.FieldInputConfig();
      //expect(instance).to.be();
    });

    it('should have the property name (base name: "name")', function() {
      // uncomment below and update the code to test the property name
      //var instance = new AwsAmplifyUiBuilder.FieldInputConfig();
      //expect(instance).to.be();
    });

    it('should have the property minValue (base name: "minValue")', function() {
      // uncomment below and update the code to test the property minValue
      //var instance = new AwsAmplifyUiBuilder.FieldInputConfig();
      //expect(instance).to.be();
    });

    it('should have the property maxValue (base name: "maxValue")', function() {
      // uncomment below and update the code to test the property maxValue
      //var instance = new AwsAmplifyUiBuilder.FieldInputConfig();
      //expect(instance).to.be();
    });

    it('should have the property step (base name: "step")', function() {
      // uncomment below and update the code to test the property step
      //var instance = new AwsAmplifyUiBuilder.FieldInputConfig();
      //expect(instance).to.be();
    });

    it('should have the property value (base name: "value")', function() {
      // uncomment below and update the code to test the property value
      //var instance = new AwsAmplifyUiBuilder.FieldInputConfig();
      //expect(instance).to.be();
    });

    it('should have the property isArray (base name: "isArray")', function() {
      // uncomment below and update the code to test the property isArray
      //var instance = new AwsAmplifyUiBuilder.FieldInputConfig();
      //expect(instance).to.be();
    });

    it('should have the property fileUploaderConfig (base name: "fileUploaderConfig")', function() {
      // uncomment below and update the code to test the property fileUploaderConfig
      //var instance = new AwsAmplifyUiBuilder.FieldInputConfig();
      //expect(instance).to.be();
    });

  });

}));
