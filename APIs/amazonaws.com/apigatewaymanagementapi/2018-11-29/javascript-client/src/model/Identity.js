/**
 * AmazonApiGatewayManagementApi
 * The Amazon API Gateway Management API allows you to directly manage runtime aspects of your deployed APIs. To use it, you must explicitly set the SDK's endpoint to point to the endpoint of your deployed API. The endpoint will be of the form https://{api-id}.execute-api.{region}.amazonaws.com/{stage}, or will be the endpoint corresponding to your API's custom domain and base path, if applicable.
 *
 * The version of the OpenAPI document: 2018-11-29
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The Identity model module.
 * @module model/Identity
 * @version 2018-11-29
 */
class Identity {
    /**
     * Constructs a new <code>Identity</code>.
     * @alias module:model/Identity
     * @param sourceIp {String} 
     * @param userAgent {String} 
     */
    constructor(sourceIp, userAgent) { 
        
        Identity.initialize(this, sourceIp, userAgent);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, sourceIp, userAgent) { 
        obj['SourceIp'] = sourceIp;
        obj['UserAgent'] = userAgent;
    }

    /**
     * Constructs a <code>Identity</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/Identity} obj Optional instance to populate.
     * @return {module:model/Identity} The populated <code>Identity</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new Identity();

            if (data.hasOwnProperty('SourceIp')) {
                obj['SourceIp'] = ApiClient.convertToType(data['SourceIp'], 'String');
            }
            if (data.hasOwnProperty('UserAgent')) {
                obj['UserAgent'] = ApiClient.convertToType(data['UserAgent'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>Identity</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>Identity</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of Identity.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // validate the optional field `SourceIp`
        if (data['SourceIp']) { // data not null
          String.validateJSON(data['SourceIp']);
        }
        // validate the optional field `UserAgent`
        if (data['UserAgent']) { // data not null
          String.validateJSON(data['UserAgent']);
        }

        return true;
    }


}

Identity.RequiredProperties = ["SourceIp", "UserAgent"];

/**
 * @member {String} SourceIp
 */
Identity.prototype['SourceIp'] = undefined;

/**
 * @member {String} UserAgent
 */
Identity.prototype['UserAgent'] = undefined;






export default Identity;

