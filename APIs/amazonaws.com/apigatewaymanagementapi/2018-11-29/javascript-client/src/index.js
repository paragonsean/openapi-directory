/**
 * AmazonApiGatewayManagementApi
 * The Amazon API Gateway Management API allows you to directly manage runtime aspects of your deployed APIs. To use it, you must explicitly set the SDK's endpoint to point to the endpoint of your deployed API. The endpoint will be of the form https://{api-id}.execute-api.{region}.amazonaws.com/{stage}, or will be the endpoint corresponding to your API's custom domain and base path, if applicable.
 *
 * The version of the OpenAPI document: 2018-11-29
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from './ApiClient';
import GetConnectionResponse from './model/GetConnectionResponse';
import GetConnectionResponseIdentity from './model/GetConnectionResponseIdentity';
import Identity from './model/Identity';
import PostToConnectionRequest from './model/PostToConnectionRequest';
import DefaultApi from './api/DefaultApi';


/**
* The Amazon API Gateway Management API allows you to directly manage runtime aspects of your deployed APIs. To use it, you must explicitly set the SDK&#39;s endpoint to point to the endpoint of your deployed API. The endpoint will be of the form https://{api-id}.execute-api.{region}.amazonaws.com/{stage}, or will be the endpoint corresponding to your API&#39;s custom domain and base path, if applicable..<br>
* The <code>index</code> module provides access to constructors for all the classes which comprise the public API.
* <p>
* An AMD (recommended!) or CommonJS application will generally do something equivalent to the following:
* <pre>
* var AmazonApiGatewayManagementApi = require('index'); // See note below*.
* var xxxSvc = new AmazonApiGatewayManagementApi.XxxApi(); // Allocate the API class we're going to use.
* var yyyModel = new AmazonApiGatewayManagementApi.Yyy(); // Construct a model instance.
* yyyModel.someProperty = 'someValue';
* ...
* var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
* ...
* </pre>
* <em>*NOTE: For a top-level AMD script, use require(['index'], function(){...})
* and put the application logic within the callback function.</em>
* </p>
* <p>
* A non-AMD browser application (discouraged) might do something like this:
* <pre>
* var xxxSvc = new AmazonApiGatewayManagementApi.XxxApi(); // Allocate the API class we're going to use.
* var yyy = new AmazonApiGatewayManagementApi.Yyy(); // Construct a model instance.
* yyyModel.someProperty = 'someValue';
* ...
* var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
* ...
* </pre>
* </p>
* @module index
* @version 2018-11-29
*/
export {
    /**
     * The ApiClient constructor.
     * @property {module:ApiClient}
     */
    ApiClient,

    /**
     * The GetConnectionResponse model constructor.
     * @property {module:model/GetConnectionResponse}
     */
    GetConnectionResponse,

    /**
     * The GetConnectionResponseIdentity model constructor.
     * @property {module:model/GetConnectionResponseIdentity}
     */
    GetConnectionResponseIdentity,

    /**
     * The Identity model constructor.
     * @property {module:model/Identity}
     */
    Identity,

    /**
     * The PostToConnectionRequest model constructor.
     * @property {module:model/PostToConnectionRequest}
     */
    PostToConnectionRequest,

    /**
    * The DefaultApi service constructor.
    * @property {module:api/DefaultApi}
    */
    DefaultApi
};
