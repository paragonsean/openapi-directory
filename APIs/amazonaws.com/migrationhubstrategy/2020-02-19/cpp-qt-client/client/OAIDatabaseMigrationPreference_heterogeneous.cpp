/**
 * Migration Hub Strategy Recommendations
 * <p><fullname>Migration Hub Strategy Recommendations</fullname> <p>This API reference provides descriptions, syntax, and other details about each of the actions and data types for Migration Hub Strategy Recommendations (Strategy Recommendations). The topic for each action shows the API request parameters and the response. Alternatively, you can use one of the AWS SDKs to access an API that is tailored to the programming language or platform that you're using. For more information, see <a href=\"http://aws.amazon.com/tools/#SDKs\">AWS SDKs</a>.</p></p>
 *
 * The version of the OpenAPI document: 2020-02-19
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIDatabaseMigrationPreference_heterogeneous.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIDatabaseMigrationPreference_heterogeneous::OAIDatabaseMigrationPreference_heterogeneous(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIDatabaseMigrationPreference_heterogeneous::OAIDatabaseMigrationPreference_heterogeneous() {
    this->initializeModel();
}

OAIDatabaseMigrationPreference_heterogeneous::~OAIDatabaseMigrationPreference_heterogeneous() {}

void OAIDatabaseMigrationPreference_heterogeneous::initializeModel() {

    m_target_database_engine_isSet = false;
    m_target_database_engine_isValid = false;
}

void OAIDatabaseMigrationPreference_heterogeneous::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIDatabaseMigrationPreference_heterogeneous::fromJsonObject(QJsonObject json) {

    m_target_database_engine_isValid = ::OpenAPI::fromJsonValue(m_target_database_engine, json[QString("targetDatabaseEngine")]);
    m_target_database_engine_isSet = !json[QString("targetDatabaseEngine")].isNull() && m_target_database_engine_isValid;
}

QString OAIDatabaseMigrationPreference_heterogeneous::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIDatabaseMigrationPreference_heterogeneous::asJsonObject() const {
    QJsonObject obj;
    if (m_target_database_engine.isSet()) {
        obj.insert(QString("targetDatabaseEngine"), ::OpenAPI::toJsonValue(m_target_database_engine));
    }
    return obj;
}

QList OAIDatabaseMigrationPreference_heterogeneous::getTargetDatabaseEngine() const {
    return m_target_database_engine;
}
void OAIDatabaseMigrationPreference_heterogeneous::setTargetDatabaseEngine(const QList &target_database_engine) {
    m_target_database_engine = target_database_engine;
    m_target_database_engine_isSet = true;
}

bool OAIDatabaseMigrationPreference_heterogeneous::is_target_database_engine_Set() const{
    return m_target_database_engine_isSet;
}

bool OAIDatabaseMigrationPreference_heterogeneous::is_target_database_engine_Valid() const{
    return m_target_database_engine_isValid;
}

bool OAIDatabaseMigrationPreference_heterogeneous::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_target_database_engine.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIDatabaseMigrationPreference_heterogeneous::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_target_database_engine_isValid && true;
}

} // namespace OpenAPI
