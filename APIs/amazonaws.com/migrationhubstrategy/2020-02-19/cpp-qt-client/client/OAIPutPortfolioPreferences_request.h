/**
 * Migration Hub Strategy Recommendations
 * <p><fullname>Migration Hub Strategy Recommendations</fullname> <p>This API reference provides descriptions, syntax, and other details about each of the actions and data types for Migration Hub Strategy Recommendations (Strategy Recommendations). The topic for each action shows the API request parameters and the response. Alternatively, you can use one of the AWS SDKs to access an API that is tailored to the programming language or platform that you're using. For more information, see <a href=\"http://aws.amazon.com/tools/#SDKs\">AWS SDKs</a>.</p></p>
 *
 * The version of the OpenAPI document: 2020-02-19
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIPutPortfolioPreferences_request.h
 *
 * 
 */

#ifndef OAIPutPortfolioPreferences_request_H
#define OAIPutPortfolioPreferences_request_H

#include <QJsonObject>

#include "OAIPutPortfolioPreferences_request_applicationPreferences.h"
#include "OAIPutPortfolioPreferences_request_databasePreferences.h"
#include "OAIPutPortfolioPreferences_request_prioritizeBusinessGoals.h"
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIPutPortfolioPreferences_request_applicationPreferences;
class OAIPutPortfolioPreferences_request_databasePreferences;
class OAIPutPortfolioPreferences_request_prioritizeBusinessGoals;

class OAIPutPortfolioPreferences_request : public OAIObject {
public:
    OAIPutPortfolioPreferences_request();
    OAIPutPortfolioPreferences_request(QString json);
    ~OAIPutPortfolioPreferences_request() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getApplicationMode() const;
    void setApplicationMode(const QString &application_mode);
    bool is_application_mode_Set() const;
    bool is_application_mode_Valid() const;

    OAIPutPortfolioPreferences_request_applicationPreferences getApplicationPreferences() const;
    void setApplicationPreferences(const OAIPutPortfolioPreferences_request_applicationPreferences &application_preferences);
    bool is_application_preferences_Set() const;
    bool is_application_preferences_Valid() const;

    OAIPutPortfolioPreferences_request_databasePreferences getDatabasePreferences() const;
    void setDatabasePreferences(const OAIPutPortfolioPreferences_request_databasePreferences &database_preferences);
    bool is_database_preferences_Set() const;
    bool is_database_preferences_Valid() const;

    OAIPutPortfolioPreferences_request_prioritizeBusinessGoals getPrioritizeBusinessGoals() const;
    void setPrioritizeBusinessGoals(const OAIPutPortfolioPreferences_request_prioritizeBusinessGoals &prioritize_business_goals);
    bool is_prioritize_business_goals_Set() const;
    bool is_prioritize_business_goals_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_application_mode;
    bool m_application_mode_isSet;
    bool m_application_mode_isValid;

    OAIPutPortfolioPreferences_request_applicationPreferences m_application_preferences;
    bool m_application_preferences_isSet;
    bool m_application_preferences_isValid;

    OAIPutPortfolioPreferences_request_databasePreferences m_database_preferences;
    bool m_database_preferences_isSet;
    bool m_database_preferences_isValid;

    OAIPutPortfolioPreferences_request_prioritizeBusinessGoals m_prioritize_business_goals;
    bool m_prioritize_business_goals_isSet;
    bool m_prioritize_business_goals_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIPutPortfolioPreferences_request)

#endif // OAIPutPortfolioPreferences_request_H
