/**
 * Migration Hub Strategy Recommendations
 * <p><fullname>Migration Hub Strategy Recommendations</fullname> <p>This API reference provides descriptions, syntax, and other details about each of the actions and data types for Migration Hub Strategy Recommendations (Strategy Recommendations). The topic for each action shows the API request parameters and the response. Alternatively, you can use one of the AWS SDKs to access an API that is tailored to the programming language or platform that you're using. For more information, see <a href=\"http://aws.amazon.com/tools/#SDKs\">AWS SDKs</a>.</p></p>
 *
 * The version of the OpenAPI document: 2020-02-19
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAISourceCodeRepository.h
 *
 *  Object containing source code information that is linked to an application component. 
 */

#ifndef OAISourceCodeRepository_H
#define OAISourceCodeRepository_H

#include <QJsonObject>

#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAISourceCodeRepository : public OAIObject {
public:
    OAISourceCodeRepository();
    OAISourceCodeRepository(QString json);
    ~OAISourceCodeRepository() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getBranch() const;
    void setBranch(const QString &branch);
    bool is_branch_Set() const;
    bool is_branch_Valid() const;

    QString getProjectName() const;
    void setProjectName(const QString &project_name);
    bool is_project_name_Set() const;
    bool is_project_name_Valid() const;

    QString getRepository() const;
    void setRepository(const QString &repository);
    bool is_repository_Set() const;
    bool is_repository_Valid() const;

    QString getVersionControlType() const;
    void setVersionControlType(const QString &version_control_type);
    bool is_version_control_type_Set() const;
    bool is_version_control_type_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_branch;
    bool m_branch_isSet;
    bool m_branch_isValid;

    QString m_project_name;
    bool m_project_name_isSet;
    bool m_project_name_isValid;

    QString m_repository;
    bool m_repository_isSet;
    bool m_repository_isValid;

    QString m_version_control_type;
    bool m_version_control_type_isSet;
    bool m_version_control_type_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAISourceCodeRepository)

#endif // OAISourceCodeRepository_H
