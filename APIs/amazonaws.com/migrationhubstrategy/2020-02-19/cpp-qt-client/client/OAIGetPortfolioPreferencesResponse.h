/**
 * Migration Hub Strategy Recommendations
 * <p><fullname>Migration Hub Strategy Recommendations</fullname> <p>This API reference provides descriptions, syntax, and other details about each of the actions and data types for Migration Hub Strategy Recommendations (Strategy Recommendations). The topic for each action shows the API request parameters and the response. Alternatively, you can use one of the AWS SDKs to access an API that is tailored to the programming language or platform that you're using. For more information, see <a href=\"http://aws.amazon.com/tools/#SDKs\">AWS SDKs</a>.</p></p>
 *
 * The version of the OpenAPI document: 2020-02-19
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIGetPortfolioPreferencesResponse.h
 *
 * 
 */

#ifndef OAIGetPortfolioPreferencesResponse_H
#define OAIGetPortfolioPreferencesResponse_H

#include <QJsonObject>

#include "OAIApplicationMode.h"
#include "OAIGetPortfolioPreferencesResponse_applicationPreferences.h"
#include "OAIGetPortfolioPreferencesResponse_databasePreferences.h"
#include "OAIGetPortfolioPreferencesResponse_prioritizeBusinessGoals.h"

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIGetPortfolioPreferencesResponse_applicationPreferences;
class OAIGetPortfolioPreferencesResponse_databasePreferences;
class OAIGetPortfolioPreferencesResponse_prioritizeBusinessGoals;

class OAIGetPortfolioPreferencesResponse : public OAIObject {
public:
    OAIGetPortfolioPreferencesResponse();
    OAIGetPortfolioPreferencesResponse(QString json);
    ~OAIGetPortfolioPreferencesResponse() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAIApplicationMode getApplicationMode() const;
    void setApplicationMode(const OAIApplicationMode &application_mode);
    bool is_application_mode_Set() const;
    bool is_application_mode_Valid() const;

    OAIGetPortfolioPreferencesResponse_applicationPreferences getApplicationPreferences() const;
    void setApplicationPreferences(const OAIGetPortfolioPreferencesResponse_applicationPreferences &application_preferences);
    bool is_application_preferences_Set() const;
    bool is_application_preferences_Valid() const;

    OAIGetPortfolioPreferencesResponse_databasePreferences getDatabasePreferences() const;
    void setDatabasePreferences(const OAIGetPortfolioPreferencesResponse_databasePreferences &database_preferences);
    bool is_database_preferences_Set() const;
    bool is_database_preferences_Valid() const;

    OAIGetPortfolioPreferencesResponse_prioritizeBusinessGoals getPrioritizeBusinessGoals() const;
    void setPrioritizeBusinessGoals(const OAIGetPortfolioPreferencesResponse_prioritizeBusinessGoals &prioritize_business_goals);
    bool is_prioritize_business_goals_Set() const;
    bool is_prioritize_business_goals_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAIApplicationMode m_application_mode;
    bool m_application_mode_isSet;
    bool m_application_mode_isValid;

    OAIGetPortfolioPreferencesResponse_applicationPreferences m_application_preferences;
    bool m_application_preferences_isSet;
    bool m_application_preferences_isValid;

    OAIGetPortfolioPreferencesResponse_databasePreferences m_database_preferences;
    bool m_database_preferences_isSet;
    bool m_database_preferences_isValid;

    OAIGetPortfolioPreferencesResponse_prioritizeBusinessGoals m_prioritize_business_goals;
    bool m_prioritize_business_goals_isSet;
    bool m_prioritize_business_goals_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIGetPortfolioPreferencesResponse)

#endif // OAIGetPortfolioPreferencesResponse_H
