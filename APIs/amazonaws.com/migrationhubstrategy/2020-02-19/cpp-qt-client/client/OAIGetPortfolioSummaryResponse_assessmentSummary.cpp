/**
 * Migration Hub Strategy Recommendations
 * <p><fullname>Migration Hub Strategy Recommendations</fullname> <p>This API reference provides descriptions, syntax, and other details about each of the actions and data types for Migration Hub Strategy Recommendations (Strategy Recommendations). The topic for each action shows the API request parameters and the response. Alternatively, you can use one of the AWS SDKs to access an API that is tailored to the programming language or platform that you're using. For more information, see <a href=\"http://aws.amazon.com/tools/#SDKs\">AWS SDKs</a>.</p></p>
 *
 * The version of the OpenAPI document: 2020-02-19
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGetPortfolioSummaryResponse_assessmentSummary.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGetPortfolioSummaryResponse_assessmentSummary::OAIGetPortfolioSummaryResponse_assessmentSummary(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGetPortfolioSummaryResponse_assessmentSummary::OAIGetPortfolioSummaryResponse_assessmentSummary() {
    this->initializeModel();
}

OAIGetPortfolioSummaryResponse_assessmentSummary::~OAIGetPortfolioSummaryResponse_assessmentSummary() {}

void OAIGetPortfolioSummaryResponse_assessmentSummary::initializeModel() {

    m_antipattern_report_s3_object_isSet = false;
    m_antipattern_report_s3_object_isValid = false;

    m_antipattern_report_status_isSet = false;
    m_antipattern_report_status_isValid = false;

    m_antipattern_report_status_message_isSet = false;
    m_antipattern_report_status_message_isValid = false;

    m_last_analyzed_timestamp_isSet = false;
    m_last_analyzed_timestamp_isValid = false;

    m_list_antipattern_severity_summary_isSet = false;
    m_list_antipattern_severity_summary_isValid = false;

    m_list_application_component_status_summary_isSet = false;
    m_list_application_component_status_summary_isValid = false;

    m_list_application_component_strategy_summary_isSet = false;
    m_list_application_component_strategy_summary_isValid = false;

    m_list_application_component_summary_isSet = false;
    m_list_application_component_summary_isValid = false;

    m_list_server_status_summary_isSet = false;
    m_list_server_status_summary_isValid = false;

    m_list_server_strategy_summary_isSet = false;
    m_list_server_strategy_summary_isValid = false;

    m_list_server_summary_isSet = false;
    m_list_server_summary_isValid = false;
}

void OAIGetPortfolioSummaryResponse_assessmentSummary::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGetPortfolioSummaryResponse_assessmentSummary::fromJsonObject(QJsonObject json) {

    m_antipattern_report_s3_object_isValid = ::OpenAPI::fromJsonValue(m_antipattern_report_s3_object, json[QString("antipatternReportS3Object")]);
    m_antipattern_report_s3_object_isSet = !json[QString("antipatternReportS3Object")].isNull() && m_antipattern_report_s3_object_isValid;

    m_antipattern_report_status_isValid = ::OpenAPI::fromJsonValue(m_antipattern_report_status, json[QString("antipatternReportStatus")]);
    m_antipattern_report_status_isSet = !json[QString("antipatternReportStatus")].isNull() && m_antipattern_report_status_isValid;

    m_antipattern_report_status_message_isValid = ::OpenAPI::fromJsonValue(m_antipattern_report_status_message, json[QString("antipatternReportStatusMessage")]);
    m_antipattern_report_status_message_isSet = !json[QString("antipatternReportStatusMessage")].isNull() && m_antipattern_report_status_message_isValid;

    m_last_analyzed_timestamp_isValid = ::OpenAPI::fromJsonValue(m_last_analyzed_timestamp, json[QString("lastAnalyzedTimestamp")]);
    m_last_analyzed_timestamp_isSet = !json[QString("lastAnalyzedTimestamp")].isNull() && m_last_analyzed_timestamp_isValid;

    m_list_antipattern_severity_summary_isValid = ::OpenAPI::fromJsonValue(m_list_antipattern_severity_summary, json[QString("listAntipatternSeveritySummary")]);
    m_list_antipattern_severity_summary_isSet = !json[QString("listAntipatternSeveritySummary")].isNull() && m_list_antipattern_severity_summary_isValid;

    m_list_application_component_status_summary_isValid = ::OpenAPI::fromJsonValue(m_list_application_component_status_summary, json[QString("listApplicationComponentStatusSummary")]);
    m_list_application_component_status_summary_isSet = !json[QString("listApplicationComponentStatusSummary")].isNull() && m_list_application_component_status_summary_isValid;

    m_list_application_component_strategy_summary_isValid = ::OpenAPI::fromJsonValue(m_list_application_component_strategy_summary, json[QString("listApplicationComponentStrategySummary")]);
    m_list_application_component_strategy_summary_isSet = !json[QString("listApplicationComponentStrategySummary")].isNull() && m_list_application_component_strategy_summary_isValid;

    m_list_application_component_summary_isValid = ::OpenAPI::fromJsonValue(m_list_application_component_summary, json[QString("listApplicationComponentSummary")]);
    m_list_application_component_summary_isSet = !json[QString("listApplicationComponentSummary")].isNull() && m_list_application_component_summary_isValid;

    m_list_server_status_summary_isValid = ::OpenAPI::fromJsonValue(m_list_server_status_summary, json[QString("listServerStatusSummary")]);
    m_list_server_status_summary_isSet = !json[QString("listServerStatusSummary")].isNull() && m_list_server_status_summary_isValid;

    m_list_server_strategy_summary_isValid = ::OpenAPI::fromJsonValue(m_list_server_strategy_summary, json[QString("listServerStrategySummary")]);
    m_list_server_strategy_summary_isSet = !json[QString("listServerStrategySummary")].isNull() && m_list_server_strategy_summary_isValid;

    m_list_server_summary_isValid = ::OpenAPI::fromJsonValue(m_list_server_summary, json[QString("listServerSummary")]);
    m_list_server_summary_isSet = !json[QString("listServerSummary")].isNull() && m_list_server_summary_isValid;
}

QString OAIGetPortfolioSummaryResponse_assessmentSummary::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGetPortfolioSummaryResponse_assessmentSummary::asJsonObject() const {
    QJsonObject obj;
    if (m_antipattern_report_s3_object.isSet()) {
        obj.insert(QString("antipatternReportS3Object"), ::OpenAPI::toJsonValue(m_antipattern_report_s3_object));
    }
    if (m_antipattern_report_status.isSet()) {
        obj.insert(QString("antipatternReportStatus"), ::OpenAPI::toJsonValue(m_antipattern_report_status));
    }
    if (m_antipattern_report_status_message_isSet) {
        obj.insert(QString("antipatternReportStatusMessage"), ::OpenAPI::toJsonValue(m_antipattern_report_status_message));
    }
    if (m_last_analyzed_timestamp_isSet) {
        obj.insert(QString("lastAnalyzedTimestamp"), ::OpenAPI::toJsonValue(m_last_analyzed_timestamp));
    }
    if (m_list_antipattern_severity_summary.isSet()) {
        obj.insert(QString("listAntipatternSeveritySummary"), ::OpenAPI::toJsonValue(m_list_antipattern_severity_summary));
    }
    if (m_list_application_component_status_summary.isSet()) {
        obj.insert(QString("listApplicationComponentStatusSummary"), ::OpenAPI::toJsonValue(m_list_application_component_status_summary));
    }
    if (m_list_application_component_strategy_summary.isSet()) {
        obj.insert(QString("listApplicationComponentStrategySummary"), ::OpenAPI::toJsonValue(m_list_application_component_strategy_summary));
    }
    if (m_list_application_component_summary.isSet()) {
        obj.insert(QString("listApplicationComponentSummary"), ::OpenAPI::toJsonValue(m_list_application_component_summary));
    }
    if (m_list_server_status_summary.isSet()) {
        obj.insert(QString("listServerStatusSummary"), ::OpenAPI::toJsonValue(m_list_server_status_summary));
    }
    if (m_list_server_strategy_summary.isSet()) {
        obj.insert(QString("listServerStrategySummary"), ::OpenAPI::toJsonValue(m_list_server_strategy_summary));
    }
    if (m_list_server_summary.isSet()) {
        obj.insert(QString("listServerSummary"), ::OpenAPI::toJsonValue(m_list_server_summary));
    }
    return obj;
}

OAIAssessmentSummary_antipatternReportS3Object OAIGetPortfolioSummaryResponse_assessmentSummary::getAntipatternReportS3Object() const {
    return m_antipattern_report_s3_object;
}
void OAIGetPortfolioSummaryResponse_assessmentSummary::setAntipatternReportS3Object(const OAIAssessmentSummary_antipatternReportS3Object &antipattern_report_s3_object) {
    m_antipattern_report_s3_object = antipattern_report_s3_object;
    m_antipattern_report_s3_object_isSet = true;
}

bool OAIGetPortfolioSummaryResponse_assessmentSummary::is_antipattern_report_s3_object_Set() const{
    return m_antipattern_report_s3_object_isSet;
}

bool OAIGetPortfolioSummaryResponse_assessmentSummary::is_antipattern_report_s3_object_Valid() const{
    return m_antipattern_report_s3_object_isValid;
}

OAIAntipatternReportStatus OAIGetPortfolioSummaryResponse_assessmentSummary::getAntipatternReportStatus() const {
    return m_antipattern_report_status;
}
void OAIGetPortfolioSummaryResponse_assessmentSummary::setAntipatternReportStatus(const OAIAntipatternReportStatus &antipattern_report_status) {
    m_antipattern_report_status = antipattern_report_status;
    m_antipattern_report_status_isSet = true;
}

bool OAIGetPortfolioSummaryResponse_assessmentSummary::is_antipattern_report_status_Set() const{
    return m_antipattern_report_status_isSet;
}

bool OAIGetPortfolioSummaryResponse_assessmentSummary::is_antipattern_report_status_Valid() const{
    return m_antipattern_report_status_isValid;
}

QString OAIGetPortfolioSummaryResponse_assessmentSummary::getAntipatternReportStatusMessage() const {
    return m_antipattern_report_status_message;
}
void OAIGetPortfolioSummaryResponse_assessmentSummary::setAntipatternReportStatusMessage(const QString &antipattern_report_status_message) {
    m_antipattern_report_status_message = antipattern_report_status_message;
    m_antipattern_report_status_message_isSet = true;
}

bool OAIGetPortfolioSummaryResponse_assessmentSummary::is_antipattern_report_status_message_Set() const{
    return m_antipattern_report_status_message_isSet;
}

bool OAIGetPortfolioSummaryResponse_assessmentSummary::is_antipattern_report_status_message_Valid() const{
    return m_antipattern_report_status_message_isValid;
}

QDateTime OAIGetPortfolioSummaryResponse_assessmentSummary::getLastAnalyzedTimestamp() const {
    return m_last_analyzed_timestamp;
}
void OAIGetPortfolioSummaryResponse_assessmentSummary::setLastAnalyzedTimestamp(const QDateTime &last_analyzed_timestamp) {
    m_last_analyzed_timestamp = last_analyzed_timestamp;
    m_last_analyzed_timestamp_isSet = true;
}

bool OAIGetPortfolioSummaryResponse_assessmentSummary::is_last_analyzed_timestamp_Set() const{
    return m_last_analyzed_timestamp_isSet;
}

bool OAIGetPortfolioSummaryResponse_assessmentSummary::is_last_analyzed_timestamp_Valid() const{
    return m_last_analyzed_timestamp_isValid;
}

QList OAIGetPortfolioSummaryResponse_assessmentSummary::getListAntipatternSeveritySummary() const {
    return m_list_antipattern_severity_summary;
}
void OAIGetPortfolioSummaryResponse_assessmentSummary::setListAntipatternSeveritySummary(const QList &list_antipattern_severity_summary) {
    m_list_antipattern_severity_summary = list_antipattern_severity_summary;
    m_list_antipattern_severity_summary_isSet = true;
}

bool OAIGetPortfolioSummaryResponse_assessmentSummary::is_list_antipattern_severity_summary_Set() const{
    return m_list_antipattern_severity_summary_isSet;
}

bool OAIGetPortfolioSummaryResponse_assessmentSummary::is_list_antipattern_severity_summary_Valid() const{
    return m_list_antipattern_severity_summary_isValid;
}

QList OAIGetPortfolioSummaryResponse_assessmentSummary::getListApplicationComponentStatusSummary() const {
    return m_list_application_component_status_summary;
}
void OAIGetPortfolioSummaryResponse_assessmentSummary::setListApplicationComponentStatusSummary(const QList &list_application_component_status_summary) {
    m_list_application_component_status_summary = list_application_component_status_summary;
    m_list_application_component_status_summary_isSet = true;
}

bool OAIGetPortfolioSummaryResponse_assessmentSummary::is_list_application_component_status_summary_Set() const{
    return m_list_application_component_status_summary_isSet;
}

bool OAIGetPortfolioSummaryResponse_assessmentSummary::is_list_application_component_status_summary_Valid() const{
    return m_list_application_component_status_summary_isValid;
}

QList OAIGetPortfolioSummaryResponse_assessmentSummary::getListApplicationComponentStrategySummary() const {
    return m_list_application_component_strategy_summary;
}
void OAIGetPortfolioSummaryResponse_assessmentSummary::setListApplicationComponentStrategySummary(const QList &list_application_component_strategy_summary) {
    m_list_application_component_strategy_summary = list_application_component_strategy_summary;
    m_list_application_component_strategy_summary_isSet = true;
}

bool OAIGetPortfolioSummaryResponse_assessmentSummary::is_list_application_component_strategy_summary_Set() const{
    return m_list_application_component_strategy_summary_isSet;
}

bool OAIGetPortfolioSummaryResponse_assessmentSummary::is_list_application_component_strategy_summary_Valid() const{
    return m_list_application_component_strategy_summary_isValid;
}

QList OAIGetPortfolioSummaryResponse_assessmentSummary::getListApplicationComponentSummary() const {
    return m_list_application_component_summary;
}
void OAIGetPortfolioSummaryResponse_assessmentSummary::setListApplicationComponentSummary(const QList &list_application_component_summary) {
    m_list_application_component_summary = list_application_component_summary;
    m_list_application_component_summary_isSet = true;
}

bool OAIGetPortfolioSummaryResponse_assessmentSummary::is_list_application_component_summary_Set() const{
    return m_list_application_component_summary_isSet;
}

bool OAIGetPortfolioSummaryResponse_assessmentSummary::is_list_application_component_summary_Valid() const{
    return m_list_application_component_summary_isValid;
}

QList OAIGetPortfolioSummaryResponse_assessmentSummary::getListServerStatusSummary() const {
    return m_list_server_status_summary;
}
void OAIGetPortfolioSummaryResponse_assessmentSummary::setListServerStatusSummary(const QList &list_server_status_summary) {
    m_list_server_status_summary = list_server_status_summary;
    m_list_server_status_summary_isSet = true;
}

bool OAIGetPortfolioSummaryResponse_assessmentSummary::is_list_server_status_summary_Set() const{
    return m_list_server_status_summary_isSet;
}

bool OAIGetPortfolioSummaryResponse_assessmentSummary::is_list_server_status_summary_Valid() const{
    return m_list_server_status_summary_isValid;
}

QList OAIGetPortfolioSummaryResponse_assessmentSummary::getListServerStrategySummary() const {
    return m_list_server_strategy_summary;
}
void OAIGetPortfolioSummaryResponse_assessmentSummary::setListServerStrategySummary(const QList &list_server_strategy_summary) {
    m_list_server_strategy_summary = list_server_strategy_summary;
    m_list_server_strategy_summary_isSet = true;
}

bool OAIGetPortfolioSummaryResponse_assessmentSummary::is_list_server_strategy_summary_Set() const{
    return m_list_server_strategy_summary_isSet;
}

bool OAIGetPortfolioSummaryResponse_assessmentSummary::is_list_server_strategy_summary_Valid() const{
    return m_list_server_strategy_summary_isValid;
}

QList OAIGetPortfolioSummaryResponse_assessmentSummary::getListServerSummary() const {
    return m_list_server_summary;
}
void OAIGetPortfolioSummaryResponse_assessmentSummary::setListServerSummary(const QList &list_server_summary) {
    m_list_server_summary = list_server_summary;
    m_list_server_summary_isSet = true;
}

bool OAIGetPortfolioSummaryResponse_assessmentSummary::is_list_server_summary_Set() const{
    return m_list_server_summary_isSet;
}

bool OAIGetPortfolioSummaryResponse_assessmentSummary::is_list_server_summary_Valid() const{
    return m_list_server_summary_isValid;
}

bool OAIGetPortfolioSummaryResponse_assessmentSummary::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_antipattern_report_s3_object.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_antipattern_report_status.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_antipattern_report_status_message_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_last_analyzed_timestamp_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_list_antipattern_severity_summary.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_list_application_component_status_summary.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_list_application_component_strategy_summary.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_list_application_component_summary.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_list_server_status_summary.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_list_server_strategy_summary.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_list_server_summary.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGetPortfolioSummaryResponse_assessmentSummary::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
