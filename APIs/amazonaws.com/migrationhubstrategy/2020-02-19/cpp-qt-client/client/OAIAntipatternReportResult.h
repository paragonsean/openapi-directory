/**
 * Migration Hub Strategy Recommendations
 * <p><fullname>Migration Hub Strategy Recommendations</fullname> <p>This API reference provides descriptions, syntax, and other details about each of the actions and data types for Migration Hub Strategy Recommendations (Strategy Recommendations). The topic for each action shows the API request parameters and the response. Alternatively, you can use one of the AWS SDKs to access an API that is tailored to the programming language or platform that you're using. For more information, see <a href=\"http://aws.amazon.com/tools/#SDKs\">AWS SDKs</a>.</p></p>
 *
 * The version of the OpenAPI document: 2020-02-19
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIAntipatternReportResult.h
 *
 * The anti-pattern report result.
 */

#ifndef OAIAntipatternReportResult_H
#define OAIAntipatternReportResult_H

#include <QJsonObject>

#include "OAIAntipatternReportResult_analyzerName.h"
#include "OAIAntipatternReportStatus.h"
#include "OAIS3Object.h"
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIAntipatternReportResult_analyzerName;
class OAIS3Object;

class OAIAntipatternReportResult : public OAIObject {
public:
    OAIAntipatternReportResult();
    OAIAntipatternReportResult(QString json);
    ~OAIAntipatternReportResult() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAIAntipatternReportResult_analyzerName getAnalyzerName() const;
    void setAnalyzerName(const OAIAntipatternReportResult_analyzerName &analyzer_name);
    bool is_analyzer_name_Set() const;
    bool is_analyzer_name_Valid() const;

    OAIS3Object getAntiPatternReportS3Object() const;
    void setAntiPatternReportS3Object(const OAIS3Object &anti_pattern_report_s3_object);
    bool is_anti_pattern_report_s3_object_Set() const;
    bool is_anti_pattern_report_s3_object_Valid() const;

    OAIAntipatternReportStatus getAntipatternReportStatus() const;
    void setAntipatternReportStatus(const OAIAntipatternReportStatus &antipattern_report_status);
    bool is_antipattern_report_status_Set() const;
    bool is_antipattern_report_status_Valid() const;

    QString getAntipatternReportStatusMessage() const;
    void setAntipatternReportStatusMessage(const QString &antipattern_report_status_message);
    bool is_antipattern_report_status_message_Set() const;
    bool is_antipattern_report_status_message_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAIAntipatternReportResult_analyzerName m_analyzer_name;
    bool m_analyzer_name_isSet;
    bool m_analyzer_name_isValid;

    OAIS3Object m_anti_pattern_report_s3_object;
    bool m_anti_pattern_report_s3_object_isSet;
    bool m_anti_pattern_report_s3_object_isValid;

    OAIAntipatternReportStatus m_antipattern_report_status;
    bool m_antipattern_report_status_isSet;
    bool m_antipattern_report_status_isValid;

    QString m_antipattern_report_status_message;
    bool m_antipattern_report_status_message_isSet;
    bool m_antipattern_report_status_message_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIAntipatternReportResult)

#endif // OAIAntipatternReportResult_H
