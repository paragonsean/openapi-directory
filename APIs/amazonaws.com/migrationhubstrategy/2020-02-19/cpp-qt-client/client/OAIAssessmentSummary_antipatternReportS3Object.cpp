/**
 * Migration Hub Strategy Recommendations
 * <p><fullname>Migration Hub Strategy Recommendations</fullname> <p>This API reference provides descriptions, syntax, and other details about each of the actions and data types for Migration Hub Strategy Recommendations (Strategy Recommendations). The topic for each action shows the API request parameters and the response. Alternatively, you can use one of the AWS SDKs to access an API that is tailored to the programming language or platform that you're using. For more information, see <a href=\"http://aws.amazon.com/tools/#SDKs\">AWS SDKs</a>.</p></p>
 *
 * The version of the OpenAPI document: 2020-02-19
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIAssessmentSummary_antipatternReportS3Object.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIAssessmentSummary_antipatternReportS3Object::OAIAssessmentSummary_antipatternReportS3Object(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIAssessmentSummary_antipatternReportS3Object::OAIAssessmentSummary_antipatternReportS3Object() {
    this->initializeModel();
}

OAIAssessmentSummary_antipatternReportS3Object::~OAIAssessmentSummary_antipatternReportS3Object() {}

void OAIAssessmentSummary_antipatternReportS3Object::initializeModel() {

    m_s3_bucket_isSet = false;
    m_s3_bucket_isValid = false;

    m_s3key_isSet = false;
    m_s3key_isValid = false;
}

void OAIAssessmentSummary_antipatternReportS3Object::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIAssessmentSummary_antipatternReportS3Object::fromJsonObject(QJsonObject json) {

    m_s3_bucket_isValid = ::OpenAPI::fromJsonValue(m_s3_bucket, json[QString("s3Bucket")]);
    m_s3_bucket_isSet = !json[QString("s3Bucket")].isNull() && m_s3_bucket_isValid;

    m_s3key_isValid = ::OpenAPI::fromJsonValue(m_s3key, json[QString("s3key")]);
    m_s3key_isSet = !json[QString("s3key")].isNull() && m_s3key_isValid;
}

QString OAIAssessmentSummary_antipatternReportS3Object::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIAssessmentSummary_antipatternReportS3Object::asJsonObject() const {
    QJsonObject obj;
    if (m_s3_bucket_isSet) {
        obj.insert(QString("s3Bucket"), ::OpenAPI::toJsonValue(m_s3_bucket));
    }
    if (m_s3key_isSet) {
        obj.insert(QString("s3key"), ::OpenAPI::toJsonValue(m_s3key));
    }
    return obj;
}

QString OAIAssessmentSummary_antipatternReportS3Object::getS3Bucket() const {
    return m_s3_bucket;
}
void OAIAssessmentSummary_antipatternReportS3Object::setS3Bucket(const QString &s3_bucket) {
    m_s3_bucket = s3_bucket;
    m_s3_bucket_isSet = true;
}

bool OAIAssessmentSummary_antipatternReportS3Object::is_s3_bucket_Set() const{
    return m_s3_bucket_isSet;
}

bool OAIAssessmentSummary_antipatternReportS3Object::is_s3_bucket_Valid() const{
    return m_s3_bucket_isValid;
}

QString OAIAssessmentSummary_antipatternReportS3Object::getS3key() const {
    return m_s3key;
}
void OAIAssessmentSummary_antipatternReportS3Object::setS3key(const QString &s3key) {
    m_s3key = s3key;
    m_s3key_isSet = true;
}

bool OAIAssessmentSummary_antipatternReportS3Object::is_s3key_Set() const{
    return m_s3key_isSet;
}

bool OAIAssessmentSummary_antipatternReportS3Object::is_s3key_Valid() const{
    return m_s3key_isValid;
}

bool OAIAssessmentSummary_antipatternReportS3Object::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_s3_bucket_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_s3key_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIAssessmentSummary_antipatternReportS3Object::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
