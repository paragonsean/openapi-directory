/**
 * Migration Hub Strategy Recommendations
 * <p><fullname>Migration Hub Strategy Recommendations</fullname> <p>This API reference provides descriptions, syntax, and other details about each of the actions and data types for Migration Hub Strategy Recommendations (Strategy Recommendations). The topic for each action shows the API request parameters and the response. Alternatively, you can use one of the AWS SDKs to access an API that is tailored to the programming language or platform that you're using. For more information, see <a href=\"http://aws.amazon.com/tools/#SDKs\">AWS SDKs</a>.</p></p>
 *
 * The version of the OpenAPI document: 2020-02-19
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGetRecommendationReportDetailsResponse.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGetRecommendationReportDetailsResponse::OAIGetRecommendationReportDetailsResponse(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGetRecommendationReportDetailsResponse::OAIGetRecommendationReportDetailsResponse() {
    this->initializeModel();
}

OAIGetRecommendationReportDetailsResponse::~OAIGetRecommendationReportDetailsResponse() {}

void OAIGetRecommendationReportDetailsResponse::initializeModel() {

    m_id_isSet = false;
    m_id_isValid = false;

    m_recommendation_report_details_isSet = false;
    m_recommendation_report_details_isValid = false;
}

void OAIGetRecommendationReportDetailsResponse::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGetRecommendationReportDetailsResponse::fromJsonObject(QJsonObject json) {

    m_id_isValid = ::OpenAPI::fromJsonValue(m_id, json[QString("id")]);
    m_id_isSet = !json[QString("id")].isNull() && m_id_isValid;

    m_recommendation_report_details_isValid = ::OpenAPI::fromJsonValue(m_recommendation_report_details, json[QString("recommendationReportDetails")]);
    m_recommendation_report_details_isSet = !json[QString("recommendationReportDetails")].isNull() && m_recommendation_report_details_isValid;
}

QString OAIGetRecommendationReportDetailsResponse::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGetRecommendationReportDetailsResponse::asJsonObject() const {
    QJsonObject obj;
    if (m_id_isSet) {
        obj.insert(QString("id"), ::OpenAPI::toJsonValue(m_id));
    }
    if (m_recommendation_report_details.isSet()) {
        obj.insert(QString("recommendationReportDetails"), ::OpenAPI::toJsonValue(m_recommendation_report_details));
    }
    return obj;
}

QString OAIGetRecommendationReportDetailsResponse::getId() const {
    return m_id;
}
void OAIGetRecommendationReportDetailsResponse::setId(const QString &id) {
    m_id = id;
    m_id_isSet = true;
}

bool OAIGetRecommendationReportDetailsResponse::is_id_Set() const{
    return m_id_isSet;
}

bool OAIGetRecommendationReportDetailsResponse::is_id_Valid() const{
    return m_id_isValid;
}

OAIGetRecommendationReportDetailsResponse_recommendationReportDetails OAIGetRecommendationReportDetailsResponse::getRecommendationReportDetails() const {
    return m_recommendation_report_details;
}
void OAIGetRecommendationReportDetailsResponse::setRecommendationReportDetails(const OAIGetRecommendationReportDetailsResponse_recommendationReportDetails &recommendation_report_details) {
    m_recommendation_report_details = recommendation_report_details;
    m_recommendation_report_details_isSet = true;
}

bool OAIGetRecommendationReportDetailsResponse::is_recommendation_report_details_Set() const{
    return m_recommendation_report_details_isSet;
}

bool OAIGetRecommendationReportDetailsResponse::is_recommendation_report_details_Valid() const{
    return m_recommendation_report_details_isValid;
}

bool OAIGetRecommendationReportDetailsResponse::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_recommendation_report_details.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGetRecommendationReportDetailsResponse::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
