/**
 * Migration Hub Strategy Recommendations
 * <p><fullname>Migration Hub Strategy Recommendations</fullname> <p>This API reference provides descriptions, syntax, and other details about each of the actions and data types for Migration Hub Strategy Recommendations (Strategy Recommendations). The topic for each action shows the API request parameters and the response. Alternatively, you can use one of the AWS SDKs to access an API that is tailored to the programming language or platform that you're using. For more information, see <a href=\"http://aws.amazon.com/tools/#SDKs\">AWS SDKs</a>.</p></p>
 *
 * The version of the OpenAPI document: 2020-02-19
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIAssessmentStatus.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIAssessmentStatus::OAIAssessmentStatus(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIAssessmentStatus::OAIAssessmentStatus() {
    this->initializeModel();
}

OAIAssessmentStatus::~OAIAssessmentStatus() {}

void OAIAssessmentStatus::initializeModel() {

    m_value_isSet = false;
    m_value_isValid = false;
    m_value = eOAIAssessmentStatus::INVALID_VALUE_OPENAPI_GENERATED;
}

void OAIAssessmentStatus::fromJson(QString jsonString) {
    
    if ( jsonString.compare("IN_PROGRESS", Qt::CaseInsensitive) == 0) {
        m_value = eOAIAssessmentStatus::IN_PROGRESS;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("COMPLETE", Qt::CaseInsensitive) == 0) {
        m_value = eOAIAssessmentStatus::COMPLETE;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("FAILED", Qt::CaseInsensitive) == 0) {
        m_value = eOAIAssessmentStatus::FAILED;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("STOPPED", Qt::CaseInsensitive) == 0) {
        m_value = eOAIAssessmentStatus::STOPPED;
        m_value_isSet = m_value_isValid = true;
    }
}

void OAIAssessmentStatus::fromJsonValue(QJsonValue json) {
fromJson(json.toString());
}

QString OAIAssessmentStatus::asJson() const {
    
    QString val;
    switch (m_value){
        case eOAIAssessmentStatus::IN_PROGRESS:
            val = "IN_PROGRESS";
            break;
        case eOAIAssessmentStatus::COMPLETE:
            val = "COMPLETE";
            break;
        case eOAIAssessmentStatus::FAILED:
            val = "FAILED";
            break;
        case eOAIAssessmentStatus::STOPPED:
            val = "STOPPED";
            break;
        default:
            break;
    }
    return val;
}

QJsonValue OAIAssessmentStatus::asJsonValue() const {
    
    return QJsonValue(asJson());
}


OAIAssessmentStatus::eOAIAssessmentStatus OAIAssessmentStatus::getValue() const {
    return m_value;
}

void OAIAssessmentStatus::setValue(const OAIAssessmentStatus::eOAIAssessmentStatus& value){
    m_value = value;
    m_value_isSet = true;
}
bool OAIAssessmentStatus::isSet() const {
    
    return m_value_isSet;
}

bool OAIAssessmentStatus::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_value_isValid;
}

} // namespace OpenAPI
