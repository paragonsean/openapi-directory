/**
 * Migration Hub Strategy Recommendations
 * <p><fullname>Migration Hub Strategy Recommendations</fullname> <p>This API reference provides descriptions, syntax, and other details about each of the actions and data types for Migration Hub Strategy Recommendations (Strategy Recommendations). The topic for each action shows the API request parameters and the response. Alternatively, you can use one of the AWS SDKs to access an API that is tailored to the programming language or platform that you're using. For more information, see <a href=\"http://aws.amazon.com/tools/#SDKs\">AWS SDKs</a>.</p></p>
 *
 * The version of the OpenAPI document: 2020-02-19
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIStartAssessment_request.h
 *
 * 
 */

#ifndef OAIStartAssessment_request_H
#define OAIStartAssessment_request_H

#include <QJsonObject>

#include "OAIAssessmentTarget.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIAssessmentTarget;

class OAIStartAssessment_request : public OAIObject {
public:
    OAIStartAssessment_request();
    OAIStartAssessment_request(QString json);
    ~OAIStartAssessment_request() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QList<OAIAssessmentTarget> getAssessmentTargets() const;
    void setAssessmentTargets(const QList<OAIAssessmentTarget> &assessment_targets);
    bool is_assessment_targets_Set() const;
    bool is_assessment_targets_Valid() const;

    QString getS3bucketForAnalysisData() const;
    void setS3bucketForAnalysisData(const QString &s3bucket_for_analysis_data);
    bool is_s3bucket_for_analysis_data_Set() const;
    bool is_s3bucket_for_analysis_data_Valid() const;

    QString getS3bucketForReportData() const;
    void setS3bucketForReportData(const QString &s3bucket_for_report_data);
    bool is_s3bucket_for_report_data_Set() const;
    bool is_s3bucket_for_report_data_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QList<OAIAssessmentTarget> m_assessment_targets;
    bool m_assessment_targets_isSet;
    bool m_assessment_targets_isValid;

    QString m_s3bucket_for_analysis_data;
    bool m_s3bucket_for_analysis_data_isSet;
    bool m_s3bucket_for_analysis_data_isValid;

    QString m_s3bucket_for_report_data;
    bool m_s3bucket_for_report_data_isSet;
    bool m_s3bucket_for_report_data_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIStartAssessment_request)

#endif // OAIStartAssessment_request_H
