/**
 * Migration Hub Strategy Recommendations
 * <p><fullname>Migration Hub Strategy Recommendations</fullname> <p>This API reference provides descriptions, syntax, and other details about each of the actions and data types for Migration Hub Strategy Recommendations (Strategy Recommendations). The topic for each action shows the API request parameters and the response. Alternatively, you can use one of the AWS SDKs to access an API that is tailored to the programming language or platform that you're using. For more information, see <a href=\"http://aws.amazon.com/tools/#SDKs\">AWS SDKs</a>.</p></p>
 *
 * The version of the OpenAPI document: 2020-02-19
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIUpdateApplicationComponentConfig_request.h
 *
 * 
 */

#ifndef OAIUpdateApplicationComponentConfig_request_H
#define OAIUpdateApplicationComponentConfig_request_H

#include <QJsonObject>

#include "OAISourceCode.h"
#include "OAIUpdateApplicationComponentConfig_request_strategyOption.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAISourceCode;
class OAIUpdateApplicationComponentConfig_request_strategyOption;

class OAIUpdateApplicationComponentConfig_request : public OAIObject {
public:
    OAIUpdateApplicationComponentConfig_request();
    OAIUpdateApplicationComponentConfig_request(QString json);
    ~OAIUpdateApplicationComponentConfig_request() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getAppType() const;
    void setAppType(const QString &app_type);
    bool is_app_type_Set() const;
    bool is_app_type_Valid() const;

    QString getApplicationComponentId() const;
    void setApplicationComponentId(const QString &application_component_id);
    bool is_application_component_id_Set() const;
    bool is_application_component_id_Valid() const;

    bool isConfigureOnly() const;
    void setConfigureOnly(const bool &configure_only);
    bool is_configure_only_Set() const;
    bool is_configure_only_Valid() const;

    QString getInclusionStatus() const;
    void setInclusionStatus(const QString &inclusion_status);
    bool is_inclusion_status_Set() const;
    bool is_inclusion_status_Valid() const;

    QString getSecretsManagerKey() const;
    void setSecretsManagerKey(const QString &secrets_manager_key);
    bool is_secrets_manager_key_Set() const;
    bool is_secrets_manager_key_Valid() const;

    QList<OAISourceCode> getSourceCodeList() const;
    void setSourceCodeList(const QList<OAISourceCode> &source_code_list);
    bool is_source_code_list_Set() const;
    bool is_source_code_list_Valid() const;

    OAIUpdateApplicationComponentConfig_request_strategyOption getStrategyOption() const;
    void setStrategyOption(const OAIUpdateApplicationComponentConfig_request_strategyOption &strategy_option);
    bool is_strategy_option_Set() const;
    bool is_strategy_option_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_app_type;
    bool m_app_type_isSet;
    bool m_app_type_isValid;

    QString m_application_component_id;
    bool m_application_component_id_isSet;
    bool m_application_component_id_isValid;

    bool m_configure_only;
    bool m_configure_only_isSet;
    bool m_configure_only_isValid;

    QString m_inclusion_status;
    bool m_inclusion_status_isSet;
    bool m_inclusion_status_isValid;

    QString m_secrets_manager_key;
    bool m_secrets_manager_key_isSet;
    bool m_secrets_manager_key_isValid;

    QList<OAISourceCode> m_source_code_list;
    bool m_source_code_list_isSet;
    bool m_source_code_list_isValid;

    OAIUpdateApplicationComponentConfig_request_strategyOption m_strategy_option;
    bool m_strategy_option_isSet;
    bool m_strategy_option_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIUpdateApplicationComponentConfig_request)

#endif // OAIUpdateApplicationComponentConfig_request_H
