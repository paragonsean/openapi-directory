/**
 * Migration Hub Strategy Recommendations
 * <p><fullname>Migration Hub Strategy Recommendations</fullname> <p>This API reference provides descriptions, syntax, and other details about each of the actions and data types for Migration Hub Strategy Recommendations (Strategy Recommendations). The topic for each action shows the API request parameters and the response. Alternatively, you can use one of the AWS SDKs to access an API that is tailored to the programming language or platform that you're using. For more information, see <a href=\"http://aws.amazon.com/tools/#SDKs\">AWS SDKs</a>.</p></p>
 *
 * The version of the OpenAPI document: 2020-02-19
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIStartRecommendationReportGenerationRequest.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIStartRecommendationReportGenerationRequest::OAIStartRecommendationReportGenerationRequest(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIStartRecommendationReportGenerationRequest::OAIStartRecommendationReportGenerationRequest() {
    this->initializeModel();
}

OAIStartRecommendationReportGenerationRequest::~OAIStartRecommendationReportGenerationRequest() {}

void OAIStartRecommendationReportGenerationRequest::initializeModel() {

    m_group_id_filter_isSet = false;
    m_group_id_filter_isValid = false;

    m_output_format_isSet = false;
    m_output_format_isValid = false;
}

void OAIStartRecommendationReportGenerationRequest::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIStartRecommendationReportGenerationRequest::fromJsonObject(QJsonObject json) {

    m_group_id_filter_isValid = ::OpenAPI::fromJsonValue(m_group_id_filter, json[QString("groupIdFilter")]);
    m_group_id_filter_isSet = !json[QString("groupIdFilter")].isNull() && m_group_id_filter_isValid;

    m_output_format_isValid = ::OpenAPI::fromJsonValue(m_output_format, json[QString("outputFormat")]);
    m_output_format_isSet = !json[QString("outputFormat")].isNull() && m_output_format_isValid;
}

QString OAIStartRecommendationReportGenerationRequest::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIStartRecommendationReportGenerationRequest::asJsonObject() const {
    QJsonObject obj;
    if (m_group_id_filter.isSet()) {
        obj.insert(QString("groupIdFilter"), ::OpenAPI::toJsonValue(m_group_id_filter));
    }
    if (m_output_format.isSet()) {
        obj.insert(QString("outputFormat"), ::OpenAPI::toJsonValue(m_output_format));
    }
    return obj;
}

QList OAIStartRecommendationReportGenerationRequest::getGroupIdFilter() const {
    return m_group_id_filter;
}
void OAIStartRecommendationReportGenerationRequest::setGroupIdFilter(const QList &group_id_filter) {
    m_group_id_filter = group_id_filter;
    m_group_id_filter_isSet = true;
}

bool OAIStartRecommendationReportGenerationRequest::is_group_id_filter_Set() const{
    return m_group_id_filter_isSet;
}

bool OAIStartRecommendationReportGenerationRequest::is_group_id_filter_Valid() const{
    return m_group_id_filter_isValid;
}

OAIOutputFormat OAIStartRecommendationReportGenerationRequest::getOutputFormat() const {
    return m_output_format;
}
void OAIStartRecommendationReportGenerationRequest::setOutputFormat(const OAIOutputFormat &output_format) {
    m_output_format = output_format;
    m_output_format_isSet = true;
}

bool OAIStartRecommendationReportGenerationRequest::is_output_format_Set() const{
    return m_output_format_isSet;
}

bool OAIStartRecommendationReportGenerationRequest::is_output_format_Valid() const{
    return m_output_format_isValid;
}

bool OAIStartRecommendationReportGenerationRequest::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_group_id_filter.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_output_format.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIStartRecommendationReportGenerationRequest::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
