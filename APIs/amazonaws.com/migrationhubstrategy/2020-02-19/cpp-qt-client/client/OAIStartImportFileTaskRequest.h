/**
 * Migration Hub Strategy Recommendations
 * <p><fullname>Migration Hub Strategy Recommendations</fullname> <p>This API reference provides descriptions, syntax, and other details about each of the actions and data types for Migration Hub Strategy Recommendations (Strategy Recommendations). The topic for each action shows the API request parameters and the response. Alternatively, you can use one of the AWS SDKs to access an API that is tailored to the programming language or platform that you're using. For more information, see <a href=\"http://aws.amazon.com/tools/#SDKs\">AWS SDKs</a>.</p></p>
 *
 * The version of the OpenAPI document: 2020-02-19
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIStartImportFileTaskRequest.h
 *
 * 
 */

#ifndef OAIStartImportFileTaskRequest_H
#define OAIStartImportFileTaskRequest_H

#include <QJsonObject>

#include "OAIDataSourceType.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIStartImportFileTaskRequest : public OAIObject {
public:
    OAIStartImportFileTaskRequest();
    OAIStartImportFileTaskRequest(QString json);
    ~OAIStartImportFileTaskRequest() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getS3Bucket() const;
    void setS3Bucket(const QString &s3_bucket);
    bool is_s3_bucket_Set() const;
    bool is_s3_bucket_Valid() const;

    OAIDataSourceType getDataSourceType() const;
    void setDataSourceType(const OAIDataSourceType &data_source_type);
    bool is_data_source_type_Set() const;
    bool is_data_source_type_Valid() const;

    QList getGroupId() const;
    void setGroupId(const QList &group_id);
    bool is_group_id_Set() const;
    bool is_group_id_Valid() const;

    QString getName() const;
    void setName(const QString &name);
    bool is_name_Set() const;
    bool is_name_Valid() const;

    QString getS3bucketForReportData() const;
    void setS3bucketForReportData(const QString &s3bucket_for_report_data);
    bool is_s3bucket_for_report_data_Set() const;
    bool is_s3bucket_for_report_data_Valid() const;

    QString getS3key() const;
    void setS3key(const QString &s3key);
    bool is_s3key_Set() const;
    bool is_s3key_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_s3_bucket;
    bool m_s3_bucket_isSet;
    bool m_s3_bucket_isValid;

    OAIDataSourceType m_data_source_type;
    bool m_data_source_type_isSet;
    bool m_data_source_type_isValid;

    QList m_group_id;
    bool m_group_id_isSet;
    bool m_group_id_isValid;

    QString m_name;
    bool m_name_isSet;
    bool m_name_isValid;

    QString m_s3bucket_for_report_data;
    bool m_s3bucket_for_report_data_isSet;
    bool m_s3bucket_for_report_data_isValid;

    QString m_s3key;
    bool m_s3key_isSet;
    bool m_s3key_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIStartImportFileTaskRequest)

#endif // OAIStartImportFileTaskRequest_H
