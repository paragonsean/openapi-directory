/**
 * Migration Hub Strategy Recommendations
 * <p><fullname>Migration Hub Strategy Recommendations</fullname> <p>This API reference provides descriptions, syntax, and other details about each of the actions and data types for Migration Hub Strategy Recommendations (Strategy Recommendations). The topic for each action shows the API request parameters and the response. Alternatively, you can use one of the AWS SDKs to access an API that is tailored to the programming language or platform that you're using. For more information, see <a href=\"http://aws.amazon.com/tools/#SDKs\">AWS SDKs</a>.</p></p>
 *
 * The version of the OpenAPI document: 2020-02-19
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIAppUnitError.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIAppUnitError::OAIAppUnitError(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIAppUnitError::OAIAppUnitError() {
    this->initializeModel();
}

OAIAppUnitError::~OAIAppUnitError() {}

void OAIAppUnitError::initializeModel() {

    m_app_unit_error_category_isSet = false;
    m_app_unit_error_category_isValid = false;
}

void OAIAppUnitError::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIAppUnitError::fromJsonObject(QJsonObject json) {

    m_app_unit_error_category_isValid = ::OpenAPI::fromJsonValue(m_app_unit_error_category, json[QString("appUnitErrorCategory")]);
    m_app_unit_error_category_isSet = !json[QString("appUnitErrorCategory")].isNull() && m_app_unit_error_category_isValid;
}

QString OAIAppUnitError::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIAppUnitError::asJsonObject() const {
    QJsonObject obj;
    if (m_app_unit_error_category.isSet()) {
        obj.insert(QString("appUnitErrorCategory"), ::OpenAPI::toJsonValue(m_app_unit_error_category));
    }
    return obj;
}

OAIAppUnitErrorCategory OAIAppUnitError::getAppUnitErrorCategory() const {
    return m_app_unit_error_category;
}
void OAIAppUnitError::setAppUnitErrorCategory(const OAIAppUnitErrorCategory &app_unit_error_category) {
    m_app_unit_error_category = app_unit_error_category;
    m_app_unit_error_category_isSet = true;
}

bool OAIAppUnitError::is_app_unit_error_category_Set() const{
    return m_app_unit_error_category_isSet;
}

bool OAIAppUnitError::is_app_unit_error_category_Valid() const{
    return m_app_unit_error_category_isValid;
}

bool OAIAppUnitError::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_app_unit_error_category.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIAppUnitError::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
