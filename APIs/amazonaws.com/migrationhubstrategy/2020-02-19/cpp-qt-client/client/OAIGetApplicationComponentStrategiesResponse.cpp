/**
 * Migration Hub Strategy Recommendations
 * <p><fullname>Migration Hub Strategy Recommendations</fullname> <p>This API reference provides descriptions, syntax, and other details about each of the actions and data types for Migration Hub Strategy Recommendations (Strategy Recommendations). The topic for each action shows the API request parameters and the response. Alternatively, you can use one of the AWS SDKs to access an API that is tailored to the programming language or platform that you're using. For more information, see <a href=\"http://aws.amazon.com/tools/#SDKs\">AWS SDKs</a>.</p></p>
 *
 * The version of the OpenAPI document: 2020-02-19
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGetApplicationComponentStrategiesResponse.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGetApplicationComponentStrategiesResponse::OAIGetApplicationComponentStrategiesResponse(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGetApplicationComponentStrategiesResponse::OAIGetApplicationComponentStrategiesResponse() {
    this->initializeModel();
}

OAIGetApplicationComponentStrategiesResponse::~OAIGetApplicationComponentStrategiesResponse() {}

void OAIGetApplicationComponentStrategiesResponse::initializeModel() {

    m_application_component_strategies_isSet = false;
    m_application_component_strategies_isValid = false;
}

void OAIGetApplicationComponentStrategiesResponse::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGetApplicationComponentStrategiesResponse::fromJsonObject(QJsonObject json) {

    m_application_component_strategies_isValid = ::OpenAPI::fromJsonValue(m_application_component_strategies, json[QString("applicationComponentStrategies")]);
    m_application_component_strategies_isSet = !json[QString("applicationComponentStrategies")].isNull() && m_application_component_strategies_isValid;
}

QString OAIGetApplicationComponentStrategiesResponse::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGetApplicationComponentStrategiesResponse::asJsonObject() const {
    QJsonObject obj;
    if (m_application_component_strategies.isSet()) {
        obj.insert(QString("applicationComponentStrategies"), ::OpenAPI::toJsonValue(m_application_component_strategies));
    }
    return obj;
}

QList OAIGetApplicationComponentStrategiesResponse::getApplicationComponentStrategies() const {
    return m_application_component_strategies;
}
void OAIGetApplicationComponentStrategiesResponse::setApplicationComponentStrategies(const QList &application_component_strategies) {
    m_application_component_strategies = application_component_strategies;
    m_application_component_strategies_isSet = true;
}

bool OAIGetApplicationComponentStrategiesResponse::is_application_component_strategies_Set() const{
    return m_application_component_strategies_isSet;
}

bool OAIGetApplicationComponentStrategiesResponse::is_application_component_strategies_Valid() const{
    return m_application_component_strategies_isValid;
}

bool OAIGetApplicationComponentStrategiesResponse::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_application_component_strategies.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGetApplicationComponentStrategiesResponse::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
