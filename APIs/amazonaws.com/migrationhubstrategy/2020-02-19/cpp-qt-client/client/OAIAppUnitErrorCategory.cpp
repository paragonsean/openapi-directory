/**
 * Migration Hub Strategy Recommendations
 * <p><fullname>Migration Hub Strategy Recommendations</fullname> <p>This API reference provides descriptions, syntax, and other details about each of the actions and data types for Migration Hub Strategy Recommendations (Strategy Recommendations). The topic for each action shows the API request parameters and the response. Alternatively, you can use one of the AWS SDKs to access an API that is tailored to the programming language or platform that you're using. For more information, see <a href=\"http://aws.amazon.com/tools/#SDKs\">AWS SDKs</a>.</p></p>
 *
 * The version of the OpenAPI document: 2020-02-19
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIAppUnitErrorCategory.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIAppUnitErrorCategory::OAIAppUnitErrorCategory(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIAppUnitErrorCategory::OAIAppUnitErrorCategory() {
    this->initializeModel();
}

OAIAppUnitErrorCategory::~OAIAppUnitErrorCategory() {}

void OAIAppUnitErrorCategory::initializeModel() {

    m_value_isSet = false;
    m_value_isValid = false;
    m_value = eOAIAppUnitErrorCategory::INVALID_VALUE_OPENAPI_GENERATED;
}

void OAIAppUnitErrorCategory::fromJson(QString jsonString) {
    
    if ( jsonString.compare("CREDENTIAL_ERROR", Qt::CaseInsensitive) == 0) {
        m_value = eOAIAppUnitErrorCategory::CREDENTIAL_ERROR;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("CONNECTIVITY_ERROR", Qt::CaseInsensitive) == 0) {
        m_value = eOAIAppUnitErrorCategory::CONNECTIVITY_ERROR;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("PERMISSION_ERROR", Qt::CaseInsensitive) == 0) {
        m_value = eOAIAppUnitErrorCategory::PERMISSION_ERROR;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("UNSUPPORTED_ERROR", Qt::CaseInsensitive) == 0) {
        m_value = eOAIAppUnitErrorCategory::UNSUPPORTED_ERROR;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("OTHER_ERROR", Qt::CaseInsensitive) == 0) {
        m_value = eOAIAppUnitErrorCategory::OTHER_ERROR;
        m_value_isSet = m_value_isValid = true;
    }
}

void OAIAppUnitErrorCategory::fromJsonValue(QJsonValue json) {
fromJson(json.toString());
}

QString OAIAppUnitErrorCategory::asJson() const {
    
    QString val;
    switch (m_value){
        case eOAIAppUnitErrorCategory::CREDENTIAL_ERROR:
            val = "CREDENTIAL_ERROR";
            break;
        case eOAIAppUnitErrorCategory::CONNECTIVITY_ERROR:
            val = "CONNECTIVITY_ERROR";
            break;
        case eOAIAppUnitErrorCategory::PERMISSION_ERROR:
            val = "PERMISSION_ERROR";
            break;
        case eOAIAppUnitErrorCategory::UNSUPPORTED_ERROR:
            val = "UNSUPPORTED_ERROR";
            break;
        case eOAIAppUnitErrorCategory::OTHER_ERROR:
            val = "OTHER_ERROR";
            break;
        default:
            break;
    }
    return val;
}

QJsonValue OAIAppUnitErrorCategory::asJsonValue() const {
    
    return QJsonValue(asJson());
}


OAIAppUnitErrorCategory::eOAIAppUnitErrorCategory OAIAppUnitErrorCategory::getValue() const {
    return m_value;
}

void OAIAppUnitErrorCategory::setValue(const OAIAppUnitErrorCategory::eOAIAppUnitErrorCategory& value){
    m_value = value;
    m_value_isSet = true;
}
bool OAIAppUnitErrorCategory::isSet() const {
    
    return m_value_isSet;
}

bool OAIAppUnitErrorCategory::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_value_isValid;
}

} // namespace OpenAPI
