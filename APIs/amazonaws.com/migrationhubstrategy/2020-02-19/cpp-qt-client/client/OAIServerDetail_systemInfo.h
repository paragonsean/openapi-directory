/**
 * Migration Hub Strategy Recommendations
 * <p><fullname>Migration Hub Strategy Recommendations</fullname> <p>This API reference provides descriptions, syntax, and other details about each of the actions and data types for Migration Hub Strategy Recommendations (Strategy Recommendations). The topic for each action shows the API request parameters and the response. Alternatively, you can use one of the AWS SDKs to access an API that is tailored to the programming language or platform that you're using. For more information, see <a href=\"http://aws.amazon.com/tools/#SDKs\">AWS SDKs</a>.</p></p>
 *
 * The version of the OpenAPI document: 2020-02-19
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIServerDetail_systemInfo.h
 *
 * 
 */

#ifndef OAIServerDetail_systemInfo_H
#define OAIServerDetail_systemInfo_H

#include <QJsonObject>

#include "OAISystemInfo_osInfo.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAISystemInfo_osInfo;

class OAIServerDetail_systemInfo : public OAIObject {
public:
    OAIServerDetail_systemInfo();
    OAIServerDetail_systemInfo(QString json);
    ~OAIServerDetail_systemInfo() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getCpuArchitecture() const;
    void setCpuArchitecture(const QString &cpu_architecture);
    bool is_cpu_architecture_Set() const;
    bool is_cpu_architecture_Valid() const;

    QString getFileSystemType() const;
    void setFileSystemType(const QString &file_system_type);
    bool is_file_system_type_Set() const;
    bool is_file_system_type_Valid() const;

    QList getNetworkInfoList() const;
    void setNetworkInfoList(const QList &network_info_list);
    bool is_network_info_list_Set() const;
    bool is_network_info_list_Valid() const;

    OAISystemInfo_osInfo getOsInfo() const;
    void setOsInfo(const OAISystemInfo_osInfo &os_info);
    bool is_os_info_Set() const;
    bool is_os_info_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_cpu_architecture;
    bool m_cpu_architecture_isSet;
    bool m_cpu_architecture_isValid;

    QString m_file_system_type;
    bool m_file_system_type_isSet;
    bool m_file_system_type_isValid;

    QList m_network_info_list;
    bool m_network_info_list_isSet;
    bool m_network_info_list_isValid;

    OAISystemInfo_osInfo m_os_info;
    bool m_os_info_isSet;
    bool m_os_info_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIServerDetail_systemInfo)

#endif // OAIServerDetail_systemInfo_H
