/**
 * Migration Hub Strategy Recommendations
 * <p><fullname>Migration Hub Strategy Recommendations</fullname> <p>This API reference provides descriptions, syntax, and other details about each of the actions and data types for Migration Hub Strategy Recommendations (Strategy Recommendations). The topic for each action shows the API request parameters and the response. Alternatively, you can use one of the AWS SDKs to access an API that is tailored to the programming language or platform that you're using. For more information, see <a href=\"http://aws.amazon.com/tools/#SDKs\">AWS SDKs</a>.</p></p>
 *
 * The version of the OpenAPI document: 2020-02-19
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIVersionControlType.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIVersionControlType::OAIVersionControlType(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIVersionControlType::OAIVersionControlType() {
    this->initializeModel();
}

OAIVersionControlType::~OAIVersionControlType() {}

void OAIVersionControlType::initializeModel() {

    m_value_isSet = false;
    m_value_isValid = false;
    m_value = eOAIVersionControlType::INVALID_VALUE_OPENAPI_GENERATED;
}

void OAIVersionControlType::fromJson(QString jsonString) {
    
    if ( jsonString.compare("GITHUB", Qt::CaseInsensitive) == 0) {
        m_value = eOAIVersionControlType::GITHUB;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("GITHUB_ENTERPRISE", Qt::CaseInsensitive) == 0) {
        m_value = eOAIVersionControlType::GITHUB_ENTERPRISE;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("AZURE_DEVOPS_GIT", Qt::CaseInsensitive) == 0) {
        m_value = eOAIVersionControlType::AZURE_DEVOPS_GIT;
        m_value_isSet = m_value_isValid = true;
    }
}

void OAIVersionControlType::fromJsonValue(QJsonValue json) {
fromJson(json.toString());
}

QString OAIVersionControlType::asJson() const {
    
    QString val;
    switch (m_value){
        case eOAIVersionControlType::GITHUB:
            val = "GITHUB";
            break;
        case eOAIVersionControlType::GITHUB_ENTERPRISE:
            val = "GITHUB_ENTERPRISE";
            break;
        case eOAIVersionControlType::AZURE_DEVOPS_GIT:
            val = "AZURE_DEVOPS_GIT";
            break;
        default:
            break;
    }
    return val;
}

QJsonValue OAIVersionControlType::asJsonValue() const {
    
    return QJsonValue(asJson());
}


OAIVersionControlType::eOAIVersionControlType OAIVersionControlType::getValue() const {
    return m_value;
}

void OAIVersionControlType::setValue(const OAIVersionControlType::eOAIVersionControlType& value){
    m_value = value;
    m_value_isSet = true;
}
bool OAIVersionControlType::isSet() const {
    
    return m_value_isSet;
}

bool OAIVersionControlType::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_value_isValid;
}

} // namespace OpenAPI
