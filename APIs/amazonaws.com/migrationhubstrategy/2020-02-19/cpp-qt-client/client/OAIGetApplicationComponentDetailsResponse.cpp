/**
 * Migration Hub Strategy Recommendations
 * <p><fullname>Migration Hub Strategy Recommendations</fullname> <p>This API reference provides descriptions, syntax, and other details about each of the actions and data types for Migration Hub Strategy Recommendations (Strategy Recommendations). The topic for each action shows the API request parameters and the response. Alternatively, you can use one of the AWS SDKs to access an API that is tailored to the programming language or platform that you're using. For more information, see <a href=\"http://aws.amazon.com/tools/#SDKs\">AWS SDKs</a>.</p></p>
 *
 * The version of the OpenAPI document: 2020-02-19
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGetApplicationComponentDetailsResponse.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGetApplicationComponentDetailsResponse::OAIGetApplicationComponentDetailsResponse(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGetApplicationComponentDetailsResponse::OAIGetApplicationComponentDetailsResponse() {
    this->initializeModel();
}

OAIGetApplicationComponentDetailsResponse::~OAIGetApplicationComponentDetailsResponse() {}

void OAIGetApplicationComponentDetailsResponse::initializeModel() {

    m_application_component_detail_isSet = false;
    m_application_component_detail_isValid = false;

    m_associated_applications_isSet = false;
    m_associated_applications_isValid = false;

    m_associated_server_ids_isSet = false;
    m_associated_server_ids_isValid = false;

    m_more_application_resource_isSet = false;
    m_more_application_resource_isValid = false;
}

void OAIGetApplicationComponentDetailsResponse::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGetApplicationComponentDetailsResponse::fromJsonObject(QJsonObject json) {

    m_application_component_detail_isValid = ::OpenAPI::fromJsonValue(m_application_component_detail, json[QString("applicationComponentDetail")]);
    m_application_component_detail_isSet = !json[QString("applicationComponentDetail")].isNull() && m_application_component_detail_isValid;

    m_associated_applications_isValid = ::OpenAPI::fromJsonValue(m_associated_applications, json[QString("associatedApplications")]);
    m_associated_applications_isSet = !json[QString("associatedApplications")].isNull() && m_associated_applications_isValid;

    m_associated_server_ids_isValid = ::OpenAPI::fromJsonValue(m_associated_server_ids, json[QString("associatedServerIds")]);
    m_associated_server_ids_isSet = !json[QString("associatedServerIds")].isNull() && m_associated_server_ids_isValid;

    m_more_application_resource_isValid = ::OpenAPI::fromJsonValue(m_more_application_resource, json[QString("moreApplicationResource")]);
    m_more_application_resource_isSet = !json[QString("moreApplicationResource")].isNull() && m_more_application_resource_isValid;
}

QString OAIGetApplicationComponentDetailsResponse::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGetApplicationComponentDetailsResponse::asJsonObject() const {
    QJsonObject obj;
    if (m_application_component_detail.isSet()) {
        obj.insert(QString("applicationComponentDetail"), ::OpenAPI::toJsonValue(m_application_component_detail));
    }
    if (m_associated_applications.isSet()) {
        obj.insert(QString("associatedApplications"), ::OpenAPI::toJsonValue(m_associated_applications));
    }
    if (m_associated_server_ids.isSet()) {
        obj.insert(QString("associatedServerIds"), ::OpenAPI::toJsonValue(m_associated_server_ids));
    }
    if (m_more_application_resource_isSet) {
        obj.insert(QString("moreApplicationResource"), ::OpenAPI::toJsonValue(m_more_application_resource));
    }
    return obj;
}

OAIGetApplicationComponentDetailsResponse_applicationComponentDetail OAIGetApplicationComponentDetailsResponse::getApplicationComponentDetail() const {
    return m_application_component_detail;
}
void OAIGetApplicationComponentDetailsResponse::setApplicationComponentDetail(const OAIGetApplicationComponentDetailsResponse_applicationComponentDetail &application_component_detail) {
    m_application_component_detail = application_component_detail;
    m_application_component_detail_isSet = true;
}

bool OAIGetApplicationComponentDetailsResponse::is_application_component_detail_Set() const{
    return m_application_component_detail_isSet;
}

bool OAIGetApplicationComponentDetailsResponse::is_application_component_detail_Valid() const{
    return m_application_component_detail_isValid;
}

QList OAIGetApplicationComponentDetailsResponse::getAssociatedApplications() const {
    return m_associated_applications;
}
void OAIGetApplicationComponentDetailsResponse::setAssociatedApplications(const QList &associated_applications) {
    m_associated_applications = associated_applications;
    m_associated_applications_isSet = true;
}

bool OAIGetApplicationComponentDetailsResponse::is_associated_applications_Set() const{
    return m_associated_applications_isSet;
}

bool OAIGetApplicationComponentDetailsResponse::is_associated_applications_Valid() const{
    return m_associated_applications_isValid;
}

QList OAIGetApplicationComponentDetailsResponse::getAssociatedServerIds() const {
    return m_associated_server_ids;
}
void OAIGetApplicationComponentDetailsResponse::setAssociatedServerIds(const QList &associated_server_ids) {
    m_associated_server_ids = associated_server_ids;
    m_associated_server_ids_isSet = true;
}

bool OAIGetApplicationComponentDetailsResponse::is_associated_server_ids_Set() const{
    return m_associated_server_ids_isSet;
}

bool OAIGetApplicationComponentDetailsResponse::is_associated_server_ids_Valid() const{
    return m_associated_server_ids_isValid;
}

bool OAIGetApplicationComponentDetailsResponse::getMoreApplicationResource() const {
    return m_more_application_resource;
}
void OAIGetApplicationComponentDetailsResponse::setMoreApplicationResource(const bool &more_application_resource) {
    m_more_application_resource = more_application_resource;
    m_more_application_resource_isSet = true;
}

bool OAIGetApplicationComponentDetailsResponse::is_more_application_resource_Set() const{
    return m_more_application_resource_isSet;
}

bool OAIGetApplicationComponentDetailsResponse::is_more_application_resource_Valid() const{
    return m_more_application_resource_isValid;
}

bool OAIGetApplicationComponentDetailsResponse::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_application_component_detail.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_associated_applications.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_associated_server_ids.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_more_application_resource_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGetApplicationComponentDetailsResponse::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
