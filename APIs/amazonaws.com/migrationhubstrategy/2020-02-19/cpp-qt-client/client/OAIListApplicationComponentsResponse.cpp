/**
 * Migration Hub Strategy Recommendations
 * <p><fullname>Migration Hub Strategy Recommendations</fullname> <p>This API reference provides descriptions, syntax, and other details about each of the actions and data types for Migration Hub Strategy Recommendations (Strategy Recommendations). The topic for each action shows the API request parameters and the response. Alternatively, you can use one of the AWS SDKs to access an API that is tailored to the programming language or platform that you're using. For more information, see <a href=\"http://aws.amazon.com/tools/#SDKs\">AWS SDKs</a>.</p></p>
 *
 * The version of the OpenAPI document: 2020-02-19
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIListApplicationComponentsResponse.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIListApplicationComponentsResponse::OAIListApplicationComponentsResponse(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIListApplicationComponentsResponse::OAIListApplicationComponentsResponse() {
    this->initializeModel();
}

OAIListApplicationComponentsResponse::~OAIListApplicationComponentsResponse() {}

void OAIListApplicationComponentsResponse::initializeModel() {

    m_application_component_infos_isSet = false;
    m_application_component_infos_isValid = false;

    m_next_token_isSet = false;
    m_next_token_isValid = false;
}

void OAIListApplicationComponentsResponse::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIListApplicationComponentsResponse::fromJsonObject(QJsonObject json) {

    m_application_component_infos_isValid = ::OpenAPI::fromJsonValue(m_application_component_infos, json[QString("applicationComponentInfos")]);
    m_application_component_infos_isSet = !json[QString("applicationComponentInfos")].isNull() && m_application_component_infos_isValid;

    m_next_token_isValid = ::OpenAPI::fromJsonValue(m_next_token, json[QString("nextToken")]);
    m_next_token_isSet = !json[QString("nextToken")].isNull() && m_next_token_isValid;
}

QString OAIListApplicationComponentsResponse::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIListApplicationComponentsResponse::asJsonObject() const {
    QJsonObject obj;
    if (m_application_component_infos.isSet()) {
        obj.insert(QString("applicationComponentInfos"), ::OpenAPI::toJsonValue(m_application_component_infos));
    }
    if (m_next_token_isSet) {
        obj.insert(QString("nextToken"), ::OpenAPI::toJsonValue(m_next_token));
    }
    return obj;
}

QList OAIListApplicationComponentsResponse::getApplicationComponentInfos() const {
    return m_application_component_infos;
}
void OAIListApplicationComponentsResponse::setApplicationComponentInfos(const QList &application_component_infos) {
    m_application_component_infos = application_component_infos;
    m_application_component_infos_isSet = true;
}

bool OAIListApplicationComponentsResponse::is_application_component_infos_Set() const{
    return m_application_component_infos_isSet;
}

bool OAIListApplicationComponentsResponse::is_application_component_infos_Valid() const{
    return m_application_component_infos_isValid;
}

QString OAIListApplicationComponentsResponse::getNextToken() const {
    return m_next_token;
}
void OAIListApplicationComponentsResponse::setNextToken(const QString &next_token) {
    m_next_token = next_token;
    m_next_token_isSet = true;
}

bool OAIListApplicationComponentsResponse::is_next_token_Set() const{
    return m_next_token_isSet;
}

bool OAIListApplicationComponentsResponse::is_next_token_Valid() const{
    return m_next_token_isValid;
}

bool OAIListApplicationComponentsResponse::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_application_component_infos.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_next_token_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIListApplicationComponentsResponse::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
