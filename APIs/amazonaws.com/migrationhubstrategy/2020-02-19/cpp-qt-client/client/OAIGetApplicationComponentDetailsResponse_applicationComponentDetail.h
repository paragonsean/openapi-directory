/**
 * Migration Hub Strategy Recommendations
 * <p><fullname>Migration Hub Strategy Recommendations</fullname> <p>This API reference provides descriptions, syntax, and other details about each of the actions and data types for Migration Hub Strategy Recommendations (Strategy Recommendations). The topic for each action shows the API request parameters and the response. Alternatively, you can use one of the AWS SDKs to access an API that is tailored to the programming language or platform that you're using. For more information, see <a href=\"http://aws.amazon.com/tools/#SDKs\">AWS SDKs</a>.</p></p>
 *
 * The version of the OpenAPI document: 2020-02-19
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIGetApplicationComponentDetailsResponse_applicationComponentDetail.h
 *
 * 
 */

#ifndef OAIGetApplicationComponentDetailsResponse_applicationComponentDetail_H
#define OAIGetApplicationComponentDetailsResponse_applicationComponentDetail_H

#include <QJsonObject>

#include "OAIAntipatternReportStatus.h"
#include "OAIAppType.h"
#include "OAIApplicationComponentDetail_antipatternReportS3Object.h"
#include "OAIApplicationComponentDetail_appUnitError.h"
#include "OAIApplicationComponentDetail_databaseConfigDetail.h"
#include "OAIApplicationComponentDetail_recommendationSet.h"
#include "OAIInclusionStatus.h"
#include "OAIResourceSubType.h"
#include "OAIRuntimeAnalysisStatus.h"
#include "OAISrcCodeOrDbAnalysisStatus.h"
#include <QDateTime>
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIApplicationComponentDetail_antipatternReportS3Object;
class OAIApplicationComponentDetail_appUnitError;
class OAIApplicationComponentDetail_databaseConfigDetail;
class OAIApplicationComponentDetail_recommendationSet;

class OAIGetApplicationComponentDetailsResponse_applicationComponentDetail : public OAIObject {
public:
    OAIGetApplicationComponentDetailsResponse_applicationComponentDetail();
    OAIGetApplicationComponentDetailsResponse_applicationComponentDetail(QString json);
    ~OAIGetApplicationComponentDetailsResponse_applicationComponentDetail() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAISrcCodeOrDbAnalysisStatus getAnalysisStatus() const;
    void setAnalysisStatus(const OAISrcCodeOrDbAnalysisStatus &analysis_status);
    bool is_analysis_status_Set() const;
    bool is_analysis_status_Valid() const;

    OAIApplicationComponentDetail_antipatternReportS3Object getAntipatternReportS3Object() const;
    void setAntipatternReportS3Object(const OAIApplicationComponentDetail_antipatternReportS3Object &antipattern_report_s3_object);
    bool is_antipattern_report_s3_object_Set() const;
    bool is_antipattern_report_s3_object_Valid() const;

    OAIAntipatternReportStatus getAntipatternReportStatus() const;
    void setAntipatternReportStatus(const OAIAntipatternReportStatus &antipattern_report_status);
    bool is_antipattern_report_status_Set() const;
    bool is_antipattern_report_status_Valid() const;

    QString getAntipatternReportStatusMessage() const;
    void setAntipatternReportStatusMessage(const QString &antipattern_report_status_message);
    bool is_antipattern_report_status_message_Set() const;
    bool is_antipattern_report_status_message_Valid() const;

    OAIAppType getAppType() const;
    void setAppType(const OAIAppType &app_type);
    bool is_app_type_Set() const;
    bool is_app_type_Valid() const;

    OAIApplicationComponentDetail_appUnitError getAppUnitError() const;
    void setAppUnitError(const OAIApplicationComponentDetail_appUnitError &app_unit_error);
    bool is_app_unit_error_Set() const;
    bool is_app_unit_error_Valid() const;

    QString getAssociatedServerId() const;
    void setAssociatedServerId(const QString &associated_server_id);
    bool is_associated_server_id_Set() const;
    bool is_associated_server_id_Valid() const;

    OAIApplicationComponentDetail_databaseConfigDetail getDatabaseConfigDetail() const;
    void setDatabaseConfigDetail(const OAIApplicationComponentDetail_databaseConfigDetail &database_config_detail);
    bool is_database_config_detail_Set() const;
    bool is_database_config_detail_Valid() const;

    QString getId() const;
    void setId(const QString &id);
    bool is_id_Set() const;
    bool is_id_Valid() const;

    OAIInclusionStatus getInclusionStatus() const;
    void setInclusionStatus(const OAIInclusionStatus &inclusion_status);
    bool is_inclusion_status_Set() const;
    bool is_inclusion_status_Valid() const;

    QDateTime getLastAnalyzedTimestamp() const;
    void setLastAnalyzedTimestamp(const QDateTime &last_analyzed_timestamp);
    bool is_last_analyzed_timestamp_Set() const;
    bool is_last_analyzed_timestamp_Valid() const;

    QList getListAntipatternSeveritySummary() const;
    void setListAntipatternSeveritySummary(const QList &list_antipattern_severity_summary);
    bool is_list_antipattern_severity_summary_Set() const;
    bool is_list_antipattern_severity_summary_Valid() const;

    bool getMoreServerAssociationExists() const;
    void setMoreServerAssociationExists(const bool &more_server_association_exists);
    bool is_more_server_association_exists_Set() const;
    bool is_more_server_association_exists_Valid() const;

    QString getName() const;
    void setName(const QString &name);
    bool is_name_Set() const;
    bool is_name_Valid() const;

    QString getOsDriver() const;
    void setOsDriver(const QString &os_driver);
    bool is_os_driver_Set() const;
    bool is_os_driver_Valid() const;

    QString getOsVersion() const;
    void setOsVersion(const QString &os_version);
    bool is_os_version_Set() const;
    bool is_os_version_Valid() const;

    OAIApplicationComponentDetail_recommendationSet getRecommendationSet() const;
    void setRecommendationSet(const OAIApplicationComponentDetail_recommendationSet &recommendation_set);
    bool is_recommendation_set_Set() const;
    bool is_recommendation_set_Valid() const;

    OAIResourceSubType getResourceSubType() const;
    void setResourceSubType(const OAIResourceSubType &resource_sub_type);
    bool is_resource_sub_type_Set() const;
    bool is_resource_sub_type_Valid() const;

    QList getResultList() const;
    void setResultList(const QList &result_list);
    bool is_result_list_Set() const;
    bool is_result_list_Valid() const;

    OAIRuntimeAnalysisStatus getRuntimeStatus() const;
    void setRuntimeStatus(const OAIRuntimeAnalysisStatus &runtime_status);
    bool is_runtime_status_Set() const;
    bool is_runtime_status_Valid() const;

    QString getRuntimeStatusMessage() const;
    void setRuntimeStatusMessage(const QString &runtime_status_message);
    bool is_runtime_status_message_Set() const;
    bool is_runtime_status_message_Valid() const;

    QList getSourceCodeRepositories() const;
    void setSourceCodeRepositories(const QList &source_code_repositories);
    bool is_source_code_repositories_Set() const;
    bool is_source_code_repositories_Valid() const;

    QString getStatusMessage() const;
    void setStatusMessage(const QString &status_message);
    bool is_status_message_Set() const;
    bool is_status_message_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAISrcCodeOrDbAnalysisStatus m_analysis_status;
    bool m_analysis_status_isSet;
    bool m_analysis_status_isValid;

    OAIApplicationComponentDetail_antipatternReportS3Object m_antipattern_report_s3_object;
    bool m_antipattern_report_s3_object_isSet;
    bool m_antipattern_report_s3_object_isValid;

    OAIAntipatternReportStatus m_antipattern_report_status;
    bool m_antipattern_report_status_isSet;
    bool m_antipattern_report_status_isValid;

    QString m_antipattern_report_status_message;
    bool m_antipattern_report_status_message_isSet;
    bool m_antipattern_report_status_message_isValid;

    OAIAppType m_app_type;
    bool m_app_type_isSet;
    bool m_app_type_isValid;

    OAIApplicationComponentDetail_appUnitError m_app_unit_error;
    bool m_app_unit_error_isSet;
    bool m_app_unit_error_isValid;

    QString m_associated_server_id;
    bool m_associated_server_id_isSet;
    bool m_associated_server_id_isValid;

    OAIApplicationComponentDetail_databaseConfigDetail m_database_config_detail;
    bool m_database_config_detail_isSet;
    bool m_database_config_detail_isValid;

    QString m_id;
    bool m_id_isSet;
    bool m_id_isValid;

    OAIInclusionStatus m_inclusion_status;
    bool m_inclusion_status_isSet;
    bool m_inclusion_status_isValid;

    QDateTime m_last_analyzed_timestamp;
    bool m_last_analyzed_timestamp_isSet;
    bool m_last_analyzed_timestamp_isValid;

    QList m_list_antipattern_severity_summary;
    bool m_list_antipattern_severity_summary_isSet;
    bool m_list_antipattern_severity_summary_isValid;

    bool m_more_server_association_exists;
    bool m_more_server_association_exists_isSet;
    bool m_more_server_association_exists_isValid;

    QString m_name;
    bool m_name_isSet;
    bool m_name_isValid;

    QString m_os_driver;
    bool m_os_driver_isSet;
    bool m_os_driver_isValid;

    QString m_os_version;
    bool m_os_version_isSet;
    bool m_os_version_isValid;

    OAIApplicationComponentDetail_recommendationSet m_recommendation_set;
    bool m_recommendation_set_isSet;
    bool m_recommendation_set_isValid;

    OAIResourceSubType m_resource_sub_type;
    bool m_resource_sub_type_isSet;
    bool m_resource_sub_type_isValid;

    QList m_result_list;
    bool m_result_list_isSet;
    bool m_result_list_isValid;

    OAIRuntimeAnalysisStatus m_runtime_status;
    bool m_runtime_status_isSet;
    bool m_runtime_status_isValid;

    QString m_runtime_status_message;
    bool m_runtime_status_message_isSet;
    bool m_runtime_status_message_isValid;

    QList m_source_code_repositories;
    bool m_source_code_repositories_isSet;
    bool m_source_code_repositories_isValid;

    QString m_status_message;
    bool m_status_message_isSet;
    bool m_status_message_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIGetApplicationComponentDetailsResponse_applicationComponentDetail)

#endif // OAIGetApplicationComponentDetailsResponse_applicationComponentDetail_H
