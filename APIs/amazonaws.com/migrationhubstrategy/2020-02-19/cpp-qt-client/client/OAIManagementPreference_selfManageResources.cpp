/**
 * Migration Hub Strategy Recommendations
 * <p><fullname>Migration Hub Strategy Recommendations</fullname> <p>This API reference provides descriptions, syntax, and other details about each of the actions and data types for Migration Hub Strategy Recommendations (Strategy Recommendations). The topic for each action shows the API request parameters and the response. Alternatively, you can use one of the AWS SDKs to access an API that is tailored to the programming language or platform that you're using. For more information, see <a href=\"http://aws.amazon.com/tools/#SDKs\">AWS SDKs</a>.</p></p>
 *
 * The version of the OpenAPI document: 2020-02-19
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIManagementPreference_selfManageResources.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIManagementPreference_selfManageResources::OAIManagementPreference_selfManageResources(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIManagementPreference_selfManageResources::OAIManagementPreference_selfManageResources() {
    this->initializeModel();
}

OAIManagementPreference_selfManageResources::~OAIManagementPreference_selfManageResources() {}

void OAIManagementPreference_selfManageResources::initializeModel() {

    m_target_destination_isSet = false;
    m_target_destination_isValid = false;
}

void OAIManagementPreference_selfManageResources::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIManagementPreference_selfManageResources::fromJsonObject(QJsonObject json) {

    m_target_destination_isValid = ::OpenAPI::fromJsonValue(m_target_destination, json[QString("targetDestination")]);
    m_target_destination_isSet = !json[QString("targetDestination")].isNull() && m_target_destination_isValid;
}

QString OAIManagementPreference_selfManageResources::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIManagementPreference_selfManageResources::asJsonObject() const {
    QJsonObject obj;
    if (m_target_destination.isSet()) {
        obj.insert(QString("targetDestination"), ::OpenAPI::toJsonValue(m_target_destination));
    }
    return obj;
}

QList OAIManagementPreference_selfManageResources::getTargetDestination() const {
    return m_target_destination;
}
void OAIManagementPreference_selfManageResources::setTargetDestination(const QList &target_destination) {
    m_target_destination = target_destination;
    m_target_destination_isSet = true;
}

bool OAIManagementPreference_selfManageResources::is_target_destination_Set() const{
    return m_target_destination_isSet;
}

bool OAIManagementPreference_selfManageResources::is_target_destination_Valid() const{
    return m_target_destination_isValid;
}

bool OAIManagementPreference_selfManageResources::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_target_destination.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIManagementPreference_selfManageResources::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_target_destination_isValid && true;
}

} // namespace OpenAPI
