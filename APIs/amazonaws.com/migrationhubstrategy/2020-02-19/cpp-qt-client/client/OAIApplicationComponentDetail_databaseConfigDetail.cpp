/**
 * Migration Hub Strategy Recommendations
 * <p><fullname>Migration Hub Strategy Recommendations</fullname> <p>This API reference provides descriptions, syntax, and other details about each of the actions and data types for Migration Hub Strategy Recommendations (Strategy Recommendations). The topic for each action shows the API request parameters and the response. Alternatively, you can use one of the AWS SDKs to access an API that is tailored to the programming language or platform that you're using. For more information, see <a href=\"http://aws.amazon.com/tools/#SDKs\">AWS SDKs</a>.</p></p>
 *
 * The version of the OpenAPI document: 2020-02-19
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIApplicationComponentDetail_databaseConfigDetail.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIApplicationComponentDetail_databaseConfigDetail::OAIApplicationComponentDetail_databaseConfigDetail(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIApplicationComponentDetail_databaseConfigDetail::OAIApplicationComponentDetail_databaseConfigDetail() {
    this->initializeModel();
}

OAIApplicationComponentDetail_databaseConfigDetail::~OAIApplicationComponentDetail_databaseConfigDetail() {}

void OAIApplicationComponentDetail_databaseConfigDetail::initializeModel() {

    m_secret_name_isSet = false;
    m_secret_name_isValid = false;
}

void OAIApplicationComponentDetail_databaseConfigDetail::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIApplicationComponentDetail_databaseConfigDetail::fromJsonObject(QJsonObject json) {

    m_secret_name_isValid = ::OpenAPI::fromJsonValue(m_secret_name, json[QString("secretName")]);
    m_secret_name_isSet = !json[QString("secretName")].isNull() && m_secret_name_isValid;
}

QString OAIApplicationComponentDetail_databaseConfigDetail::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIApplicationComponentDetail_databaseConfigDetail::asJsonObject() const {
    QJsonObject obj;
    if (m_secret_name_isSet) {
        obj.insert(QString("secretName"), ::OpenAPI::toJsonValue(m_secret_name));
    }
    return obj;
}

QString OAIApplicationComponentDetail_databaseConfigDetail::getSecretName() const {
    return m_secret_name;
}
void OAIApplicationComponentDetail_databaseConfigDetail::setSecretName(const QString &secret_name) {
    m_secret_name = secret_name;
    m_secret_name_isSet = true;
}

bool OAIApplicationComponentDetail_databaseConfigDetail::is_secret_name_Set() const{
    return m_secret_name_isSet;
}

bool OAIApplicationComponentDetail_databaseConfigDetail::is_secret_name_Valid() const{
    return m_secret_name_isValid;
}

bool OAIApplicationComponentDetail_databaseConfigDetail::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_secret_name_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIApplicationComponentDetail_databaseConfigDetail::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
