/**
 * Migration Hub Strategy Recommendations
 * <p><fullname>Migration Hub Strategy Recommendations</fullname> <p>This API reference provides descriptions, syntax, and other details about each of the actions and data types for Migration Hub Strategy Recommendations (Strategy Recommendations). The topic for each action shows the API request parameters and the response. Alternatively, you can use one of the AWS SDKs to access an API that is tailored to the programming language or platform that you're using. For more information, see <a href=\"http://aws.amazon.com/tools/#SDKs\">AWS SDKs</a>.</p></p>
 *
 * The version of the OpenAPI document: 2020-02-19
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIDatabaseMigrationPreference.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIDatabaseMigrationPreference::OAIDatabaseMigrationPreference(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIDatabaseMigrationPreference::OAIDatabaseMigrationPreference() {
    this->initializeModel();
}

OAIDatabaseMigrationPreference::~OAIDatabaseMigrationPreference() {}

void OAIDatabaseMigrationPreference::initializeModel() {

    m_heterogeneous_isSet = false;
    m_heterogeneous_isValid = false;

    m_homogeneous_isSet = false;
    m_homogeneous_isValid = false;

    m_no_preference_isSet = false;
    m_no_preference_isValid = false;
}

void OAIDatabaseMigrationPreference::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIDatabaseMigrationPreference::fromJsonObject(QJsonObject json) {

    m_heterogeneous_isValid = ::OpenAPI::fromJsonValue(m_heterogeneous, json[QString("heterogeneous")]);
    m_heterogeneous_isSet = !json[QString("heterogeneous")].isNull() && m_heterogeneous_isValid;

    m_homogeneous_isValid = ::OpenAPI::fromJsonValue(m_homogeneous, json[QString("homogeneous")]);
    m_homogeneous_isSet = !json[QString("homogeneous")].isNull() && m_homogeneous_isValid;

    m_no_preference_isValid = ::OpenAPI::fromJsonValue(m_no_preference, json[QString("noPreference")]);
    m_no_preference_isSet = !json[QString("noPreference")].isNull() && m_no_preference_isValid;
}

QString OAIDatabaseMigrationPreference::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIDatabaseMigrationPreference::asJsonObject() const {
    QJsonObject obj;
    if (m_heterogeneous.isSet()) {
        obj.insert(QString("heterogeneous"), ::OpenAPI::toJsonValue(m_heterogeneous));
    }
    if (m_homogeneous.isSet()) {
        obj.insert(QString("homogeneous"), ::OpenAPI::toJsonValue(m_homogeneous));
    }
    if (m_no_preference.isSet()) {
        obj.insert(QString("noPreference"), ::OpenAPI::toJsonValue(m_no_preference));
    }
    return obj;
}

OAIDatabaseMigrationPreference_heterogeneous OAIDatabaseMigrationPreference::getHeterogeneous() const {
    return m_heterogeneous;
}
void OAIDatabaseMigrationPreference::setHeterogeneous(const OAIDatabaseMigrationPreference_heterogeneous &heterogeneous) {
    m_heterogeneous = heterogeneous;
    m_heterogeneous_isSet = true;
}

bool OAIDatabaseMigrationPreference::is_heterogeneous_Set() const{
    return m_heterogeneous_isSet;
}

bool OAIDatabaseMigrationPreference::is_heterogeneous_Valid() const{
    return m_heterogeneous_isValid;
}

OAIDatabaseMigrationPreference_homogeneous OAIDatabaseMigrationPreference::getHomogeneous() const {
    return m_homogeneous;
}
void OAIDatabaseMigrationPreference::setHomogeneous(const OAIDatabaseMigrationPreference_homogeneous &homogeneous) {
    m_homogeneous = homogeneous;
    m_homogeneous_isSet = true;
}

bool OAIDatabaseMigrationPreference::is_homogeneous_Set() const{
    return m_homogeneous_isSet;
}

bool OAIDatabaseMigrationPreference::is_homogeneous_Valid() const{
    return m_homogeneous_isValid;
}

OAIDatabaseMigrationPreference_noPreference OAIDatabaseMigrationPreference::getNoPreference() const {
    return m_no_preference;
}
void OAIDatabaseMigrationPreference::setNoPreference(const OAIDatabaseMigrationPreference_noPreference &no_preference) {
    m_no_preference = no_preference;
    m_no_preference_isSet = true;
}

bool OAIDatabaseMigrationPreference::is_no_preference_Set() const{
    return m_no_preference_isSet;
}

bool OAIDatabaseMigrationPreference::is_no_preference_Valid() const{
    return m_no_preference_isValid;
}

bool OAIDatabaseMigrationPreference::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_heterogeneous.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_homogeneous.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_no_preference.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIDatabaseMigrationPreference::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
