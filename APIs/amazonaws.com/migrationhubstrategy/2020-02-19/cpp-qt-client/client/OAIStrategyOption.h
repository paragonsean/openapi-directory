/**
 * Migration Hub Strategy Recommendations
 * <p><fullname>Migration Hub Strategy Recommendations</fullname> <p>This API reference provides descriptions, syntax, and other details about each of the actions and data types for Migration Hub Strategy Recommendations (Strategy Recommendations). The topic for each action shows the API request parameters and the response. Alternatively, you can use one of the AWS SDKs to access an API that is tailored to the programming language or platform that you're using. For more information, see <a href=\"http://aws.amazon.com/tools/#SDKs\">AWS SDKs</a>.</p></p>
 *
 * The version of the OpenAPI document: 2020-02-19
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIStrategyOption.h
 *
 *  Information about all the available strategy options for migrating and modernizing an application component. 
 */

#ifndef OAIStrategyOption_H
#define OAIStrategyOption_H

#include <QJsonObject>

#include "OAIStrategy.h"
#include "OAITargetDestination.h"
#include "OAITransformationToolName.h"

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIStrategyOption : public OAIObject {
public:
    OAIStrategyOption();
    OAIStrategyOption(QString json);
    ~OAIStrategyOption() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    bool getIsPreferred() const;
    void setIsPreferred(const bool &is_preferred);
    bool is_is_preferred_Set() const;
    bool is_is_preferred_Valid() const;

    OAIStrategy getStrategy() const;
    void setStrategy(const OAIStrategy &strategy);
    bool is_strategy_Set() const;
    bool is_strategy_Valid() const;

    OAITargetDestination getTargetDestination() const;
    void setTargetDestination(const OAITargetDestination &target_destination);
    bool is_target_destination_Set() const;
    bool is_target_destination_Valid() const;

    OAITransformationToolName getToolName() const;
    void setToolName(const OAITransformationToolName &tool_name);
    bool is_tool_name_Set() const;
    bool is_tool_name_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    bool m_is_preferred;
    bool m_is_preferred_isSet;
    bool m_is_preferred_isValid;

    OAIStrategy m_strategy;
    bool m_strategy_isSet;
    bool m_strategy_isValid;

    OAITargetDestination m_target_destination;
    bool m_target_destination_isSet;
    bool m_target_destination_isValid;

    OAITransformationToolName m_tool_name;
    bool m_tool_name_isSet;
    bool m_tool_name_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIStrategyOption)

#endif // OAIStrategyOption_H
