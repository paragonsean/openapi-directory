/**
 * Migration Hub Strategy Recommendations
 * <p><fullname>Migration Hub Strategy Recommendations</fullname> <p>This API reference provides descriptions, syntax, and other details about each of the actions and data types for Migration Hub Strategy Recommendations (Strategy Recommendations). The topic for each action shows the API request parameters and the response. Alternatively, you can use one of the AWS SDKs to access an API that is tailored to the programming language or platform that you're using. For more information, see <a href=\"http://aws.amazon.com/tools/#SDKs\">AWS SDKs</a>.</p></p>
 *
 * The version of the OpenAPI document: 2020-02-19
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGetPortfolioSummaryResponse.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGetPortfolioSummaryResponse::OAIGetPortfolioSummaryResponse(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGetPortfolioSummaryResponse::OAIGetPortfolioSummaryResponse() {
    this->initializeModel();
}

OAIGetPortfolioSummaryResponse::~OAIGetPortfolioSummaryResponse() {}

void OAIGetPortfolioSummaryResponse::initializeModel() {

    m_assessment_summary_isSet = false;
    m_assessment_summary_isValid = false;
}

void OAIGetPortfolioSummaryResponse::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGetPortfolioSummaryResponse::fromJsonObject(QJsonObject json) {

    m_assessment_summary_isValid = ::OpenAPI::fromJsonValue(m_assessment_summary, json[QString("assessmentSummary")]);
    m_assessment_summary_isSet = !json[QString("assessmentSummary")].isNull() && m_assessment_summary_isValid;
}

QString OAIGetPortfolioSummaryResponse::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGetPortfolioSummaryResponse::asJsonObject() const {
    QJsonObject obj;
    if (m_assessment_summary.isSet()) {
        obj.insert(QString("assessmentSummary"), ::OpenAPI::toJsonValue(m_assessment_summary));
    }
    return obj;
}

OAIGetPortfolioSummaryResponse_assessmentSummary OAIGetPortfolioSummaryResponse::getAssessmentSummary() const {
    return m_assessment_summary;
}
void OAIGetPortfolioSummaryResponse::setAssessmentSummary(const OAIGetPortfolioSummaryResponse_assessmentSummary &assessment_summary) {
    m_assessment_summary = assessment_summary;
    m_assessment_summary_isSet = true;
}

bool OAIGetPortfolioSummaryResponse::is_assessment_summary_Set() const{
    return m_assessment_summary_isSet;
}

bool OAIGetPortfolioSummaryResponse::is_assessment_summary_Valid() const{
    return m_assessment_summary_isValid;
}

bool OAIGetPortfolioSummaryResponse::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_assessment_summary.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGetPortfolioSummaryResponse::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
