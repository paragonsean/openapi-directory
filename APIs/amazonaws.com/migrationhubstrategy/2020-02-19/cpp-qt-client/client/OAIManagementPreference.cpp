/**
 * Migration Hub Strategy Recommendations
 * <p><fullname>Migration Hub Strategy Recommendations</fullname> <p>This API reference provides descriptions, syntax, and other details about each of the actions and data types for Migration Hub Strategy Recommendations (Strategy Recommendations). The topic for each action shows the API request parameters and the response. Alternatively, you can use one of the AWS SDKs to access an API that is tailored to the programming language or platform that you're using. For more information, see <a href=\"http://aws.amazon.com/tools/#SDKs\">AWS SDKs</a>.</p></p>
 *
 * The version of the OpenAPI document: 2020-02-19
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIManagementPreference.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIManagementPreference::OAIManagementPreference(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIManagementPreference::OAIManagementPreference() {
    this->initializeModel();
}

OAIManagementPreference::~OAIManagementPreference() {}

void OAIManagementPreference::initializeModel() {

    m_aws_managed_resources_isSet = false;
    m_aws_managed_resources_isValid = false;

    m_no_preference_isSet = false;
    m_no_preference_isValid = false;

    m_self_manage_resources_isSet = false;
    m_self_manage_resources_isValid = false;
}

void OAIManagementPreference::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIManagementPreference::fromJsonObject(QJsonObject json) {

    m_aws_managed_resources_isValid = ::OpenAPI::fromJsonValue(m_aws_managed_resources, json[QString("awsManagedResources")]);
    m_aws_managed_resources_isSet = !json[QString("awsManagedResources")].isNull() && m_aws_managed_resources_isValid;

    m_no_preference_isValid = ::OpenAPI::fromJsonValue(m_no_preference, json[QString("noPreference")]);
    m_no_preference_isSet = !json[QString("noPreference")].isNull() && m_no_preference_isValid;

    m_self_manage_resources_isValid = ::OpenAPI::fromJsonValue(m_self_manage_resources, json[QString("selfManageResources")]);
    m_self_manage_resources_isSet = !json[QString("selfManageResources")].isNull() && m_self_manage_resources_isValid;
}

QString OAIManagementPreference::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIManagementPreference::asJsonObject() const {
    QJsonObject obj;
    if (m_aws_managed_resources.isSet()) {
        obj.insert(QString("awsManagedResources"), ::OpenAPI::toJsonValue(m_aws_managed_resources));
    }
    if (m_no_preference.isSet()) {
        obj.insert(QString("noPreference"), ::OpenAPI::toJsonValue(m_no_preference));
    }
    if (m_self_manage_resources.isSet()) {
        obj.insert(QString("selfManageResources"), ::OpenAPI::toJsonValue(m_self_manage_resources));
    }
    return obj;
}

OAIManagementPreference_awsManagedResources OAIManagementPreference::getAwsManagedResources() const {
    return m_aws_managed_resources;
}
void OAIManagementPreference::setAwsManagedResources(const OAIManagementPreference_awsManagedResources &aws_managed_resources) {
    m_aws_managed_resources = aws_managed_resources;
    m_aws_managed_resources_isSet = true;
}

bool OAIManagementPreference::is_aws_managed_resources_Set() const{
    return m_aws_managed_resources_isSet;
}

bool OAIManagementPreference::is_aws_managed_resources_Valid() const{
    return m_aws_managed_resources_isValid;
}

OAIManagementPreference_noPreference OAIManagementPreference::getNoPreference() const {
    return m_no_preference;
}
void OAIManagementPreference::setNoPreference(const OAIManagementPreference_noPreference &no_preference) {
    m_no_preference = no_preference;
    m_no_preference_isSet = true;
}

bool OAIManagementPreference::is_no_preference_Set() const{
    return m_no_preference_isSet;
}

bool OAIManagementPreference::is_no_preference_Valid() const{
    return m_no_preference_isValid;
}

OAIManagementPreference_selfManageResources OAIManagementPreference::getSelfManageResources() const {
    return m_self_manage_resources;
}
void OAIManagementPreference::setSelfManageResources(const OAIManagementPreference_selfManageResources &self_manage_resources) {
    m_self_manage_resources = self_manage_resources;
    m_self_manage_resources_isSet = true;
}

bool OAIManagementPreference::is_self_manage_resources_Set() const{
    return m_self_manage_resources_isSet;
}

bool OAIManagementPreference::is_self_manage_resources_Valid() const{
    return m_self_manage_resources_isValid;
}

bool OAIManagementPreference::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_aws_managed_resources.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_no_preference.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_self_manage_resources.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIManagementPreference::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
