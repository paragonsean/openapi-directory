/*
 * Migration Hub Strategy Recommendations
 * <p><fullname>Migration Hub Strategy Recommendations</fullname> <p>This API reference provides descriptions, syntax, and other details about each of the actions and data types for Migration Hub Strategy Recommendations (Strategy Recommendations). The topic for each action shows the API request parameters and the response. Alternatively, you can use one of the AWS SDKs to access an API that is tailored to the programming language or platform that you're using. For more information, see <a href=\"http://aws.amazon.com/tools/#SDKs\">AWS SDKs</a>.</p></p>
 *
 * The version of the OpenAPI document: 2020-02-19
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.annotations.SerializedName;

import java.io.IOException;
import com.google.gson.TypeAdapter;
import com.google.gson.JsonElement;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;

/**
 * Gets or Sets SrcCodeOrDbAnalysisStatus
 */
@JsonAdapter(SrcCodeOrDbAnalysisStatus.Adapter.class)
public enum SrcCodeOrDbAnalysisStatus {
  
  ANALYSIS_TO_BE_SCHEDULED("ANALYSIS_TO_BE_SCHEDULED"),
  
  ANALYSIS_STARTED("ANALYSIS_STARTED"),
  
  ANALYSIS_SUCCESS("ANALYSIS_SUCCESS"),
  
  ANALYSIS_FAILED("ANALYSIS_FAILED"),
  
  ANALYSIS_PARTIAL_SUCCESS("ANALYSIS_PARTIAL_SUCCESS"),
  
  UNCONFIGURED("UNCONFIGURED"),
  
  CONFIGURED("CONFIGURED");

  private String value;

  SrcCodeOrDbAnalysisStatus(String value) {
    this.value = value;
  }

  public String getValue() {
    return value;
  }

  @Override
  public String toString() {
    return String.valueOf(value);
  }

  public static SrcCodeOrDbAnalysisStatus fromValue(String value) {
    for (SrcCodeOrDbAnalysisStatus b : SrcCodeOrDbAnalysisStatus.values()) {
      if (b.value.equals(value)) {
        return b;
      }
    }
    throw new IllegalArgumentException("Unexpected value '" + value + "'");
  }

  public static class Adapter extends TypeAdapter<SrcCodeOrDbAnalysisStatus> {
    @Override
    public void write(final JsonWriter jsonWriter, final SrcCodeOrDbAnalysisStatus enumeration) throws IOException {
      jsonWriter.value(enumeration.getValue());
    }

    @Override
    public SrcCodeOrDbAnalysisStatus read(final JsonReader jsonReader) throws IOException {
      String value = jsonReader.nextString();
      return SrcCodeOrDbAnalysisStatus.fromValue(value);
    }
  }

  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
    String value = jsonElement.getAsString();
    SrcCodeOrDbAnalysisStatus.fromValue(value);
  }
}

