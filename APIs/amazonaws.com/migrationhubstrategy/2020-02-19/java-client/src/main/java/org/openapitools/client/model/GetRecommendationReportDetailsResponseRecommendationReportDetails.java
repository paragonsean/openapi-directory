/*
 * Migration Hub Strategy Recommendations
 * <p><fullname>Migration Hub Strategy Recommendations</fullname> <p>This API reference provides descriptions, syntax, and other details about each of the actions and data types for Migration Hub Strategy Recommendations (Strategy Recommendations). The topic for each action shows the API request parameters and the response. Alternatively, you can use one of the AWS SDKs to access an API that is tailored to the programming language or platform that you're using. For more information, see <a href=\"http://aws.amazon.com/tools/#SDKs\">AWS SDKs</a>.</p></p>
 *
 * The version of the OpenAPI document: 2020-02-19
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.time.OffsetDateTime;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.RecommendationReportStatus;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * GetRecommendationReportDetailsResponseRecommendationReportDetails
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T12:03:53.966565-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class GetRecommendationReportDetailsResponseRecommendationReportDetails {
  public static final String SERIALIZED_NAME_COMPLETION_TIME = "completionTime";
  @SerializedName(SERIALIZED_NAME_COMPLETION_TIME)
  private OffsetDateTime completionTime;

  public static final String SERIALIZED_NAME_S3_BUCKET = "s3Bucket";
  @SerializedName(SERIALIZED_NAME_S3_BUCKET)
  private String s3Bucket;

  public static final String SERIALIZED_NAME_S3_KEYS = "s3Keys";
  @SerializedName(SERIALIZED_NAME_S3_KEYS)
  private List s3Keys;

  public static final String SERIALIZED_NAME_START_TIME = "startTime";
  @SerializedName(SERIALIZED_NAME_START_TIME)
  private OffsetDateTime startTime;

  public static final String SERIALIZED_NAME_STATUS = "status";
  @SerializedName(SERIALIZED_NAME_STATUS)
  private RecommendationReportStatus status;

  public static final String SERIALIZED_NAME_STATUS_MESSAGE = "statusMessage";
  @SerializedName(SERIALIZED_NAME_STATUS_MESSAGE)
  private String statusMessage;

  public GetRecommendationReportDetailsResponseRecommendationReportDetails() {
  }

  public GetRecommendationReportDetailsResponseRecommendationReportDetails completionTime(OffsetDateTime completionTime) {
    this.completionTime = completionTime;
    return this;
  }

  /**
   * Get completionTime
   * @return completionTime
   */
  @javax.annotation.Nullable
  public OffsetDateTime getCompletionTime() {
    return completionTime;
  }

  public void setCompletionTime(OffsetDateTime completionTime) {
    this.completionTime = completionTime;
  }


  public GetRecommendationReportDetailsResponseRecommendationReportDetails s3Bucket(String s3Bucket) {
    this.s3Bucket = s3Bucket;
    return this;
  }

  /**
   * Get s3Bucket
   * @return s3Bucket
   */
  @javax.annotation.Nullable
  public String getS3Bucket() {
    return s3Bucket;
  }

  public void setS3Bucket(String s3Bucket) {
    this.s3Bucket = s3Bucket;
  }


  public GetRecommendationReportDetailsResponseRecommendationReportDetails s3Keys(List s3Keys) {
    this.s3Keys = s3Keys;
    return this;
  }

  /**
   * Get s3Keys
   * @return s3Keys
   */
  @javax.annotation.Nullable
  public List getS3Keys() {
    return s3Keys;
  }

  public void setS3Keys(List s3Keys) {
    this.s3Keys = s3Keys;
  }


  public GetRecommendationReportDetailsResponseRecommendationReportDetails startTime(OffsetDateTime startTime) {
    this.startTime = startTime;
    return this;
  }

  /**
   * Get startTime
   * @return startTime
   */
  @javax.annotation.Nullable
  public OffsetDateTime getStartTime() {
    return startTime;
  }

  public void setStartTime(OffsetDateTime startTime) {
    this.startTime = startTime;
  }


  public GetRecommendationReportDetailsResponseRecommendationReportDetails status(RecommendationReportStatus status) {
    this.status = status;
    return this;
  }

  /**
   * Get status
   * @return status
   */
  @javax.annotation.Nullable
  public RecommendationReportStatus getStatus() {
    return status;
  }

  public void setStatus(RecommendationReportStatus status) {
    this.status = status;
  }


  public GetRecommendationReportDetailsResponseRecommendationReportDetails statusMessage(String statusMessage) {
    this.statusMessage = statusMessage;
    return this;
  }

  /**
   * Get statusMessage
   * @return statusMessage
   */
  @javax.annotation.Nullable
  public String getStatusMessage() {
    return statusMessage;
  }

  public void setStatusMessage(String statusMessage) {
    this.statusMessage = statusMessage;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    GetRecommendationReportDetailsResponseRecommendationReportDetails getRecommendationReportDetailsResponseRecommendationReportDetails = (GetRecommendationReportDetailsResponseRecommendationReportDetails) o;
    return Objects.equals(this.completionTime, getRecommendationReportDetailsResponseRecommendationReportDetails.completionTime) &&
        Objects.equals(this.s3Bucket, getRecommendationReportDetailsResponseRecommendationReportDetails.s3Bucket) &&
        Objects.equals(this.s3Keys, getRecommendationReportDetailsResponseRecommendationReportDetails.s3Keys) &&
        Objects.equals(this.startTime, getRecommendationReportDetailsResponseRecommendationReportDetails.startTime) &&
        Objects.equals(this.status, getRecommendationReportDetailsResponseRecommendationReportDetails.status) &&
        Objects.equals(this.statusMessage, getRecommendationReportDetailsResponseRecommendationReportDetails.statusMessage);
  }

  @Override
  public int hashCode() {
    return Objects.hash(completionTime, s3Bucket, s3Keys, startTime, status, statusMessage);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class GetRecommendationReportDetailsResponseRecommendationReportDetails {\n");
    sb.append("    completionTime: ").append(toIndentedString(completionTime)).append("\n");
    sb.append("    s3Bucket: ").append(toIndentedString(s3Bucket)).append("\n");
    sb.append("    s3Keys: ").append(toIndentedString(s3Keys)).append("\n");
    sb.append("    startTime: ").append(toIndentedString(startTime)).append("\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("    statusMessage: ").append(toIndentedString(statusMessage)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("completionTime");
    openapiFields.add("s3Bucket");
    openapiFields.add("s3Keys");
    openapiFields.add("startTime");
    openapiFields.add("status");
    openapiFields.add("statusMessage");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to GetRecommendationReportDetailsResponseRecommendationReportDetails
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!GetRecommendationReportDetailsResponseRecommendationReportDetails.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in GetRecommendationReportDetailsResponseRecommendationReportDetails is not found in the empty JSON string", GetRecommendationReportDetailsResponseRecommendationReportDetails.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!GetRecommendationReportDetailsResponseRecommendationReportDetails.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `GetRecommendationReportDetailsResponseRecommendationReportDetails` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // validate the optional field `completionTime`
      if (jsonObj.get("completionTime") != null && !jsonObj.get("completionTime").isJsonNull()) {
        OffsetDateTime.validateJsonElement(jsonObj.get("completionTime"));
      }
      // validate the optional field `s3Bucket`
      if (jsonObj.get("s3Bucket") != null && !jsonObj.get("s3Bucket").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("s3Bucket"));
      }
      // validate the optional field `s3Keys`
      if (jsonObj.get("s3Keys") != null && !jsonObj.get("s3Keys").isJsonNull()) {
        List.validateJsonElement(jsonObj.get("s3Keys"));
      }
      // validate the optional field `startTime`
      if (jsonObj.get("startTime") != null && !jsonObj.get("startTime").isJsonNull()) {
        OffsetDateTime.validateJsonElement(jsonObj.get("startTime"));
      }
      // validate the optional field `status`
      if (jsonObj.get("status") != null && !jsonObj.get("status").isJsonNull()) {
        RecommendationReportStatus.validateJsonElement(jsonObj.get("status"));
      }
      // validate the optional field `statusMessage`
      if (jsonObj.get("statusMessage") != null && !jsonObj.get("statusMessage").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("statusMessage"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!GetRecommendationReportDetailsResponseRecommendationReportDetails.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'GetRecommendationReportDetailsResponseRecommendationReportDetails' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<GetRecommendationReportDetailsResponseRecommendationReportDetails> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(GetRecommendationReportDetailsResponseRecommendationReportDetails.class));

       return (TypeAdapter<T>) new TypeAdapter<GetRecommendationReportDetailsResponseRecommendationReportDetails>() {
           @Override
           public void write(JsonWriter out, GetRecommendationReportDetailsResponseRecommendationReportDetails value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public GetRecommendationReportDetailsResponseRecommendationReportDetails read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of GetRecommendationReportDetailsResponseRecommendationReportDetails given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of GetRecommendationReportDetailsResponseRecommendationReportDetails
   * @throws IOException if the JSON string is invalid with respect to GetRecommendationReportDetailsResponseRecommendationReportDetails
   */
  public static GetRecommendationReportDetailsResponseRecommendationReportDetails fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, GetRecommendationReportDetailsResponseRecommendationReportDetails.class);
  }

  /**
   * Convert an instance of GetRecommendationReportDetailsResponseRecommendationReportDetails to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

