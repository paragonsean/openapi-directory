/*
 * Migration Hub Strategy Recommendations
 * <p><fullname>Migration Hub Strategy Recommendations</fullname> <p>This API reference provides descriptions, syntax, and other details about each of the actions and data types for Migration Hub Strategy Recommendations (Strategy Recommendations). The topic for each action shows the API request parameters and the response. Alternatively, you can use one of the AWS SDKs to access an API that is tailored to the programming language or platform that you're using. For more information, see <a href=\"http://aws.amazon.com/tools/#SDKs\">AWS SDKs</a>.</p></p>
 *
 * The version of the OpenAPI document: 2020-02-19
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.ConfigurationSummaryRemoteSourceCodeAnalysisServerInfo;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * CollectorConfigurationSummary
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T12:03:53.966565-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class CollectorConfigurationSummary {
  public static final String SERIALIZED_NAME_IP_ADDRESS_BASED_REMOTE_INFO_LIST = "ipAddressBasedRemoteInfoList";
  @SerializedName(SERIALIZED_NAME_IP_ADDRESS_BASED_REMOTE_INFO_LIST)
  private List ipAddressBasedRemoteInfoList;

  public static final String SERIALIZED_NAME_PIPELINE_INFO_LIST = "pipelineInfoList";
  @SerializedName(SERIALIZED_NAME_PIPELINE_INFO_LIST)
  private List pipelineInfoList;

  public static final String SERIALIZED_NAME_REMOTE_SOURCE_CODE_ANALYSIS_SERVER_INFO = "remoteSourceCodeAnalysisServerInfo";
  @SerializedName(SERIALIZED_NAME_REMOTE_SOURCE_CODE_ANALYSIS_SERVER_INFO)
  private ConfigurationSummaryRemoteSourceCodeAnalysisServerInfo remoteSourceCodeAnalysisServerInfo;

  public static final String SERIALIZED_NAME_VCENTER_BASED_REMOTE_INFO_LIST = "vcenterBasedRemoteInfoList";
  @SerializedName(SERIALIZED_NAME_VCENTER_BASED_REMOTE_INFO_LIST)
  private List vcenterBasedRemoteInfoList;

  public static final String SERIALIZED_NAME_VERSION_CONTROL_INFO_LIST = "versionControlInfoList";
  @SerializedName(SERIALIZED_NAME_VERSION_CONTROL_INFO_LIST)
  private List versionControlInfoList;

  public CollectorConfigurationSummary() {
  }

  public CollectorConfigurationSummary ipAddressBasedRemoteInfoList(List ipAddressBasedRemoteInfoList) {
    this.ipAddressBasedRemoteInfoList = ipAddressBasedRemoteInfoList;
    return this;
  }

  /**
   * Get ipAddressBasedRemoteInfoList
   * @return ipAddressBasedRemoteInfoList
   */
  @javax.annotation.Nullable
  public List getIpAddressBasedRemoteInfoList() {
    return ipAddressBasedRemoteInfoList;
  }

  public void setIpAddressBasedRemoteInfoList(List ipAddressBasedRemoteInfoList) {
    this.ipAddressBasedRemoteInfoList = ipAddressBasedRemoteInfoList;
  }


  public CollectorConfigurationSummary pipelineInfoList(List pipelineInfoList) {
    this.pipelineInfoList = pipelineInfoList;
    return this;
  }

  /**
   * Get pipelineInfoList
   * @return pipelineInfoList
   */
  @javax.annotation.Nullable
  public List getPipelineInfoList() {
    return pipelineInfoList;
  }

  public void setPipelineInfoList(List pipelineInfoList) {
    this.pipelineInfoList = pipelineInfoList;
  }


  public CollectorConfigurationSummary remoteSourceCodeAnalysisServerInfo(ConfigurationSummaryRemoteSourceCodeAnalysisServerInfo remoteSourceCodeAnalysisServerInfo) {
    this.remoteSourceCodeAnalysisServerInfo = remoteSourceCodeAnalysisServerInfo;
    return this;
  }

  /**
   * Get remoteSourceCodeAnalysisServerInfo
   * @return remoteSourceCodeAnalysisServerInfo
   */
  @javax.annotation.Nullable
  public ConfigurationSummaryRemoteSourceCodeAnalysisServerInfo getRemoteSourceCodeAnalysisServerInfo() {
    return remoteSourceCodeAnalysisServerInfo;
  }

  public void setRemoteSourceCodeAnalysisServerInfo(ConfigurationSummaryRemoteSourceCodeAnalysisServerInfo remoteSourceCodeAnalysisServerInfo) {
    this.remoteSourceCodeAnalysisServerInfo = remoteSourceCodeAnalysisServerInfo;
  }


  public CollectorConfigurationSummary vcenterBasedRemoteInfoList(List vcenterBasedRemoteInfoList) {
    this.vcenterBasedRemoteInfoList = vcenterBasedRemoteInfoList;
    return this;
  }

  /**
   * Get vcenterBasedRemoteInfoList
   * @return vcenterBasedRemoteInfoList
   */
  @javax.annotation.Nullable
  public List getVcenterBasedRemoteInfoList() {
    return vcenterBasedRemoteInfoList;
  }

  public void setVcenterBasedRemoteInfoList(List vcenterBasedRemoteInfoList) {
    this.vcenterBasedRemoteInfoList = vcenterBasedRemoteInfoList;
  }


  public CollectorConfigurationSummary versionControlInfoList(List versionControlInfoList) {
    this.versionControlInfoList = versionControlInfoList;
    return this;
  }

  /**
   * Get versionControlInfoList
   * @return versionControlInfoList
   */
  @javax.annotation.Nullable
  public List getVersionControlInfoList() {
    return versionControlInfoList;
  }

  public void setVersionControlInfoList(List versionControlInfoList) {
    this.versionControlInfoList = versionControlInfoList;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CollectorConfigurationSummary collectorConfigurationSummary = (CollectorConfigurationSummary) o;
    return Objects.equals(this.ipAddressBasedRemoteInfoList, collectorConfigurationSummary.ipAddressBasedRemoteInfoList) &&
        Objects.equals(this.pipelineInfoList, collectorConfigurationSummary.pipelineInfoList) &&
        Objects.equals(this.remoteSourceCodeAnalysisServerInfo, collectorConfigurationSummary.remoteSourceCodeAnalysisServerInfo) &&
        Objects.equals(this.vcenterBasedRemoteInfoList, collectorConfigurationSummary.vcenterBasedRemoteInfoList) &&
        Objects.equals(this.versionControlInfoList, collectorConfigurationSummary.versionControlInfoList);
  }

  @Override
  public int hashCode() {
    return Objects.hash(ipAddressBasedRemoteInfoList, pipelineInfoList, remoteSourceCodeAnalysisServerInfo, vcenterBasedRemoteInfoList, versionControlInfoList);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CollectorConfigurationSummary {\n");
    sb.append("    ipAddressBasedRemoteInfoList: ").append(toIndentedString(ipAddressBasedRemoteInfoList)).append("\n");
    sb.append("    pipelineInfoList: ").append(toIndentedString(pipelineInfoList)).append("\n");
    sb.append("    remoteSourceCodeAnalysisServerInfo: ").append(toIndentedString(remoteSourceCodeAnalysisServerInfo)).append("\n");
    sb.append("    vcenterBasedRemoteInfoList: ").append(toIndentedString(vcenterBasedRemoteInfoList)).append("\n");
    sb.append("    versionControlInfoList: ").append(toIndentedString(versionControlInfoList)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("ipAddressBasedRemoteInfoList");
    openapiFields.add("pipelineInfoList");
    openapiFields.add("remoteSourceCodeAnalysisServerInfo");
    openapiFields.add("vcenterBasedRemoteInfoList");
    openapiFields.add("versionControlInfoList");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to CollectorConfigurationSummary
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!CollectorConfigurationSummary.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in CollectorConfigurationSummary is not found in the empty JSON string", CollectorConfigurationSummary.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!CollectorConfigurationSummary.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `CollectorConfigurationSummary` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // validate the optional field `ipAddressBasedRemoteInfoList`
      if (jsonObj.get("ipAddressBasedRemoteInfoList") != null && !jsonObj.get("ipAddressBasedRemoteInfoList").isJsonNull()) {
        List.validateJsonElement(jsonObj.get("ipAddressBasedRemoteInfoList"));
      }
      // validate the optional field `pipelineInfoList`
      if (jsonObj.get("pipelineInfoList") != null && !jsonObj.get("pipelineInfoList").isJsonNull()) {
        List.validateJsonElement(jsonObj.get("pipelineInfoList"));
      }
      // validate the optional field `remoteSourceCodeAnalysisServerInfo`
      if (jsonObj.get("remoteSourceCodeAnalysisServerInfo") != null && !jsonObj.get("remoteSourceCodeAnalysisServerInfo").isJsonNull()) {
        ConfigurationSummaryRemoteSourceCodeAnalysisServerInfo.validateJsonElement(jsonObj.get("remoteSourceCodeAnalysisServerInfo"));
      }
      // validate the optional field `vcenterBasedRemoteInfoList`
      if (jsonObj.get("vcenterBasedRemoteInfoList") != null && !jsonObj.get("vcenterBasedRemoteInfoList").isJsonNull()) {
        List.validateJsonElement(jsonObj.get("vcenterBasedRemoteInfoList"));
      }
      // validate the optional field `versionControlInfoList`
      if (jsonObj.get("versionControlInfoList") != null && !jsonObj.get("versionControlInfoList").isJsonNull()) {
        List.validateJsonElement(jsonObj.get("versionControlInfoList"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!CollectorConfigurationSummary.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'CollectorConfigurationSummary' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<CollectorConfigurationSummary> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(CollectorConfigurationSummary.class));

       return (TypeAdapter<T>) new TypeAdapter<CollectorConfigurationSummary>() {
           @Override
           public void write(JsonWriter out, CollectorConfigurationSummary value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public CollectorConfigurationSummary read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of CollectorConfigurationSummary given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of CollectorConfigurationSummary
   * @throws IOException if the JSON string is invalid with respect to CollectorConfigurationSummary
   */
  public static CollectorConfigurationSummary fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, CollectorConfigurationSummary.class);
  }

  /**
   * Convert an instance of CollectorConfigurationSummary to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

