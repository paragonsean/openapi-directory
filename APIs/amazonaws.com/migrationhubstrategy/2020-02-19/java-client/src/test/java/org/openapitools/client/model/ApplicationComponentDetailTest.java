/*
 * Migration Hub Strategy Recommendations
 * <p><fullname>Migration Hub Strategy Recommendations</fullname> <p>This API reference provides descriptions, syntax, and other details about each of the actions and data types for Migration Hub Strategy Recommendations (Strategy Recommendations). The topic for each action shows the API request parameters and the response. Alternatively, you can use one of the AWS SDKs to access an API that is tailored to the programming language or platform that you're using. For more information, see <a href=\"http://aws.amazon.com/tools/#SDKs\">AWS SDKs</a>.</p></p>
 *
 * The version of the OpenAPI document: 2020-02-19
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.time.OffsetDateTime;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.AntipatternReportStatus;
import org.openapitools.client.model.AppType;
import org.openapitools.client.model.ApplicationComponentDetailAntipatternReportS3Object;
import org.openapitools.client.model.ApplicationComponentDetailAppUnitError;
import org.openapitools.client.model.ApplicationComponentDetailDatabaseConfigDetail;
import org.openapitools.client.model.ApplicationComponentDetailRecommendationSet;
import org.openapitools.client.model.InclusionStatus;
import org.openapitools.client.model.ResourceSubType;
import org.openapitools.client.model.RuntimeAnalysisStatus;
import org.openapitools.client.model.SrcCodeOrDbAnalysisStatus;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

/**
 * Model tests for ApplicationComponentDetail
 */
public class ApplicationComponentDetailTest {
    private final ApplicationComponentDetail model = new ApplicationComponentDetail();

    /**
     * Model tests for ApplicationComponentDetail
     */
    @Test
    public void testApplicationComponentDetail() {
        // TODO: test ApplicationComponentDetail
    }

    /**
     * Test the property 'analysisStatus'
     */
    @Test
    public void analysisStatusTest() {
        // TODO: test analysisStatus
    }

    /**
     * Test the property 'antipatternReportS3Object'
     */
    @Test
    public void antipatternReportS3ObjectTest() {
        // TODO: test antipatternReportS3Object
    }

    /**
     * Test the property 'antipatternReportStatus'
     */
    @Test
    public void antipatternReportStatusTest() {
        // TODO: test antipatternReportStatus
    }

    /**
     * Test the property 'antipatternReportStatusMessage'
     */
    @Test
    public void antipatternReportStatusMessageTest() {
        // TODO: test antipatternReportStatusMessage
    }

    /**
     * Test the property 'appType'
     */
    @Test
    public void appTypeTest() {
        // TODO: test appType
    }

    /**
     * Test the property 'appUnitError'
     */
    @Test
    public void appUnitErrorTest() {
        // TODO: test appUnitError
    }

    /**
     * Test the property 'associatedServerId'
     */
    @Test
    public void associatedServerIdTest() {
        // TODO: test associatedServerId
    }

    /**
     * Test the property 'databaseConfigDetail'
     */
    @Test
    public void databaseConfigDetailTest() {
        // TODO: test databaseConfigDetail
    }

    /**
     * Test the property 'id'
     */
    @Test
    public void idTest() {
        // TODO: test id
    }

    /**
     * Test the property 'inclusionStatus'
     */
    @Test
    public void inclusionStatusTest() {
        // TODO: test inclusionStatus
    }

    /**
     * Test the property 'lastAnalyzedTimestamp'
     */
    @Test
    public void lastAnalyzedTimestampTest() {
        // TODO: test lastAnalyzedTimestamp
    }

    /**
     * Test the property 'listAntipatternSeveritySummary'
     */
    @Test
    public void listAntipatternSeveritySummaryTest() {
        // TODO: test listAntipatternSeveritySummary
    }

    /**
     * Test the property 'moreServerAssociationExists'
     */
    @Test
    public void moreServerAssociationExistsTest() {
        // TODO: test moreServerAssociationExists
    }

    /**
     * Test the property 'name'
     */
    @Test
    public void nameTest() {
        // TODO: test name
    }

    /**
     * Test the property 'osDriver'
     */
    @Test
    public void osDriverTest() {
        // TODO: test osDriver
    }

    /**
     * Test the property 'osVersion'
     */
    @Test
    public void osVersionTest() {
        // TODO: test osVersion
    }

    /**
     * Test the property 'recommendationSet'
     */
    @Test
    public void recommendationSetTest() {
        // TODO: test recommendationSet
    }

    /**
     * Test the property 'resourceSubType'
     */
    @Test
    public void resourceSubTypeTest() {
        // TODO: test resourceSubType
    }

    /**
     * Test the property 'resultList'
     */
    @Test
    public void resultListTest() {
        // TODO: test resultList
    }

    /**
     * Test the property 'runtimeStatus'
     */
    @Test
    public void runtimeStatusTest() {
        // TODO: test runtimeStatus
    }

    /**
     * Test the property 'runtimeStatusMessage'
     */
    @Test
    public void runtimeStatusMessageTest() {
        // TODO: test runtimeStatusMessage
    }

    /**
     * Test the property 'sourceCodeRepositories'
     */
    @Test
    public void sourceCodeRepositoriesTest() {
        // TODO: test sourceCodeRepositories
    }

    /**
     * Test the property 'statusMessage'
     */
    @Test
    public void statusMessageTest() {
        // TODO: test statusMessage
    }

}
