/**
 * Migration Hub Strategy Recommendations
 * <p><fullname>Migration Hub Strategy Recommendations</fullname> <p>This API reference provides descriptions, syntax, and other details about each of the actions and data types for Migration Hub Strategy Recommendations (Strategy Recommendations). The topic for each action shows the API request parameters and the response. Alternatively, you can use one of the AWS SDKs to access an API that is tailored to the programming language or platform that you're using. For more information, see <a href=\"http://aws.amazon.com/tools/#SDKs\">AWS SDKs</a>.</p></p>
 *
 * The version of the OpenAPI document: 2020-02-19
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import Condition from './Condition';

/**
 * The AssessmentTarget model module.
 * @module model/AssessmentTarget
 * @version 2020-02-19
 */
class AssessmentTarget {
    /**
     * Constructs a new <code>AssessmentTarget</code>.
     * Defines the criteria of assessment.
     * @alias module:model/AssessmentTarget
     * @param condition {module:model/Condition} 
     * @param name {String} 
     * @param values {Array} 
     */
    constructor(condition, name, values) { 
        
        AssessmentTarget.initialize(this, condition, name, values);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, condition, name, values) { 
        obj['condition'] = condition;
        obj['name'] = name;
        obj['values'] = values;
    }

    /**
     * Constructs a <code>AssessmentTarget</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/AssessmentTarget} obj Optional instance to populate.
     * @return {module:model/AssessmentTarget} The populated <code>AssessmentTarget</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new AssessmentTarget();

            if (data.hasOwnProperty('condition')) {
                obj['condition'] = ApiClient.convertToType(data['condition'], Condition);
            }
            if (data.hasOwnProperty('name')) {
                obj['name'] = ApiClient.convertToType(data['name'], 'String');
            }
            if (data.hasOwnProperty('values')) {
                obj['values'] = ApiClient.convertToType(data['values'], Array);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>AssessmentTarget</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>AssessmentTarget</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of AssessmentTarget.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // validate the optional field `condition`
        if (data['condition']) { // data not null
          Condition.validateJSON(data['condition']);
        }
        // validate the optional field `name`
        if (data['name']) { // data not null
          String.validateJSON(data['name']);
        }
        // validate the optional field `values`
        if (data['values']) { // data not null
          Array.validateJSON(data['values']);
        }

        return true;
    }


}

AssessmentTarget.RequiredProperties = ["condition", "name", "values"];

/**
 * @member {module:model/Condition} condition
 */
AssessmentTarget.prototype['condition'] = undefined;

/**
 * @member {String} name
 */
AssessmentTarget.prototype['name'] = undefined;

/**
 * @member {Array} values
 */
AssessmentTarget.prototype['values'] = undefined;






export default AssessmentTarget;

