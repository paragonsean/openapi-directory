/**
 * Migration Hub Strategy Recommendations
 * <p><fullname>Migration Hub Strategy Recommendations</fullname> <p>This API reference provides descriptions, syntax, and other details about each of the actions and data types for Migration Hub Strategy Recommendations (Strategy Recommendations). The topic for each action shows the API request parameters and the response. Alternatively, you can use one of the AWS SDKs to access an API that is tailored to the programming language or platform that you're using. For more information, see <a href=\"http://aws.amazon.com/tools/#SDKs\">AWS SDKs</a>.</p></p>
 *
 * The version of the OpenAPI document: 2020-02-19
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import Group from './Group';

/**
 * The ListApplicationComponentsRequest model module.
 * @module model/ListApplicationComponentsRequest
 * @version 2020-02-19
 */
class ListApplicationComponentsRequest {
    /**
     * Constructs a new <code>ListApplicationComponentsRequest</code>.
     * @alias module:model/ListApplicationComponentsRequest
     */
    constructor() { 
        
        ListApplicationComponentsRequest.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>ListApplicationComponentsRequest</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ListApplicationComponentsRequest} obj Optional instance to populate.
     * @return {module:model/ListApplicationComponentsRequest} The populated <code>ListApplicationComponentsRequest</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ListApplicationComponentsRequest();

            if (data.hasOwnProperty('applicationComponentCriteria')) {
                obj['applicationComponentCriteria'] = ApiClient.convertToType(data['applicationComponentCriteria'], 'String');
            }
            if (data.hasOwnProperty('filterValue')) {
                obj['filterValue'] = ApiClient.convertToType(data['filterValue'], 'String');
            }
            if (data.hasOwnProperty('groupIdFilter')) {
                obj['groupIdFilter'] = ApiClient.convertToType(data['groupIdFilter'], [Group]);
            }
            if (data.hasOwnProperty('maxResults')) {
                obj['maxResults'] = ApiClient.convertToType(data['maxResults'], 'Number');
            }
            if (data.hasOwnProperty('nextToken')) {
                obj['nextToken'] = ApiClient.convertToType(data['nextToken'], 'String');
            }
            if (data.hasOwnProperty('sort')) {
                obj['sort'] = ApiClient.convertToType(data['sort'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>ListApplicationComponentsRequest</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>ListApplicationComponentsRequest</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['applicationComponentCriteria'] && !(typeof data['applicationComponentCriteria'] === 'string' || data['applicationComponentCriteria'] instanceof String)) {
            throw new Error("Expected the field `applicationComponentCriteria` to be a primitive type in the JSON string but got " + data['applicationComponentCriteria']);
        }
        // ensure the json data is a string
        if (data['filterValue'] && !(typeof data['filterValue'] === 'string' || data['filterValue'] instanceof String)) {
            throw new Error("Expected the field `filterValue` to be a primitive type in the JSON string but got " + data['filterValue']);
        }
        if (data['groupIdFilter']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['groupIdFilter'])) {
                throw new Error("Expected the field `groupIdFilter` to be an array in the JSON data but got " + data['groupIdFilter']);
            }
            // validate the optional field `groupIdFilter` (array)
            for (const item of data['groupIdFilter']) {
                Group.validateJSON(item);
            };
        }
        // ensure the json data is a string
        if (data['nextToken'] && !(typeof data['nextToken'] === 'string' || data['nextToken'] instanceof String)) {
            throw new Error("Expected the field `nextToken` to be a primitive type in the JSON string but got " + data['nextToken']);
        }
        // ensure the json data is a string
        if (data['sort'] && !(typeof data['sort'] === 'string' || data['sort'] instanceof String)) {
            throw new Error("Expected the field `sort` to be a primitive type in the JSON string but got " + data['sort']);
        }

        return true;
    }


}



/**
 *  Criteria for filtering the list of application components. 
 * @member {module:model/ListApplicationComponentsRequest.ApplicationComponentCriteriaEnum} applicationComponentCriteria
 */
ListApplicationComponentsRequest.prototype['applicationComponentCriteria'] = undefined;

/**
 *  Specify the value based on the application component criteria type. For example, if <code>applicationComponentCriteria</code> is set to <code>SERVER_ID</code> and <code>filterValue</code> is set to <code>server1</code>, then <a>ListApplicationComponents</a> returns all the application components running on server1. 
 * @member {String} filterValue
 */
ListApplicationComponentsRequest.prototype['filterValue'] = undefined;

/**
 *  The group ID specified in to filter on. 
 * @member {Array.<module:model/Group>} groupIdFilter
 */
ListApplicationComponentsRequest.prototype['groupIdFilter'] = undefined;

/**
 *  The maximum number of items to include in the response. The maximum value is 100. 
 * @member {Number} maxResults
 */
ListApplicationComponentsRequest.prototype['maxResults'] = undefined;

/**
 *  The token from a previous call that you use to retrieve the next set of results. For example, if a previous call to this action returned 100 items, but you set <code>maxResults</code> to 10. You'll receive a set of 10 results along with a token. You then use the returned token to retrieve the next set of 10. 
 * @member {String} nextToken
 */
ListApplicationComponentsRequest.prototype['nextToken'] = undefined;

/**
 *  Specifies whether to sort by ascending (<code>ASC</code>) or descending (<code>DESC</code>) order. 
 * @member {module:model/ListApplicationComponentsRequest.SortEnum} sort
 */
ListApplicationComponentsRequest.prototype['sort'] = undefined;





/**
 * Allowed values for the <code>applicationComponentCriteria</code> property.
 * @enum {String}
 * @readonly
 */
ListApplicationComponentsRequest['ApplicationComponentCriteriaEnum'] = {

    /**
     * value: "NOT_DEFINED"
     * @const
     */
    "NOT_DEFINED": "NOT_DEFINED",

    /**
     * value: "APP_NAME"
     * @const
     */
    "APP_NAME": "APP_NAME",

    /**
     * value: "SERVER_ID"
     * @const
     */
    "SERVER_ID": "SERVER_ID",

    /**
     * value: "APP_TYPE"
     * @const
     */
    "APP_TYPE": "APP_TYPE",

    /**
     * value: "STRATEGY"
     * @const
     */
    "STRATEGY": "STRATEGY",

    /**
     * value: "DESTINATION"
     * @const
     */
    "DESTINATION": "DESTINATION",

    /**
     * value: "ANALYSIS_STATUS"
     * @const
     */
    "ANALYSIS_STATUS": "ANALYSIS_STATUS",

    /**
     * value: "ERROR_CATEGORY"
     * @const
     */
    "ERROR_CATEGORY": "ERROR_CATEGORY"
};


/**
 * Allowed values for the <code>sort</code> property.
 * @enum {String}
 * @readonly
 */
ListApplicationComponentsRequest['SortEnum'] = {

    /**
     * value: "ASC"
     * @const
     */
    "ASC": "ASC",

    /**
     * value: "DESC"
     * @const
     */
    "DESC": "DESC"
};



export default ListApplicationComponentsRequest;

