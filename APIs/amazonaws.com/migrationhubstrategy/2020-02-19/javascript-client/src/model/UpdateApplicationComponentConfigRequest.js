/**
 * Migration Hub Strategy Recommendations
 * <p><fullname>Migration Hub Strategy Recommendations</fullname> <p>This API reference provides descriptions, syntax, and other details about each of the actions and data types for Migration Hub Strategy Recommendations (Strategy Recommendations). The topic for each action shows the API request parameters and the response. Alternatively, you can use one of the AWS SDKs to access an API that is tailored to the programming language or platform that you're using. For more information, see <a href=\"http://aws.amazon.com/tools/#SDKs\">AWS SDKs</a>.</p></p>
 *
 * The version of the OpenAPI document: 2020-02-19
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import SourceCode from './SourceCode';
import UpdateApplicationComponentConfigRequestStrategyOption from './UpdateApplicationComponentConfigRequestStrategyOption';

/**
 * The UpdateApplicationComponentConfigRequest model module.
 * @module model/UpdateApplicationComponentConfigRequest
 * @version 2020-02-19
 */
class UpdateApplicationComponentConfigRequest {
    /**
     * Constructs a new <code>UpdateApplicationComponentConfigRequest</code>.
     * @alias module:model/UpdateApplicationComponentConfigRequest
     * @param applicationComponentId {String}  The ID of the application component. The ID is unique within an AWS account. 
     */
    constructor(applicationComponentId) { 
        
        UpdateApplicationComponentConfigRequest.initialize(this, applicationComponentId);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, applicationComponentId) { 
        obj['applicationComponentId'] = applicationComponentId;
    }

    /**
     * Constructs a <code>UpdateApplicationComponentConfigRequest</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/UpdateApplicationComponentConfigRequest} obj Optional instance to populate.
     * @return {module:model/UpdateApplicationComponentConfigRequest} The populated <code>UpdateApplicationComponentConfigRequest</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new UpdateApplicationComponentConfigRequest();

            if (data.hasOwnProperty('appType')) {
                obj['appType'] = ApiClient.convertToType(data['appType'], 'String');
            }
            if (data.hasOwnProperty('applicationComponentId')) {
                obj['applicationComponentId'] = ApiClient.convertToType(data['applicationComponentId'], 'String');
            }
            if (data.hasOwnProperty('configureOnly')) {
                obj['configureOnly'] = ApiClient.convertToType(data['configureOnly'], 'Boolean');
            }
            if (data.hasOwnProperty('inclusionStatus')) {
                obj['inclusionStatus'] = ApiClient.convertToType(data['inclusionStatus'], 'String');
            }
            if (data.hasOwnProperty('secretsManagerKey')) {
                obj['secretsManagerKey'] = ApiClient.convertToType(data['secretsManagerKey'], 'String');
            }
            if (data.hasOwnProperty('sourceCodeList')) {
                obj['sourceCodeList'] = ApiClient.convertToType(data['sourceCodeList'], [SourceCode]);
            }
            if (data.hasOwnProperty('strategyOption')) {
                obj['strategyOption'] = UpdateApplicationComponentConfigRequestStrategyOption.constructFromObject(data['strategyOption']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>UpdateApplicationComponentConfigRequest</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>UpdateApplicationComponentConfigRequest</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of UpdateApplicationComponentConfigRequest.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['appType'] && !(typeof data['appType'] === 'string' || data['appType'] instanceof String)) {
            throw new Error("Expected the field `appType` to be a primitive type in the JSON string but got " + data['appType']);
        }
        // ensure the json data is a string
        if (data['applicationComponentId'] && !(typeof data['applicationComponentId'] === 'string' || data['applicationComponentId'] instanceof String)) {
            throw new Error("Expected the field `applicationComponentId` to be a primitive type in the JSON string but got " + data['applicationComponentId']);
        }
        // ensure the json data is a string
        if (data['inclusionStatus'] && !(typeof data['inclusionStatus'] === 'string' || data['inclusionStatus'] instanceof String)) {
            throw new Error("Expected the field `inclusionStatus` to be a primitive type in the JSON string but got " + data['inclusionStatus']);
        }
        // ensure the json data is a string
        if (data['secretsManagerKey'] && !(typeof data['secretsManagerKey'] === 'string' || data['secretsManagerKey'] instanceof String)) {
            throw new Error("Expected the field `secretsManagerKey` to be a primitive type in the JSON string but got " + data['secretsManagerKey']);
        }
        if (data['sourceCodeList']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['sourceCodeList'])) {
                throw new Error("Expected the field `sourceCodeList` to be an array in the JSON data but got " + data['sourceCodeList']);
            }
            // validate the optional field `sourceCodeList` (array)
            for (const item of data['sourceCodeList']) {
                SourceCode.validateJSON(item);
            };
        }
        // validate the optional field `strategyOption`
        if (data['strategyOption']) { // data not null
          UpdateApplicationComponentConfigRequestStrategyOption.validateJSON(data['strategyOption']);
        }

        return true;
    }


}

UpdateApplicationComponentConfigRequest.RequiredProperties = ["applicationComponentId"];

/**
 * The type of known component.
 * @member {module:model/UpdateApplicationComponentConfigRequest.AppTypeEnum} appType
 */
UpdateApplicationComponentConfigRequest.prototype['appType'] = undefined;

/**
 *  The ID of the application component. The ID is unique within an AWS account. 
 * @member {String} applicationComponentId
 */
UpdateApplicationComponentConfigRequest.prototype['applicationComponentId'] = undefined;

/**
 * Update the configuration request of an application component. If it is set to true, the source code and/or database credentials are updated. If it is set to false, the source code and/or database credentials are updated and an analysis is initiated.
 * @member {Boolean} configureOnly
 */
UpdateApplicationComponentConfigRequest.prototype['configureOnly'] = undefined;

/**
 *  Indicates whether the application component has been included for server recommendation or not. 
 * @member {module:model/UpdateApplicationComponentConfigRequest.InclusionStatusEnum} inclusionStatus
 */
UpdateApplicationComponentConfigRequest.prototype['inclusionStatus'] = undefined;

/**
 *  Database credentials. 
 * @member {String} secretsManagerKey
 */
UpdateApplicationComponentConfigRequest.prototype['secretsManagerKey'] = undefined;

/**
 *  The list of source code configurations to update for the application component. 
 * @member {Array.<module:model/SourceCode>} sourceCodeList
 */
UpdateApplicationComponentConfigRequest.prototype['sourceCodeList'] = undefined;

/**
 * @member {module:model/UpdateApplicationComponentConfigRequestStrategyOption} strategyOption
 */
UpdateApplicationComponentConfigRequest.prototype['strategyOption'] = undefined;





/**
 * Allowed values for the <code>appType</code> property.
 * @enum {String}
 * @readonly
 */
UpdateApplicationComponentConfigRequest['AppTypeEnum'] = {

    /**
     * value: "DotNetFramework"
     * @const
     */
    "DotNetFramework": "DotNetFramework",

    /**
     * value: "Java"
     * @const
     */
    "Java": "Java",

    /**
     * value: "SQLServer"
     * @const
     */
    "SQLServer": "SQLServer",

    /**
     * value: "IIS"
     * @const
     */
    "IIS": "IIS",

    /**
     * value: "Oracle"
     * @const
     */
    "Oracle": "Oracle",

    /**
     * value: "Other"
     * @const
     */
    "Other": "Other",

    /**
     * value: "Tomcat"
     * @const
     */
    "Tomcat": "Tomcat",

    /**
     * value: "JBoss"
     * @const
     */
    "JBoss": "JBoss",

    /**
     * value: "Spring"
     * @const
     */
    "Spring": "Spring",

    /**
     * value: "Mongo DB"
     * @const
     */
    "Mongo DB": "Mongo DB",

    /**
     * value: "DB2"
     * @const
     */
    "DB2": "DB2",

    /**
     * value: "Maria DB"
     * @const
     */
    "Maria DB": "Maria DB",

    /**
     * value: "MySQL"
     * @const
     */
    "MySQL": "MySQL",

    /**
     * value: "Sybase"
     * @const
     */
    "Sybase": "Sybase",

    /**
     * value: "PostgreSQLServer"
     * @const
     */
    "PostgreSQLServer": "PostgreSQLServer",

    /**
     * value: "Cassandra"
     * @const
     */
    "Cassandra": "Cassandra",

    /**
     * value: "IBM WebSphere"
     * @const
     */
    "IBM WebSphere": "IBM WebSphere",

    /**
     * value: "Oracle WebLogic"
     * @const
     */
    "Oracle WebLogic": "Oracle WebLogic",

    /**
     * value: "Visual Basic"
     * @const
     */
    "Visual Basic": "Visual Basic",

    /**
     * value: "Unknown"
     * @const
     */
    "Unknown": "Unknown",

    /**
     * value: "DotnetCore"
     * @const
     */
    "DotnetCore": "DotnetCore",

    /**
     * value: "Dotnet"
     * @const
     */
    "Dotnet": "Dotnet"
};


/**
 * Allowed values for the <code>inclusionStatus</code> property.
 * @enum {String}
 * @readonly
 */
UpdateApplicationComponentConfigRequest['InclusionStatusEnum'] = {

    /**
     * value: "excludeFromAssessment"
     * @const
     */
    "excludeFromAssessment": "excludeFromAssessment",

    /**
     * value: "includeInAssessment"
     * @const
     */
    "includeInAssessment": "includeInAssessment"
};



export default UpdateApplicationComponentConfigRequest;

