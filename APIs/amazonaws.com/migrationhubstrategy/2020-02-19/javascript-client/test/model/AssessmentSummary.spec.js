/**
 * Migration Hub Strategy Recommendations
 * <p><fullname>Migration Hub Strategy Recommendations</fullname> <p>This API reference provides descriptions, syntax, and other details about each of the actions and data types for Migration Hub Strategy Recommendations (Strategy Recommendations). The topic for each action shows the API request parameters and the response. Alternatively, you can use one of the AWS SDKs to access an API that is tailored to the programming language or platform that you're using. For more information, see <a href=\"http://aws.amazon.com/tools/#SDKs\">AWS SDKs</a>.</p></p>
 *
 * The version of the OpenAPI document: 2020-02-19
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.MigrationHubStrategyRecommendations);
  }
}(this, function(expect, MigrationHubStrategyRecommendations) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new MigrationHubStrategyRecommendations.AssessmentSummary();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('AssessmentSummary', function() {
    it('should create an instance of AssessmentSummary', function() {
      // uncomment below and update the code to test AssessmentSummary
      //var instance = new MigrationHubStrategyRecommendations.AssessmentSummary();
      //expect(instance).to.be.a(MigrationHubStrategyRecommendations.AssessmentSummary);
    });

    it('should have the property antipatternReportS3Object (base name: "antipatternReportS3Object")', function() {
      // uncomment below and update the code to test the property antipatternReportS3Object
      //var instance = new MigrationHubStrategyRecommendations.AssessmentSummary();
      //expect(instance).to.be();
    });

    it('should have the property antipatternReportStatus (base name: "antipatternReportStatus")', function() {
      // uncomment below and update the code to test the property antipatternReportStatus
      //var instance = new MigrationHubStrategyRecommendations.AssessmentSummary();
      //expect(instance).to.be();
    });

    it('should have the property antipatternReportStatusMessage (base name: "antipatternReportStatusMessage")', function() {
      // uncomment below and update the code to test the property antipatternReportStatusMessage
      //var instance = new MigrationHubStrategyRecommendations.AssessmentSummary();
      //expect(instance).to.be();
    });

    it('should have the property lastAnalyzedTimestamp (base name: "lastAnalyzedTimestamp")', function() {
      // uncomment below and update the code to test the property lastAnalyzedTimestamp
      //var instance = new MigrationHubStrategyRecommendations.AssessmentSummary();
      //expect(instance).to.be();
    });

    it('should have the property listAntipatternSeveritySummary (base name: "listAntipatternSeveritySummary")', function() {
      // uncomment below and update the code to test the property listAntipatternSeveritySummary
      //var instance = new MigrationHubStrategyRecommendations.AssessmentSummary();
      //expect(instance).to.be();
    });

    it('should have the property listApplicationComponentStatusSummary (base name: "listApplicationComponentStatusSummary")', function() {
      // uncomment below and update the code to test the property listApplicationComponentStatusSummary
      //var instance = new MigrationHubStrategyRecommendations.AssessmentSummary();
      //expect(instance).to.be();
    });

    it('should have the property listApplicationComponentStrategySummary (base name: "listApplicationComponentStrategySummary")', function() {
      // uncomment below and update the code to test the property listApplicationComponentStrategySummary
      //var instance = new MigrationHubStrategyRecommendations.AssessmentSummary();
      //expect(instance).to.be();
    });

    it('should have the property listApplicationComponentSummary (base name: "listApplicationComponentSummary")', function() {
      // uncomment below and update the code to test the property listApplicationComponentSummary
      //var instance = new MigrationHubStrategyRecommendations.AssessmentSummary();
      //expect(instance).to.be();
    });

    it('should have the property listServerStatusSummary (base name: "listServerStatusSummary")', function() {
      // uncomment below and update the code to test the property listServerStatusSummary
      //var instance = new MigrationHubStrategyRecommendations.AssessmentSummary();
      //expect(instance).to.be();
    });

    it('should have the property listServerStrategySummary (base name: "listServerStrategySummary")', function() {
      // uncomment below and update the code to test the property listServerStrategySummary
      //var instance = new MigrationHubStrategyRecommendations.AssessmentSummary();
      //expect(instance).to.be();
    });

    it('should have the property listServerSummary (base name: "listServerSummary")', function() {
      // uncomment below and update the code to test the property listServerSummary
      //var instance = new MigrationHubStrategyRecommendations.AssessmentSummary();
      //expect(instance).to.be();
    });

  });

}));
