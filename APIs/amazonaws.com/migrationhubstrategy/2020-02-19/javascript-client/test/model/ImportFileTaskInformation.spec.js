/**
 * Migration Hub Strategy Recommendations
 * <p><fullname>Migration Hub Strategy Recommendations</fullname> <p>This API reference provides descriptions, syntax, and other details about each of the actions and data types for Migration Hub Strategy Recommendations (Strategy Recommendations). The topic for each action shows the API request parameters and the response. Alternatively, you can use one of the AWS SDKs to access an API that is tailored to the programming language or platform that you're using. For more information, see <a href=\"http://aws.amazon.com/tools/#SDKs\">AWS SDKs</a>.</p></p>
 *
 * The version of the OpenAPI document: 2020-02-19
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.MigrationHubStrategyRecommendations);
  }
}(this, function(expect, MigrationHubStrategyRecommendations) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new MigrationHubStrategyRecommendations.ImportFileTaskInformation();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('ImportFileTaskInformation', function() {
    it('should create an instance of ImportFileTaskInformation', function() {
      // uncomment below and update the code to test ImportFileTaskInformation
      //var instance = new MigrationHubStrategyRecommendations.ImportFileTaskInformation();
      //expect(instance).to.be.a(MigrationHubStrategyRecommendations.ImportFileTaskInformation);
    });

    it('should have the property completionTime (base name: "completionTime")', function() {
      // uncomment below and update the code to test the property completionTime
      //var instance = new MigrationHubStrategyRecommendations.ImportFileTaskInformation();
      //expect(instance).to.be();
    });

    it('should have the property id (base name: "id")', function() {
      // uncomment below and update the code to test the property id
      //var instance = new MigrationHubStrategyRecommendations.ImportFileTaskInformation();
      //expect(instance).to.be();
    });

    it('should have the property importName (base name: "importName")', function() {
      // uncomment below and update the code to test the property importName
      //var instance = new MigrationHubStrategyRecommendations.ImportFileTaskInformation();
      //expect(instance).to.be();
    });

    it('should have the property inputS3Bucket (base name: "inputS3Bucket")', function() {
      // uncomment below and update the code to test the property inputS3Bucket
      //var instance = new MigrationHubStrategyRecommendations.ImportFileTaskInformation();
      //expect(instance).to.be();
    });

    it('should have the property inputS3Key (base name: "inputS3Key")', function() {
      // uncomment below and update the code to test the property inputS3Key
      //var instance = new MigrationHubStrategyRecommendations.ImportFileTaskInformation();
      //expect(instance).to.be();
    });

    it('should have the property numberOfRecordsFailed (base name: "numberOfRecordsFailed")', function() {
      // uncomment below and update the code to test the property numberOfRecordsFailed
      //var instance = new MigrationHubStrategyRecommendations.ImportFileTaskInformation();
      //expect(instance).to.be();
    });

    it('should have the property numberOfRecordsSuccess (base name: "numberOfRecordsSuccess")', function() {
      // uncomment below and update the code to test the property numberOfRecordsSuccess
      //var instance = new MigrationHubStrategyRecommendations.ImportFileTaskInformation();
      //expect(instance).to.be();
    });

    it('should have the property startTime (base name: "startTime")', function() {
      // uncomment below and update the code to test the property startTime
      //var instance = new MigrationHubStrategyRecommendations.ImportFileTaskInformation();
      //expect(instance).to.be();
    });

    it('should have the property status (base name: "status")', function() {
      // uncomment below and update the code to test the property status
      //var instance = new MigrationHubStrategyRecommendations.ImportFileTaskInformation();
      //expect(instance).to.be();
    });

    it('should have the property statusReportS3Bucket (base name: "statusReportS3Bucket")', function() {
      // uncomment below and update the code to test the property statusReportS3Bucket
      //var instance = new MigrationHubStrategyRecommendations.ImportFileTaskInformation();
      //expect(instance).to.be();
    });

    it('should have the property statusReportS3Key (base name: "statusReportS3Key")', function() {
      // uncomment below and update the code to test the property statusReportS3Key
      //var instance = new MigrationHubStrategyRecommendations.ImportFileTaskInformation();
      //expect(instance).to.be();
    });

  });

}));
