/**
 * Migration Hub Strategy Recommendations
 * <p><fullname>Migration Hub Strategy Recommendations</fullname> <p>This API reference provides descriptions, syntax, and other details about each of the actions and data types for Migration Hub Strategy Recommendations (Strategy Recommendations). The topic for each action shows the API request parameters and the response. Alternatively, you can use one of the AWS SDKs to access an API that is tailored to the programming language or platform that you're using. For more information, see <a href=\"http://aws.amazon.com/tools/#SDKs\">AWS SDKs</a>.</p></p>
 *
 * The version of the OpenAPI document: 2020-02-19
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.MigrationHubStrategyRecommendations);
  }
}(this, function(expect, MigrationHubStrategyRecommendations) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new MigrationHubStrategyRecommendations.DefaultApi();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('DefaultApi', function() {
    describe('getApplicationComponentDetails', function() {
      it('should call getApplicationComponentDetails successfully', function(done) {
        //uncomment below and update the code to test getApplicationComponentDetails
        //instance.getApplicationComponentDetails(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getApplicationComponentStrategies', function() {
      it('should call getApplicationComponentStrategies successfully', function(done) {
        //uncomment below and update the code to test getApplicationComponentStrategies
        //instance.getApplicationComponentStrategies(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getAssessment', function() {
      it('should call getAssessment successfully', function(done) {
        //uncomment below and update the code to test getAssessment
        //instance.getAssessment(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getImportFileTask', function() {
      it('should call getImportFileTask successfully', function(done) {
        //uncomment below and update the code to test getImportFileTask
        //instance.getImportFileTask(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getLatestAssessmentId', function() {
      it('should call getLatestAssessmentId successfully', function(done) {
        //uncomment below and update the code to test getLatestAssessmentId
        //instance.getLatestAssessmentId(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getPortfolioPreferences', function() {
      it('should call getPortfolioPreferences successfully', function(done) {
        //uncomment below and update the code to test getPortfolioPreferences
        //instance.getPortfolioPreferences(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getPortfolioSummary', function() {
      it('should call getPortfolioSummary successfully', function(done) {
        //uncomment below and update the code to test getPortfolioSummary
        //instance.getPortfolioSummary(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getRecommendationReportDetails', function() {
      it('should call getRecommendationReportDetails successfully', function(done) {
        //uncomment below and update the code to test getRecommendationReportDetails
        //instance.getRecommendationReportDetails(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getServerDetails', function() {
      it('should call getServerDetails successfully', function(done) {
        //uncomment below and update the code to test getServerDetails
        //instance.getServerDetails(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getServerStrategies', function() {
      it('should call getServerStrategies successfully', function(done) {
        //uncomment below and update the code to test getServerStrategies
        //instance.getServerStrategies(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('listApplicationComponents', function() {
      it('should call listApplicationComponents successfully', function(done) {
        //uncomment below and update the code to test listApplicationComponents
        //instance.listApplicationComponents(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('listCollectors', function() {
      it('should call listCollectors successfully', function(done) {
        //uncomment below and update the code to test listCollectors
        //instance.listCollectors(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('listImportFileTask', function() {
      it('should call listImportFileTask successfully', function(done) {
        //uncomment below and update the code to test listImportFileTask
        //instance.listImportFileTask(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('listServers', function() {
      it('should call listServers successfully', function(done) {
        //uncomment below and update the code to test listServers
        //instance.listServers(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('putPortfolioPreferences', function() {
      it('should call putPortfolioPreferences successfully', function(done) {
        //uncomment below and update the code to test putPortfolioPreferences
        //instance.putPortfolioPreferences(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('startAssessment', function() {
      it('should call startAssessment successfully', function(done) {
        //uncomment below and update the code to test startAssessment
        //instance.startAssessment(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('startImportFileTask', function() {
      it('should call startImportFileTask successfully', function(done) {
        //uncomment below and update the code to test startImportFileTask
        //instance.startImportFileTask(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('startRecommendationReportGeneration', function() {
      it('should call startRecommendationReportGeneration successfully', function(done) {
        //uncomment below and update the code to test startRecommendationReportGeneration
        //instance.startRecommendationReportGeneration(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('stopAssessment', function() {
      it('should call stopAssessment successfully', function(done) {
        //uncomment below and update the code to test stopAssessment
        //instance.stopAssessment(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('updateApplicationComponentConfig', function() {
      it('should call updateApplicationComponentConfig successfully', function(done) {
        //uncomment below and update the code to test updateApplicationComponentConfig
        //instance.updateApplicationComponentConfig(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('updateServerConfig', function() {
      it('should call updateServerConfig successfully', function(done) {
        //uncomment below and update the code to test updateServerConfig
        //instance.updateServerConfig(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
  });

}));
