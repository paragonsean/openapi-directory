# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class PutPortfolioPreferencesRequestPrioritizeBusinessGoalsBusinessGoals(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, license_cost_reduction: int=None, modernize_infrastructure_with_cloud_native_technologies: int=None, reduce_operational_overhead_with_managed_services: int=None, speed_of_migration: int=None):
        """PutPortfolioPreferencesRequestPrioritizeBusinessGoalsBusinessGoals - a model defined in OpenAPI

        :param license_cost_reduction: The license_cost_reduction of this PutPortfolioPreferencesRequestPrioritizeBusinessGoalsBusinessGoals.
        :param modernize_infrastructure_with_cloud_native_technologies: The modernize_infrastructure_with_cloud_native_technologies of this PutPortfolioPreferencesRequestPrioritizeBusinessGoalsBusinessGoals.
        :param reduce_operational_overhead_with_managed_services: The reduce_operational_overhead_with_managed_services of this PutPortfolioPreferencesRequestPrioritizeBusinessGoalsBusinessGoals.
        :param speed_of_migration: The speed_of_migration of this PutPortfolioPreferencesRequestPrioritizeBusinessGoalsBusinessGoals.
        """
        self.openapi_types = {
            'license_cost_reduction': int,
            'modernize_infrastructure_with_cloud_native_technologies': int,
            'reduce_operational_overhead_with_managed_services': int,
            'speed_of_migration': int
        }

        self.attribute_map = {
            'license_cost_reduction': 'licenseCostReduction',
            'modernize_infrastructure_with_cloud_native_technologies': 'modernizeInfrastructureWithCloudNativeTechnologies',
            'reduce_operational_overhead_with_managed_services': 'reduceOperationalOverheadWithManagedServices',
            'speed_of_migration': 'speedOfMigration'
        }

        self._license_cost_reduction = license_cost_reduction
        self._modernize_infrastructure_with_cloud_native_technologies = modernize_infrastructure_with_cloud_native_technologies
        self._reduce_operational_overhead_with_managed_services = reduce_operational_overhead_with_managed_services
        self._speed_of_migration = speed_of_migration

    @classmethod
    def from_dict(cls, dikt: dict) -> 'PutPortfolioPreferencesRequestPrioritizeBusinessGoalsBusinessGoals':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The PutPortfolioPreferences_request_prioritizeBusinessGoals_businessGoals of this PutPortfolioPreferencesRequestPrioritizeBusinessGoalsBusinessGoals.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def license_cost_reduction(self):
        """Gets the license_cost_reduction of this PutPortfolioPreferencesRequestPrioritizeBusinessGoalsBusinessGoals.


        :return: The license_cost_reduction of this PutPortfolioPreferencesRequestPrioritizeBusinessGoalsBusinessGoals.
        :rtype: int
        """
        return self._license_cost_reduction

    @license_cost_reduction.setter
    def license_cost_reduction(self, license_cost_reduction):
        """Sets the license_cost_reduction of this PutPortfolioPreferencesRequestPrioritizeBusinessGoalsBusinessGoals.


        :param license_cost_reduction: The license_cost_reduction of this PutPortfolioPreferencesRequestPrioritizeBusinessGoalsBusinessGoals.
        :type license_cost_reduction: int
        """

        self._license_cost_reduction = license_cost_reduction

    @property
    def modernize_infrastructure_with_cloud_native_technologies(self):
        """Gets the modernize_infrastructure_with_cloud_native_technologies of this PutPortfolioPreferencesRequestPrioritizeBusinessGoalsBusinessGoals.


        :return: The modernize_infrastructure_with_cloud_native_technologies of this PutPortfolioPreferencesRequestPrioritizeBusinessGoalsBusinessGoals.
        :rtype: int
        """
        return self._modernize_infrastructure_with_cloud_native_technologies

    @modernize_infrastructure_with_cloud_native_technologies.setter
    def modernize_infrastructure_with_cloud_native_technologies(self, modernize_infrastructure_with_cloud_native_technologies):
        """Sets the modernize_infrastructure_with_cloud_native_technologies of this PutPortfolioPreferencesRequestPrioritizeBusinessGoalsBusinessGoals.


        :param modernize_infrastructure_with_cloud_native_technologies: The modernize_infrastructure_with_cloud_native_technologies of this PutPortfolioPreferencesRequestPrioritizeBusinessGoalsBusinessGoals.
        :type modernize_infrastructure_with_cloud_native_technologies: int
        """

        self._modernize_infrastructure_with_cloud_native_technologies = modernize_infrastructure_with_cloud_native_technologies

    @property
    def reduce_operational_overhead_with_managed_services(self):
        """Gets the reduce_operational_overhead_with_managed_services of this PutPortfolioPreferencesRequestPrioritizeBusinessGoalsBusinessGoals.


        :return: The reduce_operational_overhead_with_managed_services of this PutPortfolioPreferencesRequestPrioritizeBusinessGoalsBusinessGoals.
        :rtype: int
        """
        return self._reduce_operational_overhead_with_managed_services

    @reduce_operational_overhead_with_managed_services.setter
    def reduce_operational_overhead_with_managed_services(self, reduce_operational_overhead_with_managed_services):
        """Sets the reduce_operational_overhead_with_managed_services of this PutPortfolioPreferencesRequestPrioritizeBusinessGoalsBusinessGoals.


        :param reduce_operational_overhead_with_managed_services: The reduce_operational_overhead_with_managed_services of this PutPortfolioPreferencesRequestPrioritizeBusinessGoalsBusinessGoals.
        :type reduce_operational_overhead_with_managed_services: int
        """

        self._reduce_operational_overhead_with_managed_services = reduce_operational_overhead_with_managed_services

    @property
    def speed_of_migration(self):
        """Gets the speed_of_migration of this PutPortfolioPreferencesRequestPrioritizeBusinessGoalsBusinessGoals.


        :return: The speed_of_migration of this PutPortfolioPreferencesRequestPrioritizeBusinessGoalsBusinessGoals.
        :rtype: int
        """
        return self._speed_of_migration

    @speed_of_migration.setter
    def speed_of_migration(self, speed_of_migration):
        """Sets the speed_of_migration of this PutPortfolioPreferencesRequestPrioritizeBusinessGoalsBusinessGoals.


        :param speed_of_migration: The speed_of_migration of this PutPortfolioPreferencesRequestPrioritizeBusinessGoalsBusinessGoals.
        :type speed_of_migration: int
        """

        self._speed_of_migration = speed_of_migration
