# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class NoManagementPreference(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, target_destination: List=None):
        """NoManagementPreference - a model defined in OpenAPI

        :param target_destination: The target_destination of this NoManagementPreference.
        """
        self.openapi_types = {
            'target_destination': List
        }

        self.attribute_map = {
            'target_destination': 'targetDestination'
        }

        self._target_destination = target_destination

    @classmethod
    def from_dict(cls, dikt: dict) -> 'NoManagementPreference':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The NoManagementPreference of this NoManagementPreference.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def target_destination(self):
        """Gets the target_destination of this NoManagementPreference.


        :return: The target_destination of this NoManagementPreference.
        :rtype: List
        """
        return self._target_destination

    @target_destination.setter
    def target_destination(self, target_destination):
        """Sets the target_destination of this NoManagementPreference.


        :param target_destination: The target_destination of this NoManagementPreference.
        :type target_destination: List
        """
        if target_destination is None:
            raise ValueError("Invalid value for `target_destination`, must not be `None`")

        self._target_destination = target_destination
