# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.application_mode import ApplicationMode
from openapi_server.models.get_portfolio_preferences_response_application_preferences import GetPortfolioPreferencesResponseApplicationPreferences
from openapi_server.models.get_portfolio_preferences_response_database_preferences import GetPortfolioPreferencesResponseDatabasePreferences
from openapi_server.models.get_portfolio_preferences_response_prioritize_business_goals import GetPortfolioPreferencesResponsePrioritizeBusinessGoals
from openapi_server import util


class GetPortfolioPreferencesResponse(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, application_mode: ApplicationMode=None, application_preferences: GetPortfolioPreferencesResponseApplicationPreferences=None, database_preferences: GetPortfolioPreferencesResponseDatabasePreferences=None, prioritize_business_goals: GetPortfolioPreferencesResponsePrioritizeBusinessGoals=None):
        """GetPortfolioPreferencesResponse - a model defined in OpenAPI

        :param application_mode: The application_mode of this GetPortfolioPreferencesResponse.
        :param application_preferences: The application_preferences of this GetPortfolioPreferencesResponse.
        :param database_preferences: The database_preferences of this GetPortfolioPreferencesResponse.
        :param prioritize_business_goals: The prioritize_business_goals of this GetPortfolioPreferencesResponse.
        """
        self.openapi_types = {
            'application_mode': ApplicationMode,
            'application_preferences': GetPortfolioPreferencesResponseApplicationPreferences,
            'database_preferences': GetPortfolioPreferencesResponseDatabasePreferences,
            'prioritize_business_goals': GetPortfolioPreferencesResponsePrioritizeBusinessGoals
        }

        self.attribute_map = {
            'application_mode': 'applicationMode',
            'application_preferences': 'applicationPreferences',
            'database_preferences': 'databasePreferences',
            'prioritize_business_goals': 'prioritizeBusinessGoals'
        }

        self._application_mode = application_mode
        self._application_preferences = application_preferences
        self._database_preferences = database_preferences
        self._prioritize_business_goals = prioritize_business_goals

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GetPortfolioPreferencesResponse':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The GetPortfolioPreferencesResponse of this GetPortfolioPreferencesResponse.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def application_mode(self):
        """Gets the application_mode of this GetPortfolioPreferencesResponse.


        :return: The application_mode of this GetPortfolioPreferencesResponse.
        :rtype: ApplicationMode
        """
        return self._application_mode

    @application_mode.setter
    def application_mode(self, application_mode):
        """Sets the application_mode of this GetPortfolioPreferencesResponse.


        :param application_mode: The application_mode of this GetPortfolioPreferencesResponse.
        :type application_mode: ApplicationMode
        """

        self._application_mode = application_mode

    @property
    def application_preferences(self):
        """Gets the application_preferences of this GetPortfolioPreferencesResponse.


        :return: The application_preferences of this GetPortfolioPreferencesResponse.
        :rtype: GetPortfolioPreferencesResponseApplicationPreferences
        """
        return self._application_preferences

    @application_preferences.setter
    def application_preferences(self, application_preferences):
        """Sets the application_preferences of this GetPortfolioPreferencesResponse.


        :param application_preferences: The application_preferences of this GetPortfolioPreferencesResponse.
        :type application_preferences: GetPortfolioPreferencesResponseApplicationPreferences
        """

        self._application_preferences = application_preferences

    @property
    def database_preferences(self):
        """Gets the database_preferences of this GetPortfolioPreferencesResponse.


        :return: The database_preferences of this GetPortfolioPreferencesResponse.
        :rtype: GetPortfolioPreferencesResponseDatabasePreferences
        """
        return self._database_preferences

    @database_preferences.setter
    def database_preferences(self, database_preferences):
        """Sets the database_preferences of this GetPortfolioPreferencesResponse.


        :param database_preferences: The database_preferences of this GetPortfolioPreferencesResponse.
        :type database_preferences: GetPortfolioPreferencesResponseDatabasePreferences
        """

        self._database_preferences = database_preferences

    @property
    def prioritize_business_goals(self):
        """Gets the prioritize_business_goals of this GetPortfolioPreferencesResponse.


        :return: The prioritize_business_goals of this GetPortfolioPreferencesResponse.
        :rtype: GetPortfolioPreferencesResponsePrioritizeBusinessGoals
        """
        return self._prioritize_business_goals

    @prioritize_business_goals.setter
    def prioritize_business_goals(self, prioritize_business_goals):
        """Sets the prioritize_business_goals of this GetPortfolioPreferencesResponse.


        :param prioritize_business_goals: The prioritize_business_goals of this GetPortfolioPreferencesResponse.
        :type prioritize_business_goals: GetPortfolioPreferencesResponsePrioritizeBusinessGoals
        """

        self._prioritize_business_goals = prioritize_business_goals
