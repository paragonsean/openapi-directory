# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.server_error_category import ServerErrorCategory
from openapi_server import util


class ServerError(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, server_error_category: ServerErrorCategory=None):
        """ServerError - a model defined in OpenAPI

        :param server_error_category: The server_error_category of this ServerError.
        """
        self.openapi_types = {
            'server_error_category': ServerErrorCategory
        }

        self.attribute_map = {
            'server_error_category': 'serverErrorCategory'
        }

        self._server_error_category = server_error_category

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ServerError':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ServerError of this ServerError.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def server_error_category(self):
        """Gets the server_error_category of this ServerError.


        :return: The server_error_category of this ServerError.
        :rtype: ServerErrorCategory
        """
        return self._server_error_category

    @server_error_category.setter
    def server_error_category(self, server_error_category):
        """Sets the server_error_category of this ServerError.


        :param server_error_category: The server_error_category of this ServerError.
        :type server_error_category: ServerErrorCategory
        """

        self._server_error_category = server_error_category
