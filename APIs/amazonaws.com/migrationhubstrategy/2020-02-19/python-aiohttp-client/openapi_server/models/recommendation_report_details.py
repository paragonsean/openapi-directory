# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.recommendation_report_status import RecommendationReportStatus
from openapi_server import util


class RecommendationReportDetails(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, completion_time: datetime=None, s3_bucket: str=None, s3_keys: List=None, start_time: datetime=None, status: RecommendationReportStatus=None, status_message: str=None):
        """RecommendationReportDetails - a model defined in OpenAPI

        :param completion_time: The completion_time of this RecommendationReportDetails.
        :param s3_bucket: The s3_bucket of this RecommendationReportDetails.
        :param s3_keys: The s3_keys of this RecommendationReportDetails.
        :param start_time: The start_time of this RecommendationReportDetails.
        :param status: The status of this RecommendationReportDetails.
        :param status_message: The status_message of this RecommendationReportDetails.
        """
        self.openapi_types = {
            'completion_time': datetime,
            's3_bucket': str,
            's3_keys': List,
            'start_time': datetime,
            'status': RecommendationReportStatus,
            'status_message': str
        }

        self.attribute_map = {
            'completion_time': 'completionTime',
            's3_bucket': 's3Bucket',
            's3_keys': 's3Keys',
            'start_time': 'startTime',
            'status': 'status',
            'status_message': 'statusMessage'
        }

        self._completion_time = completion_time
        self._s3_bucket = s3_bucket
        self._s3_keys = s3_keys
        self._start_time = start_time
        self._status = status
        self._status_message = status_message

    @classmethod
    def from_dict(cls, dikt: dict) -> 'RecommendationReportDetails':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The RecommendationReportDetails of this RecommendationReportDetails.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def completion_time(self):
        """Gets the completion_time of this RecommendationReportDetails.


        :return: The completion_time of this RecommendationReportDetails.
        :rtype: datetime
        """
        return self._completion_time

    @completion_time.setter
    def completion_time(self, completion_time):
        """Sets the completion_time of this RecommendationReportDetails.


        :param completion_time: The completion_time of this RecommendationReportDetails.
        :type completion_time: datetime
        """

        self._completion_time = completion_time

    @property
    def s3_bucket(self):
        """Gets the s3_bucket of this RecommendationReportDetails.


        :return: The s3_bucket of this RecommendationReportDetails.
        :rtype: str
        """
        return self._s3_bucket

    @s3_bucket.setter
    def s3_bucket(self, s3_bucket):
        """Sets the s3_bucket of this RecommendationReportDetails.


        :param s3_bucket: The s3_bucket of this RecommendationReportDetails.
        :type s3_bucket: str
        """

        self._s3_bucket = s3_bucket

    @property
    def s3_keys(self):
        """Gets the s3_keys of this RecommendationReportDetails.


        :return: The s3_keys of this RecommendationReportDetails.
        :rtype: List
        """
        return self._s3_keys

    @s3_keys.setter
    def s3_keys(self, s3_keys):
        """Sets the s3_keys of this RecommendationReportDetails.


        :param s3_keys: The s3_keys of this RecommendationReportDetails.
        :type s3_keys: List
        """

        self._s3_keys = s3_keys

    @property
    def start_time(self):
        """Gets the start_time of this RecommendationReportDetails.


        :return: The start_time of this RecommendationReportDetails.
        :rtype: datetime
        """
        return self._start_time

    @start_time.setter
    def start_time(self, start_time):
        """Sets the start_time of this RecommendationReportDetails.


        :param start_time: The start_time of this RecommendationReportDetails.
        :type start_time: datetime
        """

        self._start_time = start_time

    @property
    def status(self):
        """Gets the status of this RecommendationReportDetails.


        :return: The status of this RecommendationReportDetails.
        :rtype: RecommendationReportStatus
        """
        return self._status

    @status.setter
    def status(self, status):
        """Sets the status of this RecommendationReportDetails.


        :param status: The status of this RecommendationReportDetails.
        :type status: RecommendationReportStatus
        """

        self._status = status

    @property
    def status_message(self):
        """Gets the status_message of this RecommendationReportDetails.


        :return: The status_message of this RecommendationReportDetails.
        :rtype: str
        """
        return self._status_message

    @status_message.setter
    def status_message(self, status_message):
        """Sets the status_message of this RecommendationReportDetails.


        :param status_message: The status_message of this RecommendationReportDetails.
        :type status_message: str
        """

        self._status_message = status_message
