# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class AppType(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    """
    allowed enum values
    """
    DOTNETFRAMEWORK = 'DotNetFramework'
    JAVA = 'Java'
    SQLSERVER = 'SQLServer'
    IIS = 'IIS'
    ORACLE = 'Oracle'
    OTHER = 'Other'
    TOMCAT = 'Tomcat'
    JBOSS = 'JBoss'
    SPRING = 'Spring'
    MONGO_DB = 'Mongo DB'
    DB2 = 'DB2'
    MARIA_DB = 'Maria DB'
    MYSQL = 'MySQL'
    SYBASE = 'Sybase'
    POSTGRESQLSERVER = 'PostgreSQLServer'
    CASSANDRA = 'Cassandra'
    IBM_WEBSPHERE = 'IBM WebSphere'
    ORACLE_WEBLOGIC = 'Oracle WebLogic'
    VISUAL_BASIC = 'Visual Basic'
    UNKNOWN = 'Unknown'
    DOTNETCORE = 'DotnetCore'
    DOTNET = 'Dotnet'

    def __init__(self):
        """AppType - a model defined in OpenAPI

        """
        self.openapi_types = {
        }

        self.attribute_map = {
        }

    @classmethod
    def from_dict(cls, dikt: dict) -> 'AppType':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The AppType of this AppType.
        """
        return util.deserialize_model(dikt, cls)
