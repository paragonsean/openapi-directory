# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.transformation_tool_name import TransformationToolName
from openapi_server import util


class RecommendationSetTransformationTool(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, description: str=None, name: TransformationToolName=None, tranformation_tool_installation_link: str=None):
        """RecommendationSetTransformationTool - a model defined in OpenAPI

        :param description: The description of this RecommendationSetTransformationTool.
        :param name: The name of this RecommendationSetTransformationTool.
        :param tranformation_tool_installation_link: The tranformation_tool_installation_link of this RecommendationSetTransformationTool.
        """
        self.openapi_types = {
            'description': str,
            'name': TransformationToolName,
            'tranformation_tool_installation_link': str
        }

        self.attribute_map = {
            'description': 'description',
            'name': 'name',
            'tranformation_tool_installation_link': 'tranformationToolInstallationLink'
        }

        self._description = description
        self._name = name
        self._tranformation_tool_installation_link = tranformation_tool_installation_link

    @classmethod
    def from_dict(cls, dikt: dict) -> 'RecommendationSetTransformationTool':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The RecommendationSet_transformationTool of this RecommendationSetTransformationTool.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def description(self):
        """Gets the description of this RecommendationSetTransformationTool.


        :return: The description of this RecommendationSetTransformationTool.
        :rtype: str
        """
        return self._description

    @description.setter
    def description(self, description):
        """Sets the description of this RecommendationSetTransformationTool.


        :param description: The description of this RecommendationSetTransformationTool.
        :type description: str
        """

        self._description = description

    @property
    def name(self):
        """Gets the name of this RecommendationSetTransformationTool.


        :return: The name of this RecommendationSetTransformationTool.
        :rtype: TransformationToolName
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this RecommendationSetTransformationTool.


        :param name: The name of this RecommendationSetTransformationTool.
        :type name: TransformationToolName
        """

        self._name = name

    @property
    def tranformation_tool_installation_link(self):
        """Gets the tranformation_tool_installation_link of this RecommendationSetTransformationTool.


        :return: The tranformation_tool_installation_link of this RecommendationSetTransformationTool.
        :rtype: str
        """
        return self._tranformation_tool_installation_link

    @tranformation_tool_installation_link.setter
    def tranformation_tool_installation_link(self, tranformation_tool_installation_link):
        """Sets the tranformation_tool_installation_link of this RecommendationSetTransformationTool.


        :param tranformation_tool_installation_link: The tranformation_tool_installation_link of this RecommendationSetTransformationTool.
        :type tranformation_tool_installation_link: str
        """

        self._tranformation_tool_installation_link = tranformation_tool_installation_link
