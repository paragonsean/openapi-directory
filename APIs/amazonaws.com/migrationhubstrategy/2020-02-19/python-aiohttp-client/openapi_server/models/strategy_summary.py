# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.strategy import Strategy
from openapi_server import util


class StrategySummary(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, count: int=None, strategy: Strategy=None):
        """StrategySummary - a model defined in OpenAPI

        :param count: The count of this StrategySummary.
        :param strategy: The strategy of this StrategySummary.
        """
        self.openapi_types = {
            'count': int,
            'strategy': Strategy
        }

        self.attribute_map = {
            'count': 'count',
            'strategy': 'strategy'
        }

        self._count = count
        self._strategy = strategy

    @classmethod
    def from_dict(cls, dikt: dict) -> 'StrategySummary':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The StrategySummary of this StrategySummary.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def count(self):
        """Gets the count of this StrategySummary.


        :return: The count of this StrategySummary.
        :rtype: int
        """
        return self._count

    @count.setter
    def count(self, count):
        """Sets the count of this StrategySummary.


        :param count: The count of this StrategySummary.
        :type count: int
        """

        self._count = count

    @property
    def strategy(self):
        """Gets the strategy of this StrategySummary.


        :return: The strategy of this StrategySummary.
        :rtype: Strategy
        """
        return self._strategy

    @strategy.setter
    def strategy(self, strategy):
        """Sets the strategy of this StrategySummary.


        :param strategy: The strategy of this StrategySummary.
        :type strategy: Strategy
        """

        self._strategy = strategy
