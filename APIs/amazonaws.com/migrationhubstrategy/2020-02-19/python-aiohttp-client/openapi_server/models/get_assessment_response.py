# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.get_assessment_response_data_collection_details import GetAssessmentResponseDataCollectionDetails
from openapi_server import util


class GetAssessmentResponse(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, assessment_targets: List=None, data_collection_details: GetAssessmentResponseDataCollectionDetails=None, id: str=None):
        """GetAssessmentResponse - a model defined in OpenAPI

        :param assessment_targets: The assessment_targets of this GetAssessmentResponse.
        :param data_collection_details: The data_collection_details of this GetAssessmentResponse.
        :param id: The id of this GetAssessmentResponse.
        """
        self.openapi_types = {
            'assessment_targets': List,
            'data_collection_details': GetAssessmentResponseDataCollectionDetails,
            'id': str
        }

        self.attribute_map = {
            'assessment_targets': 'assessmentTargets',
            'data_collection_details': 'dataCollectionDetails',
            'id': 'id'
        }

        self._assessment_targets = assessment_targets
        self._data_collection_details = data_collection_details
        self._id = id

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GetAssessmentResponse':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The GetAssessmentResponse of this GetAssessmentResponse.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def assessment_targets(self):
        """Gets the assessment_targets of this GetAssessmentResponse.


        :return: The assessment_targets of this GetAssessmentResponse.
        :rtype: List
        """
        return self._assessment_targets

    @assessment_targets.setter
    def assessment_targets(self, assessment_targets):
        """Sets the assessment_targets of this GetAssessmentResponse.


        :param assessment_targets: The assessment_targets of this GetAssessmentResponse.
        :type assessment_targets: List
        """

        self._assessment_targets = assessment_targets

    @property
    def data_collection_details(self):
        """Gets the data_collection_details of this GetAssessmentResponse.


        :return: The data_collection_details of this GetAssessmentResponse.
        :rtype: GetAssessmentResponseDataCollectionDetails
        """
        return self._data_collection_details

    @data_collection_details.setter
    def data_collection_details(self, data_collection_details):
        """Sets the data_collection_details of this GetAssessmentResponse.


        :param data_collection_details: The data_collection_details of this GetAssessmentResponse.
        :type data_collection_details: GetAssessmentResponseDataCollectionDetails
        """

        self._data_collection_details = data_collection_details

    @property
    def id(self):
        """Gets the id of this GetAssessmentResponse.


        :return: The id of this GetAssessmentResponse.
        :rtype: str
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this GetAssessmentResponse.


        :param id: The id of this GetAssessmentResponse.
        :type id: str
        """

        self._id = id
