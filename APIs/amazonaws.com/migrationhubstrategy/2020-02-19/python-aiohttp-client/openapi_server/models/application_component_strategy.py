# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.application_component_strategy_recommendation import ApplicationComponentStrategyRecommendation
from openapi_server.models.strategy_recommendation import StrategyRecommendation
from openapi_server import util


class ApplicationComponentStrategy(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, is_preferred: bool=None, recommendation: ApplicationComponentStrategyRecommendation=None, status: StrategyRecommendation=None):
        """ApplicationComponentStrategy - a model defined in OpenAPI

        :param is_preferred: The is_preferred of this ApplicationComponentStrategy.
        :param recommendation: The recommendation of this ApplicationComponentStrategy.
        :param status: The status of this ApplicationComponentStrategy.
        """
        self.openapi_types = {
            'is_preferred': bool,
            'recommendation': ApplicationComponentStrategyRecommendation,
            'status': StrategyRecommendation
        }

        self.attribute_map = {
            'is_preferred': 'isPreferred',
            'recommendation': 'recommendation',
            'status': 'status'
        }

        self._is_preferred = is_preferred
        self._recommendation = recommendation
        self._status = status

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ApplicationComponentStrategy':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ApplicationComponentStrategy of this ApplicationComponentStrategy.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def is_preferred(self):
        """Gets the is_preferred of this ApplicationComponentStrategy.


        :return: The is_preferred of this ApplicationComponentStrategy.
        :rtype: bool
        """
        return self._is_preferred

    @is_preferred.setter
    def is_preferred(self, is_preferred):
        """Sets the is_preferred of this ApplicationComponentStrategy.


        :param is_preferred: The is_preferred of this ApplicationComponentStrategy.
        :type is_preferred: bool
        """

        self._is_preferred = is_preferred

    @property
    def recommendation(self):
        """Gets the recommendation of this ApplicationComponentStrategy.


        :return: The recommendation of this ApplicationComponentStrategy.
        :rtype: ApplicationComponentStrategyRecommendation
        """
        return self._recommendation

    @recommendation.setter
    def recommendation(self, recommendation):
        """Sets the recommendation of this ApplicationComponentStrategy.


        :param recommendation: The recommendation of this ApplicationComponentStrategy.
        :type recommendation: ApplicationComponentStrategyRecommendation
        """

        self._recommendation = recommendation

    @property
    def status(self):
        """Gets the status of this ApplicationComponentStrategy.


        :return: The status of this ApplicationComponentStrategy.
        :rtype: StrategyRecommendation
        """
        return self._status

    @status.setter
    def status(self, status):
        """Sets the status of this ApplicationComponentStrategy.


        :param status: The status of this ApplicationComponentStrategy.
        :type status: StrategyRecommendation
        """

        self._status = status
