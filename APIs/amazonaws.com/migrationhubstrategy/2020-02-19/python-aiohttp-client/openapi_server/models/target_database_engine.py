# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class TargetDatabaseEngine(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    """
    allowed enum values
    """
    NONE_SPECIFIED = 'None specified'
    AMAZON_AURORA = 'Amazon Aurora'
    AWS_POSTGRESQL = 'AWS PostgreSQL'
    MYSQL = 'MySQL'
    MICROSOFT_SQL_SERVER = 'Microsoft SQL Server'
    ORACLE_DATABASE = 'Oracle Database'
    MARIADB = 'MariaDB'
    SAP = 'SAP'
    DB2_LUW = 'Db2 LUW'
    MONGODB = 'MongoDB'

    def __init__(self):
        """TargetDatabaseEngine - a model defined in OpenAPI

        """
        self.openapi_types = {
        }

        self.attribute_map = {
        }

    @classmethod
    def from_dict(cls, dikt: dict) -> 'TargetDatabaseEngine':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The TargetDatabaseEngine of this TargetDatabaseEngine.
        """
        return util.deserialize_model(dikt, cls)
