# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.binary_analyzer_name import BinaryAnalyzerName
from openapi_server.models.run_time_analyzer_name import RunTimeAnalyzerName
from openapi_server.models.source_code_analyzer_name import SourceCodeAnalyzerName
from openapi_server import util


class AntipatternReportResultAnalyzerName(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, binary_analyzer_name: BinaryAnalyzerName=None, run_time_analyzer_name: RunTimeAnalyzerName=None, source_code_analyzer_name: SourceCodeAnalyzerName=None):
        """AntipatternReportResultAnalyzerName - a model defined in OpenAPI

        :param binary_analyzer_name: The binary_analyzer_name of this AntipatternReportResultAnalyzerName.
        :param run_time_analyzer_name: The run_time_analyzer_name of this AntipatternReportResultAnalyzerName.
        :param source_code_analyzer_name: The source_code_analyzer_name of this AntipatternReportResultAnalyzerName.
        """
        self.openapi_types = {
            'binary_analyzer_name': BinaryAnalyzerName,
            'run_time_analyzer_name': RunTimeAnalyzerName,
            'source_code_analyzer_name': SourceCodeAnalyzerName
        }

        self.attribute_map = {
            'binary_analyzer_name': 'binaryAnalyzerName',
            'run_time_analyzer_name': 'runTimeAnalyzerName',
            'source_code_analyzer_name': 'sourceCodeAnalyzerName'
        }

        self._binary_analyzer_name = binary_analyzer_name
        self._run_time_analyzer_name = run_time_analyzer_name
        self._source_code_analyzer_name = source_code_analyzer_name

    @classmethod
    def from_dict(cls, dikt: dict) -> 'AntipatternReportResultAnalyzerName':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The AntipatternReportResult_analyzerName of this AntipatternReportResultAnalyzerName.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def binary_analyzer_name(self):
        """Gets the binary_analyzer_name of this AntipatternReportResultAnalyzerName.


        :return: The binary_analyzer_name of this AntipatternReportResultAnalyzerName.
        :rtype: BinaryAnalyzerName
        """
        return self._binary_analyzer_name

    @binary_analyzer_name.setter
    def binary_analyzer_name(self, binary_analyzer_name):
        """Sets the binary_analyzer_name of this AntipatternReportResultAnalyzerName.


        :param binary_analyzer_name: The binary_analyzer_name of this AntipatternReportResultAnalyzerName.
        :type binary_analyzer_name: BinaryAnalyzerName
        """

        self._binary_analyzer_name = binary_analyzer_name

    @property
    def run_time_analyzer_name(self):
        """Gets the run_time_analyzer_name of this AntipatternReportResultAnalyzerName.


        :return: The run_time_analyzer_name of this AntipatternReportResultAnalyzerName.
        :rtype: RunTimeAnalyzerName
        """
        return self._run_time_analyzer_name

    @run_time_analyzer_name.setter
    def run_time_analyzer_name(self, run_time_analyzer_name):
        """Sets the run_time_analyzer_name of this AntipatternReportResultAnalyzerName.


        :param run_time_analyzer_name: The run_time_analyzer_name of this AntipatternReportResultAnalyzerName.
        :type run_time_analyzer_name: RunTimeAnalyzerName
        """

        self._run_time_analyzer_name = run_time_analyzer_name

    @property
    def source_code_analyzer_name(self):
        """Gets the source_code_analyzer_name of this AntipatternReportResultAnalyzerName.


        :return: The source_code_analyzer_name of this AntipatternReportResultAnalyzerName.
        :rtype: SourceCodeAnalyzerName
        """
        return self._source_code_analyzer_name

    @source_code_analyzer_name.setter
    def source_code_analyzer_name(self, source_code_analyzer_name):
        """Sets the source_code_analyzer_name of this AntipatternReportResultAnalyzerName.


        :param source_code_analyzer_name: The source_code_analyzer_name of this AntipatternReportResultAnalyzerName.
        :type source_code_analyzer_name: SourceCodeAnalyzerName
        """

        self._source_code_analyzer_name = source_code_analyzer_name
