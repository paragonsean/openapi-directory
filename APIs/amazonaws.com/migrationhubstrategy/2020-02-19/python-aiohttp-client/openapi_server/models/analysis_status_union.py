# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.runtime_analysis_status import RuntimeAnalysisStatus
from openapi_server.models.src_code_or_db_analysis_status import SrcCodeOrDbAnalysisStatus
from openapi_server import util


class AnalysisStatusUnion(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, runtime_analysis_status: RuntimeAnalysisStatus=None, src_code_or_db_analysis_status: SrcCodeOrDbAnalysisStatus=None):
        """AnalysisStatusUnion - a model defined in OpenAPI

        :param runtime_analysis_status: The runtime_analysis_status of this AnalysisStatusUnion.
        :param src_code_or_db_analysis_status: The src_code_or_db_analysis_status of this AnalysisStatusUnion.
        """
        self.openapi_types = {
            'runtime_analysis_status': RuntimeAnalysisStatus,
            'src_code_or_db_analysis_status': SrcCodeOrDbAnalysisStatus
        }

        self.attribute_map = {
            'runtime_analysis_status': 'runtimeAnalysisStatus',
            'src_code_or_db_analysis_status': 'srcCodeOrDbAnalysisStatus'
        }

        self._runtime_analysis_status = runtime_analysis_status
        self._src_code_or_db_analysis_status = src_code_or_db_analysis_status

    @classmethod
    def from_dict(cls, dikt: dict) -> 'AnalysisStatusUnion':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The AnalysisStatusUnion of this AnalysisStatusUnion.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def runtime_analysis_status(self):
        """Gets the runtime_analysis_status of this AnalysisStatusUnion.


        :return: The runtime_analysis_status of this AnalysisStatusUnion.
        :rtype: RuntimeAnalysisStatus
        """
        return self._runtime_analysis_status

    @runtime_analysis_status.setter
    def runtime_analysis_status(self, runtime_analysis_status):
        """Sets the runtime_analysis_status of this AnalysisStatusUnion.


        :param runtime_analysis_status: The runtime_analysis_status of this AnalysisStatusUnion.
        :type runtime_analysis_status: RuntimeAnalysisStatus
        """

        self._runtime_analysis_status = runtime_analysis_status

    @property
    def src_code_or_db_analysis_status(self):
        """Gets the src_code_or_db_analysis_status of this AnalysisStatusUnion.


        :return: The src_code_or_db_analysis_status of this AnalysisStatusUnion.
        :rtype: SrcCodeOrDbAnalysisStatus
        """
        return self._src_code_or_db_analysis_status

    @src_code_or_db_analysis_status.setter
    def src_code_or_db_analysis_status(self, src_code_or_db_analysis_status):
        """Sets the src_code_or_db_analysis_status of this AnalysisStatusUnion.


        :param src_code_or_db_analysis_status: The src_code_or_db_analysis_status of this AnalysisStatusUnion.
        :type src_code_or_db_analysis_status: SrcCodeOrDbAnalysisStatus
        """

        self._src_code_or_db_analysis_status = src_code_or_db_analysis_status
