# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.server_os_type import ServerOsType
from openapi_server import util


class ServerSummary(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, server_os_type: ServerOsType=None, count: int=None):
        """ServerSummary - a model defined in OpenAPI

        :param server_os_type: The server_os_type of this ServerSummary.
        :param count: The count of this ServerSummary.
        """
        self.openapi_types = {
            'server_os_type': ServerOsType,
            'count': int
        }

        self.attribute_map = {
            'server_os_type': 'ServerOsType',
            'count': 'count'
        }

        self._server_os_type = server_os_type
        self._count = count

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ServerSummary':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ServerSummary of this ServerSummary.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def server_os_type(self):
        """Gets the server_os_type of this ServerSummary.


        :return: The server_os_type of this ServerSummary.
        :rtype: ServerOsType
        """
        return self._server_os_type

    @server_os_type.setter
    def server_os_type(self, server_os_type):
        """Sets the server_os_type of this ServerSummary.


        :param server_os_type: The server_os_type of this ServerSummary.
        :type server_os_type: ServerOsType
        """

        self._server_os_type = server_os_type

    @property
    def count(self):
        """Gets the count of this ServerSummary.


        :return: The count of this ServerSummary.
        :rtype: int
        """
        return self._count

    @count.setter
    def count(self, count):
        """Sets the count of this ServerSummary.


        :param count: The count of this ServerSummary.
        :type count: int
        """

        self._count = count
