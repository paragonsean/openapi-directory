openapi: 3.0.0
info:
  contact:
    email: mike.ralphson@gmail.com
    name: Mike Ralphson
    url: https://github.com/mermade/aws2openapi
    x-twitter: PermittedSoc
  description: "<p><fullname>Migration Hub Strategy Recommendations</fullname> <p>This\
    \ API reference provides descriptions, syntax, and other details about each of\
    \ the actions and data types for Migration Hub Strategy Recommendations (Strategy\
    \ Recommendations). The topic for each action shows the API request parameters\
    \ and the response. Alternatively, you can use one of the AWS SDKs to access an\
    \ API that is tailored to the programming language or platform that you're using.\
    \ For more information, see <a href=\"http://aws.amazon.com/tools/#SDKs\">AWS\
    \ SDKs</a>.</p></p>"
  license:
    name: Apache 2.0 License
    url: http://www.apache.org/licenses/
  termsOfService: https://aws.amazon.com/service-terms/
  title: Migration Hub Strategy Recommendations
  version: 2020-02-19
  x-release: v4
  x-logo:
    url: https://twitter.com/awscloud/profile_image?size=original
    backgroundColor: '#FFFFFF'
  x-providerName: amazonaws.com
  x-serviceName: migrationhubstrategy
  x-aws-signingName: migrationhub-strategy
  x-origin:
  - contentType: application/json
    url: https://raw.githubusercontent.com/aws/aws-sdk-js/master/apis/migrationhubstrategy-2020-02-19.normal.json
    converter:
      url: https://github.com/mermade/aws2openapi
      version: 1.0.0
    x-apisguru-driver: external
  x-apiClientRegistration:
    url: https://portal.aws.amazon.com/gp/aws/developer/registration/index.html?nc2=h_ct
  x-apisguru-categories:
  - cloud
  x-preferred: true
externalDocs:
  description: Amazon Web Services documentation
  url: https://docs.aws.amazon.com/migrationhub-strategy/
servers:
- description: The Migration Hub Strategy Recommendations multi-region endpoint
  url: "http://migrationhub-strategy.{region}.amazonaws.com"
  variables:
    region:
      default: us-east-1
      description: The AWS region
      enum:
      - us-east-1
      - us-east-2
      - us-west-1
      - us-west-2
      - us-gov-west-1
      - us-gov-east-1
      - ca-central-1
      - eu-north-1
      - eu-west-1
      - eu-west-2
      - eu-west-3
      - eu-central-1
      - eu-south-1
      - af-south-1
      - ap-northeast-1
      - ap-northeast-2
      - ap-northeast-3
      - ap-southeast-1
      - ap-southeast-2
      - ap-east-1
      - ap-south-1
      - sa-east-1
      - me-south-1
- description: The Migration Hub Strategy Recommendations multi-region endpoint
  url: "https://migrationhub-strategy.{region}.amazonaws.com"
  variables:
    region:
      default: us-east-1
      description: The AWS region
      enum:
      - us-east-1
      - us-east-2
      - us-west-1
      - us-west-2
      - us-gov-west-1
      - us-gov-east-1
      - ca-central-1
      - eu-north-1
      - eu-west-1
      - eu-west-2
      - eu-west-3
      - eu-central-1
      - eu-south-1
      - af-south-1
      - ap-northeast-1
      - ap-northeast-2
      - ap-northeast-3
      - ap-southeast-1
      - ap-southeast-2
      - ap-east-1
      - ap-south-1
      - sa-east-1
      - me-south-1
- description: The Migration Hub Strategy Recommendations endpoint for China (Beijing)
    and China (Ningxia)
  url: "http://migrationhub-strategy.{region}.amazonaws.com.cn"
  variables:
    region:
      default: cn-north-1
      description: The AWS region
      enum:
      - cn-north-1
      - cn-northwest-1
- description: The Migration Hub Strategy Recommendations endpoint for China (Beijing)
    and China (Ningxia)
  url: "https://migrationhub-strategy.{region}.amazonaws.com.cn"
  variables:
    region:
      default: cn-north-1
      description: The AWS region
      enum:
      - cn-north-1
      - cn-northwest-1
security:
- hmac: []
paths:
  /get-applicationcomponent-details/{applicationComponentId}:
    get:
      description: ' Retrieves details about an application component. '
      operationId: get_application_component_details
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: ' The ID of the application component. The ID is unique within
          an AWS account.'
        explode: false
        in: path
        name: applicationComponentId
        required: true
        schema:
          maxLength: 44
          minLength: 0
          pattern: "[0-9a-zA-Z-]+"
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetApplicationComponentDetailsResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
      x-openapi-router-controller: openapi_server.controllers.default_controller
  /get-applicationcomponent-strategies/{applicationComponentId}:
    get:
      description: ' Retrieves a list of all the recommended strategies and tools
        for an application component running on a server. '
      operationId: get_application_component_strategies
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: ' The ID of the application component. The ID is unique within
          an AWS account.'
        explode: false
        in: path
        name: applicationComponentId
        required: true
        schema:
          maxLength: 44
          minLength: 0
          pattern: "[0-9a-zA-Z-]+"
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetApplicationComponentStrategiesResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
      x-openapi-router-controller: openapi_server.controllers.default_controller
  /get-assessment/{id}:
    get:
      description: ' Retrieves the status of an on-going assessment. '
      operationId: get_assessment
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: ' The <code>assessmentid</code> returned by <a>StartAssessment</a>.'
        explode: false
        in: path
        name: id
        required: true
        schema:
          maxLength: 52
          minLength: 0
          pattern: "[0-9a-z-:]+"
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetAssessmentResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
      x-openapi-router-controller: openapi_server.controllers.default_controller
  /get-import-file-task/{id}:
    get:
      description: ' Retrieves the details about a specific import task. '
      operationId: get_import_file_task
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: ' The ID of the import file task. This ID is returned in the
          response of <a>StartImportFileTask</a>. '
        explode: false
        in: path
        name: id
        required: true
        schema:
          maxLength: 1024
          minLength: 0
          pattern: .*\S.*
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetImportFileTaskResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
      x-openapi-router-controller: openapi_server.controllers.default_controller
  /get-latest-assessment-id:
    get:
      description: Retrieve the latest ID of a specific assessment task.
      operationId: get_latest_assessment_id
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetLatestAssessmentIdResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DependencyException'
          description: DependencyException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
      x-openapi-router-controller: openapi_server.controllers.default_controller
  /get-portfolio-preferences:
    get:
      description: ' Retrieves your migration and modernization preferences. '
      operationId: get_portfolio_preferences
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetPortfolioPreferencesResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
      x-openapi-router-controller: openapi_server.controllers.default_controller
  /get-portfolio-summary:
    get:
      description: ' Retrieves overall summary including the number of servers to
        rehost and the overall number of anti-patterns. '
      operationId: get_portfolio_summary
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetPortfolioSummaryResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
      x-openapi-router-controller: openapi_server.controllers.default_controller
  /get-recommendation-report-details/{id}:
    get:
      description: ' Retrieves detailed information about the specified recommendation
        report. '
      operationId: get_recommendation_report_details
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: ' The recommendation report generation task <code>id</code> returned
          by <a>StartRecommendationReportGeneration</a>. '
        explode: false
        in: path
        name: id
        required: true
        schema:
          maxLength: 52
          minLength: 0
          pattern: "[0-9a-z-:]+"
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetRecommendationReportDetailsResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
      x-openapi-router-controller: openapi_server.controllers.default_controller
  /get-server-details/{serverId}:
    get:
      description: ' Retrieves detailed information about a specified server. '
      operationId: get_server_details
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: ' The maximum number of items to include in the response. The
          maximum value is 100. '
        explode: true
        in: query
        name: maxResults
        required: false
        schema:
          type: integer
        style: form
      - description: " The token from a previous call that you use to retrieve the\
          \ next set of results. For example, if a previous call to this action returned\
          \ 100 items, but you set <code>maxResults</code> to 10. You'll receive a\
          \ set of 10 results along with a token. You then use the returned token\
          \ to retrieve the next set of 10. "
        explode: true
        in: query
        name: nextToken
        required: false
        schema:
          maxLength: 2048
          minLength: 0
          pattern: .*\S.*
          type: string
        style: form
      - description: ' The ID of the server. '
        explode: false
        in: path
        name: serverId
        required: true
        schema:
          maxLength: 27
          minLength: 1
          pattern: .*\S.*
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetServerDetailsResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
      x-openapi-router-controller: openapi_server.controllers.default_controller
  /get-server-strategies/{serverId}:
    get:
      description: ' Retrieves recommended strategies and tools for the specified
        server. '
      operationId: get_server_strategies
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: ' The ID of the server. '
        explode: false
        in: path
        name: serverId
        required: true
        schema:
          maxLength: 27
          minLength: 1
          pattern: .*\S.*
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetServerStrategiesResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
      x-openapi-router-controller: openapi_server.controllers.default_controller
  /list-applicationcomponents:
    post:
      description: ' Retrieves a list of all the application components (processes). '
      operationId: list_application_components
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: Pagination limit
        explode: true
        in: query
        name: maxResults
        required: false
        schema:
          type: string
        style: form
      - description: Pagination token
        explode: true
        in: query
        name: nextToken
        required: false
        schema:
          type: string
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ListApplicationComponents_request'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListApplicationComponentsResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceLinkedRoleLockClientException'
          description: ServiceLinkedRoleLockClientException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /list-collectors:
    get:
      description: ' Retrieves a list of all the installed collectors. '
      operationId: list_collectors
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: ' The maximum number of items to include in the response. The
          maximum value is 100. '
        explode: true
        in: query
        name: maxResults
        required: false
        schema:
          type: integer
        style: form
      - description: " The token from a previous call that you use to retrieve the\
          \ next set of results. For example, if a previous call to this action returned\
          \ 100 items, but you set <code>maxResults</code> to 10. You'll receive a\
          \ set of 10 results along with a token. You then use the returned token\
          \ to retrieve the next set of 10. "
        explode: true
        in: query
        name: nextToken
        required: false
        schema:
          maxLength: 2048
          minLength: 0
          pattern: .*\S.*
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListCollectorsResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
      x-openapi-router-controller: openapi_server.controllers.default_controller
  /list-import-file-task:
    get:
      description: ' Retrieves a list of all the imports performed. '
      operationId: list_import_file_task
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: ' The total number of items to return. The maximum value is 100. '
        explode: true
        in: query
        name: maxResults
        required: false
        schema:
          type: integer
        style: form
      - description: " The token from a previous call that you use to retrieve the\
          \ next set of results. For example, if a previous call to this action returned\
          \ 100 items, but you set <code>maxResults</code> to 10. You'll receive a\
          \ set of 10 results along with a token. You then use the returned token\
          \ to retrieve the next set of 10. "
        explode: true
        in: query
        name: nextToken
        required: false
        schema:
          maxLength: 1024
          minLength: 0
          pattern: .*\S.*
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListImportFileTaskResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
      x-openapi-router-controller: openapi_server.controllers.default_controller
  /list-servers:
    post:
      description: ' Returns a list of all the servers. '
      operationId: list_servers
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: Pagination limit
        explode: true
        in: query
        name: maxResults
        required: false
        schema:
          type: string
        style: form
      - description: Pagination token
        explode: true
        in: query
        name: nextToken
        required: false
        schema:
          type: string
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ListServers_request'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListServersResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /put-portfolio-preferences:
    post:
      description: ' Saves the specified migration and modernization preferences. '
      operationId: put_portfolio_preferences
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PutPortfolioPreferences_request'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PutPortfolioPreferencesResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
          description: ConflictException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /start-assessment:
    post:
      description: ' Starts the assessment of an on-premises environment. '
      operationId: start_assessment
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StartAssessment_request'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StartAssessmentResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceQuotaExceededException'
          description: ServiceQuotaExceededException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /start-import-file-task:
    post:
      description: ' Starts a file import. '
      operationId: start_import_file_task
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StartImportFileTask_request'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StartImportFileTaskResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceQuotaExceededException'
          description: ServiceQuotaExceededException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /start-recommendation-report-generation:
    post:
      description: ' Starts generating a recommendation report. '
      operationId: start_recommendation_report_generation
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StartRecommendationReportGeneration_request'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StartRecommendationReportGenerationResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
          description: ConflictException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /stop-assessment:
    post:
      description: ' Stops the assessment of an on-premises environment. '
      operationId: stop_assessment
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StopAssessment_request'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StopAssessmentResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /update-applicationcomponent-config/:
    post:
      description: ' Updates the configuration of an application component. '
      operationId: update_application_component_config
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateApplicationComponentConfig_request'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateApplicationComponentConfigResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /update-server-config/:
    post:
      description: ' Updates the configuration of the specified server. '
      operationId: update_server_config
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateServerConfig_request'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateServerConfigResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
components:
  parameters:
    X-Amz-Content-Sha256:
      explode: false
      in: header
      name: X-Amz-Content-Sha256
      required: false
      schema:
        type: string
      style: simple
    X-Amz-Date:
      explode: false
      in: header
      name: X-Amz-Date
      required: false
      schema:
        type: string
      style: simple
    X-Amz-Algorithm:
      explode: false
      in: header
      name: X-Amz-Algorithm
      required: false
      schema:
        type: string
      style: simple
    X-Amz-Credential:
      explode: false
      in: header
      name: X-Amz-Credential
      required: false
      schema:
        type: string
      style: simple
    X-Amz-Security-Token:
      explode: false
      in: header
      name: X-Amz-Security-Token
      required: false
      schema:
        type: string
      style: simple
    X-Amz-Signature:
      explode: false
      in: header
      name: X-Amz-Signature
      required: false
      schema:
        type: string
      style: simple
    X-Amz-SignedHeaders:
      explode: false
      in: header
      name: X-Amz-SignedHeaders
      required: false
      schema:
        type: string
      style: simple
  schemas:
    GetApplicationComponentDetailsResponse:
      example:
        applicationComponentDetail:
          antipatternReportStatusMessage: ""
          recommendationSet:
            targetDestination: ""
            transformationTool:
              name: ""
              description: ""
              tranformationToolInstallationLink: ""
            strategy: ""
          antipatternReportStatus: ""
          runtimeStatus: ""
          moreServerAssociationExists: ""
          sourceCodeRepositories: ""
          inclusionStatus: ""
          runtimeStatusMessage: ""
          statusMessage: ""
          associatedServerId: ""
          antipatternReportS3Object:
            s3key: ""
            s3Bucket: ""
          osVersion: ""
          resourceSubType: ""
          appType: ""
          lastAnalyzedTimestamp: ""
          appUnitError:
            appUnitErrorCategory: ""
          listAntipatternSeveritySummary: ""
          name: ""
          id: ""
          databaseConfigDetail:
            secretName: ""
          osDriver: ""
          resultList: ""
          analysisStatus: ""
        moreApplicationResource: ""
        associatedServerIds: ""
        associatedApplications: ""
      properties:
        applicationComponentDetail:
          $ref: '#/components/schemas/GetApplicationComponentDetailsResponse_applicationComponentDetail'
        associatedApplications:
          allOf:
          - $ref: '#/components/schemas/AssociatedApplications'
          - description: ' The associated application group as defined in AWS Application
              Discovery Service. '
          title: associatedApplications
        associatedServerIds:
          allOf:
          - $ref: '#/components/schemas/AssociatedServerIDs'
          - description: ' A list of the IDs of the servers on which the application
              component is running. '
          title: associatedServerIds
        moreApplicationResource:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          - description: ' Set to true if the application component belongs to more
              than one application group. '
          title: moreApplicationResource
      title: GetApplicationComponentDetailsResponse
      type: object
    ResourceNotFoundException: {}
    ThrottlingException: {}
    InternalServerException: {}
    GetApplicationComponentStrategiesResponse:
      example:
        applicationComponentStrategies: ""
      properties:
        applicationComponentStrategies:
          allOf:
          - $ref: '#/components/schemas/ApplicationComponentStrategies'
          - description: ' A list of application component strategy recommendations. '
          title: applicationComponentStrategies
      title: GetApplicationComponentStrategiesResponse
      type: object
    GetAssessmentResponse:
      example:
        assessmentTargets: ""
        id: ""
        dataCollectionDetails:
          completionTime: ""
          servers: ""
          inProgress: ""
          success: ""
          startTime: ""
          failed: ""
          statusMessage: ""
          status: ""
      properties:
        assessmentTargets:
          allOf:
          - $ref: '#/components/schemas/AssessmentTargets'
          - description: List of criteria for assessment.
          title: assessmentTargets
        dataCollectionDetails:
          $ref: '#/components/schemas/GetAssessmentResponse_dataCollectionDetails'
        id:
          allOf:
          - $ref: '#/components/schemas/AsyncTaskId'
          - description: ' The ID for the specific assessment task. '
          title: id
      title: GetAssessmentResponse
      type: object
    AccessDeniedException: {}
    GetImportFileTaskResponse:
      example:
        statusReportS3Key: ""
        completionTime: ""
        numberOfRecordsSuccess: ""
        statusReportS3Bucket: ""
        inputS3Bucket: ""
        importName: ""
        inputS3Key: ""
        startTime: ""
        id: ""
        numberOfRecordsFailed: ""
        status: ""
      properties:
        completionTime:
          allOf:
          - $ref: '#/components/schemas/TimeStamp'
          - description: ' The time that the import task completed. '
          title: completionTime
        id:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: ' The import file task <code>id</code> returned in the response
              of <a>StartImportFileTask</a>. '
          title: id
        importName:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: ' The name of the import task given in <a>StartImportFileTask</a>. '
          title: importName
        inputS3Bucket:
          allOf:
          - $ref: '#/components/schemas/importS3Bucket'
          - description: ' The S3 bucket where import file is located. '
          title: inputS3Bucket
        inputS3Key:
          allOf:
          - $ref: '#/components/schemas/importS3Key'
          - description: ' The Amazon S3 key name of the import file. '
          title: inputS3Key
        numberOfRecordsFailed:
          allOf:
          - $ref: '#/components/schemas/Integer'
          - description: ' The number of records that failed to be imported. '
          title: numberOfRecordsFailed
        numberOfRecordsSuccess:
          allOf:
          - $ref: '#/components/schemas/Integer'
          - description: ' The number of records successfully imported. '
          title: numberOfRecordsSuccess
        startTime:
          allOf:
          - $ref: '#/components/schemas/TimeStamp'
          - description: ' Start time of the import task. '
          title: startTime
        status:
          allOf:
          - $ref: '#/components/schemas/ImportFileTaskStatus'
          - description: ' Status of import file task. '
          title: status
        statusReportS3Bucket:
          allOf:
          - $ref: '#/components/schemas/importS3Bucket'
          - description: ' The S3 bucket name for status report of import task. '
          title: statusReportS3Bucket
        statusReportS3Key:
          allOf:
          - $ref: '#/components/schemas/importS3Key'
          - description: ' The Amazon S3 key name for status report of import task.
              The report contains details about whether each record imported successfully
              or why it did not.'
          title: statusReportS3Key
      title: GetImportFileTaskResponse
      type: object
    ValidationException: {}
    GetLatestAssessmentIdResponse:
      example:
        id: ""
      properties:
        id:
          allOf:
          - $ref: '#/components/schemas/AsyncTaskId'
          - description: The latest ID for the specific assessment task.
          title: id
      title: GetLatestAssessmentIdResponse
      type: object
    DependencyException: {}
    GetPortfolioPreferencesResponse:
      example:
        prioritizeBusinessGoals:
          businessGoals:
            modernizeInfrastructureWithCloudNativeTechnologies: ""
            reduceOperationalOverheadWithManagedServices: ""
            licenseCostReduction: ""
            speedOfMigration: ""
        applicationMode: ""
        applicationPreferences:
          managementPreference:
            noPreference:
              targetDestination: ""
            awsManagedResources:
              targetDestination: ""
            selfManageResources:
              targetDestination: ""
        databasePreferences:
          databaseManagementPreference: ""
          databaseMigrationPreference:
            homogeneous:
              targetDatabaseEngine: ""
            noPreference:
              targetDatabaseEngine: ""
            heterogeneous:
              targetDatabaseEngine: ""
      properties:
        applicationMode:
          allOf:
          - $ref: '#/components/schemas/ApplicationMode'
          - description: The classification for application component types.
          title: applicationMode
        applicationPreferences:
          $ref: '#/components/schemas/GetPortfolioPreferencesResponse_applicationPreferences'
        databasePreferences:
          $ref: '#/components/schemas/GetPortfolioPreferencesResponse_databasePreferences'
        prioritizeBusinessGoals:
          $ref: '#/components/schemas/GetPortfolioPreferencesResponse_prioritizeBusinessGoals'
      title: GetPortfolioPreferencesResponse
      type: object
    GetPortfolioSummaryResponse:
      example:
        assessmentSummary:
          antipatternReportStatusMessage: ""
          listServerSummary: ""
          antipatternReportS3Object:
            s3key: ""
            s3Bucket: ""
          antipatternReportStatus: ""
          lastAnalyzedTimestamp: ""
          listAntipatternSeveritySummary: ""
          listApplicationComponentStrategySummary: ""
          listServerStatusSummary: ""
          listServerStrategySummary: ""
          listApplicationComponentSummary: ""
          listApplicationComponentStatusSummary: ""
      properties:
        assessmentSummary:
          $ref: '#/components/schemas/GetPortfolioSummaryResponse_assessmentSummary'
      title: GetPortfolioSummaryResponse
      type: object
    GetRecommendationReportDetailsResponse:
      example:
        recommendationReportDetails:
          completionTime: ""
          startTime: ""
          s3Keys: ""
          s3Bucket: ""
          statusMessage: ""
          status: ""
        id: ""
      properties:
        id:
          allOf:
          - $ref: '#/components/schemas/RecommendationTaskId'
          - description: ' The ID of the recommendation report generation task. See
              the response of <a>StartRecommendationReportGeneration</a>. '
          title: id
        recommendationReportDetails:
          $ref: '#/components/schemas/GetRecommendationReportDetailsResponse_recommendationReportDetails'
      title: GetRecommendationReportDetailsResponse
      type: object
    GetServerDetailsResponse:
      example:
        nextToken: ""
        serverDetail:
          antipatternReportStatusMessage: ""
          recommendationSet:
            targetDestination: ""
            transformationTool:
              name: ""
              description: ""
              tranformationToolInstallationLink: ""
            strategy: ""
          applicationComponentStrategySummary: ""
          antipatternReportStatus: ""
          statusMessage: ""
          systemInfo:
            osInfo:
              type: ""
              version: ""
            cpuArchitecture: ""
            fileSystemType: ""
            networkInfoList: ""
          antipatternReportS3Object:
            s3key: ""
            s3Bucket: ""
          dataCollectionStatus: ""
          lastAnalyzedTimestamp: ""
          serverType: ""
          listAntipatternSeveritySummary: ""
          name: ""
          id: ""
          serverError:
            serverErrorCategory: ""
        associatedApplications: ""
      properties:
        associatedApplications:
          allOf:
          - $ref: '#/components/schemas/AssociatedApplications'
          - description: " The associated application group the server belongs to,\
              \ as defined in AWS Application Discovery Service. "
          title: associatedApplications
        nextToken:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: " The token you use to retrieve the next set of results,\
              \ or null if there are no more results. "
          title: nextToken
        serverDetail:
          $ref: '#/components/schemas/GetServerDetailsResponse_serverDetail'
      title: GetServerDetailsResponse
      type: object
    GetServerStrategiesResponse:
      example:
        serverStrategies: ""
      properties:
        serverStrategies:
          allOf:
          - $ref: '#/components/schemas/ServerStrategies'
          - description: ' A list of strategy recommendations for the server. '
          title: serverStrategies
      title: GetServerStrategiesResponse
      type: object
    ListApplicationComponentsResponse:
      example:
        nextToken: ""
        applicationComponentInfos: ""
      properties:
        applicationComponentInfos:
          allOf:
          - $ref: '#/components/schemas/ApplicationComponentDetails'
          - description: ' The list of application components with detailed information
              about each component. '
          title: applicationComponentInfos
        nextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          - description: " The token you use to retrieve the next set of results,\
              \ or null if there are no more results. "
          title: nextToken
      title: ListApplicationComponentsResponse
      type: object
    Group:
      description: ' The object containing information about distinct imports or groups
        for Strategy Recommendations. '
      properties:
        name:
          allOf:
          - $ref: '#/components/schemas/GroupName'
          - description: ' The key of the specific import group. '
          title: name
        value:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: ' The value of the specific import group. '
          title: value
      title: Group
      type: object
    ServiceLinkedRoleLockClientException: {}
    ListCollectorsResponse:
      example:
        Collectors: ""
        nextToken: ""
      properties:
        Collectors:
          allOf:
          - $ref: '#/components/schemas/Collectors'
          - description: ' The list of all the installed collectors. '
          title: Collectors
        nextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          - description: " The token you use to retrieve the next set of results,\
              \ or null if there are no more results. "
          title: nextToken
      title: ListCollectorsResponse
      type: object
    ListImportFileTaskResponse:
      example:
        nextToken: ""
        taskInfos: ""
      properties:
        nextToken:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: " The token you use to retrieve the next set of results,\
              \ or null if there are no more results. "
          title: nextToken
        taskInfos:
          allOf:
          - $ref: '#/components/schemas/ListImportFileTaskInformation'
          - description: ' Lists information about the files you import.'
          title: taskInfos
      title: ListImportFileTaskResponse
      type: object
    ListServersResponse:
      example:
        serverInfos: ""
        nextToken: ""
      properties:
        nextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          - description: " The token you use to retrieve the next set of results,\
              \ or null if there are no more results. "
          title: nextToken
        serverInfos:
          allOf:
          - $ref: '#/components/schemas/ServerDetails'
          - description: ' The list of servers with detailed information about each
              server. '
          title: serverInfos
      title: ListServersResponse
      type: object
    PutPortfolioPreferencesResponse:
      properties: {}
      type: object
    ManagementPreference:
      description: ' Preferences for migrating an application to AWS. '
      properties:
        awsManagedResources:
          $ref: '#/components/schemas/ManagementPreference_awsManagedResources'
        noPreference:
          $ref: '#/components/schemas/ManagementPreference_noPreference'
        selfManageResources:
          $ref: '#/components/schemas/ManagementPreference_selfManageResources'
      title: ManagementPreference
      type: object
    DatabaseManagementPreference:
      enum:
      - AWS-managed
      - Self-manage
      - No preference
      title: DatabaseManagementPreference
      type: string
    DatabaseMigrationPreference:
      description: ' Preferences for migrating a database to AWS. '
      properties:
        heterogeneous:
          $ref: '#/components/schemas/DatabaseMigrationPreference_heterogeneous'
        homogeneous:
          $ref: '#/components/schemas/DatabaseMigrationPreference_homogeneous'
        noPreference:
          $ref: '#/components/schemas/DatabaseMigrationPreference_noPreference'
      title: DatabaseMigrationPreference
      type: object
    BusinessGoals:
      description: ' Business goals that you specify. '
      properties:
        licenseCostReduction:
          allOf:
          - $ref: '#/components/schemas/BusinessGoalsInteger'
          - description: ' Business goal to reduce license costs. '
          title: licenseCostReduction
        modernizeInfrastructureWithCloudNativeTechnologies:
          allOf:
          - $ref: '#/components/schemas/BusinessGoalsInteger'
          - description: ' Business goal to modernize infrastructure by moving to
              cloud native technologies. '
          title: modernizeInfrastructureWithCloudNativeTechnologies
        reduceOperationalOverheadWithManagedServices:
          allOf:
          - $ref: '#/components/schemas/BusinessGoalsInteger'
          - description: ' Business goal to reduce the operational overhead on the
              team by moving into managed services. '
          title: reduceOperationalOverheadWithManagedServices
        speedOfMigration:
          allOf:
          - $ref: '#/components/schemas/BusinessGoalsInteger'
          - description: ' Business goal to achieve migration at a fast pace. '
          title: speedOfMigration
      title: BusinessGoals
      type: object
    ConflictException: {}
    StartAssessmentResponse:
      example:
        assessmentId: ""
      properties:
        assessmentId:
          allOf:
          - $ref: '#/components/schemas/AsyncTaskId'
          - description: ' The ID of the assessment. '
          title: assessmentId
      title: StartAssessmentResponse
      type: object
    AssessmentTarget:
      description: Defines the criteria of assessment.
      properties:
        condition:
          allOf:
          - $ref: '#/components/schemas/Condition'
          - description: Condition of an assessment.
          title: condition
        name:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: Name of an assessment.
          title: name
        values:
          allOf:
          - $ref: '#/components/schemas/AssessmentTargetValues'
          - description: Values of an assessment.
          title: values
      required:
      - condition
      - name
      - values
      title: AssessmentTarget
      type: object
    ServiceQuotaExceededException: {}
    StartImportFileTaskResponse:
      example:
        id: ""
      properties:
        id:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: ' The ID for a specific import task. The ID is unique within
              an AWS account. '
          title: id
      title: StartImportFileTaskResponse
      type: object
    StartRecommendationReportGenerationResponse:
      example:
        id: ""
      properties:
        id:
          allOf:
          - $ref: '#/components/schemas/RecommendationTaskId'
          - description: ' The ID of the recommendation report generation task. '
          title: id
      title: StartRecommendationReportGenerationResponse
      type: object
    StopAssessmentResponse:
      properties: {}
      type: object
    UpdateApplicationComponentConfigResponse:
      properties: {}
      type: object
    SourceCode:
      description: ' Object containing source code information that is linked to an
        application component. '
      properties:
        location:
          allOf:
          - $ref: '#/components/schemas/Location'
          - description: ' The repository name for the source code. '
          title: location
        projectName:
          allOf:
          - $ref: '#/components/schemas/ProjectName'
          - description: The name of the project.
          title: projectName
        sourceVersion:
          allOf:
          - $ref: '#/components/schemas/SourceVersion'
          - description: ' The branch of the source code. '
          title: sourceVersion
        versionControl:
          allOf:
          - $ref: '#/components/schemas/VersionControl'
          - description: ' The type of repository to use for the source code. '
          title: versionControl
      title: SourceCode
      type: object
    Boolean:
      type: boolean
    Strategy:
      enum:
      - Rehost
      - Retirement
      - Refactor
      - Replatform
      - Retain
      - Relocate
      - Repurchase
      title: Strategy
      type: string
    TargetDestination:
      enum:
      - None specified
      - AWS Elastic BeanStalk
      - AWS Fargate
      - Amazon Elastic Cloud Compute (EC2)
      - Amazon Elastic Container Service (ECS)
      - Amazon Elastic Kubernetes Service (EKS)
      - Aurora MySQL
      - Aurora PostgreSQL
      - Amazon Relational Database Service on MySQL
      - Amazon Relational Database Service on PostgreSQL
      - Amazon DocumentDB
      - Amazon DynamoDB
      - Amazon Relational Database Service
      - Babelfish for Aurora PostgreSQL
      title: TargetDestination
      type: string
    TransformationToolName:
      enum:
      - App2Container
      - Porting Assistant For .NET
      - End of Support Migration
      - Windows Web Application Migration Assistant
      - Application Migration Service
      - Strategy Recommendation Support
      - In Place Operating System Upgrade
      - Schema Conversion Tool
      - Database Migration Service
      - Native SQL Server Backup/Restore
      title: TransformationToolName
      type: string
    UpdateServerConfigResponse:
      properties: {}
      type: object
    RuntimeAnalysisStatus:
      enum:
      - ANALYSIS_TO_BE_SCHEDULED
      - ANALYSIS_STARTED
      - ANALYSIS_SUCCESS
      - ANALYSIS_FAILED
      title: RuntimeAnalysisStatus
      type: string
    SrcCodeOrDbAnalysisStatus:
      enum:
      - ANALYSIS_TO_BE_SCHEDULED
      - ANALYSIS_STARTED
      - ANALYSIS_SUCCESS
      - ANALYSIS_FAILED
      - ANALYSIS_PARTIAL_SUCCESS
      - UNCONFIGURED
      - CONFIGURED
      title: SrcCodeOrDbAnalysisStatus
      type: string
    AnalysisStatusUnion:
      description: A combination of existing analysis statuses.
      properties:
        runtimeAnalysisStatus:
          allOf:
          - $ref: '#/components/schemas/RuntimeAnalysisStatus'
          - description: The status of the analysis.
          title: runtimeAnalysisStatus
        srcCodeOrDbAnalysisStatus:
          allOf:
          - $ref: '#/components/schemas/SrcCodeOrDbAnalysisStatus'
          - description: The status of the source code or database analysis.
          title: srcCodeOrDbAnalysisStatus
      title: AnalysisStatusUnion
      type: object
    AnalysisType:
      enum:
      - SOURCE_CODE_ANALYSIS
      - DATABASE_ANALYSIS
      - RUNTIME_ANALYSIS
      - BINARY_ANALYSIS
      title: AnalysisType
      type: string
    BinaryAnalyzerName:
      enum:
      - DLL_ANALYZER
      - BYTECODE_ANALYZER
      title: BinaryAnalyzerName
      type: string
    RunTimeAnalyzerName:
      enum:
      - A2C_ANALYZER
      - REHOST_ANALYZER
      - EMP_PA_ANALYZER
      - DATABASE_ANALYZER
      - SCT_ANALYZER
      title: RunTimeAnalyzerName
      type: string
    SourceCodeAnalyzerName:
      enum:
      - CSHARP_ANALYZER
      - JAVA_ANALYZER
      - BYTECODE_ANALYZER
      - PORTING_ASSISTANT
      title: SourceCodeAnalyzerName
      type: string
    AnalyzerNameUnion:
      description: The combination of the existing analyzers.
      properties:
        binaryAnalyzerName:
          allOf:
          - $ref: '#/components/schemas/BinaryAnalyzerName'
          - description: The binary analyzer names.
          title: binaryAnalyzerName
        runTimeAnalyzerName:
          allOf:
          - $ref: '#/components/schemas/RunTimeAnalyzerName'
          - description: The assessment analyzer names.
          title: runTimeAnalyzerName
        sourceCodeAnalyzerName:
          allOf:
          - $ref: '#/components/schemas/SourceCodeAnalyzerName'
          - description: The source code analyzer names.
          title: sourceCodeAnalyzerName
      title: AnalyzerNameUnion
      type: object
    S3Object:
      description: ' Contains the S3 bucket name and the Amazon S3 key name. '
      properties:
        s3Bucket:
          allOf:
          - $ref: '#/components/schemas/S3Bucket'
          - description: ' The S3 bucket name. '
          title: s3Bucket
        s3key:
          allOf:
          - $ref: '#/components/schemas/S3Key'
          - description: ' The Amazon S3 key name. '
          title: s3key
      title: S3Object
      type: object
    AntipatternReportStatus:
      enum:
      - FAILED
      - IN_PROGRESS
      - SUCCESS
      title: AntipatternReportStatus
      type: string
    StatusMessage:
      maxLength: 1024
      minLength: 0
      pattern: .*\S.*
      type: string
    AntipatternReportResult:
      description: The anti-pattern report result.
      properties:
        analyzerName:
          $ref: '#/components/schemas/AntipatternReportResult_analyzerName'
        antiPatternReportS3Object:
          $ref: '#/components/schemas/S3Object'
        antipatternReportStatus:
          allOf:
          - $ref: '#/components/schemas/AntipatternReportStatus'
          - description: The status of the anti-pattern report generation.
          title: antipatternReportStatus
        antipatternReportStatusMessage:
          allOf:
          - $ref: '#/components/schemas/StatusMessage'
          - description: The status message for the anti-pattern.
          title: antipatternReportStatusMessage
      title: AntipatternReportResult
      type: object
    AntipatternReportResultList:
      items:
        $ref: '#/components/schemas/AntipatternReportResult'
      type: array
    Integer:
      type: integer
    Severity:
      enum:
      - HIGH
      - MEDIUM
      - LOW
      title: Severity
      type: string
    AntipatternSeveritySummary:
      description: ' Contains the summary of anti-patterns and their severity. '
      properties:
        count:
          allOf:
          - $ref: '#/components/schemas/Integer'
          - description: ' Contains the count of anti-patterns. '
          title: count
        severity:
          allOf:
          - $ref: '#/components/schemas/Severity'
          - description: ' Contains the severity of anti-patterns. '
          title: severity
      title: AntipatternSeveritySummary
      type: object
    AppType:
      enum:
      - DotNetFramework
      - Java
      - SQLServer
      - IIS
      - Oracle
      - Other
      - Tomcat
      - JBoss
      - Spring
      - Mongo DB
      - DB2
      - Maria DB
      - MySQL
      - Sybase
      - PostgreSQLServer
      - Cassandra
      - IBM WebSphere
      - Oracle WebLogic
      - Visual Basic
      - Unknown
      - DotnetCore
      - Dotnet
      title: AppType
      type: string
    AppUnitErrorCategory:
      enum:
      - CREDENTIAL_ERROR
      - CONNECTIVITY_ERROR
      - PERMISSION_ERROR
      - UNSUPPORTED_ERROR
      - OTHER_ERROR
      title: AppUnitErrorCategory
      type: string
    AppUnitError:
      description: Error in the analysis of the application unit.
      properties:
        appUnitErrorCategory:
          allOf:
          - $ref: '#/components/schemas/AppUnitErrorCategory'
          - description: The category of the error.
          title: appUnitErrorCategory
      title: AppUnitError
      type: object
    ApplicationComponentCriteria:
      enum:
      - NOT_DEFINED
      - APP_NAME
      - SERVER_ID
      - APP_TYPE
      - STRATEGY
      - DESTINATION
      - ANALYSIS_STATUS
      - ERROR_CATEGORY
      title: ApplicationComponentCriteria
      type: string
    ServerId:
      maxLength: 27
      minLength: 1
      pattern: .*\S.*
      type: string
    DatabaseConfigDetail:
      description: ' Configuration information used for assessing databases. '
      properties:
        secretName:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: ' AWS Secrets Manager key that holds the credentials that
              you use to connect to a database. '
          title: secretName
      title: DatabaseConfigDetail
      type: object
    ResourceId:
      maxLength: 44
      minLength: 0
      pattern: "^[0-9a-b]+"
      type: string
    InclusionStatus:
      enum:
      - excludeFromAssessment
      - includeInAssessment
      title: InclusionStatus
      type: string
    TimeStamp:
      format: date-time
      type: string
    ListAntipatternSeveritySummary:
      items:
        $ref: '#/components/schemas/AntipatternSeveritySummary'
      type: array
    ResourceName:
      type: string
    String:
      maxLength: 1024
      minLength: 0
      pattern: .*\S.*
      title: String
      type: string
    RecommendationSet:
      description: ' Contains a recommendation set. '
      properties:
        strategy:
          allOf:
          - $ref: '#/components/schemas/Strategy'
          - description: ' The recommended strategy. '
          title: strategy
        targetDestination:
          allOf:
          - $ref: '#/components/schemas/TargetDestination'
          - description: ' The recommended target destination. '
          title: targetDestination
        transformationTool:
          $ref: '#/components/schemas/RecommendationSet_transformationTool'
      title: RecommendationSet
      type: object
    ResourceSubType:
      enum:
      - Database
      - Process
      - DatabaseProcess
      title: ResourceSubType
      type: string
    ResultList:
      items:
        $ref: '#/components/schemas/Result'
      type: array
    SourceCodeRepositories:
      items:
        $ref: '#/components/schemas/SourceCodeRepository'
      type: array
    ApplicationComponentDetail:
      description: ' Contains detailed information about an application component. '
      properties:
        analysisStatus:
          allOf:
          - $ref: '#/components/schemas/SrcCodeOrDbAnalysisStatus'
          - description: " The status of analysis, if the application component has\
              \ source code or an associated database. "
          title: analysisStatus
        antipatternReportS3Object:
          $ref: '#/components/schemas/ApplicationComponentDetail_antipatternReportS3Object'
        antipatternReportStatus:
          allOf:
          - $ref: '#/components/schemas/AntipatternReportStatus'
          - description: ' The status of the anti-pattern report generation.'
          title: antipatternReportStatus
        antipatternReportStatusMessage:
          allOf:
          - $ref: '#/components/schemas/StatusMessage'
          - description: ' The status message for the anti-pattern. '
          title: antipatternReportStatusMessage
        appType:
          allOf:
          - $ref: '#/components/schemas/AppType'
          - description: ' The type of application component. '
          title: appType
        appUnitError:
          $ref: '#/components/schemas/ApplicationComponentDetail_appUnitError'
        associatedServerId:
          allOf:
          - $ref: '#/components/schemas/ServerId'
          - description: ' The ID of the server that the application component is
              running on. '
          title: associatedServerId
        databaseConfigDetail:
          $ref: '#/components/schemas/ApplicationComponentDetail_databaseConfigDetail'
        id:
          allOf:
          - $ref: '#/components/schemas/ResourceId'
          - description: ' The ID of the application component. '
          title: id
        inclusionStatus:
          allOf:
          - $ref: '#/components/schemas/InclusionStatus'
          - description: ' Indicates whether the application component has been included
              for server recommendation or not. '
          title: inclusionStatus
        lastAnalyzedTimestamp:
          allOf:
          - $ref: '#/components/schemas/TimeStamp'
          - description: ' The timestamp of when the application component was assessed. '
          title: lastAnalyzedTimestamp
        listAntipatternSeveritySummary:
          allOf:
          - $ref: '#/components/schemas/ListAntipatternSeveritySummary'
          - description: ' A list of anti-pattern severity summaries. '
          title: listAntipatternSeveritySummary
        moreServerAssociationExists:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          - description: ' Set to true if the application component is running on
              multiple servers.'
          title: moreServerAssociationExists
        name:
          allOf:
          - $ref: '#/components/schemas/ResourceName'
          - description: ' The name of application component. '
          title: name
        osDriver:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: ' OS driver. '
          title: osDriver
        osVersion:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: ' OS version. '
          title: osVersion
        recommendationSet:
          $ref: '#/components/schemas/ApplicationComponentDetail_recommendationSet'
        resourceSubType:
          allOf:
          - $ref: '#/components/schemas/ResourceSubType'
          - description: ' The application component subtype.'
          title: resourceSubType
        resultList:
          allOf:
          - $ref: '#/components/schemas/ResultList'
          - description: A list of the analysis results.
          title: resultList
        runtimeStatus:
          allOf:
          - $ref: '#/components/schemas/RuntimeAnalysisStatus'
          - description: The status of the application unit.
          title: runtimeStatus
        runtimeStatusMessage:
          allOf:
          - $ref: '#/components/schemas/StatusMessage'
          - description: The status message for the application unit.
          title: runtimeStatusMessage
        sourceCodeRepositories:
          allOf:
          - $ref: '#/components/schemas/SourceCodeRepositories'
          - description: ' Details about the source code repository associated with
              the application component. '
          title: sourceCodeRepositories
        statusMessage:
          allOf:
          - $ref: '#/components/schemas/StatusMessage'
          - description: ' A detailed description of the analysis status and any failure
              message. '
          title: statusMessage
      title: ApplicationComponentDetail
      type: object
    ApplicationComponentDetails:
      items:
        $ref: '#/components/schemas/ApplicationComponentDetail'
      type: array
    ApplicationComponentId:
      maxLength: 44
      minLength: 0
      pattern: "[0-9a-zA-Z-]+"
      type: string
    ApplicationComponentStatusSummary:
      description: Summary of the analysis status of the application component.
      properties:
        count:
          allOf:
          - $ref: '#/components/schemas/Integer'
          - description: "The number of application components successfully analyzed,\
              \ partially successful or failed analysis."
          title: count
        srcCodeOrDbAnalysisStatus:
          allOf:
          - $ref: '#/components/schemas/SrcCodeOrDbAnalysisStatus'
          - description: The status of database analysis.
          title: srcCodeOrDbAnalysisStatus
      title: ApplicationComponentStatusSummary
      type: object
    ApplicationComponentStrategy:
      description: ' Contains information about a strategy recommendation for an application
        component. '
      properties:
        isPreferred:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          - description: ' Set to true if the recommendation is set as preferred. '
          title: isPreferred
        recommendation:
          $ref: '#/components/schemas/ApplicationComponentStrategy_recommendation'
        status:
          allOf:
          - $ref: '#/components/schemas/StrategyRecommendation'
          - description: ' The recommendation status of a strategy for an application
              component. '
          title: status
      title: ApplicationComponentStrategy
      type: object
    ApplicationComponentStrategies:
      items:
        $ref: '#/components/schemas/ApplicationComponentStrategy'
      type: array
    StrategyRecommendation:
      enum:
      - recommended
      - viableOption
      - notRecommended
      - potential
      title: StrategyRecommendation
      type: string
    ApplicationComponentSummary:
      description: ' Contains the summary of application components. '
      properties:
        appType:
          allOf:
          - $ref: '#/components/schemas/AppType'
          - description: ' Contains the name of application types. '
          title: appType
        count:
          allOf:
          - $ref: '#/components/schemas/Integer'
          - description: ' Contains the count of application type. '
          title: count
      title: ApplicationComponentSummary
      type: object
    ApplicationMode:
      enum:
      - ALL
      - KNOWN
      - UNKNOWN
      title: ApplicationMode
      type: string
    ApplicationPreferences:
      description: ' Application preferences that you specify. '
      properties:
        managementPreference:
          $ref: '#/components/schemas/PutPortfolioPreferences_request_applicationPreferences_managementPreference'
      title: ApplicationPreferences
      type: object
    AssessmentStatus:
      enum:
      - IN_PROGRESS
      - COMPLETE
      - FAILED
      - STOPPED
      title: AssessmentStatus
      type: string
    AssessmentStatusMessage:
      maxLength: 512
      minLength: 0
      pattern: .*\S.*
      type: string
    ListApplicationComponentStatusSummary:
      items:
        $ref: '#/components/schemas/ApplicationComponentStatusSummary'
      type: array
    ListStrategySummary:
      items:
        $ref: '#/components/schemas/StrategySummary'
      type: array
    ListApplicationComponentSummary:
      items:
        $ref: '#/components/schemas/ApplicationComponentSummary'
      type: array
    ListServerStatusSummary:
      items:
        $ref: '#/components/schemas/ServerStatusSummary'
      type: array
    ListServerSummary:
      items:
        $ref: '#/components/schemas/ServerSummary'
      type: array
    AssessmentSummary:
      description: ' Contains the summary of the assessment results. '
      properties:
        antipatternReportS3Object:
          $ref: '#/components/schemas/AssessmentSummary_antipatternReportS3Object'
        antipatternReportStatus:
          allOf:
          - $ref: '#/components/schemas/AntipatternReportStatus'
          - description: ' The status of the anti-pattern report. '
          title: antipatternReportStatus
        antipatternReportStatusMessage:
          allOf:
          - $ref: '#/components/schemas/StatusMessage'
          - description: ' The status message of the anti-pattern report. '
          title: antipatternReportStatusMessage
        lastAnalyzedTimestamp:
          allOf:
          - $ref: '#/components/schemas/TimeStamp'
          - description: ' The time the assessment was performed. '
          title: lastAnalyzedTimestamp
        listAntipatternSeveritySummary:
          allOf:
          - $ref: '#/components/schemas/ListAntipatternSeveritySummary'
          - description: ' List of AntipatternSeveritySummary. '
          title: listAntipatternSeveritySummary
        listApplicationComponentStatusSummary:
          allOf:
          - $ref: '#/components/schemas/ListApplicationComponentStatusSummary'
          - description: List of status summaries of the analyzed application components.
          title: listApplicationComponentStatusSummary
        listApplicationComponentStrategySummary:
          allOf:
          - $ref: '#/components/schemas/ListStrategySummary'
          - description: ' List of ApplicationComponentStrategySummary. '
          title: listApplicationComponentStrategySummary
        listApplicationComponentSummary:
          allOf:
          - $ref: '#/components/schemas/ListApplicationComponentSummary'
          - description: ' List of ApplicationComponentSummary. '
          title: listApplicationComponentSummary
        listServerStatusSummary:
          allOf:
          - $ref: '#/components/schemas/ListServerStatusSummary'
          - description: List of status summaries of the analyzed servers.
          title: listServerStatusSummary
        listServerStrategySummary:
          allOf:
          - $ref: '#/components/schemas/ListStrategySummary'
          - description: ' List of ServerStrategySummary. '
          title: listServerStrategySummary
        listServerSummary:
          allOf:
          - $ref: '#/components/schemas/ListServerSummary'
          - description: ' List of ServerSummary. '
          title: listServerSummary
      title: AssessmentSummary
      type: object
    Condition:
      enum:
      - EQUALS
      - NOT_EQUALS
      - CONTAINS
      - NOT_CONTAINS
      title: Condition
      type: string
    AssessmentTargetValues:
      items:
        $ref: '#/components/schemas/String'
      type: array
    AssessmentTargets:
      items:
        $ref: '#/components/schemas/AssessmentTarget'
      maxItems: 10
      minItems: 0
      type: array
    AssociatedApplication:
      description: ' Object containing details about applications as defined in Application
        Discovery Service. '
      properties:
        id:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: ' ID of the application as defined in Application Discovery
              Service. '
          title: id
        name:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: ' Name of the application as defined in Application Discovery
              Service. '
          title: name
      title: AssociatedApplication
      type: object
    AssociatedApplications:
      items:
        $ref: '#/components/schemas/AssociatedApplication'
      type: array
    AssociatedServerIDs:
      items:
        $ref: '#/components/schemas/String'
      type: array
    AsyncTaskId:
      maxLength: 52
      minLength: 0
      pattern: "[0-9a-z-:]+"
      type: string
    AuthType:
      enum:
      - NTLM
      - SSH
      - CERT
      title: AuthType
      type: string
    AwsManagedTargetDestinations:
      items:
        $ref: '#/components/schemas/AwsManagedTargetDestination'
      maxItems: 1
      minItems: 1
      type: array
    AwsManagedResources:
      description: ' Object containing the choice of application destination that
        you specify. '
      properties:
        targetDestination:
          allOf:
          - $ref: '#/components/schemas/AwsManagedTargetDestinations'
          - description: ' The choice of application destination that you specify. '
          title: targetDestination
      required:
      - targetDestination
      title: AwsManagedResources
      type: object
    AwsManagedTargetDestination:
      enum:
      - None specified
      - AWS Elastic BeanStalk
      - AWS Fargate
      title: AwsManagedTargetDestination
      type: string
    BusinessGoalsInteger:
      maximum: 5
      minimum: 1
      type: integer
    CollectorHealth:
      enum:
      - COLLECTOR_HEALTHY
      - COLLECTOR_UNHEALTHY
      title: CollectorHealth
      type: string
    ConfigurationSummary:
      description: Summary of the collector configuration.
      properties:
        ipAddressBasedRemoteInfoList:
          allOf:
          - $ref: '#/components/schemas/IPAddressBasedRemoteInfoList'
          - description: IP address based configurations.
          title: ipAddressBasedRemoteInfoList
        pipelineInfoList:
          allOf:
          - $ref: '#/components/schemas/PipelineInfoList'
          - description: The list of pipeline info configurations.
          title: pipelineInfoList
        remoteSourceCodeAnalysisServerInfo:
          $ref: '#/components/schemas/ConfigurationSummary_remoteSourceCodeAnalysisServerInfo'
        vcenterBasedRemoteInfoList:
          allOf:
          - $ref: '#/components/schemas/VcenterBasedRemoteInfoList'
          - description: The list of vCenter configurations.
          title: vcenterBasedRemoteInfoList
        versionControlInfoList:
          allOf:
          - $ref: '#/components/schemas/VersionControlInfoList'
          - description: The list of the version control configurations.
          title: versionControlInfoList
      title: ConfigurationSummary
      type: object
    Collector:
      description: ' Process data collector that runs in the environment that you
        specify. '
      properties:
        collectorHealth:
          allOf:
          - $ref: '#/components/schemas/CollectorHealth'
          - description: ' Indicates the health of a collector. '
          title: collectorHealth
        collectorId:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: ' The ID of the collector. '
          title: collectorId
        collectorVersion:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: ' Current version of the collector that is running in the
              environment that you specify. '
          title: collectorVersion
        configurationSummary:
          $ref: '#/components/schemas/Collector_configurationSummary'
        hostName:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: ' Hostname of the server that is hosting the collector. '
          title: hostName
        ipAddress:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: ' IP address of the server that is hosting the collector. '
          title: ipAddress
        lastActivityTimeStamp:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: ' Time when the collector last pinged the service. '
          title: lastActivityTimeStamp
        registeredTimeStamp:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: ' Time when the collector registered with the service. '
          title: registeredTimeStamp
      title: Collector
      type: object
    Collectors:
      items:
        $ref: '#/components/schemas/Collector'
      type: array
    IPAddressBasedRemoteInfoList:
      items:
        $ref: '#/components/schemas/IPAddressBasedRemoteInfo'
      type: array
    PipelineInfoList:
      items:
        $ref: '#/components/schemas/PipelineInfo'
      type: array
    RemoteSourceCodeAnalysisServerInfo:
      description: Information about the server configured for source code analysis.
      properties:
        remoteSourceCodeAnalysisServerConfigurationTimestamp:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The time when the remote source code server was configured.
          title: remoteSourceCodeAnalysisServerConfigurationTimestamp
      title: RemoteSourceCodeAnalysisServerInfo
      type: object
    VcenterBasedRemoteInfoList:
      items:
        $ref: '#/components/schemas/VcenterBasedRemoteInfo'
      type: array
    VersionControlInfoList:
      items:
        $ref: '#/components/schemas/VersionControlInfo'
      type: array
    DataCollectionDetails:
      description: ' Detailed information about an assessment. '
      properties:
        completionTime:
          allOf:
          - $ref: '#/components/schemas/TimeStamp'
          - description: ' The time the assessment completes. '
          title: completionTime
        failed:
          allOf:
          - $ref: '#/components/schemas/Integer'
          - description: ' The number of failed servers in the assessment. '
          title: failed
        inProgress:
          allOf:
          - $ref: '#/components/schemas/Integer'
          - description: ' The number of servers with the assessment status <code>IN_PROGESS</code>. '
          title: inProgress
        servers:
          allOf:
          - $ref: '#/components/schemas/Integer'
          - description: ' The total number of servers in the assessment. '
          title: servers
        startTime:
          allOf:
          - $ref: '#/components/schemas/TimeStamp'
          - description: ' The start time of assessment. '
          title: startTime
        status:
          allOf:
          - $ref: '#/components/schemas/AssessmentStatus'
          - description: ' The status of the assessment. '
          title: status
        statusMessage:
          allOf:
          - $ref: '#/components/schemas/AssessmentStatusMessage'
          - description: The status message of the assessment.
          title: statusMessage
        success:
          allOf:
          - $ref: '#/components/schemas/Integer'
          - description: ' The number of successful servers in the assessment. '
          title: success
      title: DataCollectionDetails
      type: object
    DataSourceType:
      enum:
      - ApplicationDiscoveryService
      - MPA
      - Import
      title: DataSourceType
      type: string
    Heterogeneous:
      description: ' The object containing details about heterogeneous database preferences. '
      properties:
        targetDatabaseEngine:
          allOf:
          - $ref: '#/components/schemas/HeterogeneousTargetDatabaseEngines'
          - description: ' The target database engine for heterogeneous database migration
              preference. '
          title: targetDatabaseEngine
      required:
      - targetDatabaseEngine
      title: Heterogeneous
      type: object
    Homogeneous:
      description: ' The object containing details about homogeneous database preferences. '
      properties:
        targetDatabaseEngine:
          allOf:
          - $ref: '#/components/schemas/HomogeneousTargetDatabaseEngines'
          - description: ' The target database engine for homogeneous database migration
              preferences. '
          title: targetDatabaseEngine
      title: Homogeneous
      type: object
    NoDatabaseMigrationPreference:
      description: " The object containing details about database migration preferences,\
        \ when you have no particular preference. "
      properties:
        targetDatabaseEngine:
          allOf:
          - $ref: '#/components/schemas/TargetDatabaseEngines'
          - description: ' The target database engine for database migration preference
              that you specify. '
          title: targetDatabaseEngine
      required:
      - targetDatabaseEngine
      title: NoDatabaseMigrationPreference
      type: object
    DatabasePreferences:
      description: ' Preferences on managing your databases on AWS. '
      properties:
        databaseManagementPreference:
          allOf:
          - $ref: '#/components/schemas/DatabaseManagementPreference'
          - description: ' Specifies whether you''re interested in self-managed databases
              or databases managed by AWS. '
          title: databaseManagementPreference
        databaseMigrationPreference:
          $ref: '#/components/schemas/PutPortfolioPreferences_request_databasePreferences_databaseMigrationPreference'
      title: DatabasePreferences
      type: object
    GetApplicationComponentDetailsRequest:
      properties: {}
      title: GetApplicationComponentDetailsRequest
      type: object
    GetApplicationComponentStrategiesRequest:
      properties: {}
      title: GetApplicationComponentStrategiesRequest
      type: object
    GetAssessmentRequest:
      properties: {}
      title: GetAssessmentRequest
      type: object
    GetImportFileTaskRequest:
      properties: {}
      title: GetImportFileTaskRequest
      type: object
    importS3Bucket:
      maxLength: 63
      minLength: 0
      pattern: "[0-9a-z]+[0-9a-z\\.\\-]*[0-9a-z]+"
      type: string
    importS3Key:
      maxLength: 1024
      minLength: 0
      pattern: .*\S.*
      type: string
    ImportFileTaskStatus:
      enum:
      - ImportInProgress
      - ImportFailed
      - ImportPartialSuccess
      - ImportSuccess
      - DeleteInProgress
      - DeleteFailed
      - DeletePartialSuccess
      - DeleteSuccess
      title: ImportFileTaskStatus
      type: string
    GetLatestAssessmentIdRequest:
      properties: {}
      title: GetLatestAssessmentIdRequest
      type: object
    GetPortfolioPreferencesRequest:
      properties: {}
      title: GetPortfolioPreferencesRequest
      type: object
    PrioritizeBusinessGoals:
      description: ' Rank of business goals based on priority. '
      properties:
        businessGoals:
          $ref: '#/components/schemas/PutPortfolioPreferences_request_prioritizeBusinessGoals_businessGoals'
      title: PrioritizeBusinessGoals
      type: object
    GetPortfolioSummaryRequest:
      properties: {}
      title: GetPortfolioSummaryRequest
      type: object
    RecommendationTaskId:
      maxLength: 52
      minLength: 0
      pattern: "[0-9a-z-:]+"
      type: string
    GetRecommendationReportDetailsRequest:
      properties: {}
      title: GetRecommendationReportDetailsRequest
      type: object
    RecommendationReportDetails:
      description: ' Contains detailed information about a recommendation report. '
      properties:
        completionTime:
          allOf:
          - $ref: '#/components/schemas/RecommendationReportTimeStamp'
          - description: ' The time that the recommendation report generation task
              completes. '
          title: completionTime
        s3Bucket:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: ' The S3 bucket where the report file is located. '
          title: s3Bucket
        s3Keys:
          allOf:
          - $ref: '#/components/schemas/S3Keys'
          - description: ' The Amazon S3 key name of the report file. '
          title: s3Keys
        startTime:
          allOf:
          - $ref: '#/components/schemas/RecommendationReportTimeStamp'
          - description: ' The time that the recommendation report generation task
              starts. '
          title: startTime
        status:
          allOf:
          - $ref: '#/components/schemas/RecommendationReportStatus'
          - description: ' The status of the recommendation report generation task. '
          title: status
        statusMessage:
          allOf:
          - $ref: '#/components/schemas/RecommendationReportStatusMessage'
          - description: ' The status message for recommendation report generation. '
          title: statusMessage
      title: RecommendationReportDetails
      type: object
    MaxResult:
      type: integer
    NextToken:
      maxLength: 2048
      minLength: 0
      pattern: .*\S.*
      type: string
    GetServerDetailsRequest:
      properties: {}
      title: GetServerDetailsRequest
      type: object
    ServerDetail:
      description: ' Detailed information about a server. '
      properties:
        antipatternReportS3Object:
          $ref: '#/components/schemas/ServerDetail_antipatternReportS3Object'
        antipatternReportStatus:
          allOf:
          - $ref: '#/components/schemas/AntipatternReportStatus'
          - description: ' The status of the anti-pattern report generation. '
          title: antipatternReportStatus
        antipatternReportStatusMessage:
          allOf:
          - $ref: '#/components/schemas/StatusMessage'
          - description: ' A message about the status of the anti-pattern report generation. '
          title: antipatternReportStatusMessage
        applicationComponentStrategySummary:
          allOf:
          - $ref: '#/components/schemas/ListStrategySummary'
          - description: ' A list of strategy summaries. '
          title: applicationComponentStrategySummary
        dataCollectionStatus:
          allOf:
          - $ref: '#/components/schemas/RunTimeAssessmentStatus'
          - description: ' The status of assessment for the server. '
          title: dataCollectionStatus
        id:
          allOf:
          - $ref: '#/components/schemas/ResourceId'
          - description: ' The server ID. '
          title: id
        lastAnalyzedTimestamp:
          allOf:
          - $ref: '#/components/schemas/TimeStamp'
          - description: ' The timestamp of when the server was assessed. '
          title: lastAnalyzedTimestamp
        listAntipatternSeveritySummary:
          allOf:
          - $ref: '#/components/schemas/ListAntipatternSeveritySummary'
          - description: ' A list of anti-pattern severity summaries. '
          title: listAntipatternSeveritySummary
        name:
          allOf:
          - $ref: '#/components/schemas/ResourceName'
          - description: ' The name of the server. '
          title: name
        recommendationSet:
          $ref: '#/components/schemas/ServerDetail_recommendationSet'
        serverError:
          $ref: '#/components/schemas/ServerDetail_serverError'
        serverType:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: ' The type of server. '
          title: serverType
        statusMessage:
          allOf:
          - $ref: '#/components/schemas/StatusMessage'
          - description: " A message about the status of data collection, which contains\
              \ detailed descriptions of any error messages. "
          title: statusMessage
        systemInfo:
          $ref: '#/components/schemas/ServerDetail_systemInfo'
      title: ServerDetail
      type: object
    GetServerStrategiesRequest:
      properties: {}
      title: GetServerStrategiesRequest
      type: object
    ServerStrategies:
      items:
        $ref: '#/components/schemas/ServerStrategy'
      type: array
    GroupName:
      enum:
      - ExternalId
      - ExternalSourceType
      title: GroupName
      type: string
    GroupIds:
      items:
        $ref: '#/components/schemas/Group'
      type: array
    HeterogeneousTargetDatabaseEngines:
      items:
        $ref: '#/components/schemas/HeterogeneousTargetDatabaseEngine'
      maxItems: 1
      minItems: 1
      type: array
    HeterogeneousTargetDatabaseEngine:
      enum:
      - None specified
      - Amazon Aurora
      - AWS PostgreSQL
      - MySQL
      - Microsoft SQL Server
      - Oracle Database
      - MariaDB
      - SAP
      - Db2 LUW
      - MongoDB
      title: HeterogeneousTargetDatabaseEngine
      type: string
    HomogeneousTargetDatabaseEngines:
      items:
        $ref: '#/components/schemas/HomogeneousTargetDatabaseEngine'
      maxItems: 1
      minItems: 0
      type: array
    HomogeneousTargetDatabaseEngine:
      enum:
      - None specified
      title: HomogeneousTargetDatabaseEngine
      type: string
    IPAddress:
      maxLength: 15
      minLength: 0
      pattern: "^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])$"
      type: string
    OSType:
      enum:
      - LINUX
      - WINDOWS
      title: OSType
      type: string
    IPAddressBasedRemoteInfo:
      description: IP address based configurations.
      properties:
        authType:
          allOf:
          - $ref: '#/components/schemas/AuthType'
          - description: The type of authorization.
          title: authType
        ipAddressConfigurationTimeStamp:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The time stamp of the configuration.
          title: ipAddressConfigurationTimeStamp
        osType:
          allOf:
          - $ref: '#/components/schemas/OSType'
          - description: The type of the operating system.
          title: osType
      title: IPAddressBasedRemoteInfo
      type: object
    ImportFileTaskInformation:
      description: ' Information about the import file tasks you request. '
      properties:
        completionTime:
          allOf:
          - $ref: '#/components/schemas/TimeStamp'
          - description: ' The time that the import task completes. '
          title: completionTime
        id:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: ' The ID of the import file task. '
          title: id
        importName:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: ' The name of the import task given in <code>StartImportFileTask</code>. '
          title: importName
        inputS3Bucket:
          allOf:
          - $ref: '#/components/schemas/importS3Bucket'
          - description: ' The S3 bucket where the import file is located. '
          title: inputS3Bucket
        inputS3Key:
          allOf:
          - $ref: '#/components/schemas/importS3Key'
          - description: ' The Amazon S3 key name of the import file. '
          title: inputS3Key
        numberOfRecordsFailed:
          allOf:
          - $ref: '#/components/schemas/Integer'
          - description: ' The number of records that failed to be imported. '
          title: numberOfRecordsFailed
        numberOfRecordsSuccess:
          allOf:
          - $ref: '#/components/schemas/Integer'
          - description: ' The number of records successfully imported. '
          title: numberOfRecordsSuccess
        startTime:
          allOf:
          - $ref: '#/components/schemas/TimeStamp'
          - description: ' Start time of the import task. '
          title: startTime
        status:
          allOf:
          - $ref: '#/components/schemas/ImportFileTaskStatus'
          - description: ' Status of import file task. '
          title: status
        statusReportS3Bucket:
          allOf:
          - $ref: '#/components/schemas/importS3Bucket'
          - description: ' The S3 bucket name for status report of import task. '
          title: statusReportS3Bucket
        statusReportS3Key:
          allOf:
          - $ref: '#/components/schemas/importS3Key'
          - description: ' The Amazon S3 key name for status report of import task.
              The report contains details about whether each record imported successfully
              or why it did not. '
          title: statusReportS3Key
      title: ImportFileTaskInformation
      type: object
    InterfaceName:
      maxLength: 1024
      minLength: 0
      pattern: .*
      type: string
    ListApplicationComponentsRequestFilterValueString:
      maxLength: 256
      minLength: 0
      pattern: .*\S.*
      type: string
    SortOrder:
      enum:
      - ASC
      - DESC
      title: SortOrder
      type: string
    ListApplicationComponentsRequest:
      example:
        groupIdFilter: ""
        filterValue: ""
        applicationComponentCriteria: ""
        maxResults: ""
        nextToken: ""
        sort: ""
      properties:
        applicationComponentCriteria:
          allOf:
          - $ref: '#/components/schemas/ApplicationComponentCriteria'
          - description: ' Criteria for filtering the list of application components. '
        filterValue:
          allOf:
          - $ref: '#/components/schemas/ListApplicationComponentsRequestFilterValueString'
          - description: " Specify the value based on the application component criteria\
              \ type. For example, if <code>applicationComponentCriteria</code> is\
              \ set to <code>SERVER_ID</code> and <code>filterValue</code> is set\
              \ to <code>server1</code>, then <a>ListApplicationComponents</a> returns\
              \ all the application components running on server1. "
        groupIdFilter:
          allOf:
          - $ref: '#/components/schemas/GroupIds'
          - description: ' The group ID specified in to filter on. '
        maxResults:
          allOf:
          - $ref: '#/components/schemas/MaxResult'
          - description: ' The maximum number of items to include in the response.
              The maximum value is 100. '
        nextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          - description: " The token from a previous call that you use to retrieve\
              \ the next set of results. For example, if a previous call to this action\
              \ returned 100 items, but you set <code>maxResults</code> to 10. You'll\
              \ receive a set of 10 results along with a token. You then use the returned\
              \ token to retrieve the next set of 10. "
        sort:
          allOf:
          - $ref: '#/components/schemas/SortOrder'
          - description: ' Specifies whether to sort by ascending (<code>ASC</code>)
              or descending (<code>DESC</code>) order. '
      title: ListApplicationComponentsRequest
      type: object
    ListCollectorsRequest:
      properties: {}
      title: ListCollectorsRequest
      type: object
    ListImportFileTaskInformation:
      items:
        $ref: '#/components/schemas/ImportFileTaskInformation'
      type: array
    ListImportFileTaskRequest:
      properties: {}
      title: ListImportFileTaskRequest
      type: object
    ServerStatusSummary:
      description: The status summary of the server analysis.
      properties:
        count:
          allOf:
          - $ref: '#/components/schemas/Integer'
          - description: "The number of servers successfully analyzed, partially successful\
              \ or failed analysis."
          title: count
        runTimeAssessmentStatus:
          allOf:
          - $ref: '#/components/schemas/RunTimeAssessmentStatus'
          - description: The status of the run time.
          title: runTimeAssessmentStatus
      title: ServerStatusSummary
      type: object
    ServerSummary:
      description: ' Object containing details about the servers imported by Application
        Discovery Service '
      properties:
        ServerOsType:
          allOf:
          - $ref: '#/components/schemas/ServerOsType'
          - description: ' Type of operating system for the servers. '
          title: ServerOsType
        count:
          allOf:
          - $ref: '#/components/schemas/Integer'
          - description: ' Number of servers. '
          title: count
      title: ServerSummary
      type: object
    ServerCriteria:
      enum:
      - NOT_DEFINED
      - OS_NAME
      - STRATEGY
      - DESTINATION
      - SERVER_ID
      - ANALYSIS_STATUS
      - ERROR_CATEGORY
      title: ServerCriteria
      type: string
    ListServersRequest:
      example:
        groupIdFilter: ""
        serverCriteria: ""
        filterValue: ""
        maxResults: ""
        nextToken: ""
        sort: ""
      properties:
        filterValue:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: " Specifies the filter value, which is based on the type\
              \ of server criteria. For example, if <code>serverCriteria</code> is\
              \ <code>OS_NAME</code>, and the <code>filterValue</code> is equal to\
              \ <code>WindowsServer</code>, then <code>ListServers</code> returns\
              \ all of the servers matching the OS name <code>WindowsServer</code>. "
        groupIdFilter:
          allOf:
          - $ref: '#/components/schemas/GroupIds'
          - description: ' Specifies the group ID to filter on. '
        maxResults:
          allOf:
          - $ref: '#/components/schemas/MaxResult'
          - description: ' The maximum number of items to include in the response.
              The maximum value is 100. '
        nextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          - description: " The token from a previous call that you use to retrieve\
              \ the next set of results. For example, if a previous call to this action\
              \ returned 100 items, but you set <code>maxResults</code> to 10. You'll\
              \ receive a set of 10 results along with a token. You then use the returned\
              \ token to retrieve the next set of 10. "
        serverCriteria:
          allOf:
          - $ref: '#/components/schemas/ServerCriteria'
          - description: ' Criteria for filtering servers. '
        sort:
          allOf:
          - $ref: '#/components/schemas/SortOrder'
          - description: ' Specifies whether to sort by ascending (<code>ASC</code>)
              or descending (<code>DESC</code>) order. '
      title: ListServersRequest
      type: object
    ServerDetails:
      items:
        $ref: '#/components/schemas/ServerDetail'
      type: array
    StrategySummary:
      description: ' Object containing the summary of the strategy recommendations. '
      properties:
        count:
          allOf:
          - $ref: '#/components/schemas/Integer'
          - description: ' The count of recommendations per strategy. '
          title: count
        strategy:
          allOf:
          - $ref: '#/components/schemas/Strategy'
          - description: ' The name of recommended strategy. '
          title: strategy
      title: StrategySummary
      type: object
    Location:
      maxLength: 128
      minLength: 1
      pattern: .*\S.*
      type: string
    MacAddress:
      maxLength: 17
      minLength: 0
      pattern: "^([0-9A-Fa-f]{2}[:-]){5}([0-9A-Fa-f]{2})|([0-9a-fA-F]{4}\\\\.[0-9a-fA-F]{4}\\\
        \\.[0-9a-fA-F]{4})$”$"
      type: string
    NoManagementPreference:
      description: ' Object containing the choice of application destination that
        you specify. '
      properties:
        targetDestination:
          allOf:
          - $ref: '#/components/schemas/NoPreferenceTargetDestinations'
          - description: ' The choice of application destination that you specify. '
          title: targetDestination
      required:
      - targetDestination
      title: NoManagementPreference
      type: object
    SelfManageResources:
      description: ' Self-managed resources. '
      properties:
        targetDestination:
          allOf:
          - $ref: '#/components/schemas/SelfManageTargetDestinations'
          - description: ' Self-managed resources target destination. '
          title: targetDestination
      required:
      - targetDestination
      title: SelfManageResources
      type: object
    NetMask:
      maxLength: 1024
      minLength: 0
      pattern: .*
      type: string
    NetworkInfo:
      description: ' Information about the server''s network for which the assessment
        was run. '
      properties:
        interfaceName:
          allOf:
          - $ref: '#/components/schemas/InterfaceName'
          - description: ' Information about the name of the interface of the server
              for which the assessment was run. '
          title: interfaceName
        ipAddress:
          allOf:
          - $ref: '#/components/schemas/IPAddress'
          - description: ' Information about the IP address of the server for which
              the assessment was run. '
          title: ipAddress
        macAddress:
          allOf:
          - $ref: '#/components/schemas/MacAddress'
          - description: ' Information about the MAC address of the server for which
              the assessment was run. '
          title: macAddress
        netMask:
          allOf:
          - $ref: '#/components/schemas/NetMask'
          - description: ' Information about the subnet mask of the server for which
              the assessment was run. '
          title: netMask
      required:
      - interfaceName
      - ipAddress
      - macAddress
      - netMask
      title: NetworkInfo
      type: object
    NetworkInfoList:
      items:
        $ref: '#/components/schemas/NetworkInfo'
      type: array
    TargetDatabaseEngines:
      items:
        $ref: '#/components/schemas/TargetDatabaseEngine'
      maxItems: 1
      minItems: 1
      type: array
    NoPreferenceTargetDestinations:
      items:
        $ref: '#/components/schemas/NoPreferenceTargetDestination'
      maxItems: 1
      minItems: 1
      type: array
    NoPreferenceTargetDestination:
      enum:
      - None specified
      - AWS Elastic BeanStalk
      - AWS Fargate
      - Amazon Elastic Cloud Compute (EC2)
      - Amazon Elastic Container Service (ECS)
      - Amazon Elastic Kubernetes Service (EKS)
      title: NoPreferenceTargetDestination
      type: string
    OSVersion:
      maxLength: 64
      minLength: 1
      pattern: .*\S.*
      type: string
    OSInfo:
      description: ' Information about the operating system. '
      properties:
        type:
          allOf:
          - $ref: '#/components/schemas/OSType'
          - description: ' Information about the type of operating system. '
          title: type
        version:
          allOf:
          - $ref: '#/components/schemas/OSVersion'
          - description: ' Information about the version of operating system. '
          title: version
      title: OSInfo
      type: object
    OutputFormat:
      enum:
      - Excel
      - Json
      title: OutputFormat
      type: string
    PipelineType:
      enum:
      - AZURE_DEVOPS
      title: PipelineType
      type: string
    PipelineInfo:
      description: Detailed information of the pipeline.
      properties:
        pipelineConfigurationTimeStamp:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The time when the pipeline info was configured.
          title: pipelineConfigurationTimeStamp
        pipelineType:
          allOf:
          - $ref: '#/components/schemas/PipelineType'
          - description: The type of pipeline.
          title: pipelineType
      title: PipelineInfo
      type: object
    ProjectName:
      maxLength: 128
      minLength: 1
      pattern: .*\S.*
      type: string
    PutPortfolioPreferencesRequest:
      example:
        prioritizeBusinessGoals:
          businessGoals:
            modernizeInfrastructureWithCloudNativeTechnologies: ""
            reduceOperationalOverheadWithManagedServices: ""
            licenseCostReduction: ""
            speedOfMigration: ""
        applicationMode: ""
        applicationPreferences:
          managementPreference:
            noPreference:
              targetDestination: ""
            awsManagedResources:
              targetDestination: ""
            selfManageResources:
              targetDestination: ""
        databasePreferences:
          databaseManagementPreference: ""
          databaseMigrationPreference:
            homogeneous:
              targetDatabaseEngine: ""
            noPreference:
              targetDatabaseEngine: ""
            heterogeneous:
              targetDatabaseEngine: ""
      properties:
        applicationMode:
          allOf:
          - $ref: '#/components/schemas/ApplicationMode'
          - description: The classification for application component types.
        applicationPreferences:
          $ref: '#/components/schemas/GetPortfolioPreferencesResponse_applicationPreferences'
        databasePreferences:
          $ref: '#/components/schemas/GetPortfolioPreferencesResponse_databasePreferences'
        prioritizeBusinessGoals:
          $ref: '#/components/schemas/PutPortfolioPreferencesRequest_prioritizeBusinessGoals'
      title: PutPortfolioPreferencesRequest
      type: object
    RecommendationReportTimeStamp:
      format: date-time
      type: string
    S3Keys:
      items:
        $ref: '#/components/schemas/String'
      type: array
    RecommendationReportStatus:
      enum:
      - FAILED
      - IN_PROGRESS
      - SUCCESS
      title: RecommendationReportStatus
      type: string
    RecommendationReportStatusMessage:
      maxLength: 512
      minLength: 0
      pattern: .*\S.*
      type: string
    TransformationTool:
      description: ' Information of the transformation tool that can be used to migrate
        and modernize the application. '
      properties:
        description:
          allOf:
          - $ref: '#/components/schemas/TranformationToolDescription'
          - description: ' Description of the tool. '
          title: description
        name:
          allOf:
          - $ref: '#/components/schemas/TransformationToolName'
          - description: ' Name of the tool. '
          title: name
        tranformationToolInstallationLink:
          allOf:
          - $ref: '#/components/schemas/TranformationToolInstallationLink'
          - description: ' URL for installing the tool. '
          title: tranformationToolInstallationLink
      title: TransformationTool
      type: object
    Result:
      description: The error in server analysis.
      properties:
        analysisStatus:
          $ref: '#/components/schemas/Result_analysisStatus'
        analysisType:
          allOf:
          - $ref: '#/components/schemas/AnalysisType'
          - description: The error in server analysis.
          title: analysisType
        antipatternReportResultList:
          allOf:
          - $ref: '#/components/schemas/AntipatternReportResultList'
          - description: The error in server analysis.
          title: antipatternReportResultList
        statusMessage:
          allOf:
          - $ref: '#/components/schemas/StatusMessage'
          - description: The error in server analysis.
          title: statusMessage
      title: Result
      type: object
    RunTimeAssessmentStatus:
      enum:
      - dataCollectionTaskToBeScheduled
      - dataCollectionTaskScheduled
      - dataCollectionTaskStarted
      - dataCollectionTaskStopped
      - dataCollectionTaskSuccess
      - dataCollectionTaskFailed
      - dataCollectionTaskPartialSuccess
      title: RunTimeAssessmentStatus
      type: string
    S3Bucket:
      maxLength: 63
      minLength: 0
      pattern: "[0-9a-z]+[0-9a-z\\.\\-]*[0-9a-z]+"
      type: string
    S3Key:
      maxLength: 1024
      minLength: 0
      pattern: .*\S.*
      type: string
    SecretsManagerKey:
      format: password
      maxLength: 512
      minLength: 1
      pattern: .*
      type: string
    SelfManageTargetDestinations:
      items:
        $ref: '#/components/schemas/SelfManageTargetDestination'
      maxItems: 1
      minItems: 1
      type: array
    SelfManageTargetDestination:
      enum:
      - None specified
      - Amazon Elastic Cloud Compute (EC2)
      - Amazon Elastic Container Service (ECS)
      - Amazon Elastic Kubernetes Service (EKS)
      title: SelfManageTargetDestination
      type: string
    ServerError:
      description: The error in server analysis.
      properties:
        serverErrorCategory:
          allOf:
          - $ref: '#/components/schemas/ServerErrorCategory'
          - description: The error category of server analysis.
          title: serverErrorCategory
      title: ServerError
      type: object
    SystemInfo:
      description: ' Information about the server that hosts application components. '
      properties:
        cpuArchitecture:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: ' CPU architecture type for the server. '
          title: cpuArchitecture
        fileSystemType:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: ' File system type for the server. '
          title: fileSystemType
        networkInfoList:
          allOf:
          - $ref: '#/components/schemas/NetworkInfoList'
          - description: ' Networking information related to a server. '
          title: networkInfoList
        osInfo:
          $ref: '#/components/schemas/SystemInfo_osInfo'
      title: SystemInfo
      type: object
    ServerErrorCategory:
      enum:
      - CONNECTIVITY_ERROR
      - CREDENTIAL_ERROR
      - PERMISSION_ERROR
      - ARCHITECTURE_ERROR
      - OTHER_ERROR
      title: ServerErrorCategory
      type: string
    ServerOsType:
      enum:
      - WindowsServer
      - AmazonLinux
      - EndOfSupportWindowsServer
      - Redhat
      - Other
      title: ServerOsType
      type: string
    ServerStrategy:
      description: ' Contains information about a strategy recommendation for a server. '
      properties:
        isPreferred:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          - description: ' Set to true if the recommendation is set as preferred. '
          title: isPreferred
        numberOfApplicationComponents:
          allOf:
          - $ref: '#/components/schemas/Integer'
          - description: ' The number of application components with this strategy
              recommendation running on the server. '
          title: numberOfApplicationComponents
        recommendation:
          $ref: '#/components/schemas/ServerStrategy_recommendation'
        status:
          allOf:
          - $ref: '#/components/schemas/StrategyRecommendation'
          - description: ' The recommendation status of the strategy for the server. '
          title: status
      title: ServerStrategy
      type: object
    SourceVersion:
      maxLength: 40
      minLength: 1
      pattern: .*\S.*
      type: string
    VersionControl:
      enum:
      - GITHUB
      - GITHUB_ENTERPRISE
      - AZURE_DEVOPS_GIT
      title: VersionControl
      type: string
    SourceCodeList:
      items:
        $ref: '#/components/schemas/SourceCode'
      type: array
    SourceCodeRepository:
      description: ' Object containing source code information that is linked to an
        application component. '
      properties:
        branch:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: ' The branch of the source code. '
          title: branch
        projectName:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The name of the project.
          title: projectName
        repository:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: ' The repository name for the source code. '
          title: repository
        versionControlType:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: ' The type of repository to use for the source code. '
          title: versionControlType
      title: SourceCodeRepository
      type: object
    StartAssessmentRequestS3bucketForAnalysisDataString:
      maxLength: 63
      minLength: 0
      pattern: "[0-9a-z]+[0-9a-z\\.\\-]*[0-9a-z]+"
      type: string
    StartAssessmentRequestS3bucketForReportDataString:
      maxLength: 63
      minLength: 0
      pattern: "[0-9a-z]+[0-9a-z\\.\\-]*[0-9a-z]+"
      type: string
    StartAssessmentRequest:
      example:
        assessmentTargets: ""
        s3bucketForReportData: ""
        s3bucketForAnalysisData: ""
      properties:
        assessmentTargets:
          allOf:
          - $ref: '#/components/schemas/AssessmentTargets'
          - description: List of criteria for assessment.
        s3bucketForAnalysisData:
          allOf:
          - $ref: '#/components/schemas/StartAssessmentRequestS3bucketForAnalysisDataString'
          - description: ' The S3 bucket used by the collectors to send analysis data
              to the service. The bucket name must begin with <code>migrationhub-strategy-</code>. '
        s3bucketForReportData:
          allOf:
          - $ref: '#/components/schemas/StartAssessmentRequestS3bucketForReportDataString'
          - description: ' The S3 bucket where all the reports generated by the service
              are stored. The bucket name must begin with <code>migrationhub-strategy-</code>. '
      title: StartAssessmentRequest
      type: object
    StartImportFileTaskRequestNameString:
      maxLength: 50
      minLength: 1
      pattern: "[a-zA-Z0-9_-]+"
      type: string
    StartImportFileTaskRequestS3bucketForReportDataString:
      maxLength: 63
      minLength: 0
      pattern: "[0-9a-z]+[0-9a-z\\.\\-]*[0-9a-z]+"
      type: string
    StartImportFileTaskRequest:
      example:
        s3bucketForReportData: ""
        s3key: ""
        S3Bucket: ""
        groupId: ""
        name: ""
        dataSourceType: ""
      properties:
        S3Bucket:
          allOf:
          - $ref: '#/components/schemas/importS3Bucket'
          - description: ' The S3 bucket where the import file is located. The bucket
              name is required to begin with <code>migrationhub-strategy-</code>.'
        dataSourceType:
          allOf:
          - $ref: '#/components/schemas/DataSourceType'
          - description: "Specifies the source that the servers are coming from. By\
              \ default, Strategy Recommendations assumes that the servers specified\
              \ in the import file are available in AWS Application Discovery Service. "
        groupId:
          allOf:
          - $ref: '#/components/schemas/GroupIds'
          - description: 'Groups the resources in the import file together with a
              unique name. This ID can be as filter in <code>ListApplicationComponents</code>
              and <code>ListServers</code>. '
        name:
          allOf:
          - $ref: '#/components/schemas/StartImportFileTaskRequestNameString'
          - description: ' A descriptive name for the request. '
        s3bucketForReportData:
          allOf:
          - $ref: '#/components/schemas/StartImportFileTaskRequestS3bucketForReportDataString'
          - description: ' The S3 bucket where Strategy Recommendations uploads import
              results. The bucket name is required to begin with migrationhub-strategy-. '
        s3key:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: ' The Amazon S3 key name of the import file. '
      required:
      - S3Bucket
      - name
      - s3key
      title: StartImportFileTaskRequest
      type: object
    StartRecommendationReportGenerationRequest:
      example:
        groupIdFilter: ""
        outputFormat: ""
      properties:
        groupIdFilter:
          allOf:
          - $ref: '#/components/schemas/GroupIds'
          - description: ' Groups the resources in the recommendation report with
              a unique name. '
        outputFormat:
          allOf:
          - $ref: '#/components/schemas/OutputFormat'
          - description: ' The output format for the recommendation report file. The
              default format is Microsoft Excel. '
      title: StartRecommendationReportGenerationRequest
      type: object
    StopAssessmentRequest:
      example:
        assessmentId: ""
      properties:
        assessmentId:
          allOf:
          - $ref: '#/components/schemas/AsyncTaskId'
          - description: ' The <code>assessmentId</code> returned by <a>StartAssessment</a>. '
      required:
      - assessmentId
      title: StopAssessmentRequest
      type: object
    StrategyOption:
      description: ' Information about all the available strategy options for migrating
        and modernizing an application component. '
      properties:
        isPreferred:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          - description: ' Indicates if a specific strategy is preferred for the application
              component. '
          title: isPreferred
        strategy:
          allOf:
          - $ref: '#/components/schemas/Strategy'
          - description: " Type of transformation. For example, Rehost, Replatform,\
              \ and so on. "
          title: strategy
        targetDestination:
          allOf:
          - $ref: '#/components/schemas/TargetDestination'
          - description: " Destination information about where the application component\
              \ can migrate to. For example, <code>EC2</code>, <code>ECS</code>, and\
              \ so on. "
          title: targetDestination
        toolName:
          allOf:
          - $ref: '#/components/schemas/TransformationToolName'
          - description: ' The name of the tool that can be used to transform an application
              component using this strategy. '
          title: toolName
      title: StrategyOption
      type: object
    TargetDatabaseEngine:
      enum:
      - None specified
      - Amazon Aurora
      - AWS PostgreSQL
      - MySQL
      - Microsoft SQL Server
      - Oracle Database
      - MariaDB
      - SAP
      - Db2 LUW
      - MongoDB
      title: TargetDatabaseEngine
      type: string
    TranformationToolDescription:
      maxLength: 1024
      minLength: 1
      pattern: .*\S.*
      type: string
    TranformationToolInstallationLink:
      maxLength: 1024
      minLength: 1
      pattern: .*\S.*
      type: string
    UpdateApplicationComponentConfigRequest:
      example:
        secretsManagerKey: ""
        appType: ""
        applicationComponentId: ""
        configureOnly: ""
        sourceCodeList: ""
        strategyOption:
          targetDestination: ""
          isPreferred: ""
          strategy: ""
          toolName: ""
        inclusionStatus: ""
      properties:
        appType:
          allOf:
          - $ref: '#/components/schemas/AppType'
          - description: The type of known component.
        applicationComponentId:
          allOf:
          - $ref: '#/components/schemas/ApplicationComponentId'
          - description: ' The ID of the application component. The ID is unique within
              an AWS account. '
        configureOnly:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          - description: "Update the configuration request of an application component.\
              \ If it is set to true, the source code and/or database credentials\
              \ are updated. If it is set to false, the source code and/or database\
              \ credentials are updated and an analysis is initiated."
        inclusionStatus:
          allOf:
          - $ref: '#/components/schemas/InclusionStatus'
          - description: ' Indicates whether the application component has been included
              for server recommendation or not. '
        secretsManagerKey:
          allOf:
          - $ref: '#/components/schemas/SecretsManagerKey'
          - description: ' Database credentials. '
        sourceCodeList:
          allOf:
          - $ref: '#/components/schemas/SourceCodeList'
          - description: ' The list of source code configurations to update for the
              application component. '
        strategyOption:
          $ref: '#/components/schemas/UpdateApplicationComponentConfigRequest_strategyOption'
      required:
      - applicationComponentId
      title: UpdateApplicationComponentConfigRequest
      type: object
    UpdateServerConfigRequest:
      example:
        serverId: ""
        strategyOption:
          targetDestination: ""
          isPreferred: ""
          strategy: ""
          toolName: ""
      properties:
        serverId:
          allOf:
          - $ref: '#/components/schemas/ServerId'
          - description: ' The ID of the server. '
        strategyOption:
          $ref: '#/components/schemas/UpdateServerConfigRequest_strategyOption'
      required:
      - serverId
      title: UpdateServerConfigRequest
      type: object
    VcenterBasedRemoteInfo:
      description: Details about the server in vCenter.
      properties:
        osType:
          allOf:
          - $ref: '#/components/schemas/OSType'
          - description: The type of the operating system.
          title: osType
        vcenterConfigurationTimeStamp:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The time when the remote server based on vCenter was last
              configured.
          title: vcenterConfigurationTimeStamp
      title: VcenterBasedRemoteInfo
      type: object
    VersionControlType:
      enum:
      - GITHUB
      - GITHUB_ENTERPRISE
      - AZURE_DEVOPS_GIT
      title: VersionControlType
      type: string
    VersionControlInfo:
      description: Details about the version control configuration.
      properties:
        versionControlConfigurationTimeStamp:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The time when the version control system was last configured.
          title: versionControlConfigurationTimeStamp
        versionControlType:
          allOf:
          - $ref: '#/components/schemas/VersionControlType'
          - description: The type of version control.
          title: versionControlType
      title: VersionControlInfo
      type: object
    ListApplicationComponents_request:
      properties:
        applicationComponentCriteria:
          description: ' Criteria for filtering the list of application components. '
          enum:
          - NOT_DEFINED
          - APP_NAME
          - SERVER_ID
          - APP_TYPE
          - STRATEGY
          - DESTINATION
          - ANALYSIS_STATUS
          - ERROR_CATEGORY
          title: applicationComponentCriteria
          type: string
        filterValue:
          description: " Specify the value based on the application component criteria\
            \ type. For example, if <code>applicationComponentCriteria</code> is set\
            \ to <code>SERVER_ID</code> and <code>filterValue</code> is set to <code>server1</code>,\
            \ then <a>ListApplicationComponents</a> returns all the application components\
            \ running on server1. "
          maxLength: 256
          minLength: 0
          pattern: .*\S.*
          title: filterValue
          type: string
        groupIdFilter:
          description: ' The group ID specified in to filter on. '
          items:
            $ref: '#/components/schemas/Group'
          title: groupIdFilter
          type: array
        maxResults:
          description: ' The maximum number of items to include in the response. The
            maximum value is 100. '
          title: maxResults
          type: integer
        nextToken:
          description: " The token from a previous call that you use to retrieve the\
            \ next set of results. For example, if a previous call to this action\
            \ returned 100 items, but you set <code>maxResults</code> to 10. You'll\
            \ receive a set of 10 results along with a token. You then use the returned\
            \ token to retrieve the next set of 10. "
          maxLength: 2048
          minLength: 0
          pattern: .*\S.*
          title: nextToken
          type: string
        sort:
          description: ' Specifies whether to sort by ascending (<code>ASC</code>)
            or descending (<code>DESC</code>) order. '
          enum:
          - ASC
          - DESC
          title: sort
          type: string
      title: ListApplicationComponents_request
      type: object
    ListServers_request:
      properties:
        filterValue:
          description: " Specifies the filter value, which is based on the type of\
            \ server criteria. For example, if <code>serverCriteria</code> is <code>OS_NAME</code>,\
            \ and the <code>filterValue</code> is equal to <code>WindowsServer</code>,\
            \ then <code>ListServers</code> returns all of the servers matching the\
            \ OS name <code>WindowsServer</code>. "
          maxLength: 1024
          minLength: 0
          pattern: .*\S.*
          title: filterValue
          type: string
        groupIdFilter:
          description: ' Specifies the group ID to filter on. '
          items:
            $ref: '#/components/schemas/Group'
          title: groupIdFilter
          type: array
        maxResults:
          description: ' The maximum number of items to include in the response. The
            maximum value is 100. '
          title: maxResults
          type: integer
        nextToken:
          description: " The token from a previous call that you use to retrieve the\
            \ next set of results. For example, if a previous call to this action\
            \ returned 100 items, but you set <code>maxResults</code> to 10. You'll\
            \ receive a set of 10 results along with a token. You then use the returned\
            \ token to retrieve the next set of 10. "
          maxLength: 2048
          minLength: 0
          pattern: .*\S.*
          title: nextToken
          type: string
        serverCriteria:
          description: ' Criteria for filtering servers. '
          enum:
          - NOT_DEFINED
          - OS_NAME
          - STRATEGY
          - DESTINATION
          - SERVER_ID
          - ANALYSIS_STATUS
          - ERROR_CATEGORY
          title: serverCriteria
          type: string
        sort:
          description: ' Specifies whether to sort by ascending (<code>ASC</code>)
            or descending (<code>DESC</code>) order. '
          enum:
          - ASC
          - DESC
          title: sort
          type: string
      title: ListServers_request
      type: object
    PutPortfolioPreferences_request_applicationPreferences_managementPreference:
      allOf:
      - $ref: '#/components/schemas/ManagementPreference'
      - description: ' Application preferences that you specify to prefer managed
          environment. '
      example:
        noPreference:
          targetDestination: ""
        awsManagedResources:
          targetDestination: ""
        selfManageResources:
          targetDestination: ""
      title: PutPortfolioPreferences_request_applicationPreferences_managementPreference
    PutPortfolioPreferences_request_applicationPreferences:
      description: ' Application preferences that you specify. '
      properties:
        managementPreference:
          $ref: '#/components/schemas/PutPortfolioPreferences_request_applicationPreferences_managementPreference'
      title: PutPortfolioPreferences_request_applicationPreferences
      type: object
    PutPortfolioPreferences_request_databasePreferences_databaseMigrationPreference:
      allOf:
      - $ref: '#/components/schemas/DatabaseMigrationPreference'
      - description: ' Specifies your preferred migration path. '
      example:
        homogeneous:
          targetDatabaseEngine: ""
        noPreference:
          targetDatabaseEngine: ""
        heterogeneous:
          targetDatabaseEngine: ""
      title: PutPortfolioPreferences_request_databasePreferences_databaseMigrationPreference
    PutPortfolioPreferences_request_databasePreferences:
      description: ' Preferences on managing your databases on AWS. '
      properties:
        databaseManagementPreference:
          allOf:
          - $ref: '#/components/schemas/DatabaseManagementPreference'
          - description: ' Specifies whether you''re interested in self-managed databases
              or databases managed by AWS. '
          title: databaseManagementPreference
        databaseMigrationPreference:
          $ref: '#/components/schemas/PutPortfolioPreferences_request_databasePreferences_databaseMigrationPreference'
      title: PutPortfolioPreferences_request_databasePreferences
      type: object
    PutPortfolioPreferences_request_prioritizeBusinessGoals_businessGoals:
      allOf:
      - $ref: '#/components/schemas/BusinessGoals'
      - description: ' Rank of business goals based on priority. '
      example:
        modernizeInfrastructureWithCloudNativeTechnologies: ""
        reduceOperationalOverheadWithManagedServices: ""
        licenseCostReduction: ""
        speedOfMigration: ""
      title: PutPortfolioPreferences_request_prioritizeBusinessGoals_businessGoals
    PutPortfolioPreferences_request_prioritizeBusinessGoals:
      description: ' Rank of business goals based on priority. '
      properties:
        businessGoals:
          $ref: '#/components/schemas/PutPortfolioPreferences_request_prioritizeBusinessGoals_businessGoals'
      title: PutPortfolioPreferences_request_prioritizeBusinessGoals
      type: object
    PutPortfolioPreferences_request:
      properties:
        applicationMode:
          description: The classification for application component types.
          enum:
          - ALL
          - KNOWN
          - UNKNOWN
          title: applicationMode
          type: string
        applicationPreferences:
          $ref: '#/components/schemas/PutPortfolioPreferences_request_applicationPreferences'
        databasePreferences:
          $ref: '#/components/schemas/PutPortfolioPreferences_request_databasePreferences'
        prioritizeBusinessGoals:
          $ref: '#/components/schemas/PutPortfolioPreferences_request_prioritizeBusinessGoals'
      title: PutPortfolioPreferences_request
      type: object
    StartAssessment_request:
      properties:
        assessmentTargets:
          description: List of criteria for assessment.
          items:
            $ref: '#/components/schemas/AssessmentTarget'
          maxItems: 10
          minItems: 0
          title: assessmentTargets
          type: array
        s3bucketForAnalysisData:
          description: ' The S3 bucket used by the collectors to send analysis data
            to the service. The bucket name must begin with <code>migrationhub-strategy-</code>. '
          maxLength: 63
          minLength: 0
          pattern: "[0-9a-z]+[0-9a-z\\.\\-]*[0-9a-z]+"
          title: s3bucketForAnalysisData
          type: string
        s3bucketForReportData:
          description: ' The S3 bucket where all the reports generated by the service
            are stored. The bucket name must begin with <code>migrationhub-strategy-</code>. '
          maxLength: 63
          minLength: 0
          pattern: "[0-9a-z]+[0-9a-z\\.\\-]*[0-9a-z]+"
          title: s3bucketForReportData
          type: string
      title: StartAssessment_request
      type: object
    StartImportFileTask_request:
      properties:
        S3Bucket:
          description: ' The S3 bucket where the import file is located. The bucket
            name is required to begin with <code>migrationhub-strategy-</code>.'
          maxLength: 63
          minLength: 0
          pattern: "[0-9a-z]+[0-9a-z\\.\\-]*[0-9a-z]+"
          title: S3Bucket
          type: string
        dataSourceType:
          description: "Specifies the source that the servers are coming from. By\
            \ default, Strategy Recommendations assumes that the servers specified\
            \ in the import file are available in AWS Application Discovery Service. "
          enum:
          - ApplicationDiscoveryService
          - MPA
          - Import
          title: dataSourceType
          type: string
        groupId:
          description: 'Groups the resources in the import file together with a unique
            name. This ID can be as filter in <code>ListApplicationComponents</code>
            and <code>ListServers</code>. '
          items:
            $ref: '#/components/schemas/Group'
          title: groupId
          type: array
        name:
          description: ' A descriptive name for the request. '
          maxLength: 50
          minLength: 1
          pattern: "[a-zA-Z0-9_-]+"
          title: name
          type: string
        s3bucketForReportData:
          description: ' The S3 bucket where Strategy Recommendations uploads import
            results. The bucket name is required to begin with migrationhub-strategy-. '
          maxLength: 63
          minLength: 0
          pattern: "[0-9a-z]+[0-9a-z\\.\\-]*[0-9a-z]+"
          title: s3bucketForReportData
          type: string
        s3key:
          description: ' The Amazon S3 key name of the import file. '
          maxLength: 1024
          minLength: 0
          pattern: .*\S.*
          title: s3key
          type: string
      required:
      - S3Bucket
      - name
      - s3key
      title: StartImportFileTask_request
      type: object
    StartRecommendationReportGeneration_request:
      properties:
        groupIdFilter:
          description: ' Groups the resources in the recommendation report with a
            unique name. '
          items:
            $ref: '#/components/schemas/Group'
          title: groupIdFilter
          type: array
        outputFormat:
          description: ' The output format for the recommendation report file. The
            default format is Microsoft Excel. '
          enum:
          - Excel
          - Json
          title: outputFormat
          type: string
      title: StartRecommendationReportGeneration_request
      type: object
    StopAssessment_request:
      properties:
        assessmentId:
          description: ' The <code>assessmentId</code> returned by <a>StartAssessment</a>. '
          maxLength: 52
          minLength: 0
          pattern: "[0-9a-z-:]+"
          title: assessmentId
          type: string
      required:
      - assessmentId
      title: StopAssessment_request
      type: object
    UpdateApplicationComponentConfig_request_strategyOption:
      description: ' Information about all the available strategy options for migrating
        and modernizing an application component. '
      properties:
        isPreferred:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          - description: ' Indicates if a specific strategy is preferred for the application
              component. '
          title: isPreferred
        strategy:
          allOf:
          - $ref: '#/components/schemas/Strategy'
          - description: " Type of transformation. For example, Rehost, Replatform,\
              \ and so on. "
          title: strategy
        targetDestination:
          allOf:
          - $ref: '#/components/schemas/TargetDestination'
          - description: " Destination information about where the application component\
              \ can migrate to. For example, <code>EC2</code>, <code>ECS</code>, and\
              \ so on. "
          title: targetDestination
        toolName:
          allOf:
          - $ref: '#/components/schemas/TransformationToolName'
          - description: ' The name of the tool that can be used to transform an application
              component using this strategy. '
          title: toolName
      title: UpdateApplicationComponentConfig_request_strategyOption
      type: object
    UpdateApplicationComponentConfig_request:
      properties:
        appType:
          description: The type of known component.
          enum:
          - DotNetFramework
          - Java
          - SQLServer
          - IIS
          - Oracle
          - Other
          - Tomcat
          - JBoss
          - Spring
          - Mongo DB
          - DB2
          - Maria DB
          - MySQL
          - Sybase
          - PostgreSQLServer
          - Cassandra
          - IBM WebSphere
          - Oracle WebLogic
          - Visual Basic
          - Unknown
          - DotnetCore
          - Dotnet
          title: appType
          type: string
        applicationComponentId:
          description: ' The ID of the application component. The ID is unique within
            an AWS account. '
          maxLength: 44
          minLength: 0
          pattern: "[0-9a-zA-Z-]+"
          title: applicationComponentId
          type: string
        configureOnly:
          description: "Update the configuration request of an application component.\
            \ If it is set to true, the source code and/or database credentials are\
            \ updated. If it is set to false, the source code and/or database credentials\
            \ are updated and an analysis is initiated."
          title: configureOnly
          type: boolean
        inclusionStatus:
          description: ' Indicates whether the application component has been included
            for server recommendation or not. '
          enum:
          - excludeFromAssessment
          - includeInAssessment
          title: inclusionStatus
          type: string
        secretsManagerKey:
          description: ' Database credentials. '
          format: password
          maxLength: 512
          minLength: 1
          pattern: .*
          title: secretsManagerKey
          type: string
        sourceCodeList:
          description: ' The list of source code configurations to update for the
            application component. '
          items:
            $ref: '#/components/schemas/SourceCode'
          title: sourceCodeList
          type: array
        strategyOption:
          $ref: '#/components/schemas/UpdateApplicationComponentConfig_request_strategyOption'
      required:
      - applicationComponentId
      title: UpdateApplicationComponentConfig_request
      type: object
    UpdateServerConfig_request:
      properties:
        serverId:
          description: ' The ID of the server. '
          maxLength: 27
          minLength: 1
          pattern: .*\S.*
          title: serverId
          type: string
        strategyOption:
          $ref: '#/components/schemas/UpdateApplicationComponentConfig_request_strategyOption'
      required:
      - serverId
      title: UpdateServerConfig_request
      type: object
    GetApplicationComponentDetailsResponse_applicationComponentDetail:
      allOf:
      - $ref: '#/components/schemas/ApplicationComponentDetail'
      - description: ' Detailed information about an application component. '
      example:
        antipatternReportStatusMessage: ""
        recommendationSet:
          targetDestination: ""
          transformationTool:
            name: ""
            description: ""
            tranformationToolInstallationLink: ""
          strategy: ""
        antipatternReportStatus: ""
        runtimeStatus: ""
        moreServerAssociationExists: ""
        sourceCodeRepositories: ""
        inclusionStatus: ""
        runtimeStatusMessage: ""
        statusMessage: ""
        associatedServerId: ""
        antipatternReportS3Object:
          s3key: ""
          s3Bucket: ""
        osVersion: ""
        resourceSubType: ""
        appType: ""
        lastAnalyzedTimestamp: ""
        appUnitError:
          appUnitErrorCategory: ""
        listAntipatternSeveritySummary: ""
        name: ""
        id: ""
        databaseConfigDetail:
          secretName: ""
        osDriver: ""
        resultList: ""
        analysisStatus: ""
      title: GetApplicationComponentDetailsResponse_applicationComponentDetail
    GetAssessmentResponse_dataCollectionDetails:
      allOf:
      - $ref: '#/components/schemas/DataCollectionDetails'
      - description: ' Detailed information about the assessment. '
      example:
        completionTime: ""
        servers: ""
        inProgress: ""
        success: ""
        startTime: ""
        failed: ""
        statusMessage: ""
        status: ""
      title: GetAssessmentResponse_dataCollectionDetails
    GetPortfolioPreferencesResponse_applicationPreferences:
      allOf:
      - $ref: '#/components/schemas/ApplicationPreferences'
      - description: ' The transformation preferences for non-database applications. '
      example:
        managementPreference:
          noPreference:
            targetDestination: ""
          awsManagedResources:
            targetDestination: ""
          selfManageResources:
            targetDestination: ""
      title: GetPortfolioPreferencesResponse_applicationPreferences
    GetPortfolioPreferencesResponse_databasePreferences:
      allOf:
      - $ref: '#/components/schemas/DatabasePreferences'
      - description: ' The transformation preferences for database applications. '
      example:
        databaseManagementPreference: ""
        databaseMigrationPreference:
          homogeneous:
            targetDatabaseEngine: ""
          noPreference:
            targetDatabaseEngine: ""
          heterogeneous:
            targetDatabaseEngine: ""
      title: GetPortfolioPreferencesResponse_databasePreferences
    GetPortfolioPreferencesResponse_prioritizeBusinessGoals:
      allOf:
      - $ref: '#/components/schemas/PrioritizeBusinessGoals'
      - description: ' The rank of business goals based on priority. '
      example:
        businessGoals:
          modernizeInfrastructureWithCloudNativeTechnologies: ""
          reduceOperationalOverheadWithManagedServices: ""
          licenseCostReduction: ""
          speedOfMigration: ""
      title: GetPortfolioPreferencesResponse_prioritizeBusinessGoals
    GetPortfolioSummaryResponse_assessmentSummary:
      allOf:
      - $ref: '#/components/schemas/AssessmentSummary'
      - description: ' An assessment summary for the portfolio including the number
          of servers to rehost and the overall number of anti-patterns. '
      example:
        antipatternReportStatusMessage: ""
        listServerSummary: ""
        antipatternReportS3Object:
          s3key: ""
          s3Bucket: ""
        antipatternReportStatus: ""
        lastAnalyzedTimestamp: ""
        listAntipatternSeveritySummary: ""
        listApplicationComponentStrategySummary: ""
        listServerStatusSummary: ""
        listServerStrategySummary: ""
        listApplicationComponentSummary: ""
        listApplicationComponentStatusSummary: ""
      title: GetPortfolioSummaryResponse_assessmentSummary
    GetRecommendationReportDetailsResponse_recommendationReportDetails:
      allOf:
      - $ref: '#/components/schemas/RecommendationReportDetails'
      - description: ' Detailed information about the recommendation report. '
      example:
        completionTime: ""
        startTime: ""
        s3Keys: ""
        s3Bucket: ""
        statusMessage: ""
        status: ""
      title: GetRecommendationReportDetailsResponse_recommendationReportDetails
    GetServerDetailsResponse_serverDetail:
      allOf:
      - $ref: '#/components/schemas/ServerDetail'
      - description: ' Detailed information about the server. '
      example:
        antipatternReportStatusMessage: ""
        recommendationSet:
          targetDestination: ""
          transformationTool:
            name: ""
            description: ""
            tranformationToolInstallationLink: ""
          strategy: ""
        applicationComponentStrategySummary: ""
        antipatternReportStatus: ""
        statusMessage: ""
        systemInfo:
          osInfo:
            type: ""
            version: ""
          cpuArchitecture: ""
          fileSystemType: ""
          networkInfoList: ""
        antipatternReportS3Object:
          s3key: ""
          s3Bucket: ""
        dataCollectionStatus: ""
        lastAnalyzedTimestamp: ""
        serverType: ""
        listAntipatternSeveritySummary: ""
        name: ""
        id: ""
        serverError:
          serverErrorCategory: ""
      title: GetServerDetailsResponse_serverDetail
    ManagementPreference_awsManagedResources:
      allOf:
      - $ref: '#/components/schemas/AwsManagedResources'
      - description: ' Indicates interest in solutions that are managed by AWS. '
      example:
        targetDestination: ""
      title: ManagementPreference_awsManagedResources
    ManagementPreference_noPreference:
      allOf:
      - $ref: '#/components/schemas/NoManagementPreference'
      - description: ' No specific preference. '
      example:
        targetDestination: ""
      title: ManagementPreference_noPreference
    ManagementPreference_selfManageResources:
      allOf:
      - $ref: '#/components/schemas/SelfManageResources'
      - description: ' Indicates interest in managing your own resources on AWS. '
      example:
        targetDestination: ""
      title: ManagementPreference_selfManageResources
    DatabaseMigrationPreference_heterogeneous:
      allOf:
      - $ref: '#/components/schemas/Heterogeneous'
      - description: " Indicates whether you are interested in moving from one type\
          \ of database to another. For example, from SQL Server to Amazon Aurora\
          \ MySQL-Compatible Edition. "
      example:
        targetDatabaseEngine: ""
      title: DatabaseMigrationPreference_heterogeneous
    DatabaseMigrationPreference_homogeneous:
      allOf:
      - $ref: '#/components/schemas/Homogeneous'
      - description: " Indicates whether you are interested in moving to the same\
          \ type of database into AWS. For example, from SQL Server in your environment\
          \ to SQL Server on AWS. "
      example:
        targetDatabaseEngine: ""
      title: DatabaseMigrationPreference_homogeneous
    DatabaseMigrationPreference_noPreference:
      allOf:
      - $ref: '#/components/schemas/NoDatabaseMigrationPreference'
      - description: ' Indicated that you do not prefer heterogeneous or homogeneous. '
      example:
        targetDatabaseEngine: ""
      title: DatabaseMigrationPreference_noPreference
    AntipatternReportResult_analyzerName:
      allOf:
      - $ref: '#/components/schemas/AnalyzerNameUnion'
      - description: The analyzer name.
      title: AntipatternReportResult_analyzerName
    RecommendationSet_transformationTool:
      allOf:
      - $ref: '#/components/schemas/TransformationTool'
      - description: ' The target destination for the recommendation set. '
      example:
        name: ""
        description: ""
        tranformationToolInstallationLink: ""
      title: RecommendationSet_transformationTool
    ApplicationComponentDetail_antipatternReportS3Object:
      allOf:
      - $ref: '#/components/schemas/S3Object'
      - description: ' The S3 bucket name and the Amazon S3 key name for the anti-pattern
          report. '
      example:
        s3key: ""
        s3Bucket: ""
      title: ApplicationComponentDetail_antipatternReportS3Object
    ApplicationComponentDetail_appUnitError:
      allOf:
      - $ref: '#/components/schemas/AppUnitError'
      - description: The error in the analysis of the source code or database.
      example:
        appUnitErrorCategory: ""
      title: ApplicationComponentDetail_appUnitError
    ApplicationComponentDetail_databaseConfigDetail:
      allOf:
      - $ref: '#/components/schemas/DatabaseConfigDetail'
      - description: ' Configuration details for the database associated with the
          application component. '
      example:
        secretName: ""
      title: ApplicationComponentDetail_databaseConfigDetail
    ApplicationComponentDetail_recommendationSet:
      allOf:
      - $ref: '#/components/schemas/RecommendationSet'
      - description: ' The top recommendation set for the application component. '
      example:
        targetDestination: ""
        transformationTool:
          name: ""
          description: ""
          tranformationToolInstallationLink: ""
        strategy: ""
      title: ApplicationComponentDetail_recommendationSet
    ApplicationComponentStrategy_recommendation:
      allOf:
      - $ref: '#/components/schemas/RecommendationSet'
      - description: ' Strategy recommendation for the application component. '
      title: ApplicationComponentStrategy_recommendation
    AssessmentSummary_antipatternReportS3Object:
      allOf:
      - $ref: '#/components/schemas/S3Object'
      - description: ' The Amazon S3 object containing the anti-pattern report. '
      example:
        s3key: ""
        s3Bucket: ""
      title: AssessmentSummary_antipatternReportS3Object
    ConfigurationSummary_remoteSourceCodeAnalysisServerInfo:
      allOf:
      - $ref: '#/components/schemas/RemoteSourceCodeAnalysisServerInfo'
      - description: Info about the remote server source code configuration.
      title: ConfigurationSummary_remoteSourceCodeAnalysisServerInfo
    Collector_configurationSummary:
      allOf:
      - $ref: '#/components/schemas/ConfigurationSummary'
      - description: Summary of the collector configuration.
      title: Collector_configurationSummary
    ServerDetail_antipatternReportS3Object:
      allOf:
      - $ref: '#/components/schemas/S3Object'
      - description: ' The S3 bucket name and Amazon S3 key name for anti-pattern
          report. '
      example:
        s3key: ""
        s3Bucket: ""
      title: ServerDetail_antipatternReportS3Object
    ServerDetail_recommendationSet:
      allOf:
      - $ref: '#/components/schemas/RecommendationSet'
      - description: ' A set of recommendations. '
      example:
        targetDestination: ""
        transformationTool:
          name: ""
          description: ""
          tranformationToolInstallationLink: ""
        strategy: ""
      title: ServerDetail_recommendationSet
    ServerDetail_serverError:
      allOf:
      - $ref: '#/components/schemas/ServerError'
      - description: The error in server analysis.
      example:
        serverErrorCategory: ""
      title: ServerDetail_serverError
    ServerDetail_systemInfo:
      allOf:
      - $ref: '#/components/schemas/SystemInfo'
      - description: ' System information about the server. '
      example:
        osInfo:
          type: ""
          version: ""
        cpuArchitecture: ""
        fileSystemType: ""
        networkInfoList: ""
      title: ServerDetail_systemInfo
    PutPortfolioPreferencesRequest_prioritizeBusinessGoals:
      allOf:
      - $ref: '#/components/schemas/PrioritizeBusinessGoals'
      - description: ' The rank of the business goals based on priority. '
      example:
        businessGoals:
          modernizeInfrastructureWithCloudNativeTechnologies: ""
          reduceOperationalOverheadWithManagedServices: ""
          licenseCostReduction: ""
          speedOfMigration: ""
      title: PutPortfolioPreferencesRequest_prioritizeBusinessGoals
    Result_analysisStatus:
      allOf:
      - $ref: '#/components/schemas/AnalysisStatusUnion'
      - description: The error in server analysis.
      title: Result_analysisStatus
    SystemInfo_osInfo:
      allOf:
      - $ref: '#/components/schemas/OSInfo'
      - description: ' Operating system corresponding to a server. '
      example:
        type: ""
        version: ""
      title: SystemInfo_osInfo
    ServerStrategy_recommendation:
      allOf:
      - $ref: '#/components/schemas/RecommendationSet'
      - description: ' Strategy recommendation for the server. '
      title: ServerStrategy_recommendation
    UpdateApplicationComponentConfigRequest_strategyOption:
      allOf:
      - $ref: '#/components/schemas/StrategyOption'
      - description: ' The preferred strategy options for the application component.
          Use values from the <a>GetApplicationComponentStrategies</a> response. '
      example:
        targetDestination: ""
        isPreferred: ""
        strategy: ""
        toolName: ""
      title: UpdateApplicationComponentConfigRequest_strategyOption
    UpdateServerConfigRequest_strategyOption:
      allOf:
      - $ref: '#/components/schemas/StrategyOption'
      - description: ' The preferred strategy options for the application component.
          See the response from <a>GetServerStrategies</a>.'
      example:
        targetDestination: ""
        isPreferred: ""
        strategy: ""
        toolName: ""
      title: UpdateServerConfigRequest_strategyOption
  securitySchemes:
    hmac:
      description: Amazon Signature authorization v4
      in: header
      name: Authorization
      type: apiKey
      x-amazon-apigateway-authtype: awsSigv4
      x-apikeyInfoFunc: openapi_server.controllers.security_controller.info_from_hmac
