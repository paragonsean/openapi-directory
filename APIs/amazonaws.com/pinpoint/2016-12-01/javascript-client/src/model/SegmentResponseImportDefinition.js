/**
 * Amazon Pinpoint
 * Doc Engage API - Amazon Pinpoint API
 *
 * The version of the OpenAPI document: 2016-12-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import Format from './Format';
import SegmentImportResource from './SegmentImportResource';

/**
 * The SegmentResponseImportDefinition model module.
 * @module model/SegmentResponseImportDefinition
 * @version 2016-12-01
 */
class SegmentResponseImportDefinition {
    /**
     * Constructs a new <code>SegmentResponseImportDefinition</code>.
     * @alias module:model/SegmentResponseImportDefinition
     * @implements module:model/SegmentImportResource
     * @param externalId {String} 
     * @param format {module:model/Format} 
     * @param roleArn {String} 
     * @param s3Url {String} 
     * @param size {Number} 
     */
    constructor(externalId, format, roleArn, s3Url, size) { 
        SegmentImportResource.initialize(this, externalId, format, roleArn, s3Url, size);
        SegmentResponseImportDefinition.initialize(this, externalId, format, roleArn, s3Url, size);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, externalId, format, roleArn, s3Url, size) { 
        obj['ExternalId'] = externalId;
        obj['Format'] = format;
        obj['RoleArn'] = roleArn;
        obj['S3Url'] = s3Url;
        obj['Size'] = size;
    }

    /**
     * Constructs a <code>SegmentResponseImportDefinition</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/SegmentResponseImportDefinition} obj Optional instance to populate.
     * @return {module:model/SegmentResponseImportDefinition} The populated <code>SegmentResponseImportDefinition</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new SegmentResponseImportDefinition();
            SegmentImportResource.constructFromObject(data, obj);

            if (data.hasOwnProperty('ChannelCounts')) {
                obj['ChannelCounts'] = ApiClient.convertToType(data['ChannelCounts'], Object);
            }
            if (data.hasOwnProperty('ExternalId')) {
                obj['ExternalId'] = ApiClient.convertToType(data['ExternalId'], 'String');
            }
            if (data.hasOwnProperty('Format')) {
                obj['Format'] = ApiClient.convertToType(data['Format'], Format);
            }
            if (data.hasOwnProperty('RoleArn')) {
                obj['RoleArn'] = ApiClient.convertToType(data['RoleArn'], 'String');
            }
            if (data.hasOwnProperty('S3Url')) {
                obj['S3Url'] = ApiClient.convertToType(data['S3Url'], 'String');
            }
            if (data.hasOwnProperty('Size')) {
                obj['Size'] = ApiClient.convertToType(data['Size'], 'Number');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>SegmentResponseImportDefinition</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>SegmentResponseImportDefinition</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of SegmentResponseImportDefinition.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // validate the optional field `ChannelCounts`
        if (data['ChannelCounts']) { // data not null
          Object.validateJSON(data['ChannelCounts']);
        }
        // validate the optional field `ExternalId`
        if (data['ExternalId']) { // data not null
          String.validateJSON(data['ExternalId']);
        }
        // validate the optional field `Format`
        if (data['Format']) { // data not null
          Format.validateJSON(data['Format']);
        }
        // validate the optional field `RoleArn`
        if (data['RoleArn']) { // data not null
          String.validateJSON(data['RoleArn']);
        }
        // validate the optional field `S3Url`
        if (data['S3Url']) { // data not null
          String.validateJSON(data['S3Url']);
        }
        // validate the optional field `Size`
        if (data['Size']) { // data not null
          Number.validateJSON(data['Size']);
        }

        return true;
    }


}

SegmentResponseImportDefinition.RequiredProperties = ["ExternalId", "Format", "RoleArn", "S3Url", "Size"];

/**
 * @member {Object} ChannelCounts
 */
SegmentResponseImportDefinition.prototype['ChannelCounts'] = undefined;

/**
 * @member {String} ExternalId
 */
SegmentResponseImportDefinition.prototype['ExternalId'] = undefined;

/**
 * @member {module:model/Format} Format
 */
SegmentResponseImportDefinition.prototype['Format'] = undefined;

/**
 * @member {String} RoleArn
 */
SegmentResponseImportDefinition.prototype['RoleArn'] = undefined;

/**
 * @member {String} S3Url
 */
SegmentResponseImportDefinition.prototype['S3Url'] = undefined;

/**
 * @member {Number} Size
 */
SegmentResponseImportDefinition.prototype['Size'] = undefined;


// Implement SegmentImportResource interface:
/**
 * @member {Object} ChannelCounts
 */
SegmentImportResource.prototype['ChannelCounts'] = undefined;
/**
 * @member {String} ExternalId
 */
SegmentImportResource.prototype['ExternalId'] = undefined;
/**
 * @member {module:model/Format} Format
 */
SegmentImportResource.prototype['Format'] = undefined;
/**
 * @member {String} RoleArn
 */
SegmentImportResource.prototype['RoleArn'] = undefined;
/**
 * @member {String} S3Url
 */
SegmentImportResource.prototype['S3Url'] = undefined;
/**
 * @member {Number} Size
 */
SegmentImportResource.prototype['Size'] = undefined;




export default SegmentResponseImportDefinition;

