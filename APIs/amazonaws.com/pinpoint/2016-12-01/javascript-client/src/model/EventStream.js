/**
 * Amazon Pinpoint
 * Doc Engage API - Amazon Pinpoint API
 *
 * The version of the OpenAPI document: 2016-12-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The EventStream model module.
 * @module model/EventStream
 * @version 2016-12-01
 */
class EventStream {
    /**
     * Constructs a new <code>EventStream</code>.
     * Specifies settings for publishing event data to an Amazon Kinesis data stream or an Amazon Kinesis Data Firehose delivery stream.
     * @alias module:model/EventStream
     * @param applicationId {String} 
     * @param destinationStreamArn {String} 
     * @param roleArn {String} 
     */
    constructor(applicationId, destinationStreamArn, roleArn) { 
        
        EventStream.initialize(this, applicationId, destinationStreamArn, roleArn);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, applicationId, destinationStreamArn, roleArn) { 
        obj['ApplicationId'] = applicationId;
        obj['DestinationStreamArn'] = destinationStreamArn;
        obj['RoleArn'] = roleArn;
    }

    /**
     * Constructs a <code>EventStream</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/EventStream} obj Optional instance to populate.
     * @return {module:model/EventStream} The populated <code>EventStream</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new EventStream();

            if (data.hasOwnProperty('ApplicationId')) {
                obj['ApplicationId'] = ApiClient.convertToType(data['ApplicationId'], 'String');
            }
            if (data.hasOwnProperty('DestinationStreamArn')) {
                obj['DestinationStreamArn'] = ApiClient.convertToType(data['DestinationStreamArn'], 'String');
            }
            if (data.hasOwnProperty('ExternalId')) {
                obj['ExternalId'] = ApiClient.convertToType(data['ExternalId'], 'String');
            }
            if (data.hasOwnProperty('LastModifiedDate')) {
                obj['LastModifiedDate'] = ApiClient.convertToType(data['LastModifiedDate'], 'String');
            }
            if (data.hasOwnProperty('LastUpdatedBy')) {
                obj['LastUpdatedBy'] = ApiClient.convertToType(data['LastUpdatedBy'], 'String');
            }
            if (data.hasOwnProperty('RoleArn')) {
                obj['RoleArn'] = ApiClient.convertToType(data['RoleArn'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>EventStream</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>EventStream</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of EventStream.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // validate the optional field `ApplicationId`
        if (data['ApplicationId']) { // data not null
          String.validateJSON(data['ApplicationId']);
        }
        // validate the optional field `DestinationStreamArn`
        if (data['DestinationStreamArn']) { // data not null
          String.validateJSON(data['DestinationStreamArn']);
        }
        // validate the optional field `ExternalId`
        if (data['ExternalId']) { // data not null
          String.validateJSON(data['ExternalId']);
        }
        // validate the optional field `LastModifiedDate`
        if (data['LastModifiedDate']) { // data not null
          String.validateJSON(data['LastModifiedDate']);
        }
        // validate the optional field `LastUpdatedBy`
        if (data['LastUpdatedBy']) { // data not null
          String.validateJSON(data['LastUpdatedBy']);
        }
        // validate the optional field `RoleArn`
        if (data['RoleArn']) { // data not null
          String.validateJSON(data['RoleArn']);
        }

        return true;
    }


}

EventStream.RequiredProperties = ["ApplicationId", "DestinationStreamArn", "RoleArn"];

/**
 * @member {String} ApplicationId
 */
EventStream.prototype['ApplicationId'] = undefined;

/**
 * @member {String} DestinationStreamArn
 */
EventStream.prototype['DestinationStreamArn'] = undefined;

/**
 * @member {String} ExternalId
 */
EventStream.prototype['ExternalId'] = undefined;

/**
 * @member {String} LastModifiedDate
 */
EventStream.prototype['LastModifiedDate'] = undefined;

/**
 * @member {String} LastUpdatedBy
 */
EventStream.prototype['LastUpdatedBy'] = undefined;

/**
 * @member {String} RoleArn
 */
EventStream.prototype['RoleArn'] = undefined;






export default EventStream;

