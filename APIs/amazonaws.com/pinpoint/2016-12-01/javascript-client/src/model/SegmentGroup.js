/**
 * Amazon Pinpoint
 * Doc Engage API - Amazon Pinpoint API
 *
 * The version of the OpenAPI document: 2016-12-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import SourceType from './SourceType';
import Type from './Type';

/**
 * The SegmentGroup model module.
 * @module model/SegmentGroup
 * @version 2016-12-01
 */
class SegmentGroup {
    /**
     * Constructs a new <code>SegmentGroup</code>.
     * Specifies the base segments and dimensions for a segment, and the relationships between these base segments and dimensions.
     * @alias module:model/SegmentGroup
     */
    constructor() { 
        
        SegmentGroup.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>SegmentGroup</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/SegmentGroup} obj Optional instance to populate.
     * @return {module:model/SegmentGroup} The populated <code>SegmentGroup</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new SegmentGroup();

            if (data.hasOwnProperty('Dimensions')) {
                obj['Dimensions'] = ApiClient.convertToType(data['Dimensions'], Array);
            }
            if (data.hasOwnProperty('SourceSegments')) {
                obj['SourceSegments'] = ApiClient.convertToType(data['SourceSegments'], Array);
            }
            if (data.hasOwnProperty('SourceType')) {
                obj['SourceType'] = ApiClient.convertToType(data['SourceType'], SourceType);
            }
            if (data.hasOwnProperty('Type')) {
                obj['Type'] = ApiClient.convertToType(data['Type'], Type);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>SegmentGroup</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>SegmentGroup</code>.
     */
    static validateJSON(data) {
        // validate the optional field `Dimensions`
        if (data['Dimensions']) { // data not null
          Array.validateJSON(data['Dimensions']);
        }
        // validate the optional field `SourceSegments`
        if (data['SourceSegments']) { // data not null
          Array.validateJSON(data['SourceSegments']);
        }
        // validate the optional field `SourceType`
        if (data['SourceType']) { // data not null
          SourceType.validateJSON(data['SourceType']);
        }
        // validate the optional field `Type`
        if (data['Type']) { // data not null
          Type.validateJSON(data['Type']);
        }

        return true;
    }


}



/**
 * @member {Array} Dimensions
 */
SegmentGroup.prototype['Dimensions'] = undefined;

/**
 * @member {Array} SourceSegments
 */
SegmentGroup.prototype['SourceSegments'] = undefined;

/**
 * @member {module:model/SourceType} SourceType
 */
SegmentGroup.prototype['SourceType'] = undefined;

/**
 * @member {module:model/Type} Type
 */
SegmentGroup.prototype['Type'] = undefined;






export default SegmentGroup;

