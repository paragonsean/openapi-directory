/**
 * Amazon Pinpoint
 * Doc Engage API - Amazon Pinpoint API
 *
 * The version of the OpenAPI document: 2016-12-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import ImportJobResponseDefinition from './ImportJobResponseDefinition';
import JobStatus from './JobStatus';

/**
 * The ImportJobResponse model module.
 * @module model/ImportJobResponse
 * @version 2016-12-01
 */
class ImportJobResponse {
    /**
     * Constructs a new <code>ImportJobResponse</code>.
     * Provides information about the status and settings of a job that imports endpoint definitions from one or more files. The files can be stored in an Amazon Simple Storage Service (Amazon S3) bucket or uploaded directly from a computer by using the Amazon Pinpoint console.
     * @alias module:model/ImportJobResponse
     * @param applicationId {String} 
     * @param creationDate {String} 
     * @param definition {module:model/ImportJobResponseDefinition} 
     * @param id {String} 
     * @param jobStatus {module:model/JobStatus} 
     * @param type {String} 
     */
    constructor(applicationId, creationDate, definition, id, jobStatus, type) { 
        
        ImportJobResponse.initialize(this, applicationId, creationDate, definition, id, jobStatus, type);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, applicationId, creationDate, definition, id, jobStatus, type) { 
        obj['ApplicationId'] = applicationId;
        obj['CreationDate'] = creationDate;
        obj['Definition'] = definition;
        obj['Id'] = id;
        obj['JobStatus'] = jobStatus;
        obj['Type'] = type;
    }

    /**
     * Constructs a <code>ImportJobResponse</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ImportJobResponse} obj Optional instance to populate.
     * @return {module:model/ImportJobResponse} The populated <code>ImportJobResponse</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ImportJobResponse();

            if (data.hasOwnProperty('ApplicationId')) {
                obj['ApplicationId'] = ApiClient.convertToType(data['ApplicationId'], 'String');
            }
            if (data.hasOwnProperty('CompletedPieces')) {
                obj['CompletedPieces'] = ApiClient.convertToType(data['CompletedPieces'], 'Number');
            }
            if (data.hasOwnProperty('CompletionDate')) {
                obj['CompletionDate'] = ApiClient.convertToType(data['CompletionDate'], 'String');
            }
            if (data.hasOwnProperty('CreationDate')) {
                obj['CreationDate'] = ApiClient.convertToType(data['CreationDate'], 'String');
            }
            if (data.hasOwnProperty('Definition')) {
                obj['Definition'] = ImportJobResponseDefinition.constructFromObject(data['Definition']);
            }
            if (data.hasOwnProperty('FailedPieces')) {
                obj['FailedPieces'] = ApiClient.convertToType(data['FailedPieces'], 'Number');
            }
            if (data.hasOwnProperty('Failures')) {
                obj['Failures'] = ApiClient.convertToType(data['Failures'], Array);
            }
            if (data.hasOwnProperty('Id')) {
                obj['Id'] = ApiClient.convertToType(data['Id'], 'String');
            }
            if (data.hasOwnProperty('JobStatus')) {
                obj['JobStatus'] = ApiClient.convertToType(data['JobStatus'], JobStatus);
            }
            if (data.hasOwnProperty('TotalFailures')) {
                obj['TotalFailures'] = ApiClient.convertToType(data['TotalFailures'], 'Number');
            }
            if (data.hasOwnProperty('TotalPieces')) {
                obj['TotalPieces'] = ApiClient.convertToType(data['TotalPieces'], 'Number');
            }
            if (data.hasOwnProperty('TotalProcessed')) {
                obj['TotalProcessed'] = ApiClient.convertToType(data['TotalProcessed'], 'Number');
            }
            if (data.hasOwnProperty('Type')) {
                obj['Type'] = ApiClient.convertToType(data['Type'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>ImportJobResponse</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>ImportJobResponse</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of ImportJobResponse.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // validate the optional field `ApplicationId`
        if (data['ApplicationId']) { // data not null
          String.validateJSON(data['ApplicationId']);
        }
        // validate the optional field `CompletedPieces`
        if (data['CompletedPieces']) { // data not null
          Number.validateJSON(data['CompletedPieces']);
        }
        // validate the optional field `CompletionDate`
        if (data['CompletionDate']) { // data not null
          String.validateJSON(data['CompletionDate']);
        }
        // validate the optional field `CreationDate`
        if (data['CreationDate']) { // data not null
          String.validateJSON(data['CreationDate']);
        }
        // validate the optional field `Definition`
        if (data['Definition']) { // data not null
          ImportJobResponseDefinition.validateJSON(data['Definition']);
        }
        // validate the optional field `FailedPieces`
        if (data['FailedPieces']) { // data not null
          Number.validateJSON(data['FailedPieces']);
        }
        // validate the optional field `Failures`
        if (data['Failures']) { // data not null
          Array.validateJSON(data['Failures']);
        }
        // validate the optional field `Id`
        if (data['Id']) { // data not null
          String.validateJSON(data['Id']);
        }
        // validate the optional field `JobStatus`
        if (data['JobStatus']) { // data not null
          JobStatus.validateJSON(data['JobStatus']);
        }
        // validate the optional field `TotalFailures`
        if (data['TotalFailures']) { // data not null
          Number.validateJSON(data['TotalFailures']);
        }
        // validate the optional field `TotalPieces`
        if (data['TotalPieces']) { // data not null
          Number.validateJSON(data['TotalPieces']);
        }
        // validate the optional field `TotalProcessed`
        if (data['TotalProcessed']) { // data not null
          Number.validateJSON(data['TotalProcessed']);
        }
        // validate the optional field `Type`
        if (data['Type']) { // data not null
          String.validateJSON(data['Type']);
        }

        return true;
    }


}

ImportJobResponse.RequiredProperties = ["ApplicationId", "CreationDate", "Definition", "Id", "JobStatus", "Type"];

/**
 * @member {String} ApplicationId
 */
ImportJobResponse.prototype['ApplicationId'] = undefined;

/**
 * @member {Number} CompletedPieces
 */
ImportJobResponse.prototype['CompletedPieces'] = undefined;

/**
 * @member {String} CompletionDate
 */
ImportJobResponse.prototype['CompletionDate'] = undefined;

/**
 * @member {String} CreationDate
 */
ImportJobResponse.prototype['CreationDate'] = undefined;

/**
 * @member {module:model/ImportJobResponseDefinition} Definition
 */
ImportJobResponse.prototype['Definition'] = undefined;

/**
 * @member {Number} FailedPieces
 */
ImportJobResponse.prototype['FailedPieces'] = undefined;

/**
 * @member {Array} Failures
 */
ImportJobResponse.prototype['Failures'] = undefined;

/**
 * @member {String} Id
 */
ImportJobResponse.prototype['Id'] = undefined;

/**
 * @member {module:model/JobStatus} JobStatus
 */
ImportJobResponse.prototype['JobStatus'] = undefined;

/**
 * @member {Number} TotalFailures
 */
ImportJobResponse.prototype['TotalFailures'] = undefined;

/**
 * @member {Number} TotalPieces
 */
ImportJobResponse.prototype['TotalPieces'] = undefined;

/**
 * @member {Number} TotalProcessed
 */
ImportJobResponse.prototype['TotalProcessed'] = undefined;

/**
 * @member {String} Type
 */
ImportJobResponse.prototype['Type'] = undefined;






export default ImportJobResponse;

