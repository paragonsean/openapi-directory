/**
 * Amazon Pinpoint
 * Doc Engage API - Amazon Pinpoint API
 *
 * The version of the OpenAPI document: 2016-12-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import EventSession from './EventSession';

/**
 * The Event model module.
 * @module model/Event
 * @version 2016-12-01
 */
class Event {
    /**
     * Constructs a new <code>Event</code>.
     * Specifies information about an event that reports data to Amazon Pinpoint.
     * @alias module:model/Event
     * @param eventType {String} 
     * @param timestamp {String} 
     */
    constructor(eventType, timestamp) { 
        
        Event.initialize(this, eventType, timestamp);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, eventType, timestamp) { 
        obj['EventType'] = eventType;
        obj['Timestamp'] = timestamp;
    }

    /**
     * Constructs a <code>Event</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/Event} obj Optional instance to populate.
     * @return {module:model/Event} The populated <code>Event</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new Event();

            if (data.hasOwnProperty('AppPackageName')) {
                obj['AppPackageName'] = ApiClient.convertToType(data['AppPackageName'], 'String');
            }
            if (data.hasOwnProperty('AppTitle')) {
                obj['AppTitle'] = ApiClient.convertToType(data['AppTitle'], 'String');
            }
            if (data.hasOwnProperty('AppVersionCode')) {
                obj['AppVersionCode'] = ApiClient.convertToType(data['AppVersionCode'], 'String');
            }
            if (data.hasOwnProperty('Attributes')) {
                obj['Attributes'] = ApiClient.convertToType(data['Attributes'], Object);
            }
            if (data.hasOwnProperty('ClientSdkVersion')) {
                obj['ClientSdkVersion'] = ApiClient.convertToType(data['ClientSdkVersion'], 'String');
            }
            if (data.hasOwnProperty('EventType')) {
                obj['EventType'] = ApiClient.convertToType(data['EventType'], 'String');
            }
            if (data.hasOwnProperty('Metrics')) {
                obj['Metrics'] = ApiClient.convertToType(data['Metrics'], Object);
            }
            if (data.hasOwnProperty('SdkName')) {
                obj['SdkName'] = ApiClient.convertToType(data['SdkName'], 'String');
            }
            if (data.hasOwnProperty('Session')) {
                obj['Session'] = EventSession.constructFromObject(data['Session']);
            }
            if (data.hasOwnProperty('Timestamp')) {
                obj['Timestamp'] = ApiClient.convertToType(data['Timestamp'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>Event</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>Event</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of Event.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // validate the optional field `AppPackageName`
        if (data['AppPackageName']) { // data not null
          String.validateJSON(data['AppPackageName']);
        }
        // validate the optional field `AppTitle`
        if (data['AppTitle']) { // data not null
          String.validateJSON(data['AppTitle']);
        }
        // validate the optional field `AppVersionCode`
        if (data['AppVersionCode']) { // data not null
          String.validateJSON(data['AppVersionCode']);
        }
        // validate the optional field `Attributes`
        if (data['Attributes']) { // data not null
          Object.validateJSON(data['Attributes']);
        }
        // validate the optional field `ClientSdkVersion`
        if (data['ClientSdkVersion']) { // data not null
          String.validateJSON(data['ClientSdkVersion']);
        }
        // validate the optional field `EventType`
        if (data['EventType']) { // data not null
          String.validateJSON(data['EventType']);
        }
        // validate the optional field `Metrics`
        if (data['Metrics']) { // data not null
          Object.validateJSON(data['Metrics']);
        }
        // validate the optional field `SdkName`
        if (data['SdkName']) { // data not null
          String.validateJSON(data['SdkName']);
        }
        // validate the optional field `Session`
        if (data['Session']) { // data not null
          EventSession.validateJSON(data['Session']);
        }
        // validate the optional field `Timestamp`
        if (data['Timestamp']) { // data not null
          String.validateJSON(data['Timestamp']);
        }

        return true;
    }


}

Event.RequiredProperties = ["EventType", "Timestamp"];

/**
 * @member {String} AppPackageName
 */
Event.prototype['AppPackageName'] = undefined;

/**
 * @member {String} AppTitle
 */
Event.prototype['AppTitle'] = undefined;

/**
 * @member {String} AppVersionCode
 */
Event.prototype['AppVersionCode'] = undefined;

/**
 * @member {Object} Attributes
 */
Event.prototype['Attributes'] = undefined;

/**
 * @member {String} ClientSdkVersion
 */
Event.prototype['ClientSdkVersion'] = undefined;

/**
 * @member {String} EventType
 */
Event.prototype['EventType'] = undefined;

/**
 * @member {Object} Metrics
 */
Event.prototype['Metrics'] = undefined;

/**
 * @member {String} SdkName
 */
Event.prototype['SdkName'] = undefined;

/**
 * @member {module:model/EventSession} Session
 */
Event.prototype['Session'] = undefined;

/**
 * @member {String} Timestamp
 */
Event.prototype['Timestamp'] = undefined;






export default Event;

