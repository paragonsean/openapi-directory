/**
 * Amazon Pinpoint
 * Doc Engage API - Amazon Pinpoint API
 *
 * The version of the OpenAPI document: 2016-12-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The EndpointLocation model module.
 * @module model/EndpointLocation
 * @version 2016-12-01
 */
class EndpointLocation {
    /**
     * Constructs a new <code>EndpointLocation</code>.
     * Specifies geographic information about an endpoint.
     * @alias module:model/EndpointLocation
     */
    constructor() { 
        
        EndpointLocation.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>EndpointLocation</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/EndpointLocation} obj Optional instance to populate.
     * @return {module:model/EndpointLocation} The populated <code>EndpointLocation</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new EndpointLocation();

            if (data.hasOwnProperty('City')) {
                obj['City'] = ApiClient.convertToType(data['City'], 'String');
            }
            if (data.hasOwnProperty('Country')) {
                obj['Country'] = ApiClient.convertToType(data['Country'], 'String');
            }
            if (data.hasOwnProperty('Latitude')) {
                obj['Latitude'] = ApiClient.convertToType(data['Latitude'], 'Number');
            }
            if (data.hasOwnProperty('Longitude')) {
                obj['Longitude'] = ApiClient.convertToType(data['Longitude'], 'Number');
            }
            if (data.hasOwnProperty('PostalCode')) {
                obj['PostalCode'] = ApiClient.convertToType(data['PostalCode'], 'String');
            }
            if (data.hasOwnProperty('Region')) {
                obj['Region'] = ApiClient.convertToType(data['Region'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>EndpointLocation</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>EndpointLocation</code>.
     */
    static validateJSON(data) {
        // validate the optional field `City`
        if (data['City']) { // data not null
          String.validateJSON(data['City']);
        }
        // validate the optional field `Country`
        if (data['Country']) { // data not null
          String.validateJSON(data['Country']);
        }
        // validate the optional field `Latitude`
        if (data['Latitude']) { // data not null
          Number.validateJSON(data['Latitude']);
        }
        // validate the optional field `Longitude`
        if (data['Longitude']) { // data not null
          Number.validateJSON(data['Longitude']);
        }
        // validate the optional field `PostalCode`
        if (data['PostalCode']) { // data not null
          String.validateJSON(data['PostalCode']);
        }
        // validate the optional field `Region`
        if (data['Region']) { // data not null
          String.validateJSON(data['Region']);
        }

        return true;
    }


}



/**
 * @member {String} City
 */
EndpointLocation.prototype['City'] = undefined;

/**
 * @member {String} Country
 */
EndpointLocation.prototype['Country'] = undefined;

/**
 * @member {Number} Latitude
 */
EndpointLocation.prototype['Latitude'] = undefined;

/**
 * @member {Number} Longitude
 */
EndpointLocation.prototype['Longitude'] = undefined;

/**
 * @member {String} PostalCode
 */
EndpointLocation.prototype['PostalCode'] = undefined;

/**
 * @member {String} Region
 */
EndpointLocation.prototype['Region'] = undefined;






export default EndpointLocation;

