/**
 * Amazon Pinpoint
 * Doc Engage API - Amazon Pinpoint API
 *
 * The version of the OpenAPI document: 2016-12-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The AttributesResource model module.
 * @module model/AttributesResource
 * @version 2016-12-01
 */
class AttributesResource {
    /**
     * Constructs a new <code>AttributesResource</code>.
     * Provides information about the type and the names of attributes that were removed from all the endpoints that are associated with an application.
     * @alias module:model/AttributesResource
     * @param applicationId {String} 
     * @param attributeType {String} 
     */
    constructor(applicationId, attributeType) { 
        
        AttributesResource.initialize(this, applicationId, attributeType);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, applicationId, attributeType) { 
        obj['ApplicationId'] = applicationId;
        obj['AttributeType'] = attributeType;
    }

    /**
     * Constructs a <code>AttributesResource</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/AttributesResource} obj Optional instance to populate.
     * @return {module:model/AttributesResource} The populated <code>AttributesResource</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new AttributesResource();

            if (data.hasOwnProperty('ApplicationId')) {
                obj['ApplicationId'] = ApiClient.convertToType(data['ApplicationId'], 'String');
            }
            if (data.hasOwnProperty('AttributeType')) {
                obj['AttributeType'] = ApiClient.convertToType(data['AttributeType'], 'String');
            }
            if (data.hasOwnProperty('Attributes')) {
                obj['Attributes'] = ApiClient.convertToType(data['Attributes'], Array);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>AttributesResource</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>AttributesResource</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of AttributesResource.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // validate the optional field `ApplicationId`
        if (data['ApplicationId']) { // data not null
          String.validateJSON(data['ApplicationId']);
        }
        // validate the optional field `AttributeType`
        if (data['AttributeType']) { // data not null
          String.validateJSON(data['AttributeType']);
        }
        // validate the optional field `Attributes`
        if (data['Attributes']) { // data not null
          Array.validateJSON(data['Attributes']);
        }

        return true;
    }


}

AttributesResource.RequiredProperties = ["ApplicationId", "AttributeType"];

/**
 * @member {String} ApplicationId
 */
AttributesResource.prototype['ApplicationId'] = undefined;

/**
 * @member {String} AttributeType
 */
AttributesResource.prototype['AttributeType'] = undefined;

/**
 * @member {Array} Attributes
 */
AttributesResource.prototype['Attributes'] = undefined;






export default AttributesResource;

