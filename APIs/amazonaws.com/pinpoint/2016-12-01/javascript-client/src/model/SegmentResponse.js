/**
 * Amazon Pinpoint
 * Doc Engage API - Amazon Pinpoint API
 *
 * The version of the OpenAPI document: 2016-12-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import SegmentResponseDimensions from './SegmentResponseDimensions';
import SegmentResponseImportDefinition from './SegmentResponseImportDefinition';
import SegmentResponseSegmentGroups from './SegmentResponseSegmentGroups';
import SegmentType from './SegmentType';

/**
 * The SegmentResponse model module.
 * @module model/SegmentResponse
 * @version 2016-12-01
 */
class SegmentResponse {
    /**
     * Constructs a new <code>SegmentResponse</code>.
     * Provides information about the configuration, dimension, and other settings for a segment.
     * @alias module:model/SegmentResponse
     * @param applicationId {String} 
     * @param arn {String} 
     * @param creationDate {String} 
     * @param id {String} 
     * @param segmentType {module:model/SegmentType} 
     */
    constructor(applicationId, arn, creationDate, id, segmentType) { 
        
        SegmentResponse.initialize(this, applicationId, arn, creationDate, id, segmentType);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, applicationId, arn, creationDate, id, segmentType) { 
        obj['ApplicationId'] = applicationId;
        obj['Arn'] = arn;
        obj['CreationDate'] = creationDate;
        obj['Id'] = id;
        obj['SegmentType'] = segmentType;
    }

    /**
     * Constructs a <code>SegmentResponse</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/SegmentResponse} obj Optional instance to populate.
     * @return {module:model/SegmentResponse} The populated <code>SegmentResponse</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new SegmentResponse();

            if (data.hasOwnProperty('ApplicationId')) {
                obj['ApplicationId'] = ApiClient.convertToType(data['ApplicationId'], 'String');
            }
            if (data.hasOwnProperty('Arn')) {
                obj['Arn'] = ApiClient.convertToType(data['Arn'], 'String');
            }
            if (data.hasOwnProperty('CreationDate')) {
                obj['CreationDate'] = ApiClient.convertToType(data['CreationDate'], 'String');
            }
            if (data.hasOwnProperty('Dimensions')) {
                obj['Dimensions'] = SegmentResponseDimensions.constructFromObject(data['Dimensions']);
            }
            if (data.hasOwnProperty('Id')) {
                obj['Id'] = ApiClient.convertToType(data['Id'], 'String');
            }
            if (data.hasOwnProperty('ImportDefinition')) {
                obj['ImportDefinition'] = SegmentResponseImportDefinition.constructFromObject(data['ImportDefinition']);
            }
            if (data.hasOwnProperty('LastModifiedDate')) {
                obj['LastModifiedDate'] = ApiClient.convertToType(data['LastModifiedDate'], 'String');
            }
            if (data.hasOwnProperty('Name')) {
                obj['Name'] = ApiClient.convertToType(data['Name'], 'String');
            }
            if (data.hasOwnProperty('SegmentGroups')) {
                obj['SegmentGroups'] = SegmentResponseSegmentGroups.constructFromObject(data['SegmentGroups']);
            }
            if (data.hasOwnProperty('SegmentType')) {
                obj['SegmentType'] = ApiClient.convertToType(data['SegmentType'], SegmentType);
            }
            if (data.hasOwnProperty('tags')) {
                obj['tags'] = ApiClient.convertToType(data['tags'], Object);
            }
            if (data.hasOwnProperty('Version')) {
                obj['Version'] = ApiClient.convertToType(data['Version'], 'Number');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>SegmentResponse</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>SegmentResponse</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of SegmentResponse.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // validate the optional field `ApplicationId`
        if (data['ApplicationId']) { // data not null
          String.validateJSON(data['ApplicationId']);
        }
        // validate the optional field `Arn`
        if (data['Arn']) { // data not null
          String.validateJSON(data['Arn']);
        }
        // validate the optional field `CreationDate`
        if (data['CreationDate']) { // data not null
          String.validateJSON(data['CreationDate']);
        }
        // validate the optional field `Dimensions`
        if (data['Dimensions']) { // data not null
          SegmentResponseDimensions.validateJSON(data['Dimensions']);
        }
        // validate the optional field `Id`
        if (data['Id']) { // data not null
          String.validateJSON(data['Id']);
        }
        // validate the optional field `ImportDefinition`
        if (data['ImportDefinition']) { // data not null
          SegmentResponseImportDefinition.validateJSON(data['ImportDefinition']);
        }
        // validate the optional field `LastModifiedDate`
        if (data['LastModifiedDate']) { // data not null
          String.validateJSON(data['LastModifiedDate']);
        }
        // validate the optional field `Name`
        if (data['Name']) { // data not null
          String.validateJSON(data['Name']);
        }
        // validate the optional field `SegmentGroups`
        if (data['SegmentGroups']) { // data not null
          SegmentResponseSegmentGroups.validateJSON(data['SegmentGroups']);
        }
        // validate the optional field `SegmentType`
        if (data['SegmentType']) { // data not null
          SegmentType.validateJSON(data['SegmentType']);
        }
        // validate the optional field `tags`
        if (data['tags']) { // data not null
          Object.validateJSON(data['tags']);
        }
        // validate the optional field `Version`
        if (data['Version']) { // data not null
          Number.validateJSON(data['Version']);
        }

        return true;
    }


}

SegmentResponse.RequiredProperties = ["ApplicationId", "Arn", "CreationDate", "Id", "SegmentType"];

/**
 * @member {String} ApplicationId
 */
SegmentResponse.prototype['ApplicationId'] = undefined;

/**
 * @member {String} Arn
 */
SegmentResponse.prototype['Arn'] = undefined;

/**
 * @member {String} CreationDate
 */
SegmentResponse.prototype['CreationDate'] = undefined;

/**
 * @member {module:model/SegmentResponseDimensions} Dimensions
 */
SegmentResponse.prototype['Dimensions'] = undefined;

/**
 * @member {String} Id
 */
SegmentResponse.prototype['Id'] = undefined;

/**
 * @member {module:model/SegmentResponseImportDefinition} ImportDefinition
 */
SegmentResponse.prototype['ImportDefinition'] = undefined;

/**
 * @member {String} LastModifiedDate
 */
SegmentResponse.prototype['LastModifiedDate'] = undefined;

/**
 * @member {String} Name
 */
SegmentResponse.prototype['Name'] = undefined;

/**
 * @member {module:model/SegmentResponseSegmentGroups} SegmentGroups
 */
SegmentResponse.prototype['SegmentGroups'] = undefined;

/**
 * @member {module:model/SegmentType} SegmentType
 */
SegmentResponse.prototype['SegmentType'] = undefined;

/**
 * @member {Object} tags
 */
SegmentResponse.prototype['tags'] = undefined;

/**
 * @member {Number} Version
 */
SegmentResponse.prototype['Version'] = undefined;






export default SegmentResponse;

