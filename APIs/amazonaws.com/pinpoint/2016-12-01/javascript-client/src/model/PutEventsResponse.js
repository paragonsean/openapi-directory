/**
 * Amazon Pinpoint
 * Doc Engage API - Amazon Pinpoint API
 *
 * The version of the OpenAPI document: 2016-12-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import EventsResponse from './EventsResponse';

/**
 * The PutEventsResponse model module.
 * @module model/PutEventsResponse
 * @version 2016-12-01
 */
class PutEventsResponse {
    /**
     * Constructs a new <code>PutEventsResponse</code>.
     * @alias module:model/PutEventsResponse
     * @param eventsResponse {module:model/EventsResponse} 
     */
    constructor(eventsResponse) { 
        
        PutEventsResponse.initialize(this, eventsResponse);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, eventsResponse) { 
        obj['EventsResponse'] = eventsResponse;
    }

    /**
     * Constructs a <code>PutEventsResponse</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/PutEventsResponse} obj Optional instance to populate.
     * @return {module:model/PutEventsResponse} The populated <code>PutEventsResponse</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new PutEventsResponse();

            if (data.hasOwnProperty('EventsResponse')) {
                obj['EventsResponse'] = EventsResponse.constructFromObject(data['EventsResponse']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>PutEventsResponse</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>PutEventsResponse</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of PutEventsResponse.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // validate the optional field `EventsResponse`
        if (data['EventsResponse']) { // data not null
          EventsResponse.validateJSON(data['EventsResponse']);
        }

        return true;
    }


}

PutEventsResponse.RequiredProperties = ["EventsResponse"];

/**
 * @member {module:model/EventsResponse} EventsResponse
 */
PutEventsResponse.prototype['EventsResponse'] = undefined;






export default PutEventsResponse;

