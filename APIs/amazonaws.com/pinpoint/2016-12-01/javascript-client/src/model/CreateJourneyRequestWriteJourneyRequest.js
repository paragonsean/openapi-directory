/**
 * Amazon Pinpoint
 * Doc Engage API - Amazon Pinpoint API
 *
 * The version of the OpenAPI document: 2016-12-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import CreateJourneyRequestWriteJourneyRequestClosedDays from './CreateJourneyRequestWriteJourneyRequestClosedDays';
import CreateJourneyRequestWriteJourneyRequestJourneyChannelSettings from './CreateJourneyRequestWriteJourneyRequestJourneyChannelSettings';
import CreateJourneyRequestWriteJourneyRequestLimits from './CreateJourneyRequestWriteJourneyRequestLimits';
import CreateJourneyRequestWriteJourneyRequestOpenHours from './CreateJourneyRequestWriteJourneyRequestOpenHours';
import CreateJourneyRequestWriteJourneyRequestQuietTime from './CreateJourneyRequestWriteJourneyRequestQuietTime';
import CreateJourneyRequestWriteJourneyRequestSchedule from './CreateJourneyRequestWriteJourneyRequestSchedule';
import CreateJourneyRequestWriteJourneyRequestStartCondition from './CreateJourneyRequestWriteJourneyRequestStartCondition';
import State from './State';

/**
 * The CreateJourneyRequestWriteJourneyRequest model module.
 * @module model/CreateJourneyRequestWriteJourneyRequest
 * @version 2016-12-01
 */
class CreateJourneyRequestWriteJourneyRequest {
    /**
     * Constructs a new <code>CreateJourneyRequestWriteJourneyRequest</code>.
     * Specifies the configuration and other settings for a journey.
     * @alias module:model/CreateJourneyRequestWriteJourneyRequest
     */
    constructor() { 
        
        CreateJourneyRequestWriteJourneyRequest.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>CreateJourneyRequestWriteJourneyRequest</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/CreateJourneyRequestWriteJourneyRequest} obj Optional instance to populate.
     * @return {module:model/CreateJourneyRequestWriteJourneyRequest} The populated <code>CreateJourneyRequestWriteJourneyRequest</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new CreateJourneyRequestWriteJourneyRequest();

            if (data.hasOwnProperty('Activities')) {
                obj['Activities'] = ApiClient.convertToType(data['Activities'], Object);
            }
            if (data.hasOwnProperty('CreationDate')) {
                obj['CreationDate'] = ApiClient.convertToType(data['CreationDate'], 'String');
            }
            if (data.hasOwnProperty('LastModifiedDate')) {
                obj['LastModifiedDate'] = ApiClient.convertToType(data['LastModifiedDate'], 'String');
            }
            if (data.hasOwnProperty('Limits')) {
                obj['Limits'] = CreateJourneyRequestWriteJourneyRequestLimits.constructFromObject(data['Limits']);
            }
            if (data.hasOwnProperty('LocalTime')) {
                obj['LocalTime'] = ApiClient.convertToType(data['LocalTime'], 'Boolean');
            }
            if (data.hasOwnProperty('Name')) {
                obj['Name'] = ApiClient.convertToType(data['Name'], 'String');
            }
            if (data.hasOwnProperty('QuietTime')) {
                obj['QuietTime'] = CreateJourneyRequestWriteJourneyRequestQuietTime.constructFromObject(data['QuietTime']);
            }
            if (data.hasOwnProperty('RefreshFrequency')) {
                obj['RefreshFrequency'] = ApiClient.convertToType(data['RefreshFrequency'], 'String');
            }
            if (data.hasOwnProperty('Schedule')) {
                obj['Schedule'] = CreateJourneyRequestWriteJourneyRequestSchedule.constructFromObject(data['Schedule']);
            }
            if (data.hasOwnProperty('StartActivity')) {
                obj['StartActivity'] = ApiClient.convertToType(data['StartActivity'], 'String');
            }
            if (data.hasOwnProperty('StartCondition')) {
                obj['StartCondition'] = CreateJourneyRequestWriteJourneyRequestStartCondition.constructFromObject(data['StartCondition']);
            }
            if (data.hasOwnProperty('State')) {
                obj['State'] = ApiClient.convertToType(data['State'], State);
            }
            if (data.hasOwnProperty('WaitForQuietTime')) {
                obj['WaitForQuietTime'] = ApiClient.convertToType(data['WaitForQuietTime'], 'Boolean');
            }
            if (data.hasOwnProperty('RefreshOnSegmentUpdate')) {
                obj['RefreshOnSegmentUpdate'] = ApiClient.convertToType(data['RefreshOnSegmentUpdate'], 'Boolean');
            }
            if (data.hasOwnProperty('JourneyChannelSettings')) {
                obj['JourneyChannelSettings'] = CreateJourneyRequestWriteJourneyRequestJourneyChannelSettings.constructFromObject(data['JourneyChannelSettings']);
            }
            if (data.hasOwnProperty('SendingSchedule')) {
                obj['SendingSchedule'] = ApiClient.convertToType(data['SendingSchedule'], 'Boolean');
            }
            if (data.hasOwnProperty('OpenHours')) {
                obj['OpenHours'] = CreateJourneyRequestWriteJourneyRequestOpenHours.constructFromObject(data['OpenHours']);
            }
            if (data.hasOwnProperty('ClosedDays')) {
                obj['ClosedDays'] = CreateJourneyRequestWriteJourneyRequestClosedDays.constructFromObject(data['ClosedDays']);
            }
            if (data.hasOwnProperty('TimezoneEstimationMethods')) {
                obj['TimezoneEstimationMethods'] = ApiClient.convertToType(data['TimezoneEstimationMethods'], Array);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>CreateJourneyRequestWriteJourneyRequest</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>CreateJourneyRequestWriteJourneyRequest</code>.
     */
    static validateJSON(data) {
        // validate the optional field `Activities`
        if (data['Activities']) { // data not null
          Object.validateJSON(data['Activities']);
        }
        // validate the optional field `CreationDate`
        if (data['CreationDate']) { // data not null
          String.validateJSON(data['CreationDate']);
        }
        // validate the optional field `LastModifiedDate`
        if (data['LastModifiedDate']) { // data not null
          String.validateJSON(data['LastModifiedDate']);
        }
        // validate the optional field `Limits`
        if (data['Limits']) { // data not null
          CreateJourneyRequestWriteJourneyRequestLimits.validateJSON(data['Limits']);
        }
        // validate the optional field `LocalTime`
        if (data['LocalTime']) { // data not null
          Boolean.validateJSON(data['LocalTime']);
        }
        // validate the optional field `Name`
        if (data['Name']) { // data not null
          String.validateJSON(data['Name']);
        }
        // validate the optional field `QuietTime`
        if (data['QuietTime']) { // data not null
          CreateJourneyRequestWriteJourneyRequestQuietTime.validateJSON(data['QuietTime']);
        }
        // validate the optional field `RefreshFrequency`
        if (data['RefreshFrequency']) { // data not null
          String.validateJSON(data['RefreshFrequency']);
        }
        // validate the optional field `Schedule`
        if (data['Schedule']) { // data not null
          CreateJourneyRequestWriteJourneyRequestSchedule.validateJSON(data['Schedule']);
        }
        // validate the optional field `StartActivity`
        if (data['StartActivity']) { // data not null
          String.validateJSON(data['StartActivity']);
        }
        // validate the optional field `StartCondition`
        if (data['StartCondition']) { // data not null
          CreateJourneyRequestWriteJourneyRequestStartCondition.validateJSON(data['StartCondition']);
        }
        // validate the optional field `State`
        if (data['State']) { // data not null
          State.validateJSON(data['State']);
        }
        // validate the optional field `WaitForQuietTime`
        if (data['WaitForQuietTime']) { // data not null
          Boolean.validateJSON(data['WaitForQuietTime']);
        }
        // validate the optional field `RefreshOnSegmentUpdate`
        if (data['RefreshOnSegmentUpdate']) { // data not null
          Boolean.validateJSON(data['RefreshOnSegmentUpdate']);
        }
        // validate the optional field `JourneyChannelSettings`
        if (data['JourneyChannelSettings']) { // data not null
          CreateJourneyRequestWriteJourneyRequestJourneyChannelSettings.validateJSON(data['JourneyChannelSettings']);
        }
        // validate the optional field `SendingSchedule`
        if (data['SendingSchedule']) { // data not null
          Boolean.validateJSON(data['SendingSchedule']);
        }
        // validate the optional field `OpenHours`
        if (data['OpenHours']) { // data not null
          CreateJourneyRequestWriteJourneyRequestOpenHours.validateJSON(data['OpenHours']);
        }
        // validate the optional field `ClosedDays`
        if (data['ClosedDays']) { // data not null
          CreateJourneyRequestWriteJourneyRequestClosedDays.validateJSON(data['ClosedDays']);
        }
        // validate the optional field `TimezoneEstimationMethods`
        if (data['TimezoneEstimationMethods']) { // data not null
          Array.validateJSON(data['TimezoneEstimationMethods']);
        }

        return true;
    }


}



/**
 * @member {Object} Activities
 */
CreateJourneyRequestWriteJourneyRequest.prototype['Activities'] = undefined;

/**
 * @member {String} CreationDate
 */
CreateJourneyRequestWriteJourneyRequest.prototype['CreationDate'] = undefined;

/**
 * @member {String} LastModifiedDate
 */
CreateJourneyRequestWriteJourneyRequest.prototype['LastModifiedDate'] = undefined;

/**
 * @member {module:model/CreateJourneyRequestWriteJourneyRequestLimits} Limits
 */
CreateJourneyRequestWriteJourneyRequest.prototype['Limits'] = undefined;

/**
 * @member {Boolean} LocalTime
 */
CreateJourneyRequestWriteJourneyRequest.prototype['LocalTime'] = undefined;

/**
 * @member {String} Name
 */
CreateJourneyRequestWriteJourneyRequest.prototype['Name'] = undefined;

/**
 * @member {module:model/CreateJourneyRequestWriteJourneyRequestQuietTime} QuietTime
 */
CreateJourneyRequestWriteJourneyRequest.prototype['QuietTime'] = undefined;

/**
 * @member {String} RefreshFrequency
 */
CreateJourneyRequestWriteJourneyRequest.prototype['RefreshFrequency'] = undefined;

/**
 * @member {module:model/CreateJourneyRequestWriteJourneyRequestSchedule} Schedule
 */
CreateJourneyRequestWriteJourneyRequest.prototype['Schedule'] = undefined;

/**
 * @member {String} StartActivity
 */
CreateJourneyRequestWriteJourneyRequest.prototype['StartActivity'] = undefined;

/**
 * @member {module:model/CreateJourneyRequestWriteJourneyRequestStartCondition} StartCondition
 */
CreateJourneyRequestWriteJourneyRequest.prototype['StartCondition'] = undefined;

/**
 * @member {module:model/State} State
 */
CreateJourneyRequestWriteJourneyRequest.prototype['State'] = undefined;

/**
 * @member {Boolean} WaitForQuietTime
 */
CreateJourneyRequestWriteJourneyRequest.prototype['WaitForQuietTime'] = undefined;

/**
 * @member {Boolean} RefreshOnSegmentUpdate
 */
CreateJourneyRequestWriteJourneyRequest.prototype['RefreshOnSegmentUpdate'] = undefined;

/**
 * @member {module:model/CreateJourneyRequestWriteJourneyRequestJourneyChannelSettings} JourneyChannelSettings
 */
CreateJourneyRequestWriteJourneyRequest.prototype['JourneyChannelSettings'] = undefined;

/**
 * @member {Boolean} SendingSchedule
 */
CreateJourneyRequestWriteJourneyRequest.prototype['SendingSchedule'] = undefined;

/**
 * @member {module:model/CreateJourneyRequestWriteJourneyRequestOpenHours} OpenHours
 */
CreateJourneyRequestWriteJourneyRequest.prototype['OpenHours'] = undefined;

/**
 * @member {module:model/CreateJourneyRequestWriteJourneyRequestClosedDays} ClosedDays
 */
CreateJourneyRequestWriteJourneyRequest.prototype['ClosedDays'] = undefined;

/**
 * @member {Array} TimezoneEstimationMethods
 */
CreateJourneyRequestWriteJourneyRequest.prototype['TimezoneEstimationMethods'] = undefined;






export default CreateJourneyRequestWriteJourneyRequest;

