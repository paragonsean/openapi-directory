/**
 * Amazon Pinpoint
 * Doc Engage API - Amazon Pinpoint API
 *
 * The version of the OpenAPI document: 2016-12-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The WriteEventStream model module.
 * @module model/WriteEventStream
 * @version 2016-12-01
 */
class WriteEventStream {
    /**
     * Constructs a new <code>WriteEventStream</code>.
     * Specifies the Amazon Resource Name (ARN) of an event stream to publish events to and the AWS Identity and Access Management (IAM) role to use when publishing those events.
     * @alias module:model/WriteEventStream
     * @param destinationStreamArn {String} 
     * @param roleArn {String} 
     */
    constructor(destinationStreamArn, roleArn) { 
        
        WriteEventStream.initialize(this, destinationStreamArn, roleArn);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, destinationStreamArn, roleArn) { 
        obj['DestinationStreamArn'] = destinationStreamArn;
        obj['RoleArn'] = roleArn;
    }

    /**
     * Constructs a <code>WriteEventStream</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/WriteEventStream} obj Optional instance to populate.
     * @return {module:model/WriteEventStream} The populated <code>WriteEventStream</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new WriteEventStream();

            if (data.hasOwnProperty('DestinationStreamArn')) {
                obj['DestinationStreamArn'] = ApiClient.convertToType(data['DestinationStreamArn'], 'String');
            }
            if (data.hasOwnProperty('RoleArn')) {
                obj['RoleArn'] = ApiClient.convertToType(data['RoleArn'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>WriteEventStream</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>WriteEventStream</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of WriteEventStream.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // validate the optional field `DestinationStreamArn`
        if (data['DestinationStreamArn']) { // data not null
          String.validateJSON(data['DestinationStreamArn']);
        }
        // validate the optional field `RoleArn`
        if (data['RoleArn']) { // data not null
          String.validateJSON(data['RoleArn']);
        }

        return true;
    }


}

WriteEventStream.RequiredProperties = ["DestinationStreamArn", "RoleArn"];

/**
 * @member {String} DestinationStreamArn
 */
WriteEventStream.prototype['DestinationStreamArn'] = undefined;

/**
 * @member {String} RoleArn
 */
WriteEventStream.prototype['RoleArn'] = undefined;






export default WriteEventStream;

