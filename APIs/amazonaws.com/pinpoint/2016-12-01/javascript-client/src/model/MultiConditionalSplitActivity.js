/**
 * Amazon Pinpoint
 * Doc Engage API - Amazon Pinpoint API
 *
 * The version of the OpenAPI document: 2016-12-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import MultiConditionalSplitActivityEvaluationWaitTime from './MultiConditionalSplitActivityEvaluationWaitTime';

/**
 * The MultiConditionalSplitActivity model module.
 * @module model/MultiConditionalSplitActivity
 * @version 2016-12-01
 */
class MultiConditionalSplitActivity {
    /**
     * Constructs a new <code>MultiConditionalSplitActivity</code>.
     * &lt;p&gt;Specifies the settings for a multivariate split activity in a journey. This type of activity sends participants down one of as many as five paths (including a default &lt;i&gt;Else&lt;/i&gt; path) in a journey, based on conditions that you specify.&lt;/p&gt; &lt;note&gt;&lt;p&gt;To create multivariate split activities that send participants down different paths based on push notification events (such as Open or Received events), your mobile app has to specify the User ID and Endpoint ID values. For more information, see &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/pinpoint/latest/developerguide/integrate.html\&quot;&gt;Integrating Amazon Pinpoint with your application&lt;/a&gt; in the &lt;i&gt;Amazon Pinpoint Developer Guide&lt;/i&gt;.&lt;/p&gt;&lt;/note&gt;
     * @alias module:model/MultiConditionalSplitActivity
     */
    constructor() { 
        
        MultiConditionalSplitActivity.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>MultiConditionalSplitActivity</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/MultiConditionalSplitActivity} obj Optional instance to populate.
     * @return {module:model/MultiConditionalSplitActivity} The populated <code>MultiConditionalSplitActivity</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new MultiConditionalSplitActivity();

            if (data.hasOwnProperty('Branches')) {
                obj['Branches'] = ApiClient.convertToType(data['Branches'], Array);
            }
            if (data.hasOwnProperty('DefaultActivity')) {
                obj['DefaultActivity'] = ApiClient.convertToType(data['DefaultActivity'], 'String');
            }
            if (data.hasOwnProperty('EvaluationWaitTime')) {
                obj['EvaluationWaitTime'] = MultiConditionalSplitActivityEvaluationWaitTime.constructFromObject(data['EvaluationWaitTime']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>MultiConditionalSplitActivity</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>MultiConditionalSplitActivity</code>.
     */
    static validateJSON(data) {
        // validate the optional field `Branches`
        if (data['Branches']) { // data not null
          Array.validateJSON(data['Branches']);
        }
        // validate the optional field `DefaultActivity`
        if (data['DefaultActivity']) { // data not null
          String.validateJSON(data['DefaultActivity']);
        }
        // validate the optional field `EvaluationWaitTime`
        if (data['EvaluationWaitTime']) { // data not null
          MultiConditionalSplitActivityEvaluationWaitTime.validateJSON(data['EvaluationWaitTime']);
        }

        return true;
    }


}



/**
 * @member {Array} Branches
 */
MultiConditionalSplitActivity.prototype['Branches'] = undefined;

/**
 * @member {String} DefaultActivity
 */
MultiConditionalSplitActivity.prototype['DefaultActivity'] = undefined;

/**
 * @member {module:model/MultiConditionalSplitActivityEvaluationWaitTime} EvaluationWaitTime
 */
MultiConditionalSplitActivity.prototype['EvaluationWaitTime'] = undefined;






export default MultiConditionalSplitActivity;

