/**
 * Amazon Pinpoint
 * Doc Engage API - Amazon Pinpoint API
 *
 * The version of the OpenAPI document: 2016-12-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import EmailMessageActivity from './EmailMessageActivity';
import EmailMessageActivityMessageConfig from './EmailMessageActivityMessageConfig';

/**
 * The ActivityEMAIL model module.
 * @module model/ActivityEMAIL
 * @version 2016-12-01
 */
class ActivityEMAIL {
    /**
     * Constructs a new <code>ActivityEMAIL</code>.
     * @alias module:model/ActivityEMAIL
     * @implements module:model/EmailMessageActivity
     */
    constructor() { 
        EmailMessageActivity.initialize(this);
        ActivityEMAIL.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>ActivityEMAIL</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ActivityEMAIL} obj Optional instance to populate.
     * @return {module:model/ActivityEMAIL} The populated <code>ActivityEMAIL</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ActivityEMAIL();
            EmailMessageActivity.constructFromObject(data, obj);

            if (data.hasOwnProperty('MessageConfig')) {
                obj['MessageConfig'] = EmailMessageActivityMessageConfig.constructFromObject(data['MessageConfig']);
            }
            if (data.hasOwnProperty('NextActivity')) {
                obj['NextActivity'] = ApiClient.convertToType(data['NextActivity'], 'String');
            }
            if (data.hasOwnProperty('TemplateName')) {
                obj['TemplateName'] = ApiClient.convertToType(data['TemplateName'], 'String');
            }
            if (data.hasOwnProperty('TemplateVersion')) {
                obj['TemplateVersion'] = ApiClient.convertToType(data['TemplateVersion'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>ActivityEMAIL</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>ActivityEMAIL</code>.
     */
    static validateJSON(data) {
        // validate the optional field `MessageConfig`
        if (data['MessageConfig']) { // data not null
          EmailMessageActivityMessageConfig.validateJSON(data['MessageConfig']);
        }
        // validate the optional field `NextActivity`
        if (data['NextActivity']) { // data not null
          String.validateJSON(data['NextActivity']);
        }
        // validate the optional field `TemplateName`
        if (data['TemplateName']) { // data not null
          String.validateJSON(data['TemplateName']);
        }
        // validate the optional field `TemplateVersion`
        if (data['TemplateVersion']) { // data not null
          String.validateJSON(data['TemplateVersion']);
        }

        return true;
    }


}



/**
 * @member {module:model/EmailMessageActivityMessageConfig} MessageConfig
 */
ActivityEMAIL.prototype['MessageConfig'] = undefined;

/**
 * @member {String} NextActivity
 */
ActivityEMAIL.prototype['NextActivity'] = undefined;

/**
 * @member {String} TemplateName
 */
ActivityEMAIL.prototype['TemplateName'] = undefined;

/**
 * @member {String} TemplateVersion
 */
ActivityEMAIL.prototype['TemplateVersion'] = undefined;


// Implement EmailMessageActivity interface:
/**
 * @member {module:model/EmailMessageActivityMessageConfig} MessageConfig
 */
EmailMessageActivity.prototype['MessageConfig'] = undefined;
/**
 * @member {String} NextActivity
 */
EmailMessageActivity.prototype['NextActivity'] = undefined;
/**
 * @member {String} TemplateName
 */
EmailMessageActivity.prototype['TemplateName'] = undefined;
/**
 * @member {String} TemplateVersion
 */
EmailMessageActivity.prototype['TemplateVersion'] = undefined;




export default ActivityEMAIL;

