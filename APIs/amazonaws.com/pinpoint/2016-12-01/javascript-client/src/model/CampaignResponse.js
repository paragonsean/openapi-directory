/**
 * Amazon Pinpoint
 * Doc Engage API - Amazon Pinpoint API
 *
 * The version of the OpenAPI document: 2016-12-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import CampaignResponseCustomDeliveryConfiguration from './CampaignResponseCustomDeliveryConfiguration';
import CampaignResponseDefaultState from './CampaignResponseDefaultState';
import CampaignResponseHook from './CampaignResponseHook';
import CampaignResponseState from './CampaignResponseState';
import CampaignResponseTemplateConfiguration from './CampaignResponseTemplateConfiguration';
import CreateCampaignRequestWriteCampaignRequestLimits from './CreateCampaignRequestWriteCampaignRequestLimits';
import CreateCampaignRequestWriteCampaignRequestMessageConfiguration from './CreateCampaignRequestWriteCampaignRequestMessageConfiguration';
import CreateCampaignRequestWriteCampaignRequestSchedule from './CreateCampaignRequestWriteCampaignRequestSchedule';

/**
 * The CampaignResponse model module.
 * @module model/CampaignResponse
 * @version 2016-12-01
 */
class CampaignResponse {
    /**
     * Constructs a new <code>CampaignResponse</code>.
     * Provides information about the status, configuration, and other settings for a campaign.
     * @alias module:model/CampaignResponse
     * @param applicationId {String} 
     * @param arn {String} 
     * @param creationDate {String} 
     * @param id {String} 
     * @param lastModifiedDate {String} 
     * @param segmentId {String} 
     * @param segmentVersion {Number} 
     */
    constructor(applicationId, arn, creationDate, id, lastModifiedDate, segmentId, segmentVersion) { 
        
        CampaignResponse.initialize(this, applicationId, arn, creationDate, id, lastModifiedDate, segmentId, segmentVersion);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, applicationId, arn, creationDate, id, lastModifiedDate, segmentId, segmentVersion) { 
        obj['ApplicationId'] = applicationId;
        obj['Arn'] = arn;
        obj['CreationDate'] = creationDate;
        obj['Id'] = id;
        obj['LastModifiedDate'] = lastModifiedDate;
        obj['SegmentId'] = segmentId;
        obj['SegmentVersion'] = segmentVersion;
    }

    /**
     * Constructs a <code>CampaignResponse</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/CampaignResponse} obj Optional instance to populate.
     * @return {module:model/CampaignResponse} The populated <code>CampaignResponse</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new CampaignResponse();

            if (data.hasOwnProperty('AdditionalTreatments')) {
                obj['AdditionalTreatments'] = ApiClient.convertToType(data['AdditionalTreatments'], Array);
            }
            if (data.hasOwnProperty('ApplicationId')) {
                obj['ApplicationId'] = ApiClient.convertToType(data['ApplicationId'], 'String');
            }
            if (data.hasOwnProperty('Arn')) {
                obj['Arn'] = ApiClient.convertToType(data['Arn'], 'String');
            }
            if (data.hasOwnProperty('CreationDate')) {
                obj['CreationDate'] = ApiClient.convertToType(data['CreationDate'], 'String');
            }
            if (data.hasOwnProperty('CustomDeliveryConfiguration')) {
                obj['CustomDeliveryConfiguration'] = CampaignResponseCustomDeliveryConfiguration.constructFromObject(data['CustomDeliveryConfiguration']);
            }
            if (data.hasOwnProperty('DefaultState')) {
                obj['DefaultState'] = CampaignResponseDefaultState.constructFromObject(data['DefaultState']);
            }
            if (data.hasOwnProperty('Description')) {
                obj['Description'] = ApiClient.convertToType(data['Description'], 'String');
            }
            if (data.hasOwnProperty('HoldoutPercent')) {
                obj['HoldoutPercent'] = ApiClient.convertToType(data['HoldoutPercent'], 'Number');
            }
            if (data.hasOwnProperty('Hook')) {
                obj['Hook'] = CampaignResponseHook.constructFromObject(data['Hook']);
            }
            if (data.hasOwnProperty('Id')) {
                obj['Id'] = ApiClient.convertToType(data['Id'], 'String');
            }
            if (data.hasOwnProperty('IsPaused')) {
                obj['IsPaused'] = ApiClient.convertToType(data['IsPaused'], 'Boolean');
            }
            if (data.hasOwnProperty('LastModifiedDate')) {
                obj['LastModifiedDate'] = ApiClient.convertToType(data['LastModifiedDate'], 'String');
            }
            if (data.hasOwnProperty('Limits')) {
                obj['Limits'] = CreateCampaignRequestWriteCampaignRequestLimits.constructFromObject(data['Limits']);
            }
            if (data.hasOwnProperty('MessageConfiguration')) {
                obj['MessageConfiguration'] = CreateCampaignRequestWriteCampaignRequestMessageConfiguration.constructFromObject(data['MessageConfiguration']);
            }
            if (data.hasOwnProperty('Name')) {
                obj['Name'] = ApiClient.convertToType(data['Name'], 'String');
            }
            if (data.hasOwnProperty('Schedule')) {
                obj['Schedule'] = CreateCampaignRequestWriteCampaignRequestSchedule.constructFromObject(data['Schedule']);
            }
            if (data.hasOwnProperty('SegmentId')) {
                obj['SegmentId'] = ApiClient.convertToType(data['SegmentId'], 'String');
            }
            if (data.hasOwnProperty('SegmentVersion')) {
                obj['SegmentVersion'] = ApiClient.convertToType(data['SegmentVersion'], 'Number');
            }
            if (data.hasOwnProperty('State')) {
                obj['State'] = CampaignResponseState.constructFromObject(data['State']);
            }
            if (data.hasOwnProperty('tags')) {
                obj['tags'] = ApiClient.convertToType(data['tags'], Object);
            }
            if (data.hasOwnProperty('TemplateConfiguration')) {
                obj['TemplateConfiguration'] = CampaignResponseTemplateConfiguration.constructFromObject(data['TemplateConfiguration']);
            }
            if (data.hasOwnProperty('TreatmentDescription')) {
                obj['TreatmentDescription'] = ApiClient.convertToType(data['TreatmentDescription'], 'String');
            }
            if (data.hasOwnProperty('TreatmentName')) {
                obj['TreatmentName'] = ApiClient.convertToType(data['TreatmentName'], 'String');
            }
            if (data.hasOwnProperty('Version')) {
                obj['Version'] = ApiClient.convertToType(data['Version'], 'Number');
            }
            if (data.hasOwnProperty('Priority')) {
                obj['Priority'] = ApiClient.convertToType(data['Priority'], 'Number');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>CampaignResponse</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>CampaignResponse</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of CampaignResponse.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // validate the optional field `AdditionalTreatments`
        if (data['AdditionalTreatments']) { // data not null
          Array.validateJSON(data['AdditionalTreatments']);
        }
        // validate the optional field `ApplicationId`
        if (data['ApplicationId']) { // data not null
          String.validateJSON(data['ApplicationId']);
        }
        // validate the optional field `Arn`
        if (data['Arn']) { // data not null
          String.validateJSON(data['Arn']);
        }
        // validate the optional field `CreationDate`
        if (data['CreationDate']) { // data not null
          String.validateJSON(data['CreationDate']);
        }
        // validate the optional field `CustomDeliveryConfiguration`
        if (data['CustomDeliveryConfiguration']) { // data not null
          CampaignResponseCustomDeliveryConfiguration.validateJSON(data['CustomDeliveryConfiguration']);
        }
        // validate the optional field `DefaultState`
        if (data['DefaultState']) { // data not null
          CampaignResponseDefaultState.validateJSON(data['DefaultState']);
        }
        // validate the optional field `Description`
        if (data['Description']) { // data not null
          String.validateJSON(data['Description']);
        }
        // validate the optional field `HoldoutPercent`
        if (data['HoldoutPercent']) { // data not null
          Number.validateJSON(data['HoldoutPercent']);
        }
        // validate the optional field `Hook`
        if (data['Hook']) { // data not null
          CampaignResponseHook.validateJSON(data['Hook']);
        }
        // validate the optional field `Id`
        if (data['Id']) { // data not null
          String.validateJSON(data['Id']);
        }
        // validate the optional field `IsPaused`
        if (data['IsPaused']) { // data not null
          Boolean.validateJSON(data['IsPaused']);
        }
        // validate the optional field `LastModifiedDate`
        if (data['LastModifiedDate']) { // data not null
          String.validateJSON(data['LastModifiedDate']);
        }
        // validate the optional field `Limits`
        if (data['Limits']) { // data not null
          CreateCampaignRequestWriteCampaignRequestLimits.validateJSON(data['Limits']);
        }
        // validate the optional field `MessageConfiguration`
        if (data['MessageConfiguration']) { // data not null
          CreateCampaignRequestWriteCampaignRequestMessageConfiguration.validateJSON(data['MessageConfiguration']);
        }
        // validate the optional field `Name`
        if (data['Name']) { // data not null
          String.validateJSON(data['Name']);
        }
        // validate the optional field `Schedule`
        if (data['Schedule']) { // data not null
          CreateCampaignRequestWriteCampaignRequestSchedule.validateJSON(data['Schedule']);
        }
        // validate the optional field `SegmentId`
        if (data['SegmentId']) { // data not null
          String.validateJSON(data['SegmentId']);
        }
        // validate the optional field `SegmentVersion`
        if (data['SegmentVersion']) { // data not null
          Number.validateJSON(data['SegmentVersion']);
        }
        // validate the optional field `State`
        if (data['State']) { // data not null
          CampaignResponseState.validateJSON(data['State']);
        }
        // validate the optional field `tags`
        if (data['tags']) { // data not null
          Object.validateJSON(data['tags']);
        }
        // validate the optional field `TemplateConfiguration`
        if (data['TemplateConfiguration']) { // data not null
          CampaignResponseTemplateConfiguration.validateJSON(data['TemplateConfiguration']);
        }
        // validate the optional field `TreatmentDescription`
        if (data['TreatmentDescription']) { // data not null
          String.validateJSON(data['TreatmentDescription']);
        }
        // validate the optional field `TreatmentName`
        if (data['TreatmentName']) { // data not null
          String.validateJSON(data['TreatmentName']);
        }
        // validate the optional field `Version`
        if (data['Version']) { // data not null
          Number.validateJSON(data['Version']);
        }
        // validate the optional field `Priority`
        if (data['Priority']) { // data not null
          Number.validateJSON(data['Priority']);
        }

        return true;
    }


}

CampaignResponse.RequiredProperties = ["ApplicationId", "Arn", "CreationDate", "Id", "LastModifiedDate", "SegmentId", "SegmentVersion"];

/**
 * @member {Array} AdditionalTreatments
 */
CampaignResponse.prototype['AdditionalTreatments'] = undefined;

/**
 * @member {String} ApplicationId
 */
CampaignResponse.prototype['ApplicationId'] = undefined;

/**
 * @member {String} Arn
 */
CampaignResponse.prototype['Arn'] = undefined;

/**
 * @member {String} CreationDate
 */
CampaignResponse.prototype['CreationDate'] = undefined;

/**
 * @member {module:model/CampaignResponseCustomDeliveryConfiguration} CustomDeliveryConfiguration
 */
CampaignResponse.prototype['CustomDeliveryConfiguration'] = undefined;

/**
 * @member {module:model/CampaignResponseDefaultState} DefaultState
 */
CampaignResponse.prototype['DefaultState'] = undefined;

/**
 * @member {String} Description
 */
CampaignResponse.prototype['Description'] = undefined;

/**
 * @member {Number} HoldoutPercent
 */
CampaignResponse.prototype['HoldoutPercent'] = undefined;

/**
 * @member {module:model/CampaignResponseHook} Hook
 */
CampaignResponse.prototype['Hook'] = undefined;

/**
 * @member {String} Id
 */
CampaignResponse.prototype['Id'] = undefined;

/**
 * @member {Boolean} IsPaused
 */
CampaignResponse.prototype['IsPaused'] = undefined;

/**
 * @member {String} LastModifiedDate
 */
CampaignResponse.prototype['LastModifiedDate'] = undefined;

/**
 * @member {module:model/CreateCampaignRequestWriteCampaignRequestLimits} Limits
 */
CampaignResponse.prototype['Limits'] = undefined;

/**
 * @member {module:model/CreateCampaignRequestWriteCampaignRequestMessageConfiguration} MessageConfiguration
 */
CampaignResponse.prototype['MessageConfiguration'] = undefined;

/**
 * @member {String} Name
 */
CampaignResponse.prototype['Name'] = undefined;

/**
 * @member {module:model/CreateCampaignRequestWriteCampaignRequestSchedule} Schedule
 */
CampaignResponse.prototype['Schedule'] = undefined;

/**
 * @member {String} SegmentId
 */
CampaignResponse.prototype['SegmentId'] = undefined;

/**
 * @member {Number} SegmentVersion
 */
CampaignResponse.prototype['SegmentVersion'] = undefined;

/**
 * @member {module:model/CampaignResponseState} State
 */
CampaignResponse.prototype['State'] = undefined;

/**
 * @member {Object} tags
 */
CampaignResponse.prototype['tags'] = undefined;

/**
 * @member {module:model/CampaignResponseTemplateConfiguration} TemplateConfiguration
 */
CampaignResponse.prototype['TemplateConfiguration'] = undefined;

/**
 * @member {String} TreatmentDescription
 */
CampaignResponse.prototype['TreatmentDescription'] = undefined;

/**
 * @member {String} TreatmentName
 */
CampaignResponse.prototype['TreatmentName'] = undefined;

/**
 * @member {Number} Version
 */
CampaignResponse.prototype['Version'] = undefined;

/**
 * @member {Number} Priority
 */
CampaignResponse.prototype['Priority'] = undefined;






export default CampaignResponse;

