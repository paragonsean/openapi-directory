/**
 * Amazon Pinpoint
 * Doc Engage API - Amazon Pinpoint API
 *
 * The version of the OpenAPI document: 2016-12-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import Action from './Action';
import Message from './Message';

/**
 * The MessageConfigurationDefaultMessage model module.
 * @module model/MessageConfigurationDefaultMessage
 * @version 2016-12-01
 */
class MessageConfigurationDefaultMessage {
    /**
     * Constructs a new <code>MessageConfigurationDefaultMessage</code>.
     * @alias module:model/MessageConfigurationDefaultMessage
     * @implements module:model/Message
     */
    constructor() { 
        Message.initialize(this);
        MessageConfigurationDefaultMessage.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>MessageConfigurationDefaultMessage</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/MessageConfigurationDefaultMessage} obj Optional instance to populate.
     * @return {module:model/MessageConfigurationDefaultMessage} The populated <code>MessageConfigurationDefaultMessage</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new MessageConfigurationDefaultMessage();
            Message.constructFromObject(data, obj);

            if (data.hasOwnProperty('Action')) {
                obj['Action'] = ApiClient.convertToType(data['Action'], Action);
            }
            if (data.hasOwnProperty('Body')) {
                obj['Body'] = ApiClient.convertToType(data['Body'], 'String');
            }
            if (data.hasOwnProperty('ImageIconUrl')) {
                obj['ImageIconUrl'] = ApiClient.convertToType(data['ImageIconUrl'], 'String');
            }
            if (data.hasOwnProperty('ImageSmallIconUrl')) {
                obj['ImageSmallIconUrl'] = ApiClient.convertToType(data['ImageSmallIconUrl'], 'String');
            }
            if (data.hasOwnProperty('ImageUrl')) {
                obj['ImageUrl'] = ApiClient.convertToType(data['ImageUrl'], 'String');
            }
            if (data.hasOwnProperty('JsonBody')) {
                obj['JsonBody'] = ApiClient.convertToType(data['JsonBody'], 'String');
            }
            if (data.hasOwnProperty('MediaUrl')) {
                obj['MediaUrl'] = ApiClient.convertToType(data['MediaUrl'], 'String');
            }
            if (data.hasOwnProperty('RawContent')) {
                obj['RawContent'] = ApiClient.convertToType(data['RawContent'], 'String');
            }
            if (data.hasOwnProperty('SilentPush')) {
                obj['SilentPush'] = ApiClient.convertToType(data['SilentPush'], 'Boolean');
            }
            if (data.hasOwnProperty('TimeToLive')) {
                obj['TimeToLive'] = ApiClient.convertToType(data['TimeToLive'], 'Number');
            }
            if (data.hasOwnProperty('Title')) {
                obj['Title'] = ApiClient.convertToType(data['Title'], 'String');
            }
            if (data.hasOwnProperty('Url')) {
                obj['Url'] = ApiClient.convertToType(data['Url'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>MessageConfigurationDefaultMessage</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>MessageConfigurationDefaultMessage</code>.
     */
    static validateJSON(data) {
        // validate the optional field `Action`
        if (data['Action']) { // data not null
          Action.validateJSON(data['Action']);
        }
        // validate the optional field `Body`
        if (data['Body']) { // data not null
          String.validateJSON(data['Body']);
        }
        // validate the optional field `ImageIconUrl`
        if (data['ImageIconUrl']) { // data not null
          String.validateJSON(data['ImageIconUrl']);
        }
        // validate the optional field `ImageSmallIconUrl`
        if (data['ImageSmallIconUrl']) { // data not null
          String.validateJSON(data['ImageSmallIconUrl']);
        }
        // validate the optional field `ImageUrl`
        if (data['ImageUrl']) { // data not null
          String.validateJSON(data['ImageUrl']);
        }
        // validate the optional field `JsonBody`
        if (data['JsonBody']) { // data not null
          String.validateJSON(data['JsonBody']);
        }
        // validate the optional field `MediaUrl`
        if (data['MediaUrl']) { // data not null
          String.validateJSON(data['MediaUrl']);
        }
        // validate the optional field `RawContent`
        if (data['RawContent']) { // data not null
          String.validateJSON(data['RawContent']);
        }
        // validate the optional field `SilentPush`
        if (data['SilentPush']) { // data not null
          Boolean.validateJSON(data['SilentPush']);
        }
        // validate the optional field `TimeToLive`
        if (data['TimeToLive']) { // data not null
          Number.validateJSON(data['TimeToLive']);
        }
        // validate the optional field `Title`
        if (data['Title']) { // data not null
          String.validateJSON(data['Title']);
        }
        // validate the optional field `Url`
        if (data['Url']) { // data not null
          String.validateJSON(data['Url']);
        }

        return true;
    }


}



/**
 * @member {module:model/Action} Action
 */
MessageConfigurationDefaultMessage.prototype['Action'] = undefined;

/**
 * @member {String} Body
 */
MessageConfigurationDefaultMessage.prototype['Body'] = undefined;

/**
 * @member {String} ImageIconUrl
 */
MessageConfigurationDefaultMessage.prototype['ImageIconUrl'] = undefined;

/**
 * @member {String} ImageSmallIconUrl
 */
MessageConfigurationDefaultMessage.prototype['ImageSmallIconUrl'] = undefined;

/**
 * @member {String} ImageUrl
 */
MessageConfigurationDefaultMessage.prototype['ImageUrl'] = undefined;

/**
 * @member {String} JsonBody
 */
MessageConfigurationDefaultMessage.prototype['JsonBody'] = undefined;

/**
 * @member {String} MediaUrl
 */
MessageConfigurationDefaultMessage.prototype['MediaUrl'] = undefined;

/**
 * @member {String} RawContent
 */
MessageConfigurationDefaultMessage.prototype['RawContent'] = undefined;

/**
 * @member {Boolean} SilentPush
 */
MessageConfigurationDefaultMessage.prototype['SilentPush'] = undefined;

/**
 * @member {Number} TimeToLive
 */
MessageConfigurationDefaultMessage.prototype['TimeToLive'] = undefined;

/**
 * @member {String} Title
 */
MessageConfigurationDefaultMessage.prototype['Title'] = undefined;

/**
 * @member {String} Url
 */
MessageConfigurationDefaultMessage.prototype['Url'] = undefined;


// Implement Message interface:
/**
 * @member {module:model/Action} Action
 */
Message.prototype['Action'] = undefined;
/**
 * @member {String} Body
 */
Message.prototype['Body'] = undefined;
/**
 * @member {String} ImageIconUrl
 */
Message.prototype['ImageIconUrl'] = undefined;
/**
 * @member {String} ImageSmallIconUrl
 */
Message.prototype['ImageSmallIconUrl'] = undefined;
/**
 * @member {String} ImageUrl
 */
Message.prototype['ImageUrl'] = undefined;
/**
 * @member {String} JsonBody
 */
Message.prototype['JsonBody'] = undefined;
/**
 * @member {String} MediaUrl
 */
Message.prototype['MediaUrl'] = undefined;
/**
 * @member {String} RawContent
 */
Message.prototype['RawContent'] = undefined;
/**
 * @member {Boolean} SilentPush
 */
Message.prototype['SilentPush'] = undefined;
/**
 * @member {Number} TimeToLive
 */
Message.prototype['TimeToLive'] = undefined;
/**
 * @member {String} Title
 */
Message.prototype['Title'] = undefined;
/**
 * @member {String} Url
 */
Message.prototype['Url'] = undefined;




export default MessageConfigurationDefaultMessage;

