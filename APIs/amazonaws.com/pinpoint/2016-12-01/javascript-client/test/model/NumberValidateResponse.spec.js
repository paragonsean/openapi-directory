/**
 * Amazon Pinpoint
 * Doc Engage API - Amazon Pinpoint API
 *
 * The version of the OpenAPI document: 2016-12-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.AmazonPinpoint);
  }
}(this, function(expect, AmazonPinpoint) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new AmazonPinpoint.NumberValidateResponse();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('NumberValidateResponse', function() {
    it('should create an instance of NumberValidateResponse', function() {
      // uncomment below and update the code to test NumberValidateResponse
      //var instance = new AmazonPinpoint.NumberValidateResponse();
      //expect(instance).to.be.a(AmazonPinpoint.NumberValidateResponse);
    });

    it('should have the property carrier (base name: "Carrier")', function() {
      // uncomment below and update the code to test the property carrier
      //var instance = new AmazonPinpoint.NumberValidateResponse();
      //expect(instance).to.be();
    });

    it('should have the property city (base name: "City")', function() {
      // uncomment below and update the code to test the property city
      //var instance = new AmazonPinpoint.NumberValidateResponse();
      //expect(instance).to.be();
    });

    it('should have the property cleansedPhoneNumberE164 (base name: "CleansedPhoneNumberE164")', function() {
      // uncomment below and update the code to test the property cleansedPhoneNumberE164
      //var instance = new AmazonPinpoint.NumberValidateResponse();
      //expect(instance).to.be();
    });

    it('should have the property cleansedPhoneNumberNational (base name: "CleansedPhoneNumberNational")', function() {
      // uncomment below and update the code to test the property cleansedPhoneNumberNational
      //var instance = new AmazonPinpoint.NumberValidateResponse();
      //expect(instance).to.be();
    });

    it('should have the property country (base name: "Country")', function() {
      // uncomment below and update the code to test the property country
      //var instance = new AmazonPinpoint.NumberValidateResponse();
      //expect(instance).to.be();
    });

    it('should have the property countryCodeIso2 (base name: "CountryCodeIso2")', function() {
      // uncomment below and update the code to test the property countryCodeIso2
      //var instance = new AmazonPinpoint.NumberValidateResponse();
      //expect(instance).to.be();
    });

    it('should have the property countryCodeNumeric (base name: "CountryCodeNumeric")', function() {
      // uncomment below and update the code to test the property countryCodeNumeric
      //var instance = new AmazonPinpoint.NumberValidateResponse();
      //expect(instance).to.be();
    });

    it('should have the property county (base name: "County")', function() {
      // uncomment below and update the code to test the property county
      //var instance = new AmazonPinpoint.NumberValidateResponse();
      //expect(instance).to.be();
    });

    it('should have the property originalCountryCodeIso2 (base name: "OriginalCountryCodeIso2")', function() {
      // uncomment below and update the code to test the property originalCountryCodeIso2
      //var instance = new AmazonPinpoint.NumberValidateResponse();
      //expect(instance).to.be();
    });

    it('should have the property originalPhoneNumber (base name: "OriginalPhoneNumber")', function() {
      // uncomment below and update the code to test the property originalPhoneNumber
      //var instance = new AmazonPinpoint.NumberValidateResponse();
      //expect(instance).to.be();
    });

    it('should have the property phoneType (base name: "PhoneType")', function() {
      // uncomment below and update the code to test the property phoneType
      //var instance = new AmazonPinpoint.NumberValidateResponse();
      //expect(instance).to.be();
    });

    it('should have the property phoneTypeCode (base name: "PhoneTypeCode")', function() {
      // uncomment below and update the code to test the property phoneTypeCode
      //var instance = new AmazonPinpoint.NumberValidateResponse();
      //expect(instance).to.be();
    });

    it('should have the property timezone (base name: "Timezone")', function() {
      // uncomment below and update the code to test the property timezone
      //var instance = new AmazonPinpoint.NumberValidateResponse();
      //expect(instance).to.be();
    });

    it('should have the property zipCode (base name: "ZipCode")', function() {
      // uncomment below and update the code to test the property zipCode
      //var instance = new AmazonPinpoint.NumberValidateResponse();
      //expect(instance).to.be();
    });

  });

}));
