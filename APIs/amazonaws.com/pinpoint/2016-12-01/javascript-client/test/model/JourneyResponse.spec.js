/**
 * Amazon Pinpoint
 * Doc Engage API - Amazon Pinpoint API
 *
 * The version of the OpenAPI document: 2016-12-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.AmazonPinpoint);
  }
}(this, function(expect, AmazonPinpoint) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new AmazonPinpoint.JourneyResponse();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('JourneyResponse', function() {
    it('should create an instance of JourneyResponse', function() {
      // uncomment below and update the code to test JourneyResponse
      //var instance = new AmazonPinpoint.JourneyResponse();
      //expect(instance).to.be.a(AmazonPinpoint.JourneyResponse);
    });

    it('should have the property activities (base name: "Activities")', function() {
      // uncomment below and update the code to test the property activities
      //var instance = new AmazonPinpoint.JourneyResponse();
      //expect(instance).to.be();
    });

    it('should have the property applicationId (base name: "ApplicationId")', function() {
      // uncomment below and update the code to test the property applicationId
      //var instance = new AmazonPinpoint.JourneyResponse();
      //expect(instance).to.be();
    });

    it('should have the property creationDate (base name: "CreationDate")', function() {
      // uncomment below and update the code to test the property creationDate
      //var instance = new AmazonPinpoint.JourneyResponse();
      //expect(instance).to.be();
    });

    it('should have the property id (base name: "Id")', function() {
      // uncomment below and update the code to test the property id
      //var instance = new AmazonPinpoint.JourneyResponse();
      //expect(instance).to.be();
    });

    it('should have the property lastModifiedDate (base name: "LastModifiedDate")', function() {
      // uncomment below and update the code to test the property lastModifiedDate
      //var instance = new AmazonPinpoint.JourneyResponse();
      //expect(instance).to.be();
    });

    it('should have the property limits (base name: "Limits")', function() {
      // uncomment below and update the code to test the property limits
      //var instance = new AmazonPinpoint.JourneyResponse();
      //expect(instance).to.be();
    });

    it('should have the property localTime (base name: "LocalTime")', function() {
      // uncomment below and update the code to test the property localTime
      //var instance = new AmazonPinpoint.JourneyResponse();
      //expect(instance).to.be();
    });

    it('should have the property name (base name: "Name")', function() {
      // uncomment below and update the code to test the property name
      //var instance = new AmazonPinpoint.JourneyResponse();
      //expect(instance).to.be();
    });

    it('should have the property quietTime (base name: "QuietTime")', function() {
      // uncomment below and update the code to test the property quietTime
      //var instance = new AmazonPinpoint.JourneyResponse();
      //expect(instance).to.be();
    });

    it('should have the property refreshFrequency (base name: "RefreshFrequency")', function() {
      // uncomment below and update the code to test the property refreshFrequency
      //var instance = new AmazonPinpoint.JourneyResponse();
      //expect(instance).to.be();
    });

    it('should have the property schedule (base name: "Schedule")', function() {
      // uncomment below and update the code to test the property schedule
      //var instance = new AmazonPinpoint.JourneyResponse();
      //expect(instance).to.be();
    });

    it('should have the property startActivity (base name: "StartActivity")', function() {
      // uncomment below and update the code to test the property startActivity
      //var instance = new AmazonPinpoint.JourneyResponse();
      //expect(instance).to.be();
    });

    it('should have the property startCondition (base name: "StartCondition")', function() {
      // uncomment below and update the code to test the property startCondition
      //var instance = new AmazonPinpoint.JourneyResponse();
      //expect(instance).to.be();
    });

    it('should have the property state (base name: "State")', function() {
      // uncomment below and update the code to test the property state
      //var instance = new AmazonPinpoint.JourneyResponse();
      //expect(instance).to.be();
    });

    it('should have the property tags (base name: "tags")', function() {
      // uncomment below and update the code to test the property tags
      //var instance = new AmazonPinpoint.JourneyResponse();
      //expect(instance).to.be();
    });

    it('should have the property waitForQuietTime (base name: "WaitForQuietTime")', function() {
      // uncomment below and update the code to test the property waitForQuietTime
      //var instance = new AmazonPinpoint.JourneyResponse();
      //expect(instance).to.be();
    });

    it('should have the property refreshOnSegmentUpdate (base name: "RefreshOnSegmentUpdate")', function() {
      // uncomment below and update the code to test the property refreshOnSegmentUpdate
      //var instance = new AmazonPinpoint.JourneyResponse();
      //expect(instance).to.be();
    });

    it('should have the property journeyChannelSettings (base name: "JourneyChannelSettings")', function() {
      // uncomment below and update the code to test the property journeyChannelSettings
      //var instance = new AmazonPinpoint.JourneyResponse();
      //expect(instance).to.be();
    });

    it('should have the property sendingSchedule (base name: "SendingSchedule")', function() {
      // uncomment below and update the code to test the property sendingSchedule
      //var instance = new AmazonPinpoint.JourneyResponse();
      //expect(instance).to.be();
    });

    it('should have the property openHours (base name: "OpenHours")', function() {
      // uncomment below and update the code to test the property openHours
      //var instance = new AmazonPinpoint.JourneyResponse();
      //expect(instance).to.be();
    });

    it('should have the property closedDays (base name: "ClosedDays")', function() {
      // uncomment below and update the code to test the property closedDays
      //var instance = new AmazonPinpoint.JourneyResponse();
      //expect(instance).to.be();
    });

    it('should have the property timezoneEstimationMethods (base name: "TimezoneEstimationMethods")', function() {
      // uncomment below and update the code to test the property timezoneEstimationMethods
      //var instance = new AmazonPinpoint.JourneyResponse();
      //expect(instance).to.be();
    });

  });

}));
