/**
 * Amazon Pinpoint
 * Doc Engage API - Amazon Pinpoint API
 *
 * The version of the OpenAPI document: 2016-12-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIJobStatus.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIJobStatus::OAIJobStatus(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIJobStatus::OAIJobStatus() {
    this->initializeModel();
}

OAIJobStatus::~OAIJobStatus() {}

void OAIJobStatus::initializeModel() {

    m_value_isSet = false;
    m_value_isValid = false;
    m_value = eOAIJobStatus::INVALID_VALUE_OPENAPI_GENERATED;
}

void OAIJobStatus::fromJson(QString jsonString) {
    
    if ( jsonString.compare("CREATED", Qt::CaseInsensitive) == 0) {
        m_value = eOAIJobStatus::CREATED;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("PREPARING_FOR_INITIALIZATION", Qt::CaseInsensitive) == 0) {
        m_value = eOAIJobStatus::PREPARING_FOR_INITIALIZATION;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("INITIALIZING", Qt::CaseInsensitive) == 0) {
        m_value = eOAIJobStatus::INITIALIZING;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("PROCESSING", Qt::CaseInsensitive) == 0) {
        m_value = eOAIJobStatus::PROCESSING;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("PENDING_JOB", Qt::CaseInsensitive) == 0) {
        m_value = eOAIJobStatus::PENDING_JOB;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("COMPLETING", Qt::CaseInsensitive) == 0) {
        m_value = eOAIJobStatus::COMPLETING;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("COMPLETED", Qt::CaseInsensitive) == 0) {
        m_value = eOAIJobStatus::COMPLETED;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("FAILING", Qt::CaseInsensitive) == 0) {
        m_value = eOAIJobStatus::FAILING;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("FAILED", Qt::CaseInsensitive) == 0) {
        m_value = eOAIJobStatus::FAILED;
        m_value_isSet = m_value_isValid = true;
    }
}

void OAIJobStatus::fromJsonValue(QJsonValue json) {
fromJson(json.toString());
}

QString OAIJobStatus::asJson() const {
    
    QString val;
    switch (m_value){
        case eOAIJobStatus::CREATED:
            val = "CREATED";
            break;
        case eOAIJobStatus::PREPARING_FOR_INITIALIZATION:
            val = "PREPARING_FOR_INITIALIZATION";
            break;
        case eOAIJobStatus::INITIALIZING:
            val = "INITIALIZING";
            break;
        case eOAIJobStatus::PROCESSING:
            val = "PROCESSING";
            break;
        case eOAIJobStatus::PENDING_JOB:
            val = "PENDING_JOB";
            break;
        case eOAIJobStatus::COMPLETING:
            val = "COMPLETING";
            break;
        case eOAIJobStatus::COMPLETED:
            val = "COMPLETED";
            break;
        case eOAIJobStatus::FAILING:
            val = "FAILING";
            break;
        case eOAIJobStatus::FAILED:
            val = "FAILED";
            break;
        default:
            break;
    }
    return val;
}

QJsonValue OAIJobStatus::asJsonValue() const {
    
    return QJsonValue(asJson());
}


OAIJobStatus::eOAIJobStatus OAIJobStatus::getValue() const {
    return m_value;
}

void OAIJobStatus::setValue(const OAIJobStatus::eOAIJobStatus& value){
    m_value = value;
    m_value_isSet = true;
}
bool OAIJobStatus::isSet() const {
    
    return m_value_isSet;
}

bool OAIJobStatus::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_value_isValid;
}

} // namespace OpenAPI
