/**
 * Amazon Pinpoint
 * Doc Engage API - Amazon Pinpoint API
 *
 * The version of the OpenAPI document: 2016-12-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAISendOTPMessage_request_SendOTPMessageRequestParameters.h
 *
 * Send OTP message request parameters.
 */

#ifndef OAISendOTPMessage_request_SendOTPMessageRequestParameters_H
#define OAISendOTPMessage_request_SendOTPMessageRequestParameters_H

#include <QJsonObject>

#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAISendOTPMessage_request_SendOTPMessageRequestParameters : public OAIObject {
public:
    OAISendOTPMessage_request_SendOTPMessageRequestParameters();
    OAISendOTPMessage_request_SendOTPMessageRequestParameters(QString json);
    ~OAISendOTPMessage_request_SendOTPMessageRequestParameters() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    qint32 getAllowedAttempts() const;
    void setAllowedAttempts(const qint32 &allowed_attempts);
    bool is_allowed_attempts_Set() const;
    bool is_allowed_attempts_Valid() const;

    QString getBrandName() const;
    void setBrandName(const QString &brand_name);
    bool is_brand_name_Set() const;
    bool is_brand_name_Valid() const;

    QString getChannel() const;
    void setChannel(const QString &channel);
    bool is_channel_Set() const;
    bool is_channel_Valid() const;

    qint32 getCodeLength() const;
    void setCodeLength(const qint32 &code_length);
    bool is_code_length_Set() const;
    bool is_code_length_Valid() const;

    QString getDestinationIdentity() const;
    void setDestinationIdentity(const QString &destination_identity);
    bool is_destination_identity_Set() const;
    bool is_destination_identity_Valid() const;

    QString getEntityId() const;
    void setEntityId(const QString &entity_id);
    bool is_entity_id_Set() const;
    bool is_entity_id_Valid() const;

    QString getLanguage() const;
    void setLanguage(const QString &language);
    bool is_language_Set() const;
    bool is_language_Valid() const;

    QString getOriginationIdentity() const;
    void setOriginationIdentity(const QString &origination_identity);
    bool is_origination_identity_Set() const;
    bool is_origination_identity_Valid() const;

    QString getReferenceId() const;
    void setReferenceId(const QString &reference_id);
    bool is_reference_id_Set() const;
    bool is_reference_id_Valid() const;

    QString getTemplateId() const;
    void setTemplateId(const QString &template_id);
    bool is_template_id_Set() const;
    bool is_template_id_Valid() const;

    qint32 getValidityPeriod() const;
    void setValidityPeriod(const qint32 &validity_period);
    bool is_validity_period_Set() const;
    bool is_validity_period_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    qint32 m_allowed_attempts;
    bool m_allowed_attempts_isSet;
    bool m_allowed_attempts_isValid;

    QString m_brand_name;
    bool m_brand_name_isSet;
    bool m_brand_name_isValid;

    QString m_channel;
    bool m_channel_isSet;
    bool m_channel_isValid;

    qint32 m_code_length;
    bool m_code_length_isSet;
    bool m_code_length_isValid;

    QString m_destination_identity;
    bool m_destination_identity_isSet;
    bool m_destination_identity_isValid;

    QString m_entity_id;
    bool m_entity_id_isSet;
    bool m_entity_id_isValid;

    QString m_language;
    bool m_language_isSet;
    bool m_language_isValid;

    QString m_origination_identity;
    bool m_origination_identity_isSet;
    bool m_origination_identity_isValid;

    QString m_reference_id;
    bool m_reference_id_isSet;
    bool m_reference_id_isValid;

    QString m_template_id;
    bool m_template_id_isSet;
    bool m_template_id_isValid;

    qint32 m_validity_period;
    bool m_validity_period_isSet;
    bool m_validity_period_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAISendOTPMessage_request_SendOTPMessageRequestParameters)

#endif // OAISendOTPMessage_request_SendOTPMessageRequestParameters_H
