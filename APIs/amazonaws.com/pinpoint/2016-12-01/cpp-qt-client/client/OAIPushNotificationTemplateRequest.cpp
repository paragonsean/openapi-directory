/**
 * Amazon Pinpoint
 * Doc Engage API - Amazon Pinpoint API
 *
 * The version of the OpenAPI document: 2016-12-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIPushNotificationTemplateRequest.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIPushNotificationTemplateRequest::OAIPushNotificationTemplateRequest(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIPushNotificationTemplateRequest::OAIPushNotificationTemplateRequest() {
    this->initializeModel();
}

OAIPushNotificationTemplateRequest::~OAIPushNotificationTemplateRequest() {}

void OAIPushNotificationTemplateRequest::initializeModel() {

    m_adm_isSet = false;
    m_adm_isValid = false;

    m_apns_isSet = false;
    m_apns_isValid = false;

    m_baidu_isSet = false;
    m_baidu_isValid = false;

    m_r_default_isSet = false;
    m_r_default_isValid = false;

    m_default_substitutions_isSet = false;
    m_default_substitutions_isValid = false;

    m_gcm_isSet = false;
    m_gcm_isValid = false;

    m_recommender_id_isSet = false;
    m_recommender_id_isValid = false;

    m_tags_isSet = false;
    m_tags_isValid = false;

    m_template_description_isSet = false;
    m_template_description_isValid = false;
}

void OAIPushNotificationTemplateRequest::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIPushNotificationTemplateRequest::fromJsonObject(QJsonObject json) {

    m_adm_isValid = ::OpenAPI::fromJsonValue(m_adm, json[QString("ADM")]);
    m_adm_isSet = !json[QString("ADM")].isNull() && m_adm_isValid;

    m_apns_isValid = ::OpenAPI::fromJsonValue(m_apns, json[QString("APNS")]);
    m_apns_isSet = !json[QString("APNS")].isNull() && m_apns_isValid;

    m_baidu_isValid = ::OpenAPI::fromJsonValue(m_baidu, json[QString("Baidu")]);
    m_baidu_isSet = !json[QString("Baidu")].isNull() && m_baidu_isValid;

    m_r_default_isValid = ::OpenAPI::fromJsonValue(m_r_default, json[QString("Default")]);
    m_r_default_isSet = !json[QString("Default")].isNull() && m_r_default_isValid;

    m_default_substitutions_isValid = ::OpenAPI::fromJsonValue(m_default_substitutions, json[QString("DefaultSubstitutions")]);
    m_default_substitutions_isSet = !json[QString("DefaultSubstitutions")].isNull() && m_default_substitutions_isValid;

    m_gcm_isValid = ::OpenAPI::fromJsonValue(m_gcm, json[QString("GCM")]);
    m_gcm_isSet = !json[QString("GCM")].isNull() && m_gcm_isValid;

    m_recommender_id_isValid = ::OpenAPI::fromJsonValue(m_recommender_id, json[QString("RecommenderId")]);
    m_recommender_id_isSet = !json[QString("RecommenderId")].isNull() && m_recommender_id_isValid;

    m_tags_isValid = ::OpenAPI::fromJsonValue(m_tags, json[QString("tags")]);
    m_tags_isSet = !json[QString("tags")].isNull() && m_tags_isValid;

    m_template_description_isValid = ::OpenAPI::fromJsonValue(m_template_description, json[QString("TemplateDescription")]);
    m_template_description_isSet = !json[QString("TemplateDescription")].isNull() && m_template_description_isValid;
}

QString OAIPushNotificationTemplateRequest::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIPushNotificationTemplateRequest::asJsonObject() const {
    QJsonObject obj;
    if (m_adm.isSet()) {
        obj.insert(QString("ADM"), ::OpenAPI::toJsonValue(m_adm));
    }
    if (m_apns.isSet()) {
        obj.insert(QString("APNS"), ::OpenAPI::toJsonValue(m_apns));
    }
    if (m_baidu.isSet()) {
        obj.insert(QString("Baidu"), ::OpenAPI::toJsonValue(m_baidu));
    }
    if (m_r_default.isSet()) {
        obj.insert(QString("Default"), ::OpenAPI::toJsonValue(m_r_default));
    }
    if (m_default_substitutions_isSet) {
        obj.insert(QString("DefaultSubstitutions"), ::OpenAPI::toJsonValue(m_default_substitutions));
    }
    if (m_gcm.isSet()) {
        obj.insert(QString("GCM"), ::OpenAPI::toJsonValue(m_gcm));
    }
    if (m_recommender_id_isSet) {
        obj.insert(QString("RecommenderId"), ::OpenAPI::toJsonValue(m_recommender_id));
    }
    if (m_tags.isSet()) {
        obj.insert(QString("tags"), ::OpenAPI::toJsonValue(m_tags));
    }
    if (m_template_description_isSet) {
        obj.insert(QString("TemplateDescription"), ::OpenAPI::toJsonValue(m_template_description));
    }
    return obj;
}

OAIUpdatePushTemplate_request_PushNotificationTemplateRequest_ADM OAIPushNotificationTemplateRequest::getAdm() const {
    return m_adm;
}
void OAIPushNotificationTemplateRequest::setAdm(const OAIUpdatePushTemplate_request_PushNotificationTemplateRequest_ADM &adm) {
    m_adm = adm;
    m_adm_isSet = true;
}

bool OAIPushNotificationTemplateRequest::is_adm_Set() const{
    return m_adm_isSet;
}

bool OAIPushNotificationTemplateRequest::is_adm_Valid() const{
    return m_adm_isValid;
}

OAIUpdatePushTemplate_request_PushNotificationTemplateRequest_APNS OAIPushNotificationTemplateRequest::getApns() const {
    return m_apns;
}
void OAIPushNotificationTemplateRequest::setApns(const OAIUpdatePushTemplate_request_PushNotificationTemplateRequest_APNS &apns) {
    m_apns = apns;
    m_apns_isSet = true;
}

bool OAIPushNotificationTemplateRequest::is_apns_Set() const{
    return m_apns_isSet;
}

bool OAIPushNotificationTemplateRequest::is_apns_Valid() const{
    return m_apns_isValid;
}

OAIUpdatePushTemplate_request_PushNotificationTemplateRequest_Baidu OAIPushNotificationTemplateRequest::getBaidu() const {
    return m_baidu;
}
void OAIPushNotificationTemplateRequest::setBaidu(const OAIUpdatePushTemplate_request_PushNotificationTemplateRequest_Baidu &baidu) {
    m_baidu = baidu;
    m_baidu_isSet = true;
}

bool OAIPushNotificationTemplateRequest::is_baidu_Set() const{
    return m_baidu_isSet;
}

bool OAIPushNotificationTemplateRequest::is_baidu_Valid() const{
    return m_baidu_isValid;
}

OAIUpdatePushTemplate_request_PushNotificationTemplateRequest_Default OAIPushNotificationTemplateRequest::getRDefault() const {
    return m_r_default;
}
void OAIPushNotificationTemplateRequest::setRDefault(const OAIUpdatePushTemplate_request_PushNotificationTemplateRequest_Default &r_default) {
    m_r_default = r_default;
    m_r_default_isSet = true;
}

bool OAIPushNotificationTemplateRequest::is_r_default_Set() const{
    return m_r_default_isSet;
}

bool OAIPushNotificationTemplateRequest::is_r_default_Valid() const{
    return m_r_default_isValid;
}

QString OAIPushNotificationTemplateRequest::getDefaultSubstitutions() const {
    return m_default_substitutions;
}
void OAIPushNotificationTemplateRequest::setDefaultSubstitutions(const QString &default_substitutions) {
    m_default_substitutions = default_substitutions;
    m_default_substitutions_isSet = true;
}

bool OAIPushNotificationTemplateRequest::is_default_substitutions_Set() const{
    return m_default_substitutions_isSet;
}

bool OAIPushNotificationTemplateRequest::is_default_substitutions_Valid() const{
    return m_default_substitutions_isValid;
}

OAIUpdatePushTemplate_request_PushNotificationTemplateRequest_GCM OAIPushNotificationTemplateRequest::getGcm() const {
    return m_gcm;
}
void OAIPushNotificationTemplateRequest::setGcm(const OAIUpdatePushTemplate_request_PushNotificationTemplateRequest_GCM &gcm) {
    m_gcm = gcm;
    m_gcm_isSet = true;
}

bool OAIPushNotificationTemplateRequest::is_gcm_Set() const{
    return m_gcm_isSet;
}

bool OAIPushNotificationTemplateRequest::is_gcm_Valid() const{
    return m_gcm_isValid;
}

QString OAIPushNotificationTemplateRequest::getRecommenderId() const {
    return m_recommender_id;
}
void OAIPushNotificationTemplateRequest::setRecommenderId(const QString &recommender_id) {
    m_recommender_id = recommender_id;
    m_recommender_id_isSet = true;
}

bool OAIPushNotificationTemplateRequest::is_recommender_id_Set() const{
    return m_recommender_id_isSet;
}

bool OAIPushNotificationTemplateRequest::is_recommender_id_Valid() const{
    return m_recommender_id_isValid;
}

QMap OAIPushNotificationTemplateRequest::getTags() const {
    return m_tags;
}
void OAIPushNotificationTemplateRequest::setTags(const QMap &tags) {
    m_tags = tags;
    m_tags_isSet = true;
}

bool OAIPushNotificationTemplateRequest::is_tags_Set() const{
    return m_tags_isSet;
}

bool OAIPushNotificationTemplateRequest::is_tags_Valid() const{
    return m_tags_isValid;
}

QString OAIPushNotificationTemplateRequest::getTemplateDescription() const {
    return m_template_description;
}
void OAIPushNotificationTemplateRequest::setTemplateDescription(const QString &template_description) {
    m_template_description = template_description;
    m_template_description_isSet = true;
}

bool OAIPushNotificationTemplateRequest::is_template_description_Set() const{
    return m_template_description_isSet;
}

bool OAIPushNotificationTemplateRequest::is_template_description_Valid() const{
    return m_template_description_isValid;
}

bool OAIPushNotificationTemplateRequest::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_adm.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_apns.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_baidu.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_r_default.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_default_substitutions_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_gcm.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_recommender_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_tags.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_template_description_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIPushNotificationTemplateRequest::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
