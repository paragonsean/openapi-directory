/**
 * Amazon Pinpoint
 * Doc Engage API - Amazon Pinpoint API
 *
 * The version of the OpenAPI document: 2016-12-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAINumberValidateResponse.h
 *
 * Provides information about a phone number.
 */

#ifndef OAINumberValidateResponse_H
#define OAINumberValidateResponse_H

#include <QJsonObject>

#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAINumberValidateResponse : public OAIObject {
public:
    OAINumberValidateResponse();
    OAINumberValidateResponse(QString json);
    ~OAINumberValidateResponse() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getCarrier() const;
    void setCarrier(const QString &carrier);
    bool is_carrier_Set() const;
    bool is_carrier_Valid() const;

    QString getCity() const;
    void setCity(const QString &city);
    bool is_city_Set() const;
    bool is_city_Valid() const;

    QString getCleansedPhoneNumberE164() const;
    void setCleansedPhoneNumberE164(const QString &cleansed_phone_number_e164);
    bool is_cleansed_phone_number_e164_Set() const;
    bool is_cleansed_phone_number_e164_Valid() const;

    QString getCleansedPhoneNumberNational() const;
    void setCleansedPhoneNumberNational(const QString &cleansed_phone_number_national);
    bool is_cleansed_phone_number_national_Set() const;
    bool is_cleansed_phone_number_national_Valid() const;

    QString getCountry() const;
    void setCountry(const QString &country);
    bool is_country_Set() const;
    bool is_country_Valid() const;

    QString getCountryCodeIso2() const;
    void setCountryCodeIso2(const QString &country_code_iso2);
    bool is_country_code_iso2_Set() const;
    bool is_country_code_iso2_Valid() const;

    QString getCountryCodeNumeric() const;
    void setCountryCodeNumeric(const QString &country_code_numeric);
    bool is_country_code_numeric_Set() const;
    bool is_country_code_numeric_Valid() const;

    QString getCounty() const;
    void setCounty(const QString &county);
    bool is_county_Set() const;
    bool is_county_Valid() const;

    QString getOriginalCountryCodeIso2() const;
    void setOriginalCountryCodeIso2(const QString &original_country_code_iso2);
    bool is_original_country_code_iso2_Set() const;
    bool is_original_country_code_iso2_Valid() const;

    QString getOriginalPhoneNumber() const;
    void setOriginalPhoneNumber(const QString &original_phone_number);
    bool is_original_phone_number_Set() const;
    bool is_original_phone_number_Valid() const;

    QString getPhoneType() const;
    void setPhoneType(const QString &phone_type);
    bool is_phone_type_Set() const;
    bool is_phone_type_Valid() const;

    qint32 getPhoneTypeCode() const;
    void setPhoneTypeCode(const qint32 &phone_type_code);
    bool is_phone_type_code_Set() const;
    bool is_phone_type_code_Valid() const;

    QString getTimezone() const;
    void setTimezone(const QString &timezone);
    bool is_timezone_Set() const;
    bool is_timezone_Valid() const;

    QString getZipCode() const;
    void setZipCode(const QString &zip_code);
    bool is_zip_code_Set() const;
    bool is_zip_code_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_carrier;
    bool m_carrier_isSet;
    bool m_carrier_isValid;

    QString m_city;
    bool m_city_isSet;
    bool m_city_isValid;

    QString m_cleansed_phone_number_e164;
    bool m_cleansed_phone_number_e164_isSet;
    bool m_cleansed_phone_number_e164_isValid;

    QString m_cleansed_phone_number_national;
    bool m_cleansed_phone_number_national_isSet;
    bool m_cleansed_phone_number_national_isValid;

    QString m_country;
    bool m_country_isSet;
    bool m_country_isValid;

    QString m_country_code_iso2;
    bool m_country_code_iso2_isSet;
    bool m_country_code_iso2_isValid;

    QString m_country_code_numeric;
    bool m_country_code_numeric_isSet;
    bool m_country_code_numeric_isValid;

    QString m_county;
    bool m_county_isSet;
    bool m_county_isValid;

    QString m_original_country_code_iso2;
    bool m_original_country_code_iso2_isSet;
    bool m_original_country_code_iso2_isValid;

    QString m_original_phone_number;
    bool m_original_phone_number_isSet;
    bool m_original_phone_number_isValid;

    QString m_phone_type;
    bool m_phone_type_isSet;
    bool m_phone_type_isValid;

    qint32 m_phone_type_code;
    bool m_phone_type_code_isSet;
    bool m_phone_type_code_isValid;

    QString m_timezone;
    bool m_timezone_isSet;
    bool m_timezone_isValid;

    QString m_zip_code;
    bool m_zip_code_isSet;
    bool m_zip_code_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAINumberValidateResponse)

#endif // OAINumberValidateResponse_H
