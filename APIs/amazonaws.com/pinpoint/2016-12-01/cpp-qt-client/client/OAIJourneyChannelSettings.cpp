/**
 * Amazon Pinpoint
 * Doc Engage API - Amazon Pinpoint API
 *
 * The version of the OpenAPI document: 2016-12-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIJourneyChannelSettings.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIJourneyChannelSettings::OAIJourneyChannelSettings(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIJourneyChannelSettings::OAIJourneyChannelSettings() {
    this->initializeModel();
}

OAIJourneyChannelSettings::~OAIJourneyChannelSettings() {}

void OAIJourneyChannelSettings::initializeModel() {

    m_connect_campaign_arn_isSet = false;
    m_connect_campaign_arn_isValid = false;

    m_connect_campaign_execution_role_arn_isSet = false;
    m_connect_campaign_execution_role_arn_isValid = false;
}

void OAIJourneyChannelSettings::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIJourneyChannelSettings::fromJsonObject(QJsonObject json) {

    m_connect_campaign_arn_isValid = ::OpenAPI::fromJsonValue(m_connect_campaign_arn, json[QString("ConnectCampaignArn")]);
    m_connect_campaign_arn_isSet = !json[QString("ConnectCampaignArn")].isNull() && m_connect_campaign_arn_isValid;

    m_connect_campaign_execution_role_arn_isValid = ::OpenAPI::fromJsonValue(m_connect_campaign_execution_role_arn, json[QString("ConnectCampaignExecutionRoleArn")]);
    m_connect_campaign_execution_role_arn_isSet = !json[QString("ConnectCampaignExecutionRoleArn")].isNull() && m_connect_campaign_execution_role_arn_isValid;
}

QString OAIJourneyChannelSettings::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIJourneyChannelSettings::asJsonObject() const {
    QJsonObject obj;
    if (m_connect_campaign_arn_isSet) {
        obj.insert(QString("ConnectCampaignArn"), ::OpenAPI::toJsonValue(m_connect_campaign_arn));
    }
    if (m_connect_campaign_execution_role_arn_isSet) {
        obj.insert(QString("ConnectCampaignExecutionRoleArn"), ::OpenAPI::toJsonValue(m_connect_campaign_execution_role_arn));
    }
    return obj;
}

QString OAIJourneyChannelSettings::getConnectCampaignArn() const {
    return m_connect_campaign_arn;
}
void OAIJourneyChannelSettings::setConnectCampaignArn(const QString &connect_campaign_arn) {
    m_connect_campaign_arn = connect_campaign_arn;
    m_connect_campaign_arn_isSet = true;
}

bool OAIJourneyChannelSettings::is_connect_campaign_arn_Set() const{
    return m_connect_campaign_arn_isSet;
}

bool OAIJourneyChannelSettings::is_connect_campaign_arn_Valid() const{
    return m_connect_campaign_arn_isValid;
}

QString OAIJourneyChannelSettings::getConnectCampaignExecutionRoleArn() const {
    return m_connect_campaign_execution_role_arn;
}
void OAIJourneyChannelSettings::setConnectCampaignExecutionRoleArn(const QString &connect_campaign_execution_role_arn) {
    m_connect_campaign_execution_role_arn = connect_campaign_execution_role_arn;
    m_connect_campaign_execution_role_arn_isSet = true;
}

bool OAIJourneyChannelSettings::is_connect_campaign_execution_role_arn_Set() const{
    return m_connect_campaign_execution_role_arn_isSet;
}

bool OAIJourneyChannelSettings::is_connect_campaign_execution_role_arn_Valid() const{
    return m_connect_campaign_execution_role_arn_isValid;
}

bool OAIJourneyChannelSettings::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_connect_campaign_arn_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_connect_campaign_execution_role_arn_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIJourneyChannelSettings::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
