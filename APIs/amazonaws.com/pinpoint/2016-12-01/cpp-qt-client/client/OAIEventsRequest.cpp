/**
 * Amazon Pinpoint
 * Doc Engage API - Amazon Pinpoint API
 *
 * The version of the OpenAPI document: 2016-12-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIEventsRequest.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIEventsRequest::OAIEventsRequest(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIEventsRequest::OAIEventsRequest() {
    this->initializeModel();
}

OAIEventsRequest::~OAIEventsRequest() {}

void OAIEventsRequest::initializeModel() {

    m_batch_item_isSet = false;
    m_batch_item_isValid = false;
}

void OAIEventsRequest::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIEventsRequest::fromJsonObject(QJsonObject json) {

    m_batch_item_isValid = ::OpenAPI::fromJsonValue(m_batch_item, json[QString("BatchItem")]);
    m_batch_item_isSet = !json[QString("BatchItem")].isNull() && m_batch_item_isValid;
}

QString OAIEventsRequest::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIEventsRequest::asJsonObject() const {
    QJsonObject obj;
    if (m_batch_item.isSet()) {
        obj.insert(QString("BatchItem"), ::OpenAPI::toJsonValue(m_batch_item));
    }
    return obj;
}

QMap OAIEventsRequest::getBatchItem() const {
    return m_batch_item;
}
void OAIEventsRequest::setBatchItem(const QMap &batch_item) {
    m_batch_item = batch_item;
    m_batch_item_isSet = true;
}

bool OAIEventsRequest::is_batch_item_Set() const{
    return m_batch_item_isSet;
}

bool OAIEventsRequest::is_batch_item_Valid() const{
    return m_batch_item_isValid;
}

bool OAIEventsRequest::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_batch_item.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIEventsRequest::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_batch_item_isValid && true;
}

} // namespace OpenAPI
