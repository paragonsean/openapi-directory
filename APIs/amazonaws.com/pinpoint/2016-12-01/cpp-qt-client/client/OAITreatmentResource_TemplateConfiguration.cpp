/**
 * Amazon Pinpoint
 * Doc Engage API - Amazon Pinpoint API
 *
 * The version of the OpenAPI document: 2016-12-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAITreatmentResource_TemplateConfiguration.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAITreatmentResource_TemplateConfiguration::OAITreatmentResource_TemplateConfiguration(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAITreatmentResource_TemplateConfiguration::OAITreatmentResource_TemplateConfiguration() {
    this->initializeModel();
}

OAITreatmentResource_TemplateConfiguration::~OAITreatmentResource_TemplateConfiguration() {}

void OAITreatmentResource_TemplateConfiguration::initializeModel() {

    m_email_template_isSet = false;
    m_email_template_isValid = false;

    m_push_template_isSet = false;
    m_push_template_isValid = false;

    m_sms_template_isSet = false;
    m_sms_template_isValid = false;

    m_voice_template_isSet = false;
    m_voice_template_isValid = false;

    m_in_app_template_isSet = false;
    m_in_app_template_isValid = false;
}

void OAITreatmentResource_TemplateConfiguration::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAITreatmentResource_TemplateConfiguration::fromJsonObject(QJsonObject json) {

    m_email_template_isValid = ::OpenAPI::fromJsonValue(m_email_template, json[QString("EmailTemplate")]);
    m_email_template_isSet = !json[QString("EmailTemplate")].isNull() && m_email_template_isValid;

    m_push_template_isValid = ::OpenAPI::fromJsonValue(m_push_template, json[QString("PushTemplate")]);
    m_push_template_isSet = !json[QString("PushTemplate")].isNull() && m_push_template_isValid;

    m_sms_template_isValid = ::OpenAPI::fromJsonValue(m_sms_template, json[QString("SMSTemplate")]);
    m_sms_template_isSet = !json[QString("SMSTemplate")].isNull() && m_sms_template_isValid;

    m_voice_template_isValid = ::OpenAPI::fromJsonValue(m_voice_template, json[QString("VoiceTemplate")]);
    m_voice_template_isSet = !json[QString("VoiceTemplate")].isNull() && m_voice_template_isValid;

    m_in_app_template_isValid = ::OpenAPI::fromJsonValue(m_in_app_template, json[QString("InAppTemplate")]);
    m_in_app_template_isSet = !json[QString("InAppTemplate")].isNull() && m_in_app_template_isValid;
}

QString OAITreatmentResource_TemplateConfiguration::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAITreatmentResource_TemplateConfiguration::asJsonObject() const {
    QJsonObject obj;
    if (m_email_template.isSet()) {
        obj.insert(QString("EmailTemplate"), ::OpenAPI::toJsonValue(m_email_template));
    }
    if (m_push_template.isSet()) {
        obj.insert(QString("PushTemplate"), ::OpenAPI::toJsonValue(m_push_template));
    }
    if (m_sms_template.isSet()) {
        obj.insert(QString("SMSTemplate"), ::OpenAPI::toJsonValue(m_sms_template));
    }
    if (m_voice_template.isSet()) {
        obj.insert(QString("VoiceTemplate"), ::OpenAPI::toJsonValue(m_voice_template));
    }
    if (m_in_app_template.isSet()) {
        obj.insert(QString("InAppTemplate"), ::OpenAPI::toJsonValue(m_in_app_template));
    }
    return obj;
}

OAITemplateConfiguration_EmailTemplate OAITreatmentResource_TemplateConfiguration::getEmailTemplate() const {
    return m_email_template;
}
void OAITreatmentResource_TemplateConfiguration::setEmailTemplate(const OAITemplateConfiguration_EmailTemplate &email_template) {
    m_email_template = email_template;
    m_email_template_isSet = true;
}

bool OAITreatmentResource_TemplateConfiguration::is_email_template_Set() const{
    return m_email_template_isSet;
}

bool OAITreatmentResource_TemplateConfiguration::is_email_template_Valid() const{
    return m_email_template_isValid;
}

OAITemplateConfiguration_PushTemplate OAITreatmentResource_TemplateConfiguration::getPushTemplate() const {
    return m_push_template;
}
void OAITreatmentResource_TemplateConfiguration::setPushTemplate(const OAITemplateConfiguration_PushTemplate &push_template) {
    m_push_template = push_template;
    m_push_template_isSet = true;
}

bool OAITreatmentResource_TemplateConfiguration::is_push_template_Set() const{
    return m_push_template_isSet;
}

bool OAITreatmentResource_TemplateConfiguration::is_push_template_Valid() const{
    return m_push_template_isValid;
}

OAITemplateConfiguration_SMSTemplate OAITreatmentResource_TemplateConfiguration::getSmsTemplate() const {
    return m_sms_template;
}
void OAITreatmentResource_TemplateConfiguration::setSmsTemplate(const OAITemplateConfiguration_SMSTemplate &sms_template) {
    m_sms_template = sms_template;
    m_sms_template_isSet = true;
}

bool OAITreatmentResource_TemplateConfiguration::is_sms_template_Set() const{
    return m_sms_template_isSet;
}

bool OAITreatmentResource_TemplateConfiguration::is_sms_template_Valid() const{
    return m_sms_template_isValid;
}

OAITemplateConfiguration_VoiceTemplate OAITreatmentResource_TemplateConfiguration::getVoiceTemplate() const {
    return m_voice_template;
}
void OAITreatmentResource_TemplateConfiguration::setVoiceTemplate(const OAITemplateConfiguration_VoiceTemplate &voice_template) {
    m_voice_template = voice_template;
    m_voice_template_isSet = true;
}

bool OAITreatmentResource_TemplateConfiguration::is_voice_template_Set() const{
    return m_voice_template_isSet;
}

bool OAITreatmentResource_TemplateConfiguration::is_voice_template_Valid() const{
    return m_voice_template_isValid;
}

OAITemplateConfiguration_InAppTemplate OAITreatmentResource_TemplateConfiguration::getInAppTemplate() const {
    return m_in_app_template;
}
void OAITreatmentResource_TemplateConfiguration::setInAppTemplate(const OAITemplateConfiguration_InAppTemplate &in_app_template) {
    m_in_app_template = in_app_template;
    m_in_app_template_isSet = true;
}

bool OAITreatmentResource_TemplateConfiguration::is_in_app_template_Set() const{
    return m_in_app_template_isSet;
}

bool OAITreatmentResource_TemplateConfiguration::is_in_app_template_Valid() const{
    return m_in_app_template_isValid;
}

bool OAITreatmentResource_TemplateConfiguration::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_email_template.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_push_template.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_sms_template.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_voice_template.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_in_app_template.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAITreatmentResource_TemplateConfiguration::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
