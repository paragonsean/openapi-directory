/**
 * Amazon Pinpoint
 * Doc Engage API - Amazon Pinpoint API
 *
 * The version of the OpenAPI document: 2016-12-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIVoiceTemplateResponse.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIVoiceTemplateResponse::OAIVoiceTemplateResponse(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIVoiceTemplateResponse::OAIVoiceTemplateResponse() {
    this->initializeModel();
}

OAIVoiceTemplateResponse::~OAIVoiceTemplateResponse() {}

void OAIVoiceTemplateResponse::initializeModel() {

    m_arn_isSet = false;
    m_arn_isValid = false;

    m_body_isSet = false;
    m_body_isValid = false;

    m_creation_date_isSet = false;
    m_creation_date_isValid = false;

    m_default_substitutions_isSet = false;
    m_default_substitutions_isValid = false;

    m_language_code_isSet = false;
    m_language_code_isValid = false;

    m_last_modified_date_isSet = false;
    m_last_modified_date_isValid = false;

    m_tags_isSet = false;
    m_tags_isValid = false;

    m_template_description_isSet = false;
    m_template_description_isValid = false;

    m_template_name_isSet = false;
    m_template_name_isValid = false;

    m_template_type_isSet = false;
    m_template_type_isValid = false;

    m_version_isSet = false;
    m_version_isValid = false;

    m_voice_id_isSet = false;
    m_voice_id_isValid = false;
}

void OAIVoiceTemplateResponse::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIVoiceTemplateResponse::fromJsonObject(QJsonObject json) {

    m_arn_isValid = ::OpenAPI::fromJsonValue(m_arn, json[QString("Arn")]);
    m_arn_isSet = !json[QString("Arn")].isNull() && m_arn_isValid;

    m_body_isValid = ::OpenAPI::fromJsonValue(m_body, json[QString("Body")]);
    m_body_isSet = !json[QString("Body")].isNull() && m_body_isValid;

    m_creation_date_isValid = ::OpenAPI::fromJsonValue(m_creation_date, json[QString("CreationDate")]);
    m_creation_date_isSet = !json[QString("CreationDate")].isNull() && m_creation_date_isValid;

    m_default_substitutions_isValid = ::OpenAPI::fromJsonValue(m_default_substitutions, json[QString("DefaultSubstitutions")]);
    m_default_substitutions_isSet = !json[QString("DefaultSubstitutions")].isNull() && m_default_substitutions_isValid;

    m_language_code_isValid = ::OpenAPI::fromJsonValue(m_language_code, json[QString("LanguageCode")]);
    m_language_code_isSet = !json[QString("LanguageCode")].isNull() && m_language_code_isValid;

    m_last_modified_date_isValid = ::OpenAPI::fromJsonValue(m_last_modified_date, json[QString("LastModifiedDate")]);
    m_last_modified_date_isSet = !json[QString("LastModifiedDate")].isNull() && m_last_modified_date_isValid;

    m_tags_isValid = ::OpenAPI::fromJsonValue(m_tags, json[QString("tags")]);
    m_tags_isSet = !json[QString("tags")].isNull() && m_tags_isValid;

    m_template_description_isValid = ::OpenAPI::fromJsonValue(m_template_description, json[QString("TemplateDescription")]);
    m_template_description_isSet = !json[QString("TemplateDescription")].isNull() && m_template_description_isValid;

    m_template_name_isValid = ::OpenAPI::fromJsonValue(m_template_name, json[QString("TemplateName")]);
    m_template_name_isSet = !json[QString("TemplateName")].isNull() && m_template_name_isValid;

    m_template_type_isValid = ::OpenAPI::fromJsonValue(m_template_type, json[QString("TemplateType")]);
    m_template_type_isSet = !json[QString("TemplateType")].isNull() && m_template_type_isValid;

    m_version_isValid = ::OpenAPI::fromJsonValue(m_version, json[QString("Version")]);
    m_version_isSet = !json[QString("Version")].isNull() && m_version_isValid;

    m_voice_id_isValid = ::OpenAPI::fromJsonValue(m_voice_id, json[QString("VoiceId")]);
    m_voice_id_isSet = !json[QString("VoiceId")].isNull() && m_voice_id_isValid;
}

QString OAIVoiceTemplateResponse::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIVoiceTemplateResponse::asJsonObject() const {
    QJsonObject obj;
    if (m_arn_isSet) {
        obj.insert(QString("Arn"), ::OpenAPI::toJsonValue(m_arn));
    }
    if (m_body_isSet) {
        obj.insert(QString("Body"), ::OpenAPI::toJsonValue(m_body));
    }
    if (m_creation_date_isSet) {
        obj.insert(QString("CreationDate"), ::OpenAPI::toJsonValue(m_creation_date));
    }
    if (m_default_substitutions_isSet) {
        obj.insert(QString("DefaultSubstitutions"), ::OpenAPI::toJsonValue(m_default_substitutions));
    }
    if (m_language_code_isSet) {
        obj.insert(QString("LanguageCode"), ::OpenAPI::toJsonValue(m_language_code));
    }
    if (m_last_modified_date_isSet) {
        obj.insert(QString("LastModifiedDate"), ::OpenAPI::toJsonValue(m_last_modified_date));
    }
    if (m_tags.isSet()) {
        obj.insert(QString("tags"), ::OpenAPI::toJsonValue(m_tags));
    }
    if (m_template_description_isSet) {
        obj.insert(QString("TemplateDescription"), ::OpenAPI::toJsonValue(m_template_description));
    }
    if (m_template_name_isSet) {
        obj.insert(QString("TemplateName"), ::OpenAPI::toJsonValue(m_template_name));
    }
    if (m_template_type.isSet()) {
        obj.insert(QString("TemplateType"), ::OpenAPI::toJsonValue(m_template_type));
    }
    if (m_version_isSet) {
        obj.insert(QString("Version"), ::OpenAPI::toJsonValue(m_version));
    }
    if (m_voice_id_isSet) {
        obj.insert(QString("VoiceId"), ::OpenAPI::toJsonValue(m_voice_id));
    }
    return obj;
}

QString OAIVoiceTemplateResponse::getArn() const {
    return m_arn;
}
void OAIVoiceTemplateResponse::setArn(const QString &arn) {
    m_arn = arn;
    m_arn_isSet = true;
}

bool OAIVoiceTemplateResponse::is_arn_Set() const{
    return m_arn_isSet;
}

bool OAIVoiceTemplateResponse::is_arn_Valid() const{
    return m_arn_isValid;
}

QString OAIVoiceTemplateResponse::getBody() const {
    return m_body;
}
void OAIVoiceTemplateResponse::setBody(const QString &body) {
    m_body = body;
    m_body_isSet = true;
}

bool OAIVoiceTemplateResponse::is_body_Set() const{
    return m_body_isSet;
}

bool OAIVoiceTemplateResponse::is_body_Valid() const{
    return m_body_isValid;
}

QString OAIVoiceTemplateResponse::getCreationDate() const {
    return m_creation_date;
}
void OAIVoiceTemplateResponse::setCreationDate(const QString &creation_date) {
    m_creation_date = creation_date;
    m_creation_date_isSet = true;
}

bool OAIVoiceTemplateResponse::is_creation_date_Set() const{
    return m_creation_date_isSet;
}

bool OAIVoiceTemplateResponse::is_creation_date_Valid() const{
    return m_creation_date_isValid;
}

QString OAIVoiceTemplateResponse::getDefaultSubstitutions() const {
    return m_default_substitutions;
}
void OAIVoiceTemplateResponse::setDefaultSubstitutions(const QString &default_substitutions) {
    m_default_substitutions = default_substitutions;
    m_default_substitutions_isSet = true;
}

bool OAIVoiceTemplateResponse::is_default_substitutions_Set() const{
    return m_default_substitutions_isSet;
}

bool OAIVoiceTemplateResponse::is_default_substitutions_Valid() const{
    return m_default_substitutions_isValid;
}

QString OAIVoiceTemplateResponse::getLanguageCode() const {
    return m_language_code;
}
void OAIVoiceTemplateResponse::setLanguageCode(const QString &language_code) {
    m_language_code = language_code;
    m_language_code_isSet = true;
}

bool OAIVoiceTemplateResponse::is_language_code_Set() const{
    return m_language_code_isSet;
}

bool OAIVoiceTemplateResponse::is_language_code_Valid() const{
    return m_language_code_isValid;
}

QString OAIVoiceTemplateResponse::getLastModifiedDate() const {
    return m_last_modified_date;
}
void OAIVoiceTemplateResponse::setLastModifiedDate(const QString &last_modified_date) {
    m_last_modified_date = last_modified_date;
    m_last_modified_date_isSet = true;
}

bool OAIVoiceTemplateResponse::is_last_modified_date_Set() const{
    return m_last_modified_date_isSet;
}

bool OAIVoiceTemplateResponse::is_last_modified_date_Valid() const{
    return m_last_modified_date_isValid;
}

QMap OAIVoiceTemplateResponse::getTags() const {
    return m_tags;
}
void OAIVoiceTemplateResponse::setTags(const QMap &tags) {
    m_tags = tags;
    m_tags_isSet = true;
}

bool OAIVoiceTemplateResponse::is_tags_Set() const{
    return m_tags_isSet;
}

bool OAIVoiceTemplateResponse::is_tags_Valid() const{
    return m_tags_isValid;
}

QString OAIVoiceTemplateResponse::getTemplateDescription() const {
    return m_template_description;
}
void OAIVoiceTemplateResponse::setTemplateDescription(const QString &template_description) {
    m_template_description = template_description;
    m_template_description_isSet = true;
}

bool OAIVoiceTemplateResponse::is_template_description_Set() const{
    return m_template_description_isSet;
}

bool OAIVoiceTemplateResponse::is_template_description_Valid() const{
    return m_template_description_isValid;
}

QString OAIVoiceTemplateResponse::getTemplateName() const {
    return m_template_name;
}
void OAIVoiceTemplateResponse::setTemplateName(const QString &template_name) {
    m_template_name = template_name;
    m_template_name_isSet = true;
}

bool OAIVoiceTemplateResponse::is_template_name_Set() const{
    return m_template_name_isSet;
}

bool OAIVoiceTemplateResponse::is_template_name_Valid() const{
    return m_template_name_isValid;
}

OAITemplateType OAIVoiceTemplateResponse::getTemplateType() const {
    return m_template_type;
}
void OAIVoiceTemplateResponse::setTemplateType(const OAITemplateType &template_type) {
    m_template_type = template_type;
    m_template_type_isSet = true;
}

bool OAIVoiceTemplateResponse::is_template_type_Set() const{
    return m_template_type_isSet;
}

bool OAIVoiceTemplateResponse::is_template_type_Valid() const{
    return m_template_type_isValid;
}

QString OAIVoiceTemplateResponse::getVersion() const {
    return m_version;
}
void OAIVoiceTemplateResponse::setVersion(const QString &version) {
    m_version = version;
    m_version_isSet = true;
}

bool OAIVoiceTemplateResponse::is_version_Set() const{
    return m_version_isSet;
}

bool OAIVoiceTemplateResponse::is_version_Valid() const{
    return m_version_isValid;
}

QString OAIVoiceTemplateResponse::getVoiceId() const {
    return m_voice_id;
}
void OAIVoiceTemplateResponse::setVoiceId(const QString &voice_id) {
    m_voice_id = voice_id;
    m_voice_id_isSet = true;
}

bool OAIVoiceTemplateResponse::is_voice_id_Set() const{
    return m_voice_id_isSet;
}

bool OAIVoiceTemplateResponse::is_voice_id_Valid() const{
    return m_voice_id_isValid;
}

bool OAIVoiceTemplateResponse::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_arn_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_body_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_creation_date_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_default_substitutions_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_language_code_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_last_modified_date_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_tags.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_template_description_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_template_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_template_type.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_version_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_voice_id_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIVoiceTemplateResponse::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_creation_date_isValid && m_last_modified_date_isValid && m_template_name_isValid && m_template_type_isValid && true;
}

} // namespace OpenAPI
