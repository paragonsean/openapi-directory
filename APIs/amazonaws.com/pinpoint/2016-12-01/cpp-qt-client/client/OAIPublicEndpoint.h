/**
 * Amazon Pinpoint
 * Doc Engage API - Amazon Pinpoint API
 *
 * The version of the OpenAPI document: 2016-12-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIPublicEndpoint.h
 *
 * Specifies the properties and attributes of an endpoint that&#39;s associated with an event.
 */

#ifndef OAIPublicEndpoint_H
#define OAIPublicEndpoint_H

#include <QJsonObject>

#include "OAIChannelType.h"
#include "OAIEndpointResponse_User.h"
#include "OAIUpdateEndpoint_request_EndpointRequest_Demographic.h"
#include "OAIUpdateEndpoint_request_EndpointRequest_Location.h"
#include <QMap>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIUpdateEndpoint_request_EndpointRequest_Demographic;
class OAIUpdateEndpoint_request_EndpointRequest_Location;
class OAIEndpointResponse_User;

class OAIPublicEndpoint : public OAIObject {
public:
    OAIPublicEndpoint();
    OAIPublicEndpoint(QString json);
    ~OAIPublicEndpoint() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getAddress() const;
    void setAddress(const QString &address);
    bool is_address_Set() const;
    bool is_address_Valid() const;

    QMap getAttributes() const;
    void setAttributes(const QMap &attributes);
    bool is_attributes_Set() const;
    bool is_attributes_Valid() const;

    OAIChannelType getChannelType() const;
    void setChannelType(const OAIChannelType &channel_type);
    bool is_channel_type_Set() const;
    bool is_channel_type_Valid() const;

    OAIUpdateEndpoint_request_EndpointRequest_Demographic getDemographic() const;
    void setDemographic(const OAIUpdateEndpoint_request_EndpointRequest_Demographic &demographic);
    bool is_demographic_Set() const;
    bool is_demographic_Valid() const;

    QString getEffectiveDate() const;
    void setEffectiveDate(const QString &effective_date);
    bool is_effective_date_Set() const;
    bool is_effective_date_Valid() const;

    QString getEndpointStatus() const;
    void setEndpointStatus(const QString &endpoint_status);
    bool is_endpoint_status_Set() const;
    bool is_endpoint_status_Valid() const;

    OAIUpdateEndpoint_request_EndpointRequest_Location getLocation() const;
    void setLocation(const OAIUpdateEndpoint_request_EndpointRequest_Location &location);
    bool is_location_Set() const;
    bool is_location_Valid() const;

    QMap getMetrics() const;
    void setMetrics(const QMap &metrics);
    bool is_metrics_Set() const;
    bool is_metrics_Valid() const;

    QString getOptOut() const;
    void setOptOut(const QString &opt_out);
    bool is_opt_out_Set() const;
    bool is_opt_out_Valid() const;

    QString getRequestId() const;
    void setRequestId(const QString &request_id);
    bool is_request_id_Set() const;
    bool is_request_id_Valid() const;

    OAIEndpointResponse_User getUser() const;
    void setUser(const OAIEndpointResponse_User &user);
    bool is_user_Set() const;
    bool is_user_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_address;
    bool m_address_isSet;
    bool m_address_isValid;

    QMap m_attributes;
    bool m_attributes_isSet;
    bool m_attributes_isValid;

    OAIChannelType m_channel_type;
    bool m_channel_type_isSet;
    bool m_channel_type_isValid;

    OAIUpdateEndpoint_request_EndpointRequest_Demographic m_demographic;
    bool m_demographic_isSet;
    bool m_demographic_isValid;

    QString m_effective_date;
    bool m_effective_date_isSet;
    bool m_effective_date_isValid;

    QString m_endpoint_status;
    bool m_endpoint_status_isSet;
    bool m_endpoint_status_isValid;

    OAIUpdateEndpoint_request_EndpointRequest_Location m_location;
    bool m_location_isSet;
    bool m_location_isValid;

    QMap m_metrics;
    bool m_metrics_isSet;
    bool m_metrics_isValid;

    QString m_opt_out;
    bool m_opt_out_isSet;
    bool m_opt_out_isValid;

    QString m_request_id;
    bool m_request_id_isSet;
    bool m_request_id_isValid;

    OAIEndpointResponse_User m_user;
    bool m_user_isSet;
    bool m_user_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIPublicEndpoint)

#endif // OAIPublicEndpoint_H
