/**
 * Amazon Pinpoint
 * Doc Engage API - Amazon Pinpoint API
 *
 * The version of the OpenAPI document: 2016-12-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIApplicationResponse.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIApplicationResponse::OAIApplicationResponse(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIApplicationResponse::OAIApplicationResponse() {
    this->initializeModel();
}

OAIApplicationResponse::~OAIApplicationResponse() {}

void OAIApplicationResponse::initializeModel() {

    m_arn_isSet = false;
    m_arn_isValid = false;

    m_id_isSet = false;
    m_id_isValid = false;

    m_name_isSet = false;
    m_name_isValid = false;

    m_tags_isSet = false;
    m_tags_isValid = false;

    m_creation_date_isSet = false;
    m_creation_date_isValid = false;
}

void OAIApplicationResponse::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIApplicationResponse::fromJsonObject(QJsonObject json) {

    m_arn_isValid = ::OpenAPI::fromJsonValue(m_arn, json[QString("Arn")]);
    m_arn_isSet = !json[QString("Arn")].isNull() && m_arn_isValid;

    m_id_isValid = ::OpenAPI::fromJsonValue(m_id, json[QString("Id")]);
    m_id_isSet = !json[QString("Id")].isNull() && m_id_isValid;

    m_name_isValid = ::OpenAPI::fromJsonValue(m_name, json[QString("Name")]);
    m_name_isSet = !json[QString("Name")].isNull() && m_name_isValid;

    m_tags_isValid = ::OpenAPI::fromJsonValue(m_tags, json[QString("tags")]);
    m_tags_isSet = !json[QString("tags")].isNull() && m_tags_isValid;

    m_creation_date_isValid = ::OpenAPI::fromJsonValue(m_creation_date, json[QString("CreationDate")]);
    m_creation_date_isSet = !json[QString("CreationDate")].isNull() && m_creation_date_isValid;
}

QString OAIApplicationResponse::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIApplicationResponse::asJsonObject() const {
    QJsonObject obj;
    if (m_arn_isSet) {
        obj.insert(QString("Arn"), ::OpenAPI::toJsonValue(m_arn));
    }
    if (m_id_isSet) {
        obj.insert(QString("Id"), ::OpenAPI::toJsonValue(m_id));
    }
    if (m_name_isSet) {
        obj.insert(QString("Name"), ::OpenAPI::toJsonValue(m_name));
    }
    if (m_tags.isSet()) {
        obj.insert(QString("tags"), ::OpenAPI::toJsonValue(m_tags));
    }
    if (m_creation_date_isSet) {
        obj.insert(QString("CreationDate"), ::OpenAPI::toJsonValue(m_creation_date));
    }
    return obj;
}

QString OAIApplicationResponse::getArn() const {
    return m_arn;
}
void OAIApplicationResponse::setArn(const QString &arn) {
    m_arn = arn;
    m_arn_isSet = true;
}

bool OAIApplicationResponse::is_arn_Set() const{
    return m_arn_isSet;
}

bool OAIApplicationResponse::is_arn_Valid() const{
    return m_arn_isValid;
}

QString OAIApplicationResponse::getId() const {
    return m_id;
}
void OAIApplicationResponse::setId(const QString &id) {
    m_id = id;
    m_id_isSet = true;
}

bool OAIApplicationResponse::is_id_Set() const{
    return m_id_isSet;
}

bool OAIApplicationResponse::is_id_Valid() const{
    return m_id_isValid;
}

QString OAIApplicationResponse::getName() const {
    return m_name;
}
void OAIApplicationResponse::setName(const QString &name) {
    m_name = name;
    m_name_isSet = true;
}

bool OAIApplicationResponse::is_name_Set() const{
    return m_name_isSet;
}

bool OAIApplicationResponse::is_name_Valid() const{
    return m_name_isValid;
}

QMap OAIApplicationResponse::getTags() const {
    return m_tags;
}
void OAIApplicationResponse::setTags(const QMap &tags) {
    m_tags = tags;
    m_tags_isSet = true;
}

bool OAIApplicationResponse::is_tags_Set() const{
    return m_tags_isSet;
}

bool OAIApplicationResponse::is_tags_Valid() const{
    return m_tags_isValid;
}

QString OAIApplicationResponse::getCreationDate() const {
    return m_creation_date;
}
void OAIApplicationResponse::setCreationDate(const QString &creation_date) {
    m_creation_date = creation_date;
    m_creation_date_isSet = true;
}

bool OAIApplicationResponse::is_creation_date_Set() const{
    return m_creation_date_isSet;
}

bool OAIApplicationResponse::is_creation_date_Valid() const{
    return m_creation_date_isValid;
}

bool OAIApplicationResponse::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_arn_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_tags.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_creation_date_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIApplicationResponse::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_arn_isValid && m_id_isValid && m_name_isValid && true;
}

} // namespace OpenAPI
