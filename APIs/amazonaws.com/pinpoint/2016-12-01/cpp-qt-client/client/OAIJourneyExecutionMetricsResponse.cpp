/**
 * Amazon Pinpoint
 * Doc Engage API - Amazon Pinpoint API
 *
 * The version of the OpenAPI document: 2016-12-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIJourneyExecutionMetricsResponse.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIJourneyExecutionMetricsResponse::OAIJourneyExecutionMetricsResponse(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIJourneyExecutionMetricsResponse::OAIJourneyExecutionMetricsResponse() {
    this->initializeModel();
}

OAIJourneyExecutionMetricsResponse::~OAIJourneyExecutionMetricsResponse() {}

void OAIJourneyExecutionMetricsResponse::initializeModel() {

    m_application_id_isSet = false;
    m_application_id_isValid = false;

    m_journey_id_isSet = false;
    m_journey_id_isValid = false;

    m_last_evaluated_time_isSet = false;
    m_last_evaluated_time_isValid = false;

    m_metrics_isSet = false;
    m_metrics_isValid = false;
}

void OAIJourneyExecutionMetricsResponse::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIJourneyExecutionMetricsResponse::fromJsonObject(QJsonObject json) {

    m_application_id_isValid = ::OpenAPI::fromJsonValue(m_application_id, json[QString("ApplicationId")]);
    m_application_id_isSet = !json[QString("ApplicationId")].isNull() && m_application_id_isValid;

    m_journey_id_isValid = ::OpenAPI::fromJsonValue(m_journey_id, json[QString("JourneyId")]);
    m_journey_id_isSet = !json[QString("JourneyId")].isNull() && m_journey_id_isValid;

    m_last_evaluated_time_isValid = ::OpenAPI::fromJsonValue(m_last_evaluated_time, json[QString("LastEvaluatedTime")]);
    m_last_evaluated_time_isSet = !json[QString("LastEvaluatedTime")].isNull() && m_last_evaluated_time_isValid;

    m_metrics_isValid = ::OpenAPI::fromJsonValue(m_metrics, json[QString("Metrics")]);
    m_metrics_isSet = !json[QString("Metrics")].isNull() && m_metrics_isValid;
}

QString OAIJourneyExecutionMetricsResponse::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIJourneyExecutionMetricsResponse::asJsonObject() const {
    QJsonObject obj;
    if (m_application_id_isSet) {
        obj.insert(QString("ApplicationId"), ::OpenAPI::toJsonValue(m_application_id));
    }
    if (m_journey_id_isSet) {
        obj.insert(QString("JourneyId"), ::OpenAPI::toJsonValue(m_journey_id));
    }
    if (m_last_evaluated_time_isSet) {
        obj.insert(QString("LastEvaluatedTime"), ::OpenAPI::toJsonValue(m_last_evaluated_time));
    }
    if (m_metrics.isSet()) {
        obj.insert(QString("Metrics"), ::OpenAPI::toJsonValue(m_metrics));
    }
    return obj;
}

QString OAIJourneyExecutionMetricsResponse::getApplicationId() const {
    return m_application_id;
}
void OAIJourneyExecutionMetricsResponse::setApplicationId(const QString &application_id) {
    m_application_id = application_id;
    m_application_id_isSet = true;
}

bool OAIJourneyExecutionMetricsResponse::is_application_id_Set() const{
    return m_application_id_isSet;
}

bool OAIJourneyExecutionMetricsResponse::is_application_id_Valid() const{
    return m_application_id_isValid;
}

QString OAIJourneyExecutionMetricsResponse::getJourneyId() const {
    return m_journey_id;
}
void OAIJourneyExecutionMetricsResponse::setJourneyId(const QString &journey_id) {
    m_journey_id = journey_id;
    m_journey_id_isSet = true;
}

bool OAIJourneyExecutionMetricsResponse::is_journey_id_Set() const{
    return m_journey_id_isSet;
}

bool OAIJourneyExecutionMetricsResponse::is_journey_id_Valid() const{
    return m_journey_id_isValid;
}

QString OAIJourneyExecutionMetricsResponse::getLastEvaluatedTime() const {
    return m_last_evaluated_time;
}
void OAIJourneyExecutionMetricsResponse::setLastEvaluatedTime(const QString &last_evaluated_time) {
    m_last_evaluated_time = last_evaluated_time;
    m_last_evaluated_time_isSet = true;
}

bool OAIJourneyExecutionMetricsResponse::is_last_evaluated_time_Set() const{
    return m_last_evaluated_time_isSet;
}

bool OAIJourneyExecutionMetricsResponse::is_last_evaluated_time_Valid() const{
    return m_last_evaluated_time_isValid;
}

QMap OAIJourneyExecutionMetricsResponse::getMetrics() const {
    return m_metrics;
}
void OAIJourneyExecutionMetricsResponse::setMetrics(const QMap &metrics) {
    m_metrics = metrics;
    m_metrics_isSet = true;
}

bool OAIJourneyExecutionMetricsResponse::is_metrics_Set() const{
    return m_metrics_isSet;
}

bool OAIJourneyExecutionMetricsResponse::is_metrics_Valid() const{
    return m_metrics_isValid;
}

bool OAIJourneyExecutionMetricsResponse::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_application_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_journey_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_last_evaluated_time_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_metrics.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIJourneyExecutionMetricsResponse::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_application_id_isValid && m_journey_id_isValid && m_last_evaluated_time_isValid && m_metrics_isValid && true;
}

} // namespace OpenAPI
