/**
 * Amazon Pinpoint
 * Doc Engage API - Amazon Pinpoint API
 *
 * The version of the OpenAPI document: 2016-12-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIWaitTime.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIWaitTime::OAIWaitTime(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIWaitTime::OAIWaitTime() {
    this->initializeModel();
}

OAIWaitTime::~OAIWaitTime() {}

void OAIWaitTime::initializeModel() {

    m_wait_for_isSet = false;
    m_wait_for_isValid = false;

    m_wait_until_isSet = false;
    m_wait_until_isValid = false;
}

void OAIWaitTime::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIWaitTime::fromJsonObject(QJsonObject json) {

    m_wait_for_isValid = ::OpenAPI::fromJsonValue(m_wait_for, json[QString("WaitFor")]);
    m_wait_for_isSet = !json[QString("WaitFor")].isNull() && m_wait_for_isValid;

    m_wait_until_isValid = ::OpenAPI::fromJsonValue(m_wait_until, json[QString("WaitUntil")]);
    m_wait_until_isSet = !json[QString("WaitUntil")].isNull() && m_wait_until_isValid;
}

QString OAIWaitTime::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIWaitTime::asJsonObject() const {
    QJsonObject obj;
    if (m_wait_for_isSet) {
        obj.insert(QString("WaitFor"), ::OpenAPI::toJsonValue(m_wait_for));
    }
    if (m_wait_until_isSet) {
        obj.insert(QString("WaitUntil"), ::OpenAPI::toJsonValue(m_wait_until));
    }
    return obj;
}

QString OAIWaitTime::getWaitFor() const {
    return m_wait_for;
}
void OAIWaitTime::setWaitFor(const QString &wait_for) {
    m_wait_for = wait_for;
    m_wait_for_isSet = true;
}

bool OAIWaitTime::is_wait_for_Set() const{
    return m_wait_for_isSet;
}

bool OAIWaitTime::is_wait_for_Valid() const{
    return m_wait_for_isValid;
}

QString OAIWaitTime::getWaitUntil() const {
    return m_wait_until;
}
void OAIWaitTime::setWaitUntil(const QString &wait_until) {
    m_wait_until = wait_until;
    m_wait_until_isSet = true;
}

bool OAIWaitTime::is_wait_until_Set() const{
    return m_wait_until_isSet;
}

bool OAIWaitTime::is_wait_until_Valid() const{
    return m_wait_until_isValid;
}

bool OAIWaitTime::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_wait_for_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_wait_until_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIWaitTime::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
