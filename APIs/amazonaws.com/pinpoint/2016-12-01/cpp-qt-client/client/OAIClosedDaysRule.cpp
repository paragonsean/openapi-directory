/**
 * Amazon Pinpoint
 * Doc Engage API - Amazon Pinpoint API
 *
 * The version of the OpenAPI document: 2016-12-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIClosedDaysRule.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIClosedDaysRule::OAIClosedDaysRule(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIClosedDaysRule::OAIClosedDaysRule() {
    this->initializeModel();
}

OAIClosedDaysRule::~OAIClosedDaysRule() {}

void OAIClosedDaysRule::initializeModel() {

    m_name_isSet = false;
    m_name_isValid = false;

    m_start_date_time_isSet = false;
    m_start_date_time_isValid = false;

    m_end_date_time_isSet = false;
    m_end_date_time_isValid = false;
}

void OAIClosedDaysRule::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIClosedDaysRule::fromJsonObject(QJsonObject json) {

    m_name_isValid = ::OpenAPI::fromJsonValue(m_name, json[QString("Name")]);
    m_name_isSet = !json[QString("Name")].isNull() && m_name_isValid;

    m_start_date_time_isValid = ::OpenAPI::fromJsonValue(m_start_date_time, json[QString("StartDateTime")]);
    m_start_date_time_isSet = !json[QString("StartDateTime")].isNull() && m_start_date_time_isValid;

    m_end_date_time_isValid = ::OpenAPI::fromJsonValue(m_end_date_time, json[QString("EndDateTime")]);
    m_end_date_time_isSet = !json[QString("EndDateTime")].isNull() && m_end_date_time_isValid;
}

QString OAIClosedDaysRule::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIClosedDaysRule::asJsonObject() const {
    QJsonObject obj;
    if (m_name_isSet) {
        obj.insert(QString("Name"), ::OpenAPI::toJsonValue(m_name));
    }
    if (m_start_date_time_isSet) {
        obj.insert(QString("StartDateTime"), ::OpenAPI::toJsonValue(m_start_date_time));
    }
    if (m_end_date_time_isSet) {
        obj.insert(QString("EndDateTime"), ::OpenAPI::toJsonValue(m_end_date_time));
    }
    return obj;
}

QString OAIClosedDaysRule::getName() const {
    return m_name;
}
void OAIClosedDaysRule::setName(const QString &name) {
    m_name = name;
    m_name_isSet = true;
}

bool OAIClosedDaysRule::is_name_Set() const{
    return m_name_isSet;
}

bool OAIClosedDaysRule::is_name_Valid() const{
    return m_name_isValid;
}

QString OAIClosedDaysRule::getStartDateTime() const {
    return m_start_date_time;
}
void OAIClosedDaysRule::setStartDateTime(const QString &start_date_time) {
    m_start_date_time = start_date_time;
    m_start_date_time_isSet = true;
}

bool OAIClosedDaysRule::is_start_date_time_Set() const{
    return m_start_date_time_isSet;
}

bool OAIClosedDaysRule::is_start_date_time_Valid() const{
    return m_start_date_time_isValid;
}

QString OAIClosedDaysRule::getEndDateTime() const {
    return m_end_date_time;
}
void OAIClosedDaysRule::setEndDateTime(const QString &end_date_time) {
    m_end_date_time = end_date_time;
    m_end_date_time_isSet = true;
}

bool OAIClosedDaysRule::is_end_date_time_Set() const{
    return m_end_date_time_isSet;
}

bool OAIClosedDaysRule::is_end_date_time_Valid() const{
    return m_end_date_time_isValid;
}

bool OAIClosedDaysRule::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_start_date_time_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_end_date_time_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIClosedDaysRule::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
