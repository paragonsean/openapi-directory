/**
 * Amazon Pinpoint
 * Doc Engage API - Amazon Pinpoint API
 *
 * The version of the OpenAPI document: 2016-12-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIWriteSegmentRequest.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIWriteSegmentRequest::OAIWriteSegmentRequest(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIWriteSegmentRequest::OAIWriteSegmentRequest() {
    this->initializeModel();
}

OAIWriteSegmentRequest::~OAIWriteSegmentRequest() {}

void OAIWriteSegmentRequest::initializeModel() {

    m_dimensions_isSet = false;
    m_dimensions_isValid = false;

    m_name_isSet = false;
    m_name_isValid = false;

    m_segment_groups_isSet = false;
    m_segment_groups_isValid = false;

    m_tags_isSet = false;
    m_tags_isValid = false;
}

void OAIWriteSegmentRequest::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIWriteSegmentRequest::fromJsonObject(QJsonObject json) {

    m_dimensions_isValid = ::OpenAPI::fromJsonValue(m_dimensions, json[QString("Dimensions")]);
    m_dimensions_isSet = !json[QString("Dimensions")].isNull() && m_dimensions_isValid;

    m_name_isValid = ::OpenAPI::fromJsonValue(m_name, json[QString("Name")]);
    m_name_isSet = !json[QString("Name")].isNull() && m_name_isValid;

    m_segment_groups_isValid = ::OpenAPI::fromJsonValue(m_segment_groups, json[QString("SegmentGroups")]);
    m_segment_groups_isSet = !json[QString("SegmentGroups")].isNull() && m_segment_groups_isValid;

    m_tags_isValid = ::OpenAPI::fromJsonValue(m_tags, json[QString("tags")]);
    m_tags_isSet = !json[QString("tags")].isNull() && m_tags_isValid;
}

QString OAIWriteSegmentRequest::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIWriteSegmentRequest::asJsonObject() const {
    QJsonObject obj;
    if (m_dimensions.isSet()) {
        obj.insert(QString("Dimensions"), ::OpenAPI::toJsonValue(m_dimensions));
    }
    if (m_name_isSet) {
        obj.insert(QString("Name"), ::OpenAPI::toJsonValue(m_name));
    }
    if (m_segment_groups.isSet()) {
        obj.insert(QString("SegmentGroups"), ::OpenAPI::toJsonValue(m_segment_groups));
    }
    if (m_tags.isSet()) {
        obj.insert(QString("tags"), ::OpenAPI::toJsonValue(m_tags));
    }
    return obj;
}

OAICreateSegment_request_WriteSegmentRequest_Dimensions OAIWriteSegmentRequest::getDimensions() const {
    return m_dimensions;
}
void OAIWriteSegmentRequest::setDimensions(const OAICreateSegment_request_WriteSegmentRequest_Dimensions &dimensions) {
    m_dimensions = dimensions;
    m_dimensions_isSet = true;
}

bool OAIWriteSegmentRequest::is_dimensions_Set() const{
    return m_dimensions_isSet;
}

bool OAIWriteSegmentRequest::is_dimensions_Valid() const{
    return m_dimensions_isValid;
}

QString OAIWriteSegmentRequest::getName() const {
    return m_name;
}
void OAIWriteSegmentRequest::setName(const QString &name) {
    m_name = name;
    m_name_isSet = true;
}

bool OAIWriteSegmentRequest::is_name_Set() const{
    return m_name_isSet;
}

bool OAIWriteSegmentRequest::is_name_Valid() const{
    return m_name_isValid;
}

OAICreateSegment_request_WriteSegmentRequest_SegmentGroups OAIWriteSegmentRequest::getSegmentGroups() const {
    return m_segment_groups;
}
void OAIWriteSegmentRequest::setSegmentGroups(const OAICreateSegment_request_WriteSegmentRequest_SegmentGroups &segment_groups) {
    m_segment_groups = segment_groups;
    m_segment_groups_isSet = true;
}

bool OAIWriteSegmentRequest::is_segment_groups_Set() const{
    return m_segment_groups_isSet;
}

bool OAIWriteSegmentRequest::is_segment_groups_Valid() const{
    return m_segment_groups_isValid;
}

QMap OAIWriteSegmentRequest::getTags() const {
    return m_tags;
}
void OAIWriteSegmentRequest::setTags(const QMap &tags) {
    m_tags = tags;
    m_tags_isSet = true;
}

bool OAIWriteSegmentRequest::is_tags_Set() const{
    return m_tags_isSet;
}

bool OAIWriteSegmentRequest::is_tags_Valid() const{
    return m_tags_isValid;
}

bool OAIWriteSegmentRequest::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_dimensions.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_segment_groups.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_tags.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIWriteSegmentRequest::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
