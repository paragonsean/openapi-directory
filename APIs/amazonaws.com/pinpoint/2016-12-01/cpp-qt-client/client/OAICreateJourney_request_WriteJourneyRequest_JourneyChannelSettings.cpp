/**
 * Amazon Pinpoint
 * Doc Engage API - Amazon Pinpoint API
 *
 * The version of the OpenAPI document: 2016-12-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAICreateJourney_request_WriteJourneyRequest_JourneyChannelSettings.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAICreateJourney_request_WriteJourneyRequest_JourneyChannelSettings::OAICreateJourney_request_WriteJourneyRequest_JourneyChannelSettings(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAICreateJourney_request_WriteJourneyRequest_JourneyChannelSettings::OAICreateJourney_request_WriteJourneyRequest_JourneyChannelSettings() {
    this->initializeModel();
}

OAICreateJourney_request_WriteJourneyRequest_JourneyChannelSettings::~OAICreateJourney_request_WriteJourneyRequest_JourneyChannelSettings() {}

void OAICreateJourney_request_WriteJourneyRequest_JourneyChannelSettings::initializeModel() {

    m_connect_campaign_arn_isSet = false;
    m_connect_campaign_arn_isValid = false;

    m_connect_campaign_execution_role_arn_isSet = false;
    m_connect_campaign_execution_role_arn_isValid = false;
}

void OAICreateJourney_request_WriteJourneyRequest_JourneyChannelSettings::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAICreateJourney_request_WriteJourneyRequest_JourneyChannelSettings::fromJsonObject(QJsonObject json) {

    m_connect_campaign_arn_isValid = ::OpenAPI::fromJsonValue(m_connect_campaign_arn, json[QString("ConnectCampaignArn")]);
    m_connect_campaign_arn_isSet = !json[QString("ConnectCampaignArn")].isNull() && m_connect_campaign_arn_isValid;

    m_connect_campaign_execution_role_arn_isValid = ::OpenAPI::fromJsonValue(m_connect_campaign_execution_role_arn, json[QString("ConnectCampaignExecutionRoleArn")]);
    m_connect_campaign_execution_role_arn_isSet = !json[QString("ConnectCampaignExecutionRoleArn")].isNull() && m_connect_campaign_execution_role_arn_isValid;
}

QString OAICreateJourney_request_WriteJourneyRequest_JourneyChannelSettings::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAICreateJourney_request_WriteJourneyRequest_JourneyChannelSettings::asJsonObject() const {
    QJsonObject obj;
    if (m_connect_campaign_arn_isSet) {
        obj.insert(QString("ConnectCampaignArn"), ::OpenAPI::toJsonValue(m_connect_campaign_arn));
    }
    if (m_connect_campaign_execution_role_arn_isSet) {
        obj.insert(QString("ConnectCampaignExecutionRoleArn"), ::OpenAPI::toJsonValue(m_connect_campaign_execution_role_arn));
    }
    return obj;
}

QString OAICreateJourney_request_WriteJourneyRequest_JourneyChannelSettings::getConnectCampaignArn() const {
    return m_connect_campaign_arn;
}
void OAICreateJourney_request_WriteJourneyRequest_JourneyChannelSettings::setConnectCampaignArn(const QString &connect_campaign_arn) {
    m_connect_campaign_arn = connect_campaign_arn;
    m_connect_campaign_arn_isSet = true;
}

bool OAICreateJourney_request_WriteJourneyRequest_JourneyChannelSettings::is_connect_campaign_arn_Set() const{
    return m_connect_campaign_arn_isSet;
}

bool OAICreateJourney_request_WriteJourneyRequest_JourneyChannelSettings::is_connect_campaign_arn_Valid() const{
    return m_connect_campaign_arn_isValid;
}

QString OAICreateJourney_request_WriteJourneyRequest_JourneyChannelSettings::getConnectCampaignExecutionRoleArn() const {
    return m_connect_campaign_execution_role_arn;
}
void OAICreateJourney_request_WriteJourneyRequest_JourneyChannelSettings::setConnectCampaignExecutionRoleArn(const QString &connect_campaign_execution_role_arn) {
    m_connect_campaign_execution_role_arn = connect_campaign_execution_role_arn;
    m_connect_campaign_execution_role_arn_isSet = true;
}

bool OAICreateJourney_request_WriteJourneyRequest_JourneyChannelSettings::is_connect_campaign_execution_role_arn_Set() const{
    return m_connect_campaign_execution_role_arn_isSet;
}

bool OAICreateJourney_request_WriteJourneyRequest_JourneyChannelSettings::is_connect_campaign_execution_role_arn_Valid() const{
    return m_connect_campaign_execution_role_arn_isValid;
}

bool OAICreateJourney_request_WriteJourneyRequest_JourneyChannelSettings::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_connect_campaign_arn_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_connect_campaign_execution_role_arn_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAICreateJourney_request_WriteJourneyRequest_JourneyChannelSettings::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
