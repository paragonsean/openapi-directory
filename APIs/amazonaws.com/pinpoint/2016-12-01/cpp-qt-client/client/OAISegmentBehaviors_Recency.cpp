/**
 * Amazon Pinpoint
 * Doc Engage API - Amazon Pinpoint API
 *
 * The version of the OpenAPI document: 2016-12-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAISegmentBehaviors_Recency.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAISegmentBehaviors_Recency::OAISegmentBehaviors_Recency(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAISegmentBehaviors_Recency::OAISegmentBehaviors_Recency() {
    this->initializeModel();
}

OAISegmentBehaviors_Recency::~OAISegmentBehaviors_Recency() {}

void OAISegmentBehaviors_Recency::initializeModel() {

    m_duration_isSet = false;
    m_duration_isValid = false;

    m_recency_type_isSet = false;
    m_recency_type_isValid = false;
}

void OAISegmentBehaviors_Recency::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAISegmentBehaviors_Recency::fromJsonObject(QJsonObject json) {

    m_duration_isValid = ::OpenAPI::fromJsonValue(m_duration, json[QString("Duration")]);
    m_duration_isSet = !json[QString("Duration")].isNull() && m_duration_isValid;

    m_recency_type_isValid = ::OpenAPI::fromJsonValue(m_recency_type, json[QString("RecencyType")]);
    m_recency_type_isSet = !json[QString("RecencyType")].isNull() && m_recency_type_isValid;
}

QString OAISegmentBehaviors_Recency::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAISegmentBehaviors_Recency::asJsonObject() const {
    QJsonObject obj;
    if (m_duration.isSet()) {
        obj.insert(QString("Duration"), ::OpenAPI::toJsonValue(m_duration));
    }
    if (m_recency_type.isSet()) {
        obj.insert(QString("RecencyType"), ::OpenAPI::toJsonValue(m_recency_type));
    }
    return obj;
}

OAIDuration OAISegmentBehaviors_Recency::getDuration() const {
    return m_duration;
}
void OAISegmentBehaviors_Recency::setDuration(const OAIDuration &duration) {
    m_duration = duration;
    m_duration_isSet = true;
}

bool OAISegmentBehaviors_Recency::is_duration_Set() const{
    return m_duration_isSet;
}

bool OAISegmentBehaviors_Recency::is_duration_Valid() const{
    return m_duration_isValid;
}

OAIRecencyType OAISegmentBehaviors_Recency::getRecencyType() const {
    return m_recency_type;
}
void OAISegmentBehaviors_Recency::setRecencyType(const OAIRecencyType &recency_type) {
    m_recency_type = recency_type;
    m_recency_type_isSet = true;
}

bool OAISegmentBehaviors_Recency::is_recency_type_Set() const{
    return m_recency_type_isSet;
}

bool OAISegmentBehaviors_Recency::is_recency_type_Valid() const{
    return m_recency_type_isValid;
}

bool OAISegmentBehaviors_Recency::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_duration.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_recency_type.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAISegmentBehaviors_Recency::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_duration_isValid && m_recency_type_isValid && true;
}

} // namespace OpenAPI
