/**
 * Amazon Pinpoint
 * Doc Engage API - Amazon Pinpoint API
 *
 * The version of the OpenAPI document: 2016-12-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIUpdateVoiceTemplate_request_VoiceTemplateRequest.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIUpdateVoiceTemplate_request_VoiceTemplateRequest::OAIUpdateVoiceTemplate_request_VoiceTemplateRequest(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIUpdateVoiceTemplate_request_VoiceTemplateRequest::OAIUpdateVoiceTemplate_request_VoiceTemplateRequest() {
    this->initializeModel();
}

OAIUpdateVoiceTemplate_request_VoiceTemplateRequest::~OAIUpdateVoiceTemplate_request_VoiceTemplateRequest() {}

void OAIUpdateVoiceTemplate_request_VoiceTemplateRequest::initializeModel() {

    m_body_isSet = false;
    m_body_isValid = false;

    m_default_substitutions_isSet = false;
    m_default_substitutions_isValid = false;

    m_language_code_isSet = false;
    m_language_code_isValid = false;

    m_tags_isSet = false;
    m_tags_isValid = false;

    m_template_description_isSet = false;
    m_template_description_isValid = false;

    m_voice_id_isSet = false;
    m_voice_id_isValid = false;
}

void OAIUpdateVoiceTemplate_request_VoiceTemplateRequest::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIUpdateVoiceTemplate_request_VoiceTemplateRequest::fromJsonObject(QJsonObject json) {

    m_body_isValid = ::OpenAPI::fromJsonValue(m_body, json[QString("Body")]);
    m_body_isSet = !json[QString("Body")].isNull() && m_body_isValid;

    m_default_substitutions_isValid = ::OpenAPI::fromJsonValue(m_default_substitutions, json[QString("DefaultSubstitutions")]);
    m_default_substitutions_isSet = !json[QString("DefaultSubstitutions")].isNull() && m_default_substitutions_isValid;

    m_language_code_isValid = ::OpenAPI::fromJsonValue(m_language_code, json[QString("LanguageCode")]);
    m_language_code_isSet = !json[QString("LanguageCode")].isNull() && m_language_code_isValid;

    m_tags_isValid = ::OpenAPI::fromJsonValue(m_tags, json[QString("tags")]);
    m_tags_isSet = !json[QString("tags")].isNull() && m_tags_isValid;

    m_template_description_isValid = ::OpenAPI::fromJsonValue(m_template_description, json[QString("TemplateDescription")]);
    m_template_description_isSet = !json[QString("TemplateDescription")].isNull() && m_template_description_isValid;

    m_voice_id_isValid = ::OpenAPI::fromJsonValue(m_voice_id, json[QString("VoiceId")]);
    m_voice_id_isSet = !json[QString("VoiceId")].isNull() && m_voice_id_isValid;
}

QString OAIUpdateVoiceTemplate_request_VoiceTemplateRequest::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIUpdateVoiceTemplate_request_VoiceTemplateRequest::asJsonObject() const {
    QJsonObject obj;
    if (m_body_isSet) {
        obj.insert(QString("Body"), ::OpenAPI::toJsonValue(m_body));
    }
    if (m_default_substitutions_isSet) {
        obj.insert(QString("DefaultSubstitutions"), ::OpenAPI::toJsonValue(m_default_substitutions));
    }
    if (m_language_code_isSet) {
        obj.insert(QString("LanguageCode"), ::OpenAPI::toJsonValue(m_language_code));
    }
    if (m_tags.isSet()) {
        obj.insert(QString("tags"), ::OpenAPI::toJsonValue(m_tags));
    }
    if (m_template_description_isSet) {
        obj.insert(QString("TemplateDescription"), ::OpenAPI::toJsonValue(m_template_description));
    }
    if (m_voice_id_isSet) {
        obj.insert(QString("VoiceId"), ::OpenAPI::toJsonValue(m_voice_id));
    }
    return obj;
}

QString OAIUpdateVoiceTemplate_request_VoiceTemplateRequest::getBody() const {
    return m_body;
}
void OAIUpdateVoiceTemplate_request_VoiceTemplateRequest::setBody(const QString &body) {
    m_body = body;
    m_body_isSet = true;
}

bool OAIUpdateVoiceTemplate_request_VoiceTemplateRequest::is_body_Set() const{
    return m_body_isSet;
}

bool OAIUpdateVoiceTemplate_request_VoiceTemplateRequest::is_body_Valid() const{
    return m_body_isValid;
}

QString OAIUpdateVoiceTemplate_request_VoiceTemplateRequest::getDefaultSubstitutions() const {
    return m_default_substitutions;
}
void OAIUpdateVoiceTemplate_request_VoiceTemplateRequest::setDefaultSubstitutions(const QString &default_substitutions) {
    m_default_substitutions = default_substitutions;
    m_default_substitutions_isSet = true;
}

bool OAIUpdateVoiceTemplate_request_VoiceTemplateRequest::is_default_substitutions_Set() const{
    return m_default_substitutions_isSet;
}

bool OAIUpdateVoiceTemplate_request_VoiceTemplateRequest::is_default_substitutions_Valid() const{
    return m_default_substitutions_isValid;
}

QString OAIUpdateVoiceTemplate_request_VoiceTemplateRequest::getLanguageCode() const {
    return m_language_code;
}
void OAIUpdateVoiceTemplate_request_VoiceTemplateRequest::setLanguageCode(const QString &language_code) {
    m_language_code = language_code;
    m_language_code_isSet = true;
}

bool OAIUpdateVoiceTemplate_request_VoiceTemplateRequest::is_language_code_Set() const{
    return m_language_code_isSet;
}

bool OAIUpdateVoiceTemplate_request_VoiceTemplateRequest::is_language_code_Valid() const{
    return m_language_code_isValid;
}

QMap OAIUpdateVoiceTemplate_request_VoiceTemplateRequest::getTags() const {
    return m_tags;
}
void OAIUpdateVoiceTemplate_request_VoiceTemplateRequest::setTags(const QMap &tags) {
    m_tags = tags;
    m_tags_isSet = true;
}

bool OAIUpdateVoiceTemplate_request_VoiceTemplateRequest::is_tags_Set() const{
    return m_tags_isSet;
}

bool OAIUpdateVoiceTemplate_request_VoiceTemplateRequest::is_tags_Valid() const{
    return m_tags_isValid;
}

QString OAIUpdateVoiceTemplate_request_VoiceTemplateRequest::getTemplateDescription() const {
    return m_template_description;
}
void OAIUpdateVoiceTemplate_request_VoiceTemplateRequest::setTemplateDescription(const QString &template_description) {
    m_template_description = template_description;
    m_template_description_isSet = true;
}

bool OAIUpdateVoiceTemplate_request_VoiceTemplateRequest::is_template_description_Set() const{
    return m_template_description_isSet;
}

bool OAIUpdateVoiceTemplate_request_VoiceTemplateRequest::is_template_description_Valid() const{
    return m_template_description_isValid;
}

QString OAIUpdateVoiceTemplate_request_VoiceTemplateRequest::getVoiceId() const {
    return m_voice_id;
}
void OAIUpdateVoiceTemplate_request_VoiceTemplateRequest::setVoiceId(const QString &voice_id) {
    m_voice_id = voice_id;
    m_voice_id_isSet = true;
}

bool OAIUpdateVoiceTemplate_request_VoiceTemplateRequest::is_voice_id_Set() const{
    return m_voice_id_isSet;
}

bool OAIUpdateVoiceTemplate_request_VoiceTemplateRequest::is_voice_id_Valid() const{
    return m_voice_id_isValid;
}

bool OAIUpdateVoiceTemplate_request_VoiceTemplateRequest::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_body_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_default_substitutions_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_language_code_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_tags.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_template_description_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_voice_id_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIUpdateVoiceTemplate_request_VoiceTemplateRequest::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
