/**
 * Amazon Pinpoint
 * Doc Engage API - Amazon Pinpoint API
 *
 * The version of the OpenAPI document: 2016-12-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIEmailMessage_SimpleEmail.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIEmailMessage_SimpleEmail::OAIEmailMessage_SimpleEmail(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIEmailMessage_SimpleEmail::OAIEmailMessage_SimpleEmail() {
    this->initializeModel();
}

OAIEmailMessage_SimpleEmail::~OAIEmailMessage_SimpleEmail() {}

void OAIEmailMessage_SimpleEmail::initializeModel() {

    m_html_part_isSet = false;
    m_html_part_isValid = false;

    m_subject_isSet = false;
    m_subject_isValid = false;

    m_text_part_isSet = false;
    m_text_part_isValid = false;
}

void OAIEmailMessage_SimpleEmail::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIEmailMessage_SimpleEmail::fromJsonObject(QJsonObject json) {

    m_html_part_isValid = ::OpenAPI::fromJsonValue(m_html_part, json[QString("HtmlPart")]);
    m_html_part_isSet = !json[QString("HtmlPart")].isNull() && m_html_part_isValid;

    m_subject_isValid = ::OpenAPI::fromJsonValue(m_subject, json[QString("Subject")]);
    m_subject_isSet = !json[QString("Subject")].isNull() && m_subject_isValid;

    m_text_part_isValid = ::OpenAPI::fromJsonValue(m_text_part, json[QString("TextPart")]);
    m_text_part_isSet = !json[QString("TextPart")].isNull() && m_text_part_isValid;
}

QString OAIEmailMessage_SimpleEmail::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIEmailMessage_SimpleEmail::asJsonObject() const {
    QJsonObject obj;
    if (m_html_part.isSet()) {
        obj.insert(QString("HtmlPart"), ::OpenAPI::toJsonValue(m_html_part));
    }
    if (m_subject.isSet()) {
        obj.insert(QString("Subject"), ::OpenAPI::toJsonValue(m_subject));
    }
    if (m_text_part.isSet()) {
        obj.insert(QString("TextPart"), ::OpenAPI::toJsonValue(m_text_part));
    }
    return obj;
}

OAISimpleEmail_HtmlPart OAIEmailMessage_SimpleEmail::getHtmlPart() const {
    return m_html_part;
}
void OAIEmailMessage_SimpleEmail::setHtmlPart(const OAISimpleEmail_HtmlPart &html_part) {
    m_html_part = html_part;
    m_html_part_isSet = true;
}

bool OAIEmailMessage_SimpleEmail::is_html_part_Set() const{
    return m_html_part_isSet;
}

bool OAIEmailMessage_SimpleEmail::is_html_part_Valid() const{
    return m_html_part_isValid;
}

OAISimpleEmail_Subject OAIEmailMessage_SimpleEmail::getSubject() const {
    return m_subject;
}
void OAIEmailMessage_SimpleEmail::setSubject(const OAISimpleEmail_Subject &subject) {
    m_subject = subject;
    m_subject_isSet = true;
}

bool OAIEmailMessage_SimpleEmail::is_subject_Set() const{
    return m_subject_isSet;
}

bool OAIEmailMessage_SimpleEmail::is_subject_Valid() const{
    return m_subject_isValid;
}

OAISimpleEmail_TextPart OAIEmailMessage_SimpleEmail::getTextPart() const {
    return m_text_part;
}
void OAIEmailMessage_SimpleEmail::setTextPart(const OAISimpleEmail_TextPart &text_part) {
    m_text_part = text_part;
    m_text_part_isSet = true;
}

bool OAIEmailMessage_SimpleEmail::is_text_part_Set() const{
    return m_text_part_isSet;
}

bool OAIEmailMessage_SimpleEmail::is_text_part_Valid() const{
    return m_text_part_isValid;
}

bool OAIEmailMessage_SimpleEmail::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_html_part.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_subject.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_text_part.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIEmailMessage_SimpleEmail::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
