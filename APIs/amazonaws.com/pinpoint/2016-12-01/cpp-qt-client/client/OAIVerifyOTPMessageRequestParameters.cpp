/**
 * Amazon Pinpoint
 * Doc Engage API - Amazon Pinpoint API
 *
 * The version of the OpenAPI document: 2016-12-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIVerifyOTPMessageRequestParameters.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIVerifyOTPMessageRequestParameters::OAIVerifyOTPMessageRequestParameters(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIVerifyOTPMessageRequestParameters::OAIVerifyOTPMessageRequestParameters() {
    this->initializeModel();
}

OAIVerifyOTPMessageRequestParameters::~OAIVerifyOTPMessageRequestParameters() {}

void OAIVerifyOTPMessageRequestParameters::initializeModel() {

    m_destination_identity_isSet = false;
    m_destination_identity_isValid = false;

    m_otp_isSet = false;
    m_otp_isValid = false;

    m_reference_id_isSet = false;
    m_reference_id_isValid = false;
}

void OAIVerifyOTPMessageRequestParameters::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIVerifyOTPMessageRequestParameters::fromJsonObject(QJsonObject json) {

    m_destination_identity_isValid = ::OpenAPI::fromJsonValue(m_destination_identity, json[QString("DestinationIdentity")]);
    m_destination_identity_isSet = !json[QString("DestinationIdentity")].isNull() && m_destination_identity_isValid;

    m_otp_isValid = ::OpenAPI::fromJsonValue(m_otp, json[QString("Otp")]);
    m_otp_isSet = !json[QString("Otp")].isNull() && m_otp_isValid;

    m_reference_id_isValid = ::OpenAPI::fromJsonValue(m_reference_id, json[QString("ReferenceId")]);
    m_reference_id_isSet = !json[QString("ReferenceId")].isNull() && m_reference_id_isValid;
}

QString OAIVerifyOTPMessageRequestParameters::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIVerifyOTPMessageRequestParameters::asJsonObject() const {
    QJsonObject obj;
    if (m_destination_identity_isSet) {
        obj.insert(QString("DestinationIdentity"), ::OpenAPI::toJsonValue(m_destination_identity));
    }
    if (m_otp_isSet) {
        obj.insert(QString("Otp"), ::OpenAPI::toJsonValue(m_otp));
    }
    if (m_reference_id_isSet) {
        obj.insert(QString("ReferenceId"), ::OpenAPI::toJsonValue(m_reference_id));
    }
    return obj;
}

QString OAIVerifyOTPMessageRequestParameters::getDestinationIdentity() const {
    return m_destination_identity;
}
void OAIVerifyOTPMessageRequestParameters::setDestinationIdentity(const QString &destination_identity) {
    m_destination_identity = destination_identity;
    m_destination_identity_isSet = true;
}

bool OAIVerifyOTPMessageRequestParameters::is_destination_identity_Set() const{
    return m_destination_identity_isSet;
}

bool OAIVerifyOTPMessageRequestParameters::is_destination_identity_Valid() const{
    return m_destination_identity_isValid;
}

QString OAIVerifyOTPMessageRequestParameters::getOtp() const {
    return m_otp;
}
void OAIVerifyOTPMessageRequestParameters::setOtp(const QString &otp) {
    m_otp = otp;
    m_otp_isSet = true;
}

bool OAIVerifyOTPMessageRequestParameters::is_otp_Set() const{
    return m_otp_isSet;
}

bool OAIVerifyOTPMessageRequestParameters::is_otp_Valid() const{
    return m_otp_isValid;
}

QString OAIVerifyOTPMessageRequestParameters::getReferenceId() const {
    return m_reference_id;
}
void OAIVerifyOTPMessageRequestParameters::setReferenceId(const QString &reference_id) {
    m_reference_id = reference_id;
    m_reference_id_isSet = true;
}

bool OAIVerifyOTPMessageRequestParameters::is_reference_id_Set() const{
    return m_reference_id_isSet;
}

bool OAIVerifyOTPMessageRequestParameters::is_reference_id_Valid() const{
    return m_reference_id_isValid;
}

bool OAIVerifyOTPMessageRequestParameters::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_destination_identity_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_otp_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_reference_id_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIVerifyOTPMessageRequestParameters::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_destination_identity_isValid && m_otp_isValid && m_reference_id_isValid && true;
}

} // namespace OpenAPI
