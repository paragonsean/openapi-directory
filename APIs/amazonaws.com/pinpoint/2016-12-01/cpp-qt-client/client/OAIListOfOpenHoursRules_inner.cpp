/**
 * Amazon Pinpoint
 * Doc Engage API - Amazon Pinpoint API
 *
 * The version of the OpenAPI document: 2016-12-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIListOfOpenHoursRules_inner.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIListOfOpenHoursRules_inner::OAIListOfOpenHoursRules_inner(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIListOfOpenHoursRules_inner::OAIListOfOpenHoursRules_inner() {
    this->initializeModel();
}

OAIListOfOpenHoursRules_inner::~OAIListOfOpenHoursRules_inner() {}

void OAIListOfOpenHoursRules_inner::initializeModel() {

    m_start_time_isSet = false;
    m_start_time_isValid = false;

    m_end_time_isSet = false;
    m_end_time_isValid = false;
}

void OAIListOfOpenHoursRules_inner::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIListOfOpenHoursRules_inner::fromJsonObject(QJsonObject json) {

    m_start_time_isValid = ::OpenAPI::fromJsonValue(m_start_time, json[QString("StartTime")]);
    m_start_time_isSet = !json[QString("StartTime")].isNull() && m_start_time_isValid;

    m_end_time_isValid = ::OpenAPI::fromJsonValue(m_end_time, json[QString("EndTime")]);
    m_end_time_isSet = !json[QString("EndTime")].isNull() && m_end_time_isValid;
}

QString OAIListOfOpenHoursRules_inner::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIListOfOpenHoursRules_inner::asJsonObject() const {
    QJsonObject obj;
    if (m_start_time_isSet) {
        obj.insert(QString("StartTime"), ::OpenAPI::toJsonValue(m_start_time));
    }
    if (m_end_time_isSet) {
        obj.insert(QString("EndTime"), ::OpenAPI::toJsonValue(m_end_time));
    }
    return obj;
}

QString OAIListOfOpenHoursRules_inner::getStartTime() const {
    return m_start_time;
}
void OAIListOfOpenHoursRules_inner::setStartTime(const QString &start_time) {
    m_start_time = start_time;
    m_start_time_isSet = true;
}

bool OAIListOfOpenHoursRules_inner::is_start_time_Set() const{
    return m_start_time_isSet;
}

bool OAIListOfOpenHoursRules_inner::is_start_time_Valid() const{
    return m_start_time_isValid;
}

QString OAIListOfOpenHoursRules_inner::getEndTime() const {
    return m_end_time;
}
void OAIListOfOpenHoursRules_inner::setEndTime(const QString &end_time) {
    m_end_time = end_time;
    m_end_time_isSet = true;
}

bool OAIListOfOpenHoursRules_inner::is_end_time_Set() const{
    return m_end_time_isSet;
}

bool OAIListOfOpenHoursRules_inner::is_end_time_Valid() const{
    return m_end_time_isValid;
}

bool OAIListOfOpenHoursRules_inner::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_start_time_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_end_time_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIListOfOpenHoursRules_inner::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
