/**
 * Amazon Pinpoint
 * Doc Engage API - Amazon Pinpoint API
 *
 * The version of the OpenAPI document: 2016-12-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAICreateExportJob_request_ExportJobRequest.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAICreateExportJob_request_ExportJobRequest::OAICreateExportJob_request_ExportJobRequest(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAICreateExportJob_request_ExportJobRequest::OAICreateExportJob_request_ExportJobRequest() {
    this->initializeModel();
}

OAICreateExportJob_request_ExportJobRequest::~OAICreateExportJob_request_ExportJobRequest() {}

void OAICreateExportJob_request_ExportJobRequest::initializeModel() {

    m_role_arn_isSet = false;
    m_role_arn_isValid = false;

    m_s3_url_prefix_isSet = false;
    m_s3_url_prefix_isValid = false;

    m_segment_id_isSet = false;
    m_segment_id_isValid = false;

    m_segment_version_isSet = false;
    m_segment_version_isValid = false;
}

void OAICreateExportJob_request_ExportJobRequest::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAICreateExportJob_request_ExportJobRequest::fromJsonObject(QJsonObject json) {

    m_role_arn_isValid = ::OpenAPI::fromJsonValue(m_role_arn, json[QString("RoleArn")]);
    m_role_arn_isSet = !json[QString("RoleArn")].isNull() && m_role_arn_isValid;

    m_s3_url_prefix_isValid = ::OpenAPI::fromJsonValue(m_s3_url_prefix, json[QString("S3UrlPrefix")]);
    m_s3_url_prefix_isSet = !json[QString("S3UrlPrefix")].isNull() && m_s3_url_prefix_isValid;

    m_segment_id_isValid = ::OpenAPI::fromJsonValue(m_segment_id, json[QString("SegmentId")]);
    m_segment_id_isSet = !json[QString("SegmentId")].isNull() && m_segment_id_isValid;

    m_segment_version_isValid = ::OpenAPI::fromJsonValue(m_segment_version, json[QString("SegmentVersion")]);
    m_segment_version_isSet = !json[QString("SegmentVersion")].isNull() && m_segment_version_isValid;
}

QString OAICreateExportJob_request_ExportJobRequest::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAICreateExportJob_request_ExportJobRequest::asJsonObject() const {
    QJsonObject obj;
    if (m_role_arn_isSet) {
        obj.insert(QString("RoleArn"), ::OpenAPI::toJsonValue(m_role_arn));
    }
    if (m_s3_url_prefix_isSet) {
        obj.insert(QString("S3UrlPrefix"), ::OpenAPI::toJsonValue(m_s3_url_prefix));
    }
    if (m_segment_id_isSet) {
        obj.insert(QString("SegmentId"), ::OpenAPI::toJsonValue(m_segment_id));
    }
    if (m_segment_version_isSet) {
        obj.insert(QString("SegmentVersion"), ::OpenAPI::toJsonValue(m_segment_version));
    }
    return obj;
}

QString OAICreateExportJob_request_ExportJobRequest::getRoleArn() const {
    return m_role_arn;
}
void OAICreateExportJob_request_ExportJobRequest::setRoleArn(const QString &role_arn) {
    m_role_arn = role_arn;
    m_role_arn_isSet = true;
}

bool OAICreateExportJob_request_ExportJobRequest::is_role_arn_Set() const{
    return m_role_arn_isSet;
}

bool OAICreateExportJob_request_ExportJobRequest::is_role_arn_Valid() const{
    return m_role_arn_isValid;
}

QString OAICreateExportJob_request_ExportJobRequest::getS3UrlPrefix() const {
    return m_s3_url_prefix;
}
void OAICreateExportJob_request_ExportJobRequest::setS3UrlPrefix(const QString &s3_url_prefix) {
    m_s3_url_prefix = s3_url_prefix;
    m_s3_url_prefix_isSet = true;
}

bool OAICreateExportJob_request_ExportJobRequest::is_s3_url_prefix_Set() const{
    return m_s3_url_prefix_isSet;
}

bool OAICreateExportJob_request_ExportJobRequest::is_s3_url_prefix_Valid() const{
    return m_s3_url_prefix_isValid;
}

QString OAICreateExportJob_request_ExportJobRequest::getSegmentId() const {
    return m_segment_id;
}
void OAICreateExportJob_request_ExportJobRequest::setSegmentId(const QString &segment_id) {
    m_segment_id = segment_id;
    m_segment_id_isSet = true;
}

bool OAICreateExportJob_request_ExportJobRequest::is_segment_id_Set() const{
    return m_segment_id_isSet;
}

bool OAICreateExportJob_request_ExportJobRequest::is_segment_id_Valid() const{
    return m_segment_id_isValid;
}

qint32 OAICreateExportJob_request_ExportJobRequest::getSegmentVersion() const {
    return m_segment_version;
}
void OAICreateExportJob_request_ExportJobRequest::setSegmentVersion(const qint32 &segment_version) {
    m_segment_version = segment_version;
    m_segment_version_isSet = true;
}

bool OAICreateExportJob_request_ExportJobRequest::is_segment_version_Set() const{
    return m_segment_version_isSet;
}

bool OAICreateExportJob_request_ExportJobRequest::is_segment_version_Valid() const{
    return m_segment_version_isValid;
}

bool OAICreateExportJob_request_ExportJobRequest::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_role_arn_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_s3_url_prefix_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_segment_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_segment_version_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAICreateExportJob_request_ExportJobRequest::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
