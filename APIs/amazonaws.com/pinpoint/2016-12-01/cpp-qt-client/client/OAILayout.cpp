/**
 * Amazon Pinpoint
 * Doc Engage API - Amazon Pinpoint API
 *
 * The version of the OpenAPI document: 2016-12-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAILayout.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAILayout::OAILayout(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAILayout::OAILayout() {
    this->initializeModel();
}

OAILayout::~OAILayout() {}

void OAILayout::initializeModel() {

    m_value_isSet = false;
    m_value_isValid = false;
    m_value = eOAILayout::INVALID_VALUE_OPENAPI_GENERATED;
}

void OAILayout::fromJson(QString jsonString) {
    
    if ( jsonString.compare("BOTTOM_BANNER", Qt::CaseInsensitive) == 0) {
        m_value = eOAILayout::BOTTOM_BANNER;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("TOP_BANNER", Qt::CaseInsensitive) == 0) {
        m_value = eOAILayout::TOP_BANNER;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("OVERLAYS", Qt::CaseInsensitive) == 0) {
        m_value = eOAILayout::OVERLAYS;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("MOBILE_FEED", Qt::CaseInsensitive) == 0) {
        m_value = eOAILayout::MOBILE_FEED;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("MIDDLE_BANNER", Qt::CaseInsensitive) == 0) {
        m_value = eOAILayout::MIDDLE_BANNER;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("CAROUSEL", Qt::CaseInsensitive) == 0) {
        m_value = eOAILayout::CAROUSEL;
        m_value_isSet = m_value_isValid = true;
    }
}

void OAILayout::fromJsonValue(QJsonValue json) {
fromJson(json.toString());
}

QString OAILayout::asJson() const {
    
    QString val;
    switch (m_value){
        case eOAILayout::BOTTOM_BANNER:
            val = "BOTTOM_BANNER";
            break;
        case eOAILayout::TOP_BANNER:
            val = "TOP_BANNER";
            break;
        case eOAILayout::OVERLAYS:
            val = "OVERLAYS";
            break;
        case eOAILayout::MOBILE_FEED:
            val = "MOBILE_FEED";
            break;
        case eOAILayout::MIDDLE_BANNER:
            val = "MIDDLE_BANNER";
            break;
        case eOAILayout::CAROUSEL:
            val = "CAROUSEL";
            break;
        default:
            break;
    }
    return val;
}

QJsonValue OAILayout::asJsonValue() const {
    
    return QJsonValue(asJson());
}


OAILayout::eOAILayout OAILayout::getValue() const {
    return m_value;
}

void OAILayout::setValue(const OAILayout::eOAILayout& value){
    m_value = value;
    m_value_isSet = true;
}
bool OAILayout::isSet() const {
    
    return m_value_isSet;
}

bool OAILayout::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_value_isValid;
}

} // namespace OpenAPI
