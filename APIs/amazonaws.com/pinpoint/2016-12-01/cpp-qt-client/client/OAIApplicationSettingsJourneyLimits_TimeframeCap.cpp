/**
 * Amazon Pinpoint
 * Doc Engage API - Amazon Pinpoint API
 *
 * The version of the OpenAPI document: 2016-12-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIApplicationSettingsJourneyLimits_TimeframeCap.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIApplicationSettingsJourneyLimits_TimeframeCap::OAIApplicationSettingsJourneyLimits_TimeframeCap(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIApplicationSettingsJourneyLimits_TimeframeCap::OAIApplicationSettingsJourneyLimits_TimeframeCap() {
    this->initializeModel();
}

OAIApplicationSettingsJourneyLimits_TimeframeCap::~OAIApplicationSettingsJourneyLimits_TimeframeCap() {}

void OAIApplicationSettingsJourneyLimits_TimeframeCap::initializeModel() {

    m_cap_isSet = false;
    m_cap_isValid = false;

    m_days_isSet = false;
    m_days_isValid = false;
}

void OAIApplicationSettingsJourneyLimits_TimeframeCap::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIApplicationSettingsJourneyLimits_TimeframeCap::fromJsonObject(QJsonObject json) {

    m_cap_isValid = ::OpenAPI::fromJsonValue(m_cap, json[QString("Cap")]);
    m_cap_isSet = !json[QString("Cap")].isNull() && m_cap_isValid;

    m_days_isValid = ::OpenAPI::fromJsonValue(m_days, json[QString("Days")]);
    m_days_isSet = !json[QString("Days")].isNull() && m_days_isValid;
}

QString OAIApplicationSettingsJourneyLimits_TimeframeCap::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIApplicationSettingsJourneyLimits_TimeframeCap::asJsonObject() const {
    QJsonObject obj;
    if (m_cap_isSet) {
        obj.insert(QString("Cap"), ::OpenAPI::toJsonValue(m_cap));
    }
    if (m_days_isSet) {
        obj.insert(QString("Days"), ::OpenAPI::toJsonValue(m_days));
    }
    return obj;
}

qint32 OAIApplicationSettingsJourneyLimits_TimeframeCap::getCap() const {
    return m_cap;
}
void OAIApplicationSettingsJourneyLimits_TimeframeCap::setCap(const qint32 &cap) {
    m_cap = cap;
    m_cap_isSet = true;
}

bool OAIApplicationSettingsJourneyLimits_TimeframeCap::is_cap_Set() const{
    return m_cap_isSet;
}

bool OAIApplicationSettingsJourneyLimits_TimeframeCap::is_cap_Valid() const{
    return m_cap_isValid;
}

qint32 OAIApplicationSettingsJourneyLimits_TimeframeCap::getDays() const {
    return m_days;
}
void OAIApplicationSettingsJourneyLimits_TimeframeCap::setDays(const qint32 &days) {
    m_days = days;
    m_days_isSet = true;
}

bool OAIApplicationSettingsJourneyLimits_TimeframeCap::is_days_Set() const{
    return m_days_isSet;
}

bool OAIApplicationSettingsJourneyLimits_TimeframeCap::is_days_Valid() const{
    return m_days_isValid;
}

bool OAIApplicationSettingsJourneyLimits_TimeframeCap::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_cap_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_days_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIApplicationSettingsJourneyLimits_TimeframeCap::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
