/**
 * Amazon Pinpoint
 * Doc Engage API - Amazon Pinpoint API
 *
 * The version of the OpenAPI document: 2016-12-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIActivity_EMAIL.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIActivity_EMAIL::OAIActivity_EMAIL(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIActivity_EMAIL::OAIActivity_EMAIL() {
    this->initializeModel();
}

OAIActivity_EMAIL::~OAIActivity_EMAIL() {}

void OAIActivity_EMAIL::initializeModel() {

    m_message_config_isSet = false;
    m_message_config_isValid = false;

    m_next_activity_isSet = false;
    m_next_activity_isValid = false;

    m_template_name_isSet = false;
    m_template_name_isValid = false;

    m_template_version_isSet = false;
    m_template_version_isValid = false;
}

void OAIActivity_EMAIL::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIActivity_EMAIL::fromJsonObject(QJsonObject json) {

    m_message_config_isValid = ::OpenAPI::fromJsonValue(m_message_config, json[QString("MessageConfig")]);
    m_message_config_isSet = !json[QString("MessageConfig")].isNull() && m_message_config_isValid;

    m_next_activity_isValid = ::OpenAPI::fromJsonValue(m_next_activity, json[QString("NextActivity")]);
    m_next_activity_isSet = !json[QString("NextActivity")].isNull() && m_next_activity_isValid;

    m_template_name_isValid = ::OpenAPI::fromJsonValue(m_template_name, json[QString("TemplateName")]);
    m_template_name_isSet = !json[QString("TemplateName")].isNull() && m_template_name_isValid;

    m_template_version_isValid = ::OpenAPI::fromJsonValue(m_template_version, json[QString("TemplateVersion")]);
    m_template_version_isSet = !json[QString("TemplateVersion")].isNull() && m_template_version_isValid;
}

QString OAIActivity_EMAIL::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIActivity_EMAIL::asJsonObject() const {
    QJsonObject obj;
    if (m_message_config.isSet()) {
        obj.insert(QString("MessageConfig"), ::OpenAPI::toJsonValue(m_message_config));
    }
    if (m_next_activity_isSet) {
        obj.insert(QString("NextActivity"), ::OpenAPI::toJsonValue(m_next_activity));
    }
    if (m_template_name_isSet) {
        obj.insert(QString("TemplateName"), ::OpenAPI::toJsonValue(m_template_name));
    }
    if (m_template_version_isSet) {
        obj.insert(QString("TemplateVersion"), ::OpenAPI::toJsonValue(m_template_version));
    }
    return obj;
}

OAIEmailMessageActivity_MessageConfig OAIActivity_EMAIL::getMessageConfig() const {
    return m_message_config;
}
void OAIActivity_EMAIL::setMessageConfig(const OAIEmailMessageActivity_MessageConfig &message_config) {
    m_message_config = message_config;
    m_message_config_isSet = true;
}

bool OAIActivity_EMAIL::is_message_config_Set() const{
    return m_message_config_isSet;
}

bool OAIActivity_EMAIL::is_message_config_Valid() const{
    return m_message_config_isValid;
}

QString OAIActivity_EMAIL::getNextActivity() const {
    return m_next_activity;
}
void OAIActivity_EMAIL::setNextActivity(const QString &next_activity) {
    m_next_activity = next_activity;
    m_next_activity_isSet = true;
}

bool OAIActivity_EMAIL::is_next_activity_Set() const{
    return m_next_activity_isSet;
}

bool OAIActivity_EMAIL::is_next_activity_Valid() const{
    return m_next_activity_isValid;
}

QString OAIActivity_EMAIL::getTemplateName() const {
    return m_template_name;
}
void OAIActivity_EMAIL::setTemplateName(const QString &template_name) {
    m_template_name = template_name;
    m_template_name_isSet = true;
}

bool OAIActivity_EMAIL::is_template_name_Set() const{
    return m_template_name_isSet;
}

bool OAIActivity_EMAIL::is_template_name_Valid() const{
    return m_template_name_isValid;
}

QString OAIActivity_EMAIL::getTemplateVersion() const {
    return m_template_version;
}
void OAIActivity_EMAIL::setTemplateVersion(const QString &template_version) {
    m_template_version = template_version;
    m_template_version_isSet = true;
}

bool OAIActivity_EMAIL::is_template_version_Set() const{
    return m_template_version_isSet;
}

bool OAIActivity_EMAIL::is_template_version_Valid() const{
    return m_template_version_isValid;
}

bool OAIActivity_EMAIL::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_message_config.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_next_activity_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_template_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_template_version_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIActivity_EMAIL::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
