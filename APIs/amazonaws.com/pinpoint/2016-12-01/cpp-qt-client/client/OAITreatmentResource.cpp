/**
 * Amazon Pinpoint
 * Doc Engage API - Amazon Pinpoint API
 *
 * The version of the OpenAPI document: 2016-12-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAITreatmentResource.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAITreatmentResource::OAITreatmentResource(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAITreatmentResource::OAITreatmentResource() {
    this->initializeModel();
}

OAITreatmentResource::~OAITreatmentResource() {}

void OAITreatmentResource::initializeModel() {

    m_custom_delivery_configuration_isSet = false;
    m_custom_delivery_configuration_isValid = false;

    m_id_isSet = false;
    m_id_isValid = false;

    m_message_configuration_isSet = false;
    m_message_configuration_isValid = false;

    m_schedule_isSet = false;
    m_schedule_isValid = false;

    m_size_percent_isSet = false;
    m_size_percent_isValid = false;

    m_state_isSet = false;
    m_state_isValid = false;

    m_template_configuration_isSet = false;
    m_template_configuration_isValid = false;

    m_treatment_description_isSet = false;
    m_treatment_description_isValid = false;

    m_treatment_name_isSet = false;
    m_treatment_name_isValid = false;
}

void OAITreatmentResource::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAITreatmentResource::fromJsonObject(QJsonObject json) {

    m_custom_delivery_configuration_isValid = ::OpenAPI::fromJsonValue(m_custom_delivery_configuration, json[QString("CustomDeliveryConfiguration")]);
    m_custom_delivery_configuration_isSet = !json[QString("CustomDeliveryConfiguration")].isNull() && m_custom_delivery_configuration_isValid;

    m_id_isValid = ::OpenAPI::fromJsonValue(m_id, json[QString("Id")]);
    m_id_isSet = !json[QString("Id")].isNull() && m_id_isValid;

    m_message_configuration_isValid = ::OpenAPI::fromJsonValue(m_message_configuration, json[QString("MessageConfiguration")]);
    m_message_configuration_isSet = !json[QString("MessageConfiguration")].isNull() && m_message_configuration_isValid;

    m_schedule_isValid = ::OpenAPI::fromJsonValue(m_schedule, json[QString("Schedule")]);
    m_schedule_isSet = !json[QString("Schedule")].isNull() && m_schedule_isValid;

    m_size_percent_isValid = ::OpenAPI::fromJsonValue(m_size_percent, json[QString("SizePercent")]);
    m_size_percent_isSet = !json[QString("SizePercent")].isNull() && m_size_percent_isValid;

    m_state_isValid = ::OpenAPI::fromJsonValue(m_state, json[QString("State")]);
    m_state_isSet = !json[QString("State")].isNull() && m_state_isValid;

    m_template_configuration_isValid = ::OpenAPI::fromJsonValue(m_template_configuration, json[QString("TemplateConfiguration")]);
    m_template_configuration_isSet = !json[QString("TemplateConfiguration")].isNull() && m_template_configuration_isValid;

    m_treatment_description_isValid = ::OpenAPI::fromJsonValue(m_treatment_description, json[QString("TreatmentDescription")]);
    m_treatment_description_isSet = !json[QString("TreatmentDescription")].isNull() && m_treatment_description_isValid;

    m_treatment_name_isValid = ::OpenAPI::fromJsonValue(m_treatment_name, json[QString("TreatmentName")]);
    m_treatment_name_isSet = !json[QString("TreatmentName")].isNull() && m_treatment_name_isValid;
}

QString OAITreatmentResource::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAITreatmentResource::asJsonObject() const {
    QJsonObject obj;
    if (m_custom_delivery_configuration.isSet()) {
        obj.insert(QString("CustomDeliveryConfiguration"), ::OpenAPI::toJsonValue(m_custom_delivery_configuration));
    }
    if (m_id_isSet) {
        obj.insert(QString("Id"), ::OpenAPI::toJsonValue(m_id));
    }
    if (m_message_configuration.isSet()) {
        obj.insert(QString("MessageConfiguration"), ::OpenAPI::toJsonValue(m_message_configuration));
    }
    if (m_schedule.isSet()) {
        obj.insert(QString("Schedule"), ::OpenAPI::toJsonValue(m_schedule));
    }
    if (m_size_percent_isSet) {
        obj.insert(QString("SizePercent"), ::OpenAPI::toJsonValue(m_size_percent));
    }
    if (m_state.isSet()) {
        obj.insert(QString("State"), ::OpenAPI::toJsonValue(m_state));
    }
    if (m_template_configuration.isSet()) {
        obj.insert(QString("TemplateConfiguration"), ::OpenAPI::toJsonValue(m_template_configuration));
    }
    if (m_treatment_description_isSet) {
        obj.insert(QString("TreatmentDescription"), ::OpenAPI::toJsonValue(m_treatment_description));
    }
    if (m_treatment_name_isSet) {
        obj.insert(QString("TreatmentName"), ::OpenAPI::toJsonValue(m_treatment_name));
    }
    return obj;
}

OAITreatmentResource_CustomDeliveryConfiguration OAITreatmentResource::getCustomDeliveryConfiguration() const {
    return m_custom_delivery_configuration;
}
void OAITreatmentResource::setCustomDeliveryConfiguration(const OAITreatmentResource_CustomDeliveryConfiguration &custom_delivery_configuration) {
    m_custom_delivery_configuration = custom_delivery_configuration;
    m_custom_delivery_configuration_isSet = true;
}

bool OAITreatmentResource::is_custom_delivery_configuration_Set() const{
    return m_custom_delivery_configuration_isSet;
}

bool OAITreatmentResource::is_custom_delivery_configuration_Valid() const{
    return m_custom_delivery_configuration_isValid;
}

QString OAITreatmentResource::getId() const {
    return m_id;
}
void OAITreatmentResource::setId(const QString &id) {
    m_id = id;
    m_id_isSet = true;
}

bool OAITreatmentResource::is_id_Set() const{
    return m_id_isSet;
}

bool OAITreatmentResource::is_id_Valid() const{
    return m_id_isValid;
}

OAITreatmentResource_MessageConfiguration OAITreatmentResource::getMessageConfiguration() const {
    return m_message_configuration;
}
void OAITreatmentResource::setMessageConfiguration(const OAITreatmentResource_MessageConfiguration &message_configuration) {
    m_message_configuration = message_configuration;
    m_message_configuration_isSet = true;
}

bool OAITreatmentResource::is_message_configuration_Set() const{
    return m_message_configuration_isSet;
}

bool OAITreatmentResource::is_message_configuration_Valid() const{
    return m_message_configuration_isValid;
}

OAITreatmentResource_Schedule OAITreatmentResource::getSchedule() const {
    return m_schedule;
}
void OAITreatmentResource::setSchedule(const OAITreatmentResource_Schedule &schedule) {
    m_schedule = schedule;
    m_schedule_isSet = true;
}

bool OAITreatmentResource::is_schedule_Set() const{
    return m_schedule_isSet;
}

bool OAITreatmentResource::is_schedule_Valid() const{
    return m_schedule_isValid;
}

qint32 OAITreatmentResource::getSizePercent() const {
    return m_size_percent;
}
void OAITreatmentResource::setSizePercent(const qint32 &size_percent) {
    m_size_percent = size_percent;
    m_size_percent_isSet = true;
}

bool OAITreatmentResource::is_size_percent_Set() const{
    return m_size_percent_isSet;
}

bool OAITreatmentResource::is_size_percent_Valid() const{
    return m_size_percent_isValid;
}

OAITreatmentResource_State OAITreatmentResource::getState() const {
    return m_state;
}
void OAITreatmentResource::setState(const OAITreatmentResource_State &state) {
    m_state = state;
    m_state_isSet = true;
}

bool OAITreatmentResource::is_state_Set() const{
    return m_state_isSet;
}

bool OAITreatmentResource::is_state_Valid() const{
    return m_state_isValid;
}

OAITreatmentResource_TemplateConfiguration OAITreatmentResource::getTemplateConfiguration() const {
    return m_template_configuration;
}
void OAITreatmentResource::setTemplateConfiguration(const OAITreatmentResource_TemplateConfiguration &template_configuration) {
    m_template_configuration = template_configuration;
    m_template_configuration_isSet = true;
}

bool OAITreatmentResource::is_template_configuration_Set() const{
    return m_template_configuration_isSet;
}

bool OAITreatmentResource::is_template_configuration_Valid() const{
    return m_template_configuration_isValid;
}

QString OAITreatmentResource::getTreatmentDescription() const {
    return m_treatment_description;
}
void OAITreatmentResource::setTreatmentDescription(const QString &treatment_description) {
    m_treatment_description = treatment_description;
    m_treatment_description_isSet = true;
}

bool OAITreatmentResource::is_treatment_description_Set() const{
    return m_treatment_description_isSet;
}

bool OAITreatmentResource::is_treatment_description_Valid() const{
    return m_treatment_description_isValid;
}

QString OAITreatmentResource::getTreatmentName() const {
    return m_treatment_name;
}
void OAITreatmentResource::setTreatmentName(const QString &treatment_name) {
    m_treatment_name = treatment_name;
    m_treatment_name_isSet = true;
}

bool OAITreatmentResource::is_treatment_name_Set() const{
    return m_treatment_name_isSet;
}

bool OAITreatmentResource::is_treatment_name_Valid() const{
    return m_treatment_name_isValid;
}

bool OAITreatmentResource::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_custom_delivery_configuration.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_message_configuration.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_schedule.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_size_percent_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_state.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_template_configuration.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_treatment_description_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_treatment_name_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAITreatmentResource::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_id_isValid && m_size_percent_isValid && true;
}

} // namespace OpenAPI
