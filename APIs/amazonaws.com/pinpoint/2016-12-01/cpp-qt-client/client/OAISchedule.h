/**
 * Amazon Pinpoint
 * Doc Engage API - Amazon Pinpoint API
 *
 * The version of the OpenAPI document: 2016-12-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAISchedule.h
 *
 * Specifies the schedule settings for a campaign.
 */

#ifndef OAISchedule_H
#define OAISchedule_H

#include <QJsonObject>

#include "OAIFrequency.h"
#include "OAISchedule_EventFilter.h"
#include "OAISchedule_QuietTime.h"
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAISchedule_EventFilter;
class OAISchedule_QuietTime;

class OAISchedule : public OAIObject {
public:
    OAISchedule();
    OAISchedule(QString json);
    ~OAISchedule() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getEndTime() const;
    void setEndTime(const QString &end_time);
    bool is_end_time_Set() const;
    bool is_end_time_Valid() const;

    OAISchedule_EventFilter getEventFilter() const;
    void setEventFilter(const OAISchedule_EventFilter &event_filter);
    bool is_event_filter_Set() const;
    bool is_event_filter_Valid() const;

    OAIFrequency getFrequency() const;
    void setFrequency(const OAIFrequency &frequency);
    bool is_frequency_Set() const;
    bool is_frequency_Valid() const;

    bool getIsLocalTime() const;
    void setIsLocalTime(const bool &is_local_time);
    bool is_is_local_time_Set() const;
    bool is_is_local_time_Valid() const;

    OAISchedule_QuietTime getQuietTime() const;
    void setQuietTime(const OAISchedule_QuietTime &quiet_time);
    bool is_quiet_time_Set() const;
    bool is_quiet_time_Valid() const;

    QString getStartTime() const;
    void setStartTime(const QString &start_time);
    bool is_start_time_Set() const;
    bool is_start_time_Valid() const;

    QString getTimezone() const;
    void setTimezone(const QString &timezone);
    bool is_timezone_Set() const;
    bool is_timezone_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_end_time;
    bool m_end_time_isSet;
    bool m_end_time_isValid;

    OAISchedule_EventFilter m_event_filter;
    bool m_event_filter_isSet;
    bool m_event_filter_isValid;

    OAIFrequency m_frequency;
    bool m_frequency_isSet;
    bool m_frequency_isValid;

    bool m_is_local_time;
    bool m_is_local_time_isSet;
    bool m_is_local_time_isValid;

    OAISchedule_QuietTime m_quiet_time;
    bool m_quiet_time_isSet;
    bool m_quiet_time_isValid;

    QString m_start_time;
    bool m_start_time_isSet;
    bool m_start_time_isValid;

    QString m_timezone;
    bool m_timezone_isSet;
    bool m_timezone_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAISchedule)

#endif // OAISchedule_H
