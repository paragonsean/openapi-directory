/**
 * Amazon Pinpoint
 * Doc Engage API - Amazon Pinpoint API
 *
 * The version of the OpenAPI document: 2016-12-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIJourneyRunResponse.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIJourneyRunResponse::OAIJourneyRunResponse(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIJourneyRunResponse::OAIJourneyRunResponse() {
    this->initializeModel();
}

OAIJourneyRunResponse::~OAIJourneyRunResponse() {}

void OAIJourneyRunResponse::initializeModel() {

    m_creation_time_isSet = false;
    m_creation_time_isValid = false;

    m_last_update_time_isSet = false;
    m_last_update_time_isValid = false;

    m_run_id_isSet = false;
    m_run_id_isValid = false;

    m_status_isSet = false;
    m_status_isValid = false;
}

void OAIJourneyRunResponse::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIJourneyRunResponse::fromJsonObject(QJsonObject json) {

    m_creation_time_isValid = ::OpenAPI::fromJsonValue(m_creation_time, json[QString("CreationTime")]);
    m_creation_time_isSet = !json[QString("CreationTime")].isNull() && m_creation_time_isValid;

    m_last_update_time_isValid = ::OpenAPI::fromJsonValue(m_last_update_time, json[QString("LastUpdateTime")]);
    m_last_update_time_isSet = !json[QString("LastUpdateTime")].isNull() && m_last_update_time_isValid;

    m_run_id_isValid = ::OpenAPI::fromJsonValue(m_run_id, json[QString("RunId")]);
    m_run_id_isSet = !json[QString("RunId")].isNull() && m_run_id_isValid;

    m_status_isValid = ::OpenAPI::fromJsonValue(m_status, json[QString("Status")]);
    m_status_isSet = !json[QString("Status")].isNull() && m_status_isValid;
}

QString OAIJourneyRunResponse::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIJourneyRunResponse::asJsonObject() const {
    QJsonObject obj;
    if (m_creation_time_isSet) {
        obj.insert(QString("CreationTime"), ::OpenAPI::toJsonValue(m_creation_time));
    }
    if (m_last_update_time_isSet) {
        obj.insert(QString("LastUpdateTime"), ::OpenAPI::toJsonValue(m_last_update_time));
    }
    if (m_run_id_isSet) {
        obj.insert(QString("RunId"), ::OpenAPI::toJsonValue(m_run_id));
    }
    if (m_status.isSet()) {
        obj.insert(QString("Status"), ::OpenAPI::toJsonValue(m_status));
    }
    return obj;
}

QString OAIJourneyRunResponse::getCreationTime() const {
    return m_creation_time;
}
void OAIJourneyRunResponse::setCreationTime(const QString &creation_time) {
    m_creation_time = creation_time;
    m_creation_time_isSet = true;
}

bool OAIJourneyRunResponse::is_creation_time_Set() const{
    return m_creation_time_isSet;
}

bool OAIJourneyRunResponse::is_creation_time_Valid() const{
    return m_creation_time_isValid;
}

QString OAIJourneyRunResponse::getLastUpdateTime() const {
    return m_last_update_time;
}
void OAIJourneyRunResponse::setLastUpdateTime(const QString &last_update_time) {
    m_last_update_time = last_update_time;
    m_last_update_time_isSet = true;
}

bool OAIJourneyRunResponse::is_last_update_time_Set() const{
    return m_last_update_time_isSet;
}

bool OAIJourneyRunResponse::is_last_update_time_Valid() const{
    return m_last_update_time_isValid;
}

QString OAIJourneyRunResponse::getRunId() const {
    return m_run_id;
}
void OAIJourneyRunResponse::setRunId(const QString &run_id) {
    m_run_id = run_id;
    m_run_id_isSet = true;
}

bool OAIJourneyRunResponse::is_run_id_Set() const{
    return m_run_id_isSet;
}

bool OAIJourneyRunResponse::is_run_id_Valid() const{
    return m_run_id_isValid;
}

OAIJourneyRunStatus OAIJourneyRunResponse::getStatus() const {
    return m_status;
}
void OAIJourneyRunResponse::setStatus(const OAIJourneyRunStatus &status) {
    m_status = status;
    m_status_isSet = true;
}

bool OAIJourneyRunResponse::is_status_Set() const{
    return m_status_isSet;
}

bool OAIJourneyRunResponse::is_status_Valid() const{
    return m_status_isValid;
}

bool OAIJourneyRunResponse::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_creation_time_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_last_update_time_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_run_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_status.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIJourneyRunResponse::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_creation_time_isValid && m_last_update_time_isValid && m_run_id_isValid && m_status_isValid && true;
}

} // namespace OpenAPI
