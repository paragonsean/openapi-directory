/**
 * Amazon Pinpoint
 * Doc Engage API - Amazon Pinpoint API
 *
 * The version of the OpenAPI document: 2016-12-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIInAppMessageContent_PrimaryBtn.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIInAppMessageContent_PrimaryBtn::OAIInAppMessageContent_PrimaryBtn(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIInAppMessageContent_PrimaryBtn::OAIInAppMessageContent_PrimaryBtn() {
    this->initializeModel();
}

OAIInAppMessageContent_PrimaryBtn::~OAIInAppMessageContent_PrimaryBtn() {}

void OAIInAppMessageContent_PrimaryBtn::initializeModel() {

    m_android_isSet = false;
    m_android_isValid = false;

    m_default_config_isSet = false;
    m_default_config_isValid = false;

    m_ios_isSet = false;
    m_ios_isValid = false;

    m_web_isSet = false;
    m_web_isValid = false;
}

void OAIInAppMessageContent_PrimaryBtn::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIInAppMessageContent_PrimaryBtn::fromJsonObject(QJsonObject json) {

    m_android_isValid = ::OpenAPI::fromJsonValue(m_android, json[QString("Android")]);
    m_android_isSet = !json[QString("Android")].isNull() && m_android_isValid;

    m_default_config_isValid = ::OpenAPI::fromJsonValue(m_default_config, json[QString("DefaultConfig")]);
    m_default_config_isSet = !json[QString("DefaultConfig")].isNull() && m_default_config_isValid;

    m_ios_isValid = ::OpenAPI::fromJsonValue(m_ios, json[QString("IOS")]);
    m_ios_isSet = !json[QString("IOS")].isNull() && m_ios_isValid;

    m_web_isValid = ::OpenAPI::fromJsonValue(m_web, json[QString("Web")]);
    m_web_isSet = !json[QString("Web")].isNull() && m_web_isValid;
}

QString OAIInAppMessageContent_PrimaryBtn::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIInAppMessageContent_PrimaryBtn::asJsonObject() const {
    QJsonObject obj;
    if (m_android.isSet()) {
        obj.insert(QString("Android"), ::OpenAPI::toJsonValue(m_android));
    }
    if (m_default_config.isSet()) {
        obj.insert(QString("DefaultConfig"), ::OpenAPI::toJsonValue(m_default_config));
    }
    if (m_ios.isSet()) {
        obj.insert(QString("IOS"), ::OpenAPI::toJsonValue(m_ios));
    }
    if (m_web.isSet()) {
        obj.insert(QString("Web"), ::OpenAPI::toJsonValue(m_web));
    }
    return obj;
}

OAIInAppMessageButton_Android OAIInAppMessageContent_PrimaryBtn::getAndroid() const {
    return m_android;
}
void OAIInAppMessageContent_PrimaryBtn::setAndroid(const OAIInAppMessageButton_Android &android) {
    m_android = android;
    m_android_isSet = true;
}

bool OAIInAppMessageContent_PrimaryBtn::is_android_Set() const{
    return m_android_isSet;
}

bool OAIInAppMessageContent_PrimaryBtn::is_android_Valid() const{
    return m_android_isValid;
}

OAIInAppMessageButton_DefaultConfig OAIInAppMessageContent_PrimaryBtn::getDefaultConfig() const {
    return m_default_config;
}
void OAIInAppMessageContent_PrimaryBtn::setDefaultConfig(const OAIInAppMessageButton_DefaultConfig &default_config) {
    m_default_config = default_config;
    m_default_config_isSet = true;
}

bool OAIInAppMessageContent_PrimaryBtn::is_default_config_Set() const{
    return m_default_config_isSet;
}

bool OAIInAppMessageContent_PrimaryBtn::is_default_config_Valid() const{
    return m_default_config_isValid;
}

OAIInAppMessageButton_Android OAIInAppMessageContent_PrimaryBtn::getIos() const {
    return m_ios;
}
void OAIInAppMessageContent_PrimaryBtn::setIos(const OAIInAppMessageButton_Android &ios) {
    m_ios = ios;
    m_ios_isSet = true;
}

bool OAIInAppMessageContent_PrimaryBtn::is_ios_Set() const{
    return m_ios_isSet;
}

bool OAIInAppMessageContent_PrimaryBtn::is_ios_Valid() const{
    return m_ios_isValid;
}

OAIInAppMessageButton_Android OAIInAppMessageContent_PrimaryBtn::getWeb() const {
    return m_web;
}
void OAIInAppMessageContent_PrimaryBtn::setWeb(const OAIInAppMessageButton_Android &web) {
    m_web = web;
    m_web_isSet = true;
}

bool OAIInAppMessageContent_PrimaryBtn::is_web_Set() const{
    return m_web_isSet;
}

bool OAIInAppMessageContent_PrimaryBtn::is_web_Valid() const{
    return m_web_isValid;
}

bool OAIInAppMessageContent_PrimaryBtn::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_android.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_default_config.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_ios.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_web.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIInAppMessageContent_PrimaryBtn::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
