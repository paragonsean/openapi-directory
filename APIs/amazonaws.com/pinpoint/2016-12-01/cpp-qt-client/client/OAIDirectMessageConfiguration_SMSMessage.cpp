/**
 * Amazon Pinpoint
 * Doc Engage API - Amazon Pinpoint API
 *
 * The version of the OpenAPI document: 2016-12-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIDirectMessageConfiguration_SMSMessage.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIDirectMessageConfiguration_SMSMessage::OAIDirectMessageConfiguration_SMSMessage(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIDirectMessageConfiguration_SMSMessage::OAIDirectMessageConfiguration_SMSMessage() {
    this->initializeModel();
}

OAIDirectMessageConfiguration_SMSMessage::~OAIDirectMessageConfiguration_SMSMessage() {}

void OAIDirectMessageConfiguration_SMSMessage::initializeModel() {

    m_body_isSet = false;
    m_body_isValid = false;

    m_keyword_isSet = false;
    m_keyword_isValid = false;

    m_media_url_isSet = false;
    m_media_url_isValid = false;

    m_message_type_isSet = false;
    m_message_type_isValid = false;

    m_origination_number_isSet = false;
    m_origination_number_isValid = false;

    m_sender_id_isSet = false;
    m_sender_id_isValid = false;

    m_substitutions_isSet = false;
    m_substitutions_isValid = false;

    m_entity_id_isSet = false;
    m_entity_id_isValid = false;

    m_template_id_isSet = false;
    m_template_id_isValid = false;
}

void OAIDirectMessageConfiguration_SMSMessage::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIDirectMessageConfiguration_SMSMessage::fromJsonObject(QJsonObject json) {

    m_body_isValid = ::OpenAPI::fromJsonValue(m_body, json[QString("Body")]);
    m_body_isSet = !json[QString("Body")].isNull() && m_body_isValid;

    m_keyword_isValid = ::OpenAPI::fromJsonValue(m_keyword, json[QString("Keyword")]);
    m_keyword_isSet = !json[QString("Keyword")].isNull() && m_keyword_isValid;

    m_media_url_isValid = ::OpenAPI::fromJsonValue(m_media_url, json[QString("MediaUrl")]);
    m_media_url_isSet = !json[QString("MediaUrl")].isNull() && m_media_url_isValid;

    m_message_type_isValid = ::OpenAPI::fromJsonValue(m_message_type, json[QString("MessageType")]);
    m_message_type_isSet = !json[QString("MessageType")].isNull() && m_message_type_isValid;

    m_origination_number_isValid = ::OpenAPI::fromJsonValue(m_origination_number, json[QString("OriginationNumber")]);
    m_origination_number_isSet = !json[QString("OriginationNumber")].isNull() && m_origination_number_isValid;

    m_sender_id_isValid = ::OpenAPI::fromJsonValue(m_sender_id, json[QString("SenderId")]);
    m_sender_id_isSet = !json[QString("SenderId")].isNull() && m_sender_id_isValid;

    m_substitutions_isValid = ::OpenAPI::fromJsonValue(m_substitutions, json[QString("Substitutions")]);
    m_substitutions_isSet = !json[QString("Substitutions")].isNull() && m_substitutions_isValid;

    m_entity_id_isValid = ::OpenAPI::fromJsonValue(m_entity_id, json[QString("EntityId")]);
    m_entity_id_isSet = !json[QString("EntityId")].isNull() && m_entity_id_isValid;

    m_template_id_isValid = ::OpenAPI::fromJsonValue(m_template_id, json[QString("TemplateId")]);
    m_template_id_isSet = !json[QString("TemplateId")].isNull() && m_template_id_isValid;
}

QString OAIDirectMessageConfiguration_SMSMessage::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIDirectMessageConfiguration_SMSMessage::asJsonObject() const {
    QJsonObject obj;
    if (m_body_isSet) {
        obj.insert(QString("Body"), ::OpenAPI::toJsonValue(m_body));
    }
    if (m_keyword_isSet) {
        obj.insert(QString("Keyword"), ::OpenAPI::toJsonValue(m_keyword));
    }
    if (m_media_url_isSet) {
        obj.insert(QString("MediaUrl"), ::OpenAPI::toJsonValue(m_media_url));
    }
    if (m_message_type.isSet()) {
        obj.insert(QString("MessageType"), ::OpenAPI::toJsonValue(m_message_type));
    }
    if (m_origination_number_isSet) {
        obj.insert(QString("OriginationNumber"), ::OpenAPI::toJsonValue(m_origination_number));
    }
    if (m_sender_id_isSet) {
        obj.insert(QString("SenderId"), ::OpenAPI::toJsonValue(m_sender_id));
    }
    if (m_substitutions.isSet()) {
        obj.insert(QString("Substitutions"), ::OpenAPI::toJsonValue(m_substitutions));
    }
    if (m_entity_id_isSet) {
        obj.insert(QString("EntityId"), ::OpenAPI::toJsonValue(m_entity_id));
    }
    if (m_template_id_isSet) {
        obj.insert(QString("TemplateId"), ::OpenAPI::toJsonValue(m_template_id));
    }
    return obj;
}

QString OAIDirectMessageConfiguration_SMSMessage::getBody() const {
    return m_body;
}
void OAIDirectMessageConfiguration_SMSMessage::setBody(const QString &body) {
    m_body = body;
    m_body_isSet = true;
}

bool OAIDirectMessageConfiguration_SMSMessage::is_body_Set() const{
    return m_body_isSet;
}

bool OAIDirectMessageConfiguration_SMSMessage::is_body_Valid() const{
    return m_body_isValid;
}

QString OAIDirectMessageConfiguration_SMSMessage::getKeyword() const {
    return m_keyword;
}
void OAIDirectMessageConfiguration_SMSMessage::setKeyword(const QString &keyword) {
    m_keyword = keyword;
    m_keyword_isSet = true;
}

bool OAIDirectMessageConfiguration_SMSMessage::is_keyword_Set() const{
    return m_keyword_isSet;
}

bool OAIDirectMessageConfiguration_SMSMessage::is_keyword_Valid() const{
    return m_keyword_isValid;
}

QString OAIDirectMessageConfiguration_SMSMessage::getMediaUrl() const {
    return m_media_url;
}
void OAIDirectMessageConfiguration_SMSMessage::setMediaUrl(const QString &media_url) {
    m_media_url = media_url;
    m_media_url_isSet = true;
}

bool OAIDirectMessageConfiguration_SMSMessage::is_media_url_Set() const{
    return m_media_url_isSet;
}

bool OAIDirectMessageConfiguration_SMSMessage::is_media_url_Valid() const{
    return m_media_url_isValid;
}

OAIMessageType OAIDirectMessageConfiguration_SMSMessage::getMessageType() const {
    return m_message_type;
}
void OAIDirectMessageConfiguration_SMSMessage::setMessageType(const OAIMessageType &message_type) {
    m_message_type = message_type;
    m_message_type_isSet = true;
}

bool OAIDirectMessageConfiguration_SMSMessage::is_message_type_Set() const{
    return m_message_type_isSet;
}

bool OAIDirectMessageConfiguration_SMSMessage::is_message_type_Valid() const{
    return m_message_type_isValid;
}

QString OAIDirectMessageConfiguration_SMSMessage::getOriginationNumber() const {
    return m_origination_number;
}
void OAIDirectMessageConfiguration_SMSMessage::setOriginationNumber(const QString &origination_number) {
    m_origination_number = origination_number;
    m_origination_number_isSet = true;
}

bool OAIDirectMessageConfiguration_SMSMessage::is_origination_number_Set() const{
    return m_origination_number_isSet;
}

bool OAIDirectMessageConfiguration_SMSMessage::is_origination_number_Valid() const{
    return m_origination_number_isValid;
}

QString OAIDirectMessageConfiguration_SMSMessage::getSenderId() const {
    return m_sender_id;
}
void OAIDirectMessageConfiguration_SMSMessage::setSenderId(const QString &sender_id) {
    m_sender_id = sender_id;
    m_sender_id_isSet = true;
}

bool OAIDirectMessageConfiguration_SMSMessage::is_sender_id_Set() const{
    return m_sender_id_isSet;
}

bool OAIDirectMessageConfiguration_SMSMessage::is_sender_id_Valid() const{
    return m_sender_id_isValid;
}

QMap OAIDirectMessageConfiguration_SMSMessage::getSubstitutions() const {
    return m_substitutions;
}
void OAIDirectMessageConfiguration_SMSMessage::setSubstitutions(const QMap &substitutions) {
    m_substitutions = substitutions;
    m_substitutions_isSet = true;
}

bool OAIDirectMessageConfiguration_SMSMessage::is_substitutions_Set() const{
    return m_substitutions_isSet;
}

bool OAIDirectMessageConfiguration_SMSMessage::is_substitutions_Valid() const{
    return m_substitutions_isValid;
}

QString OAIDirectMessageConfiguration_SMSMessage::getEntityId() const {
    return m_entity_id;
}
void OAIDirectMessageConfiguration_SMSMessage::setEntityId(const QString &entity_id) {
    m_entity_id = entity_id;
    m_entity_id_isSet = true;
}

bool OAIDirectMessageConfiguration_SMSMessage::is_entity_id_Set() const{
    return m_entity_id_isSet;
}

bool OAIDirectMessageConfiguration_SMSMessage::is_entity_id_Valid() const{
    return m_entity_id_isValid;
}

QString OAIDirectMessageConfiguration_SMSMessage::getTemplateId() const {
    return m_template_id;
}
void OAIDirectMessageConfiguration_SMSMessage::setTemplateId(const QString &template_id) {
    m_template_id = template_id;
    m_template_id_isSet = true;
}

bool OAIDirectMessageConfiguration_SMSMessage::is_template_id_Set() const{
    return m_template_id_isSet;
}

bool OAIDirectMessageConfiguration_SMSMessage::is_template_id_Valid() const{
    return m_template_id_isValid;
}

bool OAIDirectMessageConfiguration_SMSMessage::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_body_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_keyword_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_media_url_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_message_type.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_origination_number_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_sender_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_substitutions.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_entity_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_template_id_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIDirectMessageConfiguration_SMSMessage::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
