/**
 * Amazon Pinpoint
 * Doc Engage API - Amazon Pinpoint API
 *
 * The version of the OpenAPI document: 2016-12-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIJourneyResponse.h
 *
 * Provides information about the status, configuration, and other settings for a journey.
 */

#ifndef OAIJourneyResponse_H
#define OAIJourneyResponse_H

#include <QJsonObject>

#include "OAICreateJourney_request_WriteJourneyRequest_JourneyChannelSettings.h"
#include "OAICreateJourney_request_WriteJourneyRequest_Limits.h"
#include "OAICreateJourney_request_WriteJourneyRequest_QuietTime.h"
#include "OAICreateJourney_request_WriteJourneyRequest_Schedule.h"
#include "OAICreateJourney_request_WriteJourneyRequest_StartCondition.h"
#include "OAIJourneyResponse_ClosedDays.h"
#include "OAIJourneyResponse_OpenHours.h"
#include "OAIState.h"
#include <QList>
#include <QMap>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAICreateJourney_request_WriteJourneyRequest_Limits;
class OAICreateJourney_request_WriteJourneyRequest_QuietTime;
class OAICreateJourney_request_WriteJourneyRequest_Schedule;
class OAICreateJourney_request_WriteJourneyRequest_StartCondition;
class OAICreateJourney_request_WriteJourneyRequest_JourneyChannelSettings;
class OAIJourneyResponse_OpenHours;
class OAIJourneyResponse_ClosedDays;

class OAIJourneyResponse : public OAIObject {
public:
    OAIJourneyResponse();
    OAIJourneyResponse(QString json);
    ~OAIJourneyResponse() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QMap getActivities() const;
    void setActivities(const QMap &activities);
    bool is_activities_Set() const;
    bool is_activities_Valid() const;

    QString getApplicationId() const;
    void setApplicationId(const QString &application_id);
    bool is_application_id_Set() const;
    bool is_application_id_Valid() const;

    QString getCreationDate() const;
    void setCreationDate(const QString &creation_date);
    bool is_creation_date_Set() const;
    bool is_creation_date_Valid() const;

    QString getId() const;
    void setId(const QString &id);
    bool is_id_Set() const;
    bool is_id_Valid() const;

    QString getLastModifiedDate() const;
    void setLastModifiedDate(const QString &last_modified_date);
    bool is_last_modified_date_Set() const;
    bool is_last_modified_date_Valid() const;

    OAICreateJourney_request_WriteJourneyRequest_Limits getLimits() const;
    void setLimits(const OAICreateJourney_request_WriteJourneyRequest_Limits &limits);
    bool is_limits_Set() const;
    bool is_limits_Valid() const;

    bool getLocalTime() const;
    void setLocalTime(const bool &local_time);
    bool is_local_time_Set() const;
    bool is_local_time_Valid() const;

    QString getName() const;
    void setName(const QString &name);
    bool is_name_Set() const;
    bool is_name_Valid() const;

    OAICreateJourney_request_WriteJourneyRequest_QuietTime getQuietTime() const;
    void setQuietTime(const OAICreateJourney_request_WriteJourneyRequest_QuietTime &quiet_time);
    bool is_quiet_time_Set() const;
    bool is_quiet_time_Valid() const;

    QString getRefreshFrequency() const;
    void setRefreshFrequency(const QString &refresh_frequency);
    bool is_refresh_frequency_Set() const;
    bool is_refresh_frequency_Valid() const;

    OAICreateJourney_request_WriteJourneyRequest_Schedule getSchedule() const;
    void setSchedule(const OAICreateJourney_request_WriteJourneyRequest_Schedule &schedule);
    bool is_schedule_Set() const;
    bool is_schedule_Valid() const;

    QString getStartActivity() const;
    void setStartActivity(const QString &start_activity);
    bool is_start_activity_Set() const;
    bool is_start_activity_Valid() const;

    OAICreateJourney_request_WriteJourneyRequest_StartCondition getStartCondition() const;
    void setStartCondition(const OAICreateJourney_request_WriteJourneyRequest_StartCondition &start_condition);
    bool is_start_condition_Set() const;
    bool is_start_condition_Valid() const;

    OAIState getState() const;
    void setState(const OAIState &state);
    bool is_state_Set() const;
    bool is_state_Valid() const;

    QMap getTags() const;
    void setTags(const QMap &tags);
    bool is_tags_Set() const;
    bool is_tags_Valid() const;

    bool getWaitForQuietTime() const;
    void setWaitForQuietTime(const bool &wait_for_quiet_time);
    bool is_wait_for_quiet_time_Set() const;
    bool is_wait_for_quiet_time_Valid() const;

    bool getRefreshOnSegmentUpdate() const;
    void setRefreshOnSegmentUpdate(const bool &refresh_on_segment_update);
    bool is_refresh_on_segment_update_Set() const;
    bool is_refresh_on_segment_update_Valid() const;

    OAICreateJourney_request_WriteJourneyRequest_JourneyChannelSettings getJourneyChannelSettings() const;
    void setJourneyChannelSettings(const OAICreateJourney_request_WriteJourneyRequest_JourneyChannelSettings &journey_channel_settings);
    bool is_journey_channel_settings_Set() const;
    bool is_journey_channel_settings_Valid() const;

    bool getSendingSchedule() const;
    void setSendingSchedule(const bool &sending_schedule);
    bool is_sending_schedule_Set() const;
    bool is_sending_schedule_Valid() const;

    OAIJourneyResponse_OpenHours getOpenHours() const;
    void setOpenHours(const OAIJourneyResponse_OpenHours &open_hours);
    bool is_open_hours_Set() const;
    bool is_open_hours_Valid() const;

    OAIJourneyResponse_ClosedDays getClosedDays() const;
    void setClosedDays(const OAIJourneyResponse_ClosedDays &closed_days);
    bool is_closed_days_Set() const;
    bool is_closed_days_Valid() const;

    QList getTimezoneEstimationMethods() const;
    void setTimezoneEstimationMethods(const QList &timezone_estimation_methods);
    bool is_timezone_estimation_methods_Set() const;
    bool is_timezone_estimation_methods_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QMap m_activities;
    bool m_activities_isSet;
    bool m_activities_isValid;

    QString m_application_id;
    bool m_application_id_isSet;
    bool m_application_id_isValid;

    QString m_creation_date;
    bool m_creation_date_isSet;
    bool m_creation_date_isValid;

    QString m_id;
    bool m_id_isSet;
    bool m_id_isValid;

    QString m_last_modified_date;
    bool m_last_modified_date_isSet;
    bool m_last_modified_date_isValid;

    OAICreateJourney_request_WriteJourneyRequest_Limits m_limits;
    bool m_limits_isSet;
    bool m_limits_isValid;

    bool m_local_time;
    bool m_local_time_isSet;
    bool m_local_time_isValid;

    QString m_name;
    bool m_name_isSet;
    bool m_name_isValid;

    OAICreateJourney_request_WriteJourneyRequest_QuietTime m_quiet_time;
    bool m_quiet_time_isSet;
    bool m_quiet_time_isValid;

    QString m_refresh_frequency;
    bool m_refresh_frequency_isSet;
    bool m_refresh_frequency_isValid;

    OAICreateJourney_request_WriteJourneyRequest_Schedule m_schedule;
    bool m_schedule_isSet;
    bool m_schedule_isValid;

    QString m_start_activity;
    bool m_start_activity_isSet;
    bool m_start_activity_isValid;

    OAICreateJourney_request_WriteJourneyRequest_StartCondition m_start_condition;
    bool m_start_condition_isSet;
    bool m_start_condition_isValid;

    OAIState m_state;
    bool m_state_isSet;
    bool m_state_isValid;

    QMap m_tags;
    bool m_tags_isSet;
    bool m_tags_isValid;

    bool m_wait_for_quiet_time;
    bool m_wait_for_quiet_time_isSet;
    bool m_wait_for_quiet_time_isValid;

    bool m_refresh_on_segment_update;
    bool m_refresh_on_segment_update_isSet;
    bool m_refresh_on_segment_update_isValid;

    OAICreateJourney_request_WriteJourneyRequest_JourneyChannelSettings m_journey_channel_settings;
    bool m_journey_channel_settings_isSet;
    bool m_journey_channel_settings_isValid;

    bool m_sending_schedule;
    bool m_sending_schedule_isSet;
    bool m_sending_schedule_isValid;

    OAIJourneyResponse_OpenHours m_open_hours;
    bool m_open_hours_isSet;
    bool m_open_hours_isValid;

    OAIJourneyResponse_ClosedDays m_closed_days;
    bool m_closed_days_isSet;
    bool m_closed_days_isValid;

    QList m_timezone_estimation_methods;
    bool m_timezone_estimation_methods_isSet;
    bool m_timezone_estimation_methods_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIJourneyResponse)

#endif // OAIJourneyResponse_H
