/**
 * Amazon Pinpoint
 * Doc Engage API - Amazon Pinpoint API
 *
 * The version of the OpenAPI document: 2016-12-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIPushNotificationTemplateResponse_Baidu.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIPushNotificationTemplateResponse_Baidu::OAIPushNotificationTemplateResponse_Baidu(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIPushNotificationTemplateResponse_Baidu::OAIPushNotificationTemplateResponse_Baidu() {
    this->initializeModel();
}

OAIPushNotificationTemplateResponse_Baidu::~OAIPushNotificationTemplateResponse_Baidu() {}

void OAIPushNotificationTemplateResponse_Baidu::initializeModel() {

    m_action_isSet = false;
    m_action_isValid = false;

    m_body_isSet = false;
    m_body_isValid = false;

    m_image_icon_url_isSet = false;
    m_image_icon_url_isValid = false;

    m_image_url_isSet = false;
    m_image_url_isValid = false;

    m_raw_content_isSet = false;
    m_raw_content_isValid = false;

    m_small_image_icon_url_isSet = false;
    m_small_image_icon_url_isValid = false;

    m_sound_isSet = false;
    m_sound_isValid = false;

    m_title_isSet = false;
    m_title_isValid = false;

    m_url_isSet = false;
    m_url_isValid = false;
}

void OAIPushNotificationTemplateResponse_Baidu::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIPushNotificationTemplateResponse_Baidu::fromJsonObject(QJsonObject json) {

    m_action_isValid = ::OpenAPI::fromJsonValue(m_action, json[QString("Action")]);
    m_action_isSet = !json[QString("Action")].isNull() && m_action_isValid;

    m_body_isValid = ::OpenAPI::fromJsonValue(m_body, json[QString("Body")]);
    m_body_isSet = !json[QString("Body")].isNull() && m_body_isValid;

    m_image_icon_url_isValid = ::OpenAPI::fromJsonValue(m_image_icon_url, json[QString("ImageIconUrl")]);
    m_image_icon_url_isSet = !json[QString("ImageIconUrl")].isNull() && m_image_icon_url_isValid;

    m_image_url_isValid = ::OpenAPI::fromJsonValue(m_image_url, json[QString("ImageUrl")]);
    m_image_url_isSet = !json[QString("ImageUrl")].isNull() && m_image_url_isValid;

    m_raw_content_isValid = ::OpenAPI::fromJsonValue(m_raw_content, json[QString("RawContent")]);
    m_raw_content_isSet = !json[QString("RawContent")].isNull() && m_raw_content_isValid;

    m_small_image_icon_url_isValid = ::OpenAPI::fromJsonValue(m_small_image_icon_url, json[QString("SmallImageIconUrl")]);
    m_small_image_icon_url_isSet = !json[QString("SmallImageIconUrl")].isNull() && m_small_image_icon_url_isValid;

    m_sound_isValid = ::OpenAPI::fromJsonValue(m_sound, json[QString("Sound")]);
    m_sound_isSet = !json[QString("Sound")].isNull() && m_sound_isValid;

    m_title_isValid = ::OpenAPI::fromJsonValue(m_title, json[QString("Title")]);
    m_title_isSet = !json[QString("Title")].isNull() && m_title_isValid;

    m_url_isValid = ::OpenAPI::fromJsonValue(m_url, json[QString("Url")]);
    m_url_isSet = !json[QString("Url")].isNull() && m_url_isValid;
}

QString OAIPushNotificationTemplateResponse_Baidu::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIPushNotificationTemplateResponse_Baidu::asJsonObject() const {
    QJsonObject obj;
    if (m_action.isSet()) {
        obj.insert(QString("Action"), ::OpenAPI::toJsonValue(m_action));
    }
    if (m_body_isSet) {
        obj.insert(QString("Body"), ::OpenAPI::toJsonValue(m_body));
    }
    if (m_image_icon_url_isSet) {
        obj.insert(QString("ImageIconUrl"), ::OpenAPI::toJsonValue(m_image_icon_url));
    }
    if (m_image_url_isSet) {
        obj.insert(QString("ImageUrl"), ::OpenAPI::toJsonValue(m_image_url));
    }
    if (m_raw_content_isSet) {
        obj.insert(QString("RawContent"), ::OpenAPI::toJsonValue(m_raw_content));
    }
    if (m_small_image_icon_url_isSet) {
        obj.insert(QString("SmallImageIconUrl"), ::OpenAPI::toJsonValue(m_small_image_icon_url));
    }
    if (m_sound_isSet) {
        obj.insert(QString("Sound"), ::OpenAPI::toJsonValue(m_sound));
    }
    if (m_title_isSet) {
        obj.insert(QString("Title"), ::OpenAPI::toJsonValue(m_title));
    }
    if (m_url_isSet) {
        obj.insert(QString("Url"), ::OpenAPI::toJsonValue(m_url));
    }
    return obj;
}

OAIAction OAIPushNotificationTemplateResponse_Baidu::getAction() const {
    return m_action;
}
void OAIPushNotificationTemplateResponse_Baidu::setAction(const OAIAction &action) {
    m_action = action;
    m_action_isSet = true;
}

bool OAIPushNotificationTemplateResponse_Baidu::is_action_Set() const{
    return m_action_isSet;
}

bool OAIPushNotificationTemplateResponse_Baidu::is_action_Valid() const{
    return m_action_isValid;
}

QString OAIPushNotificationTemplateResponse_Baidu::getBody() const {
    return m_body;
}
void OAIPushNotificationTemplateResponse_Baidu::setBody(const QString &body) {
    m_body = body;
    m_body_isSet = true;
}

bool OAIPushNotificationTemplateResponse_Baidu::is_body_Set() const{
    return m_body_isSet;
}

bool OAIPushNotificationTemplateResponse_Baidu::is_body_Valid() const{
    return m_body_isValid;
}

QString OAIPushNotificationTemplateResponse_Baidu::getImageIconUrl() const {
    return m_image_icon_url;
}
void OAIPushNotificationTemplateResponse_Baidu::setImageIconUrl(const QString &image_icon_url) {
    m_image_icon_url = image_icon_url;
    m_image_icon_url_isSet = true;
}

bool OAIPushNotificationTemplateResponse_Baidu::is_image_icon_url_Set() const{
    return m_image_icon_url_isSet;
}

bool OAIPushNotificationTemplateResponse_Baidu::is_image_icon_url_Valid() const{
    return m_image_icon_url_isValid;
}

QString OAIPushNotificationTemplateResponse_Baidu::getImageUrl() const {
    return m_image_url;
}
void OAIPushNotificationTemplateResponse_Baidu::setImageUrl(const QString &image_url) {
    m_image_url = image_url;
    m_image_url_isSet = true;
}

bool OAIPushNotificationTemplateResponse_Baidu::is_image_url_Set() const{
    return m_image_url_isSet;
}

bool OAIPushNotificationTemplateResponse_Baidu::is_image_url_Valid() const{
    return m_image_url_isValid;
}

QString OAIPushNotificationTemplateResponse_Baidu::getRawContent() const {
    return m_raw_content;
}
void OAIPushNotificationTemplateResponse_Baidu::setRawContent(const QString &raw_content) {
    m_raw_content = raw_content;
    m_raw_content_isSet = true;
}

bool OAIPushNotificationTemplateResponse_Baidu::is_raw_content_Set() const{
    return m_raw_content_isSet;
}

bool OAIPushNotificationTemplateResponse_Baidu::is_raw_content_Valid() const{
    return m_raw_content_isValid;
}

QString OAIPushNotificationTemplateResponse_Baidu::getSmallImageIconUrl() const {
    return m_small_image_icon_url;
}
void OAIPushNotificationTemplateResponse_Baidu::setSmallImageIconUrl(const QString &small_image_icon_url) {
    m_small_image_icon_url = small_image_icon_url;
    m_small_image_icon_url_isSet = true;
}

bool OAIPushNotificationTemplateResponse_Baidu::is_small_image_icon_url_Set() const{
    return m_small_image_icon_url_isSet;
}

bool OAIPushNotificationTemplateResponse_Baidu::is_small_image_icon_url_Valid() const{
    return m_small_image_icon_url_isValid;
}

QString OAIPushNotificationTemplateResponse_Baidu::getSound() const {
    return m_sound;
}
void OAIPushNotificationTemplateResponse_Baidu::setSound(const QString &sound) {
    m_sound = sound;
    m_sound_isSet = true;
}

bool OAIPushNotificationTemplateResponse_Baidu::is_sound_Set() const{
    return m_sound_isSet;
}

bool OAIPushNotificationTemplateResponse_Baidu::is_sound_Valid() const{
    return m_sound_isValid;
}

QString OAIPushNotificationTemplateResponse_Baidu::getTitle() const {
    return m_title;
}
void OAIPushNotificationTemplateResponse_Baidu::setTitle(const QString &title) {
    m_title = title;
    m_title_isSet = true;
}

bool OAIPushNotificationTemplateResponse_Baidu::is_title_Set() const{
    return m_title_isSet;
}

bool OAIPushNotificationTemplateResponse_Baidu::is_title_Valid() const{
    return m_title_isValid;
}

QString OAIPushNotificationTemplateResponse_Baidu::getUrl() const {
    return m_url;
}
void OAIPushNotificationTemplateResponse_Baidu::setUrl(const QString &url) {
    m_url = url;
    m_url_isSet = true;
}

bool OAIPushNotificationTemplateResponse_Baidu::is_url_Set() const{
    return m_url_isSet;
}

bool OAIPushNotificationTemplateResponse_Baidu::is_url_Valid() const{
    return m_url_isValid;
}

bool OAIPushNotificationTemplateResponse_Baidu::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_action.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_body_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_image_icon_url_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_image_url_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_raw_content_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_small_image_icon_url_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_sound_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_title_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_url_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIPushNotificationTemplateResponse_Baidu::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
