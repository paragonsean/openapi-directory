/**
 * Amazon Pinpoint
 * Doc Engage API - Amazon Pinpoint API
 *
 * The version of the OpenAPI document: 2016-12-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIChannelType.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIChannelType::OAIChannelType(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIChannelType::OAIChannelType() {
    this->initializeModel();
}

OAIChannelType::~OAIChannelType() {}

void OAIChannelType::initializeModel() {

    m_value_isSet = false;
    m_value_isValid = false;
    m_value = eOAIChannelType::INVALID_VALUE_OPENAPI_GENERATED;
}

void OAIChannelType::fromJson(QString jsonString) {
    
    if ( jsonString.compare("PUSH", Qt::CaseInsensitive) == 0) {
        m_value = eOAIChannelType::PUSH;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("GCM", Qt::CaseInsensitive) == 0) {
        m_value = eOAIChannelType::GCM;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("APNS", Qt::CaseInsensitive) == 0) {
        m_value = eOAIChannelType::APNS;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("APNS_SANDBOX", Qt::CaseInsensitive) == 0) {
        m_value = eOAIChannelType::APNS_SANDBOX;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("APNS_VOIP", Qt::CaseInsensitive) == 0) {
        m_value = eOAIChannelType::APNS_VOIP;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("APNS_VOIP_SANDBOX", Qt::CaseInsensitive) == 0) {
        m_value = eOAIChannelType::APNS_VOIP_SANDBOX;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("ADM", Qt::CaseInsensitive) == 0) {
        m_value = eOAIChannelType::ADM;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("SMS", Qt::CaseInsensitive) == 0) {
        m_value = eOAIChannelType::SMS;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("VOICE", Qt::CaseInsensitive) == 0) {
        m_value = eOAIChannelType::VOICE;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("EMAIL", Qt::CaseInsensitive) == 0) {
        m_value = eOAIChannelType::EMAIL;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("BAIDU", Qt::CaseInsensitive) == 0) {
        m_value = eOAIChannelType::BAIDU;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("CUSTOM", Qt::CaseInsensitive) == 0) {
        m_value = eOAIChannelType::CUSTOM;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("IN_APP", Qt::CaseInsensitive) == 0) {
        m_value = eOAIChannelType::IN_APP;
        m_value_isSet = m_value_isValid = true;
    }
}

void OAIChannelType::fromJsonValue(QJsonValue json) {
fromJson(json.toString());
}

QString OAIChannelType::asJson() const {
    
    QString val;
    switch (m_value){
        case eOAIChannelType::PUSH:
            val = "PUSH";
            break;
        case eOAIChannelType::GCM:
            val = "GCM";
            break;
        case eOAIChannelType::APNS:
            val = "APNS";
            break;
        case eOAIChannelType::APNS_SANDBOX:
            val = "APNS_SANDBOX";
            break;
        case eOAIChannelType::APNS_VOIP:
            val = "APNS_VOIP";
            break;
        case eOAIChannelType::APNS_VOIP_SANDBOX:
            val = "APNS_VOIP_SANDBOX";
            break;
        case eOAIChannelType::ADM:
            val = "ADM";
            break;
        case eOAIChannelType::SMS:
            val = "SMS";
            break;
        case eOAIChannelType::VOICE:
            val = "VOICE";
            break;
        case eOAIChannelType::EMAIL:
            val = "EMAIL";
            break;
        case eOAIChannelType::BAIDU:
            val = "BAIDU";
            break;
        case eOAIChannelType::CUSTOM:
            val = "CUSTOM";
            break;
        case eOAIChannelType::IN_APP:
            val = "IN_APP";
            break;
        default:
            break;
    }
    return val;
}

QJsonValue OAIChannelType::asJsonValue() const {
    
    return QJsonValue(asJson());
}


OAIChannelType::eOAIChannelType OAIChannelType::getValue() const {
    return m_value;
}

void OAIChannelType::setValue(const OAIChannelType::eOAIChannelType& value){
    m_value = value;
    m_value_isSet = true;
}
bool OAIChannelType::isSet() const {
    
    return m_value_isSet;
}

bool OAIChannelType::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_value_isValid;
}

} // namespace OpenAPI
