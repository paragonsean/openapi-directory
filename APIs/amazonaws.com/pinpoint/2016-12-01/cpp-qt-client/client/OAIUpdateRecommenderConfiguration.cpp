/**
 * Amazon Pinpoint
 * Doc Engage API - Amazon Pinpoint API
 *
 * The version of the OpenAPI document: 2016-12-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIUpdateRecommenderConfiguration.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIUpdateRecommenderConfiguration::OAIUpdateRecommenderConfiguration(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIUpdateRecommenderConfiguration::OAIUpdateRecommenderConfiguration() {
    this->initializeModel();
}

OAIUpdateRecommenderConfiguration::~OAIUpdateRecommenderConfiguration() {}

void OAIUpdateRecommenderConfiguration::initializeModel() {

    m_attributes_isSet = false;
    m_attributes_isValid = false;

    m_description_isSet = false;
    m_description_isValid = false;

    m_name_isSet = false;
    m_name_isValid = false;

    m_recommendation_provider_id_type_isSet = false;
    m_recommendation_provider_id_type_isValid = false;

    m_recommendation_provider_role_arn_isSet = false;
    m_recommendation_provider_role_arn_isValid = false;

    m_recommendation_provider_uri_isSet = false;
    m_recommendation_provider_uri_isValid = false;

    m_recommendation_transformer_uri_isSet = false;
    m_recommendation_transformer_uri_isValid = false;

    m_recommendations_display_name_isSet = false;
    m_recommendations_display_name_isValid = false;

    m_recommendations_per_message_isSet = false;
    m_recommendations_per_message_isValid = false;
}

void OAIUpdateRecommenderConfiguration::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIUpdateRecommenderConfiguration::fromJsonObject(QJsonObject json) {

    m_attributes_isValid = ::OpenAPI::fromJsonValue(m_attributes, json[QString("Attributes")]);
    m_attributes_isSet = !json[QString("Attributes")].isNull() && m_attributes_isValid;

    m_description_isValid = ::OpenAPI::fromJsonValue(m_description, json[QString("Description")]);
    m_description_isSet = !json[QString("Description")].isNull() && m_description_isValid;

    m_name_isValid = ::OpenAPI::fromJsonValue(m_name, json[QString("Name")]);
    m_name_isSet = !json[QString("Name")].isNull() && m_name_isValid;

    m_recommendation_provider_id_type_isValid = ::OpenAPI::fromJsonValue(m_recommendation_provider_id_type, json[QString("RecommendationProviderIdType")]);
    m_recommendation_provider_id_type_isSet = !json[QString("RecommendationProviderIdType")].isNull() && m_recommendation_provider_id_type_isValid;

    m_recommendation_provider_role_arn_isValid = ::OpenAPI::fromJsonValue(m_recommendation_provider_role_arn, json[QString("RecommendationProviderRoleArn")]);
    m_recommendation_provider_role_arn_isSet = !json[QString("RecommendationProviderRoleArn")].isNull() && m_recommendation_provider_role_arn_isValid;

    m_recommendation_provider_uri_isValid = ::OpenAPI::fromJsonValue(m_recommendation_provider_uri, json[QString("RecommendationProviderUri")]);
    m_recommendation_provider_uri_isSet = !json[QString("RecommendationProviderUri")].isNull() && m_recommendation_provider_uri_isValid;

    m_recommendation_transformer_uri_isValid = ::OpenAPI::fromJsonValue(m_recommendation_transformer_uri, json[QString("RecommendationTransformerUri")]);
    m_recommendation_transformer_uri_isSet = !json[QString("RecommendationTransformerUri")].isNull() && m_recommendation_transformer_uri_isValid;

    m_recommendations_display_name_isValid = ::OpenAPI::fromJsonValue(m_recommendations_display_name, json[QString("RecommendationsDisplayName")]);
    m_recommendations_display_name_isSet = !json[QString("RecommendationsDisplayName")].isNull() && m_recommendations_display_name_isValid;

    m_recommendations_per_message_isValid = ::OpenAPI::fromJsonValue(m_recommendations_per_message, json[QString("RecommendationsPerMessage")]);
    m_recommendations_per_message_isSet = !json[QString("RecommendationsPerMessage")].isNull() && m_recommendations_per_message_isValid;
}

QString OAIUpdateRecommenderConfiguration::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIUpdateRecommenderConfiguration::asJsonObject() const {
    QJsonObject obj;
    if (m_attributes.isSet()) {
        obj.insert(QString("Attributes"), ::OpenAPI::toJsonValue(m_attributes));
    }
    if (m_description_isSet) {
        obj.insert(QString("Description"), ::OpenAPI::toJsonValue(m_description));
    }
    if (m_name_isSet) {
        obj.insert(QString("Name"), ::OpenAPI::toJsonValue(m_name));
    }
    if (m_recommendation_provider_id_type_isSet) {
        obj.insert(QString("RecommendationProviderIdType"), ::OpenAPI::toJsonValue(m_recommendation_provider_id_type));
    }
    if (m_recommendation_provider_role_arn_isSet) {
        obj.insert(QString("RecommendationProviderRoleArn"), ::OpenAPI::toJsonValue(m_recommendation_provider_role_arn));
    }
    if (m_recommendation_provider_uri_isSet) {
        obj.insert(QString("RecommendationProviderUri"), ::OpenAPI::toJsonValue(m_recommendation_provider_uri));
    }
    if (m_recommendation_transformer_uri_isSet) {
        obj.insert(QString("RecommendationTransformerUri"), ::OpenAPI::toJsonValue(m_recommendation_transformer_uri));
    }
    if (m_recommendations_display_name_isSet) {
        obj.insert(QString("RecommendationsDisplayName"), ::OpenAPI::toJsonValue(m_recommendations_display_name));
    }
    if (m_recommendations_per_message_isSet) {
        obj.insert(QString("RecommendationsPerMessage"), ::OpenAPI::toJsonValue(m_recommendations_per_message));
    }
    return obj;
}

QMap OAIUpdateRecommenderConfiguration::getAttributes() const {
    return m_attributes;
}
void OAIUpdateRecommenderConfiguration::setAttributes(const QMap &attributes) {
    m_attributes = attributes;
    m_attributes_isSet = true;
}

bool OAIUpdateRecommenderConfiguration::is_attributes_Set() const{
    return m_attributes_isSet;
}

bool OAIUpdateRecommenderConfiguration::is_attributes_Valid() const{
    return m_attributes_isValid;
}

QString OAIUpdateRecommenderConfiguration::getDescription() const {
    return m_description;
}
void OAIUpdateRecommenderConfiguration::setDescription(const QString &description) {
    m_description = description;
    m_description_isSet = true;
}

bool OAIUpdateRecommenderConfiguration::is_description_Set() const{
    return m_description_isSet;
}

bool OAIUpdateRecommenderConfiguration::is_description_Valid() const{
    return m_description_isValid;
}

QString OAIUpdateRecommenderConfiguration::getName() const {
    return m_name;
}
void OAIUpdateRecommenderConfiguration::setName(const QString &name) {
    m_name = name;
    m_name_isSet = true;
}

bool OAIUpdateRecommenderConfiguration::is_name_Set() const{
    return m_name_isSet;
}

bool OAIUpdateRecommenderConfiguration::is_name_Valid() const{
    return m_name_isValid;
}

QString OAIUpdateRecommenderConfiguration::getRecommendationProviderIdType() const {
    return m_recommendation_provider_id_type;
}
void OAIUpdateRecommenderConfiguration::setRecommendationProviderIdType(const QString &recommendation_provider_id_type) {
    m_recommendation_provider_id_type = recommendation_provider_id_type;
    m_recommendation_provider_id_type_isSet = true;
}

bool OAIUpdateRecommenderConfiguration::is_recommendation_provider_id_type_Set() const{
    return m_recommendation_provider_id_type_isSet;
}

bool OAIUpdateRecommenderConfiguration::is_recommendation_provider_id_type_Valid() const{
    return m_recommendation_provider_id_type_isValid;
}

QString OAIUpdateRecommenderConfiguration::getRecommendationProviderRoleArn() const {
    return m_recommendation_provider_role_arn;
}
void OAIUpdateRecommenderConfiguration::setRecommendationProviderRoleArn(const QString &recommendation_provider_role_arn) {
    m_recommendation_provider_role_arn = recommendation_provider_role_arn;
    m_recommendation_provider_role_arn_isSet = true;
}

bool OAIUpdateRecommenderConfiguration::is_recommendation_provider_role_arn_Set() const{
    return m_recommendation_provider_role_arn_isSet;
}

bool OAIUpdateRecommenderConfiguration::is_recommendation_provider_role_arn_Valid() const{
    return m_recommendation_provider_role_arn_isValid;
}

QString OAIUpdateRecommenderConfiguration::getRecommendationProviderUri() const {
    return m_recommendation_provider_uri;
}
void OAIUpdateRecommenderConfiguration::setRecommendationProviderUri(const QString &recommendation_provider_uri) {
    m_recommendation_provider_uri = recommendation_provider_uri;
    m_recommendation_provider_uri_isSet = true;
}

bool OAIUpdateRecommenderConfiguration::is_recommendation_provider_uri_Set() const{
    return m_recommendation_provider_uri_isSet;
}

bool OAIUpdateRecommenderConfiguration::is_recommendation_provider_uri_Valid() const{
    return m_recommendation_provider_uri_isValid;
}

QString OAIUpdateRecommenderConfiguration::getRecommendationTransformerUri() const {
    return m_recommendation_transformer_uri;
}
void OAIUpdateRecommenderConfiguration::setRecommendationTransformerUri(const QString &recommendation_transformer_uri) {
    m_recommendation_transformer_uri = recommendation_transformer_uri;
    m_recommendation_transformer_uri_isSet = true;
}

bool OAIUpdateRecommenderConfiguration::is_recommendation_transformer_uri_Set() const{
    return m_recommendation_transformer_uri_isSet;
}

bool OAIUpdateRecommenderConfiguration::is_recommendation_transformer_uri_Valid() const{
    return m_recommendation_transformer_uri_isValid;
}

QString OAIUpdateRecommenderConfiguration::getRecommendationsDisplayName() const {
    return m_recommendations_display_name;
}
void OAIUpdateRecommenderConfiguration::setRecommendationsDisplayName(const QString &recommendations_display_name) {
    m_recommendations_display_name = recommendations_display_name;
    m_recommendations_display_name_isSet = true;
}

bool OAIUpdateRecommenderConfiguration::is_recommendations_display_name_Set() const{
    return m_recommendations_display_name_isSet;
}

bool OAIUpdateRecommenderConfiguration::is_recommendations_display_name_Valid() const{
    return m_recommendations_display_name_isValid;
}

qint32 OAIUpdateRecommenderConfiguration::getRecommendationsPerMessage() const {
    return m_recommendations_per_message;
}
void OAIUpdateRecommenderConfiguration::setRecommendationsPerMessage(const qint32 &recommendations_per_message) {
    m_recommendations_per_message = recommendations_per_message;
    m_recommendations_per_message_isSet = true;
}

bool OAIUpdateRecommenderConfiguration::is_recommendations_per_message_Set() const{
    return m_recommendations_per_message_isSet;
}

bool OAIUpdateRecommenderConfiguration::is_recommendations_per_message_Valid() const{
    return m_recommendations_per_message_isValid;
}

bool OAIUpdateRecommenderConfiguration::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_attributes.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_description_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_recommendation_provider_id_type_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_recommendation_provider_role_arn_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_recommendation_provider_uri_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_recommendation_transformer_uri_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_recommendations_display_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_recommendations_per_message_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIUpdateRecommenderConfiguration::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_recommendation_provider_role_arn_isValid && m_recommendation_provider_uri_isValid && true;
}

} // namespace OpenAPI
