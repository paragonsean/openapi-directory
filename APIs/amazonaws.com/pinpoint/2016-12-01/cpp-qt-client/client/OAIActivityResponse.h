/**
 * Amazon Pinpoint
 * Doc Engage API - Amazon Pinpoint API
 *
 * The version of the OpenAPI document: 2016-12-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIActivityResponse.h
 *
 * Provides information about an activity that was performed by a campaign.
 */

#ifndef OAIActivityResponse_H
#define OAIActivityResponse_H

#include <QJsonObject>

#include <QMap>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIActivityResponse : public OAIObject {
public:
    OAIActivityResponse();
    OAIActivityResponse(QString json);
    ~OAIActivityResponse() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getApplicationId() const;
    void setApplicationId(const QString &application_id);
    bool is_application_id_Set() const;
    bool is_application_id_Valid() const;

    QString getCampaignId() const;
    void setCampaignId(const QString &campaign_id);
    bool is_campaign_id_Set() const;
    bool is_campaign_id_Valid() const;

    QString getEnd() const;
    void setEnd(const QString &end);
    bool is_end_Set() const;
    bool is_end_Valid() const;

    QString getId() const;
    void setId(const QString &id);
    bool is_id_Set() const;
    bool is_id_Valid() const;

    QString getResult() const;
    void setResult(const QString &result);
    bool is_result_Set() const;
    bool is_result_Valid() const;

    QString getScheduledStart() const;
    void setScheduledStart(const QString &scheduled_start);
    bool is_scheduled_start_Set() const;
    bool is_scheduled_start_Valid() const;

    QString getStart() const;
    void setStart(const QString &start);
    bool is_start_Set() const;
    bool is_start_Valid() const;

    QString getState() const;
    void setState(const QString &state);
    bool is_state_Set() const;
    bool is_state_Valid() const;

    qint32 getSuccessfulEndpointCount() const;
    void setSuccessfulEndpointCount(const qint32 &successful_endpoint_count);
    bool is_successful_endpoint_count_Set() const;
    bool is_successful_endpoint_count_Valid() const;

    qint32 getTimezonesCompletedCount() const;
    void setTimezonesCompletedCount(const qint32 &timezones_completed_count);
    bool is_timezones_completed_count_Set() const;
    bool is_timezones_completed_count_Valid() const;

    qint32 getTimezonesTotalCount() const;
    void setTimezonesTotalCount(const qint32 &timezones_total_count);
    bool is_timezones_total_count_Set() const;
    bool is_timezones_total_count_Valid() const;

    qint32 getTotalEndpointCount() const;
    void setTotalEndpointCount(const qint32 &total_endpoint_count);
    bool is_total_endpoint_count_Set() const;
    bool is_total_endpoint_count_Valid() const;

    QString getTreatmentId() const;
    void setTreatmentId(const QString &treatment_id);
    bool is_treatment_id_Set() const;
    bool is_treatment_id_Valid() const;

    QMap getExecutionMetrics() const;
    void setExecutionMetrics(const QMap &execution_metrics);
    bool is_execution_metrics_Set() const;
    bool is_execution_metrics_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_application_id;
    bool m_application_id_isSet;
    bool m_application_id_isValid;

    QString m_campaign_id;
    bool m_campaign_id_isSet;
    bool m_campaign_id_isValid;

    QString m_end;
    bool m_end_isSet;
    bool m_end_isValid;

    QString m_id;
    bool m_id_isSet;
    bool m_id_isValid;

    QString m_result;
    bool m_result_isSet;
    bool m_result_isValid;

    QString m_scheduled_start;
    bool m_scheduled_start_isSet;
    bool m_scheduled_start_isValid;

    QString m_start;
    bool m_start_isSet;
    bool m_start_isValid;

    QString m_state;
    bool m_state_isSet;
    bool m_state_isValid;

    qint32 m_successful_endpoint_count;
    bool m_successful_endpoint_count_isSet;
    bool m_successful_endpoint_count_isValid;

    qint32 m_timezones_completed_count;
    bool m_timezones_completed_count_isSet;
    bool m_timezones_completed_count_isValid;

    qint32 m_timezones_total_count;
    bool m_timezones_total_count_isSet;
    bool m_timezones_total_count_isValid;

    qint32 m_total_endpoint_count;
    bool m_total_endpoint_count_isSet;
    bool m_total_endpoint_count_isValid;

    QString m_treatment_id;
    bool m_treatment_id_isSet;
    bool m_treatment_id_isValid;

    QMap m_execution_metrics;
    bool m_execution_metrics_isSet;
    bool m_execution_metrics_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIActivityResponse)

#endif // OAIActivityResponse_H
