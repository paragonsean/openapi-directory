/**
 * Amazon Pinpoint
 * Doc Engage API - Amazon Pinpoint API
 *
 * The version of the OpenAPI document: 2016-12-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIEmailChannelResponse.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIEmailChannelResponse::OAIEmailChannelResponse(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIEmailChannelResponse::OAIEmailChannelResponse() {
    this->initializeModel();
}

OAIEmailChannelResponse::~OAIEmailChannelResponse() {}

void OAIEmailChannelResponse::initializeModel() {

    m_application_id_isSet = false;
    m_application_id_isValid = false;

    m_configuration_set_isSet = false;
    m_configuration_set_isValid = false;

    m_creation_date_isSet = false;
    m_creation_date_isValid = false;

    m_enabled_isSet = false;
    m_enabled_isValid = false;

    m_from_address_isSet = false;
    m_from_address_isValid = false;

    m_has_credential_isSet = false;
    m_has_credential_isValid = false;

    m_id_isSet = false;
    m_id_isValid = false;

    m_identity_isSet = false;
    m_identity_isValid = false;

    m_is_archived_isSet = false;
    m_is_archived_isValid = false;

    m_last_modified_by_isSet = false;
    m_last_modified_by_isValid = false;

    m_last_modified_date_isSet = false;
    m_last_modified_date_isValid = false;

    m_messages_per_second_isSet = false;
    m_messages_per_second_isValid = false;

    m_platform_isSet = false;
    m_platform_isValid = false;

    m_role_arn_isSet = false;
    m_role_arn_isValid = false;

    m_version_isSet = false;
    m_version_isValid = false;
}

void OAIEmailChannelResponse::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIEmailChannelResponse::fromJsonObject(QJsonObject json) {

    m_application_id_isValid = ::OpenAPI::fromJsonValue(m_application_id, json[QString("ApplicationId")]);
    m_application_id_isSet = !json[QString("ApplicationId")].isNull() && m_application_id_isValid;

    m_configuration_set_isValid = ::OpenAPI::fromJsonValue(m_configuration_set, json[QString("ConfigurationSet")]);
    m_configuration_set_isSet = !json[QString("ConfigurationSet")].isNull() && m_configuration_set_isValid;

    m_creation_date_isValid = ::OpenAPI::fromJsonValue(m_creation_date, json[QString("CreationDate")]);
    m_creation_date_isSet = !json[QString("CreationDate")].isNull() && m_creation_date_isValid;

    m_enabled_isValid = ::OpenAPI::fromJsonValue(m_enabled, json[QString("Enabled")]);
    m_enabled_isSet = !json[QString("Enabled")].isNull() && m_enabled_isValid;

    m_from_address_isValid = ::OpenAPI::fromJsonValue(m_from_address, json[QString("FromAddress")]);
    m_from_address_isSet = !json[QString("FromAddress")].isNull() && m_from_address_isValid;

    m_has_credential_isValid = ::OpenAPI::fromJsonValue(m_has_credential, json[QString("HasCredential")]);
    m_has_credential_isSet = !json[QString("HasCredential")].isNull() && m_has_credential_isValid;

    m_id_isValid = ::OpenAPI::fromJsonValue(m_id, json[QString("Id")]);
    m_id_isSet = !json[QString("Id")].isNull() && m_id_isValid;

    m_identity_isValid = ::OpenAPI::fromJsonValue(m_identity, json[QString("Identity")]);
    m_identity_isSet = !json[QString("Identity")].isNull() && m_identity_isValid;

    m_is_archived_isValid = ::OpenAPI::fromJsonValue(m_is_archived, json[QString("IsArchived")]);
    m_is_archived_isSet = !json[QString("IsArchived")].isNull() && m_is_archived_isValid;

    m_last_modified_by_isValid = ::OpenAPI::fromJsonValue(m_last_modified_by, json[QString("LastModifiedBy")]);
    m_last_modified_by_isSet = !json[QString("LastModifiedBy")].isNull() && m_last_modified_by_isValid;

    m_last_modified_date_isValid = ::OpenAPI::fromJsonValue(m_last_modified_date, json[QString("LastModifiedDate")]);
    m_last_modified_date_isSet = !json[QString("LastModifiedDate")].isNull() && m_last_modified_date_isValid;

    m_messages_per_second_isValid = ::OpenAPI::fromJsonValue(m_messages_per_second, json[QString("MessagesPerSecond")]);
    m_messages_per_second_isSet = !json[QString("MessagesPerSecond")].isNull() && m_messages_per_second_isValid;

    m_platform_isValid = ::OpenAPI::fromJsonValue(m_platform, json[QString("Platform")]);
    m_platform_isSet = !json[QString("Platform")].isNull() && m_platform_isValid;

    m_role_arn_isValid = ::OpenAPI::fromJsonValue(m_role_arn, json[QString("RoleArn")]);
    m_role_arn_isSet = !json[QString("RoleArn")].isNull() && m_role_arn_isValid;

    m_version_isValid = ::OpenAPI::fromJsonValue(m_version, json[QString("Version")]);
    m_version_isSet = !json[QString("Version")].isNull() && m_version_isValid;
}

QString OAIEmailChannelResponse::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIEmailChannelResponse::asJsonObject() const {
    QJsonObject obj;
    if (m_application_id_isSet) {
        obj.insert(QString("ApplicationId"), ::OpenAPI::toJsonValue(m_application_id));
    }
    if (m_configuration_set_isSet) {
        obj.insert(QString("ConfigurationSet"), ::OpenAPI::toJsonValue(m_configuration_set));
    }
    if (m_creation_date_isSet) {
        obj.insert(QString("CreationDate"), ::OpenAPI::toJsonValue(m_creation_date));
    }
    if (m_enabled_isSet) {
        obj.insert(QString("Enabled"), ::OpenAPI::toJsonValue(m_enabled));
    }
    if (m_from_address_isSet) {
        obj.insert(QString("FromAddress"), ::OpenAPI::toJsonValue(m_from_address));
    }
    if (m_has_credential_isSet) {
        obj.insert(QString("HasCredential"), ::OpenAPI::toJsonValue(m_has_credential));
    }
    if (m_id_isSet) {
        obj.insert(QString("Id"), ::OpenAPI::toJsonValue(m_id));
    }
    if (m_identity_isSet) {
        obj.insert(QString("Identity"), ::OpenAPI::toJsonValue(m_identity));
    }
    if (m_is_archived_isSet) {
        obj.insert(QString("IsArchived"), ::OpenAPI::toJsonValue(m_is_archived));
    }
    if (m_last_modified_by_isSet) {
        obj.insert(QString("LastModifiedBy"), ::OpenAPI::toJsonValue(m_last_modified_by));
    }
    if (m_last_modified_date_isSet) {
        obj.insert(QString("LastModifiedDate"), ::OpenAPI::toJsonValue(m_last_modified_date));
    }
    if (m_messages_per_second_isSet) {
        obj.insert(QString("MessagesPerSecond"), ::OpenAPI::toJsonValue(m_messages_per_second));
    }
    if (m_platform_isSet) {
        obj.insert(QString("Platform"), ::OpenAPI::toJsonValue(m_platform));
    }
    if (m_role_arn_isSet) {
        obj.insert(QString("RoleArn"), ::OpenAPI::toJsonValue(m_role_arn));
    }
    if (m_version_isSet) {
        obj.insert(QString("Version"), ::OpenAPI::toJsonValue(m_version));
    }
    return obj;
}

QString OAIEmailChannelResponse::getApplicationId() const {
    return m_application_id;
}
void OAIEmailChannelResponse::setApplicationId(const QString &application_id) {
    m_application_id = application_id;
    m_application_id_isSet = true;
}

bool OAIEmailChannelResponse::is_application_id_Set() const{
    return m_application_id_isSet;
}

bool OAIEmailChannelResponse::is_application_id_Valid() const{
    return m_application_id_isValid;
}

QString OAIEmailChannelResponse::getConfigurationSet() const {
    return m_configuration_set;
}
void OAIEmailChannelResponse::setConfigurationSet(const QString &configuration_set) {
    m_configuration_set = configuration_set;
    m_configuration_set_isSet = true;
}

bool OAIEmailChannelResponse::is_configuration_set_Set() const{
    return m_configuration_set_isSet;
}

bool OAIEmailChannelResponse::is_configuration_set_Valid() const{
    return m_configuration_set_isValid;
}

QString OAIEmailChannelResponse::getCreationDate() const {
    return m_creation_date;
}
void OAIEmailChannelResponse::setCreationDate(const QString &creation_date) {
    m_creation_date = creation_date;
    m_creation_date_isSet = true;
}

bool OAIEmailChannelResponse::is_creation_date_Set() const{
    return m_creation_date_isSet;
}

bool OAIEmailChannelResponse::is_creation_date_Valid() const{
    return m_creation_date_isValid;
}

bool OAIEmailChannelResponse::getEnabled() const {
    return m_enabled;
}
void OAIEmailChannelResponse::setEnabled(const bool &enabled) {
    m_enabled = enabled;
    m_enabled_isSet = true;
}

bool OAIEmailChannelResponse::is_enabled_Set() const{
    return m_enabled_isSet;
}

bool OAIEmailChannelResponse::is_enabled_Valid() const{
    return m_enabled_isValid;
}

QString OAIEmailChannelResponse::getFromAddress() const {
    return m_from_address;
}
void OAIEmailChannelResponse::setFromAddress(const QString &from_address) {
    m_from_address = from_address;
    m_from_address_isSet = true;
}

bool OAIEmailChannelResponse::is_from_address_Set() const{
    return m_from_address_isSet;
}

bool OAIEmailChannelResponse::is_from_address_Valid() const{
    return m_from_address_isValid;
}

bool OAIEmailChannelResponse::getHasCredential() const {
    return m_has_credential;
}
void OAIEmailChannelResponse::setHasCredential(const bool &has_credential) {
    m_has_credential = has_credential;
    m_has_credential_isSet = true;
}

bool OAIEmailChannelResponse::is_has_credential_Set() const{
    return m_has_credential_isSet;
}

bool OAIEmailChannelResponse::is_has_credential_Valid() const{
    return m_has_credential_isValid;
}

QString OAIEmailChannelResponse::getId() const {
    return m_id;
}
void OAIEmailChannelResponse::setId(const QString &id) {
    m_id = id;
    m_id_isSet = true;
}

bool OAIEmailChannelResponse::is_id_Set() const{
    return m_id_isSet;
}

bool OAIEmailChannelResponse::is_id_Valid() const{
    return m_id_isValid;
}

QString OAIEmailChannelResponse::getIdentity() const {
    return m_identity;
}
void OAIEmailChannelResponse::setIdentity(const QString &identity) {
    m_identity = identity;
    m_identity_isSet = true;
}

bool OAIEmailChannelResponse::is_identity_Set() const{
    return m_identity_isSet;
}

bool OAIEmailChannelResponse::is_identity_Valid() const{
    return m_identity_isValid;
}

bool OAIEmailChannelResponse::getIsArchived() const {
    return m_is_archived;
}
void OAIEmailChannelResponse::setIsArchived(const bool &is_archived) {
    m_is_archived = is_archived;
    m_is_archived_isSet = true;
}

bool OAIEmailChannelResponse::is_is_archived_Set() const{
    return m_is_archived_isSet;
}

bool OAIEmailChannelResponse::is_is_archived_Valid() const{
    return m_is_archived_isValid;
}

QString OAIEmailChannelResponse::getLastModifiedBy() const {
    return m_last_modified_by;
}
void OAIEmailChannelResponse::setLastModifiedBy(const QString &last_modified_by) {
    m_last_modified_by = last_modified_by;
    m_last_modified_by_isSet = true;
}

bool OAIEmailChannelResponse::is_last_modified_by_Set() const{
    return m_last_modified_by_isSet;
}

bool OAIEmailChannelResponse::is_last_modified_by_Valid() const{
    return m_last_modified_by_isValid;
}

QString OAIEmailChannelResponse::getLastModifiedDate() const {
    return m_last_modified_date;
}
void OAIEmailChannelResponse::setLastModifiedDate(const QString &last_modified_date) {
    m_last_modified_date = last_modified_date;
    m_last_modified_date_isSet = true;
}

bool OAIEmailChannelResponse::is_last_modified_date_Set() const{
    return m_last_modified_date_isSet;
}

bool OAIEmailChannelResponse::is_last_modified_date_Valid() const{
    return m_last_modified_date_isValid;
}

qint32 OAIEmailChannelResponse::getMessagesPerSecond() const {
    return m_messages_per_second;
}
void OAIEmailChannelResponse::setMessagesPerSecond(const qint32 &messages_per_second) {
    m_messages_per_second = messages_per_second;
    m_messages_per_second_isSet = true;
}

bool OAIEmailChannelResponse::is_messages_per_second_Set() const{
    return m_messages_per_second_isSet;
}

bool OAIEmailChannelResponse::is_messages_per_second_Valid() const{
    return m_messages_per_second_isValid;
}

QString OAIEmailChannelResponse::getPlatform() const {
    return m_platform;
}
void OAIEmailChannelResponse::setPlatform(const QString &platform) {
    m_platform = platform;
    m_platform_isSet = true;
}

bool OAIEmailChannelResponse::is_platform_Set() const{
    return m_platform_isSet;
}

bool OAIEmailChannelResponse::is_platform_Valid() const{
    return m_platform_isValid;
}

QString OAIEmailChannelResponse::getRoleArn() const {
    return m_role_arn;
}
void OAIEmailChannelResponse::setRoleArn(const QString &role_arn) {
    m_role_arn = role_arn;
    m_role_arn_isSet = true;
}

bool OAIEmailChannelResponse::is_role_arn_Set() const{
    return m_role_arn_isSet;
}

bool OAIEmailChannelResponse::is_role_arn_Valid() const{
    return m_role_arn_isValid;
}

qint32 OAIEmailChannelResponse::getVersion() const {
    return m_version;
}
void OAIEmailChannelResponse::setVersion(const qint32 &version) {
    m_version = version;
    m_version_isSet = true;
}

bool OAIEmailChannelResponse::is_version_Set() const{
    return m_version_isSet;
}

bool OAIEmailChannelResponse::is_version_Valid() const{
    return m_version_isValid;
}

bool OAIEmailChannelResponse::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_application_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_configuration_set_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_creation_date_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_enabled_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_from_address_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_has_credential_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_identity_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_is_archived_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_last_modified_by_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_last_modified_date_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_messages_per_second_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_platform_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_role_arn_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_version_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIEmailChannelResponse::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_platform_isValid && true;
}

} // namespace OpenAPI
