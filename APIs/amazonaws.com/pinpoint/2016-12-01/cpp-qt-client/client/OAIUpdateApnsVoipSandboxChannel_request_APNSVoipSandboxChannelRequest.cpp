/**
 * Amazon Pinpoint
 * Doc Engage API - Amazon Pinpoint API
 *
 * The version of the OpenAPI document: 2016-12-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIUpdateApnsVoipSandboxChannel_request_APNSVoipSandboxChannelRequest.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIUpdateApnsVoipSandboxChannel_request_APNSVoipSandboxChannelRequest::OAIUpdateApnsVoipSandboxChannel_request_APNSVoipSandboxChannelRequest(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIUpdateApnsVoipSandboxChannel_request_APNSVoipSandboxChannelRequest::OAIUpdateApnsVoipSandboxChannel_request_APNSVoipSandboxChannelRequest() {
    this->initializeModel();
}

OAIUpdateApnsVoipSandboxChannel_request_APNSVoipSandboxChannelRequest::~OAIUpdateApnsVoipSandboxChannel_request_APNSVoipSandboxChannelRequest() {}

void OAIUpdateApnsVoipSandboxChannel_request_APNSVoipSandboxChannelRequest::initializeModel() {

    m_bundle_id_isSet = false;
    m_bundle_id_isValid = false;

    m_certificate_isSet = false;
    m_certificate_isValid = false;

    m_default_authentication_method_isSet = false;
    m_default_authentication_method_isValid = false;

    m_enabled_isSet = false;
    m_enabled_isValid = false;

    m_private_key_isSet = false;
    m_private_key_isValid = false;

    m_team_id_isSet = false;
    m_team_id_isValid = false;

    m_token_key_isSet = false;
    m_token_key_isValid = false;

    m_token_key_id_isSet = false;
    m_token_key_id_isValid = false;
}

void OAIUpdateApnsVoipSandboxChannel_request_APNSVoipSandboxChannelRequest::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIUpdateApnsVoipSandboxChannel_request_APNSVoipSandboxChannelRequest::fromJsonObject(QJsonObject json) {

    m_bundle_id_isValid = ::OpenAPI::fromJsonValue(m_bundle_id, json[QString("BundleId")]);
    m_bundle_id_isSet = !json[QString("BundleId")].isNull() && m_bundle_id_isValid;

    m_certificate_isValid = ::OpenAPI::fromJsonValue(m_certificate, json[QString("Certificate")]);
    m_certificate_isSet = !json[QString("Certificate")].isNull() && m_certificate_isValid;

    m_default_authentication_method_isValid = ::OpenAPI::fromJsonValue(m_default_authentication_method, json[QString("DefaultAuthenticationMethod")]);
    m_default_authentication_method_isSet = !json[QString("DefaultAuthenticationMethod")].isNull() && m_default_authentication_method_isValid;

    m_enabled_isValid = ::OpenAPI::fromJsonValue(m_enabled, json[QString("Enabled")]);
    m_enabled_isSet = !json[QString("Enabled")].isNull() && m_enabled_isValid;

    m_private_key_isValid = ::OpenAPI::fromJsonValue(m_private_key, json[QString("PrivateKey")]);
    m_private_key_isSet = !json[QString("PrivateKey")].isNull() && m_private_key_isValid;

    m_team_id_isValid = ::OpenAPI::fromJsonValue(m_team_id, json[QString("TeamId")]);
    m_team_id_isSet = !json[QString("TeamId")].isNull() && m_team_id_isValid;

    m_token_key_isValid = ::OpenAPI::fromJsonValue(m_token_key, json[QString("TokenKey")]);
    m_token_key_isSet = !json[QString("TokenKey")].isNull() && m_token_key_isValid;

    m_token_key_id_isValid = ::OpenAPI::fromJsonValue(m_token_key_id, json[QString("TokenKeyId")]);
    m_token_key_id_isSet = !json[QString("TokenKeyId")].isNull() && m_token_key_id_isValid;
}

QString OAIUpdateApnsVoipSandboxChannel_request_APNSVoipSandboxChannelRequest::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIUpdateApnsVoipSandboxChannel_request_APNSVoipSandboxChannelRequest::asJsonObject() const {
    QJsonObject obj;
    if (m_bundle_id_isSet) {
        obj.insert(QString("BundleId"), ::OpenAPI::toJsonValue(m_bundle_id));
    }
    if (m_certificate_isSet) {
        obj.insert(QString("Certificate"), ::OpenAPI::toJsonValue(m_certificate));
    }
    if (m_default_authentication_method_isSet) {
        obj.insert(QString("DefaultAuthenticationMethod"), ::OpenAPI::toJsonValue(m_default_authentication_method));
    }
    if (m_enabled_isSet) {
        obj.insert(QString("Enabled"), ::OpenAPI::toJsonValue(m_enabled));
    }
    if (m_private_key_isSet) {
        obj.insert(QString("PrivateKey"), ::OpenAPI::toJsonValue(m_private_key));
    }
    if (m_team_id_isSet) {
        obj.insert(QString("TeamId"), ::OpenAPI::toJsonValue(m_team_id));
    }
    if (m_token_key_isSet) {
        obj.insert(QString("TokenKey"), ::OpenAPI::toJsonValue(m_token_key));
    }
    if (m_token_key_id_isSet) {
        obj.insert(QString("TokenKeyId"), ::OpenAPI::toJsonValue(m_token_key_id));
    }
    return obj;
}

QString OAIUpdateApnsVoipSandboxChannel_request_APNSVoipSandboxChannelRequest::getBundleId() const {
    return m_bundle_id;
}
void OAIUpdateApnsVoipSandboxChannel_request_APNSVoipSandboxChannelRequest::setBundleId(const QString &bundle_id) {
    m_bundle_id = bundle_id;
    m_bundle_id_isSet = true;
}

bool OAIUpdateApnsVoipSandboxChannel_request_APNSVoipSandboxChannelRequest::is_bundle_id_Set() const{
    return m_bundle_id_isSet;
}

bool OAIUpdateApnsVoipSandboxChannel_request_APNSVoipSandboxChannelRequest::is_bundle_id_Valid() const{
    return m_bundle_id_isValid;
}

QString OAIUpdateApnsVoipSandboxChannel_request_APNSVoipSandboxChannelRequest::getCertificate() const {
    return m_certificate;
}
void OAIUpdateApnsVoipSandboxChannel_request_APNSVoipSandboxChannelRequest::setCertificate(const QString &certificate) {
    m_certificate = certificate;
    m_certificate_isSet = true;
}

bool OAIUpdateApnsVoipSandboxChannel_request_APNSVoipSandboxChannelRequest::is_certificate_Set() const{
    return m_certificate_isSet;
}

bool OAIUpdateApnsVoipSandboxChannel_request_APNSVoipSandboxChannelRequest::is_certificate_Valid() const{
    return m_certificate_isValid;
}

QString OAIUpdateApnsVoipSandboxChannel_request_APNSVoipSandboxChannelRequest::getDefaultAuthenticationMethod() const {
    return m_default_authentication_method;
}
void OAIUpdateApnsVoipSandboxChannel_request_APNSVoipSandboxChannelRequest::setDefaultAuthenticationMethod(const QString &default_authentication_method) {
    m_default_authentication_method = default_authentication_method;
    m_default_authentication_method_isSet = true;
}

bool OAIUpdateApnsVoipSandboxChannel_request_APNSVoipSandboxChannelRequest::is_default_authentication_method_Set() const{
    return m_default_authentication_method_isSet;
}

bool OAIUpdateApnsVoipSandboxChannel_request_APNSVoipSandboxChannelRequest::is_default_authentication_method_Valid() const{
    return m_default_authentication_method_isValid;
}

bool OAIUpdateApnsVoipSandboxChannel_request_APNSVoipSandboxChannelRequest::getEnabled() const {
    return m_enabled;
}
void OAIUpdateApnsVoipSandboxChannel_request_APNSVoipSandboxChannelRequest::setEnabled(const bool &enabled) {
    m_enabled = enabled;
    m_enabled_isSet = true;
}

bool OAIUpdateApnsVoipSandboxChannel_request_APNSVoipSandboxChannelRequest::is_enabled_Set() const{
    return m_enabled_isSet;
}

bool OAIUpdateApnsVoipSandboxChannel_request_APNSVoipSandboxChannelRequest::is_enabled_Valid() const{
    return m_enabled_isValid;
}

QString OAIUpdateApnsVoipSandboxChannel_request_APNSVoipSandboxChannelRequest::getPrivateKey() const {
    return m_private_key;
}
void OAIUpdateApnsVoipSandboxChannel_request_APNSVoipSandboxChannelRequest::setPrivateKey(const QString &private_key) {
    m_private_key = private_key;
    m_private_key_isSet = true;
}

bool OAIUpdateApnsVoipSandboxChannel_request_APNSVoipSandboxChannelRequest::is_private_key_Set() const{
    return m_private_key_isSet;
}

bool OAIUpdateApnsVoipSandboxChannel_request_APNSVoipSandboxChannelRequest::is_private_key_Valid() const{
    return m_private_key_isValid;
}

QString OAIUpdateApnsVoipSandboxChannel_request_APNSVoipSandboxChannelRequest::getTeamId() const {
    return m_team_id;
}
void OAIUpdateApnsVoipSandboxChannel_request_APNSVoipSandboxChannelRequest::setTeamId(const QString &team_id) {
    m_team_id = team_id;
    m_team_id_isSet = true;
}

bool OAIUpdateApnsVoipSandboxChannel_request_APNSVoipSandboxChannelRequest::is_team_id_Set() const{
    return m_team_id_isSet;
}

bool OAIUpdateApnsVoipSandboxChannel_request_APNSVoipSandboxChannelRequest::is_team_id_Valid() const{
    return m_team_id_isValid;
}

QString OAIUpdateApnsVoipSandboxChannel_request_APNSVoipSandboxChannelRequest::getTokenKey() const {
    return m_token_key;
}
void OAIUpdateApnsVoipSandboxChannel_request_APNSVoipSandboxChannelRequest::setTokenKey(const QString &token_key) {
    m_token_key = token_key;
    m_token_key_isSet = true;
}

bool OAIUpdateApnsVoipSandboxChannel_request_APNSVoipSandboxChannelRequest::is_token_key_Set() const{
    return m_token_key_isSet;
}

bool OAIUpdateApnsVoipSandboxChannel_request_APNSVoipSandboxChannelRequest::is_token_key_Valid() const{
    return m_token_key_isValid;
}

QString OAIUpdateApnsVoipSandboxChannel_request_APNSVoipSandboxChannelRequest::getTokenKeyId() const {
    return m_token_key_id;
}
void OAIUpdateApnsVoipSandboxChannel_request_APNSVoipSandboxChannelRequest::setTokenKeyId(const QString &token_key_id) {
    m_token_key_id = token_key_id;
    m_token_key_id_isSet = true;
}

bool OAIUpdateApnsVoipSandboxChannel_request_APNSVoipSandboxChannelRequest::is_token_key_id_Set() const{
    return m_token_key_id_isSet;
}

bool OAIUpdateApnsVoipSandboxChannel_request_APNSVoipSandboxChannelRequest::is_token_key_id_Valid() const{
    return m_token_key_id_isValid;
}

bool OAIUpdateApnsVoipSandboxChannel_request_APNSVoipSandboxChannelRequest::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_bundle_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_certificate_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_default_authentication_method_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_enabled_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_private_key_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_team_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_token_key_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_token_key_id_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIUpdateApnsVoipSandboxChannel_request_APNSVoipSandboxChannelRequest::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
