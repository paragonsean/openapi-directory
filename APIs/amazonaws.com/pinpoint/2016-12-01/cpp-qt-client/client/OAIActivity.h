/**
 * Amazon Pinpoint
 * Doc Engage API - Amazon Pinpoint API
 *
 * The version of the OpenAPI document: 2016-12-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIActivity.h
 *
 * Specifies the configuration and other settings for an activity in a journey.
 */

#ifndef OAIActivity_H
#define OAIActivity_H

#include <QJsonObject>

#include "OAIActivity_CUSTOM.h"
#include "OAIActivity_ConditionalSplit.h"
#include "OAIActivity_ContactCenter.h"
#include "OAIActivity_EMAIL.h"
#include "OAIActivity_Holdout.h"
#include "OAIActivity_MultiCondition.h"
#include "OAIActivity_PUSH.h"
#include "OAIActivity_RandomSplit.h"
#include "OAIActivity_SMS.h"
#include "OAIActivity_Wait.h"
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIActivity_CUSTOM;
class OAIActivity_ConditionalSplit;
class OAIActivity_EMAIL;
class OAIActivity_Holdout;
class OAIActivity_MultiCondition;
class OAIActivity_PUSH;
class OAIActivity_RandomSplit;
class OAIActivity_SMS;
class OAIActivity_Wait;
class OAIActivity_ContactCenter;

class OAIActivity : public OAIObject {
public:
    OAIActivity();
    OAIActivity(QString json);
    ~OAIActivity() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAIActivity_CUSTOM getCustom() const;
    void setCustom(const OAIActivity_CUSTOM &custom);
    bool is_custom_Set() const;
    bool is_custom_Valid() const;

    OAIActivity_ConditionalSplit getConditionalSplit() const;
    void setConditionalSplit(const OAIActivity_ConditionalSplit &conditional_split);
    bool is_conditional_split_Set() const;
    bool is_conditional_split_Valid() const;

    QString getDescription() const;
    void setDescription(const QString &description);
    bool is_description_Set() const;
    bool is_description_Valid() const;

    OAIActivity_EMAIL getEmail() const;
    void setEmail(const OAIActivity_EMAIL &email);
    bool is_email_Set() const;
    bool is_email_Valid() const;

    OAIActivity_Holdout getHoldout() const;
    void setHoldout(const OAIActivity_Holdout &holdout);
    bool is_holdout_Set() const;
    bool is_holdout_Valid() const;

    OAIActivity_MultiCondition getMultiCondition() const;
    void setMultiCondition(const OAIActivity_MultiCondition &multi_condition);
    bool is_multi_condition_Set() const;
    bool is_multi_condition_Valid() const;

    OAIActivity_PUSH getPush() const;
    void setPush(const OAIActivity_PUSH &push);
    bool is_push_Set() const;
    bool is_push_Valid() const;

    OAIActivity_RandomSplit getRandomSplit() const;
    void setRandomSplit(const OAIActivity_RandomSplit &random_split);
    bool is_random_split_Set() const;
    bool is_random_split_Valid() const;

    OAIActivity_SMS getSms() const;
    void setSms(const OAIActivity_SMS &sms);
    bool is_sms_Set() const;
    bool is_sms_Valid() const;

    OAIActivity_Wait getWait() const;
    void setWait(const OAIActivity_Wait &wait);
    bool is_wait_Set() const;
    bool is_wait_Valid() const;

    OAIActivity_ContactCenter getContactCenter() const;
    void setContactCenter(const OAIActivity_ContactCenter &contact_center);
    bool is_contact_center_Set() const;
    bool is_contact_center_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAIActivity_CUSTOM m_custom;
    bool m_custom_isSet;
    bool m_custom_isValid;

    OAIActivity_ConditionalSplit m_conditional_split;
    bool m_conditional_split_isSet;
    bool m_conditional_split_isValid;

    QString m_description;
    bool m_description_isSet;
    bool m_description_isValid;

    OAIActivity_EMAIL m_email;
    bool m_email_isSet;
    bool m_email_isValid;

    OAIActivity_Holdout m_holdout;
    bool m_holdout_isSet;
    bool m_holdout_isValid;

    OAIActivity_MultiCondition m_multi_condition;
    bool m_multi_condition_isSet;
    bool m_multi_condition_isValid;

    OAIActivity_PUSH m_push;
    bool m_push_isSet;
    bool m_push_isValid;

    OAIActivity_RandomSplit m_random_split;
    bool m_random_split_isSet;
    bool m_random_split_isValid;

    OAIActivity_SMS m_sms;
    bool m_sms_isSet;
    bool m_sms_isValid;

    OAIActivity_Wait m_wait;
    bool m_wait_isSet;
    bool m_wait_isValid;

    OAIActivity_ContactCenter m_contact_center;
    bool m_contact_center_isSet;
    bool m_contact_center_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIActivity)

#endif // OAIActivity_H
