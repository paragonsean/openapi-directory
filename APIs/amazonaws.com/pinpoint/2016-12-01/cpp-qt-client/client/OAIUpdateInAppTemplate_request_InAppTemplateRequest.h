/**
 * Amazon Pinpoint
 * Doc Engage API - Amazon Pinpoint API
 *
 * The version of the OpenAPI document: 2016-12-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIUpdateInAppTemplate_request_InAppTemplateRequest.h
 *
 * InApp Template Request.
 */

#ifndef OAIUpdateInAppTemplate_request_InAppTemplateRequest_H
#define OAIUpdateInAppTemplate_request_InAppTemplateRequest_H

#include <QJsonObject>

#include "OAILayout.h"
#include <QList>
#include <QMap>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIUpdateInAppTemplate_request_InAppTemplateRequest : public OAIObject {
public:
    OAIUpdateInAppTemplate_request_InAppTemplateRequest();
    OAIUpdateInAppTemplate_request_InAppTemplateRequest(QString json);
    ~OAIUpdateInAppTemplate_request_InAppTemplateRequest() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QList getContent() const;
    void setContent(const QList &content);
    bool is_content_Set() const;
    bool is_content_Valid() const;

    QMap getCustomConfig() const;
    void setCustomConfig(const QMap &custom_config);
    bool is_custom_config_Set() const;
    bool is_custom_config_Valid() const;

    OAILayout getLayout() const;
    void setLayout(const OAILayout &layout);
    bool is_layout_Set() const;
    bool is_layout_Valid() const;

    QMap getTags() const;
    void setTags(const QMap &tags);
    bool is_tags_Set() const;
    bool is_tags_Valid() const;

    QString getTemplateDescription() const;
    void setTemplateDescription(const QString &template_description);
    bool is_template_description_Set() const;
    bool is_template_description_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QList m_content;
    bool m_content_isSet;
    bool m_content_isValid;

    QMap m_custom_config;
    bool m_custom_config_isSet;
    bool m_custom_config_isValid;

    OAILayout m_layout;
    bool m_layout_isSet;
    bool m_layout_isValid;

    QMap m_tags;
    bool m_tags_isSet;
    bool m_tags_isValid;

    QString m_template_description;
    bool m_template_description_isSet;
    bool m_template_description_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIUpdateInAppTemplate_request_InAppTemplateRequest)

#endif // OAIUpdateInAppTemplate_request_InAppTemplateRequest_H
