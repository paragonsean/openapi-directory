/**
 * Amazon Pinpoint
 * Doc Engage API - Amazon Pinpoint API
 *
 * The version of the OpenAPI document: 2016-12-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAISegmentBehaviors.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAISegmentBehaviors::OAISegmentBehaviors(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAISegmentBehaviors::OAISegmentBehaviors() {
    this->initializeModel();
}

OAISegmentBehaviors::~OAISegmentBehaviors() {}

void OAISegmentBehaviors::initializeModel() {

    m_recency_isSet = false;
    m_recency_isValid = false;
}

void OAISegmentBehaviors::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAISegmentBehaviors::fromJsonObject(QJsonObject json) {

    m_recency_isValid = ::OpenAPI::fromJsonValue(m_recency, json[QString("Recency")]);
    m_recency_isSet = !json[QString("Recency")].isNull() && m_recency_isValid;
}

QString OAISegmentBehaviors::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAISegmentBehaviors::asJsonObject() const {
    QJsonObject obj;
    if (m_recency.isSet()) {
        obj.insert(QString("Recency"), ::OpenAPI::toJsonValue(m_recency));
    }
    return obj;
}

OAISegmentBehaviors_Recency OAISegmentBehaviors::getRecency() const {
    return m_recency;
}
void OAISegmentBehaviors::setRecency(const OAISegmentBehaviors_Recency &recency) {
    m_recency = recency;
    m_recency_isSet = true;
}

bool OAISegmentBehaviors::is_recency_Set() const{
    return m_recency_isSet;
}

bool OAISegmentBehaviors::is_recency_Valid() const{
    return m_recency_isValid;
}

bool OAISegmentBehaviors::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_recency.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAISegmentBehaviors::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
