/**
 * Amazon Pinpoint
 * Doc Engage API - Amazon Pinpoint API
 *
 * The version of the OpenAPI document: 2016-12-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIEventsResponse.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIEventsResponse::OAIEventsResponse(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIEventsResponse::OAIEventsResponse() {
    this->initializeModel();
}

OAIEventsResponse::~OAIEventsResponse() {}

void OAIEventsResponse::initializeModel() {

    m_results_isSet = false;
    m_results_isValid = false;
}

void OAIEventsResponse::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIEventsResponse::fromJsonObject(QJsonObject json) {

    m_results_isValid = ::OpenAPI::fromJsonValue(m_results, json[QString("Results")]);
    m_results_isSet = !json[QString("Results")].isNull() && m_results_isValid;
}

QString OAIEventsResponse::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIEventsResponse::asJsonObject() const {
    QJsonObject obj;
    if (m_results.isSet()) {
        obj.insert(QString("Results"), ::OpenAPI::toJsonValue(m_results));
    }
    return obj;
}

QMap OAIEventsResponse::getResults() const {
    return m_results;
}
void OAIEventsResponse::setResults(const QMap &results) {
    m_results = results;
    m_results_isSet = true;
}

bool OAIEventsResponse::is_results_Set() const{
    return m_results_isSet;
}

bool OAIEventsResponse::is_results_Valid() const{
    return m_results_isValid;
}

bool OAIEventsResponse::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_results.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIEventsResponse::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
