/**
 * Amazon Pinpoint
 * Doc Engage API - Amazon Pinpoint API
 *
 * The version of the OpenAPI document: 2016-12-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIDirectMessageConfiguration_EmailMessage.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIDirectMessageConfiguration_EmailMessage::OAIDirectMessageConfiguration_EmailMessage(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIDirectMessageConfiguration_EmailMessage::OAIDirectMessageConfiguration_EmailMessage() {
    this->initializeModel();
}

OAIDirectMessageConfiguration_EmailMessage::~OAIDirectMessageConfiguration_EmailMessage() {}

void OAIDirectMessageConfiguration_EmailMessage::initializeModel() {

    m_body_isSet = false;
    m_body_isValid = false;

    m_feedback_forwarding_address_isSet = false;
    m_feedback_forwarding_address_isValid = false;

    m_from_address_isSet = false;
    m_from_address_isValid = false;

    m_raw_email_isSet = false;
    m_raw_email_isValid = false;

    m_reply_to_addresses_isSet = false;
    m_reply_to_addresses_isValid = false;

    m_simple_email_isSet = false;
    m_simple_email_isValid = false;

    m_substitutions_isSet = false;
    m_substitutions_isValid = false;
}

void OAIDirectMessageConfiguration_EmailMessage::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIDirectMessageConfiguration_EmailMessage::fromJsonObject(QJsonObject json) {

    m_body_isValid = ::OpenAPI::fromJsonValue(m_body, json[QString("Body")]);
    m_body_isSet = !json[QString("Body")].isNull() && m_body_isValid;

    m_feedback_forwarding_address_isValid = ::OpenAPI::fromJsonValue(m_feedback_forwarding_address, json[QString("FeedbackForwardingAddress")]);
    m_feedback_forwarding_address_isSet = !json[QString("FeedbackForwardingAddress")].isNull() && m_feedback_forwarding_address_isValid;

    m_from_address_isValid = ::OpenAPI::fromJsonValue(m_from_address, json[QString("FromAddress")]);
    m_from_address_isSet = !json[QString("FromAddress")].isNull() && m_from_address_isValid;

    m_raw_email_isValid = ::OpenAPI::fromJsonValue(m_raw_email, json[QString("RawEmail")]);
    m_raw_email_isSet = !json[QString("RawEmail")].isNull() && m_raw_email_isValid;

    m_reply_to_addresses_isValid = ::OpenAPI::fromJsonValue(m_reply_to_addresses, json[QString("ReplyToAddresses")]);
    m_reply_to_addresses_isSet = !json[QString("ReplyToAddresses")].isNull() && m_reply_to_addresses_isValid;

    m_simple_email_isValid = ::OpenAPI::fromJsonValue(m_simple_email, json[QString("SimpleEmail")]);
    m_simple_email_isSet = !json[QString("SimpleEmail")].isNull() && m_simple_email_isValid;

    m_substitutions_isValid = ::OpenAPI::fromJsonValue(m_substitutions, json[QString("Substitutions")]);
    m_substitutions_isSet = !json[QString("Substitutions")].isNull() && m_substitutions_isValid;
}

QString OAIDirectMessageConfiguration_EmailMessage::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIDirectMessageConfiguration_EmailMessage::asJsonObject() const {
    QJsonObject obj;
    if (m_body_isSet) {
        obj.insert(QString("Body"), ::OpenAPI::toJsonValue(m_body));
    }
    if (m_feedback_forwarding_address_isSet) {
        obj.insert(QString("FeedbackForwardingAddress"), ::OpenAPI::toJsonValue(m_feedback_forwarding_address));
    }
    if (m_from_address_isSet) {
        obj.insert(QString("FromAddress"), ::OpenAPI::toJsonValue(m_from_address));
    }
    if (m_raw_email.isSet()) {
        obj.insert(QString("RawEmail"), ::OpenAPI::toJsonValue(m_raw_email));
    }
    if (m_reply_to_addresses.isSet()) {
        obj.insert(QString("ReplyToAddresses"), ::OpenAPI::toJsonValue(m_reply_to_addresses));
    }
    if (m_simple_email.isSet()) {
        obj.insert(QString("SimpleEmail"), ::OpenAPI::toJsonValue(m_simple_email));
    }
    if (m_substitutions.isSet()) {
        obj.insert(QString("Substitutions"), ::OpenAPI::toJsonValue(m_substitutions));
    }
    return obj;
}

QString OAIDirectMessageConfiguration_EmailMessage::getBody() const {
    return m_body;
}
void OAIDirectMessageConfiguration_EmailMessage::setBody(const QString &body) {
    m_body = body;
    m_body_isSet = true;
}

bool OAIDirectMessageConfiguration_EmailMessage::is_body_Set() const{
    return m_body_isSet;
}

bool OAIDirectMessageConfiguration_EmailMessage::is_body_Valid() const{
    return m_body_isValid;
}

QString OAIDirectMessageConfiguration_EmailMessage::getFeedbackForwardingAddress() const {
    return m_feedback_forwarding_address;
}
void OAIDirectMessageConfiguration_EmailMessage::setFeedbackForwardingAddress(const QString &feedback_forwarding_address) {
    m_feedback_forwarding_address = feedback_forwarding_address;
    m_feedback_forwarding_address_isSet = true;
}

bool OAIDirectMessageConfiguration_EmailMessage::is_feedback_forwarding_address_Set() const{
    return m_feedback_forwarding_address_isSet;
}

bool OAIDirectMessageConfiguration_EmailMessage::is_feedback_forwarding_address_Valid() const{
    return m_feedback_forwarding_address_isValid;
}

QString OAIDirectMessageConfiguration_EmailMessage::getFromAddress() const {
    return m_from_address;
}
void OAIDirectMessageConfiguration_EmailMessage::setFromAddress(const QString &from_address) {
    m_from_address = from_address;
    m_from_address_isSet = true;
}

bool OAIDirectMessageConfiguration_EmailMessage::is_from_address_Set() const{
    return m_from_address_isSet;
}

bool OAIDirectMessageConfiguration_EmailMessage::is_from_address_Valid() const{
    return m_from_address_isValid;
}

OAIEmailMessage_RawEmail OAIDirectMessageConfiguration_EmailMessage::getRawEmail() const {
    return m_raw_email;
}
void OAIDirectMessageConfiguration_EmailMessage::setRawEmail(const OAIEmailMessage_RawEmail &raw_email) {
    m_raw_email = raw_email;
    m_raw_email_isSet = true;
}

bool OAIDirectMessageConfiguration_EmailMessage::is_raw_email_Set() const{
    return m_raw_email_isSet;
}

bool OAIDirectMessageConfiguration_EmailMessage::is_raw_email_Valid() const{
    return m_raw_email_isValid;
}

QList OAIDirectMessageConfiguration_EmailMessage::getReplyToAddresses() const {
    return m_reply_to_addresses;
}
void OAIDirectMessageConfiguration_EmailMessage::setReplyToAddresses(const QList &reply_to_addresses) {
    m_reply_to_addresses = reply_to_addresses;
    m_reply_to_addresses_isSet = true;
}

bool OAIDirectMessageConfiguration_EmailMessage::is_reply_to_addresses_Set() const{
    return m_reply_to_addresses_isSet;
}

bool OAIDirectMessageConfiguration_EmailMessage::is_reply_to_addresses_Valid() const{
    return m_reply_to_addresses_isValid;
}

OAIEmailMessage_SimpleEmail OAIDirectMessageConfiguration_EmailMessage::getSimpleEmail() const {
    return m_simple_email;
}
void OAIDirectMessageConfiguration_EmailMessage::setSimpleEmail(const OAIEmailMessage_SimpleEmail &simple_email) {
    m_simple_email = simple_email;
    m_simple_email_isSet = true;
}

bool OAIDirectMessageConfiguration_EmailMessage::is_simple_email_Set() const{
    return m_simple_email_isSet;
}

bool OAIDirectMessageConfiguration_EmailMessage::is_simple_email_Valid() const{
    return m_simple_email_isValid;
}

QMap OAIDirectMessageConfiguration_EmailMessage::getSubstitutions() const {
    return m_substitutions;
}
void OAIDirectMessageConfiguration_EmailMessage::setSubstitutions(const QMap &substitutions) {
    m_substitutions = substitutions;
    m_substitutions_isSet = true;
}

bool OAIDirectMessageConfiguration_EmailMessage::is_substitutions_Set() const{
    return m_substitutions_isSet;
}

bool OAIDirectMessageConfiguration_EmailMessage::is_substitutions_Valid() const{
    return m_substitutions_isValid;
}

bool OAIDirectMessageConfiguration_EmailMessage::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_body_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_feedback_forwarding_address_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_from_address_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_raw_email.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_reply_to_addresses.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_simple_email.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_substitutions.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIDirectMessageConfiguration_EmailMessage::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
