/**
 * Amazon Pinpoint
 * Doc Engage API - Amazon Pinpoint API
 *
 * The version of the OpenAPI document: 2016-12-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAISimpleEmail_TextPart.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAISimpleEmail_TextPart::OAISimpleEmail_TextPart(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAISimpleEmail_TextPart::OAISimpleEmail_TextPart() {
    this->initializeModel();
}

OAISimpleEmail_TextPart::~OAISimpleEmail_TextPart() {}

void OAISimpleEmail_TextPart::initializeModel() {

    m_charset_isSet = false;
    m_charset_isValid = false;

    m_data_isSet = false;
    m_data_isValid = false;
}

void OAISimpleEmail_TextPart::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAISimpleEmail_TextPart::fromJsonObject(QJsonObject json) {

    m_charset_isValid = ::OpenAPI::fromJsonValue(m_charset, json[QString("Charset")]);
    m_charset_isSet = !json[QString("Charset")].isNull() && m_charset_isValid;

    m_data_isValid = ::OpenAPI::fromJsonValue(m_data, json[QString("Data")]);
    m_data_isSet = !json[QString("Data")].isNull() && m_data_isValid;
}

QString OAISimpleEmail_TextPart::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAISimpleEmail_TextPart::asJsonObject() const {
    QJsonObject obj;
    if (m_charset_isSet) {
        obj.insert(QString("Charset"), ::OpenAPI::toJsonValue(m_charset));
    }
    if (m_data_isSet) {
        obj.insert(QString("Data"), ::OpenAPI::toJsonValue(m_data));
    }
    return obj;
}

QString OAISimpleEmail_TextPart::getCharset() const {
    return m_charset;
}
void OAISimpleEmail_TextPart::setCharset(const QString &charset) {
    m_charset = charset;
    m_charset_isSet = true;
}

bool OAISimpleEmail_TextPart::is_charset_Set() const{
    return m_charset_isSet;
}

bool OAISimpleEmail_TextPart::is_charset_Valid() const{
    return m_charset_isValid;
}

QString OAISimpleEmail_TextPart::getData() const {
    return m_data;
}
void OAISimpleEmail_TextPart::setData(const QString &data) {
    m_data = data;
    m_data_isSet = true;
}

bool OAISimpleEmail_TextPart::is_data_Set() const{
    return m_data_isSet;
}

bool OAISimpleEmail_TextPart::is_data_Valid() const{
    return m_data_isValid;
}

bool OAISimpleEmail_TextPart::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_charset_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_data_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAISimpleEmail_TextPart::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
