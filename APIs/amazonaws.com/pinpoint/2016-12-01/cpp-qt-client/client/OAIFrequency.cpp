/**
 * Amazon Pinpoint
 * Doc Engage API - Amazon Pinpoint API
 *
 * The version of the OpenAPI document: 2016-12-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIFrequency.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIFrequency::OAIFrequency(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIFrequency::OAIFrequency() {
    this->initializeModel();
}

OAIFrequency::~OAIFrequency() {}

void OAIFrequency::initializeModel() {

    m_value_isSet = false;
    m_value_isValid = false;
    m_value = eOAIFrequency::INVALID_VALUE_OPENAPI_GENERATED;
}

void OAIFrequency::fromJson(QString jsonString) {
    
    if ( jsonString.compare("ONCE", Qt::CaseInsensitive) == 0) {
        m_value = eOAIFrequency::ONCE;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("HOURLY", Qt::CaseInsensitive) == 0) {
        m_value = eOAIFrequency::HOURLY;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("DAILY", Qt::CaseInsensitive) == 0) {
        m_value = eOAIFrequency::DAILY;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("WEEKLY", Qt::CaseInsensitive) == 0) {
        m_value = eOAIFrequency::WEEKLY;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("MONTHLY", Qt::CaseInsensitive) == 0) {
        m_value = eOAIFrequency::MONTHLY;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("EVENT", Qt::CaseInsensitive) == 0) {
        m_value = eOAIFrequency::EVENT;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("IN_APP_EVENT", Qt::CaseInsensitive) == 0) {
        m_value = eOAIFrequency::IN_APP_EVENT;
        m_value_isSet = m_value_isValid = true;
    }
}

void OAIFrequency::fromJsonValue(QJsonValue json) {
fromJson(json.toString());
}

QString OAIFrequency::asJson() const {
    
    QString val;
    switch (m_value){
        case eOAIFrequency::ONCE:
            val = "ONCE";
            break;
        case eOAIFrequency::HOURLY:
            val = "HOURLY";
            break;
        case eOAIFrequency::DAILY:
            val = "DAILY";
            break;
        case eOAIFrequency::WEEKLY:
            val = "WEEKLY";
            break;
        case eOAIFrequency::MONTHLY:
            val = "MONTHLY";
            break;
        case eOAIFrequency::EVENT:
            val = "EVENT";
            break;
        case eOAIFrequency::IN_APP_EVENT:
            val = "IN_APP_EVENT";
            break;
        default:
            break;
    }
    return val;
}

QJsonValue OAIFrequency::asJsonValue() const {
    
    return QJsonValue(asJson());
}


OAIFrequency::eOAIFrequency OAIFrequency::getValue() const {
    return m_value;
}

void OAIFrequency::setValue(const OAIFrequency::eOAIFrequency& value){
    m_value = value;
    m_value_isSet = true;
}
bool OAIFrequency::isSet() const {
    
    return m_value_isSet;
}

bool OAIFrequency::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_value_isValid;
}

} // namespace OpenAPI
