/**
 * Amazon Pinpoint
 * Doc Engage API - Amazon Pinpoint API
 *
 * The version of the OpenAPI document: 2016-12-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIActivity_Wait.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIActivity_Wait::OAIActivity_Wait(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIActivity_Wait::OAIActivity_Wait() {
    this->initializeModel();
}

OAIActivity_Wait::~OAIActivity_Wait() {}

void OAIActivity_Wait::initializeModel() {

    m_next_activity_isSet = false;
    m_next_activity_isValid = false;

    m_wait_time_isSet = false;
    m_wait_time_isValid = false;
}

void OAIActivity_Wait::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIActivity_Wait::fromJsonObject(QJsonObject json) {

    m_next_activity_isValid = ::OpenAPI::fromJsonValue(m_next_activity, json[QString("NextActivity")]);
    m_next_activity_isSet = !json[QString("NextActivity")].isNull() && m_next_activity_isValid;

    m_wait_time_isValid = ::OpenAPI::fromJsonValue(m_wait_time, json[QString("WaitTime")]);
    m_wait_time_isSet = !json[QString("WaitTime")].isNull() && m_wait_time_isValid;
}

QString OAIActivity_Wait::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIActivity_Wait::asJsonObject() const {
    QJsonObject obj;
    if (m_next_activity_isSet) {
        obj.insert(QString("NextActivity"), ::OpenAPI::toJsonValue(m_next_activity));
    }
    if (m_wait_time.isSet()) {
        obj.insert(QString("WaitTime"), ::OpenAPI::toJsonValue(m_wait_time));
    }
    return obj;
}

QString OAIActivity_Wait::getNextActivity() const {
    return m_next_activity;
}
void OAIActivity_Wait::setNextActivity(const QString &next_activity) {
    m_next_activity = next_activity;
    m_next_activity_isSet = true;
}

bool OAIActivity_Wait::is_next_activity_Set() const{
    return m_next_activity_isSet;
}

bool OAIActivity_Wait::is_next_activity_Valid() const{
    return m_next_activity_isValid;
}

OAIWaitActivity_WaitTime OAIActivity_Wait::getWaitTime() const {
    return m_wait_time;
}
void OAIActivity_Wait::setWaitTime(const OAIWaitActivity_WaitTime &wait_time) {
    m_wait_time = wait_time;
    m_wait_time_isSet = true;
}

bool OAIActivity_Wait::is_wait_time_Set() const{
    return m_wait_time_isSet;
}

bool OAIActivity_Wait::is_wait_time_Valid() const{
    return m_wait_time_isValid;
}

bool OAIActivity_Wait::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_next_activity_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_wait_time.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIActivity_Wait::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
