/**
 * Amazon Pinpoint
 * Doc Engage API - Amazon Pinpoint API
 *
 * The version of the OpenAPI document: 2016-12-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIDeliveryStatus.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIDeliveryStatus::OAIDeliveryStatus(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIDeliveryStatus::OAIDeliveryStatus() {
    this->initializeModel();
}

OAIDeliveryStatus::~OAIDeliveryStatus() {}

void OAIDeliveryStatus::initializeModel() {

    m_value_isSet = false;
    m_value_isValid = false;
    m_value = eOAIDeliveryStatus::INVALID_VALUE_OPENAPI_GENERATED;
}

void OAIDeliveryStatus::fromJson(QString jsonString) {
    
    if ( jsonString.compare("SUCCESSFUL", Qt::CaseInsensitive) == 0) {
        m_value = eOAIDeliveryStatus::SUCCESSFUL;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("THROTTLED", Qt::CaseInsensitive) == 0) {
        m_value = eOAIDeliveryStatus::THROTTLED;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("TEMPORARY_FAILURE", Qt::CaseInsensitive) == 0) {
        m_value = eOAIDeliveryStatus::TEMPORARY_FAILURE;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("PERMANENT_FAILURE", Qt::CaseInsensitive) == 0) {
        m_value = eOAIDeliveryStatus::PERMANENT_FAILURE;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("UNKNOWN_FAILURE", Qt::CaseInsensitive) == 0) {
        m_value = eOAIDeliveryStatus::UNKNOWN_FAILURE;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("OPT_OUT", Qt::CaseInsensitive) == 0) {
        m_value = eOAIDeliveryStatus::OPT_OUT;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("DUPLICATE", Qt::CaseInsensitive) == 0) {
        m_value = eOAIDeliveryStatus::DUPLICATE;
        m_value_isSet = m_value_isValid = true;
    }
}

void OAIDeliveryStatus::fromJsonValue(QJsonValue json) {
fromJson(json.toString());
}

QString OAIDeliveryStatus::asJson() const {
    
    QString val;
    switch (m_value){
        case eOAIDeliveryStatus::SUCCESSFUL:
            val = "SUCCESSFUL";
            break;
        case eOAIDeliveryStatus::THROTTLED:
            val = "THROTTLED";
            break;
        case eOAIDeliveryStatus::TEMPORARY_FAILURE:
            val = "TEMPORARY_FAILURE";
            break;
        case eOAIDeliveryStatus::PERMANENT_FAILURE:
            val = "PERMANENT_FAILURE";
            break;
        case eOAIDeliveryStatus::UNKNOWN_FAILURE:
            val = "UNKNOWN_FAILURE";
            break;
        case eOAIDeliveryStatus::OPT_OUT:
            val = "OPT_OUT";
            break;
        case eOAIDeliveryStatus::DUPLICATE:
            val = "DUPLICATE";
            break;
        default:
            break;
    }
    return val;
}

QJsonValue OAIDeliveryStatus::asJsonValue() const {
    
    return QJsonValue(asJson());
}


OAIDeliveryStatus::eOAIDeliveryStatus OAIDeliveryStatus::getValue() const {
    return m_value;
}

void OAIDeliveryStatus::setValue(const OAIDeliveryStatus::eOAIDeliveryStatus& value){
    m_value = value;
    m_value_isSet = true;
}
bool OAIDeliveryStatus::isSet() const {
    
    return m_value_isSet;
}

bool OAIDeliveryStatus::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_value_isValid;
}

} // namespace OpenAPI
