/**
 * Amazon Pinpoint
 * Doc Engage API - Amazon Pinpoint API
 *
 * The version of the OpenAPI document: 2016-12-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAICreateJourney_request_WriteJourneyRequest_Limits.h
 *
 * 
 */

#ifndef OAICreateJourney_request_WriteJourneyRequest_Limits_H
#define OAICreateJourney_request_WriteJourneyRequest_Limits_H

#include <QJsonObject>

#include "OAIJourneyLimits_TimeframeCap.h"
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIJourneyLimits_TimeframeCap;

class OAICreateJourney_request_WriteJourneyRequest_Limits : public OAIObject {
public:
    OAICreateJourney_request_WriteJourneyRequest_Limits();
    OAICreateJourney_request_WriteJourneyRequest_Limits(QString json);
    ~OAICreateJourney_request_WriteJourneyRequest_Limits() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    qint32 getDailyCap() const;
    void setDailyCap(const qint32 &daily_cap);
    bool is_daily_cap_Set() const;
    bool is_daily_cap_Valid() const;

    qint32 getEndpointReentryCap() const;
    void setEndpointReentryCap(const qint32 &endpoint_reentry_cap);
    bool is_endpoint_reentry_cap_Set() const;
    bool is_endpoint_reentry_cap_Valid() const;

    qint32 getMessagesPerSecond() const;
    void setMessagesPerSecond(const qint32 &messages_per_second);
    bool is_messages_per_second_Set() const;
    bool is_messages_per_second_Valid() const;

    QString getEndpointReentryInterval() const;
    void setEndpointReentryInterval(const QString &endpoint_reentry_interval);
    bool is_endpoint_reentry_interval_Set() const;
    bool is_endpoint_reentry_interval_Valid() const;

    OAIJourneyLimits_TimeframeCap getTimeframeCap() const;
    void setTimeframeCap(const OAIJourneyLimits_TimeframeCap &timeframe_cap);
    bool is_timeframe_cap_Set() const;
    bool is_timeframe_cap_Valid() const;

    qint32 getTotalCap() const;
    void setTotalCap(const qint32 &total_cap);
    bool is_total_cap_Set() const;
    bool is_total_cap_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    qint32 m_daily_cap;
    bool m_daily_cap_isSet;
    bool m_daily_cap_isValid;

    qint32 m_endpoint_reentry_cap;
    bool m_endpoint_reentry_cap_isSet;
    bool m_endpoint_reentry_cap_isValid;

    qint32 m_messages_per_second;
    bool m_messages_per_second_isSet;
    bool m_messages_per_second_isValid;

    QString m_endpoint_reentry_interval;
    bool m_endpoint_reentry_interval_isSet;
    bool m_endpoint_reentry_interval_isValid;

    OAIJourneyLimits_TimeframeCap m_timeframe_cap;
    bool m_timeframe_cap_isSet;
    bool m_timeframe_cap_isValid;

    qint32 m_total_cap;
    bool m_total_cap_isSet;
    bool m_total_cap_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAICreateJourney_request_WriteJourneyRequest_Limits)

#endif // OAICreateJourney_request_WriteJourneyRequest_Limits_H
