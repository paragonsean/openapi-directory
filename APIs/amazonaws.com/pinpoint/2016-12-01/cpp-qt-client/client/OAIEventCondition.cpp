/**
 * Amazon Pinpoint
 * Doc Engage API - Amazon Pinpoint API
 *
 * The version of the OpenAPI document: 2016-12-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIEventCondition.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIEventCondition::OAIEventCondition(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIEventCondition::OAIEventCondition() {
    this->initializeModel();
}

OAIEventCondition::~OAIEventCondition() {}

void OAIEventCondition::initializeModel() {

    m_dimensions_isSet = false;
    m_dimensions_isValid = false;

    m_message_activity_isSet = false;
    m_message_activity_isValid = false;
}

void OAIEventCondition::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIEventCondition::fromJsonObject(QJsonObject json) {

    m_dimensions_isValid = ::OpenAPI::fromJsonValue(m_dimensions, json[QString("Dimensions")]);
    m_dimensions_isSet = !json[QString("Dimensions")].isNull() && m_dimensions_isValid;

    m_message_activity_isValid = ::OpenAPI::fromJsonValue(m_message_activity, json[QString("MessageActivity")]);
    m_message_activity_isSet = !json[QString("MessageActivity")].isNull() && m_message_activity_isValid;
}

QString OAIEventCondition::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIEventCondition::asJsonObject() const {
    QJsonObject obj;
    if (m_dimensions.isSet()) {
        obj.insert(QString("Dimensions"), ::OpenAPI::toJsonValue(m_dimensions));
    }
    if (m_message_activity_isSet) {
        obj.insert(QString("MessageActivity"), ::OpenAPI::toJsonValue(m_message_activity));
    }
    return obj;
}

OAIEventCondition_Dimensions OAIEventCondition::getDimensions() const {
    return m_dimensions;
}
void OAIEventCondition::setDimensions(const OAIEventCondition_Dimensions &dimensions) {
    m_dimensions = dimensions;
    m_dimensions_isSet = true;
}

bool OAIEventCondition::is_dimensions_Set() const{
    return m_dimensions_isSet;
}

bool OAIEventCondition::is_dimensions_Valid() const{
    return m_dimensions_isValid;
}

QString OAIEventCondition::getMessageActivity() const {
    return m_message_activity;
}
void OAIEventCondition::setMessageActivity(const QString &message_activity) {
    m_message_activity = message_activity;
    m_message_activity_isSet = true;
}

bool OAIEventCondition::is_message_activity_Set() const{
    return m_message_activity_isSet;
}

bool OAIEventCondition::is_message_activity_Valid() const{
    return m_message_activity_isValid;
}

bool OAIEventCondition::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_dimensions.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_message_activity_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIEventCondition::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
