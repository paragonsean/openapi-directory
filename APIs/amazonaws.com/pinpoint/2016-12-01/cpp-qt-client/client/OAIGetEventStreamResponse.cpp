/**
 * Amazon Pinpoint
 * Doc Engage API - Amazon Pinpoint API
 *
 * The version of the OpenAPI document: 2016-12-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGetEventStreamResponse.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGetEventStreamResponse::OAIGetEventStreamResponse(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGetEventStreamResponse::OAIGetEventStreamResponse() {
    this->initializeModel();
}

OAIGetEventStreamResponse::~OAIGetEventStreamResponse() {}

void OAIGetEventStreamResponse::initializeModel() {

    m_event_stream_isSet = false;
    m_event_stream_isValid = false;
}

void OAIGetEventStreamResponse::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGetEventStreamResponse::fromJsonObject(QJsonObject json) {

    m_event_stream_isValid = ::OpenAPI::fromJsonValue(m_event_stream, json[QString("EventStream")]);
    m_event_stream_isSet = !json[QString("EventStream")].isNull() && m_event_stream_isValid;
}

QString OAIGetEventStreamResponse::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGetEventStreamResponse::asJsonObject() const {
    QJsonObject obj;
    if (m_event_stream.isSet()) {
        obj.insert(QString("EventStream"), ::OpenAPI::toJsonValue(m_event_stream));
    }
    return obj;
}

OAIEventStream OAIGetEventStreamResponse::getEventStream() const {
    return m_event_stream;
}
void OAIGetEventStreamResponse::setEventStream(const OAIEventStream &event_stream) {
    m_event_stream = event_stream;
    m_event_stream_isSet = true;
}

bool OAIGetEventStreamResponse::is_event_stream_Set() const{
    return m_event_stream_isSet;
}

bool OAIGetEventStreamResponse::is_event_stream_Valid() const{
    return m_event_stream_isValid;
}

bool OAIGetEventStreamResponse::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_event_stream.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGetEventStreamResponse::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_event_stream_isValid && true;
}

} // namespace OpenAPI
