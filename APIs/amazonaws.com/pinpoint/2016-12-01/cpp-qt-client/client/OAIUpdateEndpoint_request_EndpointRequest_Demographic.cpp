/**
 * Amazon Pinpoint
 * Doc Engage API - Amazon Pinpoint API
 *
 * The version of the OpenAPI document: 2016-12-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIUpdateEndpoint_request_EndpointRequest_Demographic.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIUpdateEndpoint_request_EndpointRequest_Demographic::OAIUpdateEndpoint_request_EndpointRequest_Demographic(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIUpdateEndpoint_request_EndpointRequest_Demographic::OAIUpdateEndpoint_request_EndpointRequest_Demographic() {
    this->initializeModel();
}

OAIUpdateEndpoint_request_EndpointRequest_Demographic::~OAIUpdateEndpoint_request_EndpointRequest_Demographic() {}

void OAIUpdateEndpoint_request_EndpointRequest_Demographic::initializeModel() {

    m_app_version_isSet = false;
    m_app_version_isValid = false;

    m_locale_isSet = false;
    m_locale_isValid = false;

    m_make_isSet = false;
    m_make_isValid = false;

    m_model_isSet = false;
    m_model_isValid = false;

    m_model_version_isSet = false;
    m_model_version_isValid = false;

    m_platform_isSet = false;
    m_platform_isValid = false;

    m_platform_version_isSet = false;
    m_platform_version_isValid = false;

    m_timezone_isSet = false;
    m_timezone_isValid = false;
}

void OAIUpdateEndpoint_request_EndpointRequest_Demographic::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIUpdateEndpoint_request_EndpointRequest_Demographic::fromJsonObject(QJsonObject json) {

    m_app_version_isValid = ::OpenAPI::fromJsonValue(m_app_version, json[QString("AppVersion")]);
    m_app_version_isSet = !json[QString("AppVersion")].isNull() && m_app_version_isValid;

    m_locale_isValid = ::OpenAPI::fromJsonValue(m_locale, json[QString("Locale")]);
    m_locale_isSet = !json[QString("Locale")].isNull() && m_locale_isValid;

    m_make_isValid = ::OpenAPI::fromJsonValue(m_make, json[QString("Make")]);
    m_make_isSet = !json[QString("Make")].isNull() && m_make_isValid;

    m_model_isValid = ::OpenAPI::fromJsonValue(m_model, json[QString("Model")]);
    m_model_isSet = !json[QString("Model")].isNull() && m_model_isValid;

    m_model_version_isValid = ::OpenAPI::fromJsonValue(m_model_version, json[QString("ModelVersion")]);
    m_model_version_isSet = !json[QString("ModelVersion")].isNull() && m_model_version_isValid;

    m_platform_isValid = ::OpenAPI::fromJsonValue(m_platform, json[QString("Platform")]);
    m_platform_isSet = !json[QString("Platform")].isNull() && m_platform_isValid;

    m_platform_version_isValid = ::OpenAPI::fromJsonValue(m_platform_version, json[QString("PlatformVersion")]);
    m_platform_version_isSet = !json[QString("PlatformVersion")].isNull() && m_platform_version_isValid;

    m_timezone_isValid = ::OpenAPI::fromJsonValue(m_timezone, json[QString("Timezone")]);
    m_timezone_isSet = !json[QString("Timezone")].isNull() && m_timezone_isValid;
}

QString OAIUpdateEndpoint_request_EndpointRequest_Demographic::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIUpdateEndpoint_request_EndpointRequest_Demographic::asJsonObject() const {
    QJsonObject obj;
    if (m_app_version_isSet) {
        obj.insert(QString("AppVersion"), ::OpenAPI::toJsonValue(m_app_version));
    }
    if (m_locale_isSet) {
        obj.insert(QString("Locale"), ::OpenAPI::toJsonValue(m_locale));
    }
    if (m_make_isSet) {
        obj.insert(QString("Make"), ::OpenAPI::toJsonValue(m_make));
    }
    if (m_model_isSet) {
        obj.insert(QString("Model"), ::OpenAPI::toJsonValue(m_model));
    }
    if (m_model_version_isSet) {
        obj.insert(QString("ModelVersion"), ::OpenAPI::toJsonValue(m_model_version));
    }
    if (m_platform_isSet) {
        obj.insert(QString("Platform"), ::OpenAPI::toJsonValue(m_platform));
    }
    if (m_platform_version_isSet) {
        obj.insert(QString("PlatformVersion"), ::OpenAPI::toJsonValue(m_platform_version));
    }
    if (m_timezone_isSet) {
        obj.insert(QString("Timezone"), ::OpenAPI::toJsonValue(m_timezone));
    }
    return obj;
}

QString OAIUpdateEndpoint_request_EndpointRequest_Demographic::getAppVersion() const {
    return m_app_version;
}
void OAIUpdateEndpoint_request_EndpointRequest_Demographic::setAppVersion(const QString &app_version) {
    m_app_version = app_version;
    m_app_version_isSet = true;
}

bool OAIUpdateEndpoint_request_EndpointRequest_Demographic::is_app_version_Set() const{
    return m_app_version_isSet;
}

bool OAIUpdateEndpoint_request_EndpointRequest_Demographic::is_app_version_Valid() const{
    return m_app_version_isValid;
}

QString OAIUpdateEndpoint_request_EndpointRequest_Demographic::getLocale() const {
    return m_locale;
}
void OAIUpdateEndpoint_request_EndpointRequest_Demographic::setLocale(const QString &locale) {
    m_locale = locale;
    m_locale_isSet = true;
}

bool OAIUpdateEndpoint_request_EndpointRequest_Demographic::is_locale_Set() const{
    return m_locale_isSet;
}

bool OAIUpdateEndpoint_request_EndpointRequest_Demographic::is_locale_Valid() const{
    return m_locale_isValid;
}

QString OAIUpdateEndpoint_request_EndpointRequest_Demographic::getMake() const {
    return m_make;
}
void OAIUpdateEndpoint_request_EndpointRequest_Demographic::setMake(const QString &make) {
    m_make = make;
    m_make_isSet = true;
}

bool OAIUpdateEndpoint_request_EndpointRequest_Demographic::is_make_Set() const{
    return m_make_isSet;
}

bool OAIUpdateEndpoint_request_EndpointRequest_Demographic::is_make_Valid() const{
    return m_make_isValid;
}

QString OAIUpdateEndpoint_request_EndpointRequest_Demographic::getModel() const {
    return m_model;
}
void OAIUpdateEndpoint_request_EndpointRequest_Demographic::setModel(const QString &model) {
    m_model = model;
    m_model_isSet = true;
}

bool OAIUpdateEndpoint_request_EndpointRequest_Demographic::is_model_Set() const{
    return m_model_isSet;
}

bool OAIUpdateEndpoint_request_EndpointRequest_Demographic::is_model_Valid() const{
    return m_model_isValid;
}

QString OAIUpdateEndpoint_request_EndpointRequest_Demographic::getModelVersion() const {
    return m_model_version;
}
void OAIUpdateEndpoint_request_EndpointRequest_Demographic::setModelVersion(const QString &model_version) {
    m_model_version = model_version;
    m_model_version_isSet = true;
}

bool OAIUpdateEndpoint_request_EndpointRequest_Demographic::is_model_version_Set() const{
    return m_model_version_isSet;
}

bool OAIUpdateEndpoint_request_EndpointRequest_Demographic::is_model_version_Valid() const{
    return m_model_version_isValid;
}

QString OAIUpdateEndpoint_request_EndpointRequest_Demographic::getPlatform() const {
    return m_platform;
}
void OAIUpdateEndpoint_request_EndpointRequest_Demographic::setPlatform(const QString &platform) {
    m_platform = platform;
    m_platform_isSet = true;
}

bool OAIUpdateEndpoint_request_EndpointRequest_Demographic::is_platform_Set() const{
    return m_platform_isSet;
}

bool OAIUpdateEndpoint_request_EndpointRequest_Demographic::is_platform_Valid() const{
    return m_platform_isValid;
}

QString OAIUpdateEndpoint_request_EndpointRequest_Demographic::getPlatformVersion() const {
    return m_platform_version;
}
void OAIUpdateEndpoint_request_EndpointRequest_Demographic::setPlatformVersion(const QString &platform_version) {
    m_platform_version = platform_version;
    m_platform_version_isSet = true;
}

bool OAIUpdateEndpoint_request_EndpointRequest_Demographic::is_platform_version_Set() const{
    return m_platform_version_isSet;
}

bool OAIUpdateEndpoint_request_EndpointRequest_Demographic::is_platform_version_Valid() const{
    return m_platform_version_isValid;
}

QString OAIUpdateEndpoint_request_EndpointRequest_Demographic::getTimezone() const {
    return m_timezone;
}
void OAIUpdateEndpoint_request_EndpointRequest_Demographic::setTimezone(const QString &timezone) {
    m_timezone = timezone;
    m_timezone_isSet = true;
}

bool OAIUpdateEndpoint_request_EndpointRequest_Demographic::is_timezone_Set() const{
    return m_timezone_isSet;
}

bool OAIUpdateEndpoint_request_EndpointRequest_Demographic::is_timezone_Valid() const{
    return m_timezone_isValid;
}

bool OAIUpdateEndpoint_request_EndpointRequest_Demographic::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_app_version_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_locale_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_make_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_model_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_model_version_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_platform_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_platform_version_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_timezone_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIUpdateEndpoint_request_EndpointRequest_Demographic::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
