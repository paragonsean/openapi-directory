/**
 * Amazon Pinpoint
 * Doc Engage API - Amazon Pinpoint API
 *
 * The version of the OpenAPI document: 2016-12-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIRemoveAttributes_request_UpdateAttributesRequest.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIRemoveAttributes_request_UpdateAttributesRequest::OAIRemoveAttributes_request_UpdateAttributesRequest(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIRemoveAttributes_request_UpdateAttributesRequest::OAIRemoveAttributes_request_UpdateAttributesRequest() {
    this->initializeModel();
}

OAIRemoveAttributes_request_UpdateAttributesRequest::~OAIRemoveAttributes_request_UpdateAttributesRequest() {}

void OAIRemoveAttributes_request_UpdateAttributesRequest::initializeModel() {

    m_blacklist_isSet = false;
    m_blacklist_isValid = false;
}

void OAIRemoveAttributes_request_UpdateAttributesRequest::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIRemoveAttributes_request_UpdateAttributesRequest::fromJsonObject(QJsonObject json) {

    m_blacklist_isValid = ::OpenAPI::fromJsonValue(m_blacklist, json[QString("Blacklist")]);
    m_blacklist_isSet = !json[QString("Blacklist")].isNull() && m_blacklist_isValid;
}

QString OAIRemoveAttributes_request_UpdateAttributesRequest::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIRemoveAttributes_request_UpdateAttributesRequest::asJsonObject() const {
    QJsonObject obj;
    if (m_blacklist.isSet()) {
        obj.insert(QString("Blacklist"), ::OpenAPI::toJsonValue(m_blacklist));
    }
    return obj;
}

QList OAIRemoveAttributes_request_UpdateAttributesRequest::getBlacklist() const {
    return m_blacklist;
}
void OAIRemoveAttributes_request_UpdateAttributesRequest::setBlacklist(const QList &blacklist) {
    m_blacklist = blacklist;
    m_blacklist_isSet = true;
}

bool OAIRemoveAttributes_request_UpdateAttributesRequest::is_blacklist_Set() const{
    return m_blacklist_isSet;
}

bool OAIRemoveAttributes_request_UpdateAttributesRequest::is_blacklist_Valid() const{
    return m_blacklist_isValid;
}

bool OAIRemoveAttributes_request_UpdateAttributesRequest::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_blacklist.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIRemoveAttributes_request_UpdateAttributesRequest::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
