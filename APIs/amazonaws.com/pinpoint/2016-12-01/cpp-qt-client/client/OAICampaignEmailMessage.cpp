/**
 * Amazon Pinpoint
 * Doc Engage API - Amazon Pinpoint API
 *
 * The version of the OpenAPI document: 2016-12-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAICampaignEmailMessage.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAICampaignEmailMessage::OAICampaignEmailMessage(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAICampaignEmailMessage::OAICampaignEmailMessage() {
    this->initializeModel();
}

OAICampaignEmailMessage::~OAICampaignEmailMessage() {}

void OAICampaignEmailMessage::initializeModel() {

    m_body_isSet = false;
    m_body_isValid = false;

    m_from_address_isSet = false;
    m_from_address_isValid = false;

    m_html_body_isSet = false;
    m_html_body_isValid = false;

    m_title_isSet = false;
    m_title_isValid = false;
}

void OAICampaignEmailMessage::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAICampaignEmailMessage::fromJsonObject(QJsonObject json) {

    m_body_isValid = ::OpenAPI::fromJsonValue(m_body, json[QString("Body")]);
    m_body_isSet = !json[QString("Body")].isNull() && m_body_isValid;

    m_from_address_isValid = ::OpenAPI::fromJsonValue(m_from_address, json[QString("FromAddress")]);
    m_from_address_isSet = !json[QString("FromAddress")].isNull() && m_from_address_isValid;

    m_html_body_isValid = ::OpenAPI::fromJsonValue(m_html_body, json[QString("HtmlBody")]);
    m_html_body_isSet = !json[QString("HtmlBody")].isNull() && m_html_body_isValid;

    m_title_isValid = ::OpenAPI::fromJsonValue(m_title, json[QString("Title")]);
    m_title_isSet = !json[QString("Title")].isNull() && m_title_isValid;
}

QString OAICampaignEmailMessage::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAICampaignEmailMessage::asJsonObject() const {
    QJsonObject obj;
    if (m_body_isSet) {
        obj.insert(QString("Body"), ::OpenAPI::toJsonValue(m_body));
    }
    if (m_from_address_isSet) {
        obj.insert(QString("FromAddress"), ::OpenAPI::toJsonValue(m_from_address));
    }
    if (m_html_body_isSet) {
        obj.insert(QString("HtmlBody"), ::OpenAPI::toJsonValue(m_html_body));
    }
    if (m_title_isSet) {
        obj.insert(QString("Title"), ::OpenAPI::toJsonValue(m_title));
    }
    return obj;
}

QString OAICampaignEmailMessage::getBody() const {
    return m_body;
}
void OAICampaignEmailMessage::setBody(const QString &body) {
    m_body = body;
    m_body_isSet = true;
}

bool OAICampaignEmailMessage::is_body_Set() const{
    return m_body_isSet;
}

bool OAICampaignEmailMessage::is_body_Valid() const{
    return m_body_isValid;
}

QString OAICampaignEmailMessage::getFromAddress() const {
    return m_from_address;
}
void OAICampaignEmailMessage::setFromAddress(const QString &from_address) {
    m_from_address = from_address;
    m_from_address_isSet = true;
}

bool OAICampaignEmailMessage::is_from_address_Set() const{
    return m_from_address_isSet;
}

bool OAICampaignEmailMessage::is_from_address_Valid() const{
    return m_from_address_isValid;
}

QString OAICampaignEmailMessage::getHtmlBody() const {
    return m_html_body;
}
void OAICampaignEmailMessage::setHtmlBody(const QString &html_body) {
    m_html_body = html_body;
    m_html_body_isSet = true;
}

bool OAICampaignEmailMessage::is_html_body_Set() const{
    return m_html_body_isSet;
}

bool OAICampaignEmailMessage::is_html_body_Valid() const{
    return m_html_body_isValid;
}

QString OAICampaignEmailMessage::getTitle() const {
    return m_title;
}
void OAICampaignEmailMessage::setTitle(const QString &title) {
    m_title = title;
    m_title_isSet = true;
}

bool OAICampaignEmailMessage::is_title_Set() const{
    return m_title_isSet;
}

bool OAICampaignEmailMessage::is_title_Valid() const{
    return m_title_isValid;
}

bool OAICampaignEmailMessage::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_body_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_from_address_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_html_body_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_title_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAICampaignEmailMessage::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
