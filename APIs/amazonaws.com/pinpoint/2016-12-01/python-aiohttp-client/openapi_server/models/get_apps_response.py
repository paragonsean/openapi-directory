# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.applications_response import ApplicationsResponse
from openapi_server import util


class GetAppsResponse(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, applications_response: ApplicationsResponse=None):
        """GetAppsResponse - a model defined in OpenAPI

        :param applications_response: The applications_response of this GetAppsResponse.
        """
        self.openapi_types = {
            'applications_response': ApplicationsResponse
        }

        self.attribute_map = {
            'applications_response': 'ApplicationsResponse'
        }

        self._applications_response = applications_response

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GetAppsResponse':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The GetAppsResponse of this GetAppsResponse.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def applications_response(self):
        """Gets the applications_response of this GetAppsResponse.


        :return: The applications_response of this GetAppsResponse.
        :rtype: ApplicationsResponse
        """
        return self._applications_response

    @applications_response.setter
    def applications_response(self, applications_response):
        """Sets the applications_response of this GetAppsResponse.


        :param applications_response: The applications_response of this GetAppsResponse.
        :type applications_response: ApplicationsResponse
        """
        if applications_response is None:
            raise ValueError("Invalid value for `applications_response`, must not be `None`")

        self._applications_response = applications_response
