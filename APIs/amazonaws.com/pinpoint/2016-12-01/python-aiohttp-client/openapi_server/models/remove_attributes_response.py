# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.attributes_resource import AttributesResource
from openapi_server import util


class RemoveAttributesResponse(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, attributes_resource: AttributesResource=None):
        """RemoveAttributesResponse - a model defined in OpenAPI

        :param attributes_resource: The attributes_resource of this RemoveAttributesResponse.
        """
        self.openapi_types = {
            'attributes_resource': AttributesResource
        }

        self.attribute_map = {
            'attributes_resource': 'AttributesResource'
        }

        self._attributes_resource = attributes_resource

    @classmethod
    def from_dict(cls, dikt: dict) -> 'RemoveAttributesResponse':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The RemoveAttributesResponse of this RemoveAttributesResponse.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def attributes_resource(self):
        """Gets the attributes_resource of this RemoveAttributesResponse.


        :return: The attributes_resource of this RemoveAttributesResponse.
        :rtype: AttributesResource
        """
        return self._attributes_resource

    @attributes_resource.setter
    def attributes_resource(self, attributes_resource):
        """Sets the attributes_resource of this RemoveAttributesResponse.


        :param attributes_resource: The attributes_resource of this RemoveAttributesResponse.
        :type attributes_resource: AttributesResource
        """
        if attributes_resource is None:
            raise ValueError("Invalid value for `attributes_resource`, must not be `None`")

        self._attributes_resource = attributes_resource
