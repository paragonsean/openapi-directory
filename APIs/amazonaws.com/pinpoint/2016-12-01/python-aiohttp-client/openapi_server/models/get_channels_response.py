# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.channels_response import ChannelsResponse
from openapi_server import util


class GetChannelsResponse(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, channels_response: ChannelsResponse=None):
        """GetChannelsResponse - a model defined in OpenAPI

        :param channels_response: The channels_response of this GetChannelsResponse.
        """
        self.openapi_types = {
            'channels_response': ChannelsResponse
        }

        self.attribute_map = {
            'channels_response': 'ChannelsResponse'
        }

        self._channels_response = channels_response

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GetChannelsResponse':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The GetChannelsResponse of this GetChannelsResponse.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def channels_response(self):
        """Gets the channels_response of this GetChannelsResponse.


        :return: The channels_response of this GetChannelsResponse.
        :rtype: ChannelsResponse
        """
        return self._channels_response

    @channels_response.setter
    def channels_response(self, channels_response):
        """Sets the channels_response of this GetChannelsResponse.


        :param channels_response: The channels_response of this GetChannelsResponse.
        :type channels_response: ChannelsResponse
        """
        if channels_response is None:
            raise ValueError("Invalid value for `channels_response`, must not be `None`")

        self._channels_response = channels_response
