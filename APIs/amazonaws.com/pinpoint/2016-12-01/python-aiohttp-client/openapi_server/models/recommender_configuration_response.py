# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class RecommenderConfigurationResponse(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, attributes: Dict=None, creation_date: str=None, description: str=None, id: str=None, last_modified_date: str=None, name: str=None, recommendation_provider_id_type: str=None, recommendation_provider_role_arn: str=None, recommendation_provider_uri: str=None, recommendation_transformer_uri: str=None, recommendations_display_name: str=None, recommendations_per_message: int=None):
        """RecommenderConfigurationResponse - a model defined in OpenAPI

        :param attributes: The attributes of this RecommenderConfigurationResponse.
        :param creation_date: The creation_date of this RecommenderConfigurationResponse.
        :param description: The description of this RecommenderConfigurationResponse.
        :param id: The id of this RecommenderConfigurationResponse.
        :param last_modified_date: The last_modified_date of this RecommenderConfigurationResponse.
        :param name: The name of this RecommenderConfigurationResponse.
        :param recommendation_provider_id_type: The recommendation_provider_id_type of this RecommenderConfigurationResponse.
        :param recommendation_provider_role_arn: The recommendation_provider_role_arn of this RecommenderConfigurationResponse.
        :param recommendation_provider_uri: The recommendation_provider_uri of this RecommenderConfigurationResponse.
        :param recommendation_transformer_uri: The recommendation_transformer_uri of this RecommenderConfigurationResponse.
        :param recommendations_display_name: The recommendations_display_name of this RecommenderConfigurationResponse.
        :param recommendations_per_message: The recommendations_per_message of this RecommenderConfigurationResponse.
        """
        self.openapi_types = {
            'attributes': Dict,
            'creation_date': str,
            'description': str,
            'id': str,
            'last_modified_date': str,
            'name': str,
            'recommendation_provider_id_type': str,
            'recommendation_provider_role_arn': str,
            'recommendation_provider_uri': str,
            'recommendation_transformer_uri': str,
            'recommendations_display_name': str,
            'recommendations_per_message': int
        }

        self.attribute_map = {
            'attributes': 'Attributes',
            'creation_date': 'CreationDate',
            'description': 'Description',
            'id': 'Id',
            'last_modified_date': 'LastModifiedDate',
            'name': 'Name',
            'recommendation_provider_id_type': 'RecommendationProviderIdType',
            'recommendation_provider_role_arn': 'RecommendationProviderRoleArn',
            'recommendation_provider_uri': 'RecommendationProviderUri',
            'recommendation_transformer_uri': 'RecommendationTransformerUri',
            'recommendations_display_name': 'RecommendationsDisplayName',
            'recommendations_per_message': 'RecommendationsPerMessage'
        }

        self._attributes = attributes
        self._creation_date = creation_date
        self._description = description
        self._id = id
        self._last_modified_date = last_modified_date
        self._name = name
        self._recommendation_provider_id_type = recommendation_provider_id_type
        self._recommendation_provider_role_arn = recommendation_provider_role_arn
        self._recommendation_provider_uri = recommendation_provider_uri
        self._recommendation_transformer_uri = recommendation_transformer_uri
        self._recommendations_display_name = recommendations_display_name
        self._recommendations_per_message = recommendations_per_message

    @classmethod
    def from_dict(cls, dikt: dict) -> 'RecommenderConfigurationResponse':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The RecommenderConfigurationResponse of this RecommenderConfigurationResponse.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def attributes(self):
        """Gets the attributes of this RecommenderConfigurationResponse.


        :return: The attributes of this RecommenderConfigurationResponse.
        :rtype: Dict
        """
        return self._attributes

    @attributes.setter
    def attributes(self, attributes):
        """Sets the attributes of this RecommenderConfigurationResponse.


        :param attributes: The attributes of this RecommenderConfigurationResponse.
        :type attributes: Dict
        """

        self._attributes = attributes

    @property
    def creation_date(self):
        """Gets the creation_date of this RecommenderConfigurationResponse.


        :return: The creation_date of this RecommenderConfigurationResponse.
        :rtype: str
        """
        return self._creation_date

    @creation_date.setter
    def creation_date(self, creation_date):
        """Sets the creation_date of this RecommenderConfigurationResponse.


        :param creation_date: The creation_date of this RecommenderConfigurationResponse.
        :type creation_date: str
        """
        if creation_date is None:
            raise ValueError("Invalid value for `creation_date`, must not be `None`")

        self._creation_date = creation_date

    @property
    def description(self):
        """Gets the description of this RecommenderConfigurationResponse.


        :return: The description of this RecommenderConfigurationResponse.
        :rtype: str
        """
        return self._description

    @description.setter
    def description(self, description):
        """Sets the description of this RecommenderConfigurationResponse.


        :param description: The description of this RecommenderConfigurationResponse.
        :type description: str
        """

        self._description = description

    @property
    def id(self):
        """Gets the id of this RecommenderConfigurationResponse.


        :return: The id of this RecommenderConfigurationResponse.
        :rtype: str
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this RecommenderConfigurationResponse.


        :param id: The id of this RecommenderConfigurationResponse.
        :type id: str
        """
        if id is None:
            raise ValueError("Invalid value for `id`, must not be `None`")

        self._id = id

    @property
    def last_modified_date(self):
        """Gets the last_modified_date of this RecommenderConfigurationResponse.


        :return: The last_modified_date of this RecommenderConfigurationResponse.
        :rtype: str
        """
        return self._last_modified_date

    @last_modified_date.setter
    def last_modified_date(self, last_modified_date):
        """Sets the last_modified_date of this RecommenderConfigurationResponse.


        :param last_modified_date: The last_modified_date of this RecommenderConfigurationResponse.
        :type last_modified_date: str
        """
        if last_modified_date is None:
            raise ValueError("Invalid value for `last_modified_date`, must not be `None`")

        self._last_modified_date = last_modified_date

    @property
    def name(self):
        """Gets the name of this RecommenderConfigurationResponse.


        :return: The name of this RecommenderConfigurationResponse.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this RecommenderConfigurationResponse.


        :param name: The name of this RecommenderConfigurationResponse.
        :type name: str
        """

        self._name = name

    @property
    def recommendation_provider_id_type(self):
        """Gets the recommendation_provider_id_type of this RecommenderConfigurationResponse.


        :return: The recommendation_provider_id_type of this RecommenderConfigurationResponse.
        :rtype: str
        """
        return self._recommendation_provider_id_type

    @recommendation_provider_id_type.setter
    def recommendation_provider_id_type(self, recommendation_provider_id_type):
        """Sets the recommendation_provider_id_type of this RecommenderConfigurationResponse.


        :param recommendation_provider_id_type: The recommendation_provider_id_type of this RecommenderConfigurationResponse.
        :type recommendation_provider_id_type: str
        """

        self._recommendation_provider_id_type = recommendation_provider_id_type

    @property
    def recommendation_provider_role_arn(self):
        """Gets the recommendation_provider_role_arn of this RecommenderConfigurationResponse.


        :return: The recommendation_provider_role_arn of this RecommenderConfigurationResponse.
        :rtype: str
        """
        return self._recommendation_provider_role_arn

    @recommendation_provider_role_arn.setter
    def recommendation_provider_role_arn(self, recommendation_provider_role_arn):
        """Sets the recommendation_provider_role_arn of this RecommenderConfigurationResponse.


        :param recommendation_provider_role_arn: The recommendation_provider_role_arn of this RecommenderConfigurationResponse.
        :type recommendation_provider_role_arn: str
        """
        if recommendation_provider_role_arn is None:
            raise ValueError("Invalid value for `recommendation_provider_role_arn`, must not be `None`")

        self._recommendation_provider_role_arn = recommendation_provider_role_arn

    @property
    def recommendation_provider_uri(self):
        """Gets the recommendation_provider_uri of this RecommenderConfigurationResponse.


        :return: The recommendation_provider_uri of this RecommenderConfigurationResponse.
        :rtype: str
        """
        return self._recommendation_provider_uri

    @recommendation_provider_uri.setter
    def recommendation_provider_uri(self, recommendation_provider_uri):
        """Sets the recommendation_provider_uri of this RecommenderConfigurationResponse.


        :param recommendation_provider_uri: The recommendation_provider_uri of this RecommenderConfigurationResponse.
        :type recommendation_provider_uri: str
        """
        if recommendation_provider_uri is None:
            raise ValueError("Invalid value for `recommendation_provider_uri`, must not be `None`")

        self._recommendation_provider_uri = recommendation_provider_uri

    @property
    def recommendation_transformer_uri(self):
        """Gets the recommendation_transformer_uri of this RecommenderConfigurationResponse.


        :return: The recommendation_transformer_uri of this RecommenderConfigurationResponse.
        :rtype: str
        """
        return self._recommendation_transformer_uri

    @recommendation_transformer_uri.setter
    def recommendation_transformer_uri(self, recommendation_transformer_uri):
        """Sets the recommendation_transformer_uri of this RecommenderConfigurationResponse.


        :param recommendation_transformer_uri: The recommendation_transformer_uri of this RecommenderConfigurationResponse.
        :type recommendation_transformer_uri: str
        """

        self._recommendation_transformer_uri = recommendation_transformer_uri

    @property
    def recommendations_display_name(self):
        """Gets the recommendations_display_name of this RecommenderConfigurationResponse.


        :return: The recommendations_display_name of this RecommenderConfigurationResponse.
        :rtype: str
        """
        return self._recommendations_display_name

    @recommendations_display_name.setter
    def recommendations_display_name(self, recommendations_display_name):
        """Sets the recommendations_display_name of this RecommenderConfigurationResponse.


        :param recommendations_display_name: The recommendations_display_name of this RecommenderConfigurationResponse.
        :type recommendations_display_name: str
        """

        self._recommendations_display_name = recommendations_display_name

    @property
    def recommendations_per_message(self):
        """Gets the recommendations_per_message of this RecommenderConfigurationResponse.


        :return: The recommendations_per_message of this RecommenderConfigurationResponse.
        :rtype: int
        """
        return self._recommendations_per_message

    @recommendations_per_message.setter
    def recommendations_per_message(self, recommendations_per_message):
        """Sets the recommendations_per_message of this RecommenderConfigurationResponse.


        :param recommendations_per_message: The recommendations_per_message of this RecommenderConfigurationResponse.
        :type recommendations_per_message: int
        """

        self._recommendations_per_message = recommendations_per_message
