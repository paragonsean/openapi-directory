# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.sms_channel_response import SMSChannelResponse
from openapi_server import util


class DeleteSmsChannelResponse(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, sms_channel_response: SMSChannelResponse=None):
        """DeleteSmsChannelResponse - a model defined in OpenAPI

        :param sms_channel_response: The sms_channel_response of this DeleteSmsChannelResponse.
        """
        self.openapi_types = {
            'sms_channel_response': SMSChannelResponse
        }

        self.attribute_map = {
            'sms_channel_response': 'SMSChannelResponse'
        }

        self._sms_channel_response = sms_channel_response

    @classmethod
    def from_dict(cls, dikt: dict) -> 'DeleteSmsChannelResponse':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The DeleteSmsChannelResponse of this DeleteSmsChannelResponse.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def sms_channel_response(self):
        """Gets the sms_channel_response of this DeleteSmsChannelResponse.


        :return: The sms_channel_response of this DeleteSmsChannelResponse.
        :rtype: SMSChannelResponse
        """
        return self._sms_channel_response

    @sms_channel_response.setter
    def sms_channel_response(self, sms_channel_response):
        """Sets the sms_channel_response of this DeleteSmsChannelResponse.


        :param sms_channel_response: The sms_channel_response of this DeleteSmsChannelResponse.
        :type sms_channel_response: SMSChannelResponse
        """
        if sms_channel_response is None:
            raise ValueError("Invalid value for `sms_channel_response`, must not be `None`")

        self._sms_channel_response = sms_channel_response
