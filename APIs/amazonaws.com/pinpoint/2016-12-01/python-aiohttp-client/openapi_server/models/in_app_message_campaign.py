# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.in_app_message_campaign_in_app_message import InAppMessageCampaignInAppMessage
from openapi_server.models.in_app_message_campaign_schedule import InAppMessageCampaignSchedule
from openapi_server import util


class InAppMessageCampaign(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, campaign_id: str=None, daily_cap: int=None, in_app_message: InAppMessageCampaignInAppMessage=None, priority: int=None, schedule: InAppMessageCampaignSchedule=None, session_cap: int=None, total_cap: int=None, treatment_id: str=None):
        """InAppMessageCampaign - a model defined in OpenAPI

        :param campaign_id: The campaign_id of this InAppMessageCampaign.
        :param daily_cap: The daily_cap of this InAppMessageCampaign.
        :param in_app_message: The in_app_message of this InAppMessageCampaign.
        :param priority: The priority of this InAppMessageCampaign.
        :param schedule: The schedule of this InAppMessageCampaign.
        :param session_cap: The session_cap of this InAppMessageCampaign.
        :param total_cap: The total_cap of this InAppMessageCampaign.
        :param treatment_id: The treatment_id of this InAppMessageCampaign.
        """
        self.openapi_types = {
            'campaign_id': str,
            'daily_cap': int,
            'in_app_message': InAppMessageCampaignInAppMessage,
            'priority': int,
            'schedule': InAppMessageCampaignSchedule,
            'session_cap': int,
            'total_cap': int,
            'treatment_id': str
        }

        self.attribute_map = {
            'campaign_id': 'CampaignId',
            'daily_cap': 'DailyCap',
            'in_app_message': 'InAppMessage',
            'priority': 'Priority',
            'schedule': 'Schedule',
            'session_cap': 'SessionCap',
            'total_cap': 'TotalCap',
            'treatment_id': 'TreatmentId'
        }

        self._campaign_id = campaign_id
        self._daily_cap = daily_cap
        self._in_app_message = in_app_message
        self._priority = priority
        self._schedule = schedule
        self._session_cap = session_cap
        self._total_cap = total_cap
        self._treatment_id = treatment_id

    @classmethod
    def from_dict(cls, dikt: dict) -> 'InAppMessageCampaign':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The InAppMessageCampaign of this InAppMessageCampaign.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def campaign_id(self):
        """Gets the campaign_id of this InAppMessageCampaign.


        :return: The campaign_id of this InAppMessageCampaign.
        :rtype: str
        """
        return self._campaign_id

    @campaign_id.setter
    def campaign_id(self, campaign_id):
        """Sets the campaign_id of this InAppMessageCampaign.


        :param campaign_id: The campaign_id of this InAppMessageCampaign.
        :type campaign_id: str
        """

        self._campaign_id = campaign_id

    @property
    def daily_cap(self):
        """Gets the daily_cap of this InAppMessageCampaign.


        :return: The daily_cap of this InAppMessageCampaign.
        :rtype: int
        """
        return self._daily_cap

    @daily_cap.setter
    def daily_cap(self, daily_cap):
        """Sets the daily_cap of this InAppMessageCampaign.


        :param daily_cap: The daily_cap of this InAppMessageCampaign.
        :type daily_cap: int
        """

        self._daily_cap = daily_cap

    @property
    def in_app_message(self):
        """Gets the in_app_message of this InAppMessageCampaign.


        :return: The in_app_message of this InAppMessageCampaign.
        :rtype: InAppMessageCampaignInAppMessage
        """
        return self._in_app_message

    @in_app_message.setter
    def in_app_message(self, in_app_message):
        """Sets the in_app_message of this InAppMessageCampaign.


        :param in_app_message: The in_app_message of this InAppMessageCampaign.
        :type in_app_message: InAppMessageCampaignInAppMessage
        """

        self._in_app_message = in_app_message

    @property
    def priority(self):
        """Gets the priority of this InAppMessageCampaign.


        :return: The priority of this InAppMessageCampaign.
        :rtype: int
        """
        return self._priority

    @priority.setter
    def priority(self, priority):
        """Sets the priority of this InAppMessageCampaign.


        :param priority: The priority of this InAppMessageCampaign.
        :type priority: int
        """

        self._priority = priority

    @property
    def schedule(self):
        """Gets the schedule of this InAppMessageCampaign.


        :return: The schedule of this InAppMessageCampaign.
        :rtype: InAppMessageCampaignSchedule
        """
        return self._schedule

    @schedule.setter
    def schedule(self, schedule):
        """Sets the schedule of this InAppMessageCampaign.


        :param schedule: The schedule of this InAppMessageCampaign.
        :type schedule: InAppMessageCampaignSchedule
        """

        self._schedule = schedule

    @property
    def session_cap(self):
        """Gets the session_cap of this InAppMessageCampaign.


        :return: The session_cap of this InAppMessageCampaign.
        :rtype: int
        """
        return self._session_cap

    @session_cap.setter
    def session_cap(self, session_cap):
        """Sets the session_cap of this InAppMessageCampaign.


        :param session_cap: The session_cap of this InAppMessageCampaign.
        :type session_cap: int
        """

        self._session_cap = session_cap

    @property
    def total_cap(self):
        """Gets the total_cap of this InAppMessageCampaign.


        :return: The total_cap of this InAppMessageCampaign.
        :rtype: int
        """
        return self._total_cap

    @total_cap.setter
    def total_cap(self, total_cap):
        """Sets the total_cap of this InAppMessageCampaign.


        :param total_cap: The total_cap of this InAppMessageCampaign.
        :type total_cap: int
        """

        self._total_cap = total_cap

    @property
    def treatment_id(self):
        """Gets the treatment_id of this InAppMessageCampaign.


        :return: The treatment_id of this InAppMessageCampaign.
        :rtype: str
        """
        return self._treatment_id

    @treatment_id.setter
    def treatment_id(self, treatment_id):
        """Sets the treatment_id of this InAppMessageCampaign.


        :param treatment_id: The treatment_id of this InAppMessageCampaign.
        :type treatment_id: str
        """

        self._treatment_id = treatment_id
