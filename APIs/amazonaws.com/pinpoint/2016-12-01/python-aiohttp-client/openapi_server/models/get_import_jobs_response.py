# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.import_jobs_response import ImportJobsResponse
from openapi_server import util


class GetImportJobsResponse(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, import_jobs_response: ImportJobsResponse=None):
        """GetImportJobsResponse - a model defined in OpenAPI

        :param import_jobs_response: The import_jobs_response of this GetImportJobsResponse.
        """
        self.openapi_types = {
            'import_jobs_response': ImportJobsResponse
        }

        self.attribute_map = {
            'import_jobs_response': 'ImportJobsResponse'
        }

        self._import_jobs_response = import_jobs_response

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GetImportJobsResponse':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The GetImportJobsResponse of this GetImportJobsResponse.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def import_jobs_response(self):
        """Gets the import_jobs_response of this GetImportJobsResponse.


        :return: The import_jobs_response of this GetImportJobsResponse.
        :rtype: ImportJobsResponse
        """
        return self._import_jobs_response

    @import_jobs_response.setter
    def import_jobs_response(self, import_jobs_response):
        """Sets the import_jobs_response of this GetImportJobsResponse.


        :param import_jobs_response: The import_jobs_response of this GetImportJobsResponse.
        :type import_jobs_response: ImportJobsResponse
        """
        if import_jobs_response is None:
            raise ValueError("Invalid value for `import_jobs_response`, must not be `None`")

        self._import_jobs_response = import_jobs_response
