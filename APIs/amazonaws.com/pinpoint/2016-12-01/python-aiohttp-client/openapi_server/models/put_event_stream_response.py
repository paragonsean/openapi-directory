# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.event_stream import EventStream
from openapi_server import util


class PutEventStreamResponse(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, event_stream: EventStream=None):
        """PutEventStreamResponse - a model defined in OpenAPI

        :param event_stream: The event_stream of this PutEventStreamResponse.
        """
        self.openapi_types = {
            'event_stream': EventStream
        }

        self.attribute_map = {
            'event_stream': 'EventStream'
        }

        self._event_stream = event_stream

    @classmethod
    def from_dict(cls, dikt: dict) -> 'PutEventStreamResponse':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The PutEventStreamResponse of this PutEventStreamResponse.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def event_stream(self):
        """Gets the event_stream of this PutEventStreamResponse.


        :return: The event_stream of this PutEventStreamResponse.
        :rtype: EventStream
        """
        return self._event_stream

    @event_stream.setter
    def event_stream(self, event_stream):
        """Sets the event_stream of this PutEventStreamResponse.


        :param event_stream: The event_stream of this PutEventStreamResponse.
        :type event_stream: EventStream
        """
        if event_stream is None:
            raise ValueError("Invalid value for `event_stream`, must not be `None`")

        self._event_stream = event_stream
