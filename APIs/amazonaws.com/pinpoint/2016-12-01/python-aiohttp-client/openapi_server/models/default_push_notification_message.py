# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.action import Action
from openapi_server import util


class DefaultPushNotificationMessage(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, action: Action=None, body: str=None, data: Dict=None, silent_push: bool=None, substitutions: Dict=None, title: str=None, url: str=None):
        """DefaultPushNotificationMessage - a model defined in OpenAPI

        :param action: The action of this DefaultPushNotificationMessage.
        :param body: The body of this DefaultPushNotificationMessage.
        :param data: The data of this DefaultPushNotificationMessage.
        :param silent_push: The silent_push of this DefaultPushNotificationMessage.
        :param substitutions: The substitutions of this DefaultPushNotificationMessage.
        :param title: The title of this DefaultPushNotificationMessage.
        :param url: The url of this DefaultPushNotificationMessage.
        """
        self.openapi_types = {
            'action': Action,
            'body': str,
            'data': Dict,
            'silent_push': bool,
            'substitutions': Dict,
            'title': str,
            'url': str
        }

        self.attribute_map = {
            'action': 'Action',
            'body': 'Body',
            'data': 'Data',
            'silent_push': 'SilentPush',
            'substitutions': 'Substitutions',
            'title': 'Title',
            'url': 'Url'
        }

        self._action = action
        self._body = body
        self._data = data
        self._silent_push = silent_push
        self._substitutions = substitutions
        self._title = title
        self._url = url

    @classmethod
    def from_dict(cls, dikt: dict) -> 'DefaultPushNotificationMessage':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The DefaultPushNotificationMessage of this DefaultPushNotificationMessage.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def action(self):
        """Gets the action of this DefaultPushNotificationMessage.


        :return: The action of this DefaultPushNotificationMessage.
        :rtype: Action
        """
        return self._action

    @action.setter
    def action(self, action):
        """Sets the action of this DefaultPushNotificationMessage.


        :param action: The action of this DefaultPushNotificationMessage.
        :type action: Action
        """

        self._action = action

    @property
    def body(self):
        """Gets the body of this DefaultPushNotificationMessage.


        :return: The body of this DefaultPushNotificationMessage.
        :rtype: str
        """
        return self._body

    @body.setter
    def body(self, body):
        """Sets the body of this DefaultPushNotificationMessage.


        :param body: The body of this DefaultPushNotificationMessage.
        :type body: str
        """

        self._body = body

    @property
    def data(self):
        """Gets the data of this DefaultPushNotificationMessage.


        :return: The data of this DefaultPushNotificationMessage.
        :rtype: Dict
        """
        return self._data

    @data.setter
    def data(self, data):
        """Sets the data of this DefaultPushNotificationMessage.


        :param data: The data of this DefaultPushNotificationMessage.
        :type data: Dict
        """

        self._data = data

    @property
    def silent_push(self):
        """Gets the silent_push of this DefaultPushNotificationMessage.


        :return: The silent_push of this DefaultPushNotificationMessage.
        :rtype: bool
        """
        return self._silent_push

    @silent_push.setter
    def silent_push(self, silent_push):
        """Sets the silent_push of this DefaultPushNotificationMessage.


        :param silent_push: The silent_push of this DefaultPushNotificationMessage.
        :type silent_push: bool
        """

        self._silent_push = silent_push

    @property
    def substitutions(self):
        """Gets the substitutions of this DefaultPushNotificationMessage.


        :return: The substitutions of this DefaultPushNotificationMessage.
        :rtype: Dict
        """
        return self._substitutions

    @substitutions.setter
    def substitutions(self, substitutions):
        """Sets the substitutions of this DefaultPushNotificationMessage.


        :param substitutions: The substitutions of this DefaultPushNotificationMessage.
        :type substitutions: Dict
        """

        self._substitutions = substitutions

    @property
    def title(self):
        """Gets the title of this DefaultPushNotificationMessage.


        :return: The title of this DefaultPushNotificationMessage.
        :rtype: str
        """
        return self._title

    @title.setter
    def title(self, title):
        """Sets the title of this DefaultPushNotificationMessage.


        :param title: The title of this DefaultPushNotificationMessage.
        :type title: str
        """

        self._title = title

    @property
    def url(self):
        """Gets the url of this DefaultPushNotificationMessage.


        :return: The url of this DefaultPushNotificationMessage.
        :rtype: str
        """
        return self._url

    @url.setter
    def url(self, url):
        """Sets the url of this DefaultPushNotificationMessage.


        :param url: The url of this DefaultPushNotificationMessage.
        :type url: str
        """

        self._url = url
