# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.events_response import EventsResponse
from openapi_server import util


class PutEventsResponse(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, events_response: EventsResponse=None):
        """PutEventsResponse - a model defined in OpenAPI

        :param events_response: The events_response of this PutEventsResponse.
        """
        self.openapi_types = {
            'events_response': EventsResponse
        }

        self.attribute_map = {
            'events_response': 'EventsResponse'
        }

        self._events_response = events_response

    @classmethod
    def from_dict(cls, dikt: dict) -> 'PutEventsResponse':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The PutEventsResponse of this PutEventsResponse.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def events_response(self):
        """Gets the events_response of this PutEventsResponse.


        :return: The events_response of this PutEventsResponse.
        :rtype: EventsResponse
        """
        return self._events_response

    @events_response.setter
    def events_response(self, events_response):
        """Sets the events_response of this PutEventsResponse.


        :param events_response: The events_response of this PutEventsResponse.
        :type events_response: EventsResponse
        """
        if events_response is None:
            raise ValueError("Invalid value for `events_response`, must not be `None`")

        self._events_response = events_response
