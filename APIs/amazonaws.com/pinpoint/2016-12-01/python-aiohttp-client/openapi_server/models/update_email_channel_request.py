# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.update_email_channel_request_email_channel_request import UpdateEmailChannelRequestEmailChannelRequest
from openapi_server import util


class UpdateEmailChannelRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, email_channel_request: UpdateEmailChannelRequestEmailChannelRequest=None):
        """UpdateEmailChannelRequest - a model defined in OpenAPI

        :param email_channel_request: The email_channel_request of this UpdateEmailChannelRequest.
        """
        self.openapi_types = {
            'email_channel_request': UpdateEmailChannelRequestEmailChannelRequest
        }

        self.attribute_map = {
            'email_channel_request': 'EmailChannelRequest'
        }

        self._email_channel_request = email_channel_request

    @classmethod
    def from_dict(cls, dikt: dict) -> 'UpdateEmailChannelRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The UpdateEmailChannel_request of this UpdateEmailChannelRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def email_channel_request(self):
        """Gets the email_channel_request of this UpdateEmailChannelRequest.


        :return: The email_channel_request of this UpdateEmailChannelRequest.
        :rtype: UpdateEmailChannelRequestEmailChannelRequest
        """
        return self._email_channel_request

    @email_channel_request.setter
    def email_channel_request(self, email_channel_request):
        """Sets the email_channel_request of this UpdateEmailChannelRequest.


        :param email_channel_request: The email_channel_request of this UpdateEmailChannelRequest.
        :type email_channel_request: UpdateEmailChannelRequestEmailChannelRequest
        """
        if email_channel_request is None:
            raise ValueError("Invalid value for `email_channel_request`, must not be `None`")

        self._email_channel_request = email_channel_request
