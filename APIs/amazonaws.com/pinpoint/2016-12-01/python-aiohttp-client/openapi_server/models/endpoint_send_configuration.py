# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class EndpointSendConfiguration(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, body_override: str=None, context: Dict=None, raw_content: str=None, substitutions: Dict=None, title_override: str=None):
        """EndpointSendConfiguration - a model defined in OpenAPI

        :param body_override: The body_override of this EndpointSendConfiguration.
        :param context: The context of this EndpointSendConfiguration.
        :param raw_content: The raw_content of this EndpointSendConfiguration.
        :param substitutions: The substitutions of this EndpointSendConfiguration.
        :param title_override: The title_override of this EndpointSendConfiguration.
        """
        self.openapi_types = {
            'body_override': str,
            'context': Dict,
            'raw_content': str,
            'substitutions': Dict,
            'title_override': str
        }

        self.attribute_map = {
            'body_override': 'BodyOverride',
            'context': 'Context',
            'raw_content': 'RawContent',
            'substitutions': 'Substitutions',
            'title_override': 'TitleOverride'
        }

        self._body_override = body_override
        self._context = context
        self._raw_content = raw_content
        self._substitutions = substitutions
        self._title_override = title_override

    @classmethod
    def from_dict(cls, dikt: dict) -> 'EndpointSendConfiguration':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The EndpointSendConfiguration of this EndpointSendConfiguration.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def body_override(self):
        """Gets the body_override of this EndpointSendConfiguration.


        :return: The body_override of this EndpointSendConfiguration.
        :rtype: str
        """
        return self._body_override

    @body_override.setter
    def body_override(self, body_override):
        """Sets the body_override of this EndpointSendConfiguration.


        :param body_override: The body_override of this EndpointSendConfiguration.
        :type body_override: str
        """

        self._body_override = body_override

    @property
    def context(self):
        """Gets the context of this EndpointSendConfiguration.


        :return: The context of this EndpointSendConfiguration.
        :rtype: Dict
        """
        return self._context

    @context.setter
    def context(self, context):
        """Sets the context of this EndpointSendConfiguration.


        :param context: The context of this EndpointSendConfiguration.
        :type context: Dict
        """

        self._context = context

    @property
    def raw_content(self):
        """Gets the raw_content of this EndpointSendConfiguration.


        :return: The raw_content of this EndpointSendConfiguration.
        :rtype: str
        """
        return self._raw_content

    @raw_content.setter
    def raw_content(self, raw_content):
        """Sets the raw_content of this EndpointSendConfiguration.


        :param raw_content: The raw_content of this EndpointSendConfiguration.
        :type raw_content: str
        """

        self._raw_content = raw_content

    @property
    def substitutions(self):
        """Gets the substitutions of this EndpointSendConfiguration.


        :return: The substitutions of this EndpointSendConfiguration.
        :rtype: Dict
        """
        return self._substitutions

    @substitutions.setter
    def substitutions(self, substitutions):
        """Sets the substitutions of this EndpointSendConfiguration.


        :param substitutions: The substitutions of this EndpointSendConfiguration.
        :type substitutions: Dict
        """

        self._substitutions = substitutions

    @property
    def title_override(self):
        """Gets the title_override of this EndpointSendConfiguration.


        :return: The title_override of this EndpointSendConfiguration.
        :rtype: str
        """
        return self._title_override

    @title_override.setter
    def title_override(self, title_override):
        """Sets the title_override of this EndpointSendConfiguration.


        :param title_override: The title_override of this EndpointSendConfiguration.
        :type title_override: str
        """

        self._title_override = title_override
