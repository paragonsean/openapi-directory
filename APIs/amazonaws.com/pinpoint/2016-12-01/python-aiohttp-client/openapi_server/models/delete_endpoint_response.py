# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.endpoint_response import EndpointResponse
from openapi_server import util


class DeleteEndpointResponse(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, endpoint_response: EndpointResponse=None):
        """DeleteEndpointResponse - a model defined in OpenAPI

        :param endpoint_response: The endpoint_response of this DeleteEndpointResponse.
        """
        self.openapi_types = {
            'endpoint_response': EndpointResponse
        }

        self.attribute_map = {
            'endpoint_response': 'EndpointResponse'
        }

        self._endpoint_response = endpoint_response

    @classmethod
    def from_dict(cls, dikt: dict) -> 'DeleteEndpointResponse':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The DeleteEndpointResponse of this DeleteEndpointResponse.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def endpoint_response(self):
        """Gets the endpoint_response of this DeleteEndpointResponse.


        :return: The endpoint_response of this DeleteEndpointResponse.
        :rtype: EndpointResponse
        """
        return self._endpoint_response

    @endpoint_response.setter
    def endpoint_response(self, endpoint_response):
        """Sets the endpoint_response of this DeleteEndpointResponse.


        :param endpoint_response: The endpoint_response of this DeleteEndpointResponse.
        :type endpoint_response: EndpointResponse
        """
        if endpoint_response is None:
            raise ValueError("Invalid value for `endpoint_response`, must not be `None`")

        self._endpoint_response = endpoint_response
