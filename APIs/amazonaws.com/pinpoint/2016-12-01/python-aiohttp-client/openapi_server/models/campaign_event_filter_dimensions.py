# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.event_dimensions_event_type import EventDimensionsEventType
from openapi_server import util


class CampaignEventFilterDimensions(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, attributes: Dict=None, event_type: EventDimensionsEventType=None, metrics: Dict=None):
        """CampaignEventFilterDimensions - a model defined in OpenAPI

        :param attributes: The attributes of this CampaignEventFilterDimensions.
        :param event_type: The event_type of this CampaignEventFilterDimensions.
        :param metrics: The metrics of this CampaignEventFilterDimensions.
        """
        self.openapi_types = {
            'attributes': Dict,
            'event_type': EventDimensionsEventType,
            'metrics': Dict
        }

        self.attribute_map = {
            'attributes': 'Attributes',
            'event_type': 'EventType',
            'metrics': 'Metrics'
        }

        self._attributes = attributes
        self._event_type = event_type
        self._metrics = metrics

    @classmethod
    def from_dict(cls, dikt: dict) -> 'CampaignEventFilterDimensions':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The CampaignEventFilter_Dimensions of this CampaignEventFilterDimensions.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def attributes(self):
        """Gets the attributes of this CampaignEventFilterDimensions.


        :return: The attributes of this CampaignEventFilterDimensions.
        :rtype: Dict
        """
        return self._attributes

    @attributes.setter
    def attributes(self, attributes):
        """Sets the attributes of this CampaignEventFilterDimensions.


        :param attributes: The attributes of this CampaignEventFilterDimensions.
        :type attributes: Dict
        """

        self._attributes = attributes

    @property
    def event_type(self):
        """Gets the event_type of this CampaignEventFilterDimensions.


        :return: The event_type of this CampaignEventFilterDimensions.
        :rtype: EventDimensionsEventType
        """
        return self._event_type

    @event_type.setter
    def event_type(self, event_type):
        """Sets the event_type of this CampaignEventFilterDimensions.


        :param event_type: The event_type of this CampaignEventFilterDimensions.
        :type event_type: EventDimensionsEventType
        """

        self._event_type = event_type

    @property
    def metrics(self):
        """Gets the metrics of this CampaignEventFilterDimensions.


        :return: The metrics of this CampaignEventFilterDimensions.
        :rtype: Dict
        """
        return self._metrics

    @metrics.setter
    def metrics(self, metrics):
        """Sets the metrics of this CampaignEventFilterDimensions.


        :param metrics: The metrics of this CampaignEventFilterDimensions.
        :type metrics: Dict
        """

        self._metrics = metrics
