# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.send_users_messages_request_send_users_message_request import SendUsersMessagesRequestSendUsersMessageRequest
from openapi_server import util


class SendUsersMessagesRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, send_users_message_request: SendUsersMessagesRequestSendUsersMessageRequest=None):
        """SendUsersMessagesRequest - a model defined in OpenAPI

        :param send_users_message_request: The send_users_message_request of this SendUsersMessagesRequest.
        """
        self.openapi_types = {
            'send_users_message_request': SendUsersMessagesRequestSendUsersMessageRequest
        }

        self.attribute_map = {
            'send_users_message_request': 'SendUsersMessageRequest'
        }

        self._send_users_message_request = send_users_message_request

    @classmethod
    def from_dict(cls, dikt: dict) -> 'SendUsersMessagesRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The SendUsersMessages_request of this SendUsersMessagesRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def send_users_message_request(self):
        """Gets the send_users_message_request of this SendUsersMessagesRequest.


        :return: The send_users_message_request of this SendUsersMessagesRequest.
        :rtype: SendUsersMessagesRequestSendUsersMessageRequest
        """
        return self._send_users_message_request

    @send_users_message_request.setter
    def send_users_message_request(self, send_users_message_request):
        """Sets the send_users_message_request of this SendUsersMessagesRequest.


        :param send_users_message_request: The send_users_message_request of this SendUsersMessagesRequest.
        :type send_users_message_request: SendUsersMessagesRequestSendUsersMessageRequest
        """
        if send_users_message_request is None:
            raise ValueError("Invalid value for `send_users_message_request`, must not be `None`")

        self._send_users_message_request = send_users_message_request
