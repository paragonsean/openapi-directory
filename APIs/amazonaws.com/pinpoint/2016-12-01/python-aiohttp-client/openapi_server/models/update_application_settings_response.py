# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.application_settings_resource import ApplicationSettingsResource
from openapi_server import util


class UpdateApplicationSettingsResponse(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, application_settings_resource: ApplicationSettingsResource=None):
        """UpdateApplicationSettingsResponse - a model defined in OpenAPI

        :param application_settings_resource: The application_settings_resource of this UpdateApplicationSettingsResponse.
        """
        self.openapi_types = {
            'application_settings_resource': ApplicationSettingsResource
        }

        self.attribute_map = {
            'application_settings_resource': 'ApplicationSettingsResource'
        }

        self._application_settings_resource = application_settings_resource

    @classmethod
    def from_dict(cls, dikt: dict) -> 'UpdateApplicationSettingsResponse':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The UpdateApplicationSettingsResponse of this UpdateApplicationSettingsResponse.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def application_settings_resource(self):
        """Gets the application_settings_resource of this UpdateApplicationSettingsResponse.


        :return: The application_settings_resource of this UpdateApplicationSettingsResponse.
        :rtype: ApplicationSettingsResource
        """
        return self._application_settings_resource

    @application_settings_resource.setter
    def application_settings_resource(self, application_settings_resource):
        """Sets the application_settings_resource of this UpdateApplicationSettingsResponse.


        :param application_settings_resource: The application_settings_resource of this UpdateApplicationSettingsResponse.
        :type application_settings_resource: ApplicationSettingsResource
        """
        if application_settings_resource is None:
            raise ValueError("Invalid value for `application_settings_resource`, must not be `None`")

        self._application_settings_resource = application_settings_resource
