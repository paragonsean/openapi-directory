# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.export_jobs_response import ExportJobsResponse
from openapi_server import util


class GetExportJobsResponse(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, export_jobs_response: ExportJobsResponse=None):
        """GetExportJobsResponse - a model defined in OpenAPI

        :param export_jobs_response: The export_jobs_response of this GetExportJobsResponse.
        """
        self.openapi_types = {
            'export_jobs_response': ExportJobsResponse
        }

        self.attribute_map = {
            'export_jobs_response': 'ExportJobsResponse'
        }

        self._export_jobs_response = export_jobs_response

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GetExportJobsResponse':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The GetExportJobsResponse of this GetExportJobsResponse.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def export_jobs_response(self):
        """Gets the export_jobs_response of this GetExportJobsResponse.


        :return: The export_jobs_response of this GetExportJobsResponse.
        :rtype: ExportJobsResponse
        """
        return self._export_jobs_response

    @export_jobs_response.setter
    def export_jobs_response(self, export_jobs_response):
        """Sets the export_jobs_response of this GetExportJobsResponse.


        :param export_jobs_response: The export_jobs_response of this GetExportJobsResponse.
        :type export_jobs_response: ExportJobsResponse
        """
        if export_jobs_response is None:
            raise ValueError("Invalid value for `export_jobs_response`, must not be `None`")

        self._export_jobs_response = export_jobs_response
