# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class PutEventsRequestEventsRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, batch_item: Dict=None):
        """PutEventsRequestEventsRequest - a model defined in OpenAPI

        :param batch_item: The batch_item of this PutEventsRequestEventsRequest.
        """
        self.openapi_types = {
            'batch_item': Dict
        }

        self.attribute_map = {
            'batch_item': 'BatchItem'
        }

        self._batch_item = batch_item

    @classmethod
    def from_dict(cls, dikt: dict) -> 'PutEventsRequestEventsRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The PutEvents_request_EventsRequest of this PutEventsRequestEventsRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def batch_item(self):
        """Gets the batch_item of this PutEventsRequestEventsRequest.


        :return: The batch_item of this PutEventsRequestEventsRequest.
        :rtype: Dict
        """
        return self._batch_item

    @batch_item.setter
    def batch_item(self, batch_item):
        """Sets the batch_item of this PutEventsRequestEventsRequest.


        :param batch_item: The batch_item of this PutEventsRequestEventsRequest.
        :type batch_item: Dict
        """

        self._batch_item = batch_item
