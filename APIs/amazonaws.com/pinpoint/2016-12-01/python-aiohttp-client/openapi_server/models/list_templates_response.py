# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.templates_response import TemplatesResponse
from openapi_server import util


class ListTemplatesResponse(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, templates_response: TemplatesResponse=None):
        """ListTemplatesResponse - a model defined in OpenAPI

        :param templates_response: The templates_response of this ListTemplatesResponse.
        """
        self.openapi_types = {
            'templates_response': TemplatesResponse
        }

        self.attribute_map = {
            'templates_response': 'TemplatesResponse'
        }

        self._templates_response = templates_response

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ListTemplatesResponse':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ListTemplatesResponse of this ListTemplatesResponse.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def templates_response(self):
        """Gets the templates_response of this ListTemplatesResponse.


        :return: The templates_response of this ListTemplatesResponse.
        :rtype: TemplatesResponse
        """
        return self._templates_response

    @templates_response.setter
    def templates_response(self, templates_response):
        """Sets the templates_response of this ListTemplatesResponse.


        :param templates_response: The templates_response of this ListTemplatesResponse.
        :type templates_response: TemplatesResponse
        """
        if templates_response is None:
            raise ValueError("Invalid value for `templates_response`, must not be `None`")

        self._templates_response = templates_response
