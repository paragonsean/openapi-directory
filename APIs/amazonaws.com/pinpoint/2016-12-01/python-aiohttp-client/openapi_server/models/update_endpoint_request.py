# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.update_endpoint_request_endpoint_request import UpdateEndpointRequestEndpointRequest
from openapi_server import util


class UpdateEndpointRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, endpoint_request: UpdateEndpointRequestEndpointRequest=None):
        """UpdateEndpointRequest - a model defined in OpenAPI

        :param endpoint_request: The endpoint_request of this UpdateEndpointRequest.
        """
        self.openapi_types = {
            'endpoint_request': UpdateEndpointRequestEndpointRequest
        }

        self.attribute_map = {
            'endpoint_request': 'EndpointRequest'
        }

        self._endpoint_request = endpoint_request

    @classmethod
    def from_dict(cls, dikt: dict) -> 'UpdateEndpointRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The UpdateEndpoint_request of this UpdateEndpointRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def endpoint_request(self):
        """Gets the endpoint_request of this UpdateEndpointRequest.


        :return: The endpoint_request of this UpdateEndpointRequest.
        :rtype: UpdateEndpointRequestEndpointRequest
        """
        return self._endpoint_request

    @endpoint_request.setter
    def endpoint_request(self, endpoint_request):
        """Sets the endpoint_request of this UpdateEndpointRequest.


        :param endpoint_request: The endpoint_request of this UpdateEndpointRequest.
        :type endpoint_request: UpdateEndpointRequestEndpointRequest
        """
        if endpoint_request is None:
            raise ValueError("Invalid value for `endpoint_request`, must not be `None`")

        self._endpoint_request = endpoint_request
