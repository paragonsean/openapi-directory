# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.message_type import MessageType
from openapi_server import util


class SMSMessageActivityMessageConfig(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, message_type: MessageType=None, origination_number: str=None, sender_id: str=None, entity_id: str=None, template_id: str=None):
        """SMSMessageActivityMessageConfig - a model defined in OpenAPI

        :param message_type: The message_type of this SMSMessageActivityMessageConfig.
        :param origination_number: The origination_number of this SMSMessageActivityMessageConfig.
        :param sender_id: The sender_id of this SMSMessageActivityMessageConfig.
        :param entity_id: The entity_id of this SMSMessageActivityMessageConfig.
        :param template_id: The template_id of this SMSMessageActivityMessageConfig.
        """
        self.openapi_types = {
            'message_type': MessageType,
            'origination_number': str,
            'sender_id': str,
            'entity_id': str,
            'template_id': str
        }

        self.attribute_map = {
            'message_type': 'MessageType',
            'origination_number': 'OriginationNumber',
            'sender_id': 'SenderId',
            'entity_id': 'EntityId',
            'template_id': 'TemplateId'
        }

        self._message_type = message_type
        self._origination_number = origination_number
        self._sender_id = sender_id
        self._entity_id = entity_id
        self._template_id = template_id

    @classmethod
    def from_dict(cls, dikt: dict) -> 'SMSMessageActivityMessageConfig':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The SMSMessageActivity_MessageConfig of this SMSMessageActivityMessageConfig.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def message_type(self):
        """Gets the message_type of this SMSMessageActivityMessageConfig.


        :return: The message_type of this SMSMessageActivityMessageConfig.
        :rtype: MessageType
        """
        return self._message_type

    @message_type.setter
    def message_type(self, message_type):
        """Sets the message_type of this SMSMessageActivityMessageConfig.


        :param message_type: The message_type of this SMSMessageActivityMessageConfig.
        :type message_type: MessageType
        """

        self._message_type = message_type

    @property
    def origination_number(self):
        """Gets the origination_number of this SMSMessageActivityMessageConfig.


        :return: The origination_number of this SMSMessageActivityMessageConfig.
        :rtype: str
        """
        return self._origination_number

    @origination_number.setter
    def origination_number(self, origination_number):
        """Sets the origination_number of this SMSMessageActivityMessageConfig.


        :param origination_number: The origination_number of this SMSMessageActivityMessageConfig.
        :type origination_number: str
        """

        self._origination_number = origination_number

    @property
    def sender_id(self):
        """Gets the sender_id of this SMSMessageActivityMessageConfig.


        :return: The sender_id of this SMSMessageActivityMessageConfig.
        :rtype: str
        """
        return self._sender_id

    @sender_id.setter
    def sender_id(self, sender_id):
        """Sets the sender_id of this SMSMessageActivityMessageConfig.


        :param sender_id: The sender_id of this SMSMessageActivityMessageConfig.
        :type sender_id: str
        """

        self._sender_id = sender_id

    @property
    def entity_id(self):
        """Gets the entity_id of this SMSMessageActivityMessageConfig.


        :return: The entity_id of this SMSMessageActivityMessageConfig.
        :rtype: str
        """
        return self._entity_id

    @entity_id.setter
    def entity_id(self, entity_id):
        """Sets the entity_id of this SMSMessageActivityMessageConfig.


        :param entity_id: The entity_id of this SMSMessageActivityMessageConfig.
        :type entity_id: str
        """

        self._entity_id = entity_id

    @property
    def template_id(self):
        """Gets the template_id of this SMSMessageActivityMessageConfig.


        :return: The template_id of this SMSMessageActivityMessageConfig.
        :rtype: str
        """
        return self._template_id

    @template_id.setter
    def template_id(self, template_id):
        """Sets the template_id of this SMSMessageActivityMessageConfig.


        :param template_id: The template_id of this SMSMessageActivityMessageConfig.
        :type template_id: str
        """

        self._template_id = template_id
