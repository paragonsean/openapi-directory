# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.adm_channel_response import ADMChannelResponse
from openapi_server import util


class UpdateAdmChannelResponse(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, adm_channel_response: ADMChannelResponse=None):
        """UpdateAdmChannelResponse - a model defined in OpenAPI

        :param adm_channel_response: The adm_channel_response of this UpdateAdmChannelResponse.
        """
        self.openapi_types = {
            'adm_channel_response': ADMChannelResponse
        }

        self.attribute_map = {
            'adm_channel_response': 'ADMChannelResponse'
        }

        self._adm_channel_response = adm_channel_response

    @classmethod
    def from_dict(cls, dikt: dict) -> 'UpdateAdmChannelResponse':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The UpdateAdmChannelResponse of this UpdateAdmChannelResponse.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def adm_channel_response(self):
        """Gets the adm_channel_response of this UpdateAdmChannelResponse.


        :return: The adm_channel_response of this UpdateAdmChannelResponse.
        :rtype: ADMChannelResponse
        """
        return self._adm_channel_response

    @adm_channel_response.setter
    def adm_channel_response(self, adm_channel_response):
        """Sets the adm_channel_response of this UpdateAdmChannelResponse.


        :param adm_channel_response: The adm_channel_response of this UpdateAdmChannelResponse.
        :type adm_channel_response: ADMChannelResponse
        """
        if adm_channel_response is None:
            raise ValueError("Invalid value for `adm_channel_response`, must not be `None`")

        self._adm_channel_response = adm_channel_response
