# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.operator import Operator
from openapi_server import util


class Condition(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, conditions: List=None, operator: Operator=None):
        """Condition - a model defined in OpenAPI

        :param conditions: The conditions of this Condition.
        :param operator: The operator of this Condition.
        """
        self.openapi_types = {
            'conditions': List,
            'operator': Operator
        }

        self.attribute_map = {
            'conditions': 'Conditions',
            'operator': 'Operator'
        }

        self._conditions = conditions
        self._operator = operator

    @classmethod
    def from_dict(cls, dikt: dict) -> 'Condition':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Condition of this Condition.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def conditions(self):
        """Gets the conditions of this Condition.


        :return: The conditions of this Condition.
        :rtype: List
        """
        return self._conditions

    @conditions.setter
    def conditions(self, conditions):
        """Sets the conditions of this Condition.


        :param conditions: The conditions of this Condition.
        :type conditions: List
        """

        self._conditions = conditions

    @property
    def operator(self):
        """Gets the operator of this Condition.


        :return: The operator of this Condition.
        :rtype: Operator
        """
        return self._operator

    @operator.setter
    def operator(self, operator):
        """Sets the operator of this Condition.


        :param operator: The operator of this Condition.
        :type operator: Operator
        """

        self._operator = operator
