# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.in_app_message_button_android import InAppMessageButtonAndroid
from openapi_server.models.in_app_message_button_default_config import InAppMessageButtonDefaultConfig
from openapi_server import util


class InAppMessageButton(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, android: InAppMessageButtonAndroid=None, default_config: InAppMessageButtonDefaultConfig=None, ios: InAppMessageButtonAndroid=None, web: InAppMessageButtonAndroid=None):
        """InAppMessageButton - a model defined in OpenAPI

        :param android: The android of this InAppMessageButton.
        :param default_config: The default_config of this InAppMessageButton.
        :param ios: The ios of this InAppMessageButton.
        :param web: The web of this InAppMessageButton.
        """
        self.openapi_types = {
            'android': InAppMessageButtonAndroid,
            'default_config': InAppMessageButtonDefaultConfig,
            'ios': InAppMessageButtonAndroid,
            'web': InAppMessageButtonAndroid
        }

        self.attribute_map = {
            'android': 'Android',
            'default_config': 'DefaultConfig',
            'ios': 'IOS',
            'web': 'Web'
        }

        self._android = android
        self._default_config = default_config
        self._ios = ios
        self._web = web

    @classmethod
    def from_dict(cls, dikt: dict) -> 'InAppMessageButton':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The InAppMessageButton of this InAppMessageButton.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def android(self):
        """Gets the android of this InAppMessageButton.


        :return: The android of this InAppMessageButton.
        :rtype: InAppMessageButtonAndroid
        """
        return self._android

    @android.setter
    def android(self, android):
        """Sets the android of this InAppMessageButton.


        :param android: The android of this InAppMessageButton.
        :type android: InAppMessageButtonAndroid
        """

        self._android = android

    @property
    def default_config(self):
        """Gets the default_config of this InAppMessageButton.


        :return: The default_config of this InAppMessageButton.
        :rtype: InAppMessageButtonDefaultConfig
        """
        return self._default_config

    @default_config.setter
    def default_config(self, default_config):
        """Sets the default_config of this InAppMessageButton.


        :param default_config: The default_config of this InAppMessageButton.
        :type default_config: InAppMessageButtonDefaultConfig
        """

        self._default_config = default_config

    @property
    def ios(self):
        """Gets the ios of this InAppMessageButton.


        :return: The ios of this InAppMessageButton.
        :rtype: InAppMessageButtonAndroid
        """
        return self._ios

    @ios.setter
    def ios(self, ios):
        """Sets the ios of this InAppMessageButton.


        :param ios: The ios of this InAppMessageButton.
        :type ios: InAppMessageButtonAndroid
        """

        self._ios = ios

    @property
    def web(self):
        """Gets the web of this InAppMessageButton.


        :return: The web of this InAppMessageButton.
        :rtype: InAppMessageButtonAndroid
        """
        return self._web

    @web.setter
    def web(self, web):
        """Sets the web of this InAppMessageButton.


        :param web: The web of this InAppMessageButton.
        :type web: InAppMessageButtonAndroid
        """

        self._web = web
