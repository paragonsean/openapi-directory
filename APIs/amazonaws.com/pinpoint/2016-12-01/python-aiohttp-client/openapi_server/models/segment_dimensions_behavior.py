# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.segment_behaviors_recency import SegmentBehaviorsRecency
from openapi_server import util


class SegmentDimensionsBehavior(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, recency: SegmentBehaviorsRecency=None):
        """SegmentDimensionsBehavior - a model defined in OpenAPI

        :param recency: The recency of this SegmentDimensionsBehavior.
        """
        self.openapi_types = {
            'recency': SegmentBehaviorsRecency
        }

        self.attribute_map = {
            'recency': 'Recency'
        }

        self._recency = recency

    @classmethod
    def from_dict(cls, dikt: dict) -> 'SegmentDimensionsBehavior':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The SegmentDimensions_Behavior of this SegmentDimensionsBehavior.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def recency(self):
        """Gets the recency of this SegmentDimensionsBehavior.


        :return: The recency of this SegmentDimensionsBehavior.
        :rtype: SegmentBehaviorsRecency
        """
        return self._recency

    @recency.setter
    def recency(self, recency):
        """Sets the recency of this SegmentDimensionsBehavior.


        :param recency: The recency of this SegmentDimensionsBehavior.
        :type recency: SegmentBehaviorsRecency
        """

        self._recency = recency
