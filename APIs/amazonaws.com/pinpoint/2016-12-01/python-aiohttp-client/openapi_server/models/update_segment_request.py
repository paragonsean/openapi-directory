# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.write_segment_request import WriteSegmentRequest
from openapi_server import util


class UpdateSegmentRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, write_segment_request: WriteSegmentRequest=None):
        """UpdateSegmentRequest - a model defined in OpenAPI

        :param write_segment_request: The write_segment_request of this UpdateSegmentRequest.
        """
        self.openapi_types = {
            'write_segment_request': WriteSegmentRequest
        }

        self.attribute_map = {
            'write_segment_request': 'WriteSegmentRequest'
        }

        self._write_segment_request = write_segment_request

    @classmethod
    def from_dict(cls, dikt: dict) -> 'UpdateSegmentRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The UpdateSegmentRequest of this UpdateSegmentRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def write_segment_request(self):
        """Gets the write_segment_request of this UpdateSegmentRequest.


        :return: The write_segment_request of this UpdateSegmentRequest.
        :rtype: WriteSegmentRequest
        """
        return self._write_segment_request

    @write_segment_request.setter
    def write_segment_request(self, write_segment_request):
        """Sets the write_segment_request of this UpdateSegmentRequest.


        :param write_segment_request: The write_segment_request of this UpdateSegmentRequest.
        :type write_segment_request: WriteSegmentRequest
        """
        if write_segment_request is None:
            raise ValueError("Invalid value for `write_segment_request`, must not be `None`")

        self._write_segment_request = write_segment_request
