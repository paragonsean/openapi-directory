# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.gcm_channel_response import GCMChannelResponse
from openapi_server import util


class GetGcmChannelResponse(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, gcm_channel_response: GCMChannelResponse=None):
        """GetGcmChannelResponse - a model defined in OpenAPI

        :param gcm_channel_response: The gcm_channel_response of this GetGcmChannelResponse.
        """
        self.openapi_types = {
            'gcm_channel_response': GCMChannelResponse
        }

        self.attribute_map = {
            'gcm_channel_response': 'GCMChannelResponse'
        }

        self._gcm_channel_response = gcm_channel_response

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GetGcmChannelResponse':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The GetGcmChannelResponse of this GetGcmChannelResponse.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def gcm_channel_response(self):
        """Gets the gcm_channel_response of this GetGcmChannelResponse.


        :return: The gcm_channel_response of this GetGcmChannelResponse.
        :rtype: GCMChannelResponse
        """
        return self._gcm_channel_response

    @gcm_channel_response.setter
    def gcm_channel_response(self, gcm_channel_response):
        """Sets the gcm_channel_response of this GetGcmChannelResponse.


        :param gcm_channel_response: The gcm_channel_response of this GetGcmChannelResponse.
        :type gcm_channel_response: GCMChannelResponse
        """
        if gcm_channel_response is None:
            raise ValueError("Invalid value for `gcm_channel_response`, must not be `None`")

        self._gcm_channel_response = gcm_channel_response
