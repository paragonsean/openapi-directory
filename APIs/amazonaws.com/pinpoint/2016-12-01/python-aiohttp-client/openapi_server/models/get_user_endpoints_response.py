# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.endpoints_response import EndpointsResponse
from openapi_server import util


class GetUserEndpointsResponse(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, endpoints_response: EndpointsResponse=None):
        """GetUserEndpointsResponse - a model defined in OpenAPI

        :param endpoints_response: The endpoints_response of this GetUserEndpointsResponse.
        """
        self.openapi_types = {
            'endpoints_response': EndpointsResponse
        }

        self.attribute_map = {
            'endpoints_response': 'EndpointsResponse'
        }

        self._endpoints_response = endpoints_response

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GetUserEndpointsResponse':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The GetUserEndpointsResponse of this GetUserEndpointsResponse.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def endpoints_response(self):
        """Gets the endpoints_response of this GetUserEndpointsResponse.


        :return: The endpoints_response of this GetUserEndpointsResponse.
        :rtype: EndpointsResponse
        """
        return self._endpoints_response

    @endpoints_response.setter
    def endpoints_response(self, endpoints_response):
        """Sets the endpoints_response of this GetUserEndpointsResponse.


        :param endpoints_response: The endpoints_response of this GetUserEndpointsResponse.
        :type endpoints_response: EndpointsResponse
        """
        if endpoints_response is None:
            raise ValueError("Invalid value for `endpoints_response`, must not be `None`")

        self._endpoints_response = endpoints_response
