# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class UpdateEndpointRequestEndpointRequestLocation(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, city: str=None, country: str=None, latitude: float=None, longitude: float=None, postal_code: str=None, region: str=None):
        """UpdateEndpointRequestEndpointRequestLocation - a model defined in OpenAPI

        :param city: The city of this UpdateEndpointRequestEndpointRequestLocation.
        :param country: The country of this UpdateEndpointRequestEndpointRequestLocation.
        :param latitude: The latitude of this UpdateEndpointRequestEndpointRequestLocation.
        :param longitude: The longitude of this UpdateEndpointRequestEndpointRequestLocation.
        :param postal_code: The postal_code of this UpdateEndpointRequestEndpointRequestLocation.
        :param region: The region of this UpdateEndpointRequestEndpointRequestLocation.
        """
        self.openapi_types = {
            'city': str,
            'country': str,
            'latitude': float,
            'longitude': float,
            'postal_code': str,
            'region': str
        }

        self.attribute_map = {
            'city': 'City',
            'country': 'Country',
            'latitude': 'Latitude',
            'longitude': 'Longitude',
            'postal_code': 'PostalCode',
            'region': 'Region'
        }

        self._city = city
        self._country = country
        self._latitude = latitude
        self._longitude = longitude
        self._postal_code = postal_code
        self._region = region

    @classmethod
    def from_dict(cls, dikt: dict) -> 'UpdateEndpointRequestEndpointRequestLocation':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The UpdateEndpoint_request_EndpointRequest_Location of this UpdateEndpointRequestEndpointRequestLocation.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def city(self):
        """Gets the city of this UpdateEndpointRequestEndpointRequestLocation.


        :return: The city of this UpdateEndpointRequestEndpointRequestLocation.
        :rtype: str
        """
        return self._city

    @city.setter
    def city(self, city):
        """Sets the city of this UpdateEndpointRequestEndpointRequestLocation.


        :param city: The city of this UpdateEndpointRequestEndpointRequestLocation.
        :type city: str
        """

        self._city = city

    @property
    def country(self):
        """Gets the country of this UpdateEndpointRequestEndpointRequestLocation.


        :return: The country of this UpdateEndpointRequestEndpointRequestLocation.
        :rtype: str
        """
        return self._country

    @country.setter
    def country(self, country):
        """Sets the country of this UpdateEndpointRequestEndpointRequestLocation.


        :param country: The country of this UpdateEndpointRequestEndpointRequestLocation.
        :type country: str
        """

        self._country = country

    @property
    def latitude(self):
        """Gets the latitude of this UpdateEndpointRequestEndpointRequestLocation.


        :return: The latitude of this UpdateEndpointRequestEndpointRequestLocation.
        :rtype: float
        """
        return self._latitude

    @latitude.setter
    def latitude(self, latitude):
        """Sets the latitude of this UpdateEndpointRequestEndpointRequestLocation.


        :param latitude: The latitude of this UpdateEndpointRequestEndpointRequestLocation.
        :type latitude: float
        """

        self._latitude = latitude

    @property
    def longitude(self):
        """Gets the longitude of this UpdateEndpointRequestEndpointRequestLocation.


        :return: The longitude of this UpdateEndpointRequestEndpointRequestLocation.
        :rtype: float
        """
        return self._longitude

    @longitude.setter
    def longitude(self, longitude):
        """Sets the longitude of this UpdateEndpointRequestEndpointRequestLocation.


        :param longitude: The longitude of this UpdateEndpointRequestEndpointRequestLocation.
        :type longitude: float
        """

        self._longitude = longitude

    @property
    def postal_code(self):
        """Gets the postal_code of this UpdateEndpointRequestEndpointRequestLocation.


        :return: The postal_code of this UpdateEndpointRequestEndpointRequestLocation.
        :rtype: str
        """
        return self._postal_code

    @postal_code.setter
    def postal_code(self, postal_code):
        """Sets the postal_code of this UpdateEndpointRequestEndpointRequestLocation.


        :param postal_code: The postal_code of this UpdateEndpointRequestEndpointRequestLocation.
        :type postal_code: str
        """

        self._postal_code = postal_code

    @property
    def region(self):
        """Gets the region of this UpdateEndpointRequestEndpointRequestLocation.


        :return: The region of this UpdateEndpointRequestEndpointRequestLocation.
        :rtype: str
        """
        return self._region

    @region.setter
    def region(self, region):
        """Sets the region of this UpdateEndpointRequestEndpointRequestLocation.


        :param region: The region of this UpdateEndpointRequestEndpointRequestLocation.
        :type region: str
        """

        self._region = region
