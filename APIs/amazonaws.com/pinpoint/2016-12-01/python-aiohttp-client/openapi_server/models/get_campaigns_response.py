# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.campaigns_response import CampaignsResponse
from openapi_server import util


class GetCampaignsResponse(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, campaigns_response: CampaignsResponse=None):
        """GetCampaignsResponse - a model defined in OpenAPI

        :param campaigns_response: The campaigns_response of this GetCampaignsResponse.
        """
        self.openapi_types = {
            'campaigns_response': CampaignsResponse
        }

        self.attribute_map = {
            'campaigns_response': 'CampaignsResponse'
        }

        self._campaigns_response = campaigns_response

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GetCampaignsResponse':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The GetCampaignsResponse of this GetCampaignsResponse.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def campaigns_response(self):
        """Gets the campaigns_response of this GetCampaignsResponse.


        :return: The campaigns_response of this GetCampaignsResponse.
        :rtype: CampaignsResponse
        """
        return self._campaigns_response

    @campaigns_response.setter
    def campaigns_response(self, campaigns_response):
        """Sets the campaigns_response of this GetCampaignsResponse.


        :param campaigns_response: The campaigns_response of this GetCampaignsResponse.
        :type campaigns_response: CampaignsResponse
        """
        if campaigns_response is None:
            raise ValueError("Invalid value for `campaigns_response`, must not be `None`")

        self._campaigns_response = campaigns_response
