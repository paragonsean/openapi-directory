# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class EmailChannelResponse(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, application_id: str=None, configuration_set: str=None, creation_date: str=None, enabled: bool=None, from_address: str=None, has_credential: bool=None, id: str=None, identity: str=None, is_archived: bool=None, last_modified_by: str=None, last_modified_date: str=None, messages_per_second: int=None, platform: str=None, role_arn: str=None, version: int=None):
        """EmailChannelResponse - a model defined in OpenAPI

        :param application_id: The application_id of this EmailChannelResponse.
        :param configuration_set: The configuration_set of this EmailChannelResponse.
        :param creation_date: The creation_date of this EmailChannelResponse.
        :param enabled: The enabled of this EmailChannelResponse.
        :param from_address: The from_address of this EmailChannelResponse.
        :param has_credential: The has_credential of this EmailChannelResponse.
        :param id: The id of this EmailChannelResponse.
        :param identity: The identity of this EmailChannelResponse.
        :param is_archived: The is_archived of this EmailChannelResponse.
        :param last_modified_by: The last_modified_by of this EmailChannelResponse.
        :param last_modified_date: The last_modified_date of this EmailChannelResponse.
        :param messages_per_second: The messages_per_second of this EmailChannelResponse.
        :param platform: The platform of this EmailChannelResponse.
        :param role_arn: The role_arn of this EmailChannelResponse.
        :param version: The version of this EmailChannelResponse.
        """
        self.openapi_types = {
            'application_id': str,
            'configuration_set': str,
            'creation_date': str,
            'enabled': bool,
            'from_address': str,
            'has_credential': bool,
            'id': str,
            'identity': str,
            'is_archived': bool,
            'last_modified_by': str,
            'last_modified_date': str,
            'messages_per_second': int,
            'platform': str,
            'role_arn': str,
            'version': int
        }

        self.attribute_map = {
            'application_id': 'ApplicationId',
            'configuration_set': 'ConfigurationSet',
            'creation_date': 'CreationDate',
            'enabled': 'Enabled',
            'from_address': 'FromAddress',
            'has_credential': 'HasCredential',
            'id': 'Id',
            'identity': 'Identity',
            'is_archived': 'IsArchived',
            'last_modified_by': 'LastModifiedBy',
            'last_modified_date': 'LastModifiedDate',
            'messages_per_second': 'MessagesPerSecond',
            'platform': 'Platform',
            'role_arn': 'RoleArn',
            'version': 'Version'
        }

        self._application_id = application_id
        self._configuration_set = configuration_set
        self._creation_date = creation_date
        self._enabled = enabled
        self._from_address = from_address
        self._has_credential = has_credential
        self._id = id
        self._identity = identity
        self._is_archived = is_archived
        self._last_modified_by = last_modified_by
        self._last_modified_date = last_modified_date
        self._messages_per_second = messages_per_second
        self._platform = platform
        self._role_arn = role_arn
        self._version = version

    @classmethod
    def from_dict(cls, dikt: dict) -> 'EmailChannelResponse':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The EmailChannelResponse of this EmailChannelResponse.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def application_id(self):
        """Gets the application_id of this EmailChannelResponse.


        :return: The application_id of this EmailChannelResponse.
        :rtype: str
        """
        return self._application_id

    @application_id.setter
    def application_id(self, application_id):
        """Sets the application_id of this EmailChannelResponse.


        :param application_id: The application_id of this EmailChannelResponse.
        :type application_id: str
        """

        self._application_id = application_id

    @property
    def configuration_set(self):
        """Gets the configuration_set of this EmailChannelResponse.


        :return: The configuration_set of this EmailChannelResponse.
        :rtype: str
        """
        return self._configuration_set

    @configuration_set.setter
    def configuration_set(self, configuration_set):
        """Sets the configuration_set of this EmailChannelResponse.


        :param configuration_set: The configuration_set of this EmailChannelResponse.
        :type configuration_set: str
        """

        self._configuration_set = configuration_set

    @property
    def creation_date(self):
        """Gets the creation_date of this EmailChannelResponse.


        :return: The creation_date of this EmailChannelResponse.
        :rtype: str
        """
        return self._creation_date

    @creation_date.setter
    def creation_date(self, creation_date):
        """Sets the creation_date of this EmailChannelResponse.


        :param creation_date: The creation_date of this EmailChannelResponse.
        :type creation_date: str
        """

        self._creation_date = creation_date

    @property
    def enabled(self):
        """Gets the enabled of this EmailChannelResponse.


        :return: The enabled of this EmailChannelResponse.
        :rtype: bool
        """
        return self._enabled

    @enabled.setter
    def enabled(self, enabled):
        """Sets the enabled of this EmailChannelResponse.


        :param enabled: The enabled of this EmailChannelResponse.
        :type enabled: bool
        """

        self._enabled = enabled

    @property
    def from_address(self):
        """Gets the from_address of this EmailChannelResponse.


        :return: The from_address of this EmailChannelResponse.
        :rtype: str
        """
        return self._from_address

    @from_address.setter
    def from_address(self, from_address):
        """Sets the from_address of this EmailChannelResponse.


        :param from_address: The from_address of this EmailChannelResponse.
        :type from_address: str
        """

        self._from_address = from_address

    @property
    def has_credential(self):
        """Gets the has_credential of this EmailChannelResponse.


        :return: The has_credential of this EmailChannelResponse.
        :rtype: bool
        """
        return self._has_credential

    @has_credential.setter
    def has_credential(self, has_credential):
        """Sets the has_credential of this EmailChannelResponse.


        :param has_credential: The has_credential of this EmailChannelResponse.
        :type has_credential: bool
        """

        self._has_credential = has_credential

    @property
    def id(self):
        """Gets the id of this EmailChannelResponse.


        :return: The id of this EmailChannelResponse.
        :rtype: str
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this EmailChannelResponse.


        :param id: The id of this EmailChannelResponse.
        :type id: str
        """

        self._id = id

    @property
    def identity(self):
        """Gets the identity of this EmailChannelResponse.


        :return: The identity of this EmailChannelResponse.
        :rtype: str
        """
        return self._identity

    @identity.setter
    def identity(self, identity):
        """Sets the identity of this EmailChannelResponse.


        :param identity: The identity of this EmailChannelResponse.
        :type identity: str
        """

        self._identity = identity

    @property
    def is_archived(self):
        """Gets the is_archived of this EmailChannelResponse.


        :return: The is_archived of this EmailChannelResponse.
        :rtype: bool
        """
        return self._is_archived

    @is_archived.setter
    def is_archived(self, is_archived):
        """Sets the is_archived of this EmailChannelResponse.


        :param is_archived: The is_archived of this EmailChannelResponse.
        :type is_archived: bool
        """

        self._is_archived = is_archived

    @property
    def last_modified_by(self):
        """Gets the last_modified_by of this EmailChannelResponse.


        :return: The last_modified_by of this EmailChannelResponse.
        :rtype: str
        """
        return self._last_modified_by

    @last_modified_by.setter
    def last_modified_by(self, last_modified_by):
        """Sets the last_modified_by of this EmailChannelResponse.


        :param last_modified_by: The last_modified_by of this EmailChannelResponse.
        :type last_modified_by: str
        """

        self._last_modified_by = last_modified_by

    @property
    def last_modified_date(self):
        """Gets the last_modified_date of this EmailChannelResponse.


        :return: The last_modified_date of this EmailChannelResponse.
        :rtype: str
        """
        return self._last_modified_date

    @last_modified_date.setter
    def last_modified_date(self, last_modified_date):
        """Sets the last_modified_date of this EmailChannelResponse.


        :param last_modified_date: The last_modified_date of this EmailChannelResponse.
        :type last_modified_date: str
        """

        self._last_modified_date = last_modified_date

    @property
    def messages_per_second(self):
        """Gets the messages_per_second of this EmailChannelResponse.


        :return: The messages_per_second of this EmailChannelResponse.
        :rtype: int
        """
        return self._messages_per_second

    @messages_per_second.setter
    def messages_per_second(self, messages_per_second):
        """Sets the messages_per_second of this EmailChannelResponse.


        :param messages_per_second: The messages_per_second of this EmailChannelResponse.
        :type messages_per_second: int
        """

        self._messages_per_second = messages_per_second

    @property
    def platform(self):
        """Gets the platform of this EmailChannelResponse.


        :return: The platform of this EmailChannelResponse.
        :rtype: str
        """
        return self._platform

    @platform.setter
    def platform(self, platform):
        """Sets the platform of this EmailChannelResponse.


        :param platform: The platform of this EmailChannelResponse.
        :type platform: str
        """
        if platform is None:
            raise ValueError("Invalid value for `platform`, must not be `None`")

        self._platform = platform

    @property
    def role_arn(self):
        """Gets the role_arn of this EmailChannelResponse.


        :return: The role_arn of this EmailChannelResponse.
        :rtype: str
        """
        return self._role_arn

    @role_arn.setter
    def role_arn(self, role_arn):
        """Sets the role_arn of this EmailChannelResponse.


        :param role_arn: The role_arn of this EmailChannelResponse.
        :type role_arn: str
        """

        self._role_arn = role_arn

    @property
    def version(self):
        """Gets the version of this EmailChannelResponse.


        :return: The version of this EmailChannelResponse.
        :rtype: int
        """
        return self._version

    @version.setter
    def version(self, version):
        """Sets the version of this EmailChannelResponse.


        :param version: The version of this EmailChannelResponse.
        :type version: int
        """

        self._version = version
