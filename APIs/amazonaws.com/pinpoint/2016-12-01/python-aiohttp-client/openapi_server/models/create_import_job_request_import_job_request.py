# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.format import Format
from openapi_server import util


class CreateImportJobRequestImportJobRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, define_segment: bool=None, external_id: str=None, format: Format=None, register_endpoints: bool=None, role_arn: str=None, s3_url: str=None, segment_id: str=None, segment_name: str=None):
        """CreateImportJobRequestImportJobRequest - a model defined in OpenAPI

        :param define_segment: The define_segment of this CreateImportJobRequestImportJobRequest.
        :param external_id: The external_id of this CreateImportJobRequestImportJobRequest.
        :param format: The format of this CreateImportJobRequestImportJobRequest.
        :param register_endpoints: The register_endpoints of this CreateImportJobRequestImportJobRequest.
        :param role_arn: The role_arn of this CreateImportJobRequestImportJobRequest.
        :param s3_url: The s3_url of this CreateImportJobRequestImportJobRequest.
        :param segment_id: The segment_id of this CreateImportJobRequestImportJobRequest.
        :param segment_name: The segment_name of this CreateImportJobRequestImportJobRequest.
        """
        self.openapi_types = {
            'define_segment': bool,
            'external_id': str,
            'format': Format,
            'register_endpoints': bool,
            'role_arn': str,
            's3_url': str,
            'segment_id': str,
            'segment_name': str
        }

        self.attribute_map = {
            'define_segment': 'DefineSegment',
            'external_id': 'ExternalId',
            'format': 'Format',
            'register_endpoints': 'RegisterEndpoints',
            'role_arn': 'RoleArn',
            's3_url': 'S3Url',
            'segment_id': 'SegmentId',
            'segment_name': 'SegmentName'
        }

        self._define_segment = define_segment
        self._external_id = external_id
        self._format = format
        self._register_endpoints = register_endpoints
        self._role_arn = role_arn
        self._s3_url = s3_url
        self._segment_id = segment_id
        self._segment_name = segment_name

    @classmethod
    def from_dict(cls, dikt: dict) -> 'CreateImportJobRequestImportJobRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The CreateImportJob_request_ImportJobRequest of this CreateImportJobRequestImportJobRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def define_segment(self):
        """Gets the define_segment of this CreateImportJobRequestImportJobRequest.


        :return: The define_segment of this CreateImportJobRequestImportJobRequest.
        :rtype: bool
        """
        return self._define_segment

    @define_segment.setter
    def define_segment(self, define_segment):
        """Sets the define_segment of this CreateImportJobRequestImportJobRequest.


        :param define_segment: The define_segment of this CreateImportJobRequestImportJobRequest.
        :type define_segment: bool
        """

        self._define_segment = define_segment

    @property
    def external_id(self):
        """Gets the external_id of this CreateImportJobRequestImportJobRequest.


        :return: The external_id of this CreateImportJobRequestImportJobRequest.
        :rtype: str
        """
        return self._external_id

    @external_id.setter
    def external_id(self, external_id):
        """Sets the external_id of this CreateImportJobRequestImportJobRequest.


        :param external_id: The external_id of this CreateImportJobRequestImportJobRequest.
        :type external_id: str
        """

        self._external_id = external_id

    @property
    def format(self):
        """Gets the format of this CreateImportJobRequestImportJobRequest.


        :return: The format of this CreateImportJobRequestImportJobRequest.
        :rtype: Format
        """
        return self._format

    @format.setter
    def format(self, format):
        """Sets the format of this CreateImportJobRequestImportJobRequest.


        :param format: The format of this CreateImportJobRequestImportJobRequest.
        :type format: Format
        """

        self._format = format

    @property
    def register_endpoints(self):
        """Gets the register_endpoints of this CreateImportJobRequestImportJobRequest.


        :return: The register_endpoints of this CreateImportJobRequestImportJobRequest.
        :rtype: bool
        """
        return self._register_endpoints

    @register_endpoints.setter
    def register_endpoints(self, register_endpoints):
        """Sets the register_endpoints of this CreateImportJobRequestImportJobRequest.


        :param register_endpoints: The register_endpoints of this CreateImportJobRequestImportJobRequest.
        :type register_endpoints: bool
        """

        self._register_endpoints = register_endpoints

    @property
    def role_arn(self):
        """Gets the role_arn of this CreateImportJobRequestImportJobRequest.


        :return: The role_arn of this CreateImportJobRequestImportJobRequest.
        :rtype: str
        """
        return self._role_arn

    @role_arn.setter
    def role_arn(self, role_arn):
        """Sets the role_arn of this CreateImportJobRequestImportJobRequest.


        :param role_arn: The role_arn of this CreateImportJobRequestImportJobRequest.
        :type role_arn: str
        """

        self._role_arn = role_arn

    @property
    def s3_url(self):
        """Gets the s3_url of this CreateImportJobRequestImportJobRequest.


        :return: The s3_url of this CreateImportJobRequestImportJobRequest.
        :rtype: str
        """
        return self._s3_url

    @s3_url.setter
    def s3_url(self, s3_url):
        """Sets the s3_url of this CreateImportJobRequestImportJobRequest.


        :param s3_url: The s3_url of this CreateImportJobRequestImportJobRequest.
        :type s3_url: str
        """

        self._s3_url = s3_url

    @property
    def segment_id(self):
        """Gets the segment_id of this CreateImportJobRequestImportJobRequest.


        :return: The segment_id of this CreateImportJobRequestImportJobRequest.
        :rtype: str
        """
        return self._segment_id

    @segment_id.setter
    def segment_id(self, segment_id):
        """Sets the segment_id of this CreateImportJobRequestImportJobRequest.


        :param segment_id: The segment_id of this CreateImportJobRequestImportJobRequest.
        :type segment_id: str
        """

        self._segment_id = segment_id

    @property
    def segment_name(self):
        """Gets the segment_name of this CreateImportJobRequestImportJobRequest.


        :return: The segment_name of this CreateImportJobRequestImportJobRequest.
        :rtype: str
        """
        return self._segment_name

    @segment_name.setter
    def segment_name(self, segment_name):
        """Sets the segment_name of this CreateImportJobRequestImportJobRequest.


        :param segment_name: The segment_name of this CreateImportJobRequestImportJobRequest.
        :type segment_name: str
        """

        self._segment_name = segment_name
