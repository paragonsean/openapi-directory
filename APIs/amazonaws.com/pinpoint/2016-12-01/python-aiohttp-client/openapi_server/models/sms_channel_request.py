# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class SMSChannelRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, enabled: bool=None, sender_id: str=None, short_code: str=None):
        """SMSChannelRequest - a model defined in OpenAPI

        :param enabled: The enabled of this SMSChannelRequest.
        :param sender_id: The sender_id of this SMSChannelRequest.
        :param short_code: The short_code of this SMSChannelRequest.
        """
        self.openapi_types = {
            'enabled': bool,
            'sender_id': str,
            'short_code': str
        }

        self.attribute_map = {
            'enabled': 'Enabled',
            'sender_id': 'SenderId',
            'short_code': 'ShortCode'
        }

        self._enabled = enabled
        self._sender_id = sender_id
        self._short_code = short_code

    @classmethod
    def from_dict(cls, dikt: dict) -> 'SMSChannelRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The SMSChannelRequest of this SMSChannelRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def enabled(self):
        """Gets the enabled of this SMSChannelRequest.


        :return: The enabled of this SMSChannelRequest.
        :rtype: bool
        """
        return self._enabled

    @enabled.setter
    def enabled(self, enabled):
        """Sets the enabled of this SMSChannelRequest.


        :param enabled: The enabled of this SMSChannelRequest.
        :type enabled: bool
        """

        self._enabled = enabled

    @property
    def sender_id(self):
        """Gets the sender_id of this SMSChannelRequest.


        :return: The sender_id of this SMSChannelRequest.
        :rtype: str
        """
        return self._sender_id

    @sender_id.setter
    def sender_id(self, sender_id):
        """Sets the sender_id of this SMSChannelRequest.


        :param sender_id: The sender_id of this SMSChannelRequest.
        :type sender_id: str
        """

        self._sender_id = sender_id

    @property
    def short_code(self):
        """Gets the short_code of this SMSChannelRequest.


        :return: The short_code of this SMSChannelRequest.
        :rtype: str
        """
        return self._short_code

    @short_code.setter
    def short_code(self, short_code):
        """Sets the short_code of this SMSChannelRequest.


        :param short_code: The short_code of this SMSChannelRequest.
        :type short_code: str
        """

        self._short_code = short_code
