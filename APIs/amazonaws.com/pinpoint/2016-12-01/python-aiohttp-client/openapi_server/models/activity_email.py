# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.email_message_activity_message_config import EmailMessageActivityMessageConfig
from openapi_server import util


class ActivityEMAIL(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, message_config: EmailMessageActivityMessageConfig=None, next_activity: str=None, template_name: str=None, template_version: str=None):
        """ActivityEMAIL - a model defined in OpenAPI

        :param message_config: The message_config of this ActivityEMAIL.
        :param next_activity: The next_activity of this ActivityEMAIL.
        :param template_name: The template_name of this ActivityEMAIL.
        :param template_version: The template_version of this ActivityEMAIL.
        """
        self.openapi_types = {
            'message_config': EmailMessageActivityMessageConfig,
            'next_activity': str,
            'template_name': str,
            'template_version': str
        }

        self.attribute_map = {
            'message_config': 'MessageConfig',
            'next_activity': 'NextActivity',
            'template_name': 'TemplateName',
            'template_version': 'TemplateVersion'
        }

        self._message_config = message_config
        self._next_activity = next_activity
        self._template_name = template_name
        self._template_version = template_version

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ActivityEMAIL':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Activity_EMAIL of this ActivityEMAIL.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def message_config(self):
        """Gets the message_config of this ActivityEMAIL.


        :return: The message_config of this ActivityEMAIL.
        :rtype: EmailMessageActivityMessageConfig
        """
        return self._message_config

    @message_config.setter
    def message_config(self, message_config):
        """Sets the message_config of this ActivityEMAIL.


        :param message_config: The message_config of this ActivityEMAIL.
        :type message_config: EmailMessageActivityMessageConfig
        """

        self._message_config = message_config

    @property
    def next_activity(self):
        """Gets the next_activity of this ActivityEMAIL.


        :return: The next_activity of this ActivityEMAIL.
        :rtype: str
        """
        return self._next_activity

    @next_activity.setter
    def next_activity(self, next_activity):
        """Sets the next_activity of this ActivityEMAIL.


        :param next_activity: The next_activity of this ActivityEMAIL.
        :type next_activity: str
        """

        self._next_activity = next_activity

    @property
    def template_name(self):
        """Gets the template_name of this ActivityEMAIL.


        :return: The template_name of this ActivityEMAIL.
        :rtype: str
        """
        return self._template_name

    @template_name.setter
    def template_name(self, template_name):
        """Sets the template_name of this ActivityEMAIL.


        :param template_name: The template_name of this ActivityEMAIL.
        :type template_name: str
        """

        self._template_name = template_name

    @property
    def template_version(self):
        """Gets the template_version of this ActivityEMAIL.


        :return: The template_version of this ActivityEMAIL.
        :rtype: str
        """
        return self._template_version

    @template_version.setter
    def template_version(self, template_version):
        """Sets the template_version of this ActivityEMAIL.


        :param template_version: The template_version of this ActivityEMAIL.
        :type template_version: str
        """

        self._template_version = template_version
