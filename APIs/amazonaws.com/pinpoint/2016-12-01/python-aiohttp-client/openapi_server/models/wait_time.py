# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class WaitTime(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, wait_for: str=None, wait_until: str=None):
        """WaitTime - a model defined in OpenAPI

        :param wait_for: The wait_for of this WaitTime.
        :param wait_until: The wait_until of this WaitTime.
        """
        self.openapi_types = {
            'wait_for': str,
            'wait_until': str
        }

        self.attribute_map = {
            'wait_for': 'WaitFor',
            'wait_until': 'WaitUntil'
        }

        self._wait_for = wait_for
        self._wait_until = wait_until

    @classmethod
    def from_dict(cls, dikt: dict) -> 'WaitTime':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The WaitTime of this WaitTime.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def wait_for(self):
        """Gets the wait_for of this WaitTime.


        :return: The wait_for of this WaitTime.
        :rtype: str
        """
        return self._wait_for

    @wait_for.setter
    def wait_for(self, wait_for):
        """Sets the wait_for of this WaitTime.


        :param wait_for: The wait_for of this WaitTime.
        :type wait_for: str
        """

        self._wait_for = wait_for

    @property
    def wait_until(self):
        """Gets the wait_until of this WaitTime.


        :return: The wait_until of this WaitTime.
        :rtype: str
        """
        return self._wait_until

    @wait_until.setter
    def wait_until(self, wait_until):
        """Sets the wait_until of this WaitTime.


        :param wait_until: The wait_until of this WaitTime.
        :type wait_until: str
        """

        self._wait_until = wait_until
