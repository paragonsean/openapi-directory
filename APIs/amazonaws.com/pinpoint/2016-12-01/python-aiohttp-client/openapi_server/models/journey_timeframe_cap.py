# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class JourneyTimeframeCap(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, cap: int=None, days: int=None):
        """JourneyTimeframeCap - a model defined in OpenAPI

        :param cap: The cap of this JourneyTimeframeCap.
        :param days: The days of this JourneyTimeframeCap.
        """
        self.openapi_types = {
            'cap': int,
            'days': int
        }

        self.attribute_map = {
            'cap': 'Cap',
            'days': 'Days'
        }

        self._cap = cap
        self._days = days

    @classmethod
    def from_dict(cls, dikt: dict) -> 'JourneyTimeframeCap':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The JourneyTimeframeCap of this JourneyTimeframeCap.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def cap(self):
        """Gets the cap of this JourneyTimeframeCap.


        :return: The cap of this JourneyTimeframeCap.
        :rtype: int
        """
        return self._cap

    @cap.setter
    def cap(self, cap):
        """Sets the cap of this JourneyTimeframeCap.


        :param cap: The cap of this JourneyTimeframeCap.
        :type cap: int
        """

        self._cap = cap

    @property
    def days(self):
        """Gets the days of this JourneyTimeframeCap.


        :return: The days of this JourneyTimeframeCap.
        :rtype: int
        """
        return self._days

    @days.setter
    def days(self, days):
        """Sets the days of this JourneyTimeframeCap.


        :param days: The days of this JourneyTimeframeCap.
        :type days: int
        """

        self._days = days
