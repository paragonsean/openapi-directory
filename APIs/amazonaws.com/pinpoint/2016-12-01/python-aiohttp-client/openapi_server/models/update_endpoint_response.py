# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.message_body import MessageBody
from openapi_server import util


class UpdateEndpointResponse(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, message_body: MessageBody=None):
        """UpdateEndpointResponse - a model defined in OpenAPI

        :param message_body: The message_body of this UpdateEndpointResponse.
        """
        self.openapi_types = {
            'message_body': MessageBody
        }

        self.attribute_map = {
            'message_body': 'MessageBody'
        }

        self._message_body = message_body

    @classmethod
    def from_dict(cls, dikt: dict) -> 'UpdateEndpointResponse':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The UpdateEndpointResponse of this UpdateEndpointResponse.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def message_body(self):
        """Gets the message_body of this UpdateEndpointResponse.


        :return: The message_body of this UpdateEndpointResponse.
        :rtype: MessageBody
        """
        return self._message_body

    @message_body.setter
    def message_body(self, message_body):
        """Sets the message_body of this UpdateEndpointResponse.


        :param message_body: The message_body of this UpdateEndpointResponse.
        :type message_body: MessageBody
        """
        if message_body is None:
            raise ValueError("Invalid value for `message_body`, must not be `None`")

        self._message_body = message_body
