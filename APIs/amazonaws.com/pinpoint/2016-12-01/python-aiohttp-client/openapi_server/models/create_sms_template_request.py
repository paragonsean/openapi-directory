# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.sms_template_request import SMSTemplateRequest
from openapi_server import util


class CreateSmsTemplateRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, sms_template_request: SMSTemplateRequest=None):
        """CreateSmsTemplateRequest - a model defined in OpenAPI

        :param sms_template_request: The sms_template_request of this CreateSmsTemplateRequest.
        """
        self.openapi_types = {
            'sms_template_request': SMSTemplateRequest
        }

        self.attribute_map = {
            'sms_template_request': 'SMSTemplateRequest'
        }

        self._sms_template_request = sms_template_request

    @classmethod
    def from_dict(cls, dikt: dict) -> 'CreateSmsTemplateRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The CreateSmsTemplateRequest of this CreateSmsTemplateRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def sms_template_request(self):
        """Gets the sms_template_request of this CreateSmsTemplateRequest.


        :return: The sms_template_request of this CreateSmsTemplateRequest.
        :rtype: SMSTemplateRequest
        """
        return self._sms_template_request

    @sms_template_request.setter
    def sms_template_request(self, sms_template_request):
        """Sets the sms_template_request of this CreateSmsTemplateRequest.


        :param sms_template_request: The sms_template_request of this CreateSmsTemplateRequest.
        :type sms_template_request: SMSTemplateRequest
        """
        if sms_template_request is None:
            raise ValueError("Invalid value for `sms_template_request`, must not be `None`")

        self._sms_template_request = sms_template_request
