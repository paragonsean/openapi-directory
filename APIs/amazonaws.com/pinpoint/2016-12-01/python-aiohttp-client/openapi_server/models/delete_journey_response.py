# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.journey_response import JourneyResponse
from openapi_server import util


class DeleteJourneyResponse(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, journey_response: JourneyResponse=None):
        """DeleteJourneyResponse - a model defined in OpenAPI

        :param journey_response: The journey_response of this DeleteJourneyResponse.
        """
        self.openapi_types = {
            'journey_response': JourneyResponse
        }

        self.attribute_map = {
            'journey_response': 'JourneyResponse'
        }

        self._journey_response = journey_response

    @classmethod
    def from_dict(cls, dikt: dict) -> 'DeleteJourneyResponse':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The DeleteJourneyResponse of this DeleteJourneyResponse.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def journey_response(self):
        """Gets the journey_response of this DeleteJourneyResponse.


        :return: The journey_response of this DeleteJourneyResponse.
        :rtype: JourneyResponse
        """
        return self._journey_response

    @journey_response.setter
    def journey_response(self, journey_response):
        """Sets the journey_response of this DeleteJourneyResponse.


        :param journey_response: The journey_response of this DeleteJourneyResponse.
        :type journey_response: JourneyResponse
        """
        if journey_response is None:
            raise ValueError("Invalid value for `journey_response`, must not be `None`")

        self._journey_response = journey_response
