# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.email_channel_response import EmailChannelResponse
from openapi_server import util


class DeleteEmailChannelResponse(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, email_channel_response: EmailChannelResponse=None):
        """DeleteEmailChannelResponse - a model defined in OpenAPI

        :param email_channel_response: The email_channel_response of this DeleteEmailChannelResponse.
        """
        self.openapi_types = {
            'email_channel_response': EmailChannelResponse
        }

        self.attribute_map = {
            'email_channel_response': 'EmailChannelResponse'
        }

        self._email_channel_response = email_channel_response

    @classmethod
    def from_dict(cls, dikt: dict) -> 'DeleteEmailChannelResponse':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The DeleteEmailChannelResponse of this DeleteEmailChannelResponse.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def email_channel_response(self):
        """Gets the email_channel_response of this DeleteEmailChannelResponse.


        :return: The email_channel_response of this DeleteEmailChannelResponse.
        :rtype: EmailChannelResponse
        """
        return self._email_channel_response

    @email_channel_response.setter
    def email_channel_response(self, email_channel_response):
        """Sets the email_channel_response of this DeleteEmailChannelResponse.


        :param email_channel_response: The email_channel_response of this DeleteEmailChannelResponse.
        :type email_channel_response: EmailChannelResponse
        """
        if email_channel_response is None:
            raise ValueError("Invalid value for `email_channel_response`, must not be `None`")

        self._email_channel_response = email_channel_response
