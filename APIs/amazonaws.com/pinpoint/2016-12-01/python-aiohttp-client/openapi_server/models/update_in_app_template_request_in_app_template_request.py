# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.layout import Layout
from openapi_server import util


class UpdateInAppTemplateRequestInAppTemplateRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, content: List=None, custom_config: Dict=None, layout: Layout=None, tags: Dict=None, template_description: str=None):
        """UpdateInAppTemplateRequestInAppTemplateRequest - a model defined in OpenAPI

        :param content: The content of this UpdateInAppTemplateRequestInAppTemplateRequest.
        :param custom_config: The custom_config of this UpdateInAppTemplateRequestInAppTemplateRequest.
        :param layout: The layout of this UpdateInAppTemplateRequestInAppTemplateRequest.
        :param tags: The tags of this UpdateInAppTemplateRequestInAppTemplateRequest.
        :param template_description: The template_description of this UpdateInAppTemplateRequestInAppTemplateRequest.
        """
        self.openapi_types = {
            'content': List,
            'custom_config': Dict,
            'layout': Layout,
            'tags': Dict,
            'template_description': str
        }

        self.attribute_map = {
            'content': 'Content',
            'custom_config': 'CustomConfig',
            'layout': 'Layout',
            'tags': 'tags',
            'template_description': 'TemplateDescription'
        }

        self._content = content
        self._custom_config = custom_config
        self._layout = layout
        self._tags = tags
        self._template_description = template_description

    @classmethod
    def from_dict(cls, dikt: dict) -> 'UpdateInAppTemplateRequestInAppTemplateRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The UpdateInAppTemplate_request_InAppTemplateRequest of this UpdateInAppTemplateRequestInAppTemplateRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def content(self):
        """Gets the content of this UpdateInAppTemplateRequestInAppTemplateRequest.


        :return: The content of this UpdateInAppTemplateRequestInAppTemplateRequest.
        :rtype: List
        """
        return self._content

    @content.setter
    def content(self, content):
        """Sets the content of this UpdateInAppTemplateRequestInAppTemplateRequest.


        :param content: The content of this UpdateInAppTemplateRequestInAppTemplateRequest.
        :type content: List
        """

        self._content = content

    @property
    def custom_config(self):
        """Gets the custom_config of this UpdateInAppTemplateRequestInAppTemplateRequest.


        :return: The custom_config of this UpdateInAppTemplateRequestInAppTemplateRequest.
        :rtype: Dict
        """
        return self._custom_config

    @custom_config.setter
    def custom_config(self, custom_config):
        """Sets the custom_config of this UpdateInAppTemplateRequestInAppTemplateRequest.


        :param custom_config: The custom_config of this UpdateInAppTemplateRequestInAppTemplateRequest.
        :type custom_config: Dict
        """

        self._custom_config = custom_config

    @property
    def layout(self):
        """Gets the layout of this UpdateInAppTemplateRequestInAppTemplateRequest.


        :return: The layout of this UpdateInAppTemplateRequestInAppTemplateRequest.
        :rtype: Layout
        """
        return self._layout

    @layout.setter
    def layout(self, layout):
        """Sets the layout of this UpdateInAppTemplateRequestInAppTemplateRequest.


        :param layout: The layout of this UpdateInAppTemplateRequestInAppTemplateRequest.
        :type layout: Layout
        """

        self._layout = layout

    @property
    def tags(self):
        """Gets the tags of this UpdateInAppTemplateRequestInAppTemplateRequest.


        :return: The tags of this UpdateInAppTemplateRequestInAppTemplateRequest.
        :rtype: Dict
        """
        return self._tags

    @tags.setter
    def tags(self, tags):
        """Sets the tags of this UpdateInAppTemplateRequestInAppTemplateRequest.


        :param tags: The tags of this UpdateInAppTemplateRequestInAppTemplateRequest.
        :type tags: Dict
        """

        self._tags = tags

    @property
    def template_description(self):
        """Gets the template_description of this UpdateInAppTemplateRequestInAppTemplateRequest.


        :return: The template_description of this UpdateInAppTemplateRequestInAppTemplateRequest.
        :rtype: str
        """
        return self._template_description

    @template_description.setter
    def template_description(self, template_description):
        """Sets the template_description of this UpdateInAppTemplateRequestInAppTemplateRequest.


        :param template_description: The template_description of this UpdateInAppTemplateRequestInAppTemplateRequest.
        :type template_description: str
        """

        self._template_description = template_description
