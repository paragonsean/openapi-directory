/*
 * Amazon Pinpoint
 * Doc Engage API - Amazon Pinpoint API
 *
 * The version of the OpenAPI document: 2016-12-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;
import java.util.Map;
import org.openapitools.client.model.ChannelType;
import org.openapitools.client.model.EndpointResponseUser;
import org.openapitools.client.model.UpdateEndpointRequestEndpointRequestDemographic;
import org.openapitools.client.model.UpdateEndpointRequestEndpointRequestLocation;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * Specifies the properties and attributes of an endpoint that&#39;s associated with an event.
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T12:09:25.655112-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class PublicEndpoint {
  public static final String SERIALIZED_NAME_ADDRESS = "Address";
  @SerializedName(SERIALIZED_NAME_ADDRESS)
  private String address;

  public static final String SERIALIZED_NAME_ATTRIBUTES = "Attributes";
  @SerializedName(SERIALIZED_NAME_ATTRIBUTES)
  private Map attributes;

  public static final String SERIALIZED_NAME_CHANNEL_TYPE = "ChannelType";
  @SerializedName(SERIALIZED_NAME_CHANNEL_TYPE)
  private ChannelType channelType;

  public static final String SERIALIZED_NAME_DEMOGRAPHIC = "Demographic";
  @SerializedName(SERIALIZED_NAME_DEMOGRAPHIC)
  private UpdateEndpointRequestEndpointRequestDemographic demographic;

  public static final String SERIALIZED_NAME_EFFECTIVE_DATE = "EffectiveDate";
  @SerializedName(SERIALIZED_NAME_EFFECTIVE_DATE)
  private String effectiveDate;

  public static final String SERIALIZED_NAME_ENDPOINT_STATUS = "EndpointStatus";
  @SerializedName(SERIALIZED_NAME_ENDPOINT_STATUS)
  private String endpointStatus;

  public static final String SERIALIZED_NAME_LOCATION = "Location";
  @SerializedName(SERIALIZED_NAME_LOCATION)
  private UpdateEndpointRequestEndpointRequestLocation location;

  public static final String SERIALIZED_NAME_METRICS = "Metrics";
  @SerializedName(SERIALIZED_NAME_METRICS)
  private Map metrics;

  public static final String SERIALIZED_NAME_OPT_OUT = "OptOut";
  @SerializedName(SERIALIZED_NAME_OPT_OUT)
  private String optOut;

  public static final String SERIALIZED_NAME_REQUEST_ID = "RequestId";
  @SerializedName(SERIALIZED_NAME_REQUEST_ID)
  private String requestId;

  public static final String SERIALIZED_NAME_USER = "User";
  @SerializedName(SERIALIZED_NAME_USER)
  private EndpointResponseUser user;

  public PublicEndpoint() {
  }

  public PublicEndpoint address(String address) {
    this.address = address;
    return this;
  }

  /**
   * Get address
   * @return address
   */
  @javax.annotation.Nullable
  public String getAddress() {
    return address;
  }

  public void setAddress(String address) {
    this.address = address;
  }


  public PublicEndpoint attributes(Map attributes) {
    this.attributes = attributes;
    return this;
  }

  /**
   * Get attributes
   * @return attributes
   */
  @javax.annotation.Nullable
  public Map getAttributes() {
    return attributes;
  }

  public void setAttributes(Map attributes) {
    this.attributes = attributes;
  }


  public PublicEndpoint channelType(ChannelType channelType) {
    this.channelType = channelType;
    return this;
  }

  /**
   * Get channelType
   * @return channelType
   */
  @javax.annotation.Nullable
  public ChannelType getChannelType() {
    return channelType;
  }

  public void setChannelType(ChannelType channelType) {
    this.channelType = channelType;
  }


  public PublicEndpoint demographic(UpdateEndpointRequestEndpointRequestDemographic demographic) {
    this.demographic = demographic;
    return this;
  }

  /**
   * Get demographic
   * @return demographic
   */
  @javax.annotation.Nullable
  public UpdateEndpointRequestEndpointRequestDemographic getDemographic() {
    return demographic;
  }

  public void setDemographic(UpdateEndpointRequestEndpointRequestDemographic demographic) {
    this.demographic = demographic;
  }


  public PublicEndpoint effectiveDate(String effectiveDate) {
    this.effectiveDate = effectiveDate;
    return this;
  }

  /**
   * Get effectiveDate
   * @return effectiveDate
   */
  @javax.annotation.Nullable
  public String getEffectiveDate() {
    return effectiveDate;
  }

  public void setEffectiveDate(String effectiveDate) {
    this.effectiveDate = effectiveDate;
  }


  public PublicEndpoint endpointStatus(String endpointStatus) {
    this.endpointStatus = endpointStatus;
    return this;
  }

  /**
   * Get endpointStatus
   * @return endpointStatus
   */
  @javax.annotation.Nullable
  public String getEndpointStatus() {
    return endpointStatus;
  }

  public void setEndpointStatus(String endpointStatus) {
    this.endpointStatus = endpointStatus;
  }


  public PublicEndpoint location(UpdateEndpointRequestEndpointRequestLocation location) {
    this.location = location;
    return this;
  }

  /**
   * Get location
   * @return location
   */
  @javax.annotation.Nullable
  public UpdateEndpointRequestEndpointRequestLocation getLocation() {
    return location;
  }

  public void setLocation(UpdateEndpointRequestEndpointRequestLocation location) {
    this.location = location;
  }


  public PublicEndpoint metrics(Map metrics) {
    this.metrics = metrics;
    return this;
  }

  /**
   * Get metrics
   * @return metrics
   */
  @javax.annotation.Nullable
  public Map getMetrics() {
    return metrics;
  }

  public void setMetrics(Map metrics) {
    this.metrics = metrics;
  }


  public PublicEndpoint optOut(String optOut) {
    this.optOut = optOut;
    return this;
  }

  /**
   * Get optOut
   * @return optOut
   */
  @javax.annotation.Nullable
  public String getOptOut() {
    return optOut;
  }

  public void setOptOut(String optOut) {
    this.optOut = optOut;
  }


  public PublicEndpoint requestId(String requestId) {
    this.requestId = requestId;
    return this;
  }

  /**
   * Get requestId
   * @return requestId
   */
  @javax.annotation.Nullable
  public String getRequestId() {
    return requestId;
  }

  public void setRequestId(String requestId) {
    this.requestId = requestId;
  }


  public PublicEndpoint user(EndpointResponseUser user) {
    this.user = user;
    return this;
  }

  /**
   * Get user
   * @return user
   */
  @javax.annotation.Nullable
  public EndpointResponseUser getUser() {
    return user;
  }

  public void setUser(EndpointResponseUser user) {
    this.user = user;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    PublicEndpoint publicEndpoint = (PublicEndpoint) o;
    return Objects.equals(this.address, publicEndpoint.address) &&
        Objects.equals(this.attributes, publicEndpoint.attributes) &&
        Objects.equals(this.channelType, publicEndpoint.channelType) &&
        Objects.equals(this.demographic, publicEndpoint.demographic) &&
        Objects.equals(this.effectiveDate, publicEndpoint.effectiveDate) &&
        Objects.equals(this.endpointStatus, publicEndpoint.endpointStatus) &&
        Objects.equals(this.location, publicEndpoint.location) &&
        Objects.equals(this.metrics, publicEndpoint.metrics) &&
        Objects.equals(this.optOut, publicEndpoint.optOut) &&
        Objects.equals(this.requestId, publicEndpoint.requestId) &&
        Objects.equals(this.user, publicEndpoint.user);
  }

  @Override
  public int hashCode() {
    return Objects.hash(address, attributes, channelType, demographic, effectiveDate, endpointStatus, location, metrics, optOut, requestId, user);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class PublicEndpoint {\n");
    sb.append("    address: ").append(toIndentedString(address)).append("\n");
    sb.append("    attributes: ").append(toIndentedString(attributes)).append("\n");
    sb.append("    channelType: ").append(toIndentedString(channelType)).append("\n");
    sb.append("    demographic: ").append(toIndentedString(demographic)).append("\n");
    sb.append("    effectiveDate: ").append(toIndentedString(effectiveDate)).append("\n");
    sb.append("    endpointStatus: ").append(toIndentedString(endpointStatus)).append("\n");
    sb.append("    location: ").append(toIndentedString(location)).append("\n");
    sb.append("    metrics: ").append(toIndentedString(metrics)).append("\n");
    sb.append("    optOut: ").append(toIndentedString(optOut)).append("\n");
    sb.append("    requestId: ").append(toIndentedString(requestId)).append("\n");
    sb.append("    user: ").append(toIndentedString(user)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("Address");
    openapiFields.add("Attributes");
    openapiFields.add("ChannelType");
    openapiFields.add("Demographic");
    openapiFields.add("EffectiveDate");
    openapiFields.add("EndpointStatus");
    openapiFields.add("Location");
    openapiFields.add("Metrics");
    openapiFields.add("OptOut");
    openapiFields.add("RequestId");
    openapiFields.add("User");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to PublicEndpoint
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!PublicEndpoint.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in PublicEndpoint is not found in the empty JSON string", PublicEndpoint.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!PublicEndpoint.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `PublicEndpoint` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // validate the optional field `Address`
      if (jsonObj.get("Address") != null && !jsonObj.get("Address").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("Address"));
      }
      // validate the optional field `Attributes`
      if (jsonObj.get("Attributes") != null && !jsonObj.get("Attributes").isJsonNull()) {
        Map.validateJsonElement(jsonObj.get("Attributes"));
      }
      // validate the optional field `ChannelType`
      if (jsonObj.get("ChannelType") != null && !jsonObj.get("ChannelType").isJsonNull()) {
        ChannelType.validateJsonElement(jsonObj.get("ChannelType"));
      }
      // validate the optional field `Demographic`
      if (jsonObj.get("Demographic") != null && !jsonObj.get("Demographic").isJsonNull()) {
        UpdateEndpointRequestEndpointRequestDemographic.validateJsonElement(jsonObj.get("Demographic"));
      }
      // validate the optional field `EffectiveDate`
      if (jsonObj.get("EffectiveDate") != null && !jsonObj.get("EffectiveDate").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("EffectiveDate"));
      }
      // validate the optional field `EndpointStatus`
      if (jsonObj.get("EndpointStatus") != null && !jsonObj.get("EndpointStatus").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("EndpointStatus"));
      }
      // validate the optional field `Location`
      if (jsonObj.get("Location") != null && !jsonObj.get("Location").isJsonNull()) {
        UpdateEndpointRequestEndpointRequestLocation.validateJsonElement(jsonObj.get("Location"));
      }
      // validate the optional field `Metrics`
      if (jsonObj.get("Metrics") != null && !jsonObj.get("Metrics").isJsonNull()) {
        Map.validateJsonElement(jsonObj.get("Metrics"));
      }
      // validate the optional field `OptOut`
      if (jsonObj.get("OptOut") != null && !jsonObj.get("OptOut").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("OptOut"));
      }
      // validate the optional field `RequestId`
      if (jsonObj.get("RequestId") != null && !jsonObj.get("RequestId").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("RequestId"));
      }
      // validate the optional field `User`
      if (jsonObj.get("User") != null && !jsonObj.get("User").isJsonNull()) {
        EndpointResponseUser.validateJsonElement(jsonObj.get("User"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!PublicEndpoint.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'PublicEndpoint' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<PublicEndpoint> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(PublicEndpoint.class));

       return (TypeAdapter<T>) new TypeAdapter<PublicEndpoint>() {
           @Override
           public void write(JsonWriter out, PublicEndpoint value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public PublicEndpoint read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of PublicEndpoint given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of PublicEndpoint
   * @throws IOException if the JSON string is invalid with respect to PublicEndpoint
   */
  public static PublicEndpoint fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, PublicEndpoint.class);
  }

  /**
   * Convert an instance of PublicEndpoint to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

