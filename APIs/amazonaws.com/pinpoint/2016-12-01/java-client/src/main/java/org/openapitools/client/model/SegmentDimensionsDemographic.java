/*
 * Amazon Pinpoint
 * Doc Engage API - Amazon Pinpoint API
 *
 * The version of the OpenAPI document: 2016-12-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;
import org.openapitools.client.model.SegmentDemographicsAppVersion;
import org.openapitools.client.model.SegmentDemographicsChannel;
import org.openapitools.client.model.SegmentDemographicsDeviceType;
import org.openapitools.client.model.SegmentDemographicsMake;
import org.openapitools.client.model.SegmentDemographicsModel;
import org.openapitools.client.model.SegmentDemographicsPlatform;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * SegmentDimensionsDemographic
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T12:09:25.655112-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class SegmentDimensionsDemographic {
  public static final String SERIALIZED_NAME_APP_VERSION = "AppVersion";
  @SerializedName(SERIALIZED_NAME_APP_VERSION)
  private SegmentDemographicsAppVersion appVersion;

  public static final String SERIALIZED_NAME_CHANNEL = "Channel";
  @SerializedName(SERIALIZED_NAME_CHANNEL)
  private SegmentDemographicsChannel channel;

  public static final String SERIALIZED_NAME_DEVICE_TYPE = "DeviceType";
  @SerializedName(SERIALIZED_NAME_DEVICE_TYPE)
  private SegmentDemographicsDeviceType deviceType;

  public static final String SERIALIZED_NAME_MAKE = "Make";
  @SerializedName(SERIALIZED_NAME_MAKE)
  private SegmentDemographicsMake make;

  public static final String SERIALIZED_NAME_MODEL = "Model";
  @SerializedName(SERIALIZED_NAME_MODEL)
  private SegmentDemographicsModel model;

  public static final String SERIALIZED_NAME_PLATFORM = "Platform";
  @SerializedName(SERIALIZED_NAME_PLATFORM)
  private SegmentDemographicsPlatform platform;

  public SegmentDimensionsDemographic() {
  }

  public SegmentDimensionsDemographic appVersion(SegmentDemographicsAppVersion appVersion) {
    this.appVersion = appVersion;
    return this;
  }

  /**
   * Get appVersion
   * @return appVersion
   */
  @javax.annotation.Nullable
  public SegmentDemographicsAppVersion getAppVersion() {
    return appVersion;
  }

  public void setAppVersion(SegmentDemographicsAppVersion appVersion) {
    this.appVersion = appVersion;
  }


  public SegmentDimensionsDemographic channel(SegmentDemographicsChannel channel) {
    this.channel = channel;
    return this;
  }

  /**
   * Get channel
   * @return channel
   */
  @javax.annotation.Nullable
  public SegmentDemographicsChannel getChannel() {
    return channel;
  }

  public void setChannel(SegmentDemographicsChannel channel) {
    this.channel = channel;
  }


  public SegmentDimensionsDemographic deviceType(SegmentDemographicsDeviceType deviceType) {
    this.deviceType = deviceType;
    return this;
  }

  /**
   * Get deviceType
   * @return deviceType
   */
  @javax.annotation.Nullable
  public SegmentDemographicsDeviceType getDeviceType() {
    return deviceType;
  }

  public void setDeviceType(SegmentDemographicsDeviceType deviceType) {
    this.deviceType = deviceType;
  }


  public SegmentDimensionsDemographic make(SegmentDemographicsMake make) {
    this.make = make;
    return this;
  }

  /**
   * Get make
   * @return make
   */
  @javax.annotation.Nullable
  public SegmentDemographicsMake getMake() {
    return make;
  }

  public void setMake(SegmentDemographicsMake make) {
    this.make = make;
  }


  public SegmentDimensionsDemographic model(SegmentDemographicsModel model) {
    this.model = model;
    return this;
  }

  /**
   * Get model
   * @return model
   */
  @javax.annotation.Nullable
  public SegmentDemographicsModel getModel() {
    return model;
  }

  public void setModel(SegmentDemographicsModel model) {
    this.model = model;
  }


  public SegmentDimensionsDemographic platform(SegmentDemographicsPlatform platform) {
    this.platform = platform;
    return this;
  }

  /**
   * Get platform
   * @return platform
   */
  @javax.annotation.Nullable
  public SegmentDemographicsPlatform getPlatform() {
    return platform;
  }

  public void setPlatform(SegmentDemographicsPlatform platform) {
    this.platform = platform;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    SegmentDimensionsDemographic segmentDimensionsDemographic = (SegmentDimensionsDemographic) o;
    return Objects.equals(this.appVersion, segmentDimensionsDemographic.appVersion) &&
        Objects.equals(this.channel, segmentDimensionsDemographic.channel) &&
        Objects.equals(this.deviceType, segmentDimensionsDemographic.deviceType) &&
        Objects.equals(this.make, segmentDimensionsDemographic.make) &&
        Objects.equals(this.model, segmentDimensionsDemographic.model) &&
        Objects.equals(this.platform, segmentDimensionsDemographic.platform);
  }

  @Override
  public int hashCode() {
    return Objects.hash(appVersion, channel, deviceType, make, model, platform);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class SegmentDimensionsDemographic {\n");
    sb.append("    appVersion: ").append(toIndentedString(appVersion)).append("\n");
    sb.append("    channel: ").append(toIndentedString(channel)).append("\n");
    sb.append("    deviceType: ").append(toIndentedString(deviceType)).append("\n");
    sb.append("    make: ").append(toIndentedString(make)).append("\n");
    sb.append("    model: ").append(toIndentedString(model)).append("\n");
    sb.append("    platform: ").append(toIndentedString(platform)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("AppVersion");
    openapiFields.add("Channel");
    openapiFields.add("DeviceType");
    openapiFields.add("Make");
    openapiFields.add("Model");
    openapiFields.add("Platform");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to SegmentDimensionsDemographic
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!SegmentDimensionsDemographic.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in SegmentDimensionsDemographic is not found in the empty JSON string", SegmentDimensionsDemographic.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!SegmentDimensionsDemographic.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `SegmentDimensionsDemographic` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // validate the optional field `AppVersion`
      if (jsonObj.get("AppVersion") != null && !jsonObj.get("AppVersion").isJsonNull()) {
        SegmentDemographicsAppVersion.validateJsonElement(jsonObj.get("AppVersion"));
      }
      // validate the optional field `Channel`
      if (jsonObj.get("Channel") != null && !jsonObj.get("Channel").isJsonNull()) {
        SegmentDemographicsChannel.validateJsonElement(jsonObj.get("Channel"));
      }
      // validate the optional field `DeviceType`
      if (jsonObj.get("DeviceType") != null && !jsonObj.get("DeviceType").isJsonNull()) {
        SegmentDemographicsDeviceType.validateJsonElement(jsonObj.get("DeviceType"));
      }
      // validate the optional field `Make`
      if (jsonObj.get("Make") != null && !jsonObj.get("Make").isJsonNull()) {
        SegmentDemographicsMake.validateJsonElement(jsonObj.get("Make"));
      }
      // validate the optional field `Model`
      if (jsonObj.get("Model") != null && !jsonObj.get("Model").isJsonNull()) {
        SegmentDemographicsModel.validateJsonElement(jsonObj.get("Model"));
      }
      // validate the optional field `Platform`
      if (jsonObj.get("Platform") != null && !jsonObj.get("Platform").isJsonNull()) {
        SegmentDemographicsPlatform.validateJsonElement(jsonObj.get("Platform"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!SegmentDimensionsDemographic.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'SegmentDimensionsDemographic' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<SegmentDimensionsDemographic> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(SegmentDimensionsDemographic.class));

       return (TypeAdapter<T>) new TypeAdapter<SegmentDimensionsDemographic>() {
           @Override
           public void write(JsonWriter out, SegmentDimensionsDemographic value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public SegmentDimensionsDemographic read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of SegmentDimensionsDemographic given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of SegmentDimensionsDemographic
   * @throws IOException if the JSON string is invalid with respect to SegmentDimensionsDemographic
   */
  public static SegmentDimensionsDemographic fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, SegmentDimensionsDemographic.class);
  }

  /**
   * Convert an instance of SegmentDimensionsDemographic to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

