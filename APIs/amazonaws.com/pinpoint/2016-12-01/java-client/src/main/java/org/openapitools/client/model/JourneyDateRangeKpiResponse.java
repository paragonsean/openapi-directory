/*
 * Amazon Pinpoint
 * Doc Engage API - Amazon Pinpoint API
 *
 * The version of the OpenAPI document: 2016-12-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.time.OffsetDateTime;
import java.util.Arrays;
import org.openapitools.client.model.ApplicationDateRangeKpiResponseKpiResult;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * Provides the results of a query that retrieved the data for a standard engagement metric that applies to a journey, and provides information about that query.
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T12:09:25.655112-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class JourneyDateRangeKpiResponse {
  public static final String SERIALIZED_NAME_APPLICATION_ID = "ApplicationId";
  @SerializedName(SERIALIZED_NAME_APPLICATION_ID)
  private String applicationId;

  public static final String SERIALIZED_NAME_END_TIME = "EndTime";
  @SerializedName(SERIALIZED_NAME_END_TIME)
  private OffsetDateTime endTime;

  public static final String SERIALIZED_NAME_JOURNEY_ID = "JourneyId";
  @SerializedName(SERIALIZED_NAME_JOURNEY_ID)
  private String journeyId;

  public static final String SERIALIZED_NAME_KPI_NAME = "KpiName";
  @SerializedName(SERIALIZED_NAME_KPI_NAME)
  private String kpiName;

  public static final String SERIALIZED_NAME_KPI_RESULT = "KpiResult";
  @SerializedName(SERIALIZED_NAME_KPI_RESULT)
  private ApplicationDateRangeKpiResponseKpiResult kpiResult;

  public static final String SERIALIZED_NAME_NEXT_TOKEN = "NextToken";
  @SerializedName(SERIALIZED_NAME_NEXT_TOKEN)
  private String nextToken;

  public static final String SERIALIZED_NAME_START_TIME = "StartTime";
  @SerializedName(SERIALIZED_NAME_START_TIME)
  private OffsetDateTime startTime;

  public JourneyDateRangeKpiResponse() {
  }

  public JourneyDateRangeKpiResponse applicationId(String applicationId) {
    this.applicationId = applicationId;
    return this;
  }

  /**
   * Get applicationId
   * @return applicationId
   */
  @javax.annotation.Nonnull
  public String getApplicationId() {
    return applicationId;
  }

  public void setApplicationId(String applicationId) {
    this.applicationId = applicationId;
  }


  public JourneyDateRangeKpiResponse endTime(OffsetDateTime endTime) {
    this.endTime = endTime;
    return this;
  }

  /**
   * Get endTime
   * @return endTime
   */
  @javax.annotation.Nonnull
  public OffsetDateTime getEndTime() {
    return endTime;
  }

  public void setEndTime(OffsetDateTime endTime) {
    this.endTime = endTime;
  }


  public JourneyDateRangeKpiResponse journeyId(String journeyId) {
    this.journeyId = journeyId;
    return this;
  }

  /**
   * Get journeyId
   * @return journeyId
   */
  @javax.annotation.Nonnull
  public String getJourneyId() {
    return journeyId;
  }

  public void setJourneyId(String journeyId) {
    this.journeyId = journeyId;
  }


  public JourneyDateRangeKpiResponse kpiName(String kpiName) {
    this.kpiName = kpiName;
    return this;
  }

  /**
   * Get kpiName
   * @return kpiName
   */
  @javax.annotation.Nonnull
  public String getKpiName() {
    return kpiName;
  }

  public void setKpiName(String kpiName) {
    this.kpiName = kpiName;
  }


  public JourneyDateRangeKpiResponse kpiResult(ApplicationDateRangeKpiResponseKpiResult kpiResult) {
    this.kpiResult = kpiResult;
    return this;
  }

  /**
   * Get kpiResult
   * @return kpiResult
   */
  @javax.annotation.Nonnull
  public ApplicationDateRangeKpiResponseKpiResult getKpiResult() {
    return kpiResult;
  }

  public void setKpiResult(ApplicationDateRangeKpiResponseKpiResult kpiResult) {
    this.kpiResult = kpiResult;
  }


  public JourneyDateRangeKpiResponse nextToken(String nextToken) {
    this.nextToken = nextToken;
    return this;
  }

  /**
   * Get nextToken
   * @return nextToken
   */
  @javax.annotation.Nullable
  public String getNextToken() {
    return nextToken;
  }

  public void setNextToken(String nextToken) {
    this.nextToken = nextToken;
  }


  public JourneyDateRangeKpiResponse startTime(OffsetDateTime startTime) {
    this.startTime = startTime;
    return this;
  }

  /**
   * Get startTime
   * @return startTime
   */
  @javax.annotation.Nonnull
  public OffsetDateTime getStartTime() {
    return startTime;
  }

  public void setStartTime(OffsetDateTime startTime) {
    this.startTime = startTime;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    JourneyDateRangeKpiResponse journeyDateRangeKpiResponse = (JourneyDateRangeKpiResponse) o;
    return Objects.equals(this.applicationId, journeyDateRangeKpiResponse.applicationId) &&
        Objects.equals(this.endTime, journeyDateRangeKpiResponse.endTime) &&
        Objects.equals(this.journeyId, journeyDateRangeKpiResponse.journeyId) &&
        Objects.equals(this.kpiName, journeyDateRangeKpiResponse.kpiName) &&
        Objects.equals(this.kpiResult, journeyDateRangeKpiResponse.kpiResult) &&
        Objects.equals(this.nextToken, journeyDateRangeKpiResponse.nextToken) &&
        Objects.equals(this.startTime, journeyDateRangeKpiResponse.startTime);
  }

  @Override
  public int hashCode() {
    return Objects.hash(applicationId, endTime, journeyId, kpiName, kpiResult, nextToken, startTime);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class JourneyDateRangeKpiResponse {\n");
    sb.append("    applicationId: ").append(toIndentedString(applicationId)).append("\n");
    sb.append("    endTime: ").append(toIndentedString(endTime)).append("\n");
    sb.append("    journeyId: ").append(toIndentedString(journeyId)).append("\n");
    sb.append("    kpiName: ").append(toIndentedString(kpiName)).append("\n");
    sb.append("    kpiResult: ").append(toIndentedString(kpiResult)).append("\n");
    sb.append("    nextToken: ").append(toIndentedString(nextToken)).append("\n");
    sb.append("    startTime: ").append(toIndentedString(startTime)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("ApplicationId");
    openapiFields.add("EndTime");
    openapiFields.add("JourneyId");
    openapiFields.add("KpiName");
    openapiFields.add("KpiResult");
    openapiFields.add("NextToken");
    openapiFields.add("StartTime");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
    openapiRequiredFields.add("ApplicationId");
    openapiRequiredFields.add("EndTime");
    openapiRequiredFields.add("JourneyId");
    openapiRequiredFields.add("KpiName");
    openapiRequiredFields.add("KpiResult");
    openapiRequiredFields.add("StartTime");
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to JourneyDateRangeKpiResponse
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!JourneyDateRangeKpiResponse.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in JourneyDateRangeKpiResponse is not found in the empty JSON string", JourneyDateRangeKpiResponse.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!JourneyDateRangeKpiResponse.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `JourneyDateRangeKpiResponse` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }

      // check to make sure all required properties/fields are present in the JSON string
      for (String requiredField : JourneyDateRangeKpiResponse.openapiRequiredFields) {
        if (jsonElement.getAsJsonObject().get(requiredField) == null) {
          throw new IllegalArgumentException(String.format("The required field `%s` is not found in the JSON string: %s", requiredField, jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // validate the required field `ApplicationId`
      String.validateJsonElement(jsonObj.get("ApplicationId"));
      // validate the required field `EndTime`
      OffsetDateTime.validateJsonElement(jsonObj.get("EndTime"));
      // validate the required field `JourneyId`
      String.validateJsonElement(jsonObj.get("JourneyId"));
      // validate the required field `KpiName`
      String.validateJsonElement(jsonObj.get("KpiName"));
      // validate the required field `KpiResult`
      ApplicationDateRangeKpiResponseKpiResult.validateJsonElement(jsonObj.get("KpiResult"));
      // validate the optional field `NextToken`
      if (jsonObj.get("NextToken") != null && !jsonObj.get("NextToken").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("NextToken"));
      }
      // validate the required field `StartTime`
      OffsetDateTime.validateJsonElement(jsonObj.get("StartTime"));
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!JourneyDateRangeKpiResponse.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'JourneyDateRangeKpiResponse' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<JourneyDateRangeKpiResponse> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(JourneyDateRangeKpiResponse.class));

       return (TypeAdapter<T>) new TypeAdapter<JourneyDateRangeKpiResponse>() {
           @Override
           public void write(JsonWriter out, JourneyDateRangeKpiResponse value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public JourneyDateRangeKpiResponse read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of JourneyDateRangeKpiResponse given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of JourneyDateRangeKpiResponse
   * @throws IOException if the JSON string is invalid with respect to JourneyDateRangeKpiResponse
   */
  public static JourneyDateRangeKpiResponse fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, JourneyDateRangeKpiResponse.class);
  }

  /**
   * Convert an instance of JourneyDateRangeKpiResponse to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

