/*
 * Amazon Pinpoint
 * Doc Engage API - Amazon Pinpoint API
 *
 * The version of the OpenAPI document: 2016-12-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * Send OTP message request parameters.
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T12:09:25.655112-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class SendOTPMessageRequestParameters {
  public static final String SERIALIZED_NAME_ALLOWED_ATTEMPTS = "AllowedAttempts";
  @SerializedName(SERIALIZED_NAME_ALLOWED_ATTEMPTS)
  private Integer allowedAttempts;

  public static final String SERIALIZED_NAME_BRAND_NAME = "BrandName";
  @SerializedName(SERIALIZED_NAME_BRAND_NAME)
  private String brandName;

  public static final String SERIALIZED_NAME_CHANNEL = "Channel";
  @SerializedName(SERIALIZED_NAME_CHANNEL)
  private String channel;

  public static final String SERIALIZED_NAME_CODE_LENGTH = "CodeLength";
  @SerializedName(SERIALIZED_NAME_CODE_LENGTH)
  private Integer codeLength;

  public static final String SERIALIZED_NAME_DESTINATION_IDENTITY = "DestinationIdentity";
  @SerializedName(SERIALIZED_NAME_DESTINATION_IDENTITY)
  private String destinationIdentity;

  public static final String SERIALIZED_NAME_ENTITY_ID = "EntityId";
  @SerializedName(SERIALIZED_NAME_ENTITY_ID)
  private String entityId;

  public static final String SERIALIZED_NAME_LANGUAGE = "Language";
  @SerializedName(SERIALIZED_NAME_LANGUAGE)
  private String language;

  public static final String SERIALIZED_NAME_ORIGINATION_IDENTITY = "OriginationIdentity";
  @SerializedName(SERIALIZED_NAME_ORIGINATION_IDENTITY)
  private String originationIdentity;

  public static final String SERIALIZED_NAME_REFERENCE_ID = "ReferenceId";
  @SerializedName(SERIALIZED_NAME_REFERENCE_ID)
  private String referenceId;

  public static final String SERIALIZED_NAME_TEMPLATE_ID = "TemplateId";
  @SerializedName(SERIALIZED_NAME_TEMPLATE_ID)
  private String templateId;

  public static final String SERIALIZED_NAME_VALIDITY_PERIOD = "ValidityPeriod";
  @SerializedName(SERIALIZED_NAME_VALIDITY_PERIOD)
  private Integer validityPeriod;

  public SendOTPMessageRequestParameters() {
  }

  public SendOTPMessageRequestParameters allowedAttempts(Integer allowedAttempts) {
    this.allowedAttempts = allowedAttempts;
    return this;
  }

  /**
   * Get allowedAttempts
   * @return allowedAttempts
   */
  @javax.annotation.Nullable
  public Integer getAllowedAttempts() {
    return allowedAttempts;
  }

  public void setAllowedAttempts(Integer allowedAttempts) {
    this.allowedAttempts = allowedAttempts;
  }


  public SendOTPMessageRequestParameters brandName(String brandName) {
    this.brandName = brandName;
    return this;
  }

  /**
   * Get brandName
   * @return brandName
   */
  @javax.annotation.Nonnull
  public String getBrandName() {
    return brandName;
  }

  public void setBrandName(String brandName) {
    this.brandName = brandName;
  }


  public SendOTPMessageRequestParameters channel(String channel) {
    this.channel = channel;
    return this;
  }

  /**
   * Get channel
   * @return channel
   */
  @javax.annotation.Nonnull
  public String getChannel() {
    return channel;
  }

  public void setChannel(String channel) {
    this.channel = channel;
  }


  public SendOTPMessageRequestParameters codeLength(Integer codeLength) {
    this.codeLength = codeLength;
    return this;
  }

  /**
   * Get codeLength
   * @return codeLength
   */
  @javax.annotation.Nullable
  public Integer getCodeLength() {
    return codeLength;
  }

  public void setCodeLength(Integer codeLength) {
    this.codeLength = codeLength;
  }


  public SendOTPMessageRequestParameters destinationIdentity(String destinationIdentity) {
    this.destinationIdentity = destinationIdentity;
    return this;
  }

  /**
   * Get destinationIdentity
   * @return destinationIdentity
   */
  @javax.annotation.Nonnull
  public String getDestinationIdentity() {
    return destinationIdentity;
  }

  public void setDestinationIdentity(String destinationIdentity) {
    this.destinationIdentity = destinationIdentity;
  }


  public SendOTPMessageRequestParameters entityId(String entityId) {
    this.entityId = entityId;
    return this;
  }

  /**
   * Get entityId
   * @return entityId
   */
  @javax.annotation.Nullable
  public String getEntityId() {
    return entityId;
  }

  public void setEntityId(String entityId) {
    this.entityId = entityId;
  }


  public SendOTPMessageRequestParameters language(String language) {
    this.language = language;
    return this;
  }

  /**
   * Get language
   * @return language
   */
  @javax.annotation.Nullable
  public String getLanguage() {
    return language;
  }

  public void setLanguage(String language) {
    this.language = language;
  }


  public SendOTPMessageRequestParameters originationIdentity(String originationIdentity) {
    this.originationIdentity = originationIdentity;
    return this;
  }

  /**
   * Get originationIdentity
   * @return originationIdentity
   */
  @javax.annotation.Nonnull
  public String getOriginationIdentity() {
    return originationIdentity;
  }

  public void setOriginationIdentity(String originationIdentity) {
    this.originationIdentity = originationIdentity;
  }


  public SendOTPMessageRequestParameters referenceId(String referenceId) {
    this.referenceId = referenceId;
    return this;
  }

  /**
   * Get referenceId
   * @return referenceId
   */
  @javax.annotation.Nonnull
  public String getReferenceId() {
    return referenceId;
  }

  public void setReferenceId(String referenceId) {
    this.referenceId = referenceId;
  }


  public SendOTPMessageRequestParameters templateId(String templateId) {
    this.templateId = templateId;
    return this;
  }

  /**
   * Get templateId
   * @return templateId
   */
  @javax.annotation.Nullable
  public String getTemplateId() {
    return templateId;
  }

  public void setTemplateId(String templateId) {
    this.templateId = templateId;
  }


  public SendOTPMessageRequestParameters validityPeriod(Integer validityPeriod) {
    this.validityPeriod = validityPeriod;
    return this;
  }

  /**
   * Get validityPeriod
   * @return validityPeriod
   */
  @javax.annotation.Nullable
  public Integer getValidityPeriod() {
    return validityPeriod;
  }

  public void setValidityPeriod(Integer validityPeriod) {
    this.validityPeriod = validityPeriod;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    SendOTPMessageRequestParameters sendOTPMessageRequestParameters = (SendOTPMessageRequestParameters) o;
    return Objects.equals(this.allowedAttempts, sendOTPMessageRequestParameters.allowedAttempts) &&
        Objects.equals(this.brandName, sendOTPMessageRequestParameters.brandName) &&
        Objects.equals(this.channel, sendOTPMessageRequestParameters.channel) &&
        Objects.equals(this.codeLength, sendOTPMessageRequestParameters.codeLength) &&
        Objects.equals(this.destinationIdentity, sendOTPMessageRequestParameters.destinationIdentity) &&
        Objects.equals(this.entityId, sendOTPMessageRequestParameters.entityId) &&
        Objects.equals(this.language, sendOTPMessageRequestParameters.language) &&
        Objects.equals(this.originationIdentity, sendOTPMessageRequestParameters.originationIdentity) &&
        Objects.equals(this.referenceId, sendOTPMessageRequestParameters.referenceId) &&
        Objects.equals(this.templateId, sendOTPMessageRequestParameters.templateId) &&
        Objects.equals(this.validityPeriod, sendOTPMessageRequestParameters.validityPeriod);
  }

  @Override
  public int hashCode() {
    return Objects.hash(allowedAttempts, brandName, channel, codeLength, destinationIdentity, entityId, language, originationIdentity, referenceId, templateId, validityPeriod);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class SendOTPMessageRequestParameters {\n");
    sb.append("    allowedAttempts: ").append(toIndentedString(allowedAttempts)).append("\n");
    sb.append("    brandName: ").append(toIndentedString(brandName)).append("\n");
    sb.append("    channel: ").append(toIndentedString(channel)).append("\n");
    sb.append("    codeLength: ").append(toIndentedString(codeLength)).append("\n");
    sb.append("    destinationIdentity: ").append(toIndentedString(destinationIdentity)).append("\n");
    sb.append("    entityId: ").append(toIndentedString(entityId)).append("\n");
    sb.append("    language: ").append(toIndentedString(language)).append("\n");
    sb.append("    originationIdentity: ").append(toIndentedString(originationIdentity)).append("\n");
    sb.append("    referenceId: ").append(toIndentedString(referenceId)).append("\n");
    sb.append("    templateId: ").append(toIndentedString(templateId)).append("\n");
    sb.append("    validityPeriod: ").append(toIndentedString(validityPeriod)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("AllowedAttempts");
    openapiFields.add("BrandName");
    openapiFields.add("Channel");
    openapiFields.add("CodeLength");
    openapiFields.add("DestinationIdentity");
    openapiFields.add("EntityId");
    openapiFields.add("Language");
    openapiFields.add("OriginationIdentity");
    openapiFields.add("ReferenceId");
    openapiFields.add("TemplateId");
    openapiFields.add("ValidityPeriod");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
    openapiRequiredFields.add("BrandName");
    openapiRequiredFields.add("Channel");
    openapiRequiredFields.add("DestinationIdentity");
    openapiRequiredFields.add("OriginationIdentity");
    openapiRequiredFields.add("ReferenceId");
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to SendOTPMessageRequestParameters
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!SendOTPMessageRequestParameters.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in SendOTPMessageRequestParameters is not found in the empty JSON string", SendOTPMessageRequestParameters.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!SendOTPMessageRequestParameters.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `SendOTPMessageRequestParameters` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }

      // check to make sure all required properties/fields are present in the JSON string
      for (String requiredField : SendOTPMessageRequestParameters.openapiRequiredFields) {
        if (jsonElement.getAsJsonObject().get(requiredField) == null) {
          throw new IllegalArgumentException(String.format("The required field `%s` is not found in the JSON string: %s", requiredField, jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // validate the optional field `AllowedAttempts`
      if (jsonObj.get("AllowedAttempts") != null && !jsonObj.get("AllowedAttempts").isJsonNull()) {
        Integer.validateJsonElement(jsonObj.get("AllowedAttempts"));
      }
      // validate the required field `BrandName`
      String.validateJsonElement(jsonObj.get("BrandName"));
      // validate the required field `Channel`
      String.validateJsonElement(jsonObj.get("Channel"));
      // validate the optional field `CodeLength`
      if (jsonObj.get("CodeLength") != null && !jsonObj.get("CodeLength").isJsonNull()) {
        Integer.validateJsonElement(jsonObj.get("CodeLength"));
      }
      // validate the required field `DestinationIdentity`
      String.validateJsonElement(jsonObj.get("DestinationIdentity"));
      // validate the optional field `EntityId`
      if (jsonObj.get("EntityId") != null && !jsonObj.get("EntityId").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("EntityId"));
      }
      // validate the optional field `Language`
      if (jsonObj.get("Language") != null && !jsonObj.get("Language").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("Language"));
      }
      // validate the required field `OriginationIdentity`
      String.validateJsonElement(jsonObj.get("OriginationIdentity"));
      // validate the required field `ReferenceId`
      String.validateJsonElement(jsonObj.get("ReferenceId"));
      // validate the optional field `TemplateId`
      if (jsonObj.get("TemplateId") != null && !jsonObj.get("TemplateId").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("TemplateId"));
      }
      // validate the optional field `ValidityPeriod`
      if (jsonObj.get("ValidityPeriod") != null && !jsonObj.get("ValidityPeriod").isJsonNull()) {
        Integer.validateJsonElement(jsonObj.get("ValidityPeriod"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!SendOTPMessageRequestParameters.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'SendOTPMessageRequestParameters' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<SendOTPMessageRequestParameters> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(SendOTPMessageRequestParameters.class));

       return (TypeAdapter<T>) new TypeAdapter<SendOTPMessageRequestParameters>() {
           @Override
           public void write(JsonWriter out, SendOTPMessageRequestParameters value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public SendOTPMessageRequestParameters read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of SendOTPMessageRequestParameters given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of SendOTPMessageRequestParameters
   * @throws IOException if the JSON string is invalid with respect to SendOTPMessageRequestParameters
   */
  public static SendOTPMessageRequestParameters fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, SendOTPMessageRequestParameters.class);
  }

  /**
   * Convert an instance of SendOTPMessageRequestParameters to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

