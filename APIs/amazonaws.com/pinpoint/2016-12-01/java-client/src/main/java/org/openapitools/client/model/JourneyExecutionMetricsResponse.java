/*
 * Amazon Pinpoint
 * Doc Engage API - Amazon Pinpoint API
 *
 * The version of the OpenAPI document: 2016-12-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;
import java.util.Map;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * Provides the results of a query that retrieved the data for a standard execution metric that applies to a journey, and provides information about that query.
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T12:09:25.655112-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class JourneyExecutionMetricsResponse {
  public static final String SERIALIZED_NAME_APPLICATION_ID = "ApplicationId";
  @SerializedName(SERIALIZED_NAME_APPLICATION_ID)
  private String applicationId;

  public static final String SERIALIZED_NAME_JOURNEY_ID = "JourneyId";
  @SerializedName(SERIALIZED_NAME_JOURNEY_ID)
  private String journeyId;

  public static final String SERIALIZED_NAME_LAST_EVALUATED_TIME = "LastEvaluatedTime";
  @SerializedName(SERIALIZED_NAME_LAST_EVALUATED_TIME)
  private String lastEvaluatedTime;

  public static final String SERIALIZED_NAME_METRICS = "Metrics";
  @SerializedName(SERIALIZED_NAME_METRICS)
  private Map metrics;

  public JourneyExecutionMetricsResponse() {
  }

  public JourneyExecutionMetricsResponse applicationId(String applicationId) {
    this.applicationId = applicationId;
    return this;
  }

  /**
   * Get applicationId
   * @return applicationId
   */
  @javax.annotation.Nonnull
  public String getApplicationId() {
    return applicationId;
  }

  public void setApplicationId(String applicationId) {
    this.applicationId = applicationId;
  }


  public JourneyExecutionMetricsResponse journeyId(String journeyId) {
    this.journeyId = journeyId;
    return this;
  }

  /**
   * Get journeyId
   * @return journeyId
   */
  @javax.annotation.Nonnull
  public String getJourneyId() {
    return journeyId;
  }

  public void setJourneyId(String journeyId) {
    this.journeyId = journeyId;
  }


  public JourneyExecutionMetricsResponse lastEvaluatedTime(String lastEvaluatedTime) {
    this.lastEvaluatedTime = lastEvaluatedTime;
    return this;
  }

  /**
   * Get lastEvaluatedTime
   * @return lastEvaluatedTime
   */
  @javax.annotation.Nonnull
  public String getLastEvaluatedTime() {
    return lastEvaluatedTime;
  }

  public void setLastEvaluatedTime(String lastEvaluatedTime) {
    this.lastEvaluatedTime = lastEvaluatedTime;
  }


  public JourneyExecutionMetricsResponse metrics(Map metrics) {
    this.metrics = metrics;
    return this;
  }

  /**
   * Get metrics
   * @return metrics
   */
  @javax.annotation.Nonnull
  public Map getMetrics() {
    return metrics;
  }

  public void setMetrics(Map metrics) {
    this.metrics = metrics;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    JourneyExecutionMetricsResponse journeyExecutionMetricsResponse = (JourneyExecutionMetricsResponse) o;
    return Objects.equals(this.applicationId, journeyExecutionMetricsResponse.applicationId) &&
        Objects.equals(this.journeyId, journeyExecutionMetricsResponse.journeyId) &&
        Objects.equals(this.lastEvaluatedTime, journeyExecutionMetricsResponse.lastEvaluatedTime) &&
        Objects.equals(this.metrics, journeyExecutionMetricsResponse.metrics);
  }

  @Override
  public int hashCode() {
    return Objects.hash(applicationId, journeyId, lastEvaluatedTime, metrics);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class JourneyExecutionMetricsResponse {\n");
    sb.append("    applicationId: ").append(toIndentedString(applicationId)).append("\n");
    sb.append("    journeyId: ").append(toIndentedString(journeyId)).append("\n");
    sb.append("    lastEvaluatedTime: ").append(toIndentedString(lastEvaluatedTime)).append("\n");
    sb.append("    metrics: ").append(toIndentedString(metrics)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("ApplicationId");
    openapiFields.add("JourneyId");
    openapiFields.add("LastEvaluatedTime");
    openapiFields.add("Metrics");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
    openapiRequiredFields.add("ApplicationId");
    openapiRequiredFields.add("JourneyId");
    openapiRequiredFields.add("LastEvaluatedTime");
    openapiRequiredFields.add("Metrics");
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to JourneyExecutionMetricsResponse
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!JourneyExecutionMetricsResponse.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in JourneyExecutionMetricsResponse is not found in the empty JSON string", JourneyExecutionMetricsResponse.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!JourneyExecutionMetricsResponse.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `JourneyExecutionMetricsResponse` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }

      // check to make sure all required properties/fields are present in the JSON string
      for (String requiredField : JourneyExecutionMetricsResponse.openapiRequiredFields) {
        if (jsonElement.getAsJsonObject().get(requiredField) == null) {
          throw new IllegalArgumentException(String.format("The required field `%s` is not found in the JSON string: %s", requiredField, jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // validate the required field `ApplicationId`
      String.validateJsonElement(jsonObj.get("ApplicationId"));
      // validate the required field `JourneyId`
      String.validateJsonElement(jsonObj.get("JourneyId"));
      // validate the required field `LastEvaluatedTime`
      String.validateJsonElement(jsonObj.get("LastEvaluatedTime"));
      // validate the required field `Metrics`
      Map.validateJsonElement(jsonObj.get("Metrics"));
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!JourneyExecutionMetricsResponse.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'JourneyExecutionMetricsResponse' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<JourneyExecutionMetricsResponse> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(JourneyExecutionMetricsResponse.class));

       return (TypeAdapter<T>) new TypeAdapter<JourneyExecutionMetricsResponse>() {
           @Override
           public void write(JsonWriter out, JourneyExecutionMetricsResponse value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public JourneyExecutionMetricsResponse read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of JourneyExecutionMetricsResponse given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of JourneyExecutionMetricsResponse
   * @throws IOException if the JSON string is invalid with respect to JourneyExecutionMetricsResponse
   */
  public static JourneyExecutionMetricsResponse fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, JourneyExecutionMetricsResponse.class);
  }

  /**
   * Convert an instance of JourneyExecutionMetricsResponse to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

