/*
 * Amazon Pinpoint
 * Doc Engage API - Amazon Pinpoint API
 *
 * The version of the OpenAPI document: 2016-12-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.annotations.SerializedName;

import java.io.IOException;
import com.google.gson.TypeAdapter;
import com.google.gson.JsonElement;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;

/**
 * Gets or Sets __EndpointTypesElement
 */
@JsonAdapter(EndpointTypesElement.Adapter.class)
public enum EndpointTypesElement {
  
  PUSH("PUSH"),
  
  GCM("GCM"),
  
  APNS("APNS"),
  
  APNS_SANDBOX("APNS_SANDBOX"),
  
  APNS_VOIP("APNS_VOIP"),
  
  APNS_VOIP_SANDBOX("APNS_VOIP_SANDBOX"),
  
  ADM("ADM"),
  
  SMS("SMS"),
  
  VOICE("VOICE"),
  
  EMAIL("EMAIL"),
  
  BAIDU("BAIDU"),
  
  CUSTOM("CUSTOM"),
  
  IN_APP("IN_APP");

  private String value;

  EndpointTypesElement(String value) {
    this.value = value;
  }

  public String getValue() {
    return value;
  }

  @Override
  public String toString() {
    return String.valueOf(value);
  }

  public static EndpointTypesElement fromValue(String value) {
    for (EndpointTypesElement b : EndpointTypesElement.values()) {
      if (b.value.equals(value)) {
        return b;
      }
    }
    throw new IllegalArgumentException("Unexpected value '" + value + "'");
  }

  public static class Adapter extends TypeAdapter<EndpointTypesElement> {
    @Override
    public void write(final JsonWriter jsonWriter, final EndpointTypesElement enumeration) throws IOException {
      jsonWriter.value(enumeration.getValue());
    }

    @Override
    public EndpointTypesElement read(final JsonReader jsonReader) throws IOException {
      String value = jsonReader.nextString();
      return EndpointTypesElement.fromValue(value);
    }
  }

  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
    String value = jsonElement.getAsString();
    EndpointTypesElement.fromValue(value);
  }
}

