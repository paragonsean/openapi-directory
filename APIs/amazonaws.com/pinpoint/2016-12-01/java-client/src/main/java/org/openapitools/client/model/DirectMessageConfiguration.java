/*
 * Amazon Pinpoint
 * Doc Engage API - Amazon Pinpoint API
 *
 * The version of the OpenAPI document: 2016-12-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;
import org.openapitools.client.model.DirectMessageConfigurationADMMessage;
import org.openapitools.client.model.DirectMessageConfigurationAPNSMessage;
import org.openapitools.client.model.DirectMessageConfigurationBaiduMessage;
import org.openapitools.client.model.DirectMessageConfigurationDefaultMessage;
import org.openapitools.client.model.DirectMessageConfigurationDefaultPushNotificationMessage;
import org.openapitools.client.model.DirectMessageConfigurationEmailMessage;
import org.openapitools.client.model.DirectMessageConfigurationGCMMessage;
import org.openapitools.client.model.DirectMessageConfigurationSMSMessage;
import org.openapitools.client.model.DirectMessageConfigurationVoiceMessage;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * Specifies the settings and content for the default message and any default messages that you tailored for specific channels.
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T12:09:25.655112-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class DirectMessageConfiguration {
  public static final String SERIALIZED_NAME_AD_M_MESSAGE = "ADMMessage";
  @SerializedName(SERIALIZED_NAME_AD_M_MESSAGE)
  private DirectMessageConfigurationADMMessage adMMessage;

  public static final String SERIALIZED_NAME_AP_N_S_MESSAGE = "APNSMessage";
  @SerializedName(SERIALIZED_NAME_AP_N_S_MESSAGE)
  private DirectMessageConfigurationAPNSMessage apNSMessage;

  public static final String SERIALIZED_NAME_BAIDU_MESSAGE = "BaiduMessage";
  @SerializedName(SERIALIZED_NAME_BAIDU_MESSAGE)
  private DirectMessageConfigurationBaiduMessage baiduMessage;

  public static final String SERIALIZED_NAME_DEFAULT_MESSAGE = "DefaultMessage";
  @SerializedName(SERIALIZED_NAME_DEFAULT_MESSAGE)
  private DirectMessageConfigurationDefaultMessage defaultMessage;

  public static final String SERIALIZED_NAME_DEFAULT_PUSH_NOTIFICATION_MESSAGE = "DefaultPushNotificationMessage";
  @SerializedName(SERIALIZED_NAME_DEFAULT_PUSH_NOTIFICATION_MESSAGE)
  private DirectMessageConfigurationDefaultPushNotificationMessage defaultPushNotificationMessage;

  public static final String SERIALIZED_NAME_EMAIL_MESSAGE = "EmailMessage";
  @SerializedName(SERIALIZED_NAME_EMAIL_MESSAGE)
  private DirectMessageConfigurationEmailMessage emailMessage;

  public static final String SERIALIZED_NAME_GC_M_MESSAGE = "GCMMessage";
  @SerializedName(SERIALIZED_NAME_GC_M_MESSAGE)
  private DirectMessageConfigurationGCMMessage gcMMessage;

  public static final String SERIALIZED_NAME_SM_S_MESSAGE = "SMSMessage";
  @SerializedName(SERIALIZED_NAME_SM_S_MESSAGE)
  private DirectMessageConfigurationSMSMessage smSMessage;

  public static final String SERIALIZED_NAME_VOICE_MESSAGE = "VoiceMessage";
  @SerializedName(SERIALIZED_NAME_VOICE_MESSAGE)
  private DirectMessageConfigurationVoiceMessage voiceMessage;

  public DirectMessageConfiguration() {
  }

  public DirectMessageConfiguration adMMessage(DirectMessageConfigurationADMMessage adMMessage) {
    this.adMMessage = adMMessage;
    return this;
  }

  /**
   * Get adMMessage
   * @return adMMessage
   */
  @javax.annotation.Nullable
  public DirectMessageConfigurationADMMessage getAdMMessage() {
    return adMMessage;
  }

  public void setAdMMessage(DirectMessageConfigurationADMMessage adMMessage) {
    this.adMMessage = adMMessage;
  }


  public DirectMessageConfiguration apNSMessage(DirectMessageConfigurationAPNSMessage apNSMessage) {
    this.apNSMessage = apNSMessage;
    return this;
  }

  /**
   * Get apNSMessage
   * @return apNSMessage
   */
  @javax.annotation.Nullable
  public DirectMessageConfigurationAPNSMessage getApNSMessage() {
    return apNSMessage;
  }

  public void setApNSMessage(DirectMessageConfigurationAPNSMessage apNSMessage) {
    this.apNSMessage = apNSMessage;
  }


  public DirectMessageConfiguration baiduMessage(DirectMessageConfigurationBaiduMessage baiduMessage) {
    this.baiduMessage = baiduMessage;
    return this;
  }

  /**
   * Get baiduMessage
   * @return baiduMessage
   */
  @javax.annotation.Nullable
  public DirectMessageConfigurationBaiduMessage getBaiduMessage() {
    return baiduMessage;
  }

  public void setBaiduMessage(DirectMessageConfigurationBaiduMessage baiduMessage) {
    this.baiduMessage = baiduMessage;
  }


  public DirectMessageConfiguration defaultMessage(DirectMessageConfigurationDefaultMessage defaultMessage) {
    this.defaultMessage = defaultMessage;
    return this;
  }

  /**
   * Get defaultMessage
   * @return defaultMessage
   */
  @javax.annotation.Nullable
  public DirectMessageConfigurationDefaultMessage getDefaultMessage() {
    return defaultMessage;
  }

  public void setDefaultMessage(DirectMessageConfigurationDefaultMessage defaultMessage) {
    this.defaultMessage = defaultMessage;
  }


  public DirectMessageConfiguration defaultPushNotificationMessage(DirectMessageConfigurationDefaultPushNotificationMessage defaultPushNotificationMessage) {
    this.defaultPushNotificationMessage = defaultPushNotificationMessage;
    return this;
  }

  /**
   * Get defaultPushNotificationMessage
   * @return defaultPushNotificationMessage
   */
  @javax.annotation.Nullable
  public DirectMessageConfigurationDefaultPushNotificationMessage getDefaultPushNotificationMessage() {
    return defaultPushNotificationMessage;
  }

  public void setDefaultPushNotificationMessage(DirectMessageConfigurationDefaultPushNotificationMessage defaultPushNotificationMessage) {
    this.defaultPushNotificationMessage = defaultPushNotificationMessage;
  }


  public DirectMessageConfiguration emailMessage(DirectMessageConfigurationEmailMessage emailMessage) {
    this.emailMessage = emailMessage;
    return this;
  }

  /**
   * Get emailMessage
   * @return emailMessage
   */
  @javax.annotation.Nullable
  public DirectMessageConfigurationEmailMessage getEmailMessage() {
    return emailMessage;
  }

  public void setEmailMessage(DirectMessageConfigurationEmailMessage emailMessage) {
    this.emailMessage = emailMessage;
  }


  public DirectMessageConfiguration gcMMessage(DirectMessageConfigurationGCMMessage gcMMessage) {
    this.gcMMessage = gcMMessage;
    return this;
  }

  /**
   * Get gcMMessage
   * @return gcMMessage
   */
  @javax.annotation.Nullable
  public DirectMessageConfigurationGCMMessage getGcMMessage() {
    return gcMMessage;
  }

  public void setGcMMessage(DirectMessageConfigurationGCMMessage gcMMessage) {
    this.gcMMessage = gcMMessage;
  }


  public DirectMessageConfiguration smSMessage(DirectMessageConfigurationSMSMessage smSMessage) {
    this.smSMessage = smSMessage;
    return this;
  }

  /**
   * Get smSMessage
   * @return smSMessage
   */
  @javax.annotation.Nullable
  public DirectMessageConfigurationSMSMessage getSmSMessage() {
    return smSMessage;
  }

  public void setSmSMessage(DirectMessageConfigurationSMSMessage smSMessage) {
    this.smSMessage = smSMessage;
  }


  public DirectMessageConfiguration voiceMessage(DirectMessageConfigurationVoiceMessage voiceMessage) {
    this.voiceMessage = voiceMessage;
    return this;
  }

  /**
   * Get voiceMessage
   * @return voiceMessage
   */
  @javax.annotation.Nullable
  public DirectMessageConfigurationVoiceMessage getVoiceMessage() {
    return voiceMessage;
  }

  public void setVoiceMessage(DirectMessageConfigurationVoiceMessage voiceMessage) {
    this.voiceMessage = voiceMessage;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    DirectMessageConfiguration directMessageConfiguration = (DirectMessageConfiguration) o;
    return Objects.equals(this.adMMessage, directMessageConfiguration.adMMessage) &&
        Objects.equals(this.apNSMessage, directMessageConfiguration.apNSMessage) &&
        Objects.equals(this.baiduMessage, directMessageConfiguration.baiduMessage) &&
        Objects.equals(this.defaultMessage, directMessageConfiguration.defaultMessage) &&
        Objects.equals(this.defaultPushNotificationMessage, directMessageConfiguration.defaultPushNotificationMessage) &&
        Objects.equals(this.emailMessage, directMessageConfiguration.emailMessage) &&
        Objects.equals(this.gcMMessage, directMessageConfiguration.gcMMessage) &&
        Objects.equals(this.smSMessage, directMessageConfiguration.smSMessage) &&
        Objects.equals(this.voiceMessage, directMessageConfiguration.voiceMessage);
  }

  @Override
  public int hashCode() {
    return Objects.hash(adMMessage, apNSMessage, baiduMessage, defaultMessage, defaultPushNotificationMessage, emailMessage, gcMMessage, smSMessage, voiceMessage);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class DirectMessageConfiguration {\n");
    sb.append("    adMMessage: ").append(toIndentedString(adMMessage)).append("\n");
    sb.append("    apNSMessage: ").append(toIndentedString(apNSMessage)).append("\n");
    sb.append("    baiduMessage: ").append(toIndentedString(baiduMessage)).append("\n");
    sb.append("    defaultMessage: ").append(toIndentedString(defaultMessage)).append("\n");
    sb.append("    defaultPushNotificationMessage: ").append(toIndentedString(defaultPushNotificationMessage)).append("\n");
    sb.append("    emailMessage: ").append(toIndentedString(emailMessage)).append("\n");
    sb.append("    gcMMessage: ").append(toIndentedString(gcMMessage)).append("\n");
    sb.append("    smSMessage: ").append(toIndentedString(smSMessage)).append("\n");
    sb.append("    voiceMessage: ").append(toIndentedString(voiceMessage)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("ADMMessage");
    openapiFields.add("APNSMessage");
    openapiFields.add("BaiduMessage");
    openapiFields.add("DefaultMessage");
    openapiFields.add("DefaultPushNotificationMessage");
    openapiFields.add("EmailMessage");
    openapiFields.add("GCMMessage");
    openapiFields.add("SMSMessage");
    openapiFields.add("VoiceMessage");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to DirectMessageConfiguration
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!DirectMessageConfiguration.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in DirectMessageConfiguration is not found in the empty JSON string", DirectMessageConfiguration.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!DirectMessageConfiguration.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `DirectMessageConfiguration` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // validate the optional field `ADMMessage`
      if (jsonObj.get("ADMMessage") != null && !jsonObj.get("ADMMessage").isJsonNull()) {
        DirectMessageConfigurationADMMessage.validateJsonElement(jsonObj.get("ADMMessage"));
      }
      // validate the optional field `APNSMessage`
      if (jsonObj.get("APNSMessage") != null && !jsonObj.get("APNSMessage").isJsonNull()) {
        DirectMessageConfigurationAPNSMessage.validateJsonElement(jsonObj.get("APNSMessage"));
      }
      // validate the optional field `BaiduMessage`
      if (jsonObj.get("BaiduMessage") != null && !jsonObj.get("BaiduMessage").isJsonNull()) {
        DirectMessageConfigurationBaiduMessage.validateJsonElement(jsonObj.get("BaiduMessage"));
      }
      // validate the optional field `DefaultMessage`
      if (jsonObj.get("DefaultMessage") != null && !jsonObj.get("DefaultMessage").isJsonNull()) {
        DirectMessageConfigurationDefaultMessage.validateJsonElement(jsonObj.get("DefaultMessage"));
      }
      // validate the optional field `DefaultPushNotificationMessage`
      if (jsonObj.get("DefaultPushNotificationMessage") != null && !jsonObj.get("DefaultPushNotificationMessage").isJsonNull()) {
        DirectMessageConfigurationDefaultPushNotificationMessage.validateJsonElement(jsonObj.get("DefaultPushNotificationMessage"));
      }
      // validate the optional field `EmailMessage`
      if (jsonObj.get("EmailMessage") != null && !jsonObj.get("EmailMessage").isJsonNull()) {
        DirectMessageConfigurationEmailMessage.validateJsonElement(jsonObj.get("EmailMessage"));
      }
      // validate the optional field `GCMMessage`
      if (jsonObj.get("GCMMessage") != null && !jsonObj.get("GCMMessage").isJsonNull()) {
        DirectMessageConfigurationGCMMessage.validateJsonElement(jsonObj.get("GCMMessage"));
      }
      // validate the optional field `SMSMessage`
      if (jsonObj.get("SMSMessage") != null && !jsonObj.get("SMSMessage").isJsonNull()) {
        DirectMessageConfigurationSMSMessage.validateJsonElement(jsonObj.get("SMSMessage"));
      }
      // validate the optional field `VoiceMessage`
      if (jsonObj.get("VoiceMessage") != null && !jsonObj.get("VoiceMessage").isJsonNull()) {
        DirectMessageConfigurationVoiceMessage.validateJsonElement(jsonObj.get("VoiceMessage"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!DirectMessageConfiguration.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'DirectMessageConfiguration' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<DirectMessageConfiguration> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(DirectMessageConfiguration.class));

       return (TypeAdapter<T>) new TypeAdapter<DirectMessageConfiguration>() {
           @Override
           public void write(JsonWriter out, DirectMessageConfiguration value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public DirectMessageConfiguration read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of DirectMessageConfiguration given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of DirectMessageConfiguration
   * @throws IOException if the JSON string is invalid with respect to DirectMessageConfiguration
   */
  public static DirectMessageConfiguration fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, DirectMessageConfiguration.class);
  }

  /**
   * Convert an instance of DirectMessageConfiguration to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

