/*
 * Amazon Pinpoint
 * Doc Engage API - Amazon Pinpoint API
 *
 * The version of the OpenAPI document: 2016-12-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;
import org.openapitools.client.model.TemplateConfigurationEmailTemplate;
import org.openapitools.client.model.TemplateConfigurationInAppTemplate;
import org.openapitools.client.model.TemplateConfigurationPushTemplate;
import org.openapitools.client.model.TemplateConfigurationSMSTemplate;
import org.openapitools.client.model.TemplateConfigurationVoiceTemplate;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * SendMessagesRequestMessageRequestTemplateConfiguration
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T12:09:25.655112-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class SendMessagesRequestMessageRequestTemplateConfiguration {
  public static final String SERIALIZED_NAME_EMAIL_TEMPLATE = "EmailTemplate";
  @SerializedName(SERIALIZED_NAME_EMAIL_TEMPLATE)
  private TemplateConfigurationEmailTemplate emailTemplate;

  public static final String SERIALIZED_NAME_PUSH_TEMPLATE = "PushTemplate";
  @SerializedName(SERIALIZED_NAME_PUSH_TEMPLATE)
  private TemplateConfigurationPushTemplate pushTemplate;

  public static final String SERIALIZED_NAME_SM_S_TEMPLATE = "SMSTemplate";
  @SerializedName(SERIALIZED_NAME_SM_S_TEMPLATE)
  private TemplateConfigurationSMSTemplate smSTemplate;

  public static final String SERIALIZED_NAME_VOICE_TEMPLATE = "VoiceTemplate";
  @SerializedName(SERIALIZED_NAME_VOICE_TEMPLATE)
  private TemplateConfigurationVoiceTemplate voiceTemplate;

  public static final String SERIALIZED_NAME_IN_APP_TEMPLATE = "InAppTemplate";
  @SerializedName(SERIALIZED_NAME_IN_APP_TEMPLATE)
  private TemplateConfigurationInAppTemplate inAppTemplate;

  public SendMessagesRequestMessageRequestTemplateConfiguration() {
  }

  public SendMessagesRequestMessageRequestTemplateConfiguration emailTemplate(TemplateConfigurationEmailTemplate emailTemplate) {
    this.emailTemplate = emailTemplate;
    return this;
  }

  /**
   * Get emailTemplate
   * @return emailTemplate
   */
  @javax.annotation.Nullable
  public TemplateConfigurationEmailTemplate getEmailTemplate() {
    return emailTemplate;
  }

  public void setEmailTemplate(TemplateConfigurationEmailTemplate emailTemplate) {
    this.emailTemplate = emailTemplate;
  }


  public SendMessagesRequestMessageRequestTemplateConfiguration pushTemplate(TemplateConfigurationPushTemplate pushTemplate) {
    this.pushTemplate = pushTemplate;
    return this;
  }

  /**
   * Get pushTemplate
   * @return pushTemplate
   */
  @javax.annotation.Nullable
  public TemplateConfigurationPushTemplate getPushTemplate() {
    return pushTemplate;
  }

  public void setPushTemplate(TemplateConfigurationPushTemplate pushTemplate) {
    this.pushTemplate = pushTemplate;
  }


  public SendMessagesRequestMessageRequestTemplateConfiguration smSTemplate(TemplateConfigurationSMSTemplate smSTemplate) {
    this.smSTemplate = smSTemplate;
    return this;
  }

  /**
   * Get smSTemplate
   * @return smSTemplate
   */
  @javax.annotation.Nullable
  public TemplateConfigurationSMSTemplate getSmSTemplate() {
    return smSTemplate;
  }

  public void setSmSTemplate(TemplateConfigurationSMSTemplate smSTemplate) {
    this.smSTemplate = smSTemplate;
  }


  public SendMessagesRequestMessageRequestTemplateConfiguration voiceTemplate(TemplateConfigurationVoiceTemplate voiceTemplate) {
    this.voiceTemplate = voiceTemplate;
    return this;
  }

  /**
   * Get voiceTemplate
   * @return voiceTemplate
   */
  @javax.annotation.Nullable
  public TemplateConfigurationVoiceTemplate getVoiceTemplate() {
    return voiceTemplate;
  }

  public void setVoiceTemplate(TemplateConfigurationVoiceTemplate voiceTemplate) {
    this.voiceTemplate = voiceTemplate;
  }


  public SendMessagesRequestMessageRequestTemplateConfiguration inAppTemplate(TemplateConfigurationInAppTemplate inAppTemplate) {
    this.inAppTemplate = inAppTemplate;
    return this;
  }

  /**
   * Get inAppTemplate
   * @return inAppTemplate
   */
  @javax.annotation.Nullable
  public TemplateConfigurationInAppTemplate getInAppTemplate() {
    return inAppTemplate;
  }

  public void setInAppTemplate(TemplateConfigurationInAppTemplate inAppTemplate) {
    this.inAppTemplate = inAppTemplate;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    SendMessagesRequestMessageRequestTemplateConfiguration sendMessagesRequestMessageRequestTemplateConfiguration = (SendMessagesRequestMessageRequestTemplateConfiguration) o;
    return Objects.equals(this.emailTemplate, sendMessagesRequestMessageRequestTemplateConfiguration.emailTemplate) &&
        Objects.equals(this.pushTemplate, sendMessagesRequestMessageRequestTemplateConfiguration.pushTemplate) &&
        Objects.equals(this.smSTemplate, sendMessagesRequestMessageRequestTemplateConfiguration.smSTemplate) &&
        Objects.equals(this.voiceTemplate, sendMessagesRequestMessageRequestTemplateConfiguration.voiceTemplate) &&
        Objects.equals(this.inAppTemplate, sendMessagesRequestMessageRequestTemplateConfiguration.inAppTemplate);
  }

  @Override
  public int hashCode() {
    return Objects.hash(emailTemplate, pushTemplate, smSTemplate, voiceTemplate, inAppTemplate);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class SendMessagesRequestMessageRequestTemplateConfiguration {\n");
    sb.append("    emailTemplate: ").append(toIndentedString(emailTemplate)).append("\n");
    sb.append("    pushTemplate: ").append(toIndentedString(pushTemplate)).append("\n");
    sb.append("    smSTemplate: ").append(toIndentedString(smSTemplate)).append("\n");
    sb.append("    voiceTemplate: ").append(toIndentedString(voiceTemplate)).append("\n");
    sb.append("    inAppTemplate: ").append(toIndentedString(inAppTemplate)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("EmailTemplate");
    openapiFields.add("PushTemplate");
    openapiFields.add("SMSTemplate");
    openapiFields.add("VoiceTemplate");
    openapiFields.add("InAppTemplate");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to SendMessagesRequestMessageRequestTemplateConfiguration
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!SendMessagesRequestMessageRequestTemplateConfiguration.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in SendMessagesRequestMessageRequestTemplateConfiguration is not found in the empty JSON string", SendMessagesRequestMessageRequestTemplateConfiguration.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!SendMessagesRequestMessageRequestTemplateConfiguration.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `SendMessagesRequestMessageRequestTemplateConfiguration` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // validate the optional field `EmailTemplate`
      if (jsonObj.get("EmailTemplate") != null && !jsonObj.get("EmailTemplate").isJsonNull()) {
        TemplateConfigurationEmailTemplate.validateJsonElement(jsonObj.get("EmailTemplate"));
      }
      // validate the optional field `PushTemplate`
      if (jsonObj.get("PushTemplate") != null && !jsonObj.get("PushTemplate").isJsonNull()) {
        TemplateConfigurationPushTemplate.validateJsonElement(jsonObj.get("PushTemplate"));
      }
      // validate the optional field `SMSTemplate`
      if (jsonObj.get("SMSTemplate") != null && !jsonObj.get("SMSTemplate").isJsonNull()) {
        TemplateConfigurationSMSTemplate.validateJsonElement(jsonObj.get("SMSTemplate"));
      }
      // validate the optional field `VoiceTemplate`
      if (jsonObj.get("VoiceTemplate") != null && !jsonObj.get("VoiceTemplate").isJsonNull()) {
        TemplateConfigurationVoiceTemplate.validateJsonElement(jsonObj.get("VoiceTemplate"));
      }
      // validate the optional field `InAppTemplate`
      if (jsonObj.get("InAppTemplate") != null && !jsonObj.get("InAppTemplate").isJsonNull()) {
        TemplateConfigurationInAppTemplate.validateJsonElement(jsonObj.get("InAppTemplate"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!SendMessagesRequestMessageRequestTemplateConfiguration.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'SendMessagesRequestMessageRequestTemplateConfiguration' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<SendMessagesRequestMessageRequestTemplateConfiguration> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(SendMessagesRequestMessageRequestTemplateConfiguration.class));

       return (TypeAdapter<T>) new TypeAdapter<SendMessagesRequestMessageRequestTemplateConfiguration>() {
           @Override
           public void write(JsonWriter out, SendMessagesRequestMessageRequestTemplateConfiguration value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public SendMessagesRequestMessageRequestTemplateConfiguration read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of SendMessagesRequestMessageRequestTemplateConfiguration given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of SendMessagesRequestMessageRequestTemplateConfiguration
   * @throws IOException if the JSON string is invalid with respect to SendMessagesRequestMessageRequestTemplateConfiguration
   */
  public static SendMessagesRequestMessageRequestTemplateConfiguration fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, SendMessagesRequestMessageRequestTemplateConfiguration.class);
  }

  /**
   * Convert an instance of SendMessagesRequestMessageRequestTemplateConfiguration to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

