/*
 * Amazon Pinpoint
 * Doc Engage API - Amazon Pinpoint API
 *
 * The version of the OpenAPI document: 2016-12-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;
import java.util.Map;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * Provides information about an activity that was performed by a campaign.
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T12:09:25.655112-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class ActivityResponse {
  public static final String SERIALIZED_NAME_APPLICATION_ID = "ApplicationId";
  @SerializedName(SERIALIZED_NAME_APPLICATION_ID)
  private String applicationId;

  public static final String SERIALIZED_NAME_CAMPAIGN_ID = "CampaignId";
  @SerializedName(SERIALIZED_NAME_CAMPAIGN_ID)
  private String campaignId;

  public static final String SERIALIZED_NAME_END = "End";
  @SerializedName(SERIALIZED_NAME_END)
  private String end;

  public static final String SERIALIZED_NAME_ID = "Id";
  @SerializedName(SERIALIZED_NAME_ID)
  private String id;

  public static final String SERIALIZED_NAME_RESULT = "Result";
  @SerializedName(SERIALIZED_NAME_RESULT)
  private String result;

  public static final String SERIALIZED_NAME_SCHEDULED_START = "ScheduledStart";
  @SerializedName(SERIALIZED_NAME_SCHEDULED_START)
  private String scheduledStart;

  public static final String SERIALIZED_NAME_START = "Start";
  @SerializedName(SERIALIZED_NAME_START)
  private String start;

  public static final String SERIALIZED_NAME_STATE = "State";
  @SerializedName(SERIALIZED_NAME_STATE)
  private String state;

  public static final String SERIALIZED_NAME_SUCCESSFUL_ENDPOINT_COUNT = "SuccessfulEndpointCount";
  @SerializedName(SERIALIZED_NAME_SUCCESSFUL_ENDPOINT_COUNT)
  private Integer successfulEndpointCount;

  public static final String SERIALIZED_NAME_TIMEZONES_COMPLETED_COUNT = "TimezonesCompletedCount";
  @SerializedName(SERIALIZED_NAME_TIMEZONES_COMPLETED_COUNT)
  private Integer timezonesCompletedCount;

  public static final String SERIALIZED_NAME_TIMEZONES_TOTAL_COUNT = "TimezonesTotalCount";
  @SerializedName(SERIALIZED_NAME_TIMEZONES_TOTAL_COUNT)
  private Integer timezonesTotalCount;

  public static final String SERIALIZED_NAME_TOTAL_ENDPOINT_COUNT = "TotalEndpointCount";
  @SerializedName(SERIALIZED_NAME_TOTAL_ENDPOINT_COUNT)
  private Integer totalEndpointCount;

  public static final String SERIALIZED_NAME_TREATMENT_ID = "TreatmentId";
  @SerializedName(SERIALIZED_NAME_TREATMENT_ID)
  private String treatmentId;

  public static final String SERIALIZED_NAME_EXECUTION_METRICS = "ExecutionMetrics";
  @SerializedName(SERIALIZED_NAME_EXECUTION_METRICS)
  private Map executionMetrics;

  public ActivityResponse() {
  }

  public ActivityResponse applicationId(String applicationId) {
    this.applicationId = applicationId;
    return this;
  }

  /**
   * Get applicationId
   * @return applicationId
   */
  @javax.annotation.Nonnull
  public String getApplicationId() {
    return applicationId;
  }

  public void setApplicationId(String applicationId) {
    this.applicationId = applicationId;
  }


  public ActivityResponse campaignId(String campaignId) {
    this.campaignId = campaignId;
    return this;
  }

  /**
   * Get campaignId
   * @return campaignId
   */
  @javax.annotation.Nonnull
  public String getCampaignId() {
    return campaignId;
  }

  public void setCampaignId(String campaignId) {
    this.campaignId = campaignId;
  }


  public ActivityResponse end(String end) {
    this.end = end;
    return this;
  }

  /**
   * Get end
   * @return end
   */
  @javax.annotation.Nullable
  public String getEnd() {
    return end;
  }

  public void setEnd(String end) {
    this.end = end;
  }


  public ActivityResponse id(String id) {
    this.id = id;
    return this;
  }

  /**
   * Get id
   * @return id
   */
  @javax.annotation.Nonnull
  public String getId() {
    return id;
  }

  public void setId(String id) {
    this.id = id;
  }


  public ActivityResponse result(String result) {
    this.result = result;
    return this;
  }

  /**
   * Get result
   * @return result
   */
  @javax.annotation.Nullable
  public String getResult() {
    return result;
  }

  public void setResult(String result) {
    this.result = result;
  }


  public ActivityResponse scheduledStart(String scheduledStart) {
    this.scheduledStart = scheduledStart;
    return this;
  }

  /**
   * Get scheduledStart
   * @return scheduledStart
   */
  @javax.annotation.Nullable
  public String getScheduledStart() {
    return scheduledStart;
  }

  public void setScheduledStart(String scheduledStart) {
    this.scheduledStart = scheduledStart;
  }


  public ActivityResponse start(String start) {
    this.start = start;
    return this;
  }

  /**
   * Get start
   * @return start
   */
  @javax.annotation.Nullable
  public String getStart() {
    return start;
  }

  public void setStart(String start) {
    this.start = start;
  }


  public ActivityResponse state(String state) {
    this.state = state;
    return this;
  }

  /**
   * Get state
   * @return state
   */
  @javax.annotation.Nullable
  public String getState() {
    return state;
  }

  public void setState(String state) {
    this.state = state;
  }


  public ActivityResponse successfulEndpointCount(Integer successfulEndpointCount) {
    this.successfulEndpointCount = successfulEndpointCount;
    return this;
  }

  /**
   * Get successfulEndpointCount
   * @return successfulEndpointCount
   */
  @javax.annotation.Nullable
  public Integer getSuccessfulEndpointCount() {
    return successfulEndpointCount;
  }

  public void setSuccessfulEndpointCount(Integer successfulEndpointCount) {
    this.successfulEndpointCount = successfulEndpointCount;
  }


  public ActivityResponse timezonesCompletedCount(Integer timezonesCompletedCount) {
    this.timezonesCompletedCount = timezonesCompletedCount;
    return this;
  }

  /**
   * Get timezonesCompletedCount
   * @return timezonesCompletedCount
   */
  @javax.annotation.Nullable
  public Integer getTimezonesCompletedCount() {
    return timezonesCompletedCount;
  }

  public void setTimezonesCompletedCount(Integer timezonesCompletedCount) {
    this.timezonesCompletedCount = timezonesCompletedCount;
  }


  public ActivityResponse timezonesTotalCount(Integer timezonesTotalCount) {
    this.timezonesTotalCount = timezonesTotalCount;
    return this;
  }

  /**
   * Get timezonesTotalCount
   * @return timezonesTotalCount
   */
  @javax.annotation.Nullable
  public Integer getTimezonesTotalCount() {
    return timezonesTotalCount;
  }

  public void setTimezonesTotalCount(Integer timezonesTotalCount) {
    this.timezonesTotalCount = timezonesTotalCount;
  }


  public ActivityResponse totalEndpointCount(Integer totalEndpointCount) {
    this.totalEndpointCount = totalEndpointCount;
    return this;
  }

  /**
   * Get totalEndpointCount
   * @return totalEndpointCount
   */
  @javax.annotation.Nullable
  public Integer getTotalEndpointCount() {
    return totalEndpointCount;
  }

  public void setTotalEndpointCount(Integer totalEndpointCount) {
    this.totalEndpointCount = totalEndpointCount;
  }


  public ActivityResponse treatmentId(String treatmentId) {
    this.treatmentId = treatmentId;
    return this;
  }

  /**
   * Get treatmentId
   * @return treatmentId
   */
  @javax.annotation.Nullable
  public String getTreatmentId() {
    return treatmentId;
  }

  public void setTreatmentId(String treatmentId) {
    this.treatmentId = treatmentId;
  }


  public ActivityResponse executionMetrics(Map executionMetrics) {
    this.executionMetrics = executionMetrics;
    return this;
  }

  /**
   * Get executionMetrics
   * @return executionMetrics
   */
  @javax.annotation.Nullable
  public Map getExecutionMetrics() {
    return executionMetrics;
  }

  public void setExecutionMetrics(Map executionMetrics) {
    this.executionMetrics = executionMetrics;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ActivityResponse activityResponse = (ActivityResponse) o;
    return Objects.equals(this.applicationId, activityResponse.applicationId) &&
        Objects.equals(this.campaignId, activityResponse.campaignId) &&
        Objects.equals(this.end, activityResponse.end) &&
        Objects.equals(this.id, activityResponse.id) &&
        Objects.equals(this.result, activityResponse.result) &&
        Objects.equals(this.scheduledStart, activityResponse.scheduledStart) &&
        Objects.equals(this.start, activityResponse.start) &&
        Objects.equals(this.state, activityResponse.state) &&
        Objects.equals(this.successfulEndpointCount, activityResponse.successfulEndpointCount) &&
        Objects.equals(this.timezonesCompletedCount, activityResponse.timezonesCompletedCount) &&
        Objects.equals(this.timezonesTotalCount, activityResponse.timezonesTotalCount) &&
        Objects.equals(this.totalEndpointCount, activityResponse.totalEndpointCount) &&
        Objects.equals(this.treatmentId, activityResponse.treatmentId) &&
        Objects.equals(this.executionMetrics, activityResponse.executionMetrics);
  }

  @Override
  public int hashCode() {
    return Objects.hash(applicationId, campaignId, end, id, result, scheduledStart, start, state, successfulEndpointCount, timezonesCompletedCount, timezonesTotalCount, totalEndpointCount, treatmentId, executionMetrics);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ActivityResponse {\n");
    sb.append("    applicationId: ").append(toIndentedString(applicationId)).append("\n");
    sb.append("    campaignId: ").append(toIndentedString(campaignId)).append("\n");
    sb.append("    end: ").append(toIndentedString(end)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    result: ").append(toIndentedString(result)).append("\n");
    sb.append("    scheduledStart: ").append(toIndentedString(scheduledStart)).append("\n");
    sb.append("    start: ").append(toIndentedString(start)).append("\n");
    sb.append("    state: ").append(toIndentedString(state)).append("\n");
    sb.append("    successfulEndpointCount: ").append(toIndentedString(successfulEndpointCount)).append("\n");
    sb.append("    timezonesCompletedCount: ").append(toIndentedString(timezonesCompletedCount)).append("\n");
    sb.append("    timezonesTotalCount: ").append(toIndentedString(timezonesTotalCount)).append("\n");
    sb.append("    totalEndpointCount: ").append(toIndentedString(totalEndpointCount)).append("\n");
    sb.append("    treatmentId: ").append(toIndentedString(treatmentId)).append("\n");
    sb.append("    executionMetrics: ").append(toIndentedString(executionMetrics)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("ApplicationId");
    openapiFields.add("CampaignId");
    openapiFields.add("End");
    openapiFields.add("Id");
    openapiFields.add("Result");
    openapiFields.add("ScheduledStart");
    openapiFields.add("Start");
    openapiFields.add("State");
    openapiFields.add("SuccessfulEndpointCount");
    openapiFields.add("TimezonesCompletedCount");
    openapiFields.add("TimezonesTotalCount");
    openapiFields.add("TotalEndpointCount");
    openapiFields.add("TreatmentId");
    openapiFields.add("ExecutionMetrics");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
    openapiRequiredFields.add("ApplicationId");
    openapiRequiredFields.add("CampaignId");
    openapiRequiredFields.add("Id");
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to ActivityResponse
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!ActivityResponse.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in ActivityResponse is not found in the empty JSON string", ActivityResponse.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!ActivityResponse.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `ActivityResponse` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }

      // check to make sure all required properties/fields are present in the JSON string
      for (String requiredField : ActivityResponse.openapiRequiredFields) {
        if (jsonElement.getAsJsonObject().get(requiredField) == null) {
          throw new IllegalArgumentException(String.format("The required field `%s` is not found in the JSON string: %s", requiredField, jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // validate the required field `ApplicationId`
      String.validateJsonElement(jsonObj.get("ApplicationId"));
      // validate the required field `CampaignId`
      String.validateJsonElement(jsonObj.get("CampaignId"));
      // validate the optional field `End`
      if (jsonObj.get("End") != null && !jsonObj.get("End").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("End"));
      }
      // validate the required field `Id`
      String.validateJsonElement(jsonObj.get("Id"));
      // validate the optional field `Result`
      if (jsonObj.get("Result") != null && !jsonObj.get("Result").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("Result"));
      }
      // validate the optional field `ScheduledStart`
      if (jsonObj.get("ScheduledStart") != null && !jsonObj.get("ScheduledStart").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("ScheduledStart"));
      }
      // validate the optional field `Start`
      if (jsonObj.get("Start") != null && !jsonObj.get("Start").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("Start"));
      }
      // validate the optional field `State`
      if (jsonObj.get("State") != null && !jsonObj.get("State").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("State"));
      }
      // validate the optional field `SuccessfulEndpointCount`
      if (jsonObj.get("SuccessfulEndpointCount") != null && !jsonObj.get("SuccessfulEndpointCount").isJsonNull()) {
        Integer.validateJsonElement(jsonObj.get("SuccessfulEndpointCount"));
      }
      // validate the optional field `TimezonesCompletedCount`
      if (jsonObj.get("TimezonesCompletedCount") != null && !jsonObj.get("TimezonesCompletedCount").isJsonNull()) {
        Integer.validateJsonElement(jsonObj.get("TimezonesCompletedCount"));
      }
      // validate the optional field `TimezonesTotalCount`
      if (jsonObj.get("TimezonesTotalCount") != null && !jsonObj.get("TimezonesTotalCount").isJsonNull()) {
        Integer.validateJsonElement(jsonObj.get("TimezonesTotalCount"));
      }
      // validate the optional field `TotalEndpointCount`
      if (jsonObj.get("TotalEndpointCount") != null && !jsonObj.get("TotalEndpointCount").isJsonNull()) {
        Integer.validateJsonElement(jsonObj.get("TotalEndpointCount"));
      }
      // validate the optional field `TreatmentId`
      if (jsonObj.get("TreatmentId") != null && !jsonObj.get("TreatmentId").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("TreatmentId"));
      }
      // validate the optional field `ExecutionMetrics`
      if (jsonObj.get("ExecutionMetrics") != null && !jsonObj.get("ExecutionMetrics").isJsonNull()) {
        Map.validateJsonElement(jsonObj.get("ExecutionMetrics"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!ActivityResponse.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'ActivityResponse' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<ActivityResponse> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(ActivityResponse.class));

       return (TypeAdapter<T>) new TypeAdapter<ActivityResponse>() {
           @Override
           public void write(JsonWriter out, ActivityResponse value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public ActivityResponse read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of ActivityResponse given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of ActivityResponse
   * @throws IOException if the JSON string is invalid with respect to ActivityResponse
   */
  public static ActivityResponse fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, ActivityResponse.class);
  }

  /**
   * Convert an instance of ActivityResponse to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

