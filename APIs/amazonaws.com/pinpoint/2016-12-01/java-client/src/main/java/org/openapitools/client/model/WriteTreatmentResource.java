/*
 * Amazon Pinpoint
 * Doc Engage API - Amazon Pinpoint API
 *
 * The version of the OpenAPI document: 2016-12-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;
import org.openapitools.client.model.TreatmentResourceCustomDeliveryConfiguration;
import org.openapitools.client.model.TreatmentResourceMessageConfiguration;
import org.openapitools.client.model.TreatmentResourceSchedule;
import org.openapitools.client.model.TreatmentResourceTemplateConfiguration;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * Specifies the settings for a campaign treatment. A &lt;i&gt;treatment&lt;/i&gt; is a variation of a campaign that&#39;s used for A/B testing of a campaign.
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T12:09:25.655112-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class WriteTreatmentResource {
  public static final String SERIALIZED_NAME_CUSTOM_DELIVERY_CONFIGURATION = "CustomDeliveryConfiguration";
  @SerializedName(SERIALIZED_NAME_CUSTOM_DELIVERY_CONFIGURATION)
  private TreatmentResourceCustomDeliveryConfiguration customDeliveryConfiguration;

  public static final String SERIALIZED_NAME_MESSAGE_CONFIGURATION = "MessageConfiguration";
  @SerializedName(SERIALIZED_NAME_MESSAGE_CONFIGURATION)
  private TreatmentResourceMessageConfiguration messageConfiguration;

  public static final String SERIALIZED_NAME_SCHEDULE = "Schedule";
  @SerializedName(SERIALIZED_NAME_SCHEDULE)
  private TreatmentResourceSchedule schedule;

  public static final String SERIALIZED_NAME_SIZE_PERCENT = "SizePercent";
  @SerializedName(SERIALIZED_NAME_SIZE_PERCENT)
  private Integer sizePercent;

  public static final String SERIALIZED_NAME_TEMPLATE_CONFIGURATION = "TemplateConfiguration";
  @SerializedName(SERIALIZED_NAME_TEMPLATE_CONFIGURATION)
  private TreatmentResourceTemplateConfiguration templateConfiguration;

  public static final String SERIALIZED_NAME_TREATMENT_DESCRIPTION = "TreatmentDescription";
  @SerializedName(SERIALIZED_NAME_TREATMENT_DESCRIPTION)
  private String treatmentDescription;

  public static final String SERIALIZED_NAME_TREATMENT_NAME = "TreatmentName";
  @SerializedName(SERIALIZED_NAME_TREATMENT_NAME)
  private String treatmentName;

  public WriteTreatmentResource() {
  }

  public WriteTreatmentResource customDeliveryConfiguration(TreatmentResourceCustomDeliveryConfiguration customDeliveryConfiguration) {
    this.customDeliveryConfiguration = customDeliveryConfiguration;
    return this;
  }

  /**
   * Get customDeliveryConfiguration
   * @return customDeliveryConfiguration
   */
  @javax.annotation.Nullable
  public TreatmentResourceCustomDeliveryConfiguration getCustomDeliveryConfiguration() {
    return customDeliveryConfiguration;
  }

  public void setCustomDeliveryConfiguration(TreatmentResourceCustomDeliveryConfiguration customDeliveryConfiguration) {
    this.customDeliveryConfiguration = customDeliveryConfiguration;
  }


  public WriteTreatmentResource messageConfiguration(TreatmentResourceMessageConfiguration messageConfiguration) {
    this.messageConfiguration = messageConfiguration;
    return this;
  }

  /**
   * Get messageConfiguration
   * @return messageConfiguration
   */
  @javax.annotation.Nullable
  public TreatmentResourceMessageConfiguration getMessageConfiguration() {
    return messageConfiguration;
  }

  public void setMessageConfiguration(TreatmentResourceMessageConfiguration messageConfiguration) {
    this.messageConfiguration = messageConfiguration;
  }


  public WriteTreatmentResource schedule(TreatmentResourceSchedule schedule) {
    this.schedule = schedule;
    return this;
  }

  /**
   * Get schedule
   * @return schedule
   */
  @javax.annotation.Nullable
  public TreatmentResourceSchedule getSchedule() {
    return schedule;
  }

  public void setSchedule(TreatmentResourceSchedule schedule) {
    this.schedule = schedule;
  }


  public WriteTreatmentResource sizePercent(Integer sizePercent) {
    this.sizePercent = sizePercent;
    return this;
  }

  /**
   * Get sizePercent
   * @return sizePercent
   */
  @javax.annotation.Nonnull
  public Integer getSizePercent() {
    return sizePercent;
  }

  public void setSizePercent(Integer sizePercent) {
    this.sizePercent = sizePercent;
  }


  public WriteTreatmentResource templateConfiguration(TreatmentResourceTemplateConfiguration templateConfiguration) {
    this.templateConfiguration = templateConfiguration;
    return this;
  }

  /**
   * Get templateConfiguration
   * @return templateConfiguration
   */
  @javax.annotation.Nullable
  public TreatmentResourceTemplateConfiguration getTemplateConfiguration() {
    return templateConfiguration;
  }

  public void setTemplateConfiguration(TreatmentResourceTemplateConfiguration templateConfiguration) {
    this.templateConfiguration = templateConfiguration;
  }


  public WriteTreatmentResource treatmentDescription(String treatmentDescription) {
    this.treatmentDescription = treatmentDescription;
    return this;
  }

  /**
   * Get treatmentDescription
   * @return treatmentDescription
   */
  @javax.annotation.Nullable
  public String getTreatmentDescription() {
    return treatmentDescription;
  }

  public void setTreatmentDescription(String treatmentDescription) {
    this.treatmentDescription = treatmentDescription;
  }


  public WriteTreatmentResource treatmentName(String treatmentName) {
    this.treatmentName = treatmentName;
    return this;
  }

  /**
   * Get treatmentName
   * @return treatmentName
   */
  @javax.annotation.Nullable
  public String getTreatmentName() {
    return treatmentName;
  }

  public void setTreatmentName(String treatmentName) {
    this.treatmentName = treatmentName;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    WriteTreatmentResource writeTreatmentResource = (WriteTreatmentResource) o;
    return Objects.equals(this.customDeliveryConfiguration, writeTreatmentResource.customDeliveryConfiguration) &&
        Objects.equals(this.messageConfiguration, writeTreatmentResource.messageConfiguration) &&
        Objects.equals(this.schedule, writeTreatmentResource.schedule) &&
        Objects.equals(this.sizePercent, writeTreatmentResource.sizePercent) &&
        Objects.equals(this.templateConfiguration, writeTreatmentResource.templateConfiguration) &&
        Objects.equals(this.treatmentDescription, writeTreatmentResource.treatmentDescription) &&
        Objects.equals(this.treatmentName, writeTreatmentResource.treatmentName);
  }

  @Override
  public int hashCode() {
    return Objects.hash(customDeliveryConfiguration, messageConfiguration, schedule, sizePercent, templateConfiguration, treatmentDescription, treatmentName);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class WriteTreatmentResource {\n");
    sb.append("    customDeliveryConfiguration: ").append(toIndentedString(customDeliveryConfiguration)).append("\n");
    sb.append("    messageConfiguration: ").append(toIndentedString(messageConfiguration)).append("\n");
    sb.append("    schedule: ").append(toIndentedString(schedule)).append("\n");
    sb.append("    sizePercent: ").append(toIndentedString(sizePercent)).append("\n");
    sb.append("    templateConfiguration: ").append(toIndentedString(templateConfiguration)).append("\n");
    sb.append("    treatmentDescription: ").append(toIndentedString(treatmentDescription)).append("\n");
    sb.append("    treatmentName: ").append(toIndentedString(treatmentName)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("CustomDeliveryConfiguration");
    openapiFields.add("MessageConfiguration");
    openapiFields.add("Schedule");
    openapiFields.add("SizePercent");
    openapiFields.add("TemplateConfiguration");
    openapiFields.add("TreatmentDescription");
    openapiFields.add("TreatmentName");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
    openapiRequiredFields.add("SizePercent");
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to WriteTreatmentResource
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!WriteTreatmentResource.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in WriteTreatmentResource is not found in the empty JSON string", WriteTreatmentResource.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!WriteTreatmentResource.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `WriteTreatmentResource` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }

      // check to make sure all required properties/fields are present in the JSON string
      for (String requiredField : WriteTreatmentResource.openapiRequiredFields) {
        if (jsonElement.getAsJsonObject().get(requiredField) == null) {
          throw new IllegalArgumentException(String.format("The required field `%s` is not found in the JSON string: %s", requiredField, jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // validate the optional field `CustomDeliveryConfiguration`
      if (jsonObj.get("CustomDeliveryConfiguration") != null && !jsonObj.get("CustomDeliveryConfiguration").isJsonNull()) {
        TreatmentResourceCustomDeliveryConfiguration.validateJsonElement(jsonObj.get("CustomDeliveryConfiguration"));
      }
      // validate the optional field `MessageConfiguration`
      if (jsonObj.get("MessageConfiguration") != null && !jsonObj.get("MessageConfiguration").isJsonNull()) {
        TreatmentResourceMessageConfiguration.validateJsonElement(jsonObj.get("MessageConfiguration"));
      }
      // validate the optional field `Schedule`
      if (jsonObj.get("Schedule") != null && !jsonObj.get("Schedule").isJsonNull()) {
        TreatmentResourceSchedule.validateJsonElement(jsonObj.get("Schedule"));
      }
      // validate the required field `SizePercent`
      Integer.validateJsonElement(jsonObj.get("SizePercent"));
      // validate the optional field `TemplateConfiguration`
      if (jsonObj.get("TemplateConfiguration") != null && !jsonObj.get("TemplateConfiguration").isJsonNull()) {
        TreatmentResourceTemplateConfiguration.validateJsonElement(jsonObj.get("TemplateConfiguration"));
      }
      // validate the optional field `TreatmentDescription`
      if (jsonObj.get("TreatmentDescription") != null && !jsonObj.get("TreatmentDescription").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("TreatmentDescription"));
      }
      // validate the optional field `TreatmentName`
      if (jsonObj.get("TreatmentName") != null && !jsonObj.get("TreatmentName").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("TreatmentName"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!WriteTreatmentResource.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'WriteTreatmentResource' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<WriteTreatmentResource> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(WriteTreatmentResource.class));

       return (TypeAdapter<T>) new TypeAdapter<WriteTreatmentResource>() {
           @Override
           public void write(JsonWriter out, WriteTreatmentResource value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public WriteTreatmentResource read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of WriteTreatmentResource given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of WriteTreatmentResource
   * @throws IOException if the JSON string is invalid with respect to WriteTreatmentResource
   */
  public static WriteTreatmentResource fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, WriteTreatmentResource.class);
  }

  /**
   * Convert an instance of WriteTreatmentResource to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

