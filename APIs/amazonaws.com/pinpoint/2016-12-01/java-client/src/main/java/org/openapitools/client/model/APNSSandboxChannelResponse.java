/*
 * Amazon Pinpoint
 * Doc Engage API - Amazon Pinpoint API
 *
 * The version of the OpenAPI document: 2016-12-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * Provides information about the status and settings of the APNs (Apple Push Notification service) sandbox channel for an application.
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T12:09:25.655112-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class APNSSandboxChannelResponse {
  public static final String SERIALIZED_NAME_APPLICATION_ID = "ApplicationId";
  @SerializedName(SERIALIZED_NAME_APPLICATION_ID)
  private String applicationId;

  public static final String SERIALIZED_NAME_CREATION_DATE = "CreationDate";
  @SerializedName(SERIALIZED_NAME_CREATION_DATE)
  private String creationDate;

  public static final String SERIALIZED_NAME_DEFAULT_AUTHENTICATION_METHOD = "DefaultAuthenticationMethod";
  @SerializedName(SERIALIZED_NAME_DEFAULT_AUTHENTICATION_METHOD)
  private String defaultAuthenticationMethod;

  public static final String SERIALIZED_NAME_ENABLED = "Enabled";
  @SerializedName(SERIALIZED_NAME_ENABLED)
  private Boolean enabled;

  public static final String SERIALIZED_NAME_HAS_CREDENTIAL = "HasCredential";
  @SerializedName(SERIALIZED_NAME_HAS_CREDENTIAL)
  private Boolean hasCredential;

  public static final String SERIALIZED_NAME_HAS_TOKEN_KEY = "HasTokenKey";
  @SerializedName(SERIALIZED_NAME_HAS_TOKEN_KEY)
  private Boolean hasTokenKey;

  public static final String SERIALIZED_NAME_ID = "Id";
  @SerializedName(SERIALIZED_NAME_ID)
  private String id;

  public static final String SERIALIZED_NAME_IS_ARCHIVED = "IsArchived";
  @SerializedName(SERIALIZED_NAME_IS_ARCHIVED)
  private Boolean isArchived;

  public static final String SERIALIZED_NAME_LAST_MODIFIED_BY = "LastModifiedBy";
  @SerializedName(SERIALIZED_NAME_LAST_MODIFIED_BY)
  private String lastModifiedBy;

  public static final String SERIALIZED_NAME_LAST_MODIFIED_DATE = "LastModifiedDate";
  @SerializedName(SERIALIZED_NAME_LAST_MODIFIED_DATE)
  private String lastModifiedDate;

  public static final String SERIALIZED_NAME_PLATFORM = "Platform";
  @SerializedName(SERIALIZED_NAME_PLATFORM)
  private String platform;

  public static final String SERIALIZED_NAME_VERSION = "Version";
  @SerializedName(SERIALIZED_NAME_VERSION)
  private Integer version;

  public APNSSandboxChannelResponse() {
  }

  public APNSSandboxChannelResponse applicationId(String applicationId) {
    this.applicationId = applicationId;
    return this;
  }

  /**
   * Get applicationId
   * @return applicationId
   */
  @javax.annotation.Nullable
  public String getApplicationId() {
    return applicationId;
  }

  public void setApplicationId(String applicationId) {
    this.applicationId = applicationId;
  }


  public APNSSandboxChannelResponse creationDate(String creationDate) {
    this.creationDate = creationDate;
    return this;
  }

  /**
   * Get creationDate
   * @return creationDate
   */
  @javax.annotation.Nullable
  public String getCreationDate() {
    return creationDate;
  }

  public void setCreationDate(String creationDate) {
    this.creationDate = creationDate;
  }


  public APNSSandboxChannelResponse defaultAuthenticationMethod(String defaultAuthenticationMethod) {
    this.defaultAuthenticationMethod = defaultAuthenticationMethod;
    return this;
  }

  /**
   * Get defaultAuthenticationMethod
   * @return defaultAuthenticationMethod
   */
  @javax.annotation.Nullable
  public String getDefaultAuthenticationMethod() {
    return defaultAuthenticationMethod;
  }

  public void setDefaultAuthenticationMethod(String defaultAuthenticationMethod) {
    this.defaultAuthenticationMethod = defaultAuthenticationMethod;
  }


  public APNSSandboxChannelResponse enabled(Boolean enabled) {
    this.enabled = enabled;
    return this;
  }

  /**
   * Get enabled
   * @return enabled
   */
  @javax.annotation.Nullable
  public Boolean getEnabled() {
    return enabled;
  }

  public void setEnabled(Boolean enabled) {
    this.enabled = enabled;
  }


  public APNSSandboxChannelResponse hasCredential(Boolean hasCredential) {
    this.hasCredential = hasCredential;
    return this;
  }

  /**
   * Get hasCredential
   * @return hasCredential
   */
  @javax.annotation.Nullable
  public Boolean getHasCredential() {
    return hasCredential;
  }

  public void setHasCredential(Boolean hasCredential) {
    this.hasCredential = hasCredential;
  }


  public APNSSandboxChannelResponse hasTokenKey(Boolean hasTokenKey) {
    this.hasTokenKey = hasTokenKey;
    return this;
  }

  /**
   * Get hasTokenKey
   * @return hasTokenKey
   */
  @javax.annotation.Nullable
  public Boolean getHasTokenKey() {
    return hasTokenKey;
  }

  public void setHasTokenKey(Boolean hasTokenKey) {
    this.hasTokenKey = hasTokenKey;
  }


  public APNSSandboxChannelResponse id(String id) {
    this.id = id;
    return this;
  }

  /**
   * Get id
   * @return id
   */
  @javax.annotation.Nullable
  public String getId() {
    return id;
  }

  public void setId(String id) {
    this.id = id;
  }


  public APNSSandboxChannelResponse isArchived(Boolean isArchived) {
    this.isArchived = isArchived;
    return this;
  }

  /**
   * Get isArchived
   * @return isArchived
   */
  @javax.annotation.Nullable
  public Boolean getIsArchived() {
    return isArchived;
  }

  public void setIsArchived(Boolean isArchived) {
    this.isArchived = isArchived;
  }


  public APNSSandboxChannelResponse lastModifiedBy(String lastModifiedBy) {
    this.lastModifiedBy = lastModifiedBy;
    return this;
  }

  /**
   * Get lastModifiedBy
   * @return lastModifiedBy
   */
  @javax.annotation.Nullable
  public String getLastModifiedBy() {
    return lastModifiedBy;
  }

  public void setLastModifiedBy(String lastModifiedBy) {
    this.lastModifiedBy = lastModifiedBy;
  }


  public APNSSandboxChannelResponse lastModifiedDate(String lastModifiedDate) {
    this.lastModifiedDate = lastModifiedDate;
    return this;
  }

  /**
   * Get lastModifiedDate
   * @return lastModifiedDate
   */
  @javax.annotation.Nullable
  public String getLastModifiedDate() {
    return lastModifiedDate;
  }

  public void setLastModifiedDate(String lastModifiedDate) {
    this.lastModifiedDate = lastModifiedDate;
  }


  public APNSSandboxChannelResponse platform(String platform) {
    this.platform = platform;
    return this;
  }

  /**
   * Get platform
   * @return platform
   */
  @javax.annotation.Nonnull
  public String getPlatform() {
    return platform;
  }

  public void setPlatform(String platform) {
    this.platform = platform;
  }


  public APNSSandboxChannelResponse version(Integer version) {
    this.version = version;
    return this;
  }

  /**
   * Get version
   * @return version
   */
  @javax.annotation.Nullable
  public Integer getVersion() {
    return version;
  }

  public void setVersion(Integer version) {
    this.version = version;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    APNSSandboxChannelResponse apNSSandboxChannelResponse = (APNSSandboxChannelResponse) o;
    return Objects.equals(this.applicationId, apNSSandboxChannelResponse.applicationId) &&
        Objects.equals(this.creationDate, apNSSandboxChannelResponse.creationDate) &&
        Objects.equals(this.defaultAuthenticationMethod, apNSSandboxChannelResponse.defaultAuthenticationMethod) &&
        Objects.equals(this.enabled, apNSSandboxChannelResponse.enabled) &&
        Objects.equals(this.hasCredential, apNSSandboxChannelResponse.hasCredential) &&
        Objects.equals(this.hasTokenKey, apNSSandboxChannelResponse.hasTokenKey) &&
        Objects.equals(this.id, apNSSandboxChannelResponse.id) &&
        Objects.equals(this.isArchived, apNSSandboxChannelResponse.isArchived) &&
        Objects.equals(this.lastModifiedBy, apNSSandboxChannelResponse.lastModifiedBy) &&
        Objects.equals(this.lastModifiedDate, apNSSandboxChannelResponse.lastModifiedDate) &&
        Objects.equals(this.platform, apNSSandboxChannelResponse.platform) &&
        Objects.equals(this.version, apNSSandboxChannelResponse.version);
  }

  @Override
  public int hashCode() {
    return Objects.hash(applicationId, creationDate, defaultAuthenticationMethod, enabled, hasCredential, hasTokenKey, id, isArchived, lastModifiedBy, lastModifiedDate, platform, version);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class APNSSandboxChannelResponse {\n");
    sb.append("    applicationId: ").append(toIndentedString(applicationId)).append("\n");
    sb.append("    creationDate: ").append(toIndentedString(creationDate)).append("\n");
    sb.append("    defaultAuthenticationMethod: ").append(toIndentedString(defaultAuthenticationMethod)).append("\n");
    sb.append("    enabled: ").append(toIndentedString(enabled)).append("\n");
    sb.append("    hasCredential: ").append(toIndentedString(hasCredential)).append("\n");
    sb.append("    hasTokenKey: ").append(toIndentedString(hasTokenKey)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    isArchived: ").append(toIndentedString(isArchived)).append("\n");
    sb.append("    lastModifiedBy: ").append(toIndentedString(lastModifiedBy)).append("\n");
    sb.append("    lastModifiedDate: ").append(toIndentedString(lastModifiedDate)).append("\n");
    sb.append("    platform: ").append(toIndentedString(platform)).append("\n");
    sb.append("    version: ").append(toIndentedString(version)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("ApplicationId");
    openapiFields.add("CreationDate");
    openapiFields.add("DefaultAuthenticationMethod");
    openapiFields.add("Enabled");
    openapiFields.add("HasCredential");
    openapiFields.add("HasTokenKey");
    openapiFields.add("Id");
    openapiFields.add("IsArchived");
    openapiFields.add("LastModifiedBy");
    openapiFields.add("LastModifiedDate");
    openapiFields.add("Platform");
    openapiFields.add("Version");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
    openapiRequiredFields.add("Platform");
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to APNSSandboxChannelResponse
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!APNSSandboxChannelResponse.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in APNSSandboxChannelResponse is not found in the empty JSON string", APNSSandboxChannelResponse.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!APNSSandboxChannelResponse.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `APNSSandboxChannelResponse` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }

      // check to make sure all required properties/fields are present in the JSON string
      for (String requiredField : APNSSandboxChannelResponse.openapiRequiredFields) {
        if (jsonElement.getAsJsonObject().get(requiredField) == null) {
          throw new IllegalArgumentException(String.format("The required field `%s` is not found in the JSON string: %s", requiredField, jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // validate the optional field `ApplicationId`
      if (jsonObj.get("ApplicationId") != null && !jsonObj.get("ApplicationId").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("ApplicationId"));
      }
      // validate the optional field `CreationDate`
      if (jsonObj.get("CreationDate") != null && !jsonObj.get("CreationDate").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("CreationDate"));
      }
      // validate the optional field `DefaultAuthenticationMethod`
      if (jsonObj.get("DefaultAuthenticationMethod") != null && !jsonObj.get("DefaultAuthenticationMethod").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("DefaultAuthenticationMethod"));
      }
      // validate the optional field `Enabled`
      if (jsonObj.get("Enabled") != null && !jsonObj.get("Enabled").isJsonNull()) {
        Boolean.validateJsonElement(jsonObj.get("Enabled"));
      }
      // validate the optional field `HasCredential`
      if (jsonObj.get("HasCredential") != null && !jsonObj.get("HasCredential").isJsonNull()) {
        Boolean.validateJsonElement(jsonObj.get("HasCredential"));
      }
      // validate the optional field `HasTokenKey`
      if (jsonObj.get("HasTokenKey") != null && !jsonObj.get("HasTokenKey").isJsonNull()) {
        Boolean.validateJsonElement(jsonObj.get("HasTokenKey"));
      }
      // validate the optional field `Id`
      if (jsonObj.get("Id") != null && !jsonObj.get("Id").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("Id"));
      }
      // validate the optional field `IsArchived`
      if (jsonObj.get("IsArchived") != null && !jsonObj.get("IsArchived").isJsonNull()) {
        Boolean.validateJsonElement(jsonObj.get("IsArchived"));
      }
      // validate the optional field `LastModifiedBy`
      if (jsonObj.get("LastModifiedBy") != null && !jsonObj.get("LastModifiedBy").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("LastModifiedBy"));
      }
      // validate the optional field `LastModifiedDate`
      if (jsonObj.get("LastModifiedDate") != null && !jsonObj.get("LastModifiedDate").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("LastModifiedDate"));
      }
      // validate the required field `Platform`
      String.validateJsonElement(jsonObj.get("Platform"));
      // validate the optional field `Version`
      if (jsonObj.get("Version") != null && !jsonObj.get("Version").isJsonNull()) {
        Integer.validateJsonElement(jsonObj.get("Version"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!APNSSandboxChannelResponse.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'APNSSandboxChannelResponse' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<APNSSandboxChannelResponse> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(APNSSandboxChannelResponse.class));

       return (TypeAdapter<T>) new TypeAdapter<APNSSandboxChannelResponse>() {
           @Override
           public void write(JsonWriter out, APNSSandboxChannelResponse value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public APNSSandboxChannelResponse read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of APNSSandboxChannelResponse given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of APNSSandboxChannelResponse
   * @throws IOException if the JSON string is invalid with respect to APNSSandboxChannelResponse
   */
  public static APNSSandboxChannelResponse fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, APNSSandboxChannelResponse.class);
  }

  /**
   * Convert an instance of APNSSandboxChannelResponse to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

