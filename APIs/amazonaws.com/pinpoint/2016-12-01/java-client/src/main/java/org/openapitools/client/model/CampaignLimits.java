/*
 * Amazon Pinpoint
 * Doc Engage API - Amazon Pinpoint API
 *
 * The version of the OpenAPI document: 2016-12-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * For a campaign, specifies limits on the messages that the campaign can send. For an application, specifies the default limits for messages that campaigns in the application can send.
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T12:09:25.655112-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class CampaignLimits {
  public static final String SERIALIZED_NAME_DAILY = "Daily";
  @SerializedName(SERIALIZED_NAME_DAILY)
  private Integer daily;

  public static final String SERIALIZED_NAME_MAXIMUM_DURATION = "MaximumDuration";
  @SerializedName(SERIALIZED_NAME_MAXIMUM_DURATION)
  private Integer maximumDuration;

  public static final String SERIALIZED_NAME_MESSAGES_PER_SECOND = "MessagesPerSecond";
  @SerializedName(SERIALIZED_NAME_MESSAGES_PER_SECOND)
  private Integer messagesPerSecond;

  public static final String SERIALIZED_NAME_TOTAL = "Total";
  @SerializedName(SERIALIZED_NAME_TOTAL)
  private Integer total;

  public static final String SERIALIZED_NAME_SESSION = "Session";
  @SerializedName(SERIALIZED_NAME_SESSION)
  private Integer session;

  public CampaignLimits() {
  }

  public CampaignLimits daily(Integer daily) {
    this.daily = daily;
    return this;
  }

  /**
   * Get daily
   * @return daily
   */
  @javax.annotation.Nullable
  public Integer getDaily() {
    return daily;
  }

  public void setDaily(Integer daily) {
    this.daily = daily;
  }


  public CampaignLimits maximumDuration(Integer maximumDuration) {
    this.maximumDuration = maximumDuration;
    return this;
  }

  /**
   * Get maximumDuration
   * @return maximumDuration
   */
  @javax.annotation.Nullable
  public Integer getMaximumDuration() {
    return maximumDuration;
  }

  public void setMaximumDuration(Integer maximumDuration) {
    this.maximumDuration = maximumDuration;
  }


  public CampaignLimits messagesPerSecond(Integer messagesPerSecond) {
    this.messagesPerSecond = messagesPerSecond;
    return this;
  }

  /**
   * Get messagesPerSecond
   * @return messagesPerSecond
   */
  @javax.annotation.Nullable
  public Integer getMessagesPerSecond() {
    return messagesPerSecond;
  }

  public void setMessagesPerSecond(Integer messagesPerSecond) {
    this.messagesPerSecond = messagesPerSecond;
  }


  public CampaignLimits total(Integer total) {
    this.total = total;
    return this;
  }

  /**
   * Get total
   * @return total
   */
  @javax.annotation.Nullable
  public Integer getTotal() {
    return total;
  }

  public void setTotal(Integer total) {
    this.total = total;
  }


  public CampaignLimits session(Integer session) {
    this.session = session;
    return this;
  }

  /**
   * Get session
   * @return session
   */
  @javax.annotation.Nullable
  public Integer getSession() {
    return session;
  }

  public void setSession(Integer session) {
    this.session = session;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CampaignLimits campaignLimits = (CampaignLimits) o;
    return Objects.equals(this.daily, campaignLimits.daily) &&
        Objects.equals(this.maximumDuration, campaignLimits.maximumDuration) &&
        Objects.equals(this.messagesPerSecond, campaignLimits.messagesPerSecond) &&
        Objects.equals(this.total, campaignLimits.total) &&
        Objects.equals(this.session, campaignLimits.session);
  }

  @Override
  public int hashCode() {
    return Objects.hash(daily, maximumDuration, messagesPerSecond, total, session);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CampaignLimits {\n");
    sb.append("    daily: ").append(toIndentedString(daily)).append("\n");
    sb.append("    maximumDuration: ").append(toIndentedString(maximumDuration)).append("\n");
    sb.append("    messagesPerSecond: ").append(toIndentedString(messagesPerSecond)).append("\n");
    sb.append("    total: ").append(toIndentedString(total)).append("\n");
    sb.append("    session: ").append(toIndentedString(session)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("Daily");
    openapiFields.add("MaximumDuration");
    openapiFields.add("MessagesPerSecond");
    openapiFields.add("Total");
    openapiFields.add("Session");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to CampaignLimits
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!CampaignLimits.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in CampaignLimits is not found in the empty JSON string", CampaignLimits.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!CampaignLimits.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `CampaignLimits` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // validate the optional field `Daily`
      if (jsonObj.get("Daily") != null && !jsonObj.get("Daily").isJsonNull()) {
        Integer.validateJsonElement(jsonObj.get("Daily"));
      }
      // validate the optional field `MaximumDuration`
      if (jsonObj.get("MaximumDuration") != null && !jsonObj.get("MaximumDuration").isJsonNull()) {
        Integer.validateJsonElement(jsonObj.get("MaximumDuration"));
      }
      // validate the optional field `MessagesPerSecond`
      if (jsonObj.get("MessagesPerSecond") != null && !jsonObj.get("MessagesPerSecond").isJsonNull()) {
        Integer.validateJsonElement(jsonObj.get("MessagesPerSecond"));
      }
      // validate the optional field `Total`
      if (jsonObj.get("Total") != null && !jsonObj.get("Total").isJsonNull()) {
        Integer.validateJsonElement(jsonObj.get("Total"));
      }
      // validate the optional field `Session`
      if (jsonObj.get("Session") != null && !jsonObj.get("Session").isJsonNull()) {
        Integer.validateJsonElement(jsonObj.get("Session"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!CampaignLimits.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'CampaignLimits' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<CampaignLimits> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(CampaignLimits.class));

       return (TypeAdapter<T>) new TypeAdapter<CampaignLimits>() {
           @Override
           public void write(JsonWriter out, CampaignLimits value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public CampaignLimits read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of CampaignLimits given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of CampaignLimits
   * @throws IOException if the JSON string is invalid with respect to CampaignLimits
   */
  public static CampaignLimits fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, CampaignLimits.class);
  }

  /**
   * Convert an instance of CampaignLimits to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

