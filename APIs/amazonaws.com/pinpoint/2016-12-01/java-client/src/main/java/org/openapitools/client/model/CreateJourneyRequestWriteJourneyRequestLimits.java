/*
 * Amazon Pinpoint
 * Doc Engage API - Amazon Pinpoint API
 *
 * The version of the OpenAPI document: 2016-12-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;
import org.openapitools.client.model.JourneyLimitsTimeframeCap;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * CreateJourneyRequestWriteJourneyRequestLimits
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T12:09:25.655112-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class CreateJourneyRequestWriteJourneyRequestLimits {
  public static final String SERIALIZED_NAME_DAILY_CAP = "DailyCap";
  @SerializedName(SERIALIZED_NAME_DAILY_CAP)
  private Integer dailyCap;

  public static final String SERIALIZED_NAME_ENDPOINT_REENTRY_CAP = "EndpointReentryCap";
  @SerializedName(SERIALIZED_NAME_ENDPOINT_REENTRY_CAP)
  private Integer endpointReentryCap;

  public static final String SERIALIZED_NAME_MESSAGES_PER_SECOND = "MessagesPerSecond";
  @SerializedName(SERIALIZED_NAME_MESSAGES_PER_SECOND)
  private Integer messagesPerSecond;

  public static final String SERIALIZED_NAME_ENDPOINT_REENTRY_INTERVAL = "EndpointReentryInterval";
  @SerializedName(SERIALIZED_NAME_ENDPOINT_REENTRY_INTERVAL)
  private String endpointReentryInterval;

  public static final String SERIALIZED_NAME_TIMEFRAME_CAP = "TimeframeCap";
  @SerializedName(SERIALIZED_NAME_TIMEFRAME_CAP)
  private JourneyLimitsTimeframeCap timeframeCap;

  public static final String SERIALIZED_NAME_TOTAL_CAP = "TotalCap";
  @SerializedName(SERIALIZED_NAME_TOTAL_CAP)
  private Integer totalCap;

  public CreateJourneyRequestWriteJourneyRequestLimits() {
  }

  public CreateJourneyRequestWriteJourneyRequestLimits dailyCap(Integer dailyCap) {
    this.dailyCap = dailyCap;
    return this;
  }

  /**
   * Get dailyCap
   * @return dailyCap
   */
  @javax.annotation.Nullable
  public Integer getDailyCap() {
    return dailyCap;
  }

  public void setDailyCap(Integer dailyCap) {
    this.dailyCap = dailyCap;
  }


  public CreateJourneyRequestWriteJourneyRequestLimits endpointReentryCap(Integer endpointReentryCap) {
    this.endpointReentryCap = endpointReentryCap;
    return this;
  }

  /**
   * Get endpointReentryCap
   * @return endpointReentryCap
   */
  @javax.annotation.Nullable
  public Integer getEndpointReentryCap() {
    return endpointReentryCap;
  }

  public void setEndpointReentryCap(Integer endpointReentryCap) {
    this.endpointReentryCap = endpointReentryCap;
  }


  public CreateJourneyRequestWriteJourneyRequestLimits messagesPerSecond(Integer messagesPerSecond) {
    this.messagesPerSecond = messagesPerSecond;
    return this;
  }

  /**
   * Get messagesPerSecond
   * @return messagesPerSecond
   */
  @javax.annotation.Nullable
  public Integer getMessagesPerSecond() {
    return messagesPerSecond;
  }

  public void setMessagesPerSecond(Integer messagesPerSecond) {
    this.messagesPerSecond = messagesPerSecond;
  }


  public CreateJourneyRequestWriteJourneyRequestLimits endpointReentryInterval(String endpointReentryInterval) {
    this.endpointReentryInterval = endpointReentryInterval;
    return this;
  }

  /**
   * Get endpointReentryInterval
   * @return endpointReentryInterval
   */
  @javax.annotation.Nullable
  public String getEndpointReentryInterval() {
    return endpointReentryInterval;
  }

  public void setEndpointReentryInterval(String endpointReentryInterval) {
    this.endpointReentryInterval = endpointReentryInterval;
  }


  public CreateJourneyRequestWriteJourneyRequestLimits timeframeCap(JourneyLimitsTimeframeCap timeframeCap) {
    this.timeframeCap = timeframeCap;
    return this;
  }

  /**
   * Get timeframeCap
   * @return timeframeCap
   */
  @javax.annotation.Nullable
  public JourneyLimitsTimeframeCap getTimeframeCap() {
    return timeframeCap;
  }

  public void setTimeframeCap(JourneyLimitsTimeframeCap timeframeCap) {
    this.timeframeCap = timeframeCap;
  }


  public CreateJourneyRequestWriteJourneyRequestLimits totalCap(Integer totalCap) {
    this.totalCap = totalCap;
    return this;
  }

  /**
   * Get totalCap
   * @return totalCap
   */
  @javax.annotation.Nullable
  public Integer getTotalCap() {
    return totalCap;
  }

  public void setTotalCap(Integer totalCap) {
    this.totalCap = totalCap;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CreateJourneyRequestWriteJourneyRequestLimits createJourneyRequestWriteJourneyRequestLimits = (CreateJourneyRequestWriteJourneyRequestLimits) o;
    return Objects.equals(this.dailyCap, createJourneyRequestWriteJourneyRequestLimits.dailyCap) &&
        Objects.equals(this.endpointReentryCap, createJourneyRequestWriteJourneyRequestLimits.endpointReentryCap) &&
        Objects.equals(this.messagesPerSecond, createJourneyRequestWriteJourneyRequestLimits.messagesPerSecond) &&
        Objects.equals(this.endpointReentryInterval, createJourneyRequestWriteJourneyRequestLimits.endpointReentryInterval) &&
        Objects.equals(this.timeframeCap, createJourneyRequestWriteJourneyRequestLimits.timeframeCap) &&
        Objects.equals(this.totalCap, createJourneyRequestWriteJourneyRequestLimits.totalCap);
  }

  @Override
  public int hashCode() {
    return Objects.hash(dailyCap, endpointReentryCap, messagesPerSecond, endpointReentryInterval, timeframeCap, totalCap);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CreateJourneyRequestWriteJourneyRequestLimits {\n");
    sb.append("    dailyCap: ").append(toIndentedString(dailyCap)).append("\n");
    sb.append("    endpointReentryCap: ").append(toIndentedString(endpointReentryCap)).append("\n");
    sb.append("    messagesPerSecond: ").append(toIndentedString(messagesPerSecond)).append("\n");
    sb.append("    endpointReentryInterval: ").append(toIndentedString(endpointReentryInterval)).append("\n");
    sb.append("    timeframeCap: ").append(toIndentedString(timeframeCap)).append("\n");
    sb.append("    totalCap: ").append(toIndentedString(totalCap)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("DailyCap");
    openapiFields.add("EndpointReentryCap");
    openapiFields.add("MessagesPerSecond");
    openapiFields.add("EndpointReentryInterval");
    openapiFields.add("TimeframeCap");
    openapiFields.add("TotalCap");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to CreateJourneyRequestWriteJourneyRequestLimits
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!CreateJourneyRequestWriteJourneyRequestLimits.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in CreateJourneyRequestWriteJourneyRequestLimits is not found in the empty JSON string", CreateJourneyRequestWriteJourneyRequestLimits.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!CreateJourneyRequestWriteJourneyRequestLimits.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `CreateJourneyRequestWriteJourneyRequestLimits` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // validate the optional field `DailyCap`
      if (jsonObj.get("DailyCap") != null && !jsonObj.get("DailyCap").isJsonNull()) {
        Integer.validateJsonElement(jsonObj.get("DailyCap"));
      }
      // validate the optional field `EndpointReentryCap`
      if (jsonObj.get("EndpointReentryCap") != null && !jsonObj.get("EndpointReentryCap").isJsonNull()) {
        Integer.validateJsonElement(jsonObj.get("EndpointReentryCap"));
      }
      // validate the optional field `MessagesPerSecond`
      if (jsonObj.get("MessagesPerSecond") != null && !jsonObj.get("MessagesPerSecond").isJsonNull()) {
        Integer.validateJsonElement(jsonObj.get("MessagesPerSecond"));
      }
      // validate the optional field `EndpointReentryInterval`
      if (jsonObj.get("EndpointReentryInterval") != null && !jsonObj.get("EndpointReentryInterval").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("EndpointReentryInterval"));
      }
      // validate the optional field `TimeframeCap`
      if (jsonObj.get("TimeframeCap") != null && !jsonObj.get("TimeframeCap").isJsonNull()) {
        JourneyLimitsTimeframeCap.validateJsonElement(jsonObj.get("TimeframeCap"));
      }
      // validate the optional field `TotalCap`
      if (jsonObj.get("TotalCap") != null && !jsonObj.get("TotalCap").isJsonNull()) {
        Integer.validateJsonElement(jsonObj.get("TotalCap"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!CreateJourneyRequestWriteJourneyRequestLimits.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'CreateJourneyRequestWriteJourneyRequestLimits' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<CreateJourneyRequestWriteJourneyRequestLimits> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(CreateJourneyRequestWriteJourneyRequestLimits.class));

       return (TypeAdapter<T>) new TypeAdapter<CreateJourneyRequestWriteJourneyRequestLimits>() {
           @Override
           public void write(JsonWriter out, CreateJourneyRequestWriteJourneyRequestLimits value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public CreateJourneyRequestWriteJourneyRequestLimits read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of CreateJourneyRequestWriteJourneyRequestLimits given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of CreateJourneyRequestWriteJourneyRequestLimits
   * @throws IOException if the JSON string is invalid with respect to CreateJourneyRequestWriteJourneyRequestLimits
   */
  public static CreateJourneyRequestWriteJourneyRequestLimits fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, CreateJourneyRequestWriteJourneyRequestLimits.class);
  }

  /**
   * Convert an instance of CreateJourneyRequestWriteJourneyRequestLimits to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

