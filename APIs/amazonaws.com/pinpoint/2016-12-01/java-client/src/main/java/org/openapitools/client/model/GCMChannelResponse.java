/*
 * Amazon Pinpoint
 * Doc Engage API - Amazon Pinpoint API
 *
 * The version of the OpenAPI document: 2016-12-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * Provides information about the status and settings of the GCM channel for an application. The GCM channel enables Amazon Pinpoint to send push notifications through the Firebase Cloud Messaging (FCM), formerly Google Cloud Messaging (GCM), service.
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T12:09:25.655112-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class GCMChannelResponse {
  public static final String SERIALIZED_NAME_APPLICATION_ID = "ApplicationId";
  @SerializedName(SERIALIZED_NAME_APPLICATION_ID)
  private String applicationId;

  public static final String SERIALIZED_NAME_CREATION_DATE = "CreationDate";
  @SerializedName(SERIALIZED_NAME_CREATION_DATE)
  private String creationDate;

  public static final String SERIALIZED_NAME_CREDENTIAL = "Credential";
  @SerializedName(SERIALIZED_NAME_CREDENTIAL)
  private String credential;

  public static final String SERIALIZED_NAME_DEFAULT_AUTHENTICATION_METHOD = "DefaultAuthenticationMethod";
  @SerializedName(SERIALIZED_NAME_DEFAULT_AUTHENTICATION_METHOD)
  private String defaultAuthenticationMethod;

  public static final String SERIALIZED_NAME_ENABLED = "Enabled";
  @SerializedName(SERIALIZED_NAME_ENABLED)
  private Boolean enabled;

  public static final String SERIALIZED_NAME_HAS_CREDENTIAL = "HasCredential";
  @SerializedName(SERIALIZED_NAME_HAS_CREDENTIAL)
  private Boolean hasCredential;

  public static final String SERIALIZED_NAME_HAS_FCM_SERVICE_CREDENTIALS = "HasFcmServiceCredentials";
  @SerializedName(SERIALIZED_NAME_HAS_FCM_SERVICE_CREDENTIALS)
  private Boolean hasFcmServiceCredentials;

  public static final String SERIALIZED_NAME_ID = "Id";
  @SerializedName(SERIALIZED_NAME_ID)
  private String id;

  public static final String SERIALIZED_NAME_IS_ARCHIVED = "IsArchived";
  @SerializedName(SERIALIZED_NAME_IS_ARCHIVED)
  private Boolean isArchived;

  public static final String SERIALIZED_NAME_LAST_MODIFIED_BY = "LastModifiedBy";
  @SerializedName(SERIALIZED_NAME_LAST_MODIFIED_BY)
  private String lastModifiedBy;

  public static final String SERIALIZED_NAME_LAST_MODIFIED_DATE = "LastModifiedDate";
  @SerializedName(SERIALIZED_NAME_LAST_MODIFIED_DATE)
  private String lastModifiedDate;

  public static final String SERIALIZED_NAME_PLATFORM = "Platform";
  @SerializedName(SERIALIZED_NAME_PLATFORM)
  private String platform;

  public static final String SERIALIZED_NAME_VERSION = "Version";
  @SerializedName(SERIALIZED_NAME_VERSION)
  private Integer version;

  public GCMChannelResponse() {
  }

  public GCMChannelResponse applicationId(String applicationId) {
    this.applicationId = applicationId;
    return this;
  }

  /**
   * Get applicationId
   * @return applicationId
   */
  @javax.annotation.Nullable
  public String getApplicationId() {
    return applicationId;
  }

  public void setApplicationId(String applicationId) {
    this.applicationId = applicationId;
  }


  public GCMChannelResponse creationDate(String creationDate) {
    this.creationDate = creationDate;
    return this;
  }

  /**
   * Get creationDate
   * @return creationDate
   */
  @javax.annotation.Nullable
  public String getCreationDate() {
    return creationDate;
  }

  public void setCreationDate(String creationDate) {
    this.creationDate = creationDate;
  }


  public GCMChannelResponse credential(String credential) {
    this.credential = credential;
    return this;
  }

  /**
   * Get credential
   * @return credential
   */
  @javax.annotation.Nullable
  public String getCredential() {
    return credential;
  }

  public void setCredential(String credential) {
    this.credential = credential;
  }


  public GCMChannelResponse defaultAuthenticationMethod(String defaultAuthenticationMethod) {
    this.defaultAuthenticationMethod = defaultAuthenticationMethod;
    return this;
  }

  /**
   * Get defaultAuthenticationMethod
   * @return defaultAuthenticationMethod
   */
  @javax.annotation.Nullable
  public String getDefaultAuthenticationMethod() {
    return defaultAuthenticationMethod;
  }

  public void setDefaultAuthenticationMethod(String defaultAuthenticationMethod) {
    this.defaultAuthenticationMethod = defaultAuthenticationMethod;
  }


  public GCMChannelResponse enabled(Boolean enabled) {
    this.enabled = enabled;
    return this;
  }

  /**
   * Get enabled
   * @return enabled
   */
  @javax.annotation.Nullable
  public Boolean getEnabled() {
    return enabled;
  }

  public void setEnabled(Boolean enabled) {
    this.enabled = enabled;
  }


  public GCMChannelResponse hasCredential(Boolean hasCredential) {
    this.hasCredential = hasCredential;
    return this;
  }

  /**
   * Get hasCredential
   * @return hasCredential
   */
  @javax.annotation.Nullable
  public Boolean getHasCredential() {
    return hasCredential;
  }

  public void setHasCredential(Boolean hasCredential) {
    this.hasCredential = hasCredential;
  }


  public GCMChannelResponse hasFcmServiceCredentials(Boolean hasFcmServiceCredentials) {
    this.hasFcmServiceCredentials = hasFcmServiceCredentials;
    return this;
  }

  /**
   * Get hasFcmServiceCredentials
   * @return hasFcmServiceCredentials
   */
  @javax.annotation.Nullable
  public Boolean getHasFcmServiceCredentials() {
    return hasFcmServiceCredentials;
  }

  public void setHasFcmServiceCredentials(Boolean hasFcmServiceCredentials) {
    this.hasFcmServiceCredentials = hasFcmServiceCredentials;
  }


  public GCMChannelResponse id(String id) {
    this.id = id;
    return this;
  }

  /**
   * Get id
   * @return id
   */
  @javax.annotation.Nullable
  public String getId() {
    return id;
  }

  public void setId(String id) {
    this.id = id;
  }


  public GCMChannelResponse isArchived(Boolean isArchived) {
    this.isArchived = isArchived;
    return this;
  }

  /**
   * Get isArchived
   * @return isArchived
   */
  @javax.annotation.Nullable
  public Boolean getIsArchived() {
    return isArchived;
  }

  public void setIsArchived(Boolean isArchived) {
    this.isArchived = isArchived;
  }


  public GCMChannelResponse lastModifiedBy(String lastModifiedBy) {
    this.lastModifiedBy = lastModifiedBy;
    return this;
  }

  /**
   * Get lastModifiedBy
   * @return lastModifiedBy
   */
  @javax.annotation.Nullable
  public String getLastModifiedBy() {
    return lastModifiedBy;
  }

  public void setLastModifiedBy(String lastModifiedBy) {
    this.lastModifiedBy = lastModifiedBy;
  }


  public GCMChannelResponse lastModifiedDate(String lastModifiedDate) {
    this.lastModifiedDate = lastModifiedDate;
    return this;
  }

  /**
   * Get lastModifiedDate
   * @return lastModifiedDate
   */
  @javax.annotation.Nullable
  public String getLastModifiedDate() {
    return lastModifiedDate;
  }

  public void setLastModifiedDate(String lastModifiedDate) {
    this.lastModifiedDate = lastModifiedDate;
  }


  public GCMChannelResponse platform(String platform) {
    this.platform = platform;
    return this;
  }

  /**
   * Get platform
   * @return platform
   */
  @javax.annotation.Nonnull
  public String getPlatform() {
    return platform;
  }

  public void setPlatform(String platform) {
    this.platform = platform;
  }


  public GCMChannelResponse version(Integer version) {
    this.version = version;
    return this;
  }

  /**
   * Get version
   * @return version
   */
  @javax.annotation.Nullable
  public Integer getVersion() {
    return version;
  }

  public void setVersion(Integer version) {
    this.version = version;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    GCMChannelResponse gcMChannelResponse = (GCMChannelResponse) o;
    return Objects.equals(this.applicationId, gcMChannelResponse.applicationId) &&
        Objects.equals(this.creationDate, gcMChannelResponse.creationDate) &&
        Objects.equals(this.credential, gcMChannelResponse.credential) &&
        Objects.equals(this.defaultAuthenticationMethod, gcMChannelResponse.defaultAuthenticationMethod) &&
        Objects.equals(this.enabled, gcMChannelResponse.enabled) &&
        Objects.equals(this.hasCredential, gcMChannelResponse.hasCredential) &&
        Objects.equals(this.hasFcmServiceCredentials, gcMChannelResponse.hasFcmServiceCredentials) &&
        Objects.equals(this.id, gcMChannelResponse.id) &&
        Objects.equals(this.isArchived, gcMChannelResponse.isArchived) &&
        Objects.equals(this.lastModifiedBy, gcMChannelResponse.lastModifiedBy) &&
        Objects.equals(this.lastModifiedDate, gcMChannelResponse.lastModifiedDate) &&
        Objects.equals(this.platform, gcMChannelResponse.platform) &&
        Objects.equals(this.version, gcMChannelResponse.version);
  }

  @Override
  public int hashCode() {
    return Objects.hash(applicationId, creationDate, credential, defaultAuthenticationMethod, enabled, hasCredential, hasFcmServiceCredentials, id, isArchived, lastModifiedBy, lastModifiedDate, platform, version);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class GCMChannelResponse {\n");
    sb.append("    applicationId: ").append(toIndentedString(applicationId)).append("\n");
    sb.append("    creationDate: ").append(toIndentedString(creationDate)).append("\n");
    sb.append("    credential: ").append(toIndentedString(credential)).append("\n");
    sb.append("    defaultAuthenticationMethod: ").append(toIndentedString(defaultAuthenticationMethod)).append("\n");
    sb.append("    enabled: ").append(toIndentedString(enabled)).append("\n");
    sb.append("    hasCredential: ").append(toIndentedString(hasCredential)).append("\n");
    sb.append("    hasFcmServiceCredentials: ").append(toIndentedString(hasFcmServiceCredentials)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    isArchived: ").append(toIndentedString(isArchived)).append("\n");
    sb.append("    lastModifiedBy: ").append(toIndentedString(lastModifiedBy)).append("\n");
    sb.append("    lastModifiedDate: ").append(toIndentedString(lastModifiedDate)).append("\n");
    sb.append("    platform: ").append(toIndentedString(platform)).append("\n");
    sb.append("    version: ").append(toIndentedString(version)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("ApplicationId");
    openapiFields.add("CreationDate");
    openapiFields.add("Credential");
    openapiFields.add("DefaultAuthenticationMethod");
    openapiFields.add("Enabled");
    openapiFields.add("HasCredential");
    openapiFields.add("HasFcmServiceCredentials");
    openapiFields.add("Id");
    openapiFields.add("IsArchived");
    openapiFields.add("LastModifiedBy");
    openapiFields.add("LastModifiedDate");
    openapiFields.add("Platform");
    openapiFields.add("Version");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
    openapiRequiredFields.add("Platform");
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to GCMChannelResponse
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!GCMChannelResponse.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in GCMChannelResponse is not found in the empty JSON string", GCMChannelResponse.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!GCMChannelResponse.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `GCMChannelResponse` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }

      // check to make sure all required properties/fields are present in the JSON string
      for (String requiredField : GCMChannelResponse.openapiRequiredFields) {
        if (jsonElement.getAsJsonObject().get(requiredField) == null) {
          throw new IllegalArgumentException(String.format("The required field `%s` is not found in the JSON string: %s", requiredField, jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // validate the optional field `ApplicationId`
      if (jsonObj.get("ApplicationId") != null && !jsonObj.get("ApplicationId").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("ApplicationId"));
      }
      // validate the optional field `CreationDate`
      if (jsonObj.get("CreationDate") != null && !jsonObj.get("CreationDate").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("CreationDate"));
      }
      // validate the optional field `Credential`
      if (jsonObj.get("Credential") != null && !jsonObj.get("Credential").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("Credential"));
      }
      // validate the optional field `DefaultAuthenticationMethod`
      if (jsonObj.get("DefaultAuthenticationMethod") != null && !jsonObj.get("DefaultAuthenticationMethod").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("DefaultAuthenticationMethod"));
      }
      // validate the optional field `Enabled`
      if (jsonObj.get("Enabled") != null && !jsonObj.get("Enabled").isJsonNull()) {
        Boolean.validateJsonElement(jsonObj.get("Enabled"));
      }
      // validate the optional field `HasCredential`
      if (jsonObj.get("HasCredential") != null && !jsonObj.get("HasCredential").isJsonNull()) {
        Boolean.validateJsonElement(jsonObj.get("HasCredential"));
      }
      // validate the optional field `HasFcmServiceCredentials`
      if (jsonObj.get("HasFcmServiceCredentials") != null && !jsonObj.get("HasFcmServiceCredentials").isJsonNull()) {
        Boolean.validateJsonElement(jsonObj.get("HasFcmServiceCredentials"));
      }
      // validate the optional field `Id`
      if (jsonObj.get("Id") != null && !jsonObj.get("Id").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("Id"));
      }
      // validate the optional field `IsArchived`
      if (jsonObj.get("IsArchived") != null && !jsonObj.get("IsArchived").isJsonNull()) {
        Boolean.validateJsonElement(jsonObj.get("IsArchived"));
      }
      // validate the optional field `LastModifiedBy`
      if (jsonObj.get("LastModifiedBy") != null && !jsonObj.get("LastModifiedBy").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("LastModifiedBy"));
      }
      // validate the optional field `LastModifiedDate`
      if (jsonObj.get("LastModifiedDate") != null && !jsonObj.get("LastModifiedDate").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("LastModifiedDate"));
      }
      // validate the required field `Platform`
      String.validateJsonElement(jsonObj.get("Platform"));
      // validate the optional field `Version`
      if (jsonObj.get("Version") != null && !jsonObj.get("Version").isJsonNull()) {
        Integer.validateJsonElement(jsonObj.get("Version"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!GCMChannelResponse.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'GCMChannelResponse' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<GCMChannelResponse> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(GCMChannelResponse.class));

       return (TypeAdapter<T>) new TypeAdapter<GCMChannelResponse>() {
           @Override
           public void write(JsonWriter out, GCMChannelResponse value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public GCMChannelResponse read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of GCMChannelResponse given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of GCMChannelResponse
   * @throws IOException if the JSON string is invalid with respect to GCMChannelResponse
   */
  public static GCMChannelResponse fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, GCMChannelResponse.class);
  }

  /**
   * Convert an instance of GCMChannelResponse to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

