/*
 * Amazon Pinpoint
 * Doc Engage API - Amazon Pinpoint API
 *
 * The version of the OpenAPI document: 2016-12-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;
import java.util.Map;
import org.openapitools.client.model.Action;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * DirectMessageConfigurationAPNSMessage
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T12:09:25.655112-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class DirectMessageConfigurationAPNSMessage {
  public static final String SERIALIZED_NAME_AP_N_S_PUSH_TYPE = "APNSPushType";
  @SerializedName(SERIALIZED_NAME_AP_N_S_PUSH_TYPE)
  private String apNSPushType;

  public static final String SERIALIZED_NAME_ACTION = "Action";
  @SerializedName(SERIALIZED_NAME_ACTION)
  private Action action;

  public static final String SERIALIZED_NAME_BADGE = "Badge";
  @SerializedName(SERIALIZED_NAME_BADGE)
  private Integer badge;

  public static final String SERIALIZED_NAME_BODY = "Body";
  @SerializedName(SERIALIZED_NAME_BODY)
  private String body;

  public static final String SERIALIZED_NAME_CATEGORY = "Category";
  @SerializedName(SERIALIZED_NAME_CATEGORY)
  private String category;

  public static final String SERIALIZED_NAME_COLLAPSE_ID = "CollapseId";
  @SerializedName(SERIALIZED_NAME_COLLAPSE_ID)
  private String collapseId;

  public static final String SERIALIZED_NAME_DATA = "Data";
  @SerializedName(SERIALIZED_NAME_DATA)
  private Map data;

  public static final String SERIALIZED_NAME_MEDIA_URL = "MediaUrl";
  @SerializedName(SERIALIZED_NAME_MEDIA_URL)
  private String mediaUrl;

  public static final String SERIALIZED_NAME_PREFERRED_AUTHENTICATION_METHOD = "PreferredAuthenticationMethod";
  @SerializedName(SERIALIZED_NAME_PREFERRED_AUTHENTICATION_METHOD)
  private String preferredAuthenticationMethod;

  public static final String SERIALIZED_NAME_PRIORITY = "Priority";
  @SerializedName(SERIALIZED_NAME_PRIORITY)
  private String priority;

  public static final String SERIALIZED_NAME_RAW_CONTENT = "RawContent";
  @SerializedName(SERIALIZED_NAME_RAW_CONTENT)
  private String rawContent;

  public static final String SERIALIZED_NAME_SILENT_PUSH = "SilentPush";
  @SerializedName(SERIALIZED_NAME_SILENT_PUSH)
  private Boolean silentPush;

  public static final String SERIALIZED_NAME_SOUND = "Sound";
  @SerializedName(SERIALIZED_NAME_SOUND)
  private String sound;

  public static final String SERIALIZED_NAME_SUBSTITUTIONS = "Substitutions";
  @SerializedName(SERIALIZED_NAME_SUBSTITUTIONS)
  private Map substitutions;

  public static final String SERIALIZED_NAME_THREAD_ID = "ThreadId";
  @SerializedName(SERIALIZED_NAME_THREAD_ID)
  private String threadId;

  public static final String SERIALIZED_NAME_TIME_TO_LIVE = "TimeToLive";
  @SerializedName(SERIALIZED_NAME_TIME_TO_LIVE)
  private Integer timeToLive;

  public static final String SERIALIZED_NAME_TITLE = "Title";
  @SerializedName(SERIALIZED_NAME_TITLE)
  private String title;

  public static final String SERIALIZED_NAME_URL = "Url";
  @SerializedName(SERIALIZED_NAME_URL)
  private String url;

  public DirectMessageConfigurationAPNSMessage() {
  }

  public DirectMessageConfigurationAPNSMessage apNSPushType(String apNSPushType) {
    this.apNSPushType = apNSPushType;
    return this;
  }

  /**
   * Get apNSPushType
   * @return apNSPushType
   */
  @javax.annotation.Nullable
  public String getApNSPushType() {
    return apNSPushType;
  }

  public void setApNSPushType(String apNSPushType) {
    this.apNSPushType = apNSPushType;
  }


  public DirectMessageConfigurationAPNSMessage action(Action action) {
    this.action = action;
    return this;
  }

  /**
   * Get action
   * @return action
   */
  @javax.annotation.Nullable
  public Action getAction() {
    return action;
  }

  public void setAction(Action action) {
    this.action = action;
  }


  public DirectMessageConfigurationAPNSMessage badge(Integer badge) {
    this.badge = badge;
    return this;
  }

  /**
   * Get badge
   * @return badge
   */
  @javax.annotation.Nullable
  public Integer getBadge() {
    return badge;
  }

  public void setBadge(Integer badge) {
    this.badge = badge;
  }


  public DirectMessageConfigurationAPNSMessage body(String body) {
    this.body = body;
    return this;
  }

  /**
   * Get body
   * @return body
   */
  @javax.annotation.Nullable
  public String getBody() {
    return body;
  }

  public void setBody(String body) {
    this.body = body;
  }


  public DirectMessageConfigurationAPNSMessage category(String category) {
    this.category = category;
    return this;
  }

  /**
   * Get category
   * @return category
   */
  @javax.annotation.Nullable
  public String getCategory() {
    return category;
  }

  public void setCategory(String category) {
    this.category = category;
  }


  public DirectMessageConfigurationAPNSMessage collapseId(String collapseId) {
    this.collapseId = collapseId;
    return this;
  }

  /**
   * Get collapseId
   * @return collapseId
   */
  @javax.annotation.Nullable
  public String getCollapseId() {
    return collapseId;
  }

  public void setCollapseId(String collapseId) {
    this.collapseId = collapseId;
  }


  public DirectMessageConfigurationAPNSMessage data(Map data) {
    this.data = data;
    return this;
  }

  /**
   * Get data
   * @return data
   */
  @javax.annotation.Nullable
  public Map getData() {
    return data;
  }

  public void setData(Map data) {
    this.data = data;
  }


  public DirectMessageConfigurationAPNSMessage mediaUrl(String mediaUrl) {
    this.mediaUrl = mediaUrl;
    return this;
  }

  /**
   * Get mediaUrl
   * @return mediaUrl
   */
  @javax.annotation.Nullable
  public String getMediaUrl() {
    return mediaUrl;
  }

  public void setMediaUrl(String mediaUrl) {
    this.mediaUrl = mediaUrl;
  }


  public DirectMessageConfigurationAPNSMessage preferredAuthenticationMethod(String preferredAuthenticationMethod) {
    this.preferredAuthenticationMethod = preferredAuthenticationMethod;
    return this;
  }

  /**
   * Get preferredAuthenticationMethod
   * @return preferredAuthenticationMethod
   */
  @javax.annotation.Nullable
  public String getPreferredAuthenticationMethod() {
    return preferredAuthenticationMethod;
  }

  public void setPreferredAuthenticationMethod(String preferredAuthenticationMethod) {
    this.preferredAuthenticationMethod = preferredAuthenticationMethod;
  }


  public DirectMessageConfigurationAPNSMessage priority(String priority) {
    this.priority = priority;
    return this;
  }

  /**
   * Get priority
   * @return priority
   */
  @javax.annotation.Nullable
  public String getPriority() {
    return priority;
  }

  public void setPriority(String priority) {
    this.priority = priority;
  }


  public DirectMessageConfigurationAPNSMessage rawContent(String rawContent) {
    this.rawContent = rawContent;
    return this;
  }

  /**
   * Get rawContent
   * @return rawContent
   */
  @javax.annotation.Nullable
  public String getRawContent() {
    return rawContent;
  }

  public void setRawContent(String rawContent) {
    this.rawContent = rawContent;
  }


  public DirectMessageConfigurationAPNSMessage silentPush(Boolean silentPush) {
    this.silentPush = silentPush;
    return this;
  }

  /**
   * Get silentPush
   * @return silentPush
   */
  @javax.annotation.Nullable
  public Boolean getSilentPush() {
    return silentPush;
  }

  public void setSilentPush(Boolean silentPush) {
    this.silentPush = silentPush;
  }


  public DirectMessageConfigurationAPNSMessage sound(String sound) {
    this.sound = sound;
    return this;
  }

  /**
   * Get sound
   * @return sound
   */
  @javax.annotation.Nullable
  public String getSound() {
    return sound;
  }

  public void setSound(String sound) {
    this.sound = sound;
  }


  public DirectMessageConfigurationAPNSMessage substitutions(Map substitutions) {
    this.substitutions = substitutions;
    return this;
  }

  /**
   * Get substitutions
   * @return substitutions
   */
  @javax.annotation.Nullable
  public Map getSubstitutions() {
    return substitutions;
  }

  public void setSubstitutions(Map substitutions) {
    this.substitutions = substitutions;
  }


  public DirectMessageConfigurationAPNSMessage threadId(String threadId) {
    this.threadId = threadId;
    return this;
  }

  /**
   * Get threadId
   * @return threadId
   */
  @javax.annotation.Nullable
  public String getThreadId() {
    return threadId;
  }

  public void setThreadId(String threadId) {
    this.threadId = threadId;
  }


  public DirectMessageConfigurationAPNSMessage timeToLive(Integer timeToLive) {
    this.timeToLive = timeToLive;
    return this;
  }

  /**
   * Get timeToLive
   * @return timeToLive
   */
  @javax.annotation.Nullable
  public Integer getTimeToLive() {
    return timeToLive;
  }

  public void setTimeToLive(Integer timeToLive) {
    this.timeToLive = timeToLive;
  }


  public DirectMessageConfigurationAPNSMessage title(String title) {
    this.title = title;
    return this;
  }

  /**
   * Get title
   * @return title
   */
  @javax.annotation.Nullable
  public String getTitle() {
    return title;
  }

  public void setTitle(String title) {
    this.title = title;
  }


  public DirectMessageConfigurationAPNSMessage url(String url) {
    this.url = url;
    return this;
  }

  /**
   * Get url
   * @return url
   */
  @javax.annotation.Nullable
  public String getUrl() {
    return url;
  }

  public void setUrl(String url) {
    this.url = url;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    DirectMessageConfigurationAPNSMessage directMessageConfigurationAPNSMessage = (DirectMessageConfigurationAPNSMessage) o;
    return Objects.equals(this.apNSPushType, directMessageConfigurationAPNSMessage.apNSPushType) &&
        Objects.equals(this.action, directMessageConfigurationAPNSMessage.action) &&
        Objects.equals(this.badge, directMessageConfigurationAPNSMessage.badge) &&
        Objects.equals(this.body, directMessageConfigurationAPNSMessage.body) &&
        Objects.equals(this.category, directMessageConfigurationAPNSMessage.category) &&
        Objects.equals(this.collapseId, directMessageConfigurationAPNSMessage.collapseId) &&
        Objects.equals(this.data, directMessageConfigurationAPNSMessage.data) &&
        Objects.equals(this.mediaUrl, directMessageConfigurationAPNSMessage.mediaUrl) &&
        Objects.equals(this.preferredAuthenticationMethod, directMessageConfigurationAPNSMessage.preferredAuthenticationMethod) &&
        Objects.equals(this.priority, directMessageConfigurationAPNSMessage.priority) &&
        Objects.equals(this.rawContent, directMessageConfigurationAPNSMessage.rawContent) &&
        Objects.equals(this.silentPush, directMessageConfigurationAPNSMessage.silentPush) &&
        Objects.equals(this.sound, directMessageConfigurationAPNSMessage.sound) &&
        Objects.equals(this.substitutions, directMessageConfigurationAPNSMessage.substitutions) &&
        Objects.equals(this.threadId, directMessageConfigurationAPNSMessage.threadId) &&
        Objects.equals(this.timeToLive, directMessageConfigurationAPNSMessage.timeToLive) &&
        Objects.equals(this.title, directMessageConfigurationAPNSMessage.title) &&
        Objects.equals(this.url, directMessageConfigurationAPNSMessage.url);
  }

  @Override
  public int hashCode() {
    return Objects.hash(apNSPushType, action, badge, body, category, collapseId, data, mediaUrl, preferredAuthenticationMethod, priority, rawContent, silentPush, sound, substitutions, threadId, timeToLive, title, url);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class DirectMessageConfigurationAPNSMessage {\n");
    sb.append("    apNSPushType: ").append(toIndentedString(apNSPushType)).append("\n");
    sb.append("    action: ").append(toIndentedString(action)).append("\n");
    sb.append("    badge: ").append(toIndentedString(badge)).append("\n");
    sb.append("    body: ").append(toIndentedString(body)).append("\n");
    sb.append("    category: ").append(toIndentedString(category)).append("\n");
    sb.append("    collapseId: ").append(toIndentedString(collapseId)).append("\n");
    sb.append("    data: ").append(toIndentedString(data)).append("\n");
    sb.append("    mediaUrl: ").append(toIndentedString(mediaUrl)).append("\n");
    sb.append("    preferredAuthenticationMethod: ").append(toIndentedString(preferredAuthenticationMethod)).append("\n");
    sb.append("    priority: ").append(toIndentedString(priority)).append("\n");
    sb.append("    rawContent: ").append(toIndentedString(rawContent)).append("\n");
    sb.append("    silentPush: ").append(toIndentedString(silentPush)).append("\n");
    sb.append("    sound: ").append(toIndentedString(sound)).append("\n");
    sb.append("    substitutions: ").append(toIndentedString(substitutions)).append("\n");
    sb.append("    threadId: ").append(toIndentedString(threadId)).append("\n");
    sb.append("    timeToLive: ").append(toIndentedString(timeToLive)).append("\n");
    sb.append("    title: ").append(toIndentedString(title)).append("\n");
    sb.append("    url: ").append(toIndentedString(url)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("APNSPushType");
    openapiFields.add("Action");
    openapiFields.add("Badge");
    openapiFields.add("Body");
    openapiFields.add("Category");
    openapiFields.add("CollapseId");
    openapiFields.add("Data");
    openapiFields.add("MediaUrl");
    openapiFields.add("PreferredAuthenticationMethod");
    openapiFields.add("Priority");
    openapiFields.add("RawContent");
    openapiFields.add("SilentPush");
    openapiFields.add("Sound");
    openapiFields.add("Substitutions");
    openapiFields.add("ThreadId");
    openapiFields.add("TimeToLive");
    openapiFields.add("Title");
    openapiFields.add("Url");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to DirectMessageConfigurationAPNSMessage
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!DirectMessageConfigurationAPNSMessage.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in DirectMessageConfigurationAPNSMessage is not found in the empty JSON string", DirectMessageConfigurationAPNSMessage.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!DirectMessageConfigurationAPNSMessage.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `DirectMessageConfigurationAPNSMessage` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // validate the optional field `APNSPushType`
      if (jsonObj.get("APNSPushType") != null && !jsonObj.get("APNSPushType").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("APNSPushType"));
      }
      // validate the optional field `Action`
      if (jsonObj.get("Action") != null && !jsonObj.get("Action").isJsonNull()) {
        Action.validateJsonElement(jsonObj.get("Action"));
      }
      // validate the optional field `Badge`
      if (jsonObj.get("Badge") != null && !jsonObj.get("Badge").isJsonNull()) {
        Integer.validateJsonElement(jsonObj.get("Badge"));
      }
      // validate the optional field `Body`
      if (jsonObj.get("Body") != null && !jsonObj.get("Body").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("Body"));
      }
      // validate the optional field `Category`
      if (jsonObj.get("Category") != null && !jsonObj.get("Category").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("Category"));
      }
      // validate the optional field `CollapseId`
      if (jsonObj.get("CollapseId") != null && !jsonObj.get("CollapseId").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("CollapseId"));
      }
      // validate the optional field `Data`
      if (jsonObj.get("Data") != null && !jsonObj.get("Data").isJsonNull()) {
        Map.validateJsonElement(jsonObj.get("Data"));
      }
      // validate the optional field `MediaUrl`
      if (jsonObj.get("MediaUrl") != null && !jsonObj.get("MediaUrl").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("MediaUrl"));
      }
      // validate the optional field `PreferredAuthenticationMethod`
      if (jsonObj.get("PreferredAuthenticationMethod") != null && !jsonObj.get("PreferredAuthenticationMethod").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("PreferredAuthenticationMethod"));
      }
      // validate the optional field `Priority`
      if (jsonObj.get("Priority") != null && !jsonObj.get("Priority").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("Priority"));
      }
      // validate the optional field `RawContent`
      if (jsonObj.get("RawContent") != null && !jsonObj.get("RawContent").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("RawContent"));
      }
      // validate the optional field `SilentPush`
      if (jsonObj.get("SilentPush") != null && !jsonObj.get("SilentPush").isJsonNull()) {
        Boolean.validateJsonElement(jsonObj.get("SilentPush"));
      }
      // validate the optional field `Sound`
      if (jsonObj.get("Sound") != null && !jsonObj.get("Sound").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("Sound"));
      }
      // validate the optional field `Substitutions`
      if (jsonObj.get("Substitutions") != null && !jsonObj.get("Substitutions").isJsonNull()) {
        Map.validateJsonElement(jsonObj.get("Substitutions"));
      }
      // validate the optional field `ThreadId`
      if (jsonObj.get("ThreadId") != null && !jsonObj.get("ThreadId").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("ThreadId"));
      }
      // validate the optional field `TimeToLive`
      if (jsonObj.get("TimeToLive") != null && !jsonObj.get("TimeToLive").isJsonNull()) {
        Integer.validateJsonElement(jsonObj.get("TimeToLive"));
      }
      // validate the optional field `Title`
      if (jsonObj.get("Title") != null && !jsonObj.get("Title").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("Title"));
      }
      // validate the optional field `Url`
      if (jsonObj.get("Url") != null && !jsonObj.get("Url").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("Url"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!DirectMessageConfigurationAPNSMessage.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'DirectMessageConfigurationAPNSMessage' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<DirectMessageConfigurationAPNSMessage> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(DirectMessageConfigurationAPNSMessage.class));

       return (TypeAdapter<T>) new TypeAdapter<DirectMessageConfigurationAPNSMessage>() {
           @Override
           public void write(JsonWriter out, DirectMessageConfigurationAPNSMessage value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public DirectMessageConfigurationAPNSMessage read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of DirectMessageConfigurationAPNSMessage given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of DirectMessageConfigurationAPNSMessage
   * @throws IOException if the JSON string is invalid with respect to DirectMessageConfigurationAPNSMessage
   */
  public static DirectMessageConfigurationAPNSMessage fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, DirectMessageConfigurationAPNSMessage.class);
  }

  /**
   * Convert an instance of DirectMessageConfigurationAPNSMessage to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

