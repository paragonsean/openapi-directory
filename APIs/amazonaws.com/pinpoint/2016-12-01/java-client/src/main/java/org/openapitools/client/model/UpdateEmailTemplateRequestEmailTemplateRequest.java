/*
 * Amazon Pinpoint
 * Doc Engage API - Amazon Pinpoint API
 *
 * The version of the OpenAPI document: 2016-12-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;
import java.util.Map;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * Specifies the content and settings for a message template that can be used in messages that are sent through the email channel.
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T12:09:25.655112-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class UpdateEmailTemplateRequestEmailTemplateRequest {
  public static final String SERIALIZED_NAME_DEFAULT_SUBSTITUTIONS = "DefaultSubstitutions";
  @SerializedName(SERIALIZED_NAME_DEFAULT_SUBSTITUTIONS)
  private String defaultSubstitutions;

  public static final String SERIALIZED_NAME_HTML_PART = "HtmlPart";
  @SerializedName(SERIALIZED_NAME_HTML_PART)
  private String htmlPart;

  public static final String SERIALIZED_NAME_RECOMMENDER_ID = "RecommenderId";
  @SerializedName(SERIALIZED_NAME_RECOMMENDER_ID)
  private String recommenderId;

  public static final String SERIALIZED_NAME_SUBJECT = "Subject";
  @SerializedName(SERIALIZED_NAME_SUBJECT)
  private String subject;

  public static final String SERIALIZED_NAME_TAGS = "tags";
  @SerializedName(SERIALIZED_NAME_TAGS)
  private Map tags;

  public static final String SERIALIZED_NAME_TEMPLATE_DESCRIPTION = "TemplateDescription";
  @SerializedName(SERIALIZED_NAME_TEMPLATE_DESCRIPTION)
  private String templateDescription;

  public static final String SERIALIZED_NAME_TEXT_PART = "TextPart";
  @SerializedName(SERIALIZED_NAME_TEXT_PART)
  private String textPart;

  public UpdateEmailTemplateRequestEmailTemplateRequest() {
  }

  public UpdateEmailTemplateRequestEmailTemplateRequest defaultSubstitutions(String defaultSubstitutions) {
    this.defaultSubstitutions = defaultSubstitutions;
    return this;
  }

  /**
   * Get defaultSubstitutions
   * @return defaultSubstitutions
   */
  @javax.annotation.Nullable
  public String getDefaultSubstitutions() {
    return defaultSubstitutions;
  }

  public void setDefaultSubstitutions(String defaultSubstitutions) {
    this.defaultSubstitutions = defaultSubstitutions;
  }


  public UpdateEmailTemplateRequestEmailTemplateRequest htmlPart(String htmlPart) {
    this.htmlPart = htmlPart;
    return this;
  }

  /**
   * Get htmlPart
   * @return htmlPart
   */
  @javax.annotation.Nullable
  public String getHtmlPart() {
    return htmlPart;
  }

  public void setHtmlPart(String htmlPart) {
    this.htmlPart = htmlPart;
  }


  public UpdateEmailTemplateRequestEmailTemplateRequest recommenderId(String recommenderId) {
    this.recommenderId = recommenderId;
    return this;
  }

  /**
   * Get recommenderId
   * @return recommenderId
   */
  @javax.annotation.Nullable
  public String getRecommenderId() {
    return recommenderId;
  }

  public void setRecommenderId(String recommenderId) {
    this.recommenderId = recommenderId;
  }


  public UpdateEmailTemplateRequestEmailTemplateRequest subject(String subject) {
    this.subject = subject;
    return this;
  }

  /**
   * Get subject
   * @return subject
   */
  @javax.annotation.Nullable
  public String getSubject() {
    return subject;
  }

  public void setSubject(String subject) {
    this.subject = subject;
  }


  public UpdateEmailTemplateRequestEmailTemplateRequest tags(Map tags) {
    this.tags = tags;
    return this;
  }

  /**
   * Get tags
   * @return tags
   */
  @javax.annotation.Nullable
  public Map getTags() {
    return tags;
  }

  public void setTags(Map tags) {
    this.tags = tags;
  }


  public UpdateEmailTemplateRequestEmailTemplateRequest templateDescription(String templateDescription) {
    this.templateDescription = templateDescription;
    return this;
  }

  /**
   * Get templateDescription
   * @return templateDescription
   */
  @javax.annotation.Nullable
  public String getTemplateDescription() {
    return templateDescription;
  }

  public void setTemplateDescription(String templateDescription) {
    this.templateDescription = templateDescription;
  }


  public UpdateEmailTemplateRequestEmailTemplateRequest textPart(String textPart) {
    this.textPart = textPart;
    return this;
  }

  /**
   * Get textPart
   * @return textPart
   */
  @javax.annotation.Nullable
  public String getTextPart() {
    return textPart;
  }

  public void setTextPart(String textPart) {
    this.textPart = textPart;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    UpdateEmailTemplateRequestEmailTemplateRequest updateEmailTemplateRequestEmailTemplateRequest = (UpdateEmailTemplateRequestEmailTemplateRequest) o;
    return Objects.equals(this.defaultSubstitutions, updateEmailTemplateRequestEmailTemplateRequest.defaultSubstitutions) &&
        Objects.equals(this.htmlPart, updateEmailTemplateRequestEmailTemplateRequest.htmlPart) &&
        Objects.equals(this.recommenderId, updateEmailTemplateRequestEmailTemplateRequest.recommenderId) &&
        Objects.equals(this.subject, updateEmailTemplateRequestEmailTemplateRequest.subject) &&
        Objects.equals(this.tags, updateEmailTemplateRequestEmailTemplateRequest.tags) &&
        Objects.equals(this.templateDescription, updateEmailTemplateRequestEmailTemplateRequest.templateDescription) &&
        Objects.equals(this.textPart, updateEmailTemplateRequestEmailTemplateRequest.textPart);
  }

  @Override
  public int hashCode() {
    return Objects.hash(defaultSubstitutions, htmlPart, recommenderId, subject, tags, templateDescription, textPart);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class UpdateEmailTemplateRequestEmailTemplateRequest {\n");
    sb.append("    defaultSubstitutions: ").append(toIndentedString(defaultSubstitutions)).append("\n");
    sb.append("    htmlPart: ").append(toIndentedString(htmlPart)).append("\n");
    sb.append("    recommenderId: ").append(toIndentedString(recommenderId)).append("\n");
    sb.append("    subject: ").append(toIndentedString(subject)).append("\n");
    sb.append("    tags: ").append(toIndentedString(tags)).append("\n");
    sb.append("    templateDescription: ").append(toIndentedString(templateDescription)).append("\n");
    sb.append("    textPart: ").append(toIndentedString(textPart)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("DefaultSubstitutions");
    openapiFields.add("HtmlPart");
    openapiFields.add("RecommenderId");
    openapiFields.add("Subject");
    openapiFields.add("tags");
    openapiFields.add("TemplateDescription");
    openapiFields.add("TextPart");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to UpdateEmailTemplateRequestEmailTemplateRequest
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!UpdateEmailTemplateRequestEmailTemplateRequest.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in UpdateEmailTemplateRequestEmailTemplateRequest is not found in the empty JSON string", UpdateEmailTemplateRequestEmailTemplateRequest.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!UpdateEmailTemplateRequestEmailTemplateRequest.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `UpdateEmailTemplateRequestEmailTemplateRequest` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // validate the optional field `DefaultSubstitutions`
      if (jsonObj.get("DefaultSubstitutions") != null && !jsonObj.get("DefaultSubstitutions").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("DefaultSubstitutions"));
      }
      // validate the optional field `HtmlPart`
      if (jsonObj.get("HtmlPart") != null && !jsonObj.get("HtmlPart").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("HtmlPart"));
      }
      // validate the optional field `RecommenderId`
      if (jsonObj.get("RecommenderId") != null && !jsonObj.get("RecommenderId").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("RecommenderId"));
      }
      // validate the optional field `Subject`
      if (jsonObj.get("Subject") != null && !jsonObj.get("Subject").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("Subject"));
      }
      // validate the optional field `tags`
      if (jsonObj.get("tags") != null && !jsonObj.get("tags").isJsonNull()) {
        Map.validateJsonElement(jsonObj.get("tags"));
      }
      // validate the optional field `TemplateDescription`
      if (jsonObj.get("TemplateDescription") != null && !jsonObj.get("TemplateDescription").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("TemplateDescription"));
      }
      // validate the optional field `TextPart`
      if (jsonObj.get("TextPart") != null && !jsonObj.get("TextPart").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("TextPart"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!UpdateEmailTemplateRequestEmailTemplateRequest.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'UpdateEmailTemplateRequestEmailTemplateRequest' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<UpdateEmailTemplateRequestEmailTemplateRequest> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(UpdateEmailTemplateRequestEmailTemplateRequest.class));

       return (TypeAdapter<T>) new TypeAdapter<UpdateEmailTemplateRequestEmailTemplateRequest>() {
           @Override
           public void write(JsonWriter out, UpdateEmailTemplateRequestEmailTemplateRequest value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public UpdateEmailTemplateRequestEmailTemplateRequest read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of UpdateEmailTemplateRequestEmailTemplateRequest given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of UpdateEmailTemplateRequestEmailTemplateRequest
   * @throws IOException if the JSON string is invalid with respect to UpdateEmailTemplateRequestEmailTemplateRequest
   */
  public static UpdateEmailTemplateRequestEmailTemplateRequest fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, UpdateEmailTemplateRequestEmailTemplateRequest.class);
  }

  /**
   * Convert an instance of UpdateEmailTemplateRequestEmailTemplateRequest to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

