/*
 * Amazon Pinpoint
 * Doc Engage API - Amazon Pinpoint API
 *
 * The version of the OpenAPI document: 2016-12-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;
import org.openapitools.client.model.InAppCampaignScheduleEventFilter;
import org.openapitools.client.model.InAppCampaignScheduleQuietTime;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * Schedule of the campaign.
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T12:09:25.655112-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class InAppCampaignSchedule {
  public static final String SERIALIZED_NAME_END_DATE = "EndDate";
  @SerializedName(SERIALIZED_NAME_END_DATE)
  private String endDate;

  public static final String SERIALIZED_NAME_EVENT_FILTER = "EventFilter";
  @SerializedName(SERIALIZED_NAME_EVENT_FILTER)
  private InAppCampaignScheduleEventFilter eventFilter;

  public static final String SERIALIZED_NAME_QUIET_TIME = "QuietTime";
  @SerializedName(SERIALIZED_NAME_QUIET_TIME)
  private InAppCampaignScheduleQuietTime quietTime;

  public InAppCampaignSchedule() {
  }

  public InAppCampaignSchedule endDate(String endDate) {
    this.endDate = endDate;
    return this;
  }

  /**
   * Get endDate
   * @return endDate
   */
  @javax.annotation.Nullable
  public String getEndDate() {
    return endDate;
  }

  public void setEndDate(String endDate) {
    this.endDate = endDate;
  }


  public InAppCampaignSchedule eventFilter(InAppCampaignScheduleEventFilter eventFilter) {
    this.eventFilter = eventFilter;
    return this;
  }

  /**
   * Get eventFilter
   * @return eventFilter
   */
  @javax.annotation.Nullable
  public InAppCampaignScheduleEventFilter getEventFilter() {
    return eventFilter;
  }

  public void setEventFilter(InAppCampaignScheduleEventFilter eventFilter) {
    this.eventFilter = eventFilter;
  }


  public InAppCampaignSchedule quietTime(InAppCampaignScheduleQuietTime quietTime) {
    this.quietTime = quietTime;
    return this;
  }

  /**
   * Get quietTime
   * @return quietTime
   */
  @javax.annotation.Nullable
  public InAppCampaignScheduleQuietTime getQuietTime() {
    return quietTime;
  }

  public void setQuietTime(InAppCampaignScheduleQuietTime quietTime) {
    this.quietTime = quietTime;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    InAppCampaignSchedule inAppCampaignSchedule = (InAppCampaignSchedule) o;
    return Objects.equals(this.endDate, inAppCampaignSchedule.endDate) &&
        Objects.equals(this.eventFilter, inAppCampaignSchedule.eventFilter) &&
        Objects.equals(this.quietTime, inAppCampaignSchedule.quietTime);
  }

  @Override
  public int hashCode() {
    return Objects.hash(endDate, eventFilter, quietTime);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class InAppCampaignSchedule {\n");
    sb.append("    endDate: ").append(toIndentedString(endDate)).append("\n");
    sb.append("    eventFilter: ").append(toIndentedString(eventFilter)).append("\n");
    sb.append("    quietTime: ").append(toIndentedString(quietTime)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("EndDate");
    openapiFields.add("EventFilter");
    openapiFields.add("QuietTime");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to InAppCampaignSchedule
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!InAppCampaignSchedule.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in InAppCampaignSchedule is not found in the empty JSON string", InAppCampaignSchedule.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!InAppCampaignSchedule.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `InAppCampaignSchedule` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // validate the optional field `EndDate`
      if (jsonObj.get("EndDate") != null && !jsonObj.get("EndDate").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("EndDate"));
      }
      // validate the optional field `EventFilter`
      if (jsonObj.get("EventFilter") != null && !jsonObj.get("EventFilter").isJsonNull()) {
        InAppCampaignScheduleEventFilter.validateJsonElement(jsonObj.get("EventFilter"));
      }
      // validate the optional field `QuietTime`
      if (jsonObj.get("QuietTime") != null && !jsonObj.get("QuietTime").isJsonNull()) {
        InAppCampaignScheduleQuietTime.validateJsonElement(jsonObj.get("QuietTime"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!InAppCampaignSchedule.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'InAppCampaignSchedule' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<InAppCampaignSchedule> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(InAppCampaignSchedule.class));

       return (TypeAdapter<T>) new TypeAdapter<InAppCampaignSchedule>() {
           @Override
           public void write(JsonWriter out, InAppCampaignSchedule value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public InAppCampaignSchedule read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of InAppCampaignSchedule given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of InAppCampaignSchedule
   * @throws IOException if the JSON string is invalid with respect to InAppCampaignSchedule
   */
  public static InAppCampaignSchedule fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, InAppCampaignSchedule.class);
  }

  /**
   * Convert an instance of InAppCampaignSchedule to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

