openapi: 3.0.0
info:
  contact:
    email: mike.ralphson@gmail.com
    name: Mike Ralphson
    url: https://github.com/mermade/aws2openapi
    x-twitter: PermittedSoc
  description: Doc Engage API - Amazon Pinpoint API
  license:
    name: Apache 2.0 License
    url: http://www.apache.org/licenses/
  termsOfService: https://aws.amazon.com/service-terms/
  title: Amazon Pinpoint
  version: 2016-12-01
  x-release: v4
  x-logo:
    url: https://twitter.com/awscloud/profile_image?size=original
    backgroundColor: '#FFFFFF'
  x-providerName: amazonaws.com
  x-serviceName: pinpoint
  x-aws-signingName: mobiletargeting
  x-origin:
  - contentType: application/json
    url: https://raw.githubusercontent.com/aws/aws-sdk-js/master/apis/pinpoint-2016-12-01.normal.json
    converter:
      url: https://github.com/mermade/aws2openapi
      version: 1.0.0
    x-apisguru-driver: external
  x-apiClientRegistration:
    url: https://portal.aws.amazon.com/gp/aws/developer/registration/index.html?nc2=h_ct
  x-apisguru-categories:
  - cloud
  x-preferred: true
externalDocs:
  description: Amazon Web Services documentation
  url: https://docs.aws.amazon.com/pinpoint/
servers:
- description: The Amazon Pinpoint multi-region endpoint
  url: "http://pinpoint.{region}.amazonaws.com"
  variables:
    region:
      default: us-east-1
      description: The AWS region
      enum:
      - us-east-1
      - us-east-2
      - us-west-1
      - us-west-2
      - us-gov-west-1
      - us-gov-east-1
      - ca-central-1
      - eu-north-1
      - eu-west-1
      - eu-west-2
      - eu-west-3
      - eu-central-1
      - eu-south-1
      - af-south-1
      - ap-northeast-1
      - ap-northeast-2
      - ap-northeast-3
      - ap-southeast-1
      - ap-southeast-2
      - ap-east-1
      - ap-south-1
      - sa-east-1
      - me-south-1
- description: The Amazon Pinpoint multi-region endpoint
  url: "https://pinpoint.{region}.amazonaws.com"
  variables:
    region:
      default: us-east-1
      description: The AWS region
      enum:
      - us-east-1
      - us-east-2
      - us-west-1
      - us-west-2
      - us-gov-west-1
      - us-gov-east-1
      - ca-central-1
      - eu-north-1
      - eu-west-1
      - eu-west-2
      - eu-west-3
      - eu-central-1
      - eu-south-1
      - af-south-1
      - ap-northeast-1
      - ap-northeast-2
      - ap-northeast-3
      - ap-southeast-1
      - ap-southeast-2
      - ap-east-1
      - ap-south-1
      - sa-east-1
      - me-south-1
- description: The Amazon Pinpoint endpoint for China (Beijing) and China (Ningxia)
  url: "http://pinpoint.{region}.amazonaws.com.cn"
  variables:
    region:
      default: cn-north-1
      description: The AWS region
      enum:
      - cn-north-1
      - cn-northwest-1
- description: The Amazon Pinpoint endpoint for China (Beijing) and China (Ningxia)
  url: "https://pinpoint.{region}.amazonaws.com.cn"
  variables:
    region:
      default: cn-north-1
      description: The AWS region
      enum:
      - cn-north-1
      - cn-northwest-1
security:
- hmac: []
paths:
  /v1/apps:
    get:
      description: Retrieves information about all the applications that are associated
        with your Amazon Pinpoint account.
      operationId: GetApps
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: "The maximum number of items to include in each page of a paginated\
          \ response. This parameter is not supported for application, campaign, and\
          \ journey metrics."
        explode: true
        in: query
        name: page-size
        required: false
        schema:
          type: string
        style: form
      - description: The NextToken string that specifies which page of results to
          return in a paginated response.
        explode: true
        in: query
        name: token
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetAppsResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
          description: BadRequestException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
          description: InternalServerErrorException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PayloadTooLargeException'
          description: PayloadTooLargeException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
          description: ForbiddenException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
          description: NotFoundException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MethodNotAllowedException'
          description: MethodNotAllowedException
        "486":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
          description: TooManyRequestsException
      x-accepts:
      - application/json
    post:
      description: ' <p>Creates an application.</p>'
      operationId: CreateApp
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateApp_request'
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateAppResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
          description: BadRequestException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
          description: InternalServerErrorException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PayloadTooLargeException'
          description: PayloadTooLargeException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
          description: ForbiddenException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
          description: NotFoundException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MethodNotAllowedException'
          description: MethodNotAllowedException
        "486":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
          description: TooManyRequestsException
      x-content-type: application/json
      x-accepts:
      - application/json
  /v1/apps/{application-id}/campaigns:
    get:
      description: "Retrieves information about the status, configuration, and other\
        \ settings for all the campaigns that are associated with an application."
      operationId: GetCampaigns
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The unique identifier for the application. This identifier is
          displayed as the <b>Project ID</b> on the Amazon Pinpoint console.
        explode: false
        in: path
        name: application-id
        required: true
        schema:
          type: string
        style: simple
      - description: "The maximum number of items to include in each page of a paginated\
          \ response. This parameter is not supported for application, campaign, and\
          \ journey metrics."
        explode: true
        in: query
        name: page-size
        required: false
        schema:
          type: string
        style: form
      - description: The NextToken string that specifies which page of results to
          return in a paginated response.
        explode: true
        in: query
        name: token
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetCampaignsResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
          description: BadRequestException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
          description: InternalServerErrorException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PayloadTooLargeException'
          description: PayloadTooLargeException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
          description: ForbiddenException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
          description: NotFoundException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MethodNotAllowedException'
          description: MethodNotAllowedException
        "486":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
          description: TooManyRequestsException
      x-accepts:
      - application/json
    post:
      description: Creates a new campaign for an application or updates the settings
        of an existing campaign for an application.
      operationId: CreateCampaign
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The unique identifier for the application. This identifier is
          displayed as the <b>Project ID</b> on the Amazon Pinpoint console.
        explode: false
        in: path
        name: application-id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateCampaign_request'
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateCampaignResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
          description: BadRequestException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
          description: InternalServerErrorException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PayloadTooLargeException'
          description: PayloadTooLargeException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
          description: ForbiddenException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
          description: NotFoundException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MethodNotAllowedException'
          description: MethodNotAllowedException
        "486":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
          description: TooManyRequestsException
      x-content-type: application/json
      x-accepts:
      - application/json
  /v1/templates/{template-name}/email:
    delete:
      description: Deletes a message template for messages that were sent through
        the email channel.
      operationId: DeleteEmailTemplate
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: "The name of the message template. A template name must start\
          \ with an alphanumeric character and can contain a maximum of 128 characters.\
          \ The characters can be alphanumeric characters, underscores (_), or hyphens\
          \ (-). Template names are case sensitive."
        explode: false
        in: path
        name: template-name
        required: true
        schema:
          type: string
        style: simple
      - description: "<p>The unique identifier for the version of the message template\
          \ to update, retrieve information about, or delete. To retrieve identifiers\
          \ and other information for all the versions of a template, use the <link\
          \  linkend=\"templates-template-name-template-type-versions\">Template Versions</link>\
          \ resource.</p> <p>If specified, this value must match the identifier for\
          \ an existing template version. If specified for an update operation, this\
          \ value must match the identifier for the latest existing version of the\
          \ template. This restriction helps ensure that race conditions don't occur.</p>\
          \ <p>If you don't specify a value for this parameter, Amazon Pinpoint does\
          \ the following:</p> <ul><li><p>For a get operation, retrieves information\
          \ about the active version of the template.</p></li> <li><p>For an update\
          \ operation, saves the updates to (overwrites) the latest existing version\
          \ of the template, if the create-new-version parameter isn't used or is\
          \ set to false.</p></li> <li><p>For a delete operation, deletes the template,\
          \ including all versions of the template.</p></li></ul>"
        explode: true
        in: query
        name: version
        required: false
        schema:
          type: string
        style: form
      responses:
        "202":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteEmailTemplateResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
          description: BadRequestException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
          description: InternalServerErrorException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PayloadTooLargeException'
          description: PayloadTooLargeException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
          description: ForbiddenException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
          description: NotFoundException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MethodNotAllowedException'
          description: MethodNotAllowedException
        "486":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
          description: TooManyRequestsException
      x-accepts:
      - application/json
    get:
      description: Retrieves the content and settings of a message template for messages
        that are sent through the email channel.
      operationId: GetEmailTemplate
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: "The name of the message template. A template name must start\
          \ with an alphanumeric character and can contain a maximum of 128 characters.\
          \ The characters can be alphanumeric characters, underscores (_), or hyphens\
          \ (-). Template names are case sensitive."
        explode: false
        in: path
        name: template-name
        required: true
        schema:
          type: string
        style: simple
      - description: "<p>The unique identifier for the version of the message template\
          \ to update, retrieve information about, or delete. To retrieve identifiers\
          \ and other information for all the versions of a template, use the <link\
          \  linkend=\"templates-template-name-template-type-versions\">Template Versions</link>\
          \ resource.</p> <p>If specified, this value must match the identifier for\
          \ an existing template version. If specified for an update operation, this\
          \ value must match the identifier for the latest existing version of the\
          \ template. This restriction helps ensure that race conditions don't occur.</p>\
          \ <p>If you don't specify a value for this parameter, Amazon Pinpoint does\
          \ the following:</p> <ul><li><p>For a get operation, retrieves information\
          \ about the active version of the template.</p></li> <li><p>For an update\
          \ operation, saves the updates to (overwrites) the latest existing version\
          \ of the template, if the create-new-version parameter isn't used or is\
          \ set to false.</p></li> <li><p>For a delete operation, deletes the template,\
          \ including all versions of the template.</p></li></ul>"
        explode: true
        in: query
        name: version
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetEmailTemplateResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
          description: BadRequestException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
          description: InternalServerErrorException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PayloadTooLargeException'
          description: PayloadTooLargeException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
          description: ForbiddenException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
          description: NotFoundException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MethodNotAllowedException'
          description: MethodNotAllowedException
        "486":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
          description: TooManyRequestsException
      x-accepts:
      - application/json
    post:
      description: Creates a message template for messages that are sent through the
        email channel.
      operationId: CreateEmailTemplate
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: "The name of the message template. A template name must start\
          \ with an alphanumeric character and can contain a maximum of 128 characters.\
          \ The characters can be alphanumeric characters, underscores (_), or hyphens\
          \ (-). Template names are case sensitive."
        explode: false
        in: path
        name: template-name
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateEmailTemplate_request'
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateEmailTemplateResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MethodNotAllowedException'
          description: MethodNotAllowedException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
          description: TooManyRequestsException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
          description: BadRequestException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
          description: InternalServerErrorException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
          description: ForbiddenException
      x-content-type: application/json
      x-accepts:
      - application/json
    put:
      description: Updates an existing message template for messages that are sent
        through the email channel.
      operationId: UpdateEmailTemplate
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: "<p>Specifies whether to save the updates as a new version of\
          \ the message template. Valid values are: true, save the updates as a new\
          \ version; and, false, save the updates to (overwrite) the latest existing\
          \ version of the template.</p> <p>If you don't specify a value for this\
          \ parameter, Amazon Pinpoint saves the updates to (overwrites) the latest\
          \ existing version of the template. If you specify a value of true for this\
          \ parameter, don't specify a value for the version parameter. Otherwise,\
          \ an error will occur.</p>"
        explode: true
        in: query
        name: create-new-version
        required: false
        schema:
          type: boolean
        style: form
      - description: "The name of the message template. A template name must start\
          \ with an alphanumeric character and can contain a maximum of 128 characters.\
          \ The characters can be alphanumeric characters, underscores (_), or hyphens\
          \ (-). Template names are case sensitive."
        explode: false
        in: path
        name: template-name
        required: true
        schema:
          type: string
        style: simple
      - description: "<p>The unique identifier for the version of the message template\
          \ to update, retrieve information about, or delete. To retrieve identifiers\
          \ and other information for all the versions of a template, use the <link\
          \  linkend=\"templates-template-name-template-type-versions\">Template Versions</link>\
          \ resource.</p> <p>If specified, this value must match the identifier for\
          \ an existing template version. If specified for an update operation, this\
          \ value must match the identifier for the latest existing version of the\
          \ template. This restriction helps ensure that race conditions don't occur.</p>\
          \ <p>If you don't specify a value for this parameter, Amazon Pinpoint does\
          \ the following:</p> <ul><li><p>For a get operation, retrieves information\
          \ about the active version of the template.</p></li> <li><p>For an update\
          \ operation, saves the updates to (overwrites) the latest existing version\
          \ of the template, if the create-new-version parameter isn't used or is\
          \ set to false.</p></li> <li><p>For a delete operation, deletes the template,\
          \ including all versions of the template.</p></li></ul>"
        explode: true
        in: query
        name: version
        required: false
        schema:
          type: string
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateEmailTemplate_request'
        required: true
      responses:
        "202":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateEmailTemplateResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
          description: BadRequestException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
          description: InternalServerErrorException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PayloadTooLargeException'
          description: PayloadTooLargeException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
          description: ForbiddenException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
          description: NotFoundException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MethodNotAllowedException'
          description: MethodNotAllowedException
        "486":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
          description: TooManyRequestsException
      x-content-type: application/json
      x-accepts:
      - application/json
  /v1/apps/{application-id}/jobs/export:
    get:
      description: Retrieves information about the status and settings of all the
        export jobs for an application.
      operationId: GetExportJobs
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The unique identifier for the application. This identifier is
          displayed as the <b>Project ID</b> on the Amazon Pinpoint console.
        explode: false
        in: path
        name: application-id
        required: true
        schema:
          type: string
        style: simple
      - description: "The maximum number of items to include in each page of a paginated\
          \ response. This parameter is not supported for application, campaign, and\
          \ journey metrics."
        explode: true
        in: query
        name: page-size
        required: false
        schema:
          type: string
        style: form
      - description: The NextToken string that specifies which page of results to
          return in a paginated response.
        explode: true
        in: query
        name: token
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetExportJobsResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
          description: BadRequestException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
          description: InternalServerErrorException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PayloadTooLargeException'
          description: PayloadTooLargeException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
          description: ForbiddenException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
          description: NotFoundException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MethodNotAllowedException'
          description: MethodNotAllowedException
        "486":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
          description: TooManyRequestsException
      x-accepts:
      - application/json
    post:
      description: Creates an export job for an application.
      operationId: CreateExportJob
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The unique identifier for the application. This identifier is
          displayed as the <b>Project ID</b> on the Amazon Pinpoint console.
        explode: false
        in: path
        name: application-id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateExportJob_request'
        required: true
      responses:
        "202":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateExportJobResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
          description: BadRequestException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
          description: InternalServerErrorException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PayloadTooLargeException'
          description: PayloadTooLargeException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
          description: ForbiddenException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
          description: NotFoundException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MethodNotAllowedException'
          description: MethodNotAllowedException
        "486":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
          description: TooManyRequestsException
      x-content-type: application/json
      x-accepts:
      - application/json
  /v1/apps/{application-id}/jobs/import:
    get:
      description: Retrieves information about the status and settings of all the
        import jobs for an application.
      operationId: GetImportJobs
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The unique identifier for the application. This identifier is
          displayed as the <b>Project ID</b> on the Amazon Pinpoint console.
        explode: false
        in: path
        name: application-id
        required: true
        schema:
          type: string
        style: simple
      - description: "The maximum number of items to include in each page of a paginated\
          \ response. This parameter is not supported for application, campaign, and\
          \ journey metrics."
        explode: true
        in: query
        name: page-size
        required: false
        schema:
          type: string
        style: form
      - description: The NextToken string that specifies which page of results to
          return in a paginated response.
        explode: true
        in: query
        name: token
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetImportJobsResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
          description: BadRequestException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
          description: InternalServerErrorException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PayloadTooLargeException'
          description: PayloadTooLargeException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
          description: ForbiddenException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
          description: NotFoundException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MethodNotAllowedException'
          description: MethodNotAllowedException
        "486":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
          description: TooManyRequestsException
      x-accepts:
      - application/json
    post:
      description: Creates an import job for an application.
      operationId: CreateImportJob
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The unique identifier for the application. This identifier is
          displayed as the <b>Project ID</b> on the Amazon Pinpoint console.
        explode: false
        in: path
        name: application-id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateImportJob_request'
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateImportJobResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
          description: BadRequestException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
          description: InternalServerErrorException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PayloadTooLargeException'
          description: PayloadTooLargeException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
          description: ForbiddenException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
          description: NotFoundException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MethodNotAllowedException'
          description: MethodNotAllowedException
        "486":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
          description: TooManyRequestsException
      x-content-type: application/json
      x-accepts:
      - application/json
  /v1/templates/{template-name}/inapp:
    delete:
      description: Deletes a message template for messages sent using the in-app message
        channel.
      operationId: DeleteInAppTemplate
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: "The name of the message template. A template name must start\
          \ with an alphanumeric character and can contain a maximum of 128 characters.\
          \ The characters can be alphanumeric characters, underscores (_), or hyphens\
          \ (-). Template names are case sensitive."
        explode: false
        in: path
        name: template-name
        required: true
        schema:
          type: string
        style: simple
      - description: "<p>The unique identifier for the version of the message template\
          \ to update, retrieve information about, or delete. To retrieve identifiers\
          \ and other information for all the versions of a template, use the <link\
          \  linkend=\"templates-template-name-template-type-versions\">Template Versions</link>\
          \ resource.</p> <p>If specified, this value must match the identifier for\
          \ an existing template version. If specified for an update operation, this\
          \ value must match the identifier for the latest existing version of the\
          \ template. This restriction helps ensure that race conditions don't occur.</p>\
          \ <p>If you don't specify a value for this parameter, Amazon Pinpoint does\
          \ the following:</p> <ul><li><p>For a get operation, retrieves information\
          \ about the active version of the template.</p></li> <li><p>For an update\
          \ operation, saves the updates to (overwrites) the latest existing version\
          \ of the template, if the create-new-version parameter isn't used or is\
          \ set to false.</p></li> <li><p>For a delete operation, deletes the template,\
          \ including all versions of the template.</p></li></ul>"
        explode: true
        in: query
        name: version
        required: false
        schema:
          type: string
        style: form
      responses:
        "202":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteInAppTemplateResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
          description: BadRequestException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
          description: InternalServerErrorException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PayloadTooLargeException'
          description: PayloadTooLargeException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
          description: ForbiddenException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
          description: NotFoundException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MethodNotAllowedException'
          description: MethodNotAllowedException
        "486":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
          description: TooManyRequestsException
      x-accepts:
      - application/json
    get:
      description: Retrieves the content and settings of a message template for messages
        sent through the in-app channel.
      operationId: GetInAppTemplate
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: "The name of the message template. A template name must start\
          \ with an alphanumeric character and can contain a maximum of 128 characters.\
          \ The characters can be alphanumeric characters, underscores (_), or hyphens\
          \ (-). Template names are case sensitive."
        explode: false
        in: path
        name: template-name
        required: true
        schema:
          type: string
        style: simple
      - description: "<p>The unique identifier for the version of the message template\
          \ to update, retrieve information about, or delete. To retrieve identifiers\
          \ and other information for all the versions of a template, use the <link\
          \  linkend=\"templates-template-name-template-type-versions\">Template Versions</link>\
          \ resource.</p> <p>If specified, this value must match the identifier for\
          \ an existing template version. If specified for an update operation, this\
          \ value must match the identifier for the latest existing version of the\
          \ template. This restriction helps ensure that race conditions don't occur.</p>\
          \ <p>If you don't specify a value for this parameter, Amazon Pinpoint does\
          \ the following:</p> <ul><li><p>For a get operation, retrieves information\
          \ about the active version of the template.</p></li> <li><p>For an update\
          \ operation, saves the updates to (overwrites) the latest existing version\
          \ of the template, if the create-new-version parameter isn't used or is\
          \ set to false.</p></li> <li><p>For a delete operation, deletes the template,\
          \ including all versions of the template.</p></li></ul>"
        explode: true
        in: query
        name: version
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetInAppTemplateResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
          description: BadRequestException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
          description: InternalServerErrorException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PayloadTooLargeException'
          description: PayloadTooLargeException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
          description: ForbiddenException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
          description: NotFoundException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MethodNotAllowedException'
          description: MethodNotAllowedException
        "486":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
          description: TooManyRequestsException
      x-accepts:
      - application/json
    post:
      description: Creates a new message template for messages using the in-app message
        channel.
      operationId: CreateInAppTemplate
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: "The name of the message template. A template name must start\
          \ with an alphanumeric character and can contain a maximum of 128 characters.\
          \ The characters can be alphanumeric characters, underscores (_), or hyphens\
          \ (-). Template names are case sensitive."
        explode: false
        in: path
        name: template-name
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateInAppTemplate_request'
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateInAppTemplateResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MethodNotAllowedException'
          description: MethodNotAllowedException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
          description: TooManyRequestsException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
          description: BadRequestException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
          description: InternalServerErrorException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
          description: ForbiddenException
      x-content-type: application/json
      x-accepts:
      - application/json
    put:
      description: Updates an existing message template for messages sent through
        the in-app message channel.
      operationId: UpdateInAppTemplate
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: "<p>Specifies whether to save the updates as a new version of\
          \ the message template. Valid values are: true, save the updates as a new\
          \ version; and, false, save the updates to (overwrite) the latest existing\
          \ version of the template.</p> <p>If you don't specify a value for this\
          \ parameter, Amazon Pinpoint saves the updates to (overwrites) the latest\
          \ existing version of the template. If you specify a value of true for this\
          \ parameter, don't specify a value for the version parameter. Otherwise,\
          \ an error will occur.</p>"
        explode: true
        in: query
        name: create-new-version
        required: false
        schema:
          type: boolean
        style: form
      - description: "The name of the message template. A template name must start\
          \ with an alphanumeric character and can contain a maximum of 128 characters.\
          \ The characters can be alphanumeric characters, underscores (_), or hyphens\
          \ (-). Template names are case sensitive."
        explode: false
        in: path
        name: template-name
        required: true
        schema:
          type: string
        style: simple
      - description: "<p>The unique identifier for the version of the message template\
          \ to update, retrieve information about, or delete. To retrieve identifiers\
          \ and other information for all the versions of a template, use the <link\
          \  linkend=\"templates-template-name-template-type-versions\">Template Versions</link>\
          \ resource.</p> <p>If specified, this value must match the identifier for\
          \ an existing template version. If specified for an update operation, this\
          \ value must match the identifier for the latest existing version of the\
          \ template. This restriction helps ensure that race conditions don't occur.</p>\
          \ <p>If you don't specify a value for this parameter, Amazon Pinpoint does\
          \ the following:</p> <ul><li><p>For a get operation, retrieves information\
          \ about the active version of the template.</p></li> <li><p>For an update\
          \ operation, saves the updates to (overwrites) the latest existing version\
          \ of the template, if the create-new-version parameter isn't used or is\
          \ set to false.</p></li> <li><p>For a delete operation, deletes the template,\
          \ including all versions of the template.</p></li></ul>"
        explode: true
        in: query
        name: version
        required: false
        schema:
          type: string
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateInAppTemplate_request'
        required: true
      responses:
        "202":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateInAppTemplateResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
          description: BadRequestException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
          description: InternalServerErrorException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PayloadTooLargeException'
          description: PayloadTooLargeException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
          description: ForbiddenException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
          description: NotFoundException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MethodNotAllowedException'
          description: MethodNotAllowedException
        "486":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
          description: TooManyRequestsException
      x-content-type: application/json
      x-accepts:
      - application/json
  /v1/apps/{application-id}/journeys:
    get:
      description: "Retrieves information about the status, configuration, and other\
        \ settings for all the journeys that are associated with an application."
      operationId: ListJourneys
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The unique identifier for the application. This identifier is
          displayed as the <b>Project ID</b> on the Amazon Pinpoint console.
        explode: false
        in: path
        name: application-id
        required: true
        schema:
          type: string
        style: simple
      - description: "The maximum number of items to include in each page of a paginated\
          \ response. This parameter is not supported for application, campaign, and\
          \ journey metrics."
        explode: true
        in: query
        name: page-size
        required: false
        schema:
          type: string
        style: form
      - description: The NextToken string that specifies which page of results to
          return in a paginated response.
        explode: true
        in: query
        name: token
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListJourneysResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
          description: BadRequestException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
          description: InternalServerErrorException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PayloadTooLargeException'
          description: PayloadTooLargeException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
          description: ForbiddenException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
          description: NotFoundException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MethodNotAllowedException'
          description: MethodNotAllowedException
        "486":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
          description: TooManyRequestsException
      x-accepts:
      - application/json
    post:
      description: Creates a journey for an application.
      operationId: CreateJourney
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The unique identifier for the application. This identifier is
          displayed as the <b>Project ID</b> on the Amazon Pinpoint console.
        explode: false
        in: path
        name: application-id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateJourney_request'
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateJourneyResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
          description: BadRequestException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
          description: InternalServerErrorException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PayloadTooLargeException'
          description: PayloadTooLargeException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
          description: ForbiddenException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
          description: NotFoundException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MethodNotAllowedException'
          description: MethodNotAllowedException
        "486":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
          description: TooManyRequestsException
      x-content-type: application/json
      x-accepts:
      - application/json
  /v1/templates/{template-name}/push:
    delete:
      description: Deletes a message template for messages that were sent through
        a push notification channel.
      operationId: DeletePushTemplate
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: "The name of the message template. A template name must start\
          \ with an alphanumeric character and can contain a maximum of 128 characters.\
          \ The characters can be alphanumeric characters, underscores (_), or hyphens\
          \ (-). Template names are case sensitive."
        explode: false
        in: path
        name: template-name
        required: true
        schema:
          type: string
        style: simple
      - description: "<p>The unique identifier for the version of the message template\
          \ to update, retrieve information about, or delete. To retrieve identifiers\
          \ and other information for all the versions of a template, use the <link\
          \  linkend=\"templates-template-name-template-type-versions\">Template Versions</link>\
          \ resource.</p> <p>If specified, this value must match the identifier for\
          \ an existing template version. If specified for an update operation, this\
          \ value must match the identifier for the latest existing version of the\
          \ template. This restriction helps ensure that race conditions don't occur.</p>\
          \ <p>If you don't specify a value for this parameter, Amazon Pinpoint does\
          \ the following:</p> <ul><li><p>For a get operation, retrieves information\
          \ about the active version of the template.</p></li> <li><p>For an update\
          \ operation, saves the updates to (overwrites) the latest existing version\
          \ of the template, if the create-new-version parameter isn't used or is\
          \ set to false.</p></li> <li><p>For a delete operation, deletes the template,\
          \ including all versions of the template.</p></li></ul>"
        explode: true
        in: query
        name: version
        required: false
        schema:
          type: string
        style: form
      responses:
        "202":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeletePushTemplateResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
          description: BadRequestException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
          description: InternalServerErrorException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PayloadTooLargeException'
          description: PayloadTooLargeException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
          description: ForbiddenException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
          description: NotFoundException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MethodNotAllowedException'
          description: MethodNotAllowedException
        "486":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
          description: TooManyRequestsException
      x-accepts:
      - application/json
    get:
      description: Retrieves the content and settings of a message template for messages
        that are sent through a push notification channel.
      operationId: GetPushTemplate
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: "The name of the message template. A template name must start\
          \ with an alphanumeric character and can contain a maximum of 128 characters.\
          \ The characters can be alphanumeric characters, underscores (_), or hyphens\
          \ (-). Template names are case sensitive."
        explode: false
        in: path
        name: template-name
        required: true
        schema:
          type: string
        style: simple
      - description: "<p>The unique identifier for the version of the message template\
          \ to update, retrieve information about, or delete. To retrieve identifiers\
          \ and other information for all the versions of a template, use the <link\
          \  linkend=\"templates-template-name-template-type-versions\">Template Versions</link>\
          \ resource.</p> <p>If specified, this value must match the identifier for\
          \ an existing template version. If specified for an update operation, this\
          \ value must match the identifier for the latest existing version of the\
          \ template. This restriction helps ensure that race conditions don't occur.</p>\
          \ <p>If you don't specify a value for this parameter, Amazon Pinpoint does\
          \ the following:</p> <ul><li><p>For a get operation, retrieves information\
          \ about the active version of the template.</p></li> <li><p>For an update\
          \ operation, saves the updates to (overwrites) the latest existing version\
          \ of the template, if the create-new-version parameter isn't used or is\
          \ set to false.</p></li> <li><p>For a delete operation, deletes the template,\
          \ including all versions of the template.</p></li></ul>"
        explode: true
        in: query
        name: version
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetPushTemplateResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
          description: BadRequestException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
          description: InternalServerErrorException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PayloadTooLargeException'
          description: PayloadTooLargeException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
          description: ForbiddenException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
          description: NotFoundException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MethodNotAllowedException'
          description: MethodNotAllowedException
        "486":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
          description: TooManyRequestsException
      x-accepts:
      - application/json
    post:
      description: Creates a message template for messages that are sent through a
        push notification channel.
      operationId: CreatePushTemplate
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: "The name of the message template. A template name must start\
          \ with an alphanumeric character and can contain a maximum of 128 characters.\
          \ The characters can be alphanumeric characters, underscores (_), or hyphens\
          \ (-). Template names are case sensitive."
        explode: false
        in: path
        name: template-name
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdatePushTemplate_request'
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreatePushTemplateResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MethodNotAllowedException'
          description: MethodNotAllowedException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
          description: TooManyRequestsException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
          description: BadRequestException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
          description: InternalServerErrorException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
          description: ForbiddenException
      x-content-type: application/json
      x-accepts:
      - application/json
    put:
      description: Updates an existing message template for messages that are sent
        through a push notification channel.
      operationId: UpdatePushTemplate
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: "<p>Specifies whether to save the updates as a new version of\
          \ the message template. Valid values are: true, save the updates as a new\
          \ version; and, false, save the updates to (overwrite) the latest existing\
          \ version of the template.</p> <p>If you don't specify a value for this\
          \ parameter, Amazon Pinpoint saves the updates to (overwrites) the latest\
          \ existing version of the template. If you specify a value of true for this\
          \ parameter, don't specify a value for the version parameter. Otherwise,\
          \ an error will occur.</p>"
        explode: true
        in: query
        name: create-new-version
        required: false
        schema:
          type: boolean
        style: form
      - description: "The name of the message template. A template name must start\
          \ with an alphanumeric character and can contain a maximum of 128 characters.\
          \ The characters can be alphanumeric characters, underscores (_), or hyphens\
          \ (-). Template names are case sensitive."
        explode: false
        in: path
        name: template-name
        required: true
        schema:
          type: string
        style: simple
      - description: "<p>The unique identifier for the version of the message template\
          \ to update, retrieve information about, or delete. To retrieve identifiers\
          \ and other information for all the versions of a template, use the <link\
          \  linkend=\"templates-template-name-template-type-versions\">Template Versions</link>\
          \ resource.</p> <p>If specified, this value must match the identifier for\
          \ an existing template version. If specified for an update operation, this\
          \ value must match the identifier for the latest existing version of the\
          \ template. This restriction helps ensure that race conditions don't occur.</p>\
          \ <p>If you don't specify a value for this parameter, Amazon Pinpoint does\
          \ the following:</p> <ul><li><p>For a get operation, retrieves information\
          \ about the active version of the template.</p></li> <li><p>For an update\
          \ operation, saves the updates to (overwrites) the latest existing version\
          \ of the template, if the create-new-version parameter isn't used or is\
          \ set to false.</p></li> <li><p>For a delete operation, deletes the template,\
          \ including all versions of the template.</p></li></ul>"
        explode: true
        in: query
        name: version
        required: false
        schema:
          type: string
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdatePushTemplate_request'
        required: true
      responses:
        "202":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdatePushTemplateResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
          description: BadRequestException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
          description: InternalServerErrorException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PayloadTooLargeException'
          description: PayloadTooLargeException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
          description: ForbiddenException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
          description: NotFoundException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MethodNotAllowedException'
          description: MethodNotAllowedException
        "486":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
          description: TooManyRequestsException
      x-content-type: application/json
      x-accepts:
      - application/json
  /v1/recommenders:
    get:
      description: Retrieves information about all the recommender model configurations
        that are associated with your Amazon Pinpoint account.
      operationId: GetRecommenderConfigurations
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: "The maximum number of items to include in each page of a paginated\
          \ response. This parameter is not supported for application, campaign, and\
          \ journey metrics."
        explode: true
        in: query
        name: page-size
        required: false
        schema:
          type: string
        style: form
      - description: The NextToken string that specifies which page of results to
          return in a paginated response.
        explode: true
        in: query
        name: token
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetRecommenderConfigurationsResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
          description: BadRequestException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
          description: InternalServerErrorException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PayloadTooLargeException'
          description: PayloadTooLargeException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
          description: ForbiddenException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
          description: NotFoundException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MethodNotAllowedException'
          description: MethodNotAllowedException
        "486":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
          description: TooManyRequestsException
      x-accepts:
      - application/json
    post:
      description: Creates an Amazon Pinpoint configuration for a recommender model.
      operationId: CreateRecommenderConfiguration
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateRecommenderConfiguration_request'
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateRecommenderConfigurationResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
          description: BadRequestException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
          description: InternalServerErrorException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PayloadTooLargeException'
          description: PayloadTooLargeException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
          description: ForbiddenException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
          description: NotFoundException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MethodNotAllowedException'
          description: MethodNotAllowedException
        "486":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
          description: TooManyRequestsException
      x-content-type: application/json
      x-accepts:
      - application/json
  /v1/apps/{application-id}/segments:
    get:
      description: "Retrieves information about the configuration, dimension, and\
        \ other settings for all the segments that are associated with an application."
      operationId: GetSegments
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The unique identifier for the application. This identifier is
          displayed as the <b>Project ID</b> on the Amazon Pinpoint console.
        explode: false
        in: path
        name: application-id
        required: true
        schema:
          type: string
        style: simple
      - description: "The maximum number of items to include in each page of a paginated\
          \ response. This parameter is not supported for application, campaign, and\
          \ journey metrics."
        explode: true
        in: query
        name: page-size
        required: false
        schema:
          type: string
        style: form
      - description: The NextToken string that specifies which page of results to
          return in a paginated response.
        explode: true
        in: query
        name: token
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetSegmentsResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
          description: BadRequestException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
          description: InternalServerErrorException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PayloadTooLargeException'
          description: PayloadTooLargeException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
          description: ForbiddenException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
          description: NotFoundException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MethodNotAllowedException'
          description: MethodNotAllowedException
        "486":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
          description: TooManyRequestsException
      x-accepts:
      - application/json
    post:
      description: "Creates a new segment for an application or updates the configuration,\
        \ dimension, and other settings for an existing segment that's associated\
        \ with an application."
      operationId: CreateSegment
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The unique identifier for the application. This identifier is
          displayed as the <b>Project ID</b> on the Amazon Pinpoint console.
        explode: false
        in: path
        name: application-id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateSegment_request'
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateSegmentResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
          description: BadRequestException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
          description: InternalServerErrorException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PayloadTooLargeException'
          description: PayloadTooLargeException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
          description: ForbiddenException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
          description: NotFoundException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MethodNotAllowedException'
          description: MethodNotAllowedException
        "486":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
          description: TooManyRequestsException
      x-content-type: application/json
      x-accepts:
      - application/json
  /v1/templates/{template-name}/sms:
    delete:
      description: Deletes a message template for messages that were sent through
        the SMS channel.
      operationId: DeleteSmsTemplate
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: "The name of the message template. A template name must start\
          \ with an alphanumeric character and can contain a maximum of 128 characters.\
          \ The characters can be alphanumeric characters, underscores (_), or hyphens\
          \ (-). Template names are case sensitive."
        explode: false
        in: path
        name: template-name
        required: true
        schema:
          type: string
        style: simple
      - description: "<p>The unique identifier for the version of the message template\
          \ to update, retrieve information about, or delete. To retrieve identifiers\
          \ and other information for all the versions of a template, use the <link\
          \  linkend=\"templates-template-name-template-type-versions\">Template Versions</link>\
          \ resource.</p> <p>If specified, this value must match the identifier for\
          \ an existing template version. If specified for an update operation, this\
          \ value must match the identifier for the latest existing version of the\
          \ template. This restriction helps ensure that race conditions don't occur.</p>\
          \ <p>If you don't specify a value for this parameter, Amazon Pinpoint does\
          \ the following:</p> <ul><li><p>For a get operation, retrieves information\
          \ about the active version of the template.</p></li> <li><p>For an update\
          \ operation, saves the updates to (overwrites) the latest existing version\
          \ of the template, if the create-new-version parameter isn't used or is\
          \ set to false.</p></li> <li><p>For a delete operation, deletes the template,\
          \ including all versions of the template.</p></li></ul>"
        explode: true
        in: query
        name: version
        required: false
        schema:
          type: string
        style: form
      responses:
        "202":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteSmsTemplateResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
          description: BadRequestException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
          description: InternalServerErrorException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PayloadTooLargeException'
          description: PayloadTooLargeException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
          description: ForbiddenException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
          description: NotFoundException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MethodNotAllowedException'
          description: MethodNotAllowedException
        "486":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
          description: TooManyRequestsException
      x-accepts:
      - application/json
    get:
      description: Retrieves the content and settings of a message template for messages
        that are sent through the SMS channel.
      operationId: GetSmsTemplate
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: "The name of the message template. A template name must start\
          \ with an alphanumeric character and can contain a maximum of 128 characters.\
          \ The characters can be alphanumeric characters, underscores (_), or hyphens\
          \ (-). Template names are case sensitive."
        explode: false
        in: path
        name: template-name
        required: true
        schema:
          type: string
        style: simple
      - description: "<p>The unique identifier for the version of the message template\
          \ to update, retrieve information about, or delete. To retrieve identifiers\
          \ and other information for all the versions of a template, use the <link\
          \  linkend=\"templates-template-name-template-type-versions\">Template Versions</link>\
          \ resource.</p> <p>If specified, this value must match the identifier for\
          \ an existing template version. If specified for an update operation, this\
          \ value must match the identifier for the latest existing version of the\
          \ template. This restriction helps ensure that race conditions don't occur.</p>\
          \ <p>If you don't specify a value for this parameter, Amazon Pinpoint does\
          \ the following:</p> <ul><li><p>For a get operation, retrieves information\
          \ about the active version of the template.</p></li> <li><p>For an update\
          \ operation, saves the updates to (overwrites) the latest existing version\
          \ of the template, if the create-new-version parameter isn't used or is\
          \ set to false.</p></li> <li><p>For a delete operation, deletes the template,\
          \ including all versions of the template.</p></li></ul>"
        explode: true
        in: query
        name: version
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetSmsTemplateResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
          description: BadRequestException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
          description: InternalServerErrorException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PayloadTooLargeException'
          description: PayloadTooLargeException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
          description: ForbiddenException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
          description: NotFoundException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MethodNotAllowedException'
          description: MethodNotAllowedException
        "486":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
          description: TooManyRequestsException
      x-accepts:
      - application/json
    post:
      description: Creates a message template for messages that are sent through the
        SMS channel.
      operationId: CreateSmsTemplate
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: "The name of the message template. A template name must start\
          \ with an alphanumeric character and can contain a maximum of 128 characters.\
          \ The characters can be alphanumeric characters, underscores (_), or hyphens\
          \ (-). Template names are case sensitive."
        explode: false
        in: path
        name: template-name
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateSmsTemplate_request'
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateSmsTemplateResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MethodNotAllowedException'
          description: MethodNotAllowedException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
          description: TooManyRequestsException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
          description: BadRequestException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
          description: InternalServerErrorException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
          description: ForbiddenException
      x-content-type: application/json
      x-accepts:
      - application/json
    put:
      description: Updates an existing message template for messages that are sent
        through the SMS channel.
      operationId: UpdateSmsTemplate
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: "<p>Specifies whether to save the updates as a new version of\
          \ the message template. Valid values are: true, save the updates as a new\
          \ version; and, false, save the updates to (overwrite) the latest existing\
          \ version of the template.</p> <p>If you don't specify a value for this\
          \ parameter, Amazon Pinpoint saves the updates to (overwrites) the latest\
          \ existing version of the template. If you specify a value of true for this\
          \ parameter, don't specify a value for the version parameter. Otherwise,\
          \ an error will occur.</p>"
        explode: true
        in: query
        name: create-new-version
        required: false
        schema:
          type: boolean
        style: form
      - description: "The name of the message template. A template name must start\
          \ with an alphanumeric character and can contain a maximum of 128 characters.\
          \ The characters can be alphanumeric characters, underscores (_), or hyphens\
          \ (-). Template names are case sensitive."
        explode: false
        in: path
        name: template-name
        required: true
        schema:
          type: string
        style: simple
      - description: "<p>The unique identifier for the version of the message template\
          \ to update, retrieve information about, or delete. To retrieve identifiers\
          \ and other information for all the versions of a template, use the <link\
          \  linkend=\"templates-template-name-template-type-versions\">Template Versions</link>\
          \ resource.</p> <p>If specified, this value must match the identifier for\
          \ an existing template version. If specified for an update operation, this\
          \ value must match the identifier for the latest existing version of the\
          \ template. This restriction helps ensure that race conditions don't occur.</p>\
          \ <p>If you don't specify a value for this parameter, Amazon Pinpoint does\
          \ the following:</p> <ul><li><p>For a get operation, retrieves information\
          \ about the active version of the template.</p></li> <li><p>For an update\
          \ operation, saves the updates to (overwrites) the latest existing version\
          \ of the template, if the create-new-version parameter isn't used or is\
          \ set to false.</p></li> <li><p>For a delete operation, deletes the template,\
          \ including all versions of the template.</p></li></ul>"
        explode: true
        in: query
        name: version
        required: false
        schema:
          type: string
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateSmsTemplate_request'
        required: true
      responses:
        "202":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateSmsTemplateResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
          description: BadRequestException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
          description: InternalServerErrorException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PayloadTooLargeException'
          description: PayloadTooLargeException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
          description: ForbiddenException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
          description: NotFoundException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MethodNotAllowedException'
          description: MethodNotAllowedException
        "486":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
          description: TooManyRequestsException
      x-content-type: application/json
      x-accepts:
      - application/json
  /v1/templates/{template-name}/voice:
    delete:
      description: Deletes a message template for messages that were sent through
        the voice channel.
      operationId: DeleteVoiceTemplate
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: "The name of the message template. A template name must start\
          \ with an alphanumeric character and can contain a maximum of 128 characters.\
          \ The characters can be alphanumeric characters, underscores (_), or hyphens\
          \ (-). Template names are case sensitive."
        explode: false
        in: path
        name: template-name
        required: true
        schema:
          type: string
        style: simple
      - description: "<p>The unique identifier for the version of the message template\
          \ to update, retrieve information about, or delete. To retrieve identifiers\
          \ and other information for all the versions of a template, use the <link\
          \  linkend=\"templates-template-name-template-type-versions\">Template Versions</link>\
          \ resource.</p> <p>If specified, this value must match the identifier for\
          \ an existing template version. If specified for an update operation, this\
          \ value must match the identifier for the latest existing version of the\
          \ template. This restriction helps ensure that race conditions don't occur.</p>\
          \ <p>If you don't specify a value for this parameter, Amazon Pinpoint does\
          \ the following:</p> <ul><li><p>For a get operation, retrieves information\
          \ about the active version of the template.</p></li> <li><p>For an update\
          \ operation, saves the updates to (overwrites) the latest existing version\
          \ of the template, if the create-new-version parameter isn't used or is\
          \ set to false.</p></li> <li><p>For a delete operation, deletes the template,\
          \ including all versions of the template.</p></li></ul>"
        explode: true
        in: query
        name: version
        required: false
        schema:
          type: string
        style: form
      responses:
        "202":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteVoiceTemplateResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
          description: BadRequestException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
          description: InternalServerErrorException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PayloadTooLargeException'
          description: PayloadTooLargeException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
          description: ForbiddenException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
          description: NotFoundException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MethodNotAllowedException'
          description: MethodNotAllowedException
        "486":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
          description: TooManyRequestsException
      x-accepts:
      - application/json
    get:
      description: Retrieves the content and settings of a message template for messages
        that are sent through the voice channel.
      operationId: GetVoiceTemplate
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: "The name of the message template. A template name must start\
          \ with an alphanumeric character and can contain a maximum of 128 characters.\
          \ The characters can be alphanumeric characters, underscores (_), or hyphens\
          \ (-). Template names are case sensitive."
        explode: false
        in: path
        name: template-name
        required: true
        schema:
          type: string
        style: simple
      - description: "<p>The unique identifier for the version of the message template\
          \ to update, retrieve information about, or delete. To retrieve identifiers\
          \ and other information for all the versions of a template, use the <link\
          \  linkend=\"templates-template-name-template-type-versions\">Template Versions</link>\
          \ resource.</p> <p>If specified, this value must match the identifier for\
          \ an existing template version. If specified for an update operation, this\
          \ value must match the identifier for the latest existing version of the\
          \ template. This restriction helps ensure that race conditions don't occur.</p>\
          \ <p>If you don't specify a value for this parameter, Amazon Pinpoint does\
          \ the following:</p> <ul><li><p>For a get operation, retrieves information\
          \ about the active version of the template.</p></li> <li><p>For an update\
          \ operation, saves the updates to (overwrites) the latest existing version\
          \ of the template, if the create-new-version parameter isn't used or is\
          \ set to false.</p></li> <li><p>For a delete operation, deletes the template,\
          \ including all versions of the template.</p></li></ul>"
        explode: true
        in: query
        name: version
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetVoiceTemplateResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
          description: BadRequestException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
          description: InternalServerErrorException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PayloadTooLargeException'
          description: PayloadTooLargeException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
          description: ForbiddenException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
          description: NotFoundException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MethodNotAllowedException'
          description: MethodNotAllowedException
        "486":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
          description: TooManyRequestsException
      x-accepts:
      - application/json
    post:
      description: Creates a message template for messages that are sent through the
        voice channel.
      operationId: CreateVoiceTemplate
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: "The name of the message template. A template name must start\
          \ with an alphanumeric character and can contain a maximum of 128 characters.\
          \ The characters can be alphanumeric characters, underscores (_), or hyphens\
          \ (-). Template names are case sensitive."
        explode: false
        in: path
        name: template-name
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateVoiceTemplate_request'
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateVoiceTemplateResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MethodNotAllowedException'
          description: MethodNotAllowedException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
          description: TooManyRequestsException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
          description: BadRequestException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
          description: InternalServerErrorException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
          description: ForbiddenException
      x-content-type: application/json
      x-accepts:
      - application/json
    put:
      description: Updates an existing message template for messages that are sent
        through the voice channel.
      operationId: UpdateVoiceTemplate
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: "<p>Specifies whether to save the updates as a new version of\
          \ the message template. Valid values are: true, save the updates as a new\
          \ version; and, false, save the updates to (overwrite) the latest existing\
          \ version of the template.</p> <p>If you don't specify a value for this\
          \ parameter, Amazon Pinpoint saves the updates to (overwrites) the latest\
          \ existing version of the template. If you specify a value of true for this\
          \ parameter, don't specify a value for the version parameter. Otherwise,\
          \ an error will occur.</p>"
        explode: true
        in: query
        name: create-new-version
        required: false
        schema:
          type: boolean
        style: form
      - description: "The name of the message template. A template name must start\
          \ with an alphanumeric character and can contain a maximum of 128 characters.\
          \ The characters can be alphanumeric characters, underscores (_), or hyphens\
          \ (-). Template names are case sensitive."
        explode: false
        in: path
        name: template-name
        required: true
        schema:
          type: string
        style: simple
      - description: "<p>The unique identifier for the version of the message template\
          \ to update, retrieve information about, or delete. To retrieve identifiers\
          \ and other information for all the versions of a template, use the <link\
          \  linkend=\"templates-template-name-template-type-versions\">Template Versions</link>\
          \ resource.</p> <p>If specified, this value must match the identifier for\
          \ an existing template version. If specified for an update operation, this\
          \ value must match the identifier for the latest existing version of the\
          \ template. This restriction helps ensure that race conditions don't occur.</p>\
          \ <p>If you don't specify a value for this parameter, Amazon Pinpoint does\
          \ the following:</p> <ul><li><p>For a get operation, retrieves information\
          \ about the active version of the template.</p></li> <li><p>For an update\
          \ operation, saves the updates to (overwrites) the latest existing version\
          \ of the template, if the create-new-version parameter isn't used or is\
          \ set to false.</p></li> <li><p>For a delete operation, deletes the template,\
          \ including all versions of the template.</p></li></ul>"
        explode: true
        in: query
        name: version
        required: false
        schema:
          type: string
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateVoiceTemplate_request'
        required: true
      responses:
        "202":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateVoiceTemplateResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
          description: BadRequestException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
          description: InternalServerErrorException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PayloadTooLargeException'
          description: PayloadTooLargeException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
          description: ForbiddenException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
          description: NotFoundException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MethodNotAllowedException'
          description: MethodNotAllowedException
        "486":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
          description: TooManyRequestsException
      x-content-type: application/json
      x-accepts:
      - application/json
  /v1/apps/{application-id}/channels/adm:
    delete:
      description: Disables the ADM channel for an application and deletes any existing
        settings for the channel.
      operationId: DeleteAdmChannel
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The unique identifier for the application. This identifier is
          displayed as the <b>Project ID</b> on the Amazon Pinpoint console.
        explode: false
        in: path
        name: application-id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteAdmChannelResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
          description: BadRequestException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
          description: InternalServerErrorException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PayloadTooLargeException'
          description: PayloadTooLargeException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
          description: ForbiddenException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
          description: NotFoundException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MethodNotAllowedException'
          description: MethodNotAllowedException
        "486":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
          description: TooManyRequestsException
      x-accepts:
      - application/json
    get:
      description: Retrieves information about the status and settings of the ADM
        channel for an application.
      operationId: GetAdmChannel
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The unique identifier for the application. This identifier is
          displayed as the <b>Project ID</b> on the Amazon Pinpoint console.
        explode: false
        in: path
        name: application-id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetAdmChannelResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
          description: BadRequestException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
          description: InternalServerErrorException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PayloadTooLargeException'
          description: PayloadTooLargeException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
          description: ForbiddenException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
          description: NotFoundException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MethodNotAllowedException'
          description: MethodNotAllowedException
        "486":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
          description: TooManyRequestsException
      x-accepts:
      - application/json
    put:
      description: Enables the ADM channel for an application or updates the status
        and settings of the ADM channel for an application.
      operationId: UpdateAdmChannel
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The unique identifier for the application. This identifier is
          displayed as the <b>Project ID</b> on the Amazon Pinpoint console.
        explode: false
        in: path
        name: application-id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateAdmChannel_request'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateAdmChannelResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
          description: BadRequestException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
          description: InternalServerErrorException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PayloadTooLargeException'
          description: PayloadTooLargeException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
          description: ForbiddenException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
          description: NotFoundException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MethodNotAllowedException'
          description: MethodNotAllowedException
        "486":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
          description: TooManyRequestsException
      x-content-type: application/json
      x-accepts:
      - application/json
  /v1/apps/{application-id}/channels/apns:
    delete:
      description: Disables the APNs channel for an application and deletes any existing
        settings for the channel.
      operationId: DeleteApnsChannel
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The unique identifier for the application. This identifier is
          displayed as the <b>Project ID</b> on the Amazon Pinpoint console.
        explode: false
        in: path
        name: application-id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteApnsChannelResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
          description: BadRequestException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
          description: InternalServerErrorException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PayloadTooLargeException'
          description: PayloadTooLargeException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
          description: ForbiddenException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
          description: NotFoundException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MethodNotAllowedException'
          description: MethodNotAllowedException
        "486":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
          description: TooManyRequestsException
      x-accepts:
      - application/json
    get:
      description: Retrieves information about the status and settings of the APNs
        channel for an application.
      operationId: GetApnsChannel
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The unique identifier for the application. This identifier is
          displayed as the <b>Project ID</b> on the Amazon Pinpoint console.
        explode: false
        in: path
        name: application-id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetApnsChannelResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
          description: BadRequestException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
          description: InternalServerErrorException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PayloadTooLargeException'
          description: PayloadTooLargeException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
          description: ForbiddenException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
          description: NotFoundException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MethodNotAllowedException'
          description: MethodNotAllowedException
        "486":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
          description: TooManyRequestsException
      x-accepts:
      - application/json
    put:
      description: Enables the APNs channel for an application or updates the status
        and settings of the APNs channel for an application.
      operationId: UpdateApnsChannel
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The unique identifier for the application. This identifier is
          displayed as the <b>Project ID</b> on the Amazon Pinpoint console.
        explode: false
        in: path
        name: application-id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateApnsChannel_request'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateApnsChannelResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
          description: BadRequestException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
          description: InternalServerErrorException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PayloadTooLargeException'
          description: PayloadTooLargeException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
          description: ForbiddenException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
          description: NotFoundException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MethodNotAllowedException'
          description: MethodNotAllowedException
        "486":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
          description: TooManyRequestsException
      x-content-type: application/json
      x-accepts:
      - application/json
  /v1/apps/{application-id}/channels/apns_sandbox:
    delete:
      description: Disables the APNs sandbox channel for an application and deletes
        any existing settings for the channel.
      operationId: DeleteApnsSandboxChannel
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The unique identifier for the application. This identifier is
          displayed as the <b>Project ID</b> on the Amazon Pinpoint console.
        explode: false
        in: path
        name: application-id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteApnsSandboxChannelResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
          description: BadRequestException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
          description: InternalServerErrorException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PayloadTooLargeException'
          description: PayloadTooLargeException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
          description: ForbiddenException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
          description: NotFoundException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MethodNotAllowedException'
          description: MethodNotAllowedException
        "486":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
          description: TooManyRequestsException
      x-accepts:
      - application/json
    get:
      description: Retrieves information about the status and settings of the APNs
        sandbox channel for an application.
      operationId: GetApnsSandboxChannel
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The unique identifier for the application. This identifier is
          displayed as the <b>Project ID</b> on the Amazon Pinpoint console.
        explode: false
        in: path
        name: application-id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetApnsSandboxChannelResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
          description: BadRequestException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
          description: InternalServerErrorException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PayloadTooLargeException'
          description: PayloadTooLargeException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
          description: ForbiddenException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
          description: NotFoundException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MethodNotAllowedException'
          description: MethodNotAllowedException
        "486":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
          description: TooManyRequestsException
      x-accepts:
      - application/json
    put:
      description: Enables the APNs sandbox channel for an application or updates
        the status and settings of the APNs sandbox channel for an application.
      operationId: UpdateApnsSandboxChannel
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The unique identifier for the application. This identifier is
          displayed as the <b>Project ID</b> on the Amazon Pinpoint console.
        explode: false
        in: path
        name: application-id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateApnsSandboxChannel_request'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateApnsSandboxChannelResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
          description: BadRequestException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
          description: InternalServerErrorException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PayloadTooLargeException'
          description: PayloadTooLargeException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
          description: ForbiddenException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
          description: NotFoundException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MethodNotAllowedException'
          description: MethodNotAllowedException
        "486":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
          description: TooManyRequestsException
      x-content-type: application/json
      x-accepts:
      - application/json
  /v1/apps/{application-id}/channels/apns_voip:
    delete:
      description: Disables the APNs VoIP channel for an application and deletes any
        existing settings for the channel.
      operationId: DeleteApnsVoipChannel
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The unique identifier for the application. This identifier is
          displayed as the <b>Project ID</b> on the Amazon Pinpoint console.
        explode: false
        in: path
        name: application-id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteApnsVoipChannelResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
          description: BadRequestException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
          description: InternalServerErrorException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PayloadTooLargeException'
          description: PayloadTooLargeException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
          description: ForbiddenException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
          description: NotFoundException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MethodNotAllowedException'
          description: MethodNotAllowedException
        "486":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
          description: TooManyRequestsException
      x-accepts:
      - application/json
    get:
      description: Retrieves information about the status and settings of the APNs
        VoIP channel for an application.
      operationId: GetApnsVoipChannel
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The unique identifier for the application. This identifier is
          displayed as the <b>Project ID</b> on the Amazon Pinpoint console.
        explode: false
        in: path
        name: application-id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetApnsVoipChannelResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
          description: BadRequestException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
          description: InternalServerErrorException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PayloadTooLargeException'
          description: PayloadTooLargeException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
          description: ForbiddenException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
          description: NotFoundException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MethodNotAllowedException'
          description: MethodNotAllowedException
        "486":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
          description: TooManyRequestsException
      x-accepts:
      - application/json
    put:
      description: Enables the APNs VoIP channel for an application or updates the
        status and settings of the APNs VoIP channel for an application.
      operationId: UpdateApnsVoipChannel
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The unique identifier for the application. This identifier is
          displayed as the <b>Project ID</b> on the Amazon Pinpoint console.
        explode: false
        in: path
        name: application-id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateApnsVoipChannel_request'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateApnsVoipChannelResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
          description: BadRequestException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
          description: InternalServerErrorException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PayloadTooLargeException'
          description: PayloadTooLargeException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
          description: ForbiddenException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
          description: NotFoundException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MethodNotAllowedException'
          description: MethodNotAllowedException
        "486":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
          description: TooManyRequestsException
      x-content-type: application/json
      x-accepts:
      - application/json
  /v1/apps/{application-id}/channels/apns_voip_sandbox:
    delete:
      description: Disables the APNs VoIP sandbox channel for an application and deletes
        any existing settings for the channel.
      operationId: DeleteApnsVoipSandboxChannel
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The unique identifier for the application. This identifier is
          displayed as the <b>Project ID</b> on the Amazon Pinpoint console.
        explode: false
        in: path
        name: application-id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteApnsVoipSandboxChannelResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
          description: BadRequestException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
          description: InternalServerErrorException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PayloadTooLargeException'
          description: PayloadTooLargeException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
          description: ForbiddenException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
          description: NotFoundException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MethodNotAllowedException'
          description: MethodNotAllowedException
        "486":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
          description: TooManyRequestsException
      x-accepts:
      - application/json
    get:
      description: Retrieves information about the status and settings of the APNs
        VoIP sandbox channel for an application.
      operationId: GetApnsVoipSandboxChannel
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The unique identifier for the application. This identifier is
          displayed as the <b>Project ID</b> on the Amazon Pinpoint console.
        explode: false
        in: path
        name: application-id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetApnsVoipSandboxChannelResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
          description: BadRequestException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
          description: InternalServerErrorException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PayloadTooLargeException'
          description: PayloadTooLargeException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
          description: ForbiddenException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
          description: NotFoundException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MethodNotAllowedException'
          description: MethodNotAllowedException
        "486":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
          description: TooManyRequestsException
      x-accepts:
      - application/json
    put:
      description: Enables the APNs VoIP sandbox channel for an application or updates
        the status and settings of the APNs VoIP sandbox channel for an application.
      operationId: UpdateApnsVoipSandboxChannel
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The unique identifier for the application. This identifier is
          displayed as the <b>Project ID</b> on the Amazon Pinpoint console.
        explode: false
        in: path
        name: application-id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateApnsVoipSandboxChannel_request'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateApnsVoipSandboxChannelResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
          description: BadRequestException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
          description: InternalServerErrorException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PayloadTooLargeException'
          description: PayloadTooLargeException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
          description: ForbiddenException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
          description: NotFoundException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MethodNotAllowedException'
          description: MethodNotAllowedException
        "486":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
          description: TooManyRequestsException
      x-content-type: application/json
      x-accepts:
      - application/json
  /v1/apps/{application-id}:
    delete:
      description: Deletes an application.
      operationId: DeleteApp
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The unique identifier for the application. This identifier is
          displayed as the <b>Project ID</b> on the Amazon Pinpoint console.
        explode: false
        in: path
        name: application-id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteAppResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
          description: BadRequestException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
          description: InternalServerErrorException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PayloadTooLargeException'
          description: PayloadTooLargeException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
          description: ForbiddenException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
          description: NotFoundException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MethodNotAllowedException'
          description: MethodNotAllowedException
        "486":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
          description: TooManyRequestsException
      x-accepts:
      - application/json
    get:
      description: Retrieves information about an application.
      operationId: GetApp
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The unique identifier for the application. This identifier is
          displayed as the <b>Project ID</b> on the Amazon Pinpoint console.
        explode: false
        in: path
        name: application-id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetAppResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
          description: BadRequestException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
          description: InternalServerErrorException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PayloadTooLargeException'
          description: PayloadTooLargeException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
          description: ForbiddenException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
          description: NotFoundException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MethodNotAllowedException'
          description: MethodNotAllowedException
        "486":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
          description: TooManyRequestsException
      x-accepts:
      - application/json
  /v1/apps/{application-id}/channels/baidu:
    delete:
      description: Disables the Baidu channel for an application and deletes any existing
        settings for the channel.
      operationId: DeleteBaiduChannel
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The unique identifier for the application. This identifier is
          displayed as the <b>Project ID</b> on the Amazon Pinpoint console.
        explode: false
        in: path
        name: application-id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteBaiduChannelResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
          description: BadRequestException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
          description: InternalServerErrorException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PayloadTooLargeException'
          description: PayloadTooLargeException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
          description: ForbiddenException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
          description: NotFoundException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MethodNotAllowedException'
          description: MethodNotAllowedException
        "486":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
          description: TooManyRequestsException
      x-accepts:
      - application/json
    get:
      description: Retrieves information about the status and settings of the Baidu
        channel for an application.
      operationId: GetBaiduChannel
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The unique identifier for the application. This identifier is
          displayed as the <b>Project ID</b> on the Amazon Pinpoint console.
        explode: false
        in: path
        name: application-id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetBaiduChannelResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
          description: BadRequestException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
          description: InternalServerErrorException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PayloadTooLargeException'
          description: PayloadTooLargeException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
          description: ForbiddenException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
          description: NotFoundException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MethodNotAllowedException'
          description: MethodNotAllowedException
        "486":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
          description: TooManyRequestsException
      x-accepts:
      - application/json
    put:
      description: Enables the Baidu channel for an application or updates the status
        and settings of the Baidu channel for an application.
      operationId: UpdateBaiduChannel
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The unique identifier for the application. This identifier is
          displayed as the <b>Project ID</b> on the Amazon Pinpoint console.
        explode: false
        in: path
        name: application-id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateBaiduChannel_request'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateBaiduChannelResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
          description: BadRequestException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
          description: InternalServerErrorException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PayloadTooLargeException'
          description: PayloadTooLargeException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
          description: ForbiddenException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
          description: NotFoundException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MethodNotAllowedException'
          description: MethodNotAllowedException
        "486":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
          description: TooManyRequestsException
      x-content-type: application/json
      x-accepts:
      - application/json
  /v1/apps/{application-id}/campaigns/{campaign-id}:
    delete:
      description: Deletes a campaign from an application.
      operationId: DeleteCampaign
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The unique identifier for the application. This identifier is
          displayed as the <b>Project ID</b> on the Amazon Pinpoint console.
        explode: false
        in: path
        name: application-id
        required: true
        schema:
          type: string
        style: simple
      - description: The unique identifier for the campaign.
        explode: false
        in: path
        name: campaign-id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteCampaignResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
          description: BadRequestException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
          description: InternalServerErrorException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PayloadTooLargeException'
          description: PayloadTooLargeException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
          description: ForbiddenException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
          description: NotFoundException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MethodNotAllowedException'
          description: MethodNotAllowedException
        "486":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
          description: TooManyRequestsException
      x-accepts:
      - application/json
    get:
      description: "Retrieves information about the status, configuration, and other\
        \ settings for a campaign."
      operationId: GetCampaign
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The unique identifier for the application. This identifier is
          displayed as the <b>Project ID</b> on the Amazon Pinpoint console.
        explode: false
        in: path
        name: application-id
        required: true
        schema:
          type: string
        style: simple
      - description: The unique identifier for the campaign.
        explode: false
        in: path
        name: campaign-id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetCampaignResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
          description: BadRequestException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
          description: InternalServerErrorException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PayloadTooLargeException'
          description: PayloadTooLargeException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
          description: ForbiddenException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
          description: NotFoundException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MethodNotAllowedException'
          description: MethodNotAllowedException
        "486":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
          description: TooManyRequestsException
      x-accepts:
      - application/json
    put:
      description: Updates the configuration and other settings for a campaign.
      operationId: UpdateCampaign
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The unique identifier for the application. This identifier is
          displayed as the <b>Project ID</b> on the Amazon Pinpoint console.
        explode: false
        in: path
        name: application-id
        required: true
        schema:
          type: string
        style: simple
      - description: The unique identifier for the campaign.
        explode: false
        in: path
        name: campaign-id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateCampaign_request'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateCampaignResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
          description: BadRequestException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
          description: InternalServerErrorException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PayloadTooLargeException'
          description: PayloadTooLargeException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
          description: ForbiddenException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
          description: NotFoundException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MethodNotAllowedException'
          description: MethodNotAllowedException
        "486":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
          description: TooManyRequestsException
      x-content-type: application/json
      x-accepts:
      - application/json
  /v1/apps/{application-id}/channels/email:
    delete:
      description: Disables the email channel for an application and deletes any existing
        settings for the channel.
      operationId: DeleteEmailChannel
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The unique identifier for the application. This identifier is
          displayed as the <b>Project ID</b> on the Amazon Pinpoint console.
        explode: false
        in: path
        name: application-id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteEmailChannelResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
          description: BadRequestException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
          description: InternalServerErrorException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PayloadTooLargeException'
          description: PayloadTooLargeException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
          description: ForbiddenException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
          description: NotFoundException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MethodNotAllowedException'
          description: MethodNotAllowedException
        "486":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
          description: TooManyRequestsException
      x-accepts:
      - application/json
    get:
      description: Retrieves information about the status and settings of the email
        channel for an application.
      operationId: GetEmailChannel
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The unique identifier for the application. This identifier is
          displayed as the <b>Project ID</b> on the Amazon Pinpoint console.
        explode: false
        in: path
        name: application-id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetEmailChannelResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
          description: BadRequestException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
          description: InternalServerErrorException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PayloadTooLargeException'
          description: PayloadTooLargeException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
          description: ForbiddenException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
          description: NotFoundException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MethodNotAllowedException'
          description: MethodNotAllowedException
        "486":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
          description: TooManyRequestsException
      x-accepts:
      - application/json
    put:
      description: Enables the email channel for an application or updates the status
        and settings of the email channel for an application.
      operationId: UpdateEmailChannel
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The unique identifier for the application. This identifier is
          displayed as the <b>Project ID</b> on the Amazon Pinpoint console.
        explode: false
        in: path
        name: application-id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateEmailChannel_request'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateEmailChannelResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
          description: BadRequestException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
          description: InternalServerErrorException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PayloadTooLargeException'
          description: PayloadTooLargeException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
          description: ForbiddenException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
          description: NotFoundException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MethodNotAllowedException'
          description: MethodNotAllowedException
        "486":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
          description: TooManyRequestsException
      x-content-type: application/json
      x-accepts:
      - application/json
  /v1/apps/{application-id}/endpoints/{endpoint-id}:
    delete:
      description: Deletes an endpoint from an application.
      operationId: DeleteEndpoint
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The unique identifier for the application. This identifier is
          displayed as the <b>Project ID</b> on the Amazon Pinpoint console.
        explode: false
        in: path
        name: application-id
        required: true
        schema:
          type: string
        style: simple
      - description: The unique identifier for the endpoint.
        explode: false
        in: path
        name: endpoint-id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "202":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteEndpointResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
          description: BadRequestException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
          description: InternalServerErrorException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PayloadTooLargeException'
          description: PayloadTooLargeException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
          description: ForbiddenException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
          description: NotFoundException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MethodNotAllowedException'
          description: MethodNotAllowedException
        "486":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
          description: TooManyRequestsException
      x-accepts:
      - application/json
    get:
      description: Retrieves information about the settings and attributes of a specific
        endpoint for an application.
      operationId: GetEndpoint
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The unique identifier for the application. This identifier is
          displayed as the <b>Project ID</b> on the Amazon Pinpoint console.
        explode: false
        in: path
        name: application-id
        required: true
        schema:
          type: string
        style: simple
      - description: The unique identifier for the endpoint.
        explode: false
        in: path
        name: endpoint-id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetEndpointResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
          description: BadRequestException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
          description: InternalServerErrorException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PayloadTooLargeException'
          description: PayloadTooLargeException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
          description: ForbiddenException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
          description: NotFoundException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MethodNotAllowedException'
          description: MethodNotAllowedException
        "486":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
          description: TooManyRequestsException
      x-accepts:
      - application/json
    put:
      description: "Creates a new endpoint for an application or updates the settings\
        \ and attributes of an existing endpoint for an application. You can also\
        \ use this operation to define custom attributes for an endpoint. If an update\
        \ includes one or more values for a custom attribute, Amazon Pinpoint replaces\
        \ (overwrites) any existing values with the new values."
      operationId: UpdateEndpoint
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The unique identifier for the application. This identifier is
          displayed as the <b>Project ID</b> on the Amazon Pinpoint console.
        explode: false
        in: path
        name: application-id
        required: true
        schema:
          type: string
        style: simple
      - description: The unique identifier for the endpoint.
        explode: false
        in: path
        name: endpoint-id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateEndpoint_request'
        required: true
      responses:
        "202":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateEndpointResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
          description: BadRequestException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
          description: InternalServerErrorException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PayloadTooLargeException'
          description: PayloadTooLargeException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
          description: ForbiddenException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
          description: NotFoundException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MethodNotAllowedException'
          description: MethodNotAllowedException
        "486":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
          description: TooManyRequestsException
      x-content-type: application/json
      x-accepts:
      - application/json
  /v1/apps/{application-id}/eventstream:
    delete:
      description: Deletes the event stream for an application.
      operationId: DeleteEventStream
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The unique identifier for the application. This identifier is
          displayed as the <b>Project ID</b> on the Amazon Pinpoint console.
        explode: false
        in: path
        name: application-id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteEventStreamResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
          description: BadRequestException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
          description: InternalServerErrorException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PayloadTooLargeException'
          description: PayloadTooLargeException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
          description: ForbiddenException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
          description: NotFoundException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MethodNotAllowedException'
          description: MethodNotAllowedException
        "486":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
          description: TooManyRequestsException
      x-accepts:
      - application/json
    get:
      description: Retrieves information about the event stream settings for an application.
      operationId: GetEventStream
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The unique identifier for the application. This identifier is
          displayed as the <b>Project ID</b> on the Amazon Pinpoint console.
        explode: false
        in: path
        name: application-id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetEventStreamResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
          description: BadRequestException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
          description: InternalServerErrorException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PayloadTooLargeException'
          description: PayloadTooLargeException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
          description: ForbiddenException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
          description: NotFoundException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MethodNotAllowedException'
          description: MethodNotAllowedException
        "486":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
          description: TooManyRequestsException
      x-accepts:
      - application/json
    post:
      description: Creates a new event stream for an application or updates the settings
        of an existing event stream for an application.
      operationId: PutEventStream
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The unique identifier for the application. This identifier is
          displayed as the <b>Project ID</b> on the Amazon Pinpoint console.
        explode: false
        in: path
        name: application-id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PutEventStream_request'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PutEventStreamResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
          description: BadRequestException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
          description: InternalServerErrorException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PayloadTooLargeException'
          description: PayloadTooLargeException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
          description: ForbiddenException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
          description: NotFoundException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MethodNotAllowedException'
          description: MethodNotAllowedException
        "486":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
          description: TooManyRequestsException
      x-content-type: application/json
      x-accepts:
      - application/json
  /v1/apps/{application-id}/channels/gcm:
    delete:
      description: Disables the GCM channel for an application and deletes any existing
        settings for the channel.
      operationId: DeleteGcmChannel
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The unique identifier for the application. This identifier is
          displayed as the <b>Project ID</b> on the Amazon Pinpoint console.
        explode: false
        in: path
        name: application-id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteGcmChannelResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
          description: BadRequestException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
          description: InternalServerErrorException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PayloadTooLargeException'
          description: PayloadTooLargeException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
          description: ForbiddenException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
          description: NotFoundException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MethodNotAllowedException'
          description: MethodNotAllowedException
        "486":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
          description: TooManyRequestsException
      x-accepts:
      - application/json
    get:
      description: Retrieves information about the status and settings of the GCM
        channel for an application.
      operationId: GetGcmChannel
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The unique identifier for the application. This identifier is
          displayed as the <b>Project ID</b> on the Amazon Pinpoint console.
        explode: false
        in: path
        name: application-id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetGcmChannelResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
          description: BadRequestException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
          description: InternalServerErrorException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PayloadTooLargeException'
          description: PayloadTooLargeException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
          description: ForbiddenException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
          description: NotFoundException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MethodNotAllowedException'
          description: MethodNotAllowedException
        "486":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
          description: TooManyRequestsException
      x-accepts:
      - application/json
    put:
      description: Enables the GCM channel for an application or updates the status
        and settings of the GCM channel for an application.
      operationId: UpdateGcmChannel
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The unique identifier for the application. This identifier is
          displayed as the <b>Project ID</b> on the Amazon Pinpoint console.
        explode: false
        in: path
        name: application-id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateGcmChannel_request'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateGcmChannelResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
          description: BadRequestException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
          description: InternalServerErrorException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PayloadTooLargeException'
          description: PayloadTooLargeException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
          description: ForbiddenException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
          description: NotFoundException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MethodNotAllowedException'
          description: MethodNotAllowedException
        "486":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
          description: TooManyRequestsException
      x-content-type: application/json
      x-accepts:
      - application/json
  /v1/apps/{application-id}/journeys/{journey-id}:
    delete:
      description: Deletes a journey from an application.
      operationId: DeleteJourney
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The unique identifier for the application. This identifier is
          displayed as the <b>Project ID</b> on the Amazon Pinpoint console.
        explode: false
        in: path
        name: application-id
        required: true
        schema:
          type: string
        style: simple
      - description: The unique identifier for the journey.
        explode: false
        in: path
        name: journey-id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteJourneyResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
          description: BadRequestException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
          description: InternalServerErrorException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PayloadTooLargeException'
          description: PayloadTooLargeException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
          description: ForbiddenException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
          description: NotFoundException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MethodNotAllowedException'
          description: MethodNotAllowedException
        "486":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
          description: TooManyRequestsException
      x-accepts:
      - application/json
    get:
      description: "Retrieves information about the status, configuration, and other\
        \ settings for a journey."
      operationId: GetJourney
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The unique identifier for the application. This identifier is
          displayed as the <b>Project ID</b> on the Amazon Pinpoint console.
        explode: false
        in: path
        name: application-id
        required: true
        schema:
          type: string
        style: simple
      - description: The unique identifier for the journey.
        explode: false
        in: path
        name: journey-id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetJourneyResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
          description: BadRequestException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
          description: InternalServerErrorException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PayloadTooLargeException'
          description: PayloadTooLargeException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
          description: ForbiddenException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
          description: NotFoundException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MethodNotAllowedException'
          description: MethodNotAllowedException
        "486":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
          description: TooManyRequestsException
      x-accepts:
      - application/json
    put:
      description: Updates the configuration and other settings for a journey.
      operationId: UpdateJourney
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The unique identifier for the application. This identifier is
          displayed as the <b>Project ID</b> on the Amazon Pinpoint console.
        explode: false
        in: path
        name: application-id
        required: true
        schema:
          type: string
        style: simple
      - description: The unique identifier for the journey.
        explode: false
        in: path
        name: journey-id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateJourney_request'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateJourneyResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
          description: BadRequestException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
          description: InternalServerErrorException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PayloadTooLargeException'
          description: PayloadTooLargeException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
          description: ForbiddenException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
          description: NotFoundException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MethodNotAllowedException'
          description: MethodNotAllowedException
        "486":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
          description: TooManyRequestsException
        "487":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
          description: ConflictException
      x-content-type: application/json
      x-accepts:
      - application/json
  /v1/recommenders/{recommender-id}:
    delete:
      description: Deletes an Amazon Pinpoint configuration for a recommender model.
      operationId: DeleteRecommenderConfiguration
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The unique identifier for the recommender model configuration.
          This identifier is displayed as the <b>Recommender ID</b> on the Amazon
          Pinpoint console.
        explode: false
        in: path
        name: recommender-id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteRecommenderConfigurationResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
          description: BadRequestException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
          description: InternalServerErrorException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PayloadTooLargeException'
          description: PayloadTooLargeException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
          description: ForbiddenException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
          description: NotFoundException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MethodNotAllowedException'
          description: MethodNotAllowedException
        "486":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
          description: TooManyRequestsException
      x-accepts:
      - application/json
    get:
      description: Retrieves information about an Amazon Pinpoint configuration for
        a recommender model.
      operationId: GetRecommenderConfiguration
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The unique identifier for the recommender model configuration.
          This identifier is displayed as the <b>Recommender ID</b> on the Amazon
          Pinpoint console.
        explode: false
        in: path
        name: recommender-id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetRecommenderConfigurationResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
          description: BadRequestException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
          description: InternalServerErrorException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PayloadTooLargeException'
          description: PayloadTooLargeException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
          description: ForbiddenException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
          description: NotFoundException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MethodNotAllowedException'
          description: MethodNotAllowedException
        "486":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
          description: TooManyRequestsException
      x-accepts:
      - application/json
    put:
      description: Updates an Amazon Pinpoint configuration for a recommender model.
      operationId: UpdateRecommenderConfiguration
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The unique identifier for the recommender model configuration.
          This identifier is displayed as the <b>Recommender ID</b> on the Amazon
          Pinpoint console.
        explode: false
        in: path
        name: recommender-id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateRecommenderConfiguration_request'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateRecommenderConfigurationResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
          description: BadRequestException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
          description: InternalServerErrorException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PayloadTooLargeException'
          description: PayloadTooLargeException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
          description: ForbiddenException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
          description: NotFoundException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MethodNotAllowedException'
          description: MethodNotAllowedException
        "486":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
          description: TooManyRequestsException
      x-content-type: application/json
      x-accepts:
      - application/json
  /v1/apps/{application-id}/segments/{segment-id}:
    delete:
      description: Deletes a segment from an application.
      operationId: DeleteSegment
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The unique identifier for the application. This identifier is
          displayed as the <b>Project ID</b> on the Amazon Pinpoint console.
        explode: false
        in: path
        name: application-id
        required: true
        schema:
          type: string
        style: simple
      - description: The unique identifier for the segment.
        explode: false
        in: path
        name: segment-id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteSegmentResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
          description: BadRequestException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
          description: InternalServerErrorException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PayloadTooLargeException'
          description: PayloadTooLargeException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
          description: ForbiddenException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
          description: NotFoundException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MethodNotAllowedException'
          description: MethodNotAllowedException
        "486":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
          description: TooManyRequestsException
      x-accepts:
      - application/json
    get:
      description: "Retrieves information about the configuration, dimension, and\
        \ other settings for a specific segment that's associated with an application."
      operationId: GetSegment
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The unique identifier for the application. This identifier is
          displayed as the <b>Project ID</b> on the Amazon Pinpoint console.
        explode: false
        in: path
        name: application-id
        required: true
        schema:
          type: string
        style: simple
      - description: The unique identifier for the segment.
        explode: false
        in: path
        name: segment-id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetSegmentResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
          description: BadRequestException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
          description: InternalServerErrorException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PayloadTooLargeException'
          description: PayloadTooLargeException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
          description: ForbiddenException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
          description: NotFoundException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MethodNotAllowedException'
          description: MethodNotAllowedException
        "486":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
          description: TooManyRequestsException
      x-accepts:
      - application/json
    put:
      description: "Creates a new segment for an application or updates the configuration,\
        \ dimension, and other settings for an existing segment that's associated\
        \ with an application."
      operationId: UpdateSegment
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The unique identifier for the application. This identifier is
          displayed as the <b>Project ID</b> on the Amazon Pinpoint console.
        explode: false
        in: path
        name: application-id
        required: true
        schema:
          type: string
        style: simple
      - description: The unique identifier for the segment.
        explode: false
        in: path
        name: segment-id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateSegment_request'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateSegmentResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
          description: BadRequestException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
          description: InternalServerErrorException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PayloadTooLargeException'
          description: PayloadTooLargeException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
          description: ForbiddenException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
          description: NotFoundException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MethodNotAllowedException'
          description: MethodNotAllowedException
        "486":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
          description: TooManyRequestsException
      x-content-type: application/json
      x-accepts:
      - application/json
  /v1/apps/{application-id}/channels/sms:
    delete:
      description: Disables the SMS channel for an application and deletes any existing
        settings for the channel.
      operationId: DeleteSmsChannel
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The unique identifier for the application. This identifier is
          displayed as the <b>Project ID</b> on the Amazon Pinpoint console.
        explode: false
        in: path
        name: application-id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteSmsChannelResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
          description: BadRequestException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
          description: InternalServerErrorException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PayloadTooLargeException'
          description: PayloadTooLargeException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
          description: ForbiddenException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
          description: NotFoundException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MethodNotAllowedException'
          description: MethodNotAllowedException
        "486":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
          description: TooManyRequestsException
      x-accepts:
      - application/json
    get:
      description: Retrieves information about the status and settings of the SMS
        channel for an application.
      operationId: GetSmsChannel
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The unique identifier for the application. This identifier is
          displayed as the <b>Project ID</b> on the Amazon Pinpoint console.
        explode: false
        in: path
        name: application-id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetSmsChannelResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
          description: BadRequestException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
          description: InternalServerErrorException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PayloadTooLargeException'
          description: PayloadTooLargeException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
          description: ForbiddenException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
          description: NotFoundException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MethodNotAllowedException'
          description: MethodNotAllowedException
        "486":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
          description: TooManyRequestsException
      x-accepts:
      - application/json
    put:
      description: Enables the SMS channel for an application or updates the status
        and settings of the SMS channel for an application.
      operationId: UpdateSmsChannel
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The unique identifier for the application. This identifier is
          displayed as the <b>Project ID</b> on the Amazon Pinpoint console.
        explode: false
        in: path
        name: application-id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateSmsChannel_request'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateSmsChannelResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
          description: BadRequestException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
          description: InternalServerErrorException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PayloadTooLargeException'
          description: PayloadTooLargeException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
          description: ForbiddenException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
          description: NotFoundException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MethodNotAllowedException'
          description: MethodNotAllowedException
        "486":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
          description: TooManyRequestsException
      x-content-type: application/json
      x-accepts:
      - application/json
  /v1/apps/{application-id}/users/{user-id}:
    delete:
      description: Deletes all the endpoints that are associated with a specific user
        ID.
      operationId: DeleteUserEndpoints
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The unique identifier for the application. This identifier is
          displayed as the <b>Project ID</b> on the Amazon Pinpoint console.
        explode: false
        in: path
        name: application-id
        required: true
        schema:
          type: string
        style: simple
      - description: The unique identifier for the user.
        explode: false
        in: path
        name: user-id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "202":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteUserEndpointsResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
          description: BadRequestException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
          description: InternalServerErrorException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PayloadTooLargeException'
          description: PayloadTooLargeException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
          description: ForbiddenException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
          description: NotFoundException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MethodNotAllowedException'
          description: MethodNotAllowedException
        "486":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
          description: TooManyRequestsException
      x-accepts:
      - application/json
    get:
      description: Retrieves information about all the endpoints that are associated
        with a specific user ID.
      operationId: GetUserEndpoints
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The unique identifier for the application. This identifier is
          displayed as the <b>Project ID</b> on the Amazon Pinpoint console.
        explode: false
        in: path
        name: application-id
        required: true
        schema:
          type: string
        style: simple
      - description: The unique identifier for the user.
        explode: false
        in: path
        name: user-id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetUserEndpointsResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
          description: BadRequestException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
          description: InternalServerErrorException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PayloadTooLargeException'
          description: PayloadTooLargeException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
          description: ForbiddenException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
          description: NotFoundException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MethodNotAllowedException'
          description: MethodNotAllowedException
        "486":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
          description: TooManyRequestsException
      x-accepts:
      - application/json
  /v1/apps/{application-id}/channels/voice:
    delete:
      description: Disables the voice channel for an application and deletes any existing
        settings for the channel.
      operationId: DeleteVoiceChannel
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The unique identifier for the application. This identifier is
          displayed as the <b>Project ID</b> on the Amazon Pinpoint console.
        explode: false
        in: path
        name: application-id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteVoiceChannelResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
          description: BadRequestException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
          description: InternalServerErrorException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PayloadTooLargeException'
          description: PayloadTooLargeException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
          description: ForbiddenException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
          description: NotFoundException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MethodNotAllowedException'
          description: MethodNotAllowedException
        "486":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
          description: TooManyRequestsException
      x-accepts:
      - application/json
    get:
      description: Retrieves information about the status and settings of the voice
        channel for an application.
      operationId: GetVoiceChannel
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The unique identifier for the application. This identifier is
          displayed as the <b>Project ID</b> on the Amazon Pinpoint console.
        explode: false
        in: path
        name: application-id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetVoiceChannelResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
          description: BadRequestException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
          description: InternalServerErrorException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PayloadTooLargeException'
          description: PayloadTooLargeException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
          description: ForbiddenException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
          description: NotFoundException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MethodNotAllowedException'
          description: MethodNotAllowedException
        "486":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
          description: TooManyRequestsException
      x-accepts:
      - application/json
    put:
      description: Enables the voice channel for an application or updates the status
        and settings of the voice channel for an application.
      operationId: UpdateVoiceChannel
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The unique identifier for the application. This identifier is
          displayed as the <b>Project ID</b> on the Amazon Pinpoint console.
        explode: false
        in: path
        name: application-id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateVoiceChannel_request'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateVoiceChannelResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
          description: BadRequestException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
          description: InternalServerErrorException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PayloadTooLargeException'
          description: PayloadTooLargeException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
          description: ForbiddenException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
          description: NotFoundException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MethodNotAllowedException'
          description: MethodNotAllowedException
        "486":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
          description: TooManyRequestsException
      x-content-type: application/json
      x-accepts:
      - application/json
  /v1/apps/{application-id}/kpis/daterange/{kpi-name}:
    get:
      description: Retrieves (queries) pre-aggregated data for a standard metric that
        applies to an application.
      operationId: GetApplicationDateRangeKpi
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The unique identifier for the application. This identifier is
          displayed as the <b>Project ID</b> on the Amazon Pinpoint console.
        explode: false
        in: path
        name: application-id
        required: true
        schema:
          type: string
        style: simple
      - description: "The last date and time to retrieve data for, as part of an inclusive\
          \ date range that filters the query results. This value should be in extended\
          \ ISO 8601 format and use Coordinated Universal Time (UTC), for example:\
          \ 2019-07-26T20:00:00Z for 8:00 PM UTC July 26, 2019."
        explode: true
        in: query
        name: end-time
        required: false
        schema:
          format: date-time
          type: string
        style: form
      - description: "The name of the metric, also referred to as a <i>key performance\
          \ indicator (KPI)</i>, to retrieve data for. This value describes the associated\
          \ metric and consists of two or more terms, which are comprised of lowercase\
          \ alphanumeric characters, separated by a hyphen. Examples are email-open-rate\
          \ and successful-delivery-rate. For a list of valid values, see the <a href=\"\
          https://docs.aws.amazon.com/pinpoint/latest/developerguide/analytics-standard-metrics.html\"\
          >Amazon Pinpoint Developer Guide</a>."
        explode: false
        in: path
        name: kpi-name
        required: true
        schema:
          type: string
        style: simple
      - description: "The  string that specifies which page of results to return in\
          \ a paginated response. This parameter is not supported for application,\
          \ campaign, and journey metrics."
        explode: true
        in: query
        name: next-token
        required: false
        schema:
          type: string
        style: form
      - description: "The maximum number of items to include in each page of a paginated\
          \ response. This parameter is not supported for application, campaign, and\
          \ journey metrics."
        explode: true
        in: query
        name: page-size
        required: false
        schema:
          type: string
        style: form
      - description: "The first date and time to retrieve data for, as part of an\
          \ inclusive date range that filters the query results. This value should\
          \ be in extended ISO 8601 format and use Coordinated Universal Time (UTC),\
          \ for example: 2019-07-19T20:00:00Z for 8:00 PM UTC July 19, 2019. This\
          \ value should also be fewer than 90 days from the current day."
        explode: true
        in: query
        name: start-time
        required: false
        schema:
          format: date-time
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetApplicationDateRangeKpiResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
          description: BadRequestException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
          description: InternalServerErrorException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PayloadTooLargeException'
          description: PayloadTooLargeException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
          description: ForbiddenException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
          description: NotFoundException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MethodNotAllowedException'
          description: MethodNotAllowedException
        "486":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
          description: TooManyRequestsException
      x-accepts:
      - application/json
  /v1/apps/{application-id}/settings:
    get:
      description: Retrieves information about the settings for an application.
      operationId: GetApplicationSettings
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The unique identifier for the application. This identifier is
          displayed as the <b>Project ID</b> on the Amazon Pinpoint console.
        explode: false
        in: path
        name: application-id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetApplicationSettingsResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
          description: BadRequestException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
          description: InternalServerErrorException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PayloadTooLargeException'
          description: PayloadTooLargeException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
          description: ForbiddenException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
          description: NotFoundException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MethodNotAllowedException'
          description: MethodNotAllowedException
        "486":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
          description: TooManyRequestsException
      x-accepts:
      - application/json
    put:
      description: Updates the settings for an application.
      operationId: UpdateApplicationSettings
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The unique identifier for the application. This identifier is
          displayed as the <b>Project ID</b> on the Amazon Pinpoint console.
        explode: false
        in: path
        name: application-id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateApplicationSettings_request'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateApplicationSettingsResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
          description: BadRequestException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
          description: InternalServerErrorException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PayloadTooLargeException'
          description: PayloadTooLargeException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
          description: ForbiddenException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
          description: NotFoundException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MethodNotAllowedException'
          description: MethodNotAllowedException
        "486":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
          description: TooManyRequestsException
      x-content-type: application/json
      x-accepts:
      - application/json
  /v1/apps/{application-id}/campaigns/{campaign-id}/activities:
    get:
      description: Retrieves information about all the activities for a campaign.
      operationId: GetCampaignActivities
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The unique identifier for the application. This identifier is
          displayed as the <b>Project ID</b> on the Amazon Pinpoint console.
        explode: false
        in: path
        name: application-id
        required: true
        schema:
          type: string
        style: simple
      - description: The unique identifier for the campaign.
        explode: false
        in: path
        name: campaign-id
        required: true
        schema:
          type: string
        style: simple
      - description: "The maximum number of items to include in each page of a paginated\
          \ response. This parameter is not supported for application, campaign, and\
          \ journey metrics."
        explode: true
        in: query
        name: page-size
        required: false
        schema:
          type: string
        style: form
      - description: The NextToken string that specifies which page of results to
          return in a paginated response.
        explode: true
        in: query
        name: token
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetCampaignActivitiesResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
          description: BadRequestException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
          description: InternalServerErrorException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PayloadTooLargeException'
          description: PayloadTooLargeException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
          description: ForbiddenException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
          description: NotFoundException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MethodNotAllowedException'
          description: MethodNotAllowedException
        "486":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
          description: TooManyRequestsException
      x-accepts:
      - application/json
  /v1/apps/{application-id}/campaigns/{campaign-id}/kpis/daterange/{kpi-name}:
    get:
      description: Retrieves (queries) pre-aggregated data for a standard metric that
        applies to a campaign.
      operationId: GetCampaignDateRangeKpi
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The unique identifier for the application. This identifier is
          displayed as the <b>Project ID</b> on the Amazon Pinpoint console.
        explode: false
        in: path
        name: application-id
        required: true
        schema:
          type: string
        style: simple
      - description: The unique identifier for the campaign.
        explode: false
        in: path
        name: campaign-id
        required: true
        schema:
          type: string
        style: simple
      - description: "The last date and time to retrieve data for, as part of an inclusive\
          \ date range that filters the query results. This value should be in extended\
          \ ISO 8601 format and use Coordinated Universal Time (UTC), for example:\
          \ 2019-07-26T20:00:00Z for 8:00 PM UTC July 26, 2019."
        explode: true
        in: query
        name: end-time
        required: false
        schema:
          format: date-time
          type: string
        style: form
      - description: "The name of the metric, also referred to as a <i>key performance\
          \ indicator (KPI)</i>, to retrieve data for. This value describes the associated\
          \ metric and consists of two or more terms, which are comprised of lowercase\
          \ alphanumeric characters, separated by a hyphen. Examples are email-open-rate\
          \ and successful-delivery-rate. For a list of valid values, see the <a href=\"\
          https://docs.aws.amazon.com/pinpoint/latest/developerguide/analytics-standard-metrics.html\"\
          >Amazon Pinpoint Developer Guide</a>."
        explode: false
        in: path
        name: kpi-name
        required: true
        schema:
          type: string
        style: simple
      - description: "The  string that specifies which page of results to return in\
          \ a paginated response. This parameter is not supported for application,\
          \ campaign, and journey metrics."
        explode: true
        in: query
        name: next-token
        required: false
        schema:
          type: string
        style: form
      - description: "The maximum number of items to include in each page of a paginated\
          \ response. This parameter is not supported for application, campaign, and\
          \ journey metrics."
        explode: true
        in: query
        name: page-size
        required: false
        schema:
          type: string
        style: form
      - description: "The first date and time to retrieve data for, as part of an\
          \ inclusive date range that filters the query results. This value should\
          \ be in extended ISO 8601 format and use Coordinated Universal Time (UTC),\
          \ for example: 2019-07-19T20:00:00Z for 8:00 PM UTC July 19, 2019. This\
          \ value should also be fewer than 90 days from the current day."
        explode: true
        in: query
        name: start-time
        required: false
        schema:
          format: date-time
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetCampaignDateRangeKpiResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
          description: BadRequestException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
          description: InternalServerErrorException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PayloadTooLargeException'
          description: PayloadTooLargeException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
          description: ForbiddenException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
          description: NotFoundException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MethodNotAllowedException'
          description: MethodNotAllowedException
        "486":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
          description: TooManyRequestsException
      x-accepts:
      - application/json
  /v1/apps/{application-id}/campaigns/{campaign-id}/versions/{version}:
    get:
      description: "Retrieves information about the status, configuration, and other\
        \ settings for a specific version of a campaign."
      operationId: GetCampaignVersion
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The unique identifier for the application. This identifier is
          displayed as the <b>Project ID</b> on the Amazon Pinpoint console.
        explode: false
        in: path
        name: application-id
        required: true
        schema:
          type: string
        style: simple
      - description: The unique identifier for the campaign.
        explode: false
        in: path
        name: campaign-id
        required: true
        schema:
          type: string
        style: simple
      - description: The unique version number (Version property) for the campaign
          version.
        explode: false
        in: path
        name: version
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetCampaignVersionResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
          description: BadRequestException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
          description: InternalServerErrorException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PayloadTooLargeException'
          description: PayloadTooLargeException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
          description: ForbiddenException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
          description: NotFoundException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MethodNotAllowedException'
          description: MethodNotAllowedException
        "486":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
          description: TooManyRequestsException
      x-accepts:
      - application/json
  /v1/apps/{application-id}/campaigns/{campaign-id}/versions:
    get:
      description: "Retrieves information about the status, configuration, and other\
        \ settings for all versions of a campaign."
      operationId: GetCampaignVersions
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The unique identifier for the application. This identifier is
          displayed as the <b>Project ID</b> on the Amazon Pinpoint console.
        explode: false
        in: path
        name: application-id
        required: true
        schema:
          type: string
        style: simple
      - description: The unique identifier for the campaign.
        explode: false
        in: path
        name: campaign-id
        required: true
        schema:
          type: string
        style: simple
      - description: "The maximum number of items to include in each page of a paginated\
          \ response. This parameter is not supported for application, campaign, and\
          \ journey metrics."
        explode: true
        in: query
        name: page-size
        required: false
        schema:
          type: string
        style: form
      - description: The NextToken string that specifies which page of results to
          return in a paginated response.
        explode: true
        in: query
        name: token
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetCampaignVersionsResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
          description: BadRequestException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
          description: InternalServerErrorException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PayloadTooLargeException'
          description: PayloadTooLargeException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
          description: ForbiddenException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
          description: NotFoundException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MethodNotAllowedException'
          description: MethodNotAllowedException
        "486":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
          description: TooManyRequestsException
      x-accepts:
      - application/json
  /v1/apps/{application-id}/channels:
    get:
      description: Retrieves information about the history and status of each channel
        for an application.
      operationId: GetChannels
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The unique identifier for the application. This identifier is
          displayed as the <b>Project ID</b> on the Amazon Pinpoint console.
        explode: false
        in: path
        name: application-id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetChannelsResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
          description: BadRequestException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
          description: InternalServerErrorException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PayloadTooLargeException'
          description: PayloadTooLargeException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
          description: ForbiddenException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
          description: NotFoundException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MethodNotAllowedException'
          description: MethodNotAllowedException
        "486":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
          description: TooManyRequestsException
      x-accepts:
      - application/json
  /v1/apps/{application-id}/jobs/export/{job-id}:
    get:
      description: Retrieves information about the status and settings of a specific
        export job for an application.
      operationId: GetExportJob
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The unique identifier for the application. This identifier is
          displayed as the <b>Project ID</b> on the Amazon Pinpoint console.
        explode: false
        in: path
        name: application-id
        required: true
        schema:
          type: string
        style: simple
      - description: The unique identifier for the job.
        explode: false
        in: path
        name: job-id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetExportJobResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
          description: BadRequestException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
          description: InternalServerErrorException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PayloadTooLargeException'
          description: PayloadTooLargeException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
          description: ForbiddenException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
          description: NotFoundException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MethodNotAllowedException'
          description: MethodNotAllowedException
        "486":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
          description: TooManyRequestsException
      x-accepts:
      - application/json
  /v1/apps/{application-id}/jobs/import/{job-id}:
    get:
      description: Retrieves information about the status and settings of a specific
        import job for an application.
      operationId: GetImportJob
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The unique identifier for the application. This identifier is
          displayed as the <b>Project ID</b> on the Amazon Pinpoint console.
        explode: false
        in: path
        name: application-id
        required: true
        schema:
          type: string
        style: simple
      - description: The unique identifier for the job.
        explode: false
        in: path
        name: job-id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetImportJobResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
          description: BadRequestException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
          description: InternalServerErrorException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PayloadTooLargeException'
          description: PayloadTooLargeException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
          description: ForbiddenException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
          description: NotFoundException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MethodNotAllowedException'
          description: MethodNotAllowedException
        "486":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
          description: TooManyRequestsException
      x-accepts:
      - application/json
  /v1/apps/{application-id}/endpoints/{endpoint-id}/inappmessages:
    get:
      description: Retrieves the in-app messages targeted for the provided endpoint
        ID.
      operationId: GetInAppMessages
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The unique identifier for the application. This identifier is
          displayed as the <b>Project ID</b> on the Amazon Pinpoint console.
        explode: false
        in: path
        name: application-id
        required: true
        schema:
          type: string
        style: simple
      - description: The unique identifier for the endpoint.
        explode: false
        in: path
        name: endpoint-id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetInAppMessagesResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
          description: BadRequestException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
          description: InternalServerErrorException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PayloadTooLargeException'
          description: PayloadTooLargeException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
          description: ForbiddenException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
          description: NotFoundException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MethodNotAllowedException'
          description: MethodNotAllowedException
        "486":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
          description: TooManyRequestsException
      x-accepts:
      - application/json
  /v1/apps/{application-id}/journeys/{journey-id}/kpis/daterange/{kpi-name}:
    get:
      description: Retrieves (queries) pre-aggregated data for a standard engagement
        metric that applies to a journey.
      operationId: GetJourneyDateRangeKpi
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The unique identifier for the application. This identifier is
          displayed as the <b>Project ID</b> on the Amazon Pinpoint console.
        explode: false
        in: path
        name: application-id
        required: true
        schema:
          type: string
        style: simple
      - description: "The last date and time to retrieve data for, as part of an inclusive\
          \ date range that filters the query results. This value should be in extended\
          \ ISO 8601 format and use Coordinated Universal Time (UTC), for example:\
          \ 2019-07-26T20:00:00Z for 8:00 PM UTC July 26, 2019."
        explode: true
        in: query
        name: end-time
        required: false
        schema:
          format: date-time
          type: string
        style: form
      - description: The unique identifier for the journey.
        explode: false
        in: path
        name: journey-id
        required: true
        schema:
          type: string
        style: simple
      - description: "The name of the metric, also referred to as a <i>key performance\
          \ indicator (KPI)</i>, to retrieve data for. This value describes the associated\
          \ metric and consists of two or more terms, which are comprised of lowercase\
          \ alphanumeric characters, separated by a hyphen. Examples are email-open-rate\
          \ and successful-delivery-rate. For a list of valid values, see the <a href=\"\
          https://docs.aws.amazon.com/pinpoint/latest/developerguide/analytics-standard-metrics.html\"\
          >Amazon Pinpoint Developer Guide</a>."
        explode: false
        in: path
        name: kpi-name
        required: true
        schema:
          type: string
        style: simple
      - description: "The  string that specifies which page of results to return in\
          \ a paginated response. This parameter is not supported for application,\
          \ campaign, and journey metrics."
        explode: true
        in: query
        name: next-token
        required: false
        schema:
          type: string
        style: form
      - description: "The maximum number of items to include in each page of a paginated\
          \ response. This parameter is not supported for application, campaign, and\
          \ journey metrics."
        explode: true
        in: query
        name: page-size
        required: false
        schema:
          type: string
        style: form
      - description: "The first date and time to retrieve data for, as part of an\
          \ inclusive date range that filters the query results. This value should\
          \ be in extended ISO 8601 format and use Coordinated Universal Time (UTC),\
          \ for example: 2019-07-19T20:00:00Z for 8:00 PM UTC July 19, 2019. This\
          \ value should also be fewer than 90 days from the current day."
        explode: true
        in: query
        name: start-time
        required: false
        schema:
          format: date-time
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetJourneyDateRangeKpiResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
          description: BadRequestException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
          description: InternalServerErrorException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PayloadTooLargeException'
          description: PayloadTooLargeException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
          description: ForbiddenException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
          description: NotFoundException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MethodNotAllowedException'
          description: MethodNotAllowedException
        "486":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
          description: TooManyRequestsException
      x-accepts:
      - application/json
  /v1/apps/{application-id}/journeys/{journey-id}/activities/{journey-activity-id}/execution-metrics:
    get:
      description: Retrieves (queries) pre-aggregated data for a standard execution
        metric that applies to a journey activity.
      operationId: GetJourneyExecutionActivityMetrics
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The unique identifier for the application. This identifier is
          displayed as the <b>Project ID</b> on the Amazon Pinpoint console.
        explode: false
        in: path
        name: application-id
        required: true
        schema:
          type: string
        style: simple
      - description: The unique identifier for the journey activity.
        explode: false
        in: path
        name: journey-activity-id
        required: true
        schema:
          type: string
        style: simple
      - description: The unique identifier for the journey.
        explode: false
        in: path
        name: journey-id
        required: true
        schema:
          type: string
        style: simple
      - description: "The <code/> string that specifies which page of results to return\
          \ in a paginated response. This parameter is not supported for application,\
          \ campaign, and journey metrics."
        explode: true
        in: query
        name: next-token
        required: false
        schema:
          type: string
        style: form
      - description: "The maximum number of items to include in each page of a paginated\
          \ response. This parameter is not supported for application, campaign, and\
          \ journey metrics."
        explode: true
        in: query
        name: page-size
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetJourneyExecutionActivityMetricsResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
          description: BadRequestException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
          description: InternalServerErrorException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PayloadTooLargeException'
          description: PayloadTooLargeException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
          description: ForbiddenException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
          description: NotFoundException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MethodNotAllowedException'
          description: MethodNotAllowedException
        "486":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
          description: TooManyRequestsException
      x-accepts:
      - application/json
  /v1/apps/{application-id}/journeys/{journey-id}/execution-metrics:
    get:
      description: Retrieves (queries) pre-aggregated data for a standard execution
        metric that applies to a journey.
      operationId: GetJourneyExecutionMetrics
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The unique identifier for the application. This identifier is
          displayed as the <b>Project ID</b> on the Amazon Pinpoint console.
        explode: false
        in: path
        name: application-id
        required: true
        schema:
          type: string
        style: simple
      - description: The unique identifier for the journey.
        explode: false
        in: path
        name: journey-id
        required: true
        schema:
          type: string
        style: simple
      - description: "The <code/> string that specifies which page of results to return\
          \ in a paginated response. This parameter is not supported for application,\
          \ campaign, and journey metrics."
        explode: true
        in: query
        name: next-token
        required: false
        schema:
          type: string
        style: form
      - description: "The maximum number of items to include in each page of a paginated\
          \ response. This parameter is not supported for application, campaign, and\
          \ journey metrics."
        explode: true
        in: query
        name: page-size
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetJourneyExecutionMetricsResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
          description: BadRequestException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
          description: InternalServerErrorException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PayloadTooLargeException'
          description: PayloadTooLargeException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
          description: ForbiddenException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
          description: NotFoundException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MethodNotAllowedException'
          description: MethodNotAllowedException
        "486":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
          description: TooManyRequestsException
      x-accepts:
      - application/json
  /v1/apps/{application-id}/journeys/{journey-id}/runs/{run-id}/activities/{journey-activity-id}/execution-metrics:
    get:
      description: Retrieves (queries) pre-aggregated data for a standard run execution
        metric that applies to a journey activity.
      operationId: GetJourneyRunExecutionActivityMetrics
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The unique identifier for the application. This identifier is
          displayed as the <b>Project ID</b> on the Amazon Pinpoint console.
        explode: false
        in: path
        name: application-id
        required: true
        schema:
          type: string
        style: simple
      - description: The unique identifier for the journey activity.
        explode: false
        in: path
        name: journey-activity-id
        required: true
        schema:
          type: string
        style: simple
      - description: The unique identifier for the journey.
        explode: false
        in: path
        name: journey-id
        required: true
        schema:
          type: string
        style: simple
      - description: "The <code/> string that specifies which page of results to return\
          \ in a paginated response. This parameter is not supported for application,\
          \ campaign, and journey metrics."
        explode: true
        in: query
        name: next-token
        required: false
        schema:
          type: string
        style: form
      - description: "The maximum number of items to include in each page of a paginated\
          \ response. This parameter is not supported for application, campaign, and\
          \ journey metrics."
        explode: true
        in: query
        name: page-size
        required: false
        schema:
          type: string
        style: form
      - description: The unique identifier for the journey run.
        explode: false
        in: path
        name: run-id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetJourneyRunExecutionActivityMetricsResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
          description: BadRequestException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
          description: InternalServerErrorException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PayloadTooLargeException'
          description: PayloadTooLargeException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
          description: ForbiddenException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
          description: NotFoundException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MethodNotAllowedException'
          description: MethodNotAllowedException
        "486":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
          description: TooManyRequestsException
      x-accepts:
      - application/json
  /v1/apps/{application-id}/journeys/{journey-id}/runs/{run-id}/execution-metrics:
    get:
      description: Retrieves (queries) pre-aggregated data for a standard run execution
        metric that applies to a journey.
      operationId: GetJourneyRunExecutionMetrics
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The unique identifier for the application. This identifier is
          displayed as the <b>Project ID</b> on the Amazon Pinpoint console.
        explode: false
        in: path
        name: application-id
        required: true
        schema:
          type: string
        style: simple
      - description: The unique identifier for the journey.
        explode: false
        in: path
        name: journey-id
        required: true
        schema:
          type: string
        style: simple
      - description: "The <code/> string that specifies which page of results to return\
          \ in a paginated response. This parameter is not supported for application,\
          \ campaign, and journey metrics."
        explode: true
        in: query
        name: next-token
        required: false
        schema:
          type: string
        style: form
      - description: "The maximum number of items to include in each page of a paginated\
          \ response. This parameter is not supported for application, campaign, and\
          \ journey metrics."
        explode: true
        in: query
        name: page-size
        required: false
        schema:
          type: string
        style: form
      - description: The unique identifier for the journey run.
        explode: false
        in: path
        name: run-id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetJourneyRunExecutionMetricsResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
          description: BadRequestException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
          description: InternalServerErrorException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PayloadTooLargeException'
          description: PayloadTooLargeException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
          description: ForbiddenException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
          description: NotFoundException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MethodNotAllowedException'
          description: MethodNotAllowedException
        "486":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
          description: TooManyRequestsException
      x-accepts:
      - application/json
  /v1/apps/{application-id}/journeys/{journey-id}/runs:
    get:
      description: Provides information about the runs of a journey.
      operationId: GetJourneyRuns
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The unique identifier for the application. This identifier is
          displayed as the <b>Project ID</b> on the Amazon Pinpoint console.
        explode: false
        in: path
        name: application-id
        required: true
        schema:
          type: string
        style: simple
      - description: The unique identifier for the journey.
        explode: false
        in: path
        name: journey-id
        required: true
        schema:
          type: string
        style: simple
      - description: "The maximum number of items to include in each page of a paginated\
          \ response. This parameter is not supported for application, campaign, and\
          \ journey metrics."
        explode: true
        in: query
        name: page-size
        required: false
        schema:
          type: string
        style: form
      - description: The NextToken string that specifies which page of results to
          return in a paginated response.
        explode: true
        in: query
        name: token
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetJourneyRunsResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
          description: BadRequestException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
          description: InternalServerErrorException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PayloadTooLargeException'
          description: PayloadTooLargeException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
          description: ForbiddenException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
          description: NotFoundException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MethodNotAllowedException'
          description: MethodNotAllowedException
        "486":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
          description: TooManyRequestsException
      x-accepts:
      - application/json
  /v1/apps/{application-id}/segments/{segment-id}/jobs/export:
    get:
      description: Retrieves information about the status and settings of the export
        jobs for a segment.
      operationId: GetSegmentExportJobs
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The unique identifier for the application. This identifier is
          displayed as the <b>Project ID</b> on the Amazon Pinpoint console.
        explode: false
        in: path
        name: application-id
        required: true
        schema:
          type: string
        style: simple
      - description: "The maximum number of items to include in each page of a paginated\
          \ response. This parameter is not supported for application, campaign, and\
          \ journey metrics."
        explode: true
        in: query
        name: page-size
        required: false
        schema:
          type: string
        style: form
      - description: The unique identifier for the segment.
        explode: false
        in: path
        name: segment-id
        required: true
        schema:
          type: string
        style: simple
      - description: The NextToken string that specifies which page of results to
          return in a paginated response.
        explode: true
        in: query
        name: token
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetSegmentExportJobsResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
          description: BadRequestException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
          description: InternalServerErrorException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PayloadTooLargeException'
          description: PayloadTooLargeException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
          description: ForbiddenException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
          description: NotFoundException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MethodNotAllowedException'
          description: MethodNotAllowedException
        "486":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
          description: TooManyRequestsException
      x-accepts:
      - application/json
  /v1/apps/{application-id}/segments/{segment-id}/jobs/import:
    get:
      description: Retrieves information about the status and settings of the import
        jobs for a segment.
      operationId: GetSegmentImportJobs
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The unique identifier for the application. This identifier is
          displayed as the <b>Project ID</b> on the Amazon Pinpoint console.
        explode: false
        in: path
        name: application-id
        required: true
        schema:
          type: string
        style: simple
      - description: "The maximum number of items to include in each page of a paginated\
          \ response. This parameter is not supported for application, campaign, and\
          \ journey metrics."
        explode: true
        in: query
        name: page-size
        required: false
        schema:
          type: string
        style: form
      - description: The unique identifier for the segment.
        explode: false
        in: path
        name: segment-id
        required: true
        schema:
          type: string
        style: simple
      - description: The NextToken string that specifies which page of results to
          return in a paginated response.
        explode: true
        in: query
        name: token
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetSegmentImportJobsResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
          description: BadRequestException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
          description: InternalServerErrorException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PayloadTooLargeException'
          description: PayloadTooLargeException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
          description: ForbiddenException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
          description: NotFoundException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MethodNotAllowedException'
          description: MethodNotAllowedException
        "486":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
          description: TooManyRequestsException
      x-accepts:
      - application/json
  /v1/apps/{application-id}/segments/{segment-id}/versions/{version}:
    get:
      description: "Retrieves information about the configuration, dimension, and\
        \ other settings for a specific version of a segment that's associated with\
        \ an application."
      operationId: GetSegmentVersion
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The unique identifier for the application. This identifier is
          displayed as the <b>Project ID</b> on the Amazon Pinpoint console.
        explode: false
        in: path
        name: application-id
        required: true
        schema:
          type: string
        style: simple
      - description: The unique identifier for the segment.
        explode: false
        in: path
        name: segment-id
        required: true
        schema:
          type: string
        style: simple
      - description: The unique version number (Version property) for the campaign
          version.
        explode: false
        in: path
        name: version
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetSegmentVersionResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
          description: BadRequestException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
          description: InternalServerErrorException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PayloadTooLargeException'
          description: PayloadTooLargeException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
          description: ForbiddenException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
          description: NotFoundException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MethodNotAllowedException'
          description: MethodNotAllowedException
        "486":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
          description: TooManyRequestsException
      x-accepts:
      - application/json
  /v1/apps/{application-id}/segments/{segment-id}/versions:
    get:
      description: "Retrieves information about the configuration, dimension, and\
        \ other settings for all the versions of a specific segment that's associated\
        \ with an application."
      operationId: GetSegmentVersions
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The unique identifier for the application. This identifier is
          displayed as the <b>Project ID</b> on the Amazon Pinpoint console.
        explode: false
        in: path
        name: application-id
        required: true
        schema:
          type: string
        style: simple
      - description: "The maximum number of items to include in each page of a paginated\
          \ response. This parameter is not supported for application, campaign, and\
          \ journey metrics."
        explode: true
        in: query
        name: page-size
        required: false
        schema:
          type: string
        style: form
      - description: The unique identifier for the segment.
        explode: false
        in: path
        name: segment-id
        required: true
        schema:
          type: string
        style: simple
      - description: The NextToken string that specifies which page of results to
          return in a paginated response.
        explode: true
        in: query
        name: token
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetSegmentVersionsResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
          description: BadRequestException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
          description: InternalServerErrorException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PayloadTooLargeException'
          description: PayloadTooLargeException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
          description: ForbiddenException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
          description: NotFoundException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MethodNotAllowedException'
          description: MethodNotAllowedException
        "486":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
          description: TooManyRequestsException
      x-accepts:
      - application/json
  /v1/tags/{resource-arn}:
    get:
      description: "Retrieves all the tags (keys and values) that are associated with\
        \ an application, campaign, message template, or segment."
      operationId: ListTagsForResource
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The Amazon Resource Name (ARN) of the resource.
        explode: false
        in: path
        name: resource-arn
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListTagsForResourceResponse'
          description: Success
      x-accepts:
      - application/json
    post:
      description: "Adds one or more tags (keys and values) to an application, campaign,\
        \ message template, or segment."
      operationId: TagResource
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The Amazon Resource Name (ARN) of the resource.
        explode: false
        in: path
        name: resource-arn
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TagResource_request'
        required: true
      responses:
        "204":
          description: Success
      x-content-type: application/json
      x-accepts:
      - application/json
  /v1/templates/{template-name}/{template-type}/versions:
    get:
      description: Retrieves information about all the versions of a specific message
        template.
      operationId: ListTemplateVersions
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: "The  string that specifies which page of results to return in\
          \ a paginated response. This parameter is not supported for application,\
          \ campaign, and journey metrics."
        explode: true
        in: query
        name: next-token
        required: false
        schema:
          type: string
        style: form
      - description: "The maximum number of items to include in each page of a paginated\
          \ response. This parameter is not supported for application, campaign, and\
          \ journey metrics."
        explode: true
        in: query
        name: page-size
        required: false
        schema:
          type: string
        style: form
      - description: "The name of the message template. A template name must start\
          \ with an alphanumeric character and can contain a maximum of 128 characters.\
          \ The characters can be alphanumeric characters, underscores (_), or hyphens\
          \ (-). Template names are case sensitive."
        explode: false
        in: path
        name: template-name
        required: true
        schema:
          type: string
        style: simple
      - description: "The type of channel that the message template is designed for.\
          \ Valid values are: EMAIL, PUSH, SMS, and VOICE."
        explode: false
        in: path
        name: template-type
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListTemplateVersionsResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
          description: BadRequestException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
          description: InternalServerErrorException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PayloadTooLargeException'
          description: PayloadTooLargeException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
          description: ForbiddenException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
          description: NotFoundException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MethodNotAllowedException'
          description: MethodNotAllowedException
        "486":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
          description: TooManyRequestsException
      x-accepts:
      - application/json
  /v1/templates:
    get:
      description: Retrieves information about all the message templates that are
        associated with your Amazon Pinpoint account.
      operationId: ListTemplates
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: "The  string that specifies which page of results to return in\
          \ a paginated response. This parameter is not supported for application,\
          \ campaign, and journey metrics."
        explode: true
        in: query
        name: next-token
        required: false
        schema:
          type: string
        style: form
      - description: "The maximum number of items to include in each page of a paginated\
          \ response. This parameter is not supported for application, campaign, and\
          \ journey metrics."
        explode: true
        in: query
        name: page-size
        required: false
        schema:
          type: string
        style: form
      - description: "The substring to match in the names of the message templates\
          \ to include in the results. If you specify this value, Amazon Pinpoint\
          \ returns only those templates whose names begin with the value that you\
          \ specify."
        explode: true
        in: query
        name: prefix
        required: false
        schema:
          type: string
        style: form
      - description: "The type of message template to include in the results. Valid\
          \ values are: EMAIL, PUSH, SMS, and VOICE. To include all types of templates\
          \ in the results, don't include this parameter in your request."
        explode: true
        in: query
        name: template-type
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListTemplatesResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MethodNotAllowedException'
          description: MethodNotAllowedException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
          description: TooManyRequestsException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
          description: BadRequestException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
          description: InternalServerErrorException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
          description: ForbiddenException
      x-accepts:
      - application/json
  /v1/phone/number/validate:
    post:
      description: Retrieves information about a phone number.
      operationId: PhoneNumberValidate
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PhoneNumberValidate_request'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PhoneNumberValidateResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
          description: BadRequestException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
          description: InternalServerErrorException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PayloadTooLargeException'
          description: PayloadTooLargeException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
          description: ForbiddenException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
          description: NotFoundException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MethodNotAllowedException'
          description: MethodNotAllowedException
        "486":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
          description: TooManyRequestsException
      x-content-type: application/json
      x-accepts:
      - application/json
  /v1/apps/{application-id}/events:
    post:
      description: "Creates a new event to record for endpoints, or creates or updates\
        \ endpoint data that existing events are associated with."
      operationId: PutEvents
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The unique identifier for the application. This identifier is
          displayed as the <b>Project ID</b> on the Amazon Pinpoint console.
        explode: false
        in: path
        name: application-id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PutEvents_request'
        required: true
      responses:
        "202":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PutEventsResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
          description: BadRequestException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
          description: InternalServerErrorException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PayloadTooLargeException'
          description: PayloadTooLargeException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
          description: ForbiddenException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
          description: NotFoundException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MethodNotAllowedException'
          description: MethodNotAllowedException
        "486":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
          description: TooManyRequestsException
      x-content-type: application/json
      x-accepts:
      - application/json
  /v1/apps/{application-id}/attributes/{attribute-type}:
    put:
      description: "Removes one or more attributes, of the same attribute type, from\
        \ all the endpoints that are associated with an application."
      operationId: RemoveAttributes
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The unique identifier for the application. This identifier is
          displayed as the <b>Project ID</b> on the Amazon Pinpoint console.
        explode: false
        in: path
        name: application-id
        required: true
        schema:
          type: string
        style: simple
      - description: " <p>The type of attribute or attributes to remove. Valid values\
          \ are:</p> <ul><li><p>endpoint-custom-attributes - Custom attributes that\
          \ describe endpoints, such as the date when an associated user opted in\
          \ or out of receiving communications from you through a specific type of\
          \ channel.</p></li> <li><p>endpoint-metric-attributes - Custom metrics that\
          \ your app reports to Amazon Pinpoint for endpoints, such as the number\
          \ of app sessions or the number of items left in a cart.</p></li> <li><p>endpoint-user-attributes\
          \ - Custom attributes that describe users, such as first name, last name,\
          \ and age.</p></li></ul>"
        explode: false
        in: path
        name: attribute-type
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RemoveAttributes_request'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RemoveAttributesResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
          description: BadRequestException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
          description: InternalServerErrorException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PayloadTooLargeException'
          description: PayloadTooLargeException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
          description: ForbiddenException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
          description: NotFoundException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MethodNotAllowedException'
          description: MethodNotAllowedException
        "486":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
          description: TooManyRequestsException
      x-content-type: application/json
      x-accepts:
      - application/json
  /v1/apps/{application-id}/messages:
    post:
      description: Creates and sends a direct message.
      operationId: SendMessages
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The unique identifier for the application. This identifier is
          displayed as the <b>Project ID</b> on the Amazon Pinpoint console.
        explode: false
        in: path
        name: application-id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SendMessages_request'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SendMessagesResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
          description: BadRequestException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
          description: InternalServerErrorException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PayloadTooLargeException'
          description: PayloadTooLargeException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
          description: ForbiddenException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
          description: NotFoundException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MethodNotAllowedException'
          description: MethodNotAllowedException
        "486":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
          description: TooManyRequestsException
      x-content-type: application/json
      x-accepts:
      - application/json
  /v1/apps/{application-id}/otp:
    post:
      description: Send an OTP message
      operationId: SendOTPMessage
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The unique ID of your Amazon Pinpoint application.
        explode: false
        in: path
        name: application-id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SendOTPMessage_request'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SendOTPMessageResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
          description: BadRequestException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
          description: InternalServerErrorException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PayloadTooLargeException'
          description: PayloadTooLargeException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
          description: ForbiddenException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
          description: NotFoundException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MethodNotAllowedException'
          description: MethodNotAllowedException
        "486":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
          description: TooManyRequestsException
      x-content-type: application/json
      x-accepts:
      - application/json
  /v1/apps/{application-id}/users-messages:
    post:
      description: Creates and sends a message to a list of users.
      operationId: SendUsersMessages
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The unique identifier for the application. This identifier is
          displayed as the <b>Project ID</b> on the Amazon Pinpoint console.
        explode: false
        in: path
        name: application-id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SendUsersMessages_request'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SendUsersMessagesResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
          description: BadRequestException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
          description: InternalServerErrorException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PayloadTooLargeException'
          description: PayloadTooLargeException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
          description: ForbiddenException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
          description: NotFoundException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MethodNotAllowedException'
          description: MethodNotAllowedException
        "486":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
          description: TooManyRequestsException
      x-content-type: application/json
      x-accepts:
      - application/json
  /v1/tags/{resource-arn}#tagKeys:
    delete:
      description: "Removes one or more tags (keys and values) from an application,\
        \ campaign, message template, or segment."
      operationId: UntagResource
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The Amazon Resource Name (ARN) of the resource.
        explode: false
        in: path
        name: resource-arn
        required: true
        schema:
          type: string
        style: simple
      - description: "The key of the tag to remove from the resource. To remove multiple\
          \ tags, append the tagKeys parameter and argument for each additional tag\
          \ to remove, separated by an ampersand (&amp;)."
        explode: true
        in: query
        name: tagKeys
        required: true
        schema:
          items:
            $ref: '#/components/schemas/__string'
          type: array
        style: form
      responses:
        "204":
          description: Success
      x-accepts:
      - application/json
  /v1/apps/{application-id}/endpoints:
    put:
      description: "Creates a new batch of endpoints for an application or updates\
        \ the settings and attributes of a batch of existing endpoints for an application.\
        \ You can also use this operation to define custom attributes for a batch\
        \ of endpoints. If an update includes one or more values for a custom attribute,\
        \ Amazon Pinpoint replaces (overwrites) any existing values with the new values."
      operationId: UpdateEndpointsBatch
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The unique identifier for the application. This identifier is
          displayed as the <b>Project ID</b> on the Amazon Pinpoint console.
        explode: false
        in: path
        name: application-id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateEndpointsBatch_request'
        required: true
      responses:
        "202":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateEndpointsBatchResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
          description: BadRequestException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
          description: InternalServerErrorException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PayloadTooLargeException'
          description: PayloadTooLargeException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
          description: ForbiddenException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
          description: NotFoundException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MethodNotAllowedException'
          description: MethodNotAllowedException
        "486":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
          description: TooManyRequestsException
      x-content-type: application/json
      x-accepts:
      - application/json
  /v1/apps/{application-id}/journeys/{journey-id}/state:
    put:
      description: Cancels (stops) an active journey.
      operationId: UpdateJourneyState
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The unique identifier for the application. This identifier is
          displayed as the <b>Project ID</b> on the Amazon Pinpoint console.
        explode: false
        in: path
        name: application-id
        required: true
        schema:
          type: string
        style: simple
      - description: The unique identifier for the journey.
        explode: false
        in: path
        name: journey-id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateJourneyState_request'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateJourneyStateResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
          description: BadRequestException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
          description: InternalServerErrorException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PayloadTooLargeException'
          description: PayloadTooLargeException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
          description: ForbiddenException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
          description: NotFoundException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MethodNotAllowedException'
          description: MethodNotAllowedException
        "486":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
          description: TooManyRequestsException
      x-content-type: application/json
      x-accepts:
      - application/json
  /v1/templates/{template-name}/{template-type}/active-version:
    put:
      description: Changes the status of a specific version of a message template
        to <i>active</i>.
      operationId: UpdateTemplateActiveVersion
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: "The name of the message template. A template name must start\
          \ with an alphanumeric character and can contain a maximum of 128 characters.\
          \ The characters can be alphanumeric characters, underscores (_), or hyphens\
          \ (-). Template names are case sensitive."
        explode: false
        in: path
        name: template-name
        required: true
        schema:
          type: string
        style: simple
      - description: "The type of channel that the message template is designed for.\
          \ Valid values are: EMAIL, PUSH, SMS, and VOICE."
        explode: false
        in: path
        name: template-type
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateTemplateActiveVersion_request'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateTemplateActiveVersionResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
          description: BadRequestException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
          description: InternalServerErrorException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PayloadTooLargeException'
          description: PayloadTooLargeException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
          description: ForbiddenException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
          description: NotFoundException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MethodNotAllowedException'
          description: MethodNotAllowedException
        "486":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
          description: TooManyRequestsException
      x-content-type: application/json
      x-accepts:
      - application/json
  /v1/apps/{application-id}/verify-otp:
    post:
      description: Verify an OTP
      operationId: VerifyOTPMessage
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The unique ID of your Amazon Pinpoint application.
        explode: false
        in: path
        name: application-id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VerifyOTPMessage_request'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VerifyOTPMessageResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
          description: BadRequestException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
          description: InternalServerErrorException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PayloadTooLargeException'
          description: PayloadTooLargeException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
          description: ForbiddenException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
          description: NotFoundException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MethodNotAllowedException'
          description: MethodNotAllowedException
        "486":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
          description: TooManyRequestsException
      x-content-type: application/json
      x-accepts:
      - application/json
components:
  parameters:
    X-Amz-Content-Sha256:
      explode: false
      in: header
      name: X-Amz-Content-Sha256
      required: false
      schema:
        type: string
      style: simple
    X-Amz-Date:
      explode: false
      in: header
      name: X-Amz-Date
      required: false
      schema:
        type: string
      style: simple
    X-Amz-Algorithm:
      explode: false
      in: header
      name: X-Amz-Algorithm
      required: false
      schema:
        type: string
      style: simple
    X-Amz-Credential:
      explode: false
      in: header
      name: X-Amz-Credential
      required: false
      schema:
        type: string
      style: simple
    X-Amz-Security-Token:
      explode: false
      in: header
      name: X-Amz-Security-Token
      required: false
      schema:
        type: string
      style: simple
    X-Amz-Signature:
      explode: false
      in: header
      name: X-Amz-Signature
      required: false
      schema:
        type: string
      style: simple
    X-Amz-SignedHeaders:
      explode: false
      in: header
      name: X-Amz-SignedHeaders
      required: false
      schema:
        type: string
      style: simple
  schemas:
    CreateAppResponse:
      example:
        ApplicationResponse:
          CreationDate: ""
          Id: ""
          Arn: ""
          Name: ""
          tags: ""
      properties:
        ApplicationResponse:
          $ref: '#/components/schemas/ApplicationResponse'
      required:
      - ApplicationResponse
      type: object
    __string:
      type: string
    MapOf__string:
      additionalProperties:
        $ref: '#/components/schemas/__string'
      type: object
    BadRequestException: {}
    InternalServerErrorException: {}
    PayloadTooLargeException: {}
    ForbiddenException: {}
    NotFoundException: {}
    MethodNotAllowedException: {}
    TooManyRequestsException: {}
    CreateCampaignResponse:
      example:
        CampaignResponse:
          CreationDate: ""
          LastModifiedDate: ""
          Description: ""
          AdditionalTreatments: ""
          Name: ""
          SegmentVersion: ""
          DefaultState:
            CampaignStatus: ""
          TreatmentDescription: ""
          MessageConfiguration:
            APNSMessage:
              JsonBody: ""
              Action: ""
              MediaUrl: ""
              TimeToLive: ""
              ImageSmallIconUrl: ""
              ImageUrl: ""
              Title: ""
              ImageIconUrl: ""
              SilentPush: ""
              Body: ""
              RawContent: ""
              Url: ""
            BaiduMessage:
              JsonBody: ""
              Action: ""
              MediaUrl: ""
              TimeToLive: ""
              ImageSmallIconUrl: ""
              ImageUrl: ""
              Title: ""
              ImageIconUrl: ""
              SilentPush: ""
              Body: ""
              RawContent: ""
              Url: ""
            DefaultMessage:
              JsonBody: ""
              Action: ""
              MediaUrl: ""
              TimeToLive: ""
              ImageSmallIconUrl: ""
              ImageUrl: ""
              Title: ""
              ImageIconUrl: ""
              SilentPush: ""
              Body: ""
              RawContent: ""
              Url: ""
            InAppMessage:
              CustomConfig: ""
              Layout: ""
              Content: ""
              Body: ""
            EmailMessage:
              FromAddress: ""
              HtmlBody: ""
              Title: ""
              Body: ""
            GCMMessage:
              JsonBody: ""
              Action: ""
              MediaUrl: ""
              TimeToLive: ""
              ImageSmallIconUrl: ""
              ImageUrl: ""
              Title: ""
              ImageIconUrl: ""
              SilentPush: ""
              Body: ""
              RawContent: ""
              Url: ""
            SMSMessage:
              EntityId: ""
              OriginationNumber: ""
              SenderId: ""
              Body: ""
              MessageType: ""
              TemplateId: ""
            CustomMessage:
              Data: ""
            ADMMessage:
              JsonBody: ""
              Action: ""
              MediaUrl: ""
              TimeToLive: ""
              ImageSmallIconUrl: ""
              ImageUrl: ""
              Title: ""
              ImageIconUrl: ""
              SilentPush: ""
              Body: ""
              RawContent: ""
              Url: ""
          Limits:
            Daily: ""
            MaximumDuration: ""
            Total: ""
            MessagesPerSecond: ""
            Session: ""
          Version: ""
          HoldoutPercent: ""
          CustomDeliveryConfiguration:
            DeliveryUri: ""
            EndpointTypes: ""
          TreatmentName: ""
          Hook:
            Mode: ""
            WebUrl: ""
            LambdaFunctionName: ""
          SegmentId: ""
          Priority: ""
          TemplateConfiguration:
            SMSTemplate:
              Version: ""
              Name: ""
            EmailTemplate:
              Version: ""
              Name: ""
            InAppTemplate:
              Version: ""
              Name: ""
            PushTemplate:
              Version: ""
              Name: ""
            VoiceTemplate:
              Version: ""
              Name: ""
          IsPaused: ""
          tags: ""
          State:
            CampaignStatus: ""
          Schedule:
            Timezone: ""
            QuietTime:
              Start: ""
              End: ""
            EndTime: ""
            StartTime: ""
            Frequency: ""
            EventFilter:
              FilterType: ""
              Dimensions:
                Metrics: ""
                EventType:
                  DimensionType: ""
                  Values: ""
                Attributes: ""
            IsLocalTime: ""
          Id: ""
          ApplicationId: ""
          Arn: ""
      properties:
        CampaignResponse:
          $ref: '#/components/schemas/CampaignResponse'
      required:
      - CampaignResponse
      type: object
    ListOfWriteTreatmentResource:
      items:
        $ref: '#/components/schemas/WriteTreatmentResource'
      type: array
    CustomDeliveryConfiguration:
      description: Specifies the delivery configuration settings for sending a campaign
        or campaign treatment through a custom channel. This object is required if
        you use the CampaignCustomMessage object to define the message to send for
        the campaign or campaign treatment.
      properties:
        DeliveryUri:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: "<p>The destination to send the campaign or treatment to.\
              \ This value can be one of the following:</p> <ul><li><p>The name or\
              \ Amazon Resource Name (ARN) of an AWS Lambda function to invoke to\
              \ handle delivery of the campaign or treatment.</p></li> <li><p>The\
              \ URL for a web application or service that supports HTTPS and can receive\
              \ the message. The URL has to be a full URL, including the HTTPS protocol.</p></li></ul> "
        EndpointTypes:
          allOf:
          - $ref: '#/components/schemas/ListOf__EndpointTypesElement'
          - description: The types of endpoints to send the campaign or treatment
              to. Each valid value maps to a type of channel that you can associate
              with an endpoint by using the ChannelType property of an endpoint.
      required:
      - DeliveryUri
      type: object
    __integer:
      type: integer
    CampaignHook:
      description: Specifies settings for invoking an AWS Lambda function that customizes
        a segment for a campaign.
      properties:
        LambdaFunctionName:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The name or Amazon Resource Name (ARN) of the AWS Lambda
              function that Amazon Pinpoint invokes to customize a segment for a campaign.
        Mode:
          allOf:
          - $ref: '#/components/schemas/Mode'
          - description: "<p>The mode that Amazon Pinpoint uses to invoke the AWS\
              \ Lambda function. Possible values are:</p> <ul><li><p>FILTER - Invoke\
              \ the function to customize the segment that's used by a campaign.</p></li>\
              \ <li><p>DELIVERY - (Deprecated) Previously, invoked the function to\
              \ send a campaign through a custom channel. This functionality is not\
              \ supported anymore. To send a campaign through a custom channel, use\
              \ the CustomDeliveryConfiguration and CampaignCustomMessage objects\
              \ of the campaign.</p></li></ul>"
        WebUrl:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: ' <p>The web URL that Amazon Pinpoint calls to invoke the
              AWS Lambda function over HTTPS.</p>'
      type: object
    __boolean:
      type: boolean
    CampaignLimits:
      description: "For a campaign, specifies limits on the messages that the campaign\
        \ can send. For an application, specifies the default limits for messages\
        \ that campaigns in the application can send."
      properties:
        Daily:
          allOf:
          - $ref: '#/components/schemas/__integer'
          - description: "The maximum number of messages that a campaign can send\
              \ to a single endpoint during a 24-hour period. For an application,\
              \ this value specifies the default limit for the number of messages\
              \ that campaigns and journeys can send to a single endpoint during a\
              \ 24-hour period. The maximum value is 100."
        MaximumDuration:
          allOf:
          - $ref: '#/components/schemas/__integer'
          - description: "The maximum amount of time, in seconds, that a campaign\
              \ can attempt to deliver a message after the scheduled start time for\
              \ the campaign. The minimum value is 60 seconds."
        MessagesPerSecond:
          allOf:
          - $ref: '#/components/schemas/__integer'
          - description: "The maximum number of messages that a campaign can send\
              \ each second. For an application, this value specifies the default\
              \ limit for the number of messages that campaigns can send each second.\
              \ The minimum value is 50. The maximum value is 20,000."
        Total:
          allOf:
          - $ref: '#/components/schemas/__integer'
          - description: "The maximum number of messages that a campaign can send\
              \ to a single endpoint during the course of the campaign. If a campaign\
              \ recurs, this setting applies to all runs of the campaign. The maximum\
              \ value is 100."
        Session:
          allOf:
          - $ref: '#/components/schemas/__integer'
          - description: The maximum total number of messages that the campaign can
              send per user session.
      type: object
    MessageConfiguration:
      description: Specifies the message configuration settings for a campaign.
      properties:
        ADMMessage:
          $ref: '#/components/schemas/MessageConfiguration_ADMMessage'
        APNSMessage:
          $ref: '#/components/schemas/MessageConfiguration_APNSMessage'
        BaiduMessage:
          $ref: '#/components/schemas/MessageConfiguration_BaiduMessage'
        CustomMessage:
          $ref: '#/components/schemas/MessageConfiguration_CustomMessage'
        DefaultMessage:
          $ref: '#/components/schemas/MessageConfiguration_DefaultMessage'
        EmailMessage:
          $ref: '#/components/schemas/MessageConfiguration_EmailMessage'
        GCMMessage:
          $ref: '#/components/schemas/MessageConfiguration_GCMMessage'
        SMSMessage:
          $ref: '#/components/schemas/MessageConfiguration_SMSMessage'
        InAppMessage:
          $ref: '#/components/schemas/MessageConfiguration_InAppMessage'
      type: object
    Schedule:
      description: Specifies the schedule settings for a campaign.
      properties:
        EndTime:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: "The scheduled time, in ISO 8601 format, when the campaign\
              \ ended or will end."
        EventFilter:
          $ref: '#/components/schemas/Schedule_EventFilter'
        Frequency:
          allOf:
          - $ref: '#/components/schemas/Frequency'
          - description: Specifies how often the campaign is sent or whether the campaign
              is sent in response to a specific event.
        IsLocalTime:
          allOf:
          - $ref: '#/components/schemas/__boolean'
          - description: "Specifies whether the start and end times for the campaign\
              \ schedule use each recipient's local time. To base the schedule on\
              \ each recipient's local time, set this value to true."
        QuietTime:
          $ref: '#/components/schemas/Schedule_QuietTime'
        StartTime:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: "The scheduled time when the campaign began or will begin.\
              \ Valid values are: IMMEDIATE, to start the campaign immediately; or,\
              \ a specific time in ISO 8601 format."
        Timezone:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: |-
              The starting UTC offset for the campaign schedule, if the value of the IsLocalTime property is true. Valid values are: UTC, UTC+01, UTC+02, UTC+03, UTC+03:30, UTC+04, UTC+04:30, UTC+05,
                                UTC+05:30, UTC+05:45, UTC+06, UTC+06:30, UTC+07, UTC+08, UTC+09, UTC+09:30,
                                UTC+10, UTC+10:30, UTC+11, UTC+12, UTC+13, UTC-02, UTC-03, UTC-04, UTC-05, UTC-06,
                                UTC-07, UTC-08, UTC-09, UTC-10, and UTC-11.
      required:
      - StartTime
      type: object
    TemplateConfiguration:
      description: "Specifies the message template to use for the message, for each\
        \ type of channel."
      properties:
        EmailTemplate:
          $ref: '#/components/schemas/TemplateConfiguration_EmailTemplate'
        PushTemplate:
          $ref: '#/components/schemas/TemplateConfiguration_PushTemplate'
        SMSTemplate:
          $ref: '#/components/schemas/TemplateConfiguration_SMSTemplate'
        VoiceTemplate:
          $ref: '#/components/schemas/TemplateConfiguration_VoiceTemplate'
        InAppTemplate:
          $ref: '#/components/schemas/TemplateConfiguration_InAppTemplate'
      type: object
    CreateEmailTemplateResponse:
      example:
        CreateTemplateMessageBody:
          Message: ""
          RequestID: ""
          Arn: ""
      properties:
        CreateTemplateMessageBody:
          $ref: '#/components/schemas/CreateTemplateMessageBody'
      required:
      - CreateTemplateMessageBody
      type: object
    CreateExportJobResponse:
      example:
        ExportJobResponse:
          CompletedPieces: ""
          CreationDate: ""
          TotalProcessed: ""
          Definition:
            S3UrlPrefix: ""
            SegmentId: ""
            RoleArn: ""
            SegmentVersion: ""
          Failures: ""
          JobStatus: ""
          TotalFailures: ""
          Type: ""
          FailedPieces: ""
          Id: ""
          TotalPieces: ""
          ApplicationId: ""
          CompletionDate: ""
      properties:
        ExportJobResponse:
          $ref: '#/components/schemas/ExportJobResponse'
      required:
      - ExportJobResponse
      type: object
    CreateImportJobResponse:
      example:
        ImportJobResponse:
          CompletedPieces: ""
          CreationDate: ""
          TotalProcessed: ""
          Definition:
            Format: ""
            SegmentName: ""
            S3Url: ""
            SegmentId: ""
            DefineSegment: ""
            RegisterEndpoints: ""
            ExternalId: ""
            RoleArn: ""
          Failures: ""
          JobStatus: ""
          TotalFailures: ""
          Type: ""
          FailedPieces: ""
          Id: ""
          TotalPieces: ""
          ApplicationId: ""
          CompletionDate: ""
      properties:
        ImportJobResponse:
          $ref: '#/components/schemas/ImportJobResponse'
      required:
      - ImportJobResponse
      type: object
    Format:
      enum:
      - CSV
      - JSON
      type: string
    CreateInAppTemplateResponse:
      example:
        TemplateCreateMessageBody:
          Message: ""
          RequestID: ""
          Arn: ""
      properties:
        TemplateCreateMessageBody:
          $ref: '#/components/schemas/TemplateCreateMessageBody'
      required:
      - TemplateCreateMessageBody
      type: object
    ListOfInAppMessageContent:
      items:
        $ref: '#/components/schemas/InAppMessageContent'
      type: array
    Layout:
      enum:
      - BOTTOM_BANNER
      - TOP_BANNER
      - OVERLAYS
      - MOBILE_FEED
      - MIDDLE_BANNER
      - CAROUSEL
      type: string
    CreateJourneyResponse:
      example:
        JourneyResponse:
          Activities: ""
          CreationDate: ""
          LastModifiedDate: ""
          ClosedDays:
            VOICE: ""
            SMS: ""
            CUSTOM: ""
            EMAIL: ""
            PUSH: ""
          QuietTime:
            Start: ""
            End: ""
          LocalTime: ""
          StartCondition:
            Description: ""
            SegmentStartCondition:
              SegmentId: ""
            EventStartCondition:
              SegmentId: SegmentId
              EventFilter:
                FilterType: ""
                Dimensions:
                  Metrics: ""
                  EventType:
                    DimensionType: ""
                    Values: ""
                  Attributes: ""
          SendingSchedule: ""
          WaitForQuietTime: ""
          RefreshFrequency: ""
          Name: ""
          StartActivity: ""
          tags: ""
          OpenHours:
            VOICE: ""
            SMS: ""
            CUSTOM: ""
            EMAIL: ""
            PUSH: ""
          Limits:
            MessagesPerSecond: ""
            EndpointReentryCap: ""
            DailyCap: ""
            EndpointReentryInterval: ""
            TimeframeCap:
              Cap: ""
              Days: ""
            TotalCap: ""
          JourneyChannelSettings:
            ConnectCampaignArn: ""
            ConnectCampaignExecutionRoleArn: ""
          TimezoneEstimationMethods: ""
          State: ""
          Schedule:
            Timezone: ""
            EndTime: ""
            StartTime: ""
          Id: ""
          ApplicationId: ""
          RefreshOnSegmentUpdate: ""
      properties:
        JourneyResponse:
          $ref: '#/components/schemas/JourneyResponse'
      required:
      - JourneyResponse
      type: object
    MapOfActivity:
      additionalProperties:
        $ref: '#/components/schemas/Activity'
      type: object
    JourneyLimits:
      description: Specifies limits on the messages that a journey can send and the
        number of times participants can enter a journey.
      properties:
        DailyCap:
          allOf:
          - $ref: '#/components/schemas/__integer'
          - description: The maximum number of messages that the journey can send
              to a single participant during a 24-hour period. The maximum value is
              100.
        EndpointReentryCap:
          allOf:
          - $ref: '#/components/schemas/__integer'
          - description: "The maximum number of times that a participant can enter\
              \ the journey. The maximum value is 100. To allow participants to enter\
              \ the journey an unlimited number of times, set this value to 0."
        MessagesPerSecond:
          allOf:
          - $ref: '#/components/schemas/__integer'
          - description: The maximum number of messages that the journey can send
              each second.
        EndpointReentryInterval:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: "Minimum time that must pass before an endpoint can re-enter\
              \ a given journey. The duration should use an ISO 8601 format, such\
              \ as PT1H. "
        TimeframeCap:
          $ref: '#/components/schemas/JourneyLimits_TimeframeCap'
        TotalCap:
          allOf:
          - $ref: '#/components/schemas/__integer'
          - description: "The maximum number of messages a journey can sent to a single\
              \ endpoint. The maximum value is 100. If set to 0, this limit will not\
              \ apply."
      type: object
    QuietTime:
      description: Specifies the start and end times that define a time range when
        messages aren't sent to endpoints.
      properties:
        End:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: "The specific time when quiet time ends. This value has to\
              \ use 24-hour notation and be in HH:MM format, where HH is the hour\
              \ (with a leading zero, if applicable) and MM is the minutes. For example,\
              \ use 02:30 to represent 2:30 AM, or 14:30 to represent 2:30 PM."
        Start:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: "The specific time when quiet time begins. This value has\
              \ to use 24-hour notation and be in HH:MM format, where HH is the hour\
              \ (with a leading zero, if applicable) and MM is the minutes. For example,\
              \ use 02:30 to represent 2:30 AM, or 14:30 to represent 2:30 PM."
      type: object
    JourneySchedule:
      description: Specifies the schedule settings for a journey.
      properties:
        EndTime:
          allOf:
          - $ref: '#/components/schemas/__timestampIso8601'
          - description: "The scheduled time, in ISO 8601 format, when the journey\
              \ ended or will end."
        StartTime:
          allOf:
          - $ref: '#/components/schemas/__timestampIso8601'
          - description: "The scheduled time, in ISO 8601 format, when the journey\
              \ began or will begin."
        Timezone:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: |-
              The starting UTC offset for the journey schedule, if the value of the journey's LocalTime property is true. Valid values are: UTC,
                                UTC+01, UTC+02, UTC+03, UTC+03:30, UTC+04, UTC+04:30, UTC+05, UTC+05:30,
                                UTC+05:45, UTC+06, UTC+06:30, UTC+07, UTC+08, UTC+08:45, UTC+09, UTC+09:30,
                                UTC+10, UTC+10:30, UTC+11, UTC+12, UTC+12:45, UTC+13, UTC+13:45, UTC-02,
                                UTC-02:30, UTC-03, UTC-03:30, UTC-04, UTC-05, UTC-06, UTC-07, UTC-08, UTC-09,
                                UTC-09:30, UTC-10, and UTC-11.
      type: object
    StartCondition:
      description: Specifies the conditions for the first activity in a journey. This
        activity and its conditions determine which users are participants in a journey.
      properties:
        Description:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The custom description of the condition.
        EventStartCondition:
          $ref: '#/components/schemas/EventStartCondition'
        SegmentStartCondition:
          $ref: '#/components/schemas/StartCondition_SegmentStartCondition'
      type: object
    State:
      enum:
      - DRAFT
      - ACTIVE
      - COMPLETED
      - CANCELLED
      - CLOSED
      - PAUSED
      type: string
    JourneyChannelSettings:
      description: The channel-specific configurations for the journey.
      properties:
        ConnectCampaignArn:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: Amazon Resource Name (ARN) of the Connect Campaign.
        ConnectCampaignExecutionRoleArn:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: IAM role ARN to be assumed when invoking Connect campaign
              execution APIs for dialing.
      type: object
    OpenHours:
      description: Specifies the times when message are allowed to be sent to endpoints.
      properties:
        EMAIL:
          allOf:
          - $ref: '#/components/schemas/MapOfListOfOpenHoursRules'
          - description: Specifies the schedule settings for the email channel.
        SMS:
          allOf:
          - $ref: '#/components/schemas/MapOfListOfOpenHoursRules'
          - description: Specifies the schedule settings for the SMS channel.
        PUSH:
          allOf:
          - $ref: '#/components/schemas/MapOfListOfOpenHoursRules'
          - description: Specifies the schedule settings for the push channel.
        VOICE:
          allOf:
          - $ref: '#/components/schemas/MapOfListOfOpenHoursRules'
          - description: Specifies the schedule settings for the voice channel.
        CUSTOM:
          allOf:
          - $ref: '#/components/schemas/MapOfListOfOpenHoursRules'
          - description: Specifies the schedule settings for the custom channel.
      type: object
    ClosedDays:
      description: The time when a journey will not send messages. QuietTime should
        be configured first and SendingSchedule should be set to true.
      properties:
        EMAIL:
          allOf:
          - $ref: '#/components/schemas/ListOfClosedDaysRules'
          - description: Rules for the Email channel.
        SMS:
          allOf:
          - $ref: '#/components/schemas/ListOfClosedDaysRules'
          - description: Rules for the SMS channel.
        PUSH:
          allOf:
          - $ref: '#/components/schemas/ListOfClosedDaysRules'
          - description: Rules for the Push channel.
        VOICE:
          allOf:
          - $ref: '#/components/schemas/ListOfClosedDaysRules'
          - description: Rules for the Voice channel.
        CUSTOM:
          allOf:
          - $ref: '#/components/schemas/ListOfClosedDaysRules'
          - description: Rules for the Custom channel.
      type: object
    ListOf__TimezoneEstimationMethodsElement:
      items:
        $ref: '#/components/schemas/__TimezoneEstimationMethodsElement'
      type: array
    CreatePushTemplateResponse:
      example:
        CreateTemplateMessageBody:
          Message: ""
          RequestID: ""
          Arn: ""
      properties:
        CreateTemplateMessageBody:
          $ref: '#/components/schemas/CreateTemplateMessageBody'
      required:
      - CreateTemplateMessageBody
      type: object
    AndroidPushNotificationTemplate:
      description: "Specifies channel-specific content and settings for a message\
        \ template that can be used in push notifications that are sent through the\
        \ ADM (Amazon Device Messaging), Baidu (Baidu Cloud Push), or GCM (Firebase\
        \ Cloud Messaging, formerly Google Cloud Messaging) channel."
      properties:
        Action:
          allOf:
          - $ref: '#/components/schemas/Action'
          - description: <p>The action to occur if a recipient taps a push notification
              that's based on the message template. Valid values are:</p> <ul><li><p>OPEN_APP
              - Your app opens or it becomes the foreground app if it was sent to
              the background. This is the default action.</p></li> <li><p>DEEP_LINK
              - Your app opens and displays a designated user interface in the app.
              This action uses the deep-linking features of the Android platform.</p></li>
              <li><p>URL - The default mobile browser on the recipient's device opens
              and loads the web page at a URL that you specify.</p></li></ul>
        Body:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The message body to use in a push notification that's based
              on the message template.
        ImageIconUrl:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The URL of the large icon image to display in the content
              view of a push notification that's based on the message template.
        ImageUrl:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The URL of an image to display in a push notification that's
              based on the message template.
        RawContent:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: "The raw, JSON-formatted string to use as the payload for\
              \ a push notification that's based on the message template. If specified,\
              \ this value overrides all other content for the message template."
        SmallImageIconUrl:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The URL of the small icon image to display in the status
              bar and the content view of a push notification that's based on the
              message template.
        Sound:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: "The sound to play when a recipient receives a push notification\
              \ that's based on the message template. You can use the default stream\
              \ or specify the file name of a sound resource that's bundled in your\
              \ app. On an Android platform, the sound file must reside in /res/raw/."
        Title:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The title to use in a push notification that's based on the
              message template. This title appears above the notification message
              on a recipient's device.
        Url:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: "The URL to open in a recipient's default mobile browser,\
              \ if a recipient taps a push notification that's based on the message\
              \ template and the value of the Action property is URL."
      type: object
    APNSPushNotificationTemplate:
      description: Specifies channel-specific content and settings for a message template
        that can be used in push notifications that are sent through the APNs (Apple
        Push Notification service) channel.
      properties:
        Action:
          allOf:
          - $ref: '#/components/schemas/Action'
          - description: <p>The action to occur if a recipient taps a push notification
              that's based on the message template. Valid values are:</p> <ul><li><p>OPEN_APP
              - Your app opens or it becomes the foreground app if it was sent to
              the background. This is the default action.</p></li> <li><p>DEEP_LINK
              - Your app opens and displays a designated user interface in the app.
              This setting uses the deep-linking features of the iOS platform.</p></li>
              <li><p>URL - The default mobile browser on the recipient's device opens
              and loads the web page at a URL that you specify.</p></li></ul>
        Body:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The message body to use in push notifications that are based
              on the message template.
        MediaUrl:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The URL of an image or video to display in push notifications
              that are based on the message template.
        RawContent:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: "The raw, JSON-formatted string to use as the payload for\
              \ push notifications that are based on the message template. If specified,\
              \ this value overrides all other content for the message template."
        Sound:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: "The key for the sound to play when the recipient receives\
              \ a push notification that's based on the message template. The value\
              \ for this key is the name of a sound file in your app's main bundle\
              \ or the Library/Sounds folder in your app's data container. If the\
              \ sound file can't be found or you specify default for the value, the\
              \ system plays the default alert sound."
        Title:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The title to use in push notifications that are based on
              the message template. This title appears above the notification message
              on a recipient's device.
        Url:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: "The URL to open in the recipient's default mobile browser,\
              \ if a recipient taps a push notification that's based on the message\
              \ template and the value of the Action property is URL."
      type: object
    DefaultPushNotificationTemplate:
      description: Specifies the default settings and content for a message template
        that can be used in messages that are sent through a push notification channel.
      properties:
        Action:
          allOf:
          - $ref: '#/components/schemas/Action'
          - description: <p>The action to occur if a recipient taps a push notification
              that's based on the message template. Valid values are:</p> <ul><li><p>OPEN_APP
              - Your app opens or it becomes the foreground app if it was sent to
              the background. This is the default action.</p></li> <li><p>DEEP_LINK
              - Your app opens and displays a designated user interface in the app.
              This setting uses the deep-linking features of the iOS and Android platforms.</p></li>
              <li><p>URL - The default mobile browser on the recipient's device opens
              and loads the web page at a URL that you specify.</p></li></ul>
        Body:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The message body to use in push notifications that are based
              on the message template.
        Sound:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: "<p>The sound to play when a recipient receives a push notification\
              \ that's based on the message template. You can use the default stream\
              \ or specify the file name of a sound resource that's bundled in your\
              \ app. On an Android platform, the sound file must reside in /res/raw/.</p>\
              \ <p>For an iOS platform, this value is the key for the name of a sound\
              \ file in your app's main bundle or the Library/Sounds folder in your\
              \ app's data container. If the sound file can't be found or you specify\
              \ default for the value, the system plays the default alert sound.</p>"
        Title:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The title to use in push notifications that are based on
              the message template. This title appears above the notification message
              on a recipient's device.
        Url:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: "The URL to open in a recipient's default mobile browser,\
              \ if a recipient taps a push notification that's based on the message\
              \ template and the value of the Action property is URL."
      type: object
    CreateRecommenderConfigurationResponse:
      example:
        RecommenderConfigurationResponse:
          CreationDate: ""
          LastModifiedDate: ""
          RecommendationProviderUri: ""
          RecommendationsDisplayName: ""
          Description: ""
          RecommendationsPerMessage: ""
          RecommendationProviderRoleArn: ""
          Attributes: ""
          Id: ""
          RecommendationTransformerUri: ""
          Name: ""
          RecommendationProviderIdType: ""
      properties:
        RecommenderConfigurationResponse:
          $ref: '#/components/schemas/RecommenderConfigurationResponse'
      required:
      - RecommenderConfigurationResponse
      type: object
    CreateSegmentResponse:
      example:
        SegmentResponse:
          SegmentType: ""
          CreationDate: ""
          LastModifiedDate: ""
          Version: ""
          SegmentGroups:
            Groups: ""
            Include: ""
          Dimensions:
            Demographic:
              AppVersion:
                DimensionType: ""
                Values: ""
              DeviceType:
                DimensionType: ""
                Values: ""
              Platform:
                DimensionType: ""
                Values: ""
              Channel:
                DimensionType: ""
                Values: ""
              Model:
                DimensionType: ""
                Values: ""
              Make:
                DimensionType: ""
                Values: ""
            Metrics: ""
            Attributes: ""
            Behavior:
              Recency:
                Duration: ""
                RecencyType: ""
            Location:
              GPSPoint:
                RangeInKilometers: ""
                Coordinates:
                  Latitude: ""
                  Longitude: ""
              Country:
                DimensionType: ""
                Values: ""
            UserAttributes: ""
          Id: ""
          ApplicationId: ""
          Arn: ""
          ImportDefinition:
            Format: ""
            ChannelCounts: ""
            S3Url: ""
            Size: ""
            ExternalId: ""
            RoleArn: ""
          Name: ""
          tags: ""
      properties:
        SegmentResponse:
          $ref: '#/components/schemas/SegmentResponse'
      required:
      - SegmentResponse
      type: object
    SegmentDimensions:
      description: Specifies the dimension settings for a segment.
      properties:
        Attributes:
          allOf:
          - $ref: '#/components/schemas/MapOfAttributeDimension'
          - description: One or more custom attributes to use as criteria for the
              segment.
        Behavior:
          $ref: '#/components/schemas/SegmentDimensions_Behavior'
        Demographic:
          $ref: '#/components/schemas/SegmentDimensions_Demographic'
        Location:
          $ref: '#/components/schemas/SegmentDimensions_Location'
        Metrics:
          allOf:
          - $ref: '#/components/schemas/MapOfMetricDimension'
          - description: One or more custom metrics to use as criteria for the segment.
        UserAttributes:
          allOf:
          - $ref: '#/components/schemas/MapOfAttributeDimension'
          - description: One or more custom user attributes to use as criteria for
              the segment.
      type: object
    SegmentGroupList:
      description: Specifies the settings that define the relationships between segment
        groups for a segment.
      properties:
        Groups:
          allOf:
          - $ref: '#/components/schemas/ListOfSegmentGroup'
          - description: An array that defines the set of segment criteria to evaluate
              when handling segment groups for the segment.
        Include:
          allOf:
          - $ref: '#/components/schemas/Include'
          - description: "Specifies how to handle multiple segment groups for the\
              \ segment. For example, if the segment includes three segment groups,\
              \ whether the resulting segment includes endpoints that match all, any,\
              \ or none of the segment groups."
      type: object
    CreateSmsTemplateResponse:
      example:
        CreateTemplateMessageBody:
          Message: ""
          RequestID: ""
          Arn: ""
      properties:
        CreateTemplateMessageBody:
          $ref: '#/components/schemas/CreateTemplateMessageBody'
      required:
      - CreateTemplateMessageBody
      type: object
    CreateVoiceTemplateResponse:
      example:
        CreateTemplateMessageBody:
          Message: ""
          RequestID: ""
          Arn: ""
      properties:
        CreateTemplateMessageBody:
          $ref: '#/components/schemas/CreateTemplateMessageBody'
      required:
      - CreateTemplateMessageBody
      type: object
    DeleteAdmChannelResponse:
      example:
        ADMChannelResponse:
          IsArchived: ""
          CreationDate: ""
          LastModifiedBy: ""
          LastModifiedDate: ""
          Platform: ""
          Version: ""
          Enabled: ""
          HasCredential: ""
          Id: ""
          ApplicationId: ""
      properties:
        ADMChannelResponse:
          $ref: '#/components/schemas/ADMChannelResponse'
      required:
      - ADMChannelResponse
      type: object
    DeleteApnsChannelResponse:
      example:
        APNSChannelResponse:
          IsArchived: ""
          CreationDate: ""
          LastModifiedBy: ""
          LastModifiedDate: ""
          HasTokenKey: ""
          Platform: ""
          Version: ""
          DefaultAuthenticationMethod: ""
          Enabled: ""
          HasCredential: ""
          Id: ""
          ApplicationId: ""
      properties:
        APNSChannelResponse:
          $ref: '#/components/schemas/APNSChannelResponse'
      required:
      - APNSChannelResponse
      type: object
    DeleteApnsSandboxChannelResponse:
      example:
        APNSSandboxChannelResponse:
          IsArchived: ""
          CreationDate: ""
          LastModifiedBy: ""
          LastModifiedDate: ""
          HasTokenKey: ""
          Platform: ""
          Version: ""
          DefaultAuthenticationMethod: ""
          Enabled: ""
          HasCredential: ""
          Id: ""
          ApplicationId: ""
      properties:
        APNSSandboxChannelResponse:
          $ref: '#/components/schemas/APNSSandboxChannelResponse'
      required:
      - APNSSandboxChannelResponse
      type: object
    DeleteApnsVoipChannelResponse:
      example:
        APNSVoipChannelResponse:
          IsArchived: ""
          CreationDate: ""
          LastModifiedBy: ""
          LastModifiedDate: ""
          HasTokenKey: ""
          Platform: ""
          Version: ""
          DefaultAuthenticationMethod: ""
          Enabled: ""
          HasCredential: ""
          Id: ""
          ApplicationId: ""
      properties:
        APNSVoipChannelResponse:
          $ref: '#/components/schemas/APNSVoipChannelResponse'
      required:
      - APNSVoipChannelResponse
      type: object
    DeleteApnsVoipSandboxChannelResponse:
      example:
        APNSVoipSandboxChannelResponse:
          IsArchived: ""
          CreationDate: ""
          LastModifiedBy: ""
          LastModifiedDate: ""
          HasTokenKey: ""
          Platform: ""
          Version: ""
          DefaultAuthenticationMethod: ""
          Enabled: ""
          HasCredential: ""
          Id: ""
          ApplicationId: ""
      properties:
        APNSVoipSandboxChannelResponse:
          $ref: '#/components/schemas/APNSVoipSandboxChannelResponse'
      required:
      - APNSVoipSandboxChannelResponse
      type: object
    DeleteAppResponse:
      example:
        ApplicationResponse:
          CreationDate: ""
          Id: ""
          Arn: ""
          Name: ""
          tags: ""
      properties:
        ApplicationResponse:
          $ref: '#/components/schemas/ApplicationResponse'
      required:
      - ApplicationResponse
      type: object
    DeleteBaiduChannelResponse:
      example:
        BaiduChannelResponse:
          IsArchived: ""
          CreationDate: ""
          LastModifiedBy: ""
          LastModifiedDate: ""
          Credential: ""
          Platform: ""
          Version: ""
          Enabled: ""
          HasCredential: ""
          Id: ""
          ApplicationId: ""
      properties:
        BaiduChannelResponse:
          $ref: '#/components/schemas/BaiduChannelResponse'
      required:
      - BaiduChannelResponse
      type: object
    DeleteCampaignResponse:
      example:
        CampaignResponse:
          CreationDate: ""
          LastModifiedDate: ""
          Description: ""
          AdditionalTreatments: ""
          Name: ""
          SegmentVersion: ""
          DefaultState:
            CampaignStatus: ""
          TreatmentDescription: ""
          MessageConfiguration:
            APNSMessage:
              JsonBody: ""
              Action: ""
              MediaUrl: ""
              TimeToLive: ""
              ImageSmallIconUrl: ""
              ImageUrl: ""
              Title: ""
              ImageIconUrl: ""
              SilentPush: ""
              Body: ""
              RawContent: ""
              Url: ""
            BaiduMessage:
              JsonBody: ""
              Action: ""
              MediaUrl: ""
              TimeToLive: ""
              ImageSmallIconUrl: ""
              ImageUrl: ""
              Title: ""
              ImageIconUrl: ""
              SilentPush: ""
              Body: ""
              RawContent: ""
              Url: ""
            DefaultMessage:
              JsonBody: ""
              Action: ""
              MediaUrl: ""
              TimeToLive: ""
              ImageSmallIconUrl: ""
              ImageUrl: ""
              Title: ""
              ImageIconUrl: ""
              SilentPush: ""
              Body: ""
              RawContent: ""
              Url: ""
            InAppMessage:
              CustomConfig: ""
              Layout: ""
              Content: ""
              Body: ""
            EmailMessage:
              FromAddress: ""
              HtmlBody: ""
              Title: ""
              Body: ""
            GCMMessage:
              JsonBody: ""
              Action: ""
              MediaUrl: ""
              TimeToLive: ""
              ImageSmallIconUrl: ""
              ImageUrl: ""
              Title: ""
              ImageIconUrl: ""
              SilentPush: ""
              Body: ""
              RawContent: ""
              Url: ""
            SMSMessage:
              EntityId: ""
              OriginationNumber: ""
              SenderId: ""
              Body: ""
              MessageType: ""
              TemplateId: ""
            CustomMessage:
              Data: ""
            ADMMessage:
              JsonBody: ""
              Action: ""
              MediaUrl: ""
              TimeToLive: ""
              ImageSmallIconUrl: ""
              ImageUrl: ""
              Title: ""
              ImageIconUrl: ""
              SilentPush: ""
              Body: ""
              RawContent: ""
              Url: ""
          Limits:
            Daily: ""
            MaximumDuration: ""
            Total: ""
            MessagesPerSecond: ""
            Session: ""
          Version: ""
          HoldoutPercent: ""
          CustomDeliveryConfiguration:
            DeliveryUri: ""
            EndpointTypes: ""
          TreatmentName: ""
          Hook:
            Mode: ""
            WebUrl: ""
            LambdaFunctionName: ""
          SegmentId: ""
          Priority: ""
          TemplateConfiguration:
            SMSTemplate:
              Version: ""
              Name: ""
            EmailTemplate:
              Version: ""
              Name: ""
            InAppTemplate:
              Version: ""
              Name: ""
            PushTemplate:
              Version: ""
              Name: ""
            VoiceTemplate:
              Version: ""
              Name: ""
          IsPaused: ""
          tags: ""
          State:
            CampaignStatus: ""
          Schedule:
            Timezone: ""
            QuietTime:
              Start: ""
              End: ""
            EndTime: ""
            StartTime: ""
            Frequency: ""
            EventFilter:
              FilterType: ""
              Dimensions:
                Metrics: ""
                EventType:
                  DimensionType: ""
                  Values: ""
                Attributes: ""
            IsLocalTime: ""
          Id: ""
          ApplicationId: ""
          Arn: ""
      properties:
        CampaignResponse:
          $ref: '#/components/schemas/CampaignResponse'
      required:
      - CampaignResponse
      type: object
    DeleteEmailChannelResponse:
      example:
        EmailChannelResponse:
          CreationDate: ""
          LastModifiedBy: ""
          LastModifiedDate: ""
          Platform: ""
          MessagesPerSecond: ""
          Enabled: ""
          HasCredential: ""
          RoleArn: ""
          IsArchived: ""
          ConfigurationSet: ""
          FromAddress: ""
          Version: ""
          Id: ""
          ApplicationId: ""
          Identity: ""
      properties:
        EmailChannelResponse:
          $ref: '#/components/schemas/EmailChannelResponse'
      required:
      - EmailChannelResponse
      type: object
    DeleteEmailTemplateResponse:
      example:
        MessageBody:
          Message: ""
          RequestID: ""
      properties:
        MessageBody:
          $ref: '#/components/schemas/MessageBody'
      required:
      - MessageBody
      type: object
    DeleteEndpointResponse:
      example:
        EndpointResponse:
          CreationDate: ""
          User:
            UserId: ""
            UserAttributes: ""
          Address: ""
          RequestId: ""
          Attributes: ""
          EndpointStatus: ""
          Demographic:
            AppVersion: ""
            Locale: ""
            PlatformVersion: ""
            Timezone: ""
            Platform: ""
            Model: ""
            Make: ""
            ModelVersion: ""
          Metrics: ""
          OptOut: ""
          Id: ""
          ApplicationId: ""
          CohortId: ""
          ChannelType: ""
          EffectiveDate: ""
          Location:
            Country: ""
            PostalCode: ""
            Region: ""
            Latitude: ""
            City: ""
            Longitude: ""
      properties:
        EndpointResponse:
          $ref: '#/components/schemas/EndpointResponse'
      required:
      - EndpointResponse
      type: object
    DeleteEventStreamResponse:
      example:
        EventStream:
          LastUpdatedBy: ""
          LastModifiedDate: ""
          ExternalId: ""
          ApplicationId: ""
          DestinationStreamArn: ""
          RoleArn: ""
      properties:
        EventStream:
          $ref: '#/components/schemas/EventStream'
      required:
      - EventStream
      type: object
    DeleteGcmChannelResponse:
      example:
        GCMChannelResponse:
          CreationDate: ""
          LastModifiedBy: ""
          LastModifiedDate: ""
          Credential: ""
          Platform: ""
          DefaultAuthenticationMethod: ""
          Enabled: ""
          HasCredential: ""
          IsArchived: ""
          Version: ""
          HasFcmServiceCredentials: ""
          Id: ""
          ApplicationId: ""
      properties:
        GCMChannelResponse:
          $ref: '#/components/schemas/GCMChannelResponse'
      required:
      - GCMChannelResponse
      type: object
    DeleteInAppTemplateResponse:
      example:
        MessageBody:
          Message: ""
          RequestID: ""
      properties:
        MessageBody:
          $ref: '#/components/schemas/MessageBody'
      required:
      - MessageBody
      type: object
    DeleteJourneyResponse:
      example:
        JourneyResponse:
          Activities: ""
          CreationDate: ""
          LastModifiedDate: ""
          ClosedDays:
            VOICE: ""
            SMS: ""
            CUSTOM: ""
            EMAIL: ""
            PUSH: ""
          QuietTime:
            Start: ""
            End: ""
          LocalTime: ""
          StartCondition:
            Description: ""
            SegmentStartCondition:
              SegmentId: ""
            EventStartCondition:
              SegmentId: SegmentId
              EventFilter:
                FilterType: ""
                Dimensions:
                  Metrics: ""
                  EventType:
                    DimensionType: ""
                    Values: ""
                  Attributes: ""
          SendingSchedule: ""
          WaitForQuietTime: ""
          RefreshFrequency: ""
          Name: ""
          StartActivity: ""
          tags: ""
          OpenHours:
            VOICE: ""
            SMS: ""
            CUSTOM: ""
            EMAIL: ""
            PUSH: ""
          Limits:
            MessagesPerSecond: ""
            EndpointReentryCap: ""
            DailyCap: ""
            EndpointReentryInterval: ""
            TimeframeCap:
              Cap: ""
              Days: ""
            TotalCap: ""
          JourneyChannelSettings:
            ConnectCampaignArn: ""
            ConnectCampaignExecutionRoleArn: ""
          TimezoneEstimationMethods: ""
          State: ""
          Schedule:
            Timezone: ""
            EndTime: ""
            StartTime: ""
          Id: ""
          ApplicationId: ""
          RefreshOnSegmentUpdate: ""
      properties:
        JourneyResponse:
          $ref: '#/components/schemas/JourneyResponse'
      required:
      - JourneyResponse
      type: object
    DeletePushTemplateResponse:
      example:
        MessageBody:
          Message: ""
          RequestID: ""
      properties:
        MessageBody:
          $ref: '#/components/schemas/MessageBody'
      required:
      - MessageBody
      type: object
    DeleteRecommenderConfigurationResponse:
      example:
        RecommenderConfigurationResponse:
          CreationDate: ""
          LastModifiedDate: ""
          RecommendationProviderUri: ""
          RecommendationsDisplayName: ""
          Description: ""
          RecommendationsPerMessage: ""
          RecommendationProviderRoleArn: ""
          Attributes: ""
          Id: ""
          RecommendationTransformerUri: ""
          Name: ""
          RecommendationProviderIdType: ""
      properties:
        RecommenderConfigurationResponse:
          $ref: '#/components/schemas/RecommenderConfigurationResponse'
      required:
      - RecommenderConfigurationResponse
      type: object
    DeleteSegmentResponse:
      example:
        SegmentResponse:
          SegmentType: ""
          CreationDate: ""
          LastModifiedDate: ""
          Version: ""
          SegmentGroups:
            Groups: ""
            Include: ""
          Dimensions:
            Demographic:
              AppVersion:
                DimensionType: ""
                Values: ""
              DeviceType:
                DimensionType: ""
                Values: ""
              Platform:
                DimensionType: ""
                Values: ""
              Channel:
                DimensionType: ""
                Values: ""
              Model:
                DimensionType: ""
                Values: ""
              Make:
                DimensionType: ""
                Values: ""
            Metrics: ""
            Attributes: ""
            Behavior:
              Recency:
                Duration: ""
                RecencyType: ""
            Location:
              GPSPoint:
                RangeInKilometers: ""
                Coordinates:
                  Latitude: ""
                  Longitude: ""
              Country:
                DimensionType: ""
                Values: ""
            UserAttributes: ""
          Id: ""
          ApplicationId: ""
          Arn: ""
          ImportDefinition:
            Format: ""
            ChannelCounts: ""
            S3Url: ""
            Size: ""
            ExternalId: ""
            RoleArn: ""
          Name: ""
          tags: ""
      properties:
        SegmentResponse:
          $ref: '#/components/schemas/SegmentResponse'
      required:
      - SegmentResponse
      type: object
    DeleteSmsChannelResponse:
      example:
        SMSChannelResponse:
          ShortCode: ""
          CreationDate: ""
          LastModifiedBy: ""
          LastModifiedDate: ""
          Platform: ""
          Enabled: ""
          HasCredential: ""
          PromotionalMessagesPerSecond: ""
          SenderId: ""
          IsArchived: ""
          Version: ""
          TransactionalMessagesPerSecond: ""
          Id: ""
          ApplicationId: ""
      properties:
        SMSChannelResponse:
          $ref: '#/components/schemas/SMSChannelResponse'
      required:
      - SMSChannelResponse
      type: object
    DeleteSmsTemplateResponse:
      example:
        MessageBody:
          Message: ""
          RequestID: ""
      properties:
        MessageBody:
          $ref: '#/components/schemas/MessageBody'
      required:
      - MessageBody
      type: object
    DeleteUserEndpointsResponse:
      example:
        EndpointsResponse:
          Item: ""
      properties:
        EndpointsResponse:
          $ref: '#/components/schemas/EndpointsResponse'
      required:
      - EndpointsResponse
      type: object
    DeleteVoiceChannelResponse:
      example:
        VoiceChannelResponse:
          IsArchived: ""
          CreationDate: ""
          LastModifiedBy: ""
          LastModifiedDate: ""
          Platform: ""
          Version: ""
          Enabled: ""
          HasCredential: ""
          Id: ""
          ApplicationId: ""
      properties:
        VoiceChannelResponse:
          $ref: '#/components/schemas/VoiceChannelResponse'
      required:
      - VoiceChannelResponse
      type: object
    DeleteVoiceTemplateResponse:
      example:
        MessageBody:
          Message: ""
          RequestID: ""
      properties:
        MessageBody:
          $ref: '#/components/schemas/MessageBody'
      required:
      - MessageBody
      type: object
    GetAdmChannelResponse:
      example:
        ADMChannelResponse:
          IsArchived: ""
          CreationDate: ""
          LastModifiedBy: ""
          LastModifiedDate: ""
          Platform: ""
          Version: ""
          Enabled: ""
          HasCredential: ""
          Id: ""
          ApplicationId: ""
      properties:
        ADMChannelResponse:
          $ref: '#/components/schemas/ADMChannelResponse'
      required:
      - ADMChannelResponse
      type: object
    GetApnsChannelResponse:
      example:
        APNSChannelResponse:
          IsArchived: ""
          CreationDate: ""
          LastModifiedBy: ""
          LastModifiedDate: ""
          HasTokenKey: ""
          Platform: ""
          Version: ""
          DefaultAuthenticationMethod: ""
          Enabled: ""
          HasCredential: ""
          Id: ""
          ApplicationId: ""
      properties:
        APNSChannelResponse:
          $ref: '#/components/schemas/APNSChannelResponse'
      required:
      - APNSChannelResponse
      type: object
    GetApnsSandboxChannelResponse:
      example:
        APNSSandboxChannelResponse:
          IsArchived: ""
          CreationDate: ""
          LastModifiedBy: ""
          LastModifiedDate: ""
          HasTokenKey: ""
          Platform: ""
          Version: ""
          DefaultAuthenticationMethod: ""
          Enabled: ""
          HasCredential: ""
          Id: ""
          ApplicationId: ""
      properties:
        APNSSandboxChannelResponse:
          $ref: '#/components/schemas/APNSSandboxChannelResponse'
      required:
      - APNSSandboxChannelResponse
      type: object
    GetApnsVoipChannelResponse:
      example:
        APNSVoipChannelResponse:
          IsArchived: ""
          CreationDate: ""
          LastModifiedBy: ""
          LastModifiedDate: ""
          HasTokenKey: ""
          Platform: ""
          Version: ""
          DefaultAuthenticationMethod: ""
          Enabled: ""
          HasCredential: ""
          Id: ""
          ApplicationId: ""
      properties:
        APNSVoipChannelResponse:
          $ref: '#/components/schemas/APNSVoipChannelResponse'
      required:
      - APNSVoipChannelResponse
      type: object
    GetApnsVoipSandboxChannelResponse:
      example:
        APNSVoipSandboxChannelResponse:
          IsArchived: ""
          CreationDate: ""
          LastModifiedBy: ""
          LastModifiedDate: ""
          HasTokenKey: ""
          Platform: ""
          Version: ""
          DefaultAuthenticationMethod: ""
          Enabled: ""
          HasCredential: ""
          Id: ""
          ApplicationId: ""
      properties:
        APNSVoipSandboxChannelResponse:
          $ref: '#/components/schemas/APNSVoipSandboxChannelResponse'
      required:
      - APNSVoipSandboxChannelResponse
      type: object
    GetAppResponse:
      example:
        ApplicationResponse:
          CreationDate: ""
          Id: ""
          Arn: ""
          Name: ""
          tags: ""
      properties:
        ApplicationResponse:
          $ref: '#/components/schemas/ApplicationResponse'
      required:
      - ApplicationResponse
      type: object
    GetApplicationDateRangeKpiResponse:
      example:
        ApplicationDateRangeKpiResponse:
          KpiResult:
            Rows: ""
          KpiName: ""
          EndTime: ""
          NextToken: ""
          StartTime: ""
          ApplicationId: ""
      properties:
        ApplicationDateRangeKpiResponse:
          $ref: '#/components/schemas/ApplicationDateRangeKpiResponse'
      required:
      - ApplicationDateRangeKpiResponse
      type: object
    GetApplicationSettingsResponse:
      example:
        ApplicationSettingsResource:
          LastModifiedDate: ""
          Limits:
            Daily: ""
            MaximumDuration: ""
            Total: ""
            MessagesPerSecond: ""
            Session: ""
          QuietTime:
            Start: ""
            End: ""
          JourneyLimits:
            DailyCap: ""
            TimeframeCap:
              Cap: ""
              Days: ""
            TotalCap: ""
          ApplicationId: ""
          CampaignHook:
            Mode: ""
            WebUrl: ""
            LambdaFunctionName: ""
      properties:
        ApplicationSettingsResource:
          $ref: '#/components/schemas/ApplicationSettingsResource'
      required:
      - ApplicationSettingsResource
      type: object
    GetAppsResponse:
      example:
        ApplicationsResponse:
          Item: ""
          NextToken: ""
      properties:
        ApplicationsResponse:
          $ref: '#/components/schemas/ApplicationsResponse'
      required:
      - ApplicationsResponse
      type: object
    GetBaiduChannelResponse:
      example:
        BaiduChannelResponse:
          IsArchived: ""
          CreationDate: ""
          LastModifiedBy: ""
          LastModifiedDate: ""
          Credential: ""
          Platform: ""
          Version: ""
          Enabled: ""
          HasCredential: ""
          Id: ""
          ApplicationId: ""
      properties:
        BaiduChannelResponse:
          $ref: '#/components/schemas/BaiduChannelResponse'
      required:
      - BaiduChannelResponse
      type: object
    GetCampaignResponse:
      example:
        CampaignResponse:
          CreationDate: ""
          LastModifiedDate: ""
          Description: ""
          AdditionalTreatments: ""
          Name: ""
          SegmentVersion: ""
          DefaultState:
            CampaignStatus: ""
          TreatmentDescription: ""
          MessageConfiguration:
            APNSMessage:
              JsonBody: ""
              Action: ""
              MediaUrl: ""
              TimeToLive: ""
              ImageSmallIconUrl: ""
              ImageUrl: ""
              Title: ""
              ImageIconUrl: ""
              SilentPush: ""
              Body: ""
              RawContent: ""
              Url: ""
            BaiduMessage:
              JsonBody: ""
              Action: ""
              MediaUrl: ""
              TimeToLive: ""
              ImageSmallIconUrl: ""
              ImageUrl: ""
              Title: ""
              ImageIconUrl: ""
              SilentPush: ""
              Body: ""
              RawContent: ""
              Url: ""
            DefaultMessage:
              JsonBody: ""
              Action: ""
              MediaUrl: ""
              TimeToLive: ""
              ImageSmallIconUrl: ""
              ImageUrl: ""
              Title: ""
              ImageIconUrl: ""
              SilentPush: ""
              Body: ""
              RawContent: ""
              Url: ""
            InAppMessage:
              CustomConfig: ""
              Layout: ""
              Content: ""
              Body: ""
            EmailMessage:
              FromAddress: ""
              HtmlBody: ""
              Title: ""
              Body: ""
            GCMMessage:
              JsonBody: ""
              Action: ""
              MediaUrl: ""
              TimeToLive: ""
              ImageSmallIconUrl: ""
              ImageUrl: ""
              Title: ""
              ImageIconUrl: ""
              SilentPush: ""
              Body: ""
              RawContent: ""
              Url: ""
            SMSMessage:
              EntityId: ""
              OriginationNumber: ""
              SenderId: ""
              Body: ""
              MessageType: ""
              TemplateId: ""
            CustomMessage:
              Data: ""
            ADMMessage:
              JsonBody: ""
              Action: ""
              MediaUrl: ""
              TimeToLive: ""
              ImageSmallIconUrl: ""
              ImageUrl: ""
              Title: ""
              ImageIconUrl: ""
              SilentPush: ""
              Body: ""
              RawContent: ""
              Url: ""
          Limits:
            Daily: ""
            MaximumDuration: ""
            Total: ""
            MessagesPerSecond: ""
            Session: ""
          Version: ""
          HoldoutPercent: ""
          CustomDeliveryConfiguration:
            DeliveryUri: ""
            EndpointTypes: ""
          TreatmentName: ""
          Hook:
            Mode: ""
            WebUrl: ""
            LambdaFunctionName: ""
          SegmentId: ""
          Priority: ""
          TemplateConfiguration:
            SMSTemplate:
              Version: ""
              Name: ""
            EmailTemplate:
              Version: ""
              Name: ""
            InAppTemplate:
              Version: ""
              Name: ""
            PushTemplate:
              Version: ""
              Name: ""
            VoiceTemplate:
              Version: ""
              Name: ""
          IsPaused: ""
          tags: ""
          State:
            CampaignStatus: ""
          Schedule:
            Timezone: ""
            QuietTime:
              Start: ""
              End: ""
            EndTime: ""
            StartTime: ""
            Frequency: ""
            EventFilter:
              FilterType: ""
              Dimensions:
                Metrics: ""
                EventType:
                  DimensionType: ""
                  Values: ""
                Attributes: ""
            IsLocalTime: ""
          Id: ""
          ApplicationId: ""
          Arn: ""
      properties:
        CampaignResponse:
          $ref: '#/components/schemas/CampaignResponse'
      required:
      - CampaignResponse
      type: object
    GetCampaignActivitiesResponse:
      example:
        ActivitiesResponse:
          Item: ""
          NextToken: ""
      properties:
        ActivitiesResponse:
          $ref: '#/components/schemas/ActivitiesResponse'
      required:
      - ActivitiesResponse
      type: object
    GetCampaignDateRangeKpiResponse:
      example:
        CampaignDateRangeKpiResponse:
          KpiResult:
            Rows: ""
          KpiName: ""
          EndTime: ""
          NextToken: ""
          CampaignId: ""
          StartTime: ""
          ApplicationId: ""
      properties:
        CampaignDateRangeKpiResponse:
          $ref: '#/components/schemas/CampaignDateRangeKpiResponse'
      required:
      - CampaignDateRangeKpiResponse
      type: object
    GetCampaignVersionResponse:
      example:
        CampaignResponse:
          CreationDate: ""
          LastModifiedDate: ""
          Description: ""
          AdditionalTreatments: ""
          Name: ""
          SegmentVersion: ""
          DefaultState:
            CampaignStatus: ""
          TreatmentDescription: ""
          MessageConfiguration:
            APNSMessage:
              JsonBody: ""
              Action: ""
              MediaUrl: ""
              TimeToLive: ""
              ImageSmallIconUrl: ""
              ImageUrl: ""
              Title: ""
              ImageIconUrl: ""
              SilentPush: ""
              Body: ""
              RawContent: ""
              Url: ""
            BaiduMessage:
              JsonBody: ""
              Action: ""
              MediaUrl: ""
              TimeToLive: ""
              ImageSmallIconUrl: ""
              ImageUrl: ""
              Title: ""
              ImageIconUrl: ""
              SilentPush: ""
              Body: ""
              RawContent: ""
              Url: ""
            DefaultMessage:
              JsonBody: ""
              Action: ""
              MediaUrl: ""
              TimeToLive: ""
              ImageSmallIconUrl: ""
              ImageUrl: ""
              Title: ""
              ImageIconUrl: ""
              SilentPush: ""
              Body: ""
              RawContent: ""
              Url: ""
            InAppMessage:
              CustomConfig: ""
              Layout: ""
              Content: ""
              Body: ""
            EmailMessage:
              FromAddress: ""
              HtmlBody: ""
              Title: ""
              Body: ""
            GCMMessage:
              JsonBody: ""
              Action: ""
              MediaUrl: ""
              TimeToLive: ""
              ImageSmallIconUrl: ""
              ImageUrl: ""
              Title: ""
              ImageIconUrl: ""
              SilentPush: ""
              Body: ""
              RawContent: ""
              Url: ""
            SMSMessage:
              EntityId: ""
              OriginationNumber: ""
              SenderId: ""
              Body: ""
              MessageType: ""
              TemplateId: ""
            CustomMessage:
              Data: ""
            ADMMessage:
              JsonBody: ""
              Action: ""
              MediaUrl: ""
              TimeToLive: ""
              ImageSmallIconUrl: ""
              ImageUrl: ""
              Title: ""
              ImageIconUrl: ""
              SilentPush: ""
              Body: ""
              RawContent: ""
              Url: ""
          Limits:
            Daily: ""
            MaximumDuration: ""
            Total: ""
            MessagesPerSecond: ""
            Session: ""
          Version: ""
          HoldoutPercent: ""
          CustomDeliveryConfiguration:
            DeliveryUri: ""
            EndpointTypes: ""
          TreatmentName: ""
          Hook:
            Mode: ""
            WebUrl: ""
            LambdaFunctionName: ""
          SegmentId: ""
          Priority: ""
          TemplateConfiguration:
            SMSTemplate:
              Version: ""
              Name: ""
            EmailTemplate:
              Version: ""
              Name: ""
            InAppTemplate:
              Version: ""
              Name: ""
            PushTemplate:
              Version: ""
              Name: ""
            VoiceTemplate:
              Version: ""
              Name: ""
          IsPaused: ""
          tags: ""
          State:
            CampaignStatus: ""
          Schedule:
            Timezone: ""
            QuietTime:
              Start: ""
              End: ""
            EndTime: ""
            StartTime: ""
            Frequency: ""
            EventFilter:
              FilterType: ""
              Dimensions:
                Metrics: ""
                EventType:
                  DimensionType: ""
                  Values: ""
                Attributes: ""
            IsLocalTime: ""
          Id: ""
          ApplicationId: ""
          Arn: ""
      properties:
        CampaignResponse:
          $ref: '#/components/schemas/CampaignResponse'
      required:
      - CampaignResponse
      type: object
    GetCampaignVersionsResponse:
      example:
        CampaignsResponse:
          Item: ""
          NextToken: ""
      properties:
        CampaignsResponse:
          $ref: '#/components/schemas/CampaignsResponse'
      required:
      - CampaignsResponse
      type: object
    GetCampaignsResponse:
      example:
        CampaignsResponse:
          Item: ""
          NextToken: ""
      properties:
        CampaignsResponse:
          $ref: '#/components/schemas/CampaignsResponse'
      required:
      - CampaignsResponse
      type: object
    GetChannelsResponse:
      example:
        ChannelsResponse:
          Channels: ""
      properties:
        ChannelsResponse:
          $ref: '#/components/schemas/ChannelsResponse'
      required:
      - ChannelsResponse
      type: object
    GetEmailChannelResponse:
      example:
        EmailChannelResponse:
          CreationDate: ""
          LastModifiedBy: ""
          LastModifiedDate: ""
          Platform: ""
          MessagesPerSecond: ""
          Enabled: ""
          HasCredential: ""
          RoleArn: ""
          IsArchived: ""
          ConfigurationSet: ""
          FromAddress: ""
          Version: ""
          Id: ""
          ApplicationId: ""
          Identity: ""
      properties:
        EmailChannelResponse:
          $ref: '#/components/schemas/EmailChannelResponse'
      required:
      - EmailChannelResponse
      type: object
    GetEmailTemplateResponse:
      example:
        EmailTemplateResponse:
          CreationDate: ""
          HtmlPart: ""
          LastModifiedDate: ""
          TextPart: ""
          TemplateDescription: ""
          TemplateType: ""
          Subject: ""
          tags: ""
          RecommenderId: ""
          Version: ""
          TemplateName: ""
          DefaultSubstitutions: ""
          Arn: ""
      properties:
        EmailTemplateResponse:
          $ref: '#/components/schemas/EmailTemplateResponse'
      required:
      - EmailTemplateResponse
      type: object
    GetEndpointResponse:
      example:
        EndpointResponse:
          CreationDate: ""
          User:
            UserId: ""
            UserAttributes: ""
          Address: ""
          RequestId: ""
          Attributes: ""
          EndpointStatus: ""
          Demographic:
            AppVersion: ""
            Locale: ""
            PlatformVersion: ""
            Timezone: ""
            Platform: ""
            Model: ""
            Make: ""
            ModelVersion: ""
          Metrics: ""
          OptOut: ""
          Id: ""
          ApplicationId: ""
          CohortId: ""
          ChannelType: ""
          EffectiveDate: ""
          Location:
            Country: ""
            PostalCode: ""
            Region: ""
            Latitude: ""
            City: ""
            Longitude: ""
      properties:
        EndpointResponse:
          $ref: '#/components/schemas/EndpointResponse'
      required:
      - EndpointResponse
      type: object
    GetEventStreamResponse:
      example:
        EventStream:
          LastUpdatedBy: ""
          LastModifiedDate: ""
          ExternalId: ""
          ApplicationId: ""
          DestinationStreamArn: ""
          RoleArn: ""
      properties:
        EventStream:
          $ref: '#/components/schemas/EventStream'
      required:
      - EventStream
      type: object
    GetExportJobResponse:
      example:
        ExportJobResponse:
          CompletedPieces: ""
          CreationDate: ""
          TotalProcessed: ""
          Definition:
            S3UrlPrefix: ""
            SegmentId: ""
            RoleArn: ""
            SegmentVersion: ""
          Failures: ""
          JobStatus: ""
          TotalFailures: ""
          Type: ""
          FailedPieces: ""
          Id: ""
          TotalPieces: ""
          ApplicationId: ""
          CompletionDate: ""
      properties:
        ExportJobResponse:
          $ref: '#/components/schemas/ExportJobResponse'
      required:
      - ExportJobResponse
      type: object
    GetExportJobsResponse:
      example:
        ExportJobsResponse:
          Item: ""
          NextToken: ""
      properties:
        ExportJobsResponse:
          $ref: '#/components/schemas/ExportJobsResponse'
      required:
      - ExportJobsResponse
      type: object
    GetGcmChannelResponse:
      example:
        GCMChannelResponse:
          CreationDate: ""
          LastModifiedBy: ""
          LastModifiedDate: ""
          Credential: ""
          Platform: ""
          DefaultAuthenticationMethod: ""
          Enabled: ""
          HasCredential: ""
          IsArchived: ""
          Version: ""
          HasFcmServiceCredentials: ""
          Id: ""
          ApplicationId: ""
      properties:
        GCMChannelResponse:
          $ref: '#/components/schemas/GCMChannelResponse'
      required:
      - GCMChannelResponse
      type: object
    GetImportJobResponse:
      example:
        ImportJobResponse:
          CompletedPieces: ""
          CreationDate: ""
          TotalProcessed: ""
          Definition:
            Format: ""
            SegmentName: ""
            S3Url: ""
            SegmentId: ""
            DefineSegment: ""
            RegisterEndpoints: ""
            ExternalId: ""
            RoleArn: ""
          Failures: ""
          JobStatus: ""
          TotalFailures: ""
          Type: ""
          FailedPieces: ""
          Id: ""
          TotalPieces: ""
          ApplicationId: ""
          CompletionDate: ""
      properties:
        ImportJobResponse:
          $ref: '#/components/schemas/ImportJobResponse'
      required:
      - ImportJobResponse
      type: object
    GetImportJobsResponse:
      example:
        ImportJobsResponse:
          Item: ""
          NextToken: ""
      properties:
        ImportJobsResponse:
          $ref: '#/components/schemas/ImportJobsResponse'
      required:
      - ImportJobsResponse
      type: object
    GetInAppMessagesResponse:
      example:
        InAppMessagesResponse:
          InAppMessageCampaigns: ""
      properties:
        InAppMessagesResponse:
          $ref: '#/components/schemas/InAppMessagesResponse'
      required:
      - InAppMessagesResponse
      type: object
    GetInAppTemplateResponse:
      example:
        InAppTemplateResponse:
          CreationDate: ""
          CustomConfig: ""
          LastModifiedDate: ""
          Layout: ""
          Version: ""
          Content: ""
          TemplateName: ""
          TemplateDescription: ""
          TemplateType: ""
          Arn: ""
          tags: ""
      properties:
        InAppTemplateResponse:
          $ref: '#/components/schemas/InAppTemplateResponse'
      required:
      - InAppTemplateResponse
      type: object
    GetJourneyResponse:
      example:
        JourneyResponse:
          Activities: ""
          CreationDate: ""
          LastModifiedDate: ""
          ClosedDays:
            VOICE: ""
            SMS: ""
            CUSTOM: ""
            EMAIL: ""
            PUSH: ""
          QuietTime:
            Start: ""
            End: ""
          LocalTime: ""
          StartCondition:
            Description: ""
            SegmentStartCondition:
              SegmentId: ""
            EventStartCondition:
              SegmentId: SegmentId
              EventFilter:
                FilterType: ""
                Dimensions:
                  Metrics: ""
                  EventType:
                    DimensionType: ""
                    Values: ""
                  Attributes: ""
          SendingSchedule: ""
          WaitForQuietTime: ""
          RefreshFrequency: ""
          Name: ""
          StartActivity: ""
          tags: ""
          OpenHours:
            VOICE: ""
            SMS: ""
            CUSTOM: ""
            EMAIL: ""
            PUSH: ""
          Limits:
            MessagesPerSecond: ""
            EndpointReentryCap: ""
            DailyCap: ""
            EndpointReentryInterval: ""
            TimeframeCap:
              Cap: ""
              Days: ""
            TotalCap: ""
          JourneyChannelSettings:
            ConnectCampaignArn: ""
            ConnectCampaignExecutionRoleArn: ""
          TimezoneEstimationMethods: ""
          State: ""
          Schedule:
            Timezone: ""
            EndTime: ""
            StartTime: ""
          Id: ""
          ApplicationId: ""
          RefreshOnSegmentUpdate: ""
      properties:
        JourneyResponse:
          $ref: '#/components/schemas/JourneyResponse'
      required:
      - JourneyResponse
      type: object
    GetJourneyDateRangeKpiResponse:
      example:
        JourneyDateRangeKpiResponse:
          KpiResult:
            Rows: ""
          KpiName: ""
          JourneyId: ""
          EndTime: ""
          NextToken: ""
          StartTime: ""
          ApplicationId: ""
      properties:
        JourneyDateRangeKpiResponse:
          $ref: '#/components/schemas/JourneyDateRangeKpiResponse'
      required:
      - JourneyDateRangeKpiResponse
      type: object
    GetJourneyExecutionActivityMetricsResponse:
      example:
        JourneyExecutionActivityMetricsResponse:
          JourneyId: ""
          Metrics: ""
          LastEvaluatedTime: ""
          JourneyActivityId: ""
          ActivityType: ""
          ApplicationId: ""
      properties:
        JourneyExecutionActivityMetricsResponse:
          $ref: '#/components/schemas/JourneyExecutionActivityMetricsResponse'
      required:
      - JourneyExecutionActivityMetricsResponse
      type: object
    GetJourneyExecutionMetricsResponse:
      example:
        JourneyExecutionMetricsResponse:
          JourneyId: ""
          Metrics: ""
          LastEvaluatedTime: ""
          ApplicationId: ""
      properties:
        JourneyExecutionMetricsResponse:
          $ref: '#/components/schemas/JourneyExecutionMetricsResponse'
      required:
      - JourneyExecutionMetricsResponse
      type: object
    GetJourneyRunExecutionActivityMetricsResponse:
      example:
        JourneyRunExecutionActivityMetricsResponse:
          ApplicationId: "11111111112222222222333333333344"
          JourneyId: aaaaaaaaaabbbbbbbbbbccccccccccdd
          RunId: "99999999998888888888777777777766"
          JourneyActivityId: AAAAAAAAAA
          ActivityType: EMAIL
          LastEvaluatedTime: 2000-01-01T00:00:05.000Z
          Metrics:
            SUCCESS: "1"
      properties:
        JourneyRunExecutionActivityMetricsResponse:
          $ref: '#/components/schemas/JourneyRunExecutionActivityMetricsResponse'
      required:
      - JourneyRunExecutionActivityMetricsResponse
      type: object
    GetJourneyRunExecutionMetricsResponse:
      example:
        JourneyRunExecutionMetricsResponse:
          ApplicationId: "11111111112222222222333333333344"
          JourneyId: aaaaaaaaaabbbbbbbbbbccccccccccdd
          RunId: "99999999998888888888777777777766"
          LastEvaluatedTime: 2000-01-01T00:00:05.000Z
          Metrics:
            ENDPOINT_PRODUCED: "1"
            ENDPOINT_ENTERED: "1"
            ENDPOINT_LEFT: "1"
      properties:
        JourneyRunExecutionMetricsResponse:
          $ref: '#/components/schemas/JourneyRunExecutionMetricsResponse'
      required:
      - JourneyRunExecutionMetricsResponse
      type: object
    GetJourneyRunsResponse:
      example:
        JourneyRunsResponse:
          Item:
          - RunId: "99999999998888888888777777777766"
            CreationTime: 2000-01-01T00:00:00.000Z
            LastUpdateTime: 2000-01-01T00:00:05.000Z
            Status: COMPLETED
          - RunId: ffffffffffeeeeeeeeeeddddddddddcc
            CreationTime: 2000-01-01T00:00:10.000Z
            LastUpdateTime: 2000-01-01T00:00:10.000Z
            Status: SCHEDULED
      properties:
        JourneyRunsResponse:
          $ref: '#/components/schemas/JourneyRunsResponse'
      required:
      - JourneyRunsResponse
      type: object
    GetPushTemplateResponse:
      example:
        PushNotificationTemplateResponse:
          CreationDate: ""
          LastModifiedDate: ""
          ADM:
            Action: ""
            ImageUrl: ""
            SmallImageIconUrl: ""
            Title: ""
            ImageIconUrl: ""
            Sound: ""
            Body: ""
            RawContent: ""
            Url: ""
          APNS:
            Action: ""
            MediaUrl: ""
            Title: ""
            Sound: ""
            Body: ""
            RawContent: ""
            Url: ""
          TemplateDescription: ""
          TemplateType: ""
          Default:
            Action: ""
            Title: ""
            Sound: ""
            Body: ""
            Url: ""
          tags: ""
          GCM:
            Action: ""
            ImageUrl: ""
            SmallImageIconUrl: ""
            Title: ""
            ImageIconUrl: ""
            Sound: ""
            Body: ""
            RawContent: ""
            Url: ""
          RecommenderId: ""
          Baidu:
            Action: ""
            ImageUrl: ""
            SmallImageIconUrl: ""
            Title: ""
            ImageIconUrl: ""
            Sound: ""
            Body: ""
            RawContent: ""
            Url: ""
          Version: ""
          TemplateName: ""
          DefaultSubstitutions: ""
          Arn: ""
      properties:
        PushNotificationTemplateResponse:
          $ref: '#/components/schemas/PushNotificationTemplateResponse'
      required:
      - PushNotificationTemplateResponse
      type: object
    GetRecommenderConfigurationResponse:
      example:
        RecommenderConfigurationResponse:
          CreationDate: ""
          LastModifiedDate: ""
          RecommendationProviderUri: ""
          RecommendationsDisplayName: ""
          Description: ""
          RecommendationsPerMessage: ""
          RecommendationProviderRoleArn: ""
          Attributes: ""
          Id: ""
          RecommendationTransformerUri: ""
          Name: ""
          RecommendationProviderIdType: ""
      properties:
        RecommenderConfigurationResponse:
          $ref: '#/components/schemas/RecommenderConfigurationResponse'
      required:
      - RecommenderConfigurationResponse
      type: object
    GetRecommenderConfigurationsResponse:
      example:
        ListRecommenderConfigurationsResponse:
          Item: ""
          NextToken: ""
      properties:
        ListRecommenderConfigurationsResponse:
          $ref: '#/components/schemas/ListRecommenderConfigurationsResponse'
      required:
      - ListRecommenderConfigurationsResponse
      type: object
    GetSegmentResponse:
      example:
        SegmentResponse:
          SegmentType: ""
          CreationDate: ""
          LastModifiedDate: ""
          Version: ""
          SegmentGroups:
            Groups: ""
            Include: ""
          Dimensions:
            Demographic:
              AppVersion:
                DimensionType: ""
                Values: ""
              DeviceType:
                DimensionType: ""
                Values: ""
              Platform:
                DimensionType: ""
                Values: ""
              Channel:
                DimensionType: ""
                Values: ""
              Model:
                DimensionType: ""
                Values: ""
              Make:
                DimensionType: ""
                Values: ""
            Metrics: ""
            Attributes: ""
            Behavior:
              Recency:
                Duration: ""
                RecencyType: ""
            Location:
              GPSPoint:
                RangeInKilometers: ""
                Coordinates:
                  Latitude: ""
                  Longitude: ""
              Country:
                DimensionType: ""
                Values: ""
            UserAttributes: ""
          Id: ""
          ApplicationId: ""
          Arn: ""
          ImportDefinition:
            Format: ""
            ChannelCounts: ""
            S3Url: ""
            Size: ""
            ExternalId: ""
            RoleArn: ""
          Name: ""
          tags: ""
      properties:
        SegmentResponse:
          $ref: '#/components/schemas/SegmentResponse'
      required:
      - SegmentResponse
      type: object
    GetSegmentExportJobsResponse:
      example:
        ExportJobsResponse:
          Item: ""
          NextToken: ""
      properties:
        ExportJobsResponse:
          $ref: '#/components/schemas/ExportJobsResponse'
      required:
      - ExportJobsResponse
      type: object
    GetSegmentImportJobsResponse:
      example:
        ImportJobsResponse:
          Item: ""
          NextToken: ""
      properties:
        ImportJobsResponse:
          $ref: '#/components/schemas/ImportJobsResponse'
      required:
      - ImportJobsResponse
      type: object
    GetSegmentVersionResponse:
      example:
        SegmentResponse:
          SegmentType: ""
          CreationDate: ""
          LastModifiedDate: ""
          Version: ""
          SegmentGroups:
            Groups: ""
            Include: ""
          Dimensions:
            Demographic:
              AppVersion:
                DimensionType: ""
                Values: ""
              DeviceType:
                DimensionType: ""
                Values: ""
              Platform:
                DimensionType: ""
                Values: ""
              Channel:
                DimensionType: ""
                Values: ""
              Model:
                DimensionType: ""
                Values: ""
              Make:
                DimensionType: ""
                Values: ""
            Metrics: ""
            Attributes: ""
            Behavior:
              Recency:
                Duration: ""
                RecencyType: ""
            Location:
              GPSPoint:
                RangeInKilometers: ""
                Coordinates:
                  Latitude: ""
                  Longitude: ""
              Country:
                DimensionType: ""
                Values: ""
            UserAttributes: ""
          Id: ""
          ApplicationId: ""
          Arn: ""
          ImportDefinition:
            Format: ""
            ChannelCounts: ""
            S3Url: ""
            Size: ""
            ExternalId: ""
            RoleArn: ""
          Name: ""
          tags: ""
      properties:
        SegmentResponse:
          $ref: '#/components/schemas/SegmentResponse'
      required:
      - SegmentResponse
      type: object
    GetSegmentVersionsResponse:
      example:
        SegmentsResponse:
          Item: ""
          NextToken: ""
      properties:
        SegmentsResponse:
          $ref: '#/components/schemas/SegmentsResponse'
      required:
      - SegmentsResponse
      type: object
    GetSegmentsResponse:
      example:
        SegmentsResponse:
          Item: ""
          NextToken: ""
      properties:
        SegmentsResponse:
          $ref: '#/components/schemas/SegmentsResponse'
      required:
      - SegmentsResponse
      type: object
    GetSmsChannelResponse:
      example:
        SMSChannelResponse:
          ShortCode: ""
          CreationDate: ""
          LastModifiedBy: ""
          LastModifiedDate: ""
          Platform: ""
          Enabled: ""
          HasCredential: ""
          PromotionalMessagesPerSecond: ""
          SenderId: ""
          IsArchived: ""
          Version: ""
          TransactionalMessagesPerSecond: ""
          Id: ""
          ApplicationId: ""
      properties:
        SMSChannelResponse:
          $ref: '#/components/schemas/SMSChannelResponse'
      required:
      - SMSChannelResponse
      type: object
    GetSmsTemplateResponse:
      example:
        SMSTemplateResponse:
          CreationDate: ""
          LastModifiedDate: ""
          RecommenderId: ""
          Version: ""
          TemplateName: ""
          DefaultSubstitutions: ""
          TemplateDescription: ""
          TemplateType: ""
          Arn: ""
          Body: ""
          tags: ""
      properties:
        SMSTemplateResponse:
          $ref: '#/components/schemas/SMSTemplateResponse'
      required:
      - SMSTemplateResponse
      type: object
    GetUserEndpointsResponse:
      example:
        EndpointsResponse:
          Item: ""
      properties:
        EndpointsResponse:
          $ref: '#/components/schemas/EndpointsResponse'
      required:
      - EndpointsResponse
      type: object
    GetVoiceChannelResponse:
      example:
        VoiceChannelResponse:
          IsArchived: ""
          CreationDate: ""
          LastModifiedBy: ""
          LastModifiedDate: ""
          Platform: ""
          Version: ""
          Enabled: ""
          HasCredential: ""
          Id: ""
          ApplicationId: ""
      properties:
        VoiceChannelResponse:
          $ref: '#/components/schemas/VoiceChannelResponse'
      required:
      - VoiceChannelResponse
      type: object
    GetVoiceTemplateResponse:
      example:
        VoiceTemplateResponse:
          CreationDate: ""
          LanguageCode: ""
          LastModifiedDate: ""
          Version: ""
          TemplateName: ""
          VoiceId: ""
          DefaultSubstitutions: ""
          TemplateDescription: ""
          TemplateType: ""
          Arn: ""
          Body: ""
          tags: ""
      properties:
        VoiceTemplateResponse:
          $ref: '#/components/schemas/VoiceTemplateResponse'
      required:
      - VoiceTemplateResponse
      type: object
    ListJourneysResponse:
      example:
        JourneysResponse:
          Item: ""
          NextToken: ""
      properties:
        JourneysResponse:
          $ref: '#/components/schemas/JourneysResponse'
      required:
      - JourneysResponse
      type: object
    ListTagsForResourceResponse:
      example:
        TagsModel:
          tags: ""
      properties:
        TagsModel:
          $ref: '#/components/schemas/TagsModel'
      required:
      - TagsModel
      type: object
    ListTemplateVersionsResponse:
      example:
        TemplateVersionsResponse:
          Item: ""
          Message: ""
          NextToken: ""
          RequestID: ""
      properties:
        TemplateVersionsResponse:
          $ref: '#/components/schemas/TemplateVersionsResponse'
      required:
      - TemplateVersionsResponse
      type: object
    ListTemplatesResponse:
      example:
        TemplatesResponse:
          Item: ""
          NextToken: ""
      properties:
        TemplatesResponse:
          $ref: '#/components/schemas/TemplatesResponse'
      required:
      - TemplatesResponse
      type: object
    PhoneNumberValidateResponse:
      example:
        NumberValidateResponse:
          Timezone: ""
          CleansedPhoneNumberNational: ""
          CountryCodeIso2: ""
          ZipCode: ""
          City: ""
          County: ""
          PhoneTypeCode: ""
          CountryCodeNumeric: ""
          PhoneType: ""
          Country: ""
          Carrier: ""
          CleansedPhoneNumberE164: ""
          OriginalCountryCodeIso2: ""
          OriginalPhoneNumber: ""
      properties:
        NumberValidateResponse:
          $ref: '#/components/schemas/NumberValidateResponse'
      required:
      - NumberValidateResponse
      type: object
    PutEventStreamResponse:
      example:
        EventStream:
          LastUpdatedBy: ""
          LastModifiedDate: ""
          ExternalId: ""
          ApplicationId: ""
          DestinationStreamArn: ""
          RoleArn: ""
      properties:
        EventStream:
          $ref: '#/components/schemas/EventStream'
      required:
      - EventStream
      type: object
    PutEventsResponse:
      example:
        EventsResponse:
          Results: ""
      properties:
        EventsResponse:
          $ref: '#/components/schemas/EventsResponse'
      required:
      - EventsResponse
      type: object
    MapOfEventsBatch:
      additionalProperties:
        $ref: '#/components/schemas/EventsBatch'
      type: object
    RemoveAttributesResponse:
      example:
        AttributesResource:
          AttributeType: ""
          Attributes: ""
          ApplicationId: ""
      properties:
        AttributesResource:
          $ref: '#/components/schemas/AttributesResource'
      required:
      - AttributesResource
      type: object
    ListOf__string:
      items:
        $ref: '#/components/schemas/__string'
      type: array
    SendMessagesResponse:
      example:
        MessageResponse:
          RequestId: ""
          EndpointResult: ""
          ApplicationId: ""
          Result: ""
      properties:
        MessageResponse:
          $ref: '#/components/schemas/MessageResponse'
      required:
      - MessageResponse
      type: object
    MapOfAddressConfiguration:
      additionalProperties:
        $ref: '#/components/schemas/AddressConfiguration'
      type: object
    MapOfEndpointSendConfiguration:
      additionalProperties:
        $ref: '#/components/schemas/EndpointSendConfiguration'
      type: object
    DirectMessageConfiguration:
      description: Specifies the settings and content for the default message and
        any default messages that you tailored for specific channels.
      properties:
        ADMMessage:
          $ref: '#/components/schemas/DirectMessageConfiguration_ADMMessage'
        APNSMessage:
          $ref: '#/components/schemas/DirectMessageConfiguration_APNSMessage'
        BaiduMessage:
          $ref: '#/components/schemas/DirectMessageConfiguration_BaiduMessage'
        DefaultMessage:
          $ref: '#/components/schemas/DirectMessageConfiguration_DefaultMessage'
        DefaultPushNotificationMessage:
          $ref: '#/components/schemas/DirectMessageConfiguration_DefaultPushNotificationMessage'
        EmailMessage:
          $ref: '#/components/schemas/DirectMessageConfiguration_EmailMessage'
        GCMMessage:
          $ref: '#/components/schemas/DirectMessageConfiguration_GCMMessage'
        SMSMessage:
          $ref: '#/components/schemas/DirectMessageConfiguration_SMSMessage'
        VoiceMessage:
          $ref: '#/components/schemas/DirectMessageConfiguration_VoiceMessage'
      type: object
    SendOTPMessageResponse:
      example:
        MessageResponse:
          RequestId: ""
          EndpointResult: ""
          ApplicationId: ""
          Result: ""
      properties:
        MessageResponse:
          $ref: '#/components/schemas/MessageResponse'
      required:
      - MessageResponse
      type: object
    SendUsersMessagesResponse:
      example:
        SendUsersMessageResponse:
          RequestId: ""
          ApplicationId: ""
          Result: ""
      properties:
        SendUsersMessageResponse:
          $ref: '#/components/schemas/SendUsersMessageResponse'
      required:
      - SendUsersMessageResponse
      type: object
    UpdateAdmChannelResponse:
      example:
        ADMChannelResponse:
          IsArchived: ""
          CreationDate: ""
          LastModifiedBy: ""
          LastModifiedDate: ""
          Platform: ""
          Version: ""
          Enabled: ""
          HasCredential: ""
          Id: ""
          ApplicationId: ""
      properties:
        ADMChannelResponse:
          $ref: '#/components/schemas/ADMChannelResponse'
      required:
      - ADMChannelResponse
      type: object
    UpdateApnsChannelResponse:
      example:
        APNSChannelResponse:
          IsArchived: ""
          CreationDate: ""
          LastModifiedBy: ""
          LastModifiedDate: ""
          HasTokenKey: ""
          Platform: ""
          Version: ""
          DefaultAuthenticationMethod: ""
          Enabled: ""
          HasCredential: ""
          Id: ""
          ApplicationId: ""
      properties:
        APNSChannelResponse:
          $ref: '#/components/schemas/APNSChannelResponse'
      required:
      - APNSChannelResponse
      type: object
    UpdateApnsSandboxChannelResponse:
      example:
        APNSSandboxChannelResponse:
          IsArchived: ""
          CreationDate: ""
          LastModifiedBy: ""
          LastModifiedDate: ""
          HasTokenKey: ""
          Platform: ""
          Version: ""
          DefaultAuthenticationMethod: ""
          Enabled: ""
          HasCredential: ""
          Id: ""
          ApplicationId: ""
      properties:
        APNSSandboxChannelResponse:
          $ref: '#/components/schemas/APNSSandboxChannelResponse'
      required:
      - APNSSandboxChannelResponse
      type: object
    UpdateApnsVoipChannelResponse:
      example:
        APNSVoipChannelResponse:
          IsArchived: ""
          CreationDate: ""
          LastModifiedBy: ""
          LastModifiedDate: ""
          HasTokenKey: ""
          Platform: ""
          Version: ""
          DefaultAuthenticationMethod: ""
          Enabled: ""
          HasCredential: ""
          Id: ""
          ApplicationId: ""
      properties:
        APNSVoipChannelResponse:
          $ref: '#/components/schemas/APNSVoipChannelResponse'
      required:
      - APNSVoipChannelResponse
      type: object
    UpdateApnsVoipSandboxChannelResponse:
      example:
        APNSVoipSandboxChannelResponse:
          IsArchived: ""
          CreationDate: ""
          LastModifiedBy: ""
          LastModifiedDate: ""
          HasTokenKey: ""
          Platform: ""
          Version: ""
          DefaultAuthenticationMethod: ""
          Enabled: ""
          HasCredential: ""
          Id: ""
          ApplicationId: ""
      properties:
        APNSVoipSandboxChannelResponse:
          $ref: '#/components/schemas/APNSVoipSandboxChannelResponse'
      required:
      - APNSVoipSandboxChannelResponse
      type: object
    UpdateApplicationSettingsResponse:
      example:
        ApplicationSettingsResource:
          LastModifiedDate: ""
          Limits:
            Daily: ""
            MaximumDuration: ""
            Total: ""
            MessagesPerSecond: ""
            Session: ""
          QuietTime:
            Start: ""
            End: ""
          JourneyLimits:
            DailyCap: ""
            TimeframeCap:
              Cap: ""
              Days: ""
            TotalCap: ""
          ApplicationId: ""
          CampaignHook:
            Mode: ""
            WebUrl: ""
            LambdaFunctionName: ""
      properties:
        ApplicationSettingsResource:
          $ref: '#/components/schemas/ApplicationSettingsResource'
      required:
      - ApplicationSettingsResource
      type: object
    ApplicationSettingsJourneyLimits:
      description: "The default sending limits for journeys in the application. To\
        \ override these limits and define custom limits for a specific journey, use\
        \ the Journey resource."
      properties:
        DailyCap:
          allOf:
          - $ref: '#/components/schemas/__integer'
          - description: "The daily number of messages that an endpoint can receive\
              \ from all journeys. The maximum value is 100. If set to 0, this limit\
              \ will not apply."
        TimeframeCap:
          $ref: '#/components/schemas/ApplicationSettingsJourneyLimits_TimeframeCap'
        TotalCap:
          allOf:
          - $ref: '#/components/schemas/__integer'
          - description: "The default maximum number of messages that a single journey\
              \ can sent to a single endpoint. The maximum value is 100. If set to\
              \ 0, this limit will not apply."
      type: object
    UpdateBaiduChannelResponse:
      example:
        BaiduChannelResponse:
          IsArchived: ""
          CreationDate: ""
          LastModifiedBy: ""
          LastModifiedDate: ""
          Credential: ""
          Platform: ""
          Version: ""
          Enabled: ""
          HasCredential: ""
          Id: ""
          ApplicationId: ""
      properties:
        BaiduChannelResponse:
          $ref: '#/components/schemas/BaiduChannelResponse'
      required:
      - BaiduChannelResponse
      type: object
    UpdateCampaignResponse:
      example:
        CampaignResponse:
          CreationDate: ""
          LastModifiedDate: ""
          Description: ""
          AdditionalTreatments: ""
          Name: ""
          SegmentVersion: ""
          DefaultState:
            CampaignStatus: ""
          TreatmentDescription: ""
          MessageConfiguration:
            APNSMessage:
              JsonBody: ""
              Action: ""
              MediaUrl: ""
              TimeToLive: ""
              ImageSmallIconUrl: ""
              ImageUrl: ""
              Title: ""
              ImageIconUrl: ""
              SilentPush: ""
              Body: ""
              RawContent: ""
              Url: ""
            BaiduMessage:
              JsonBody: ""
              Action: ""
              MediaUrl: ""
              TimeToLive: ""
              ImageSmallIconUrl: ""
              ImageUrl: ""
              Title: ""
              ImageIconUrl: ""
              SilentPush: ""
              Body: ""
              RawContent: ""
              Url: ""
            DefaultMessage:
              JsonBody: ""
              Action: ""
              MediaUrl: ""
              TimeToLive: ""
              ImageSmallIconUrl: ""
              ImageUrl: ""
              Title: ""
              ImageIconUrl: ""
              SilentPush: ""
              Body: ""
              RawContent: ""
              Url: ""
            InAppMessage:
              CustomConfig: ""
              Layout: ""
              Content: ""
              Body: ""
            EmailMessage:
              FromAddress: ""
              HtmlBody: ""
              Title: ""
              Body: ""
            GCMMessage:
              JsonBody: ""
              Action: ""
              MediaUrl: ""
              TimeToLive: ""
              ImageSmallIconUrl: ""
              ImageUrl: ""
              Title: ""
              ImageIconUrl: ""
              SilentPush: ""
              Body: ""
              RawContent: ""
              Url: ""
            SMSMessage:
              EntityId: ""
              OriginationNumber: ""
              SenderId: ""
              Body: ""
              MessageType: ""
              TemplateId: ""
            CustomMessage:
              Data: ""
            ADMMessage:
              JsonBody: ""
              Action: ""
              MediaUrl: ""
              TimeToLive: ""
              ImageSmallIconUrl: ""
              ImageUrl: ""
              Title: ""
              ImageIconUrl: ""
              SilentPush: ""
              Body: ""
              RawContent: ""
              Url: ""
          Limits:
            Daily: ""
            MaximumDuration: ""
            Total: ""
            MessagesPerSecond: ""
            Session: ""
          Version: ""
          HoldoutPercent: ""
          CustomDeliveryConfiguration:
            DeliveryUri: ""
            EndpointTypes: ""
          TreatmentName: ""
          Hook:
            Mode: ""
            WebUrl: ""
            LambdaFunctionName: ""
          SegmentId: ""
          Priority: ""
          TemplateConfiguration:
            SMSTemplate:
              Version: ""
              Name: ""
            EmailTemplate:
              Version: ""
              Name: ""
            InAppTemplate:
              Version: ""
              Name: ""
            PushTemplate:
              Version: ""
              Name: ""
            VoiceTemplate:
              Version: ""
              Name: ""
          IsPaused: ""
          tags: ""
          State:
            CampaignStatus: ""
          Schedule:
            Timezone: ""
            QuietTime:
              Start: ""
              End: ""
            EndTime: ""
            StartTime: ""
            Frequency: ""
            EventFilter:
              FilterType: ""
              Dimensions:
                Metrics: ""
                EventType:
                  DimensionType: ""
                  Values: ""
                Attributes: ""
            IsLocalTime: ""
          Id: ""
          ApplicationId: ""
          Arn: ""
      properties:
        CampaignResponse:
          $ref: '#/components/schemas/CampaignResponse'
      required:
      - CampaignResponse
      type: object
    UpdateEmailChannelResponse:
      example:
        EmailChannelResponse:
          CreationDate: ""
          LastModifiedBy: ""
          LastModifiedDate: ""
          Platform: ""
          MessagesPerSecond: ""
          Enabled: ""
          HasCredential: ""
          RoleArn: ""
          IsArchived: ""
          ConfigurationSet: ""
          FromAddress: ""
          Version: ""
          Id: ""
          ApplicationId: ""
          Identity: ""
      properties:
        EmailChannelResponse:
          $ref: '#/components/schemas/EmailChannelResponse'
      required:
      - EmailChannelResponse
      type: object
    UpdateEmailTemplateResponse:
      example:
        MessageBody:
          Message: ""
          RequestID: ""
      properties:
        MessageBody:
          $ref: '#/components/schemas/MessageBody'
      required:
      - MessageBody
      type: object
    UpdateEndpointResponse:
      example:
        MessageBody:
          Message: ""
          RequestID: ""
      properties:
        MessageBody:
          $ref: '#/components/schemas/MessageBody'
      required:
      - MessageBody
      type: object
    MapOfListOf__string:
      additionalProperties:
        $ref: '#/components/schemas/ListOf__string'
      type: object
    ChannelType:
      enum:
      - PUSH
      - GCM
      - APNS
      - APNS_SANDBOX
      - APNS_VOIP
      - APNS_VOIP_SANDBOX
      - ADM
      - SMS
      - VOICE
      - EMAIL
      - BAIDU
      - CUSTOM
      - IN_APP
      type: string
    EndpointDemographic:
      description: "Specifies demographic information about an endpoint, such as the\
        \ applicable time zone and platform."
      properties:
        AppVersion:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The version of the app that's associated with the endpoint.
        Locale:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: "The locale of the endpoint, in the following format: the\
              \ ISO 639-1 alpha-2 code, followed by an underscore (_), followed by\
              \ an ISO 3166-1 alpha-2 value."
        Make:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: "The manufacturer of the endpoint device, such as apple or\
              \ samsung."
        Model:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: "The model name or number of the endpoint device, such as\
              \ iPhone or SM-G900F."
        ModelVersion:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The model version of the endpoint device.
        Platform:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: "The platform of the endpoint device, such as ios."
        PlatformVersion:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The platform version of the endpoint device.
        Timezone:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: "The time zone of the endpoint, specified as a tz database\
              \ name value, such as America/Los_Angeles."
      type: object
    EndpointLocation:
      description: Specifies geographic information about an endpoint.
      properties:
        City:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The name of the city where the endpoint is located.
        Country:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: "The two-character code, in ISO 3166-1 alpha-2 format, for\
              \ the country or region where the endpoint is located. For example,\
              \ US for the United States."
        Latitude:
          allOf:
          - $ref: '#/components/schemas/__double'
          - description: "The latitude coordinate of the endpoint location, rounded\
              \ to one decimal place."
        Longitude:
          allOf:
          - $ref: '#/components/schemas/__double'
          - description: "The longitude coordinate of the endpoint location, rounded\
              \ to one decimal place."
        PostalCode:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The postal or ZIP code for the area where the endpoint is
              located.
        Region:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: "The name of the region where the endpoint is located. For\
              \ locations in the United States, this value is the name of a state."
      type: object
    MapOf__double:
      additionalProperties:
        $ref: '#/components/schemas/__double'
      type: object
    EndpointUser:
      description: Specifies data for one or more attributes that describe the user
        who's associated with an endpoint.
      properties:
        UserAttributes:
          allOf:
          - $ref: '#/components/schemas/MapOfListOf__string'
          - description: "<p>One or more custom attributes that describe the user\
              \ by associating a name with an array of values. For example, the value\
              \ of an attribute named Interests might be: [\"Science\", \"Music\"\
              , \"Travel\"]. You can use these attributes as filter criteria when\
              \ you create segments. Attribute names are case sensitive.</p> <p>An\
              \ attribute name can contain up to 50 characters. An attribute value\
              \ can contain up to 100 characters. When you define the name of a custom\
              \ attribute, avoid using the following characters: number sign (#),\
              \ colon (:), question mark (?), backslash (\\), and slash (/). The Amazon\
              \ Pinpoint console can't display attribute names that contain these\
              \ characters. This restriction doesn't apply to attribute values.</p>"
        UserId:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The unique identifier for the user.
      type: object
    UpdateEndpointsBatchResponse:
      example:
        MessageBody:
          Message: ""
          RequestID: ""
      properties:
        MessageBody:
          $ref: '#/components/schemas/MessageBody'
      required:
      - MessageBody
      type: object
    ListOfEndpointBatchItem:
      items:
        $ref: '#/components/schemas/EndpointBatchItem'
      type: array
    UpdateGcmChannelResponse:
      example:
        GCMChannelResponse:
          CreationDate: ""
          LastModifiedBy: ""
          LastModifiedDate: ""
          Credential: ""
          Platform: ""
          DefaultAuthenticationMethod: ""
          Enabled: ""
          HasCredential: ""
          IsArchived: ""
          Version: ""
          HasFcmServiceCredentials: ""
          Id: ""
          ApplicationId: ""
      properties:
        GCMChannelResponse:
          $ref: '#/components/schemas/GCMChannelResponse'
      required:
      - GCMChannelResponse
      type: object
    UpdateInAppTemplateResponse:
      example:
        MessageBody:
          Message: ""
          RequestID: ""
      properties:
        MessageBody:
          $ref: '#/components/schemas/MessageBody'
      required:
      - MessageBody
      type: object
    UpdateJourneyResponse:
      example:
        JourneyResponse:
          Activities: ""
          CreationDate: ""
          LastModifiedDate: ""
          ClosedDays:
            VOICE: ""
            SMS: ""
            CUSTOM: ""
            EMAIL: ""
            PUSH: ""
          QuietTime:
            Start: ""
            End: ""
          LocalTime: ""
          StartCondition:
            Description: ""
            SegmentStartCondition:
              SegmentId: ""
            EventStartCondition:
              SegmentId: SegmentId
              EventFilter:
                FilterType: ""
                Dimensions:
                  Metrics: ""
                  EventType:
                    DimensionType: ""
                    Values: ""
                  Attributes: ""
          SendingSchedule: ""
          WaitForQuietTime: ""
          RefreshFrequency: ""
          Name: ""
          StartActivity: ""
          tags: ""
          OpenHours:
            VOICE: ""
            SMS: ""
            CUSTOM: ""
            EMAIL: ""
            PUSH: ""
          Limits:
            MessagesPerSecond: ""
            EndpointReentryCap: ""
            DailyCap: ""
            EndpointReentryInterval: ""
            TimeframeCap:
              Cap: ""
              Days: ""
            TotalCap: ""
          JourneyChannelSettings:
            ConnectCampaignArn: ""
            ConnectCampaignExecutionRoleArn: ""
          TimezoneEstimationMethods: ""
          State: ""
          Schedule:
            Timezone: ""
            EndTime: ""
            StartTime: ""
          Id: ""
          ApplicationId: ""
          RefreshOnSegmentUpdate: ""
      properties:
        JourneyResponse:
          $ref: '#/components/schemas/JourneyResponse'
      required:
      - JourneyResponse
      type: object
    ConflictException: {}
    UpdateJourneyStateResponse:
      example:
        JourneyResponse:
          Activities: ""
          CreationDate: ""
          LastModifiedDate: ""
          ClosedDays:
            VOICE: ""
            SMS: ""
            CUSTOM: ""
            EMAIL: ""
            PUSH: ""
          QuietTime:
            Start: ""
            End: ""
          LocalTime: ""
          StartCondition:
            Description: ""
            SegmentStartCondition:
              SegmentId: ""
            EventStartCondition:
              SegmentId: SegmentId
              EventFilter:
                FilterType: ""
                Dimensions:
                  Metrics: ""
                  EventType:
                    DimensionType: ""
                    Values: ""
                  Attributes: ""
          SendingSchedule: ""
          WaitForQuietTime: ""
          RefreshFrequency: ""
          Name: ""
          StartActivity: ""
          tags: ""
          OpenHours:
            VOICE: ""
            SMS: ""
            CUSTOM: ""
            EMAIL: ""
            PUSH: ""
          Limits:
            MessagesPerSecond: ""
            EndpointReentryCap: ""
            DailyCap: ""
            EndpointReentryInterval: ""
            TimeframeCap:
              Cap: ""
              Days: ""
            TotalCap: ""
          JourneyChannelSettings:
            ConnectCampaignArn: ""
            ConnectCampaignExecutionRoleArn: ""
          TimezoneEstimationMethods: ""
          State: ""
          Schedule:
            Timezone: ""
            EndTime: ""
            StartTime: ""
          Id: ""
          ApplicationId: ""
          RefreshOnSegmentUpdate: ""
      properties:
        JourneyResponse:
          $ref: '#/components/schemas/JourneyResponse'
      required:
      - JourneyResponse
      type: object
    UpdatePushTemplateResponse:
      example:
        MessageBody:
          Message: ""
          RequestID: ""
      properties:
        MessageBody:
          $ref: '#/components/schemas/MessageBody'
      required:
      - MessageBody
      type: object
    UpdateRecommenderConfigurationResponse:
      example:
        RecommenderConfigurationResponse:
          CreationDate: ""
          LastModifiedDate: ""
          RecommendationProviderUri: ""
          RecommendationsDisplayName: ""
          Description: ""
          RecommendationsPerMessage: ""
          RecommendationProviderRoleArn: ""
          Attributes: ""
          Id: ""
          RecommendationTransformerUri: ""
          Name: ""
          RecommendationProviderIdType: ""
      properties:
        RecommenderConfigurationResponse:
          $ref: '#/components/schemas/RecommenderConfigurationResponse'
      required:
      - RecommenderConfigurationResponse
      type: object
    UpdateSegmentResponse:
      example:
        SegmentResponse:
          SegmentType: ""
          CreationDate: ""
          LastModifiedDate: ""
          Version: ""
          SegmentGroups:
            Groups: ""
            Include: ""
          Dimensions:
            Demographic:
              AppVersion:
                DimensionType: ""
                Values: ""
              DeviceType:
                DimensionType: ""
                Values: ""
              Platform:
                DimensionType: ""
                Values: ""
              Channel:
                DimensionType: ""
                Values: ""
              Model:
                DimensionType: ""
                Values: ""
              Make:
                DimensionType: ""
                Values: ""
            Metrics: ""
            Attributes: ""
            Behavior:
              Recency:
                Duration: ""
                RecencyType: ""
            Location:
              GPSPoint:
                RangeInKilometers: ""
                Coordinates:
                  Latitude: ""
                  Longitude: ""
              Country:
                DimensionType: ""
                Values: ""
            UserAttributes: ""
          Id: ""
          ApplicationId: ""
          Arn: ""
          ImportDefinition:
            Format: ""
            ChannelCounts: ""
            S3Url: ""
            Size: ""
            ExternalId: ""
            RoleArn: ""
          Name: ""
          tags: ""
      properties:
        SegmentResponse:
          $ref: '#/components/schemas/SegmentResponse'
      required:
      - SegmentResponse
      type: object
    UpdateSmsChannelResponse:
      example:
        SMSChannelResponse:
          ShortCode: ""
          CreationDate: ""
          LastModifiedBy: ""
          LastModifiedDate: ""
          Platform: ""
          Enabled: ""
          HasCredential: ""
          PromotionalMessagesPerSecond: ""
          SenderId: ""
          IsArchived: ""
          Version: ""
          TransactionalMessagesPerSecond: ""
          Id: ""
          ApplicationId: ""
      properties:
        SMSChannelResponse:
          $ref: '#/components/schemas/SMSChannelResponse'
      required:
      - SMSChannelResponse
      type: object
    UpdateSmsTemplateResponse:
      example:
        MessageBody:
          Message: ""
          RequestID: ""
      properties:
        MessageBody:
          $ref: '#/components/schemas/MessageBody'
      required:
      - MessageBody
      type: object
    UpdateTemplateActiveVersionResponse:
      example:
        MessageBody:
          Message: ""
          RequestID: ""
      properties:
        MessageBody:
          $ref: '#/components/schemas/MessageBody'
      required:
      - MessageBody
      type: object
    UpdateVoiceChannelResponse:
      example:
        VoiceChannelResponse:
          IsArchived: ""
          CreationDate: ""
          LastModifiedBy: ""
          LastModifiedDate: ""
          Platform: ""
          Version: ""
          Enabled: ""
          HasCredential: ""
          Id: ""
          ApplicationId: ""
      properties:
        VoiceChannelResponse:
          $ref: '#/components/schemas/VoiceChannelResponse'
      required:
      - VoiceChannelResponse
      type: object
    UpdateVoiceTemplateResponse:
      example:
        MessageBody:
          Message: ""
          RequestID: ""
      properties:
        MessageBody:
          $ref: '#/components/schemas/MessageBody'
      required:
      - MessageBody
      type: object
    VerifyOTPMessageResponse:
      example:
        VerificationResponse:
          Valid: ""
      properties:
        VerificationResponse:
          $ref: '#/components/schemas/VerificationResponse'
      required:
      - VerificationResponse
      type: object
    ADMChannelRequest:
      description: Specifies the status and settings of the ADM (Amazon Device Messaging)
        channel for an application.
      example:
        ClientSecret: ""
        ClientId: ""
        Enabled: ""
      properties:
        ClientId:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The Client ID that you received from Amazon to send messages
              by using ADM.
        ClientSecret:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The Client Secret that you received from Amazon to send messages
              by using ADM.
        Enabled:
          allOf:
          - $ref: '#/components/schemas/__boolean'
          - description: Specifies whether to enable the ADM channel for the application.
      required:
      - ClientId
      - ClientSecret
      type: object
    ADMChannelResponse:
      description: Provides information about the status and settings of the ADM (Amazon
        Device Messaging) channel for an application.
      example:
        IsArchived: ""
        CreationDate: ""
        LastModifiedBy: ""
        LastModifiedDate: ""
        Platform: ""
        Version: ""
        Enabled: ""
        HasCredential: ""
        Id: ""
        ApplicationId: ""
      properties:
        ApplicationId:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The unique identifier for the application that the ADM channel
              applies to.
        CreationDate:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The date and time when the ADM channel was enabled.
        Enabled:
          allOf:
          - $ref: '#/components/schemas/__boolean'
          - description: Specifies whether the ADM channel is enabled for the application.
        HasCredential:
          allOf:
          - $ref: '#/components/schemas/__boolean'
          - description: (Not used) This property is retained only for backward compatibility.
        Id:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: (Deprecated) An identifier for the ADM channel. This property
              is retained only for backward compatibility.
        IsArchived:
          allOf:
          - $ref: '#/components/schemas/__boolean'
          - description: Specifies whether the ADM channel is archived.
        LastModifiedBy:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The user who last modified the ADM channel.
        LastModifiedDate:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The date and time when the ADM channel was last modified.
        Platform:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: "The type of messaging or notification platform for the channel.\
              \ For the ADM channel, this value is ADM."
        Version:
          allOf:
          - $ref: '#/components/schemas/__integer'
          - description: The current version of the ADM channel.
      required:
      - Platform
      type: object
    Action:
      enum:
      - OPEN_APP
      - DEEP_LINK
      - URL
      type: string
    ADMMessage:
      description: Specifies the settings for a one-time message that's sent directly
        to an endpoint through the ADM (Amazon Device Messaging) channel.
      properties:
        Action:
          allOf:
          - $ref: '#/components/schemas/Action'
          - description: <p>The action to occur if the recipient taps the push notification.
              Valid values are:</p> <ul><li><p>OPEN_APP - Your app opens or it becomes
              the foreground app if it was sent to the background. This is the default
              action.</p></li> <li><p>DEEP_LINK - Your app opens and displays a designated
              user interface in the app. This action uses the deep-linking features
              of the Android platform.</p></li> <li><p>URL - The default mobile browser
              on the recipient's device opens and loads the web page at a URL that
              you specify.</p></li></ul>
        Body:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The body of the notification message.
        ConsolidationKey:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: An arbitrary string that indicates that multiple messages
              are logically the same and that Amazon Device Messaging (ADM) can drop
              previously enqueued messages in favor of this message.
        Data:
          allOf:
          - $ref: '#/components/schemas/MapOf__string'
          - description: "The JSON data payload to use for the push notification,\
              \ if the notification is a silent push notification. This payload is\
              \ added to the data.pinpoint.jsonBody object of the notification."
        ExpiresAfter:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: "The amount of time, in seconds, that ADM should store the\
              \ message if the recipient's device is offline. Amazon Pinpoint specifies\
              \ this value in the expiresAfter parameter when it sends the notification\
              \ message to ADM."
        IconReference:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The icon image name of the asset saved in your app.
        ImageIconUrl:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The URL of the large icon image to display in the content
              view of the push notification.
        ImageUrl:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The URL of an image to display in the push notification.
        MD5:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: "The base64-encoded, MD5 checksum of the value specified\
              \ by the Data property. ADM uses the MD5 value to verify the integrity\
              \ of the data."
        RawContent:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: "The raw, JSON-formatted string to use as the payload for\
              \ the notification message. If specified, this value overrides all other\
              \ content for the message."
        SilentPush:
          allOf:
          - $ref: '#/components/schemas/__boolean'
          - description: "Specifies whether the notification is a silent push notification,\
              \ which is a push notification that doesn't display on a recipient's\
              \ device. Silent push notifications can be used for cases such as updating\
              \ an app's configuration or supporting phone home functionality."
        SmallImageIconUrl:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The URL of the small icon image to display in the status
              bar and the content view of the push notification.
        Sound:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: "The sound to play when the recipient receives the push notification.\
              \ You can use the default stream or specify the file name of a sound\
              \ resource that's bundled in your app. On an Android platform, the sound\
              \ file must reside in /res/raw/."
        Substitutions:
          allOf:
          - $ref: '#/components/schemas/MapOfListOf__string'
          - description: The default message variables to use in the notification
              message. You can override the default variables with individual address
              variables.
        Title:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The title to display above the notification message on the
              recipient's device.
        Url:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: "The URL to open in the recipient's default mobile browser,\
              \ if a recipient taps the push notification and the value of the Action\
              \ property is URL."
      type: object
    APNSChannelRequest:
      description: Specifies the status and settings of the APNs (Apple Push Notification
        service) channel for an application.
      example:
        BundleId: ""
        PrivateKey: ""
        DefaultAuthenticationMethod: ""
        Enabled: ""
        TokenKey: ""
        TeamId: ""
        Certificate: ""
        TokenKeyId: ""
      properties:
        BundleId:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The bundle identifier that's assigned to your iOS app. This
              identifier is used for APNs tokens.
        Certificate:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: "The APNs client certificate that you received from Apple,\
              \ if you want Amazon Pinpoint to communicate with APNs by using an APNs\
              \ certificate."
        DefaultAuthenticationMethod:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: "The default authentication method that you want Amazon Pinpoint\
              \ to use when authenticating with APNs, key or certificate."
        Enabled:
          allOf:
          - $ref: '#/components/schemas/__boolean'
          - description: Specifies whether to enable the APNs channel for the application.
        PrivateKey:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The private key for the APNs client certificate that you
              want Amazon Pinpoint to use to communicate with APNs.
        TeamId:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The identifier that's assigned to your Apple developer account
              team. This identifier is used for APNs tokens.
        TokenKey:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The authentication key to use for APNs tokens.
        TokenKeyId:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: "The key identifier that's assigned to your APNs signing\
              \ key, if you want Amazon Pinpoint to communicate with APNs by using\
              \ APNs tokens."
      type: object
    APNSChannelResponse:
      description: Provides information about the status and settings of the APNs
        (Apple Push Notification service) channel for an application.
      example:
        IsArchived: ""
        CreationDate: ""
        LastModifiedBy: ""
        LastModifiedDate: ""
        HasTokenKey: ""
        Platform: ""
        Version: ""
        DefaultAuthenticationMethod: ""
        Enabled: ""
        HasCredential: ""
        Id: ""
        ApplicationId: ""
      properties:
        ApplicationId:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The unique identifier for the application that the APNs channel
              applies to.
        CreationDate:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The date and time when the APNs channel was enabled.
        DefaultAuthenticationMethod:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: "The default authentication method that Amazon Pinpoint uses\
              \ to authenticate with APNs for this channel, key or certificate."
        Enabled:
          allOf:
          - $ref: '#/components/schemas/__boolean'
          - description: Specifies whether the APNs channel is enabled for the application.
        HasCredential:
          allOf:
          - $ref: '#/components/schemas/__boolean'
          - description: (Not used) This property is retained only for backward compatibility.
        HasTokenKey:
          allOf:
          - $ref: '#/components/schemas/__boolean'
          - description: "Specifies whether the APNs channel is configured to communicate\
              \ with APNs by using APNs tokens. To provide an authentication key for\
              \ APNs tokens, set the TokenKey property of the channel."
        Id:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: (Deprecated) An identifier for the APNs channel. This property
              is retained only for backward compatibility.
        IsArchived:
          allOf:
          - $ref: '#/components/schemas/__boolean'
          - description: Specifies whether the APNs channel is archived.
        LastModifiedBy:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The user who last modified the APNs channel.
        LastModifiedDate:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The date and time when the APNs channel was last modified.
        Platform:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: " <p>The type of messaging or notification platform for the\
              \ channel. For the APNs channel, this value is APNS.</p>"
        Version:
          allOf:
          - $ref: '#/components/schemas/__integer'
          - description: The current version of the APNs channel.
      required:
      - Platform
      type: object
    APNSMessage:
      description: Specifies the settings for a one-time message that's sent directly
        to an endpoint through the APNs (Apple Push Notification service) channel.
      properties:
        APNSPushType:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: "<p>The type of push notification to send. Valid values are:</p>\
              \ <ul><li><p>alert - For a standard notification that's displayed on\
              \ recipients' devices and prompts a recipient to interact with the notification.</p></li>\
              \ <li><p>background - For a silent notification that delivers content\
              \ in the background and isn't displayed on recipients' devices.</p></li>\
              \ <li><p>complication - For a notification that contains update information\
              \ for an app’s complication timeline.</p></li> <li><p>fileprovider -\
              \ For a notification that signals changes to a File Provider extension.</p></li>\
              \ <li><p>mdm - For a notification that tells managed devices to contact\
              \ the MDM server.</p></li> <li><p>voip - For a notification that provides\
              \ information about an incoming VoIP call.</p></li></ul> <p>Amazon Pinpoint\
              \ specifies this value in the apns-push-type request header when it\
              \ sends the notification message to APNs. If you don't specify a value\
              \ for this property, Amazon Pinpoint sets the value to alert or background\
              \ automatically, based on the value that you specify for the SilentPush\
              \ or RawContent property of the message.</p> <p>For more information\
              \ about the apns-push-type request header, see <a href=\"https://developer.apple.com/documentation/usernotifications/setting_up_a_remote_notification_server/sending_notification_requests_to_apns\"\
              >Sending Notification Requests to APNs</a> on the Apple Developer website.</p>"
        Action:
          allOf:
          - $ref: '#/components/schemas/Action'
          - description: <p>The action to occur if the recipient taps the push notification.
              Valid values are:</p> <ul><li><p>OPEN_APP - Your app opens or it becomes
              the foreground app if it was sent to the background. This is the default
              action.</p></li> <li><p>DEEP_LINK - Your app opens and displays a designated
              user interface in the app. This setting uses the deep-linking features
              of the iOS platform.</p></li> <li><p>URL - The default mobile browser
              on the recipient's device opens and loads the web page at a URL that
              you specify.</p></li></ul>
        Badge:
          allOf:
          - $ref: '#/components/schemas/__integer'
          - description: "The key that indicates whether and how to modify the badge\
              \ of your app's icon when the recipient receives the push notification.\
              \ If this key isn't included in the dictionary, the badge doesn't change.\
              \ To remove the badge, set this value to 0."
        Body:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The body of the notification message.
        Category:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The key that indicates the notification type for the push
              notification. This key is a value that's defined by the identifier property
              of one of your app's registered categories.
        CollapseId:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: "<p>An arbitrary identifier that, if assigned to multiple\
              \ messages, APNs uses to coalesce the messages into a single push notification\
              \ instead of delivering each message individually. This value can't\
              \ exceed 64 bytes.</p> <p>Amazon Pinpoint specifies this value in the\
              \ apns-collapse-id request header when it sends the notification message\
              \ to APNs.</p>"
        Data:
          allOf:
          - $ref: '#/components/schemas/MapOf__string'
          - description: The JSON payload to use for a silent push notification. This
              payload is added to the data.pinpoint.jsonBody object of the notification.
        MediaUrl:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The URL of an image or video to display in the push notification.
        PreferredAuthenticationMethod:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: "The authentication method that you want Amazon Pinpoint\
              \ to use when authenticating with APNs, CERTIFICATE or TOKEN."
        Priority:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: "<p>para>5 - Low priority, the notification might be delayed,\
              \ delivered as part of a group, or throttled.</p>/listitem> <li><p>10\
              \ - High priority, the notification is sent immediately. This is the\
              \ default value. A high priority notification should trigger an alert,\
              \ play a sound, or badge your app's icon on the recipient's device.</p></li>/para>\
              \ <p>Amazon Pinpoint specifies this value in the apns-priority request\
              \ header when it sends the notification message to APNs.</p> <p>The\
              \ equivalent values for Firebase Cloud Messaging (FCM), formerly Google\
              \ Cloud Messaging (GCM), are normal, for 5, and high, for 10. If you\
              \ specify an FCM value for this property, Amazon Pinpoint accepts and\
              \ converts the value to the corresponding APNs value.</p>"
        RawContent:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: "<p>The raw, JSON-formatted string to use as the payload\
              \ for the notification message. If specified, this value overrides all\
              \ other content for the message.</p> <note><p>If you specify the raw\
              \ content of an APNs push notification, the message payload has to include\
              \ the content-available key. The value of the content-available key\
              \ has to be an integer, and can only be 0 or 1. If you're sending a\
              \ standard notification, set the value of content-available to 0. If\
              \ you're sending a silent (background) notification, set the value of\
              \ content-available to 1. Additionally, silent notification payloads\
              \ can't include the alert, badge, or sound keys. For more information,\
              \ see <a href=\"https://developer.apple.com/documentation/usernotifications/setting_up_a_remote_notification_server/generating_a_remote_notification\"\
              >Generating a Remote Notification</a> and <a href=\"https://developer.apple.com/documentation/usernotifications/setting_up_a_remote_notification_server/pushing_background_updates_to_your_app\"\
              >Pushing Background Updates to Your App</a> on the Apple Developer website.</p></note>"
        SilentPush:
          allOf:
          - $ref: '#/components/schemas/__boolean'
          - description: "<p>Specifies whether the notification is a silent push notification.\
              \ A silent (or background) push notification isn't displayed on recipients'\
              \ devices. You can use silent push notifications to make small updates\
              \ to your app, or to display messages in an in-app message center.</p>\
              \ <p>Amazon Pinpoint uses this property to determine the correct value\
              \ for the apns-push-type request header when it sends the notification\
              \ message to APNs. If you specify a value of true for this property,\
              \ Amazon Pinpoint sets the value for the apns-push-type header field\
              \ to background.</p> <note><p>If you specify the raw content of an APNs\
              \ push notification, the message payload has to include the content-available\
              \ key. For silent (background) notifications, set the value of content-available\
              \ to 1. Additionally, the message payload for a silent notification\
              \ can't include the alert, badge, or sound keys. For more information,\
              \ see <a href=\"https://developer.apple.com/documentation/usernotifications/setting_up_a_remote_notification_server/generating_a_remote_notification\"\
              >Generating a Remote Notification</a> and <a href=\"https://developer.apple.com/documentation/usernotifications/setting_up_a_remote_notification_server/pushing_background_updates_to_your_app\"\
              >Pushing Background Updates to Your App</a> on the Apple Developer website.</p>\
              \ <p>Apple has indicated that they will throttle \"excessive\" background\
              \ notifications based on current traffic volumes. To prevent your notifications\
              \ being throttled, Apple recommends that you send no more than 3 silent\
              \ push notifications to each recipient per hour.</p></note>"
        Sound:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: "The key for the sound to play when the recipient receives\
              \ the push notification. The value for this key is the name of a sound\
              \ file in your app's main bundle or the Library/Sounds folder in your\
              \ app's data container. If the sound file can't be found or you specify\
              \ default for the value, the system plays the default alert sound."
        Substitutions:
          allOf:
          - $ref: '#/components/schemas/MapOfListOf__string'
          - description: The default message variables to use in the notification
              message. You can override these default variables with individual address
              variables.
        ThreadId:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: "The key that represents your app-specific identifier for\
              \ grouping notifications. If you provide a Notification Content app\
              \ extension, you can use this value to group your notifications together."
        TimeToLive:
          allOf:
          - $ref: '#/components/schemas/__integer'
          - description: "<p>The amount of time, in seconds, that APNs should store\
              \ and attempt to deliver the push notification, if the service is unable\
              \ to deliver the notification the first time. If this value is 0, APNs\
              \ treats the notification as if it expires immediately and the service\
              \ doesn't store or try to deliver the notification again.</p> <p>Amazon\
              \ Pinpoint specifies this value in the apns-expiration request header\
              \ when it sends the notification message to APNs.</p>"
        Title:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The title to display above the notification message on the
              recipient's device.
        Url:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: "The URL to open in the recipient's default mobile browser,\
              \ if a recipient taps the push notification and the value of the Action\
              \ property is URL."
      type: object
    APNSSandboxChannelRequest:
      description: Specifies the status and settings of the APNs (Apple Push Notification
        service) sandbox channel for an application.
      example:
        BundleId: ""
        PrivateKey: ""
        DefaultAuthenticationMethod: ""
        Enabled: ""
        TokenKey: ""
        TeamId: ""
        Certificate: ""
        TokenKeyId: ""
      properties:
        BundleId:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The bundle identifier that's assigned to your iOS app. This
              identifier is used for APNs tokens.
        Certificate:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: "The APNs client certificate that you received from Apple,\
              \ if you want Amazon Pinpoint to communicate with the APNs sandbox environment\
              \ by using an APNs certificate."
        DefaultAuthenticationMethod:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: "The default authentication method that you want Amazon Pinpoint\
              \ to use when authenticating with the APNs sandbox environment, key\
              \ or certificate."
        Enabled:
          allOf:
          - $ref: '#/components/schemas/__boolean'
          - description: Specifies whether to enable the APNs sandbox channel for
              the application.
        PrivateKey:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The private key for the APNs client certificate that you
              want Amazon Pinpoint to use to communicate with the APNs sandbox environment.
        TeamId:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The identifier that's assigned to your Apple developer account
              team. This identifier is used for APNs tokens.
        TokenKey:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The authentication key to use for APNs tokens.
        TokenKeyId:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: "The key identifier that's assigned to your APNs signing\
              \ key, if you want Amazon Pinpoint to communicate with the APNs sandbox\
              \ environment by using APNs tokens."
      type: object
    APNSSandboxChannelResponse:
      description: Provides information about the status and settings of the APNs
        (Apple Push Notification service) sandbox channel for an application.
      example:
        IsArchived: ""
        CreationDate: ""
        LastModifiedBy: ""
        LastModifiedDate: ""
        HasTokenKey: ""
        Platform: ""
        Version: ""
        DefaultAuthenticationMethod: ""
        Enabled: ""
        HasCredential: ""
        Id: ""
        ApplicationId: ""
      properties:
        ApplicationId:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The unique identifier for the application that the APNs sandbox
              channel applies to.
        CreationDate:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The date and time when the APNs sandbox channel was enabled.
        DefaultAuthenticationMethod:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: "The default authentication method that Amazon Pinpoint uses\
              \ to authenticate with the APNs sandbox environment for this channel,\
              \ key or certificate."
        Enabled:
          allOf:
          - $ref: '#/components/schemas/__boolean'
          - description: Specifies whether the APNs sandbox channel is enabled for
              the application.
        HasCredential:
          allOf:
          - $ref: '#/components/schemas/__boolean'
          - description: (Not used) This property is retained only for backward compatibility.
        HasTokenKey:
          allOf:
          - $ref: '#/components/schemas/__boolean'
          - description: "Specifies whether the APNs sandbox channel is configured\
              \ to communicate with APNs by using APNs tokens. To provide an authentication\
              \ key for APNs tokens, set the TokenKey property of the channel."
        Id:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: (Deprecated) An identifier for the APNs sandbox channel.
              This property is retained only for backward compatibility.
        IsArchived:
          allOf:
          - $ref: '#/components/schemas/__boolean'
          - description: Specifies whether the APNs sandbox channel is archived.
        LastModifiedBy:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The user who last modified the APNs sandbox channel.
        LastModifiedDate:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The date and time when the APNs sandbox channel was last
              modified.
        Platform:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: "The type of messaging or notification platform for the channel.\
              \ For the APNs sandbox channel, this value is APNS_SANDBOX."
        Version:
          allOf:
          - $ref: '#/components/schemas/__integer'
          - description: The current version of the APNs sandbox channel.
      required:
      - Platform
      type: object
    APNSVoipChannelRequest:
      description: Specifies the status and settings of the APNs (Apple Push Notification
        service) VoIP channel for an application.
      example:
        BundleId: ""
        PrivateKey: ""
        DefaultAuthenticationMethod: ""
        Enabled: ""
        TokenKey: ""
        TeamId: ""
        Certificate: ""
        TokenKeyId: ""
      properties:
        BundleId:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The bundle identifier that's assigned to your iOS app. This
              identifier is used for APNs tokens.
        Certificate:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: "The APNs client certificate that you received from Apple,\
              \ if you want Amazon Pinpoint to communicate with APNs by using an APNs\
              \ certificate."
        DefaultAuthenticationMethod:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: "The default authentication method that you want Amazon Pinpoint\
              \ to use when authenticating with APNs, key or certificate."
        Enabled:
          allOf:
          - $ref: '#/components/schemas/__boolean'
          - description: Specifies whether to enable the APNs VoIP channel for the
              application.
        PrivateKey:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The private key for the APNs client certificate that you
              want Amazon Pinpoint to use to communicate with APNs.
        TeamId:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The identifier that's assigned to your Apple developer account
              team. This identifier is used for APNs tokens.
        TokenKey:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The authentication key to use for APNs tokens.
        TokenKeyId:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: "The key identifier that's assigned to your APNs signing\
              \ key, if you want Amazon Pinpoint to communicate with APNs by using\
              \ APNs tokens."
      type: object
    APNSVoipChannelResponse:
      description: Provides information about the status and settings of the APNs
        (Apple Push Notification service) VoIP channel for an application.
      example:
        IsArchived: ""
        CreationDate: ""
        LastModifiedBy: ""
        LastModifiedDate: ""
        HasTokenKey: ""
        Platform: ""
        Version: ""
        DefaultAuthenticationMethod: ""
        Enabled: ""
        HasCredential: ""
        Id: ""
        ApplicationId: ""
      properties:
        ApplicationId:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The unique identifier for the application that the APNs VoIP
              channel applies to.
        CreationDate:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The date and time when the APNs VoIP channel was enabled.
        DefaultAuthenticationMethod:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: "The default authentication method that Amazon Pinpoint uses\
              \ to authenticate with APNs for this channel, key or certificate."
        Enabled:
          allOf:
          - $ref: '#/components/schemas/__boolean'
          - description: Specifies whether the APNs VoIP channel is enabled for the
              application.
        HasCredential:
          allOf:
          - $ref: '#/components/schemas/__boolean'
          - description: (Not used) This property is retained only for backward compatibility.
        HasTokenKey:
          allOf:
          - $ref: '#/components/schemas/__boolean'
          - description: "Specifies whether the APNs VoIP channel is configured to\
              \ communicate with APNs by using APNs tokens. To provide an authentication\
              \ key for APNs tokens, set the TokenKey property of the channel."
        Id:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: (Deprecated) An identifier for the APNs VoIP channel. This
              property is retained only for backward compatibility.
        IsArchived:
          allOf:
          - $ref: '#/components/schemas/__boolean'
          - description: Specifies whether the APNs VoIP channel is archived.
        LastModifiedBy:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The user who last modified the APNs VoIP channel.
        LastModifiedDate:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The date and time when the APNs VoIP channel was last modified.
        Platform:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: "The type of messaging or notification platform for the channel.\
              \ For the APNs VoIP channel, this value is APNS_VOIP."
        Version:
          allOf:
          - $ref: '#/components/schemas/__integer'
          - description: The current version of the APNs VoIP channel.
      required:
      - Platform
      type: object
    APNSVoipSandboxChannelRequest:
      description: Specifies the status and settings of the APNs (Apple Push Notification
        service) VoIP sandbox channel for an application.
      example:
        BundleId: ""
        PrivateKey: ""
        DefaultAuthenticationMethod: ""
        Enabled: ""
        TokenKey: ""
        TeamId: ""
        Certificate: ""
        TokenKeyId: ""
      properties:
        BundleId:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The bundle identifier that's assigned to your iOS app. This
              identifier is used for APNs tokens.
        Certificate:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: "The APNs client certificate that you received from Apple,\
              \ if you want Amazon Pinpoint to communicate with the APNs sandbox environment\
              \ by using an APNs certificate."
        DefaultAuthenticationMethod:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: "The default authentication method that you want Amazon Pinpoint\
              \ to use when authenticating with the APNs sandbox environment for this\
              \ channel, key or certificate."
        Enabled:
          allOf:
          - $ref: '#/components/schemas/__boolean'
          - description: Specifies whether the APNs VoIP sandbox channel is enabled
              for the application.
        PrivateKey:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The private key for the APNs client certificate that you
              want Amazon Pinpoint to use to communicate with the APNs sandbox environment.
        TeamId:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The identifier that's assigned to your Apple developer account
              team. This identifier is used for APNs tokens.
        TokenKey:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The authentication key to use for APNs tokens.
        TokenKeyId:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: "The key identifier that's assigned to your APNs signing\
              \ key, if you want Amazon Pinpoint to communicate with the APNs sandbox\
              \ environment by using APNs tokens."
      type: object
    APNSVoipSandboxChannelResponse:
      description: Provides information about the status and settings of the APNs
        (Apple Push Notification service) VoIP sandbox channel for an application.
      example:
        IsArchived: ""
        CreationDate: ""
        LastModifiedBy: ""
        LastModifiedDate: ""
        HasTokenKey: ""
        Platform: ""
        Version: ""
        DefaultAuthenticationMethod: ""
        Enabled: ""
        HasCredential: ""
        Id: ""
        ApplicationId: ""
      properties:
        ApplicationId:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The unique identifier for the application that the APNs VoIP
              sandbox channel applies to.
        CreationDate:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The date and time when the APNs VoIP sandbox channel was
              enabled.
        DefaultAuthenticationMethod:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: "The default authentication method that Amazon Pinpoint uses\
              \ to authenticate with the APNs sandbox environment for this channel,\
              \ key or certificate."
        Enabled:
          allOf:
          - $ref: '#/components/schemas/__boolean'
          - description: Specifies whether the APNs VoIP sandbox channel is enabled
              for the application.
        HasCredential:
          allOf:
          - $ref: '#/components/schemas/__boolean'
          - description: (Not used) This property is retained only for backward compatibility.
        HasTokenKey:
          allOf:
          - $ref: '#/components/schemas/__boolean'
          - description: "Specifies whether the APNs VoIP sandbox channel is configured\
              \ to communicate with APNs by using APNs tokens. To provide an authentication\
              \ key for APNs tokens, set the TokenKey property of the channel."
        Id:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: (Deprecated) An identifier for the APNs VoIP sandbox channel.
              This property is retained only for backward compatibility.
        IsArchived:
          allOf:
          - $ref: '#/components/schemas/__boolean'
          - description: Specifies whether the APNs VoIP sandbox channel is archived.
        LastModifiedBy:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The user who last modified the APNs VoIP sandbox channel.
        LastModifiedDate:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The date and time when the APNs VoIP sandbox channel was
              last modified.
        Platform:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: "The type of messaging or notification platform for the channel.\
              \ For the APNs VoIP sandbox channel, this value is APNS_VOIP_SANDBOX."
        Version:
          allOf:
          - $ref: '#/components/schemas/__integer'
          - description: The current version of the APNs VoIP sandbox channel.
      required:
      - Platform
      type: object
    ListOfActivityResponse:
      items:
        $ref: '#/components/schemas/ActivityResponse'
      type: array
    ActivitiesResponse:
      description: Provides information about the activities that were performed by
        a campaign.
      example:
        Item: ""
        NextToken: ""
      properties:
        Item:
          allOf:
          - $ref: '#/components/schemas/ListOfActivityResponse'
          - description: "An array of responses, one for each activity that was performed\
              \ by the campaign."
        NextToken:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The string to use in a subsequent request to get the next
              page of results in a paginated response. This value is null if there
              are no additional pages.
      required:
      - Item
      type: object
    CustomMessageActivity:
      description: The settings for a custom message activity. This type of activity
        calls an AWS Lambda function or web hook that sends messages to participants.
      properties:
        DeliveryUri:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: "<p>The destination to send the campaign or treatment to.\
              \ This value can be one of the following:</p> <ul><li><p>The name or\
              \ Amazon Resource Name (ARN) of an AWS Lambda function to invoke to\
              \ handle delivery of the campaign or treatment.</p></li> <li><p>The\
              \ URL for a web application or service that supports HTTPS and can receive\
              \ the message. The URL has to be a full URL, including the HTTPS protocol.</p></li></ul>"
        EndpointTypes:
          allOf:
          - $ref: '#/components/schemas/ListOf__EndpointTypesElement'
          - description: The types of endpoints to send the custom message to. Each
              valid value maps to a type of channel that you can associate with an
              endpoint by using the ChannelType property of an endpoint.
        MessageConfig:
          $ref: '#/components/schemas/CustomMessageActivity_MessageConfig'
        NextActivity:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: "The unique identifier for the next activity to perform,\
              \ after Amazon Pinpoint calls the AWS Lambda function or web hook."
        TemplateName:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: "The name of the custom message template to use for the message.\
              \ If specified, this value must match the name of an existing message\
              \ template."
        TemplateVersion:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: "<p>The unique identifier for the version of the message\
              \ template to use for the message. If specified, this value must match\
              \ the identifier for an existing template version. To retrieve a list\
              \ of versions and version identifiers for a template, use the <link\
              \  linkend=\"templates-template-name-template-type-versions\">Template\
              \ Versions</link> resource.</p> <p>If you don't specify a value for\
              \ this property, Amazon Pinpoint uses the <i>active version</i> of the\
              \ template. The <i>active version</i> is typically the version of a\
              \ template that's been most recently reviewed and approved for use,\
              \ depending on your workflow. It isn't necessarily the latest version\
              \ of a template.</p>"
      type: object
    ConditionalSplitActivity:
      description: "<p>Specifies the settings for a yes/no split activity in a journey.\
        \ This type of activity sends participants down one of two paths in a journey,\
        \ based on conditions that you specify.</p> <note><p>To create yes/no split\
        \ activities that send participants down different paths based on push notification\
        \ events (such as Open or Received events), your mobile app has to specify\
        \ the User ID and Endpoint ID values. For more information, see <a href=\"\
        https://docs.aws.amazon.com/pinpoint/latest/developerguide/integrate.html\"\
        >Integrating Amazon Pinpoint with your application</a> in the <i>Amazon Pinpoint\
        \ Developer Guide</i>.</p></note>"
      properties:
        Condition:
          $ref: '#/components/schemas/ConditionalSplitActivity_Condition'
        EvaluationWaitTime:
          $ref: '#/components/schemas/ConditionalSplitActivity_EvaluationWaitTime'
        FalseActivity:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The unique identifier for the activity to perform if the
              conditions aren't met.
        TrueActivity:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The unique identifier for the activity to perform if the
              conditions are met.
      type: object
    EmailMessageActivity:
      description: Specifies the settings for an email activity in a journey. This
        type of activity sends an email message to participants.
      properties:
        MessageConfig:
          $ref: '#/components/schemas/EmailMessageActivity_MessageConfig'
        NextActivity:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: "The unique identifier for the next activity to perform,\
              \ after the message is sent."
        TemplateName:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: "The name of the email message template to use for the message.\
              \ If specified, this value must match the name of an existing message\
              \ template."
        TemplateVersion:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: "<p>The unique identifier for the version of the email template\
              \ to use for the message. If specified, this value must match the identifier\
              \ for an existing template version. To retrieve a list of versions and\
              \ version identifiers for a template, use the <link  linkend=\"templates-template-name-template-type-versions\"\
              >Template Versions</link> resource.</p> <p>If you don't specify a value\
              \ for this property, Amazon Pinpoint uses the <i>active version</i>\
              \ of the template. The <i>active version</i> is typically the version\
              \ of a template that's been most recently reviewed and approved for\
              \ use, depending on your workflow. It isn't necessarily the latest version\
              \ of a template.</p>"
      type: object
    HoldoutActivity:
      description: Specifies the settings for a holdout activity in a journey. This
        type of activity stops a journey for a specified percentage of participants.
      properties:
        NextActivity:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: "The unique identifier for the next activity to perform,\
              \ after performing the holdout activity."
        Percentage:
          allOf:
          - $ref: '#/components/schemas/__integer'
          - description: "<p>The percentage of participants who shouldn't continue\
              \ the journey.</p> <p>To determine which participants are held out,\
              \ Amazon Pinpoint applies a probability-based algorithm to the percentage\
              \ that you specify. Therefore, the actual percentage of participants\
              \ who are held out may not be equal to the percentage that you specify.</p>"
      required:
      - Percentage
      type: object
    MultiConditionalSplitActivity:
      description: "<p>Specifies the settings for a multivariate split activity in\
        \ a journey. This type of activity sends participants down one of as many\
        \ as five paths (including a default <i>Else</i> path) in a journey, based\
        \ on conditions that you specify.</p> <note><p>To create multivariate split\
        \ activities that send participants down different paths based on push notification\
        \ events (such as Open or Received events), your mobile app has to specify\
        \ the User ID and Endpoint ID values. For more information, see <a href=\"\
        https://docs.aws.amazon.com/pinpoint/latest/developerguide/integrate.html\"\
        >Integrating Amazon Pinpoint with your application</a> in the <i>Amazon Pinpoint\
        \ Developer Guide</i>.</p></note>"
      properties:
        Branches:
          allOf:
          - $ref: '#/components/schemas/ListOfMultiConditionalBranch'
          - description: "The paths for the activity, including the conditions for\
              \ entering each path and the activity to perform for each path."
        DefaultActivity:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The unique identifier for the activity to perform for participants
              who don't meet any of the conditions specified for other paths in the
              activity.
        EvaluationWaitTime:
          $ref: '#/components/schemas/MultiConditionalSplitActivity_EvaluationWaitTime'
      type: object
    PushMessageActivity:
      description: Specifies the settings for a push notification activity in a journey.
        This type of activity sends a push notification to participants.
      properties:
        MessageConfig:
          $ref: '#/components/schemas/PushMessageActivity_MessageConfig'
        NextActivity:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: "The unique identifier for the next activity to perform,\
              \ after the message is sent."
        TemplateName:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: "The name of the push notification template to use for the\
              \ message. If specified, this value must match the name of an existing\
              \ message template."
        TemplateVersion:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: "<p>The unique identifier for the version of the push notification\
              \ template to use for the message. If specified, this value must match\
              \ the identifier for an existing template version. To retrieve a list\
              \ of versions and version identifiers for a template, use the <link\
              \  linkend=\"templates-template-name-template-type-versions\">Template\
              \ Versions</link> resource.</p> <p>If you don't specify a value for\
              \ this property, Amazon Pinpoint uses the <i>active version</i> of the\
              \ template. The <i>active version</i> is typically the version of a\
              \ template that's been most recently reviewed and approved for use,\
              \ depending on your workflow. It isn't necessarily the latest version\
              \ of a template.</p>"
      type: object
    RandomSplitActivity:
      description: "Specifies the settings for a random split activity in a journey.\
        \ This type of activity randomly sends specified percentages of participants\
        \ down one of as many as five paths in a journey, based on conditions that\
        \ you specify."
      properties:
        Branches:
          allOf:
          - $ref: '#/components/schemas/ListOfRandomSplitEntry'
          - description: "The paths for the activity, including the percentage of\
              \ participants to enter each path and the activity to perform for each\
              \ path."
      type: object
    SMSMessageActivity:
      description: Specifies the settings for an SMS activity in a journey. This type
        of activity sends a text message to participants.
      properties:
        MessageConfig:
          $ref: '#/components/schemas/SMSMessageActivity_MessageConfig'
        NextActivity:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: "The unique identifier for the next activity to perform,\
              \ after the message is sent."
        TemplateName:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: "The name of the SMS message template to use for the message.\
              \ If specified, this value must match the name of an existing message\
              \ template."
        TemplateVersion:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: "<p>The unique identifier for the version of the SMS template\
              \ to use for the message. If specified, this value must match the identifier\
              \ for an existing template version. To retrieve a list of versions and\
              \ version identifiers for a template, use the <link  linkend=\"templates-template-name-template-type-versions\"\
              >Template Versions</link> resource.</p> <p>If you don't specify a value\
              \ for this property, Amazon Pinpoint uses the <i>active version</i>\
              \ of the template. The <i>active version</i> is typically the version\
              \ of a template that's been most recently reviewed and approved for\
              \ use, depending on your workflow. It isn't necessarily the latest version\
              \ of a template.</p>"
      type: object
    WaitActivity:
      description: Specifies the settings for a wait activity in a journey. This type
        of activity waits for a certain amount of time or until a specific date and
        time before moving participants to the next activity in a journey.
      properties:
        NextActivity:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: "The unique identifier for the next activity to perform,\
              \ after performing the wait activity."
        WaitTime:
          $ref: '#/components/schemas/WaitActivity_WaitTime'
      type: object
    ContactCenterActivity:
      properties:
        NextActivity:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The unique identifier for the next activity to perform after
              the this activity.
      type: object
    Activity:
      description: Specifies the configuration and other settings for an activity
        in a journey.
      properties:
        CUSTOM:
          $ref: '#/components/schemas/Activity_CUSTOM'
        ConditionalSplit:
          $ref: '#/components/schemas/Activity_ConditionalSplit'
        Description:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The custom description of the activity.
        EMAIL:
          $ref: '#/components/schemas/Activity_EMAIL'
        Holdout:
          $ref: '#/components/schemas/Activity_Holdout'
        MultiCondition:
          $ref: '#/components/schemas/Activity_MultiCondition'
        PUSH:
          $ref: '#/components/schemas/Activity_PUSH'
        RandomSplit:
          $ref: '#/components/schemas/Activity_RandomSplit'
        SMS:
          $ref: '#/components/schemas/Activity_SMS'
        Wait:
          $ref: '#/components/schemas/Activity_Wait'
        ContactCenter:
          $ref: '#/components/schemas/Activity_ContactCenter'
      type: object
    ActivityResponse:
      description: Provides information about an activity that was performed by a
        campaign.
      properties:
        ApplicationId:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The unique identifier for the application that the campaign
              applies to.
        CampaignId:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The unique identifier for the campaign that the activity
              applies to.
        End:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: "The actual time, in ISO 8601 format, when the activity was\
              \ marked CANCELLED or COMPLETED."
        Id:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The unique identifier for the activity.
        Result:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: Specifies whether the activity succeeded. Possible values
              are SUCCESS and FAIL.
        ScheduledStart:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: "The scheduled start time, in ISO 8601 format, for the activity."
        Start:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: "The actual start time, in ISO 8601 format, of the activity."
        State:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: "The current status of the activity. Possible values are:\
              \ PENDING, INITIALIZING, RUNNING, PAUSED, CANCELLED, and COMPLETED."
        SuccessfulEndpointCount:
          allOf:
          - $ref: '#/components/schemas/__integer'
          - description: The total number of endpoints that the campaign successfully
              delivered messages to.
        TimezonesCompletedCount:
          allOf:
          - $ref: '#/components/schemas/__integer'
          - description: The total number of time zones that were completed.
        TimezonesTotalCount:
          allOf:
          - $ref: '#/components/schemas/__integer'
          - description: The total number of unique time zones that are in the segment
              for the campaign.
        TotalEndpointCount:
          allOf:
          - $ref: '#/components/schemas/__integer'
          - description: The total number of endpoints that the campaign attempted
              to deliver messages to.
        TreatmentId:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The unique identifier for the campaign treatment that the
              activity applies to. A treatment is a variation of a campaign that's
              used for A/B testing of a campaign.
        ExecutionMetrics:
          allOf:
          - $ref: '#/components/schemas/MapOf__string'
          - description: "A JSON object that contains metrics relating to the campaign\
              \ execution for this campaign activity. For information about the structure\
              \ and contents of the results, see <a href=\"https://docs.aws.amazon.com//pinpoint/latest/developerguide/analytics-standard-metrics.html\"\
              >Standard Amazon Pinpoint analytics metrics</a> in the <i>Amazon Pinpoint\
              \ Developer Guide</i>."
      required:
      - ApplicationId
      - CampaignId
      - Id
      type: object
    AddressConfiguration:
      description: Specifies address-based configuration settings for a message that's
        sent directly to an endpoint.
      properties:
        BodyOverride:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The message body to use instead of the default message body.
              This value overrides the default message body.
        ChannelType:
          allOf:
          - $ref: '#/components/schemas/ChannelType'
          - description: The channel to use when sending the message.
        Context:
          allOf:
          - $ref: '#/components/schemas/MapOf__string'
          - description: "<p>An object that maps custom attributes to attributes for\
              \ the address and is attached to the message. Attribute names are case\
              \ sensitive.</p> <p>For a push notification, this payload is added to\
              \ the data.pinpoint object. For an email or text message, this payload\
              \ is added to email/SMS delivery receipt event attributes.</p>"
        RawContent:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: "The raw, JSON-formatted string to use as the payload for\
              \ the message. If specified, this value overrides all other values for\
              \ the message."
        Substitutions:
          allOf:
          - $ref: '#/components/schemas/MapOfListOf__string'
          - description: A map of the message variables to merge with the variables
              specified by properties of the DefaultMessage object. The variables
              specified in this map take precedence over all other variables.
        TitleOverride:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The message title to use instead of the default message title.
              This value overrides the default message title.
      type: object
    Alignment:
      enum:
      - LEFT
      - CENTER
      - RIGHT
      type: string
    __timestampIso8601:
      format: date-time
      type: string
    BaseKpiResult:
      description: "Provides the results of a query that retrieved the data for a\
        \ standard metric that applies to an application, campaign, or journey."
      properties:
        Rows:
          allOf:
          - $ref: '#/components/schemas/ListOfResultRow'
          - description: "An array of objects that provides the results of a query\
              \ that retrieved the data for a standard metric that applies to an application,\
              \ campaign, or journey."
      required:
      - Rows
      type: object
    ApplicationDateRangeKpiResponse:
      description: "Provides the results of a query that retrieved the data for a\
        \ standard metric that applies to an application, and provides information\
        \ about that query."
      example:
        KpiResult:
          Rows: ""
        KpiName: ""
        EndTime: ""
        NextToken: ""
        StartTime: ""
        ApplicationId: ""
      properties:
        ApplicationId:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The unique identifier for the application that the metric
              applies to.
        EndTime:
          allOf:
          - $ref: '#/components/schemas/__timestampIso8601'
          - description: "The last date and time of the date range that was used to\
              \ filter the query results, in extended ISO 8601 format. The date range\
              \ is inclusive."
        KpiName:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: "The name of the metric, also referred to as a <i>key performance\
              \ indicator (KPI)</i>, that the data was retrieved for. This value describes\
              \ the associated metric and consists of two or more terms, which are\
              \ comprised of lowercase alphanumeric characters, separated by a hyphen.\
              \ For a list of possible values, see the <a href=\"https://docs.aws.amazon.com/pinpoint/latest/developerguide/analytics-standard-metrics.html\"\
              >Amazon Pinpoint Developer Guide</a>."
        KpiResult:
          $ref: '#/components/schemas/ApplicationDateRangeKpiResponse_KpiResult'
        NextToken:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The string to use in a subsequent request to get the next
              page of results in a paginated response. This value is null for the
              Application Metrics resource because the resource returns all results
              in a single page.
        StartTime:
          allOf:
          - $ref: '#/components/schemas/__timestampIso8601'
          - description: "The first date and time of the date range that was used\
              \ to filter the query results, in extended ISO 8601 format. The date\
              \ range is inclusive."
      required:
      - ApplicationId
      - EndTime
      - KpiName
      - KpiResult
      - StartTime
      type: object
    ApplicationResponse:
      description: Provides information about an application.
      example:
        CreationDate: ""
        Id: ""
        Arn: ""
        Name: ""
        tags: ""
      properties:
        Arn:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The Amazon Resource Name (ARN) of the application.
        Id:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The unique identifier for the application. This identifier
              is displayed as the <b>Project ID</b> on the Amazon Pinpoint console.
        Name:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The display name of the application. This name is displayed
              as the <b>Project name</b> on the Amazon Pinpoint console.
        tags:
          allOf:
          - $ref: '#/components/schemas/MapOf__string'
          - description: A string-to-string map of key-value pairs that identifies
              the tags that are associated with the application. Each tag consists
              of a required tag key and an associated tag value.
        CreationDate:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The date and time when the Application was created.
      required:
      - Arn
      - Id
      - Name
      type: object
    JourneyTimeframeCap:
      description: The number of messages that can be sent to an endpoint during the
        specified timeframe for all journeys.
      properties:
        Cap:
          allOf:
          - $ref: '#/components/schemas/__integer'
          - description: "The maximum number of messages that all journeys can send\
              \ to an endpoint during the specified timeframe. The maximum value is\
              \ 100. If set to 0, this limit will not apply."
        Days:
          allOf:
          - $ref: '#/components/schemas/__integer'
          - description: "The length of the timeframe in days. The maximum value is\
              \ 30. If set to 0, this limit will not apply."
      type: object
    ApplicationSettingsResource:
      description: "Provides information about an application, including the default\
        \ settings for an application."
      example:
        LastModifiedDate: ""
        Limits:
          Daily: ""
          MaximumDuration: ""
          Total: ""
          MessagesPerSecond: ""
          Session: ""
        QuietTime:
          Start: ""
          End: ""
        JourneyLimits:
          DailyCap: ""
          TimeframeCap:
            Cap: ""
            Days: ""
          TotalCap: ""
        ApplicationId: ""
        CampaignHook:
          Mode: ""
          WebUrl: ""
          LambdaFunctionName: ""
      properties:
        ApplicationId:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The unique identifier for the application. This identifier
              is displayed as the <b>Project ID</b> on the Amazon Pinpoint console.
        CampaignHook:
          $ref: '#/components/schemas/ApplicationSettingsResource_CampaignHook'
        LastModifiedDate:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: "The date and time, in ISO 8601 format, when the application's\
              \ settings were last modified."
        Limits:
          $ref: '#/components/schemas/ApplicationSettingsResource_Limits'
        QuietTime:
          $ref: '#/components/schemas/ApplicationSettingsResource_QuietTime'
        JourneyLimits:
          $ref: '#/components/schemas/UpdateApplicationSettings_request_WriteApplicationSettingsRequest_JourneyLimits'
      required:
      - ApplicationId
      type: object
    ListOfApplicationResponse:
      items:
        $ref: '#/components/schemas/ApplicationResponse'
      type: array
    ApplicationsResponse:
      description: Provides information about all of your applications.
      example:
        Item: ""
        NextToken: ""
      properties:
        Item:
          allOf:
          - $ref: '#/components/schemas/ListOfApplicationResponse'
          - description: "An array of responses, one for each application that was\
              \ returned."
        NextToken:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The string to use in a subsequent request to get the next
              page of results in a paginated response. This value is null if there
              are no additional pages.
      type: object
    AttributeType:
      enum:
      - INCLUSIVE
      - EXCLUSIVE
      - CONTAINS
      - BEFORE
      - AFTER
      - "ON"
      - BETWEEN
      type: string
    AttributeDimension:
      description: Specifies attribute-based criteria for including or excluding endpoints
        from a segment.
      properties:
        AttributeType:
          allOf:
          - $ref: '#/components/schemas/AttributeType'
          - description: "The type of segment dimension to use. Valid values are:\
              \ <ul><li>INCLUSIVE - endpoints that have attributes matching the values\
              \ are included in the segment.</li><li>EXCLUSIVE - endpoints that have\
              \ attributes matching the values are excluded in the segment.</li><li>CONTAINS\
              \ - endpoints that have attributes' substrings match the values are\
              \ included in the segment.</li><li>BEFORE - endpoints with attributes\
              \ read as ISO_INSTANT datetimes before the value are included in the\
              \ segment.</li><li>AFTER - endpoints with attributes read as ISO_INSTANT\
              \ datetimes after the value are included in the segment.</li><li>ON\
              \ - endpoints with attributes read as ISO_INSTANT dates on the value\
              \ are included in the segment. Time is ignored in this comparison.</li><li>BETWEEN\
              \ - endpoints with attributes read as ISO_INSTANT datetimes between\
              \ the values are included in the segment.</li>"
        Values:
          allOf:
          - $ref: '#/components/schemas/ListOf__string'
          - description: "The criteria values to use for the segment dimension. Depending\
              \ on the value of the AttributeType property, endpoints are included\
              \ or excluded from the segment if their attribute values match the criteria\
              \ values."
      required:
      - Values
      type: object
    AttributesResource:
      description: Provides information about the type and the names of attributes
        that were removed from all the endpoints that are associated with an application.
      example:
        AttributeType: ""
        Attributes: ""
        ApplicationId: ""
      properties:
        ApplicationId:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The unique identifier for the application.
        AttributeType:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: <p>The type of attribute or attributes that were removed
              from the endpoints. Valid values are:</p> <ul><li><p>endpoint-custom-attributes
              - Custom attributes that describe endpoints.</p></li> <li><p>endpoint-metric-attributes
              - Custom metrics that your app reports to Amazon Pinpoint for endpoints.</p></li>
              <li><p>endpoint-user-attributes - Custom attributes that describe users.</p></li></ul>
        Attributes:
          allOf:
          - $ref: '#/components/schemas/ListOf__string'
          - description: An array that specifies the names of the attributes that
              were removed from the endpoints.
      required:
      - ApplicationId
      - AttributeType
      type: object
    BaiduChannelRequest:
      description: Specifies the status and settings of the Baidu (Baidu Cloud Push)
        channel for an application.
      example:
        SecretKey: ""
        ApiKey: ""
        Enabled: ""
      properties:
        ApiKey:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The API key that you received from the Baidu Cloud Push service
              to communicate with the service.
        Enabled:
          allOf:
          - $ref: '#/components/schemas/__boolean'
          - description: Specifies whether to enable the Baidu channel for the application.
        SecretKey:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The secret key that you received from the Baidu Cloud Push
              service to communicate with the service.
      required:
      - ApiKey
      - SecretKey
      type: object
    BaiduChannelResponse:
      description: Provides information about the status and settings of the Baidu
        (Baidu Cloud Push) channel for an application.
      example:
        IsArchived: ""
        CreationDate: ""
        LastModifiedBy: ""
        LastModifiedDate: ""
        Credential: ""
        Platform: ""
        Version: ""
        Enabled: ""
        HasCredential: ""
        Id: ""
        ApplicationId: ""
      properties:
        ApplicationId:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The unique identifier for the application that the Baidu
              channel applies to.
        CreationDate:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The date and time when the Baidu channel was enabled.
        Credential:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The API key that you received from the Baidu Cloud Push service
              to communicate with the service.
        Enabled:
          allOf:
          - $ref: '#/components/schemas/__boolean'
          - description: Specifies whether the Baidu channel is enabled for the application.
        HasCredential:
          allOf:
          - $ref: '#/components/schemas/__boolean'
          - description: (Not used) This property is retained only for backward compatibility.
        Id:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: (Deprecated) An identifier for the Baidu channel. This property
              is retained only for backward compatibility.
        IsArchived:
          allOf:
          - $ref: '#/components/schemas/__boolean'
          - description: Specifies whether the Baidu channel is archived.
        LastModifiedBy:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The user who last modified the Baidu channel.
        LastModifiedDate:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The date and time when the Baidu channel was last modified.
        Platform:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: "The type of messaging or notification platform for the channel.\
              \ For the Baidu channel, this value is BAIDU."
        Version:
          allOf:
          - $ref: '#/components/schemas/__integer'
          - description: The current version of the Baidu channel.
      required:
      - Credential
      - Platform
      type: object
    BaiduMessage:
      description: Specifies the settings for a one-time message that's sent directly
        to an endpoint through the Baidu (Baidu Cloud Push) channel.
      properties:
        Action:
          allOf:
          - $ref: '#/components/schemas/Action'
          - description: <p>The action to occur if the recipient taps the push notification.
              Valid values are:</p> <ul><li><p>OPEN_APP - Your app opens or it becomes
              the foreground app if it was sent to the background. This is the default
              action.</p></li> <li><p>DEEP_LINK - Your app opens and displays a designated
              user interface in the app. This action uses the deep-linking features
              of the Android platform.</p></li> <li><p>URL - The default mobile browser
              on the recipient's device opens and loads the web page at a URL that
              you specify.</p></li></ul>
        Body:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The body of the notification message.
        Data:
          allOf:
          - $ref: '#/components/schemas/MapOf__string'
          - description: "The JSON data payload to use for the push notification,\
              \ if the notification is a silent push notification. This payload is\
              \ added to the data.pinpoint.jsonBody object of the notification."
        IconReference:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The icon image name of the asset saved in your app.
        ImageIconUrl:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The URL of the large icon image to display in the content
              view of the push notification.
        ImageUrl:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The URL of an image to display in the push notification.
        RawContent:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: "The raw, JSON-formatted string to use as the payload for\
              \ the notification message. If specified, this value overrides all other\
              \ content for the message."
        SilentPush:
          allOf:
          - $ref: '#/components/schemas/__boolean'
          - description: "Specifies whether the notification is a silent push notification,\
              \ which is a push notification that doesn't display on a recipient's\
              \ device. Silent push notifications can be used for cases such as updating\
              \ an app's configuration or supporting phone home functionality."
        SmallImageIconUrl:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The URL of the small icon image to display in the status
              bar and the content view of the push notification.
        Sound:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: "The sound to play when the recipient receives the push notification.\
              \ You can use the default stream or specify the file name of a sound\
              \ resource that's bundled in your app. On an Android platform, the sound\
              \ file must reside in /res/raw/."
        Substitutions:
          allOf:
          - $ref: '#/components/schemas/MapOfListOf__string'
          - description: The default message variables to use in the notification
              message. You can override the default variables with individual address
              variables.
        TimeToLive:
          allOf:
          - $ref: '#/components/schemas/__integer'
          - description: "The amount of time, in seconds, that the Baidu Cloud Push\
              \ service should store the message if the recipient's device is offline.\
              \ The default value and maximum supported time is 604,800 seconds (7\
              \ days)."
        Title:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The title to display above the notification message on the
              recipient's device.
        Url:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: "The URL to open in the recipient's default mobile browser,\
              \ if a recipient taps the push notification and the value of the Action\
              \ property is URL."
      type: object
    ListOfResultRow:
      items:
        $ref: '#/components/schemas/ResultRow'
      type: array
    ButtonAction:
      enum:
      - LINK
      - DEEP_LINK
      - CLOSE
      type: string
    CampaignCustomMessage:
      description: Specifies the contents of a message that's sent through a custom
        channel to recipients of a campaign.
      properties:
        Data:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: "The raw, JSON-formatted string to use as the payload for\
              \ the message. The maximum size is 5 KB."
      type: object
    CampaignDateRangeKpiResponse:
      description: "Provides the results of a query that retrieved the data for a\
        \ standard metric that applies to a campaign, and provides information about\
        \ that query."
      example:
        KpiResult:
          Rows: ""
        KpiName: ""
        EndTime: ""
        NextToken: ""
        CampaignId: ""
        StartTime: ""
        ApplicationId: ""
      properties:
        ApplicationId:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The unique identifier for the application that the metric
              applies to.
        CampaignId:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The unique identifier for the campaign that the metric applies
              to.
        EndTime:
          allOf:
          - $ref: '#/components/schemas/__timestampIso8601'
          - description: "The last date and time of the date range that was used to\
              \ filter the query results, in extended ISO 8601 format. The date range\
              \ is inclusive."
        KpiName:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: "The name of the metric, also referred to as a <i>key performance\
              \ indicator (KPI)</i>, that the data was retrieved for. This value describes\
              \ the associated metric and consists of two or more terms, which are\
              \ comprised of lowercase alphanumeric characters, separated by a hyphen.\
              \ For a list of possible values, see the <a href=\"https://docs.aws.amazon.com/pinpoint/latest/developerguide/analytics-standard-metrics.html\"\
              >Amazon Pinpoint Developer Guide</a>."
        KpiResult:
          $ref: '#/components/schemas/ApplicationDateRangeKpiResponse_KpiResult'
        NextToken:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The string to use in a subsequent request to get the next
              page of results in a paginated response. This value is null for the
              Campaign Metrics resource because the resource returns all results in
              a single page.
        StartTime:
          allOf:
          - $ref: '#/components/schemas/__timestampIso8601'
          - description: "The first date and time of the date range that was used\
              \ to filter the query results, in extended ISO 8601 format. The date\
              \ range is inclusive."
      required:
      - ApplicationId
      - CampaignId
      - EndTime
      - KpiName
      - KpiResult
      - StartTime
      type: object
    CampaignEmailMessage:
      description: Specifies the content and "From" address for an email message that's
        sent to recipients of a campaign.
      properties:
        Body:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The body of the email for recipients whose email clients
              don't render HTML content.
        FromAddress:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The verified email address to send the email from. The default
              address is the FromAddress specified for the email channel for the application.
        HtmlBody:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: "The body of the email, in HTML format, for recipients whose\
              \ email clients render HTML content."
        Title:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: "The subject line, or title, of the email."
      type: object
    EventDimensions:
      description: Specifies the dimensions for an event filter that determines when
        a campaign is sent or a journey activity is performed.
      properties:
        Attributes:
          allOf:
          - $ref: '#/components/schemas/MapOfAttributeDimension'
          - description: One or more custom attributes that your application reports
              to Amazon Pinpoint. You can use these attributes as selection criteria
              when you create an event filter.
        EventType:
          $ref: '#/components/schemas/EventDimensions_EventType'
        Metrics:
          allOf:
          - $ref: '#/components/schemas/MapOfMetricDimension'
          - description: One or more custom metrics that your application reports
              to Amazon Pinpoint. You can use these metrics as selection criteria
              when you create an event filter.
      type: object
    FilterType:
      enum:
      - SYSTEM
      - ENDPOINT
      type: string
    CampaignEventFilter:
      description: Specifies the settings for events that cause a campaign to be sent.
      properties:
        Dimensions:
          $ref: '#/components/schemas/CampaignEventFilter_Dimensions'
        FilterType:
          allOf:
          - $ref: '#/components/schemas/FilterType'
          - description: "The type of event that causes the campaign to be sent. Valid\
              \ values are: SYSTEM, sends the campaign when a system event occurs;\
              \ and, ENDPOINT, sends the campaign when an endpoint event (<link  linkend=\"\
              apps-application-id-events\">Events</link> resource) occurs."
      required:
      - Dimensions
      - FilterType
      type: object
    Mode:
      enum:
      - DELIVERY
      - FILTER
      type: string
    CampaignInAppMessage:
      description: In-app message configuration.
      properties:
        Body:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: "The message body of the notification, the email body or\
              \ the text message."
        Content:
          allOf:
          - $ref: '#/components/schemas/ListOfInAppMessageContent'
          - description: In-app message content.
        CustomConfig:
          allOf:
          - $ref: '#/components/schemas/MapOf__string'
          - description: Custom config to be sent to client.
        Layout:
          allOf:
          - $ref: '#/components/schemas/Layout'
          - description: In-app message layout.
      type: object
    ListOfTreatmentResource:
      items:
        $ref: '#/components/schemas/TreatmentResource'
      type: array
    CampaignState:
      description: Provides information about the status of a campaign.
      properties:
        CampaignStatus:
          allOf:
          - $ref: '#/components/schemas/CampaignStatus'
          - description: "<p>The current status of the campaign, or the current status\
              \ of a treatment that belongs to an A/B test campaign.</p> <p>If a campaign\
              \ uses A/B testing, the campaign has a status of COMPLETED only if all\
              \ campaign treatments have a status of COMPLETED. If you delete the\
              \ segment that's associated with a campaign, the campaign fails and\
              \ has a status of DELETED.</p>"
      type: object
    CampaignResponse:
      description: "Provides information about the status, configuration, and other\
        \ settings for a campaign."
      example:
        CreationDate: ""
        LastModifiedDate: ""
        Description: ""
        AdditionalTreatments: ""
        Name: ""
        SegmentVersion: ""
        DefaultState:
          CampaignStatus: ""
        TreatmentDescription: ""
        MessageConfiguration:
          APNSMessage:
            JsonBody: ""
            Action: ""
            MediaUrl: ""
            TimeToLive: ""
            ImageSmallIconUrl: ""
            ImageUrl: ""
            Title: ""
            ImageIconUrl: ""
            SilentPush: ""
            Body: ""
            RawContent: ""
            Url: ""
          BaiduMessage:
            JsonBody: ""
            Action: ""
            MediaUrl: ""
            TimeToLive: ""
            ImageSmallIconUrl: ""
            ImageUrl: ""
            Title: ""
            ImageIconUrl: ""
            SilentPush: ""
            Body: ""
            RawContent: ""
            Url: ""
          DefaultMessage:
            JsonBody: ""
            Action: ""
            MediaUrl: ""
            TimeToLive: ""
            ImageSmallIconUrl: ""
            ImageUrl: ""
            Title: ""
            ImageIconUrl: ""
            SilentPush: ""
            Body: ""
            RawContent: ""
            Url: ""
          InAppMessage:
            CustomConfig: ""
            Layout: ""
            Content: ""
            Body: ""
          EmailMessage:
            FromAddress: ""
            HtmlBody: ""
            Title: ""
            Body: ""
          GCMMessage:
            JsonBody: ""
            Action: ""
            MediaUrl: ""
            TimeToLive: ""
            ImageSmallIconUrl: ""
            ImageUrl: ""
            Title: ""
            ImageIconUrl: ""
            SilentPush: ""
            Body: ""
            RawContent: ""
            Url: ""
          SMSMessage:
            EntityId: ""
            OriginationNumber: ""
            SenderId: ""
            Body: ""
            MessageType: ""
            TemplateId: ""
          CustomMessage:
            Data: ""
          ADMMessage:
            JsonBody: ""
            Action: ""
            MediaUrl: ""
            TimeToLive: ""
            ImageSmallIconUrl: ""
            ImageUrl: ""
            Title: ""
            ImageIconUrl: ""
            SilentPush: ""
            Body: ""
            RawContent: ""
            Url: ""
        Limits:
          Daily: ""
          MaximumDuration: ""
          Total: ""
          MessagesPerSecond: ""
          Session: ""
        Version: ""
        HoldoutPercent: ""
        CustomDeliveryConfiguration:
          DeliveryUri: ""
          EndpointTypes: ""
        TreatmentName: ""
        Hook:
          Mode: ""
          WebUrl: ""
          LambdaFunctionName: ""
        SegmentId: ""
        Priority: ""
        TemplateConfiguration:
          SMSTemplate:
            Version: ""
            Name: ""
          EmailTemplate:
            Version: ""
            Name: ""
          InAppTemplate:
            Version: ""
            Name: ""
          PushTemplate:
            Version: ""
            Name: ""
          VoiceTemplate:
            Version: ""
            Name: ""
        IsPaused: ""
        tags: ""
        State:
          CampaignStatus: ""
        Schedule:
          Timezone: ""
          QuietTime:
            Start: ""
            End: ""
          EndTime: ""
          StartTime: ""
          Frequency: ""
          EventFilter:
            FilterType: ""
            Dimensions:
              Metrics: ""
              EventType:
                DimensionType: ""
                Values: ""
              Attributes: ""
          IsLocalTime: ""
        Id: ""
        ApplicationId: ""
        Arn: ""
      properties:
        AdditionalTreatments:
          allOf:
          - $ref: '#/components/schemas/ListOfTreatmentResource'
          - description: "An array of responses, one for each treatment that you defined\
              \ for the campaign, in addition to the default treatment."
        ApplicationId:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The unique identifier for the application that the campaign
              applies to.
        Arn:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The Amazon Resource Name (ARN) of the campaign.
        CreationDate:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: "The date, in ISO 8601 format, when the campaign was created."
        CustomDeliveryConfiguration:
          $ref: '#/components/schemas/CampaignResponse_CustomDeliveryConfiguration'
        DefaultState:
          $ref: '#/components/schemas/CampaignResponse_DefaultState'
        Description:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The custom description of the campaign.
        HoldoutPercent:
          allOf:
          - $ref: '#/components/schemas/__integer'
          - description: The allocated percentage of users (segment members) who shouldn't
              receive messages from the campaign.
        Hook:
          $ref: '#/components/schemas/CampaignResponse_Hook'
        Id:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The unique identifier for the campaign.
        IsPaused:
          allOf:
          - $ref: '#/components/schemas/__boolean'
          - description: Specifies whether the campaign is paused. A paused campaign
              doesn't run unless you resume it by changing this value to false.
        LastModifiedDate:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: "The date, in ISO 8601 format, when the campaign was last\
              \ modified."
        Limits:
          $ref: '#/components/schemas/CreateCampaign_request_WriteCampaignRequest_Limits'
        MessageConfiguration:
          $ref: '#/components/schemas/CreateCampaign_request_WriteCampaignRequest_MessageConfiguration'
        Name:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The name of the campaign.
        Schedule:
          $ref: '#/components/schemas/CreateCampaign_request_WriteCampaignRequest_Schedule'
        SegmentId:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The unique identifier for the segment that's associated with
              the campaign.
        SegmentVersion:
          allOf:
          - $ref: '#/components/schemas/__integer'
          - description: The version number of the segment that's associated with
              the campaign.
        State:
          $ref: '#/components/schemas/CampaignResponse_State'
        tags:
          allOf:
          - $ref: '#/components/schemas/MapOf__string'
          - description: A string-to-string map of key-value pairs that identifies
              the tags that are associated with the campaign. Each tag consists of
              a required tag key and an associated tag value.
        TemplateConfiguration:
          $ref: '#/components/schemas/CampaignResponse_TemplateConfiguration'
        TreatmentDescription:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The custom description of the default treatment for the campaign.
        TreatmentName:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: "The custom name of the default treatment for the campaign,\
              \ if the campaign has multiple treatments. A <i>treatment</i> is a variation\
              \ of a campaign that's used for A/B testing."
        Version:
          allOf:
          - $ref: '#/components/schemas/__integer'
          - description: The version number of the campaign.
        Priority:
          allOf:
          - $ref: '#/components/schemas/__integer'
          - description: "Defines the priority of the campaign, used to decide the\
              \ order of messages displayed to user if there are multiple messages\
              \ scheduled to be displayed at the same moment."
      required:
      - ApplicationId
      - Arn
      - CreationDate
      - Id
      - LastModifiedDate
      - SegmentId
      - SegmentVersion
      type: object
    MessageType:
      enum:
      - TRANSACTIONAL
      - PROMOTIONAL
      type: string
    CampaignSmsMessage:
      description: Specifies the content and settings for an SMS message that's sent
        to recipients of a campaign.
      properties:
        Body:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The body of the SMS message.
        MessageType:
          allOf:
          - $ref: '#/components/schemas/MessageType'
          - description: "The SMS message type. Valid values are TRANSACTIONAL (for\
              \ messages that are critical or time-sensitive, such as a one-time passwords)\
              \ and PROMOTIONAL (for messsages that aren't critical or time-sensitive,\
              \ such as marketing messages)."
        OriginationNumber:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: "The long code to send the SMS message from. This value should\
              \ be one of the dedicated long codes that's assigned to your AWS account.\
              \ Although it isn't required, we recommend that you specify the long\
              \ code using an E.164 format to ensure prompt and accurate delivery\
              \ of the message. For example, +12065550100."
        SenderId:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The sender ID to display on recipients' devices when they
              receive the SMS message.
        EntityId:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The entity ID or Principal Entity (PE) id received from the
              regulatory body for sending SMS in your country.
        TemplateId:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The template ID received from the regulatory body for sending
              SMS in your country.
      type: object
    CampaignStatus:
      enum:
      - SCHEDULED
      - EXECUTING
      - PENDING_NEXT_RUN
      - COMPLETED
      - PAUSED
      - DELETED
      - INVALID
      type: string
    ListOfCampaignResponse:
      items:
        $ref: '#/components/schemas/CampaignResponse'
      type: array
    CampaignsResponse:
      description: Provides information about the configuration and other settings
        for all the campaigns that are associated with an application.
      example:
        Item: ""
        NextToken: ""
      properties:
        Item:
          allOf:
          - $ref: '#/components/schemas/ListOfCampaignResponse'
          - description: "An array of responses, one for each campaign that's associated\
              \ with the application."
        NextToken:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The string to use in a subsequent request to get the next
              page of results in a paginated response. This value is null if there
              are no additional pages.
      required:
      - Item
      type: object
    ChannelResponse:
      description: Provides information about the general settings and status of a
        channel for an application.
      properties:
        ApplicationId:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The unique identifier for the application.
        CreationDate:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: "The date and time, in ISO 8601 format, when the channel\
              \ was enabled."
        Enabled:
          allOf:
          - $ref: '#/components/schemas/__boolean'
          - description: Specifies whether the channel is enabled for the application.
        HasCredential:
          allOf:
          - $ref: '#/components/schemas/__boolean'
          - description: (Not used) This property is retained only for backward compatibility.
        Id:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: (Deprecated) An identifier for the channel. This property
              is retained only for backward compatibility.
        IsArchived:
          allOf:
          - $ref: '#/components/schemas/__boolean'
          - description: Specifies whether the channel is archived.
        LastModifiedBy:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The user who last modified the channel.
        LastModifiedDate:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: "The date and time, in ISO 8601 format, when the channel\
              \ was last modified."
        Version:
          allOf:
          - $ref: '#/components/schemas/__integer'
          - description: The current version of the channel.
      type: object
    MapOfChannelResponse:
      additionalProperties:
        $ref: '#/components/schemas/ChannelResponse'
      type: object
    ChannelsResponse:
      description: "Provides information about the general settings and status of\
        \ all channels for an application, including channels that aren't enabled\
        \ for the application."
      example:
        Channels: ""
      properties:
        Channels:
          allOf:
          - $ref: '#/components/schemas/MapOfChannelResponse'
          - description: "A map that contains a multipart response for each channel.\
              \ For each item in this object, the ChannelType is the key and the Channel\
              \ is the value."
      required:
      - Channels
      type: object
    ListOfSimpleCondition:
      items:
        $ref: '#/components/schemas/SimpleCondition'
      type: array
    Operator:
      enum:
      - ALL
      - ANY
      type: string
    Condition:
      description: "Specifies the conditions to evaluate for an activity in a journey,\
        \ and how to evaluate those conditions."
      properties:
        Conditions:
          allOf:
          - $ref: '#/components/schemas/ListOfSimpleCondition'
          - description: The conditions to evaluate for the activity.
        Operator:
          allOf:
          - $ref: '#/components/schemas/Operator'
          - description: "Specifies how to handle multiple conditions for the activity.\
              \ For example, if you specify two conditions for an activity, whether\
              \ both or only one of the conditions must be met for the activity to\
              \ be performed."
      type: object
    WaitTime:
      description: Specifies a duration or a date and time that indicates when Amazon
        Pinpoint determines whether an activity's conditions have been met or an activity
        moves participants to the next activity in a journey.
      properties:
        WaitFor:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: "The amount of time to wait, as a duration in ISO 8601 format,\
              \ before determining whether the activity's conditions have been met\
              \ or moving participants to the next activity in the journey."
        WaitUntil:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: "The date and time, in ISO 8601 format, when Amazon Pinpoint\
              \ determines whether the activity's conditions have been met or the\
              \ activity moves participants to the next activity in the journey."
      type: object
    CreateApplicationRequest:
      description: Specifies the display name of an application and the tags to associate
        with the application.
      example:
        Name: ""
        tags: ""
      properties:
        Name:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The display name of the application. This name is displayed
              as the <b>Project name</b> on the Amazon Pinpoint console.
        tags:
          allOf:
          - $ref: '#/components/schemas/MapOf__string'
          - description: A string-to-string map of key-value pairs that defines the
              tags to associate with the application. Each tag consists of a required
              tag key and an associated tag value.
      required:
      - Name
      type: object
    CreateAppRequest:
      example:
        CreateApplicationRequest:
          Name: ""
          tags: ""
      properties:
        CreateApplicationRequest:
          $ref: '#/components/schemas/CreateApplicationRequest'
      required:
      - CreateApplicationRequest
      title: CreateAppRequest
      type: object
    WriteCampaignRequest:
      description: Specifies the configuration and other settings for a campaign.
      example:
        Hook:
          Mode: ""
          WebUrl: ""
          LambdaFunctionName: ""
        Description: ""
        SegmentId: ""
        Priority: ""
        TemplateConfiguration:
          SMSTemplate:
            Version: ""
            Name: ""
          EmailTemplate:
            Version: ""
            Name: ""
          InAppTemplate:
            Version: ""
            Name: ""
          PushTemplate:
            Version: ""
            Name: ""
          VoiceTemplate:
            Version: ""
            Name: ""
        IsPaused: ""
        AdditionalTreatments: ""
        Name: ""
        SegmentVersion: ""
        tags: ""
        TreatmentDescription: ""
        MessageConfiguration:
          APNSMessage:
            JsonBody: ""
            Action: ""
            MediaUrl: ""
            TimeToLive: ""
            ImageSmallIconUrl: ""
            ImageUrl: ""
            Title: ""
            ImageIconUrl: ""
            SilentPush: ""
            Body: ""
            RawContent: ""
            Url: ""
          BaiduMessage:
            JsonBody: ""
            Action: ""
            MediaUrl: ""
            TimeToLive: ""
            ImageSmallIconUrl: ""
            ImageUrl: ""
            Title: ""
            ImageIconUrl: ""
            SilentPush: ""
            Body: ""
            RawContent: ""
            Url: ""
          DefaultMessage:
            JsonBody: ""
            Action: ""
            MediaUrl: ""
            TimeToLive: ""
            ImageSmallIconUrl: ""
            ImageUrl: ""
            Title: ""
            ImageIconUrl: ""
            SilentPush: ""
            Body: ""
            RawContent: ""
            Url: ""
          InAppMessage:
            CustomConfig: ""
            Layout: ""
            Content: ""
            Body: ""
          EmailMessage:
            FromAddress: ""
            HtmlBody: ""
            Title: ""
            Body: ""
          GCMMessage:
            JsonBody: ""
            Action: ""
            MediaUrl: ""
            TimeToLive: ""
            ImageSmallIconUrl: ""
            ImageUrl: ""
            Title: ""
            ImageIconUrl: ""
            SilentPush: ""
            Body: ""
            RawContent: ""
            Url: ""
          SMSMessage:
            EntityId: ""
            OriginationNumber: ""
            SenderId: ""
            Body: ""
            MessageType: ""
            TemplateId: ""
          CustomMessage:
            Data: ""
          ADMMessage:
            JsonBody: ""
            Action: ""
            MediaUrl: ""
            TimeToLive: ""
            ImageSmallIconUrl: ""
            ImageUrl: ""
            Title: ""
            ImageIconUrl: ""
            SilentPush: ""
            Body: ""
            RawContent: ""
            Url: ""
        Limits:
          Daily: ""
          MaximumDuration: ""
          Total: ""
          MessagesPerSecond: ""
          Session: ""
        HoldoutPercent: ""
        Schedule:
          Timezone: ""
          QuietTime:
            Start: ""
            End: ""
          EndTime: ""
          StartTime: ""
          Frequency: ""
          EventFilter:
            FilterType: ""
            Dimensions:
              Metrics: ""
              EventType:
                DimensionType: ""
                Values: ""
              Attributes: ""
          IsLocalTime: ""
        CustomDeliveryConfiguration:
          DeliveryUri: ""
          EndpointTypes: ""
        TreatmentName: ""
      properties:
        AdditionalTreatments:
          allOf:
          - $ref: '#/components/schemas/ListOfWriteTreatmentResource'
          - description: "An array of requests that defines additional treatments\
              \ for the campaign, in addition to the default treatment for the campaign."
        CustomDeliveryConfiguration:
          $ref: '#/components/schemas/CreateCampaign_request_WriteCampaignRequest_CustomDeliveryConfiguration'
        Description:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: A custom description of the campaign.
        HoldoutPercent:
          allOf:
          - $ref: '#/components/schemas/__integer'
          - description: The allocated percentage of users (segment members) who shouldn't
              receive messages from the campaign.
        Hook:
          $ref: '#/components/schemas/CreateCampaign_request_WriteCampaignRequest_Hook'
        IsPaused:
          allOf:
          - $ref: '#/components/schemas/__boolean'
          - description: Specifies whether to pause the campaign. A paused campaign
              doesn't run unless you resume it by changing this value to false.
        Limits:
          $ref: '#/components/schemas/CreateCampaign_request_WriteCampaignRequest_Limits'
        MessageConfiguration:
          $ref: '#/components/schemas/CreateCampaign_request_WriteCampaignRequest_MessageConfiguration'
        Name:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: A custom name for the campaign.
        Schedule:
          $ref: '#/components/schemas/CreateCampaign_request_WriteCampaignRequest_Schedule'
        SegmentId:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The unique identifier for the segment to associate with the
              campaign.
        SegmentVersion:
          allOf:
          - $ref: '#/components/schemas/__integer'
          - description: The version of the segment to associate with the campaign.
        tags:
          allOf:
          - $ref: '#/components/schemas/MapOf__string'
          - description: "<note><p>As of <b>22-05-2023</b> tags has been deprecated\
              \ for update operations. After this date any value in tags is not processed\
              \ and an error code is not returned. To manage tags we recommend using\
              \ either <a href=\"https://docs.aws.amazon.com/pinpoint/latest/apireference/tags-resource-arn.html\"\
              >Tags</a> in the <i>API Reference for Amazon Pinpoint</i>, <a href=\"\
              https://docs.aws.amazon.com/cli/latest/reference/resourcegroupstaggingapi/index.html\"\
              >resourcegroupstaggingapi</a> commands in the <i>AWS Command Line Interface\
              \ Documentation</i> or <a href=\"https://sdk.amazonaws.com/java/api/latest/software/amazon/awssdk/services/resourcegroupstaggingapi/package-summary.html\"\
              >resourcegroupstaggingapi</a> in the <i>AWS SDK</i>.</p></note> <p>(Deprecated)\
              \ A string-to-string map of key-value pairs that defines the tags to\
              \ associate with the campaign. Each tag consists of a required tag key\
              \ and an associated tag value.</p>"
        TemplateConfiguration:
          $ref: '#/components/schemas/CreateCampaign_request_WriteCampaignRequest_TemplateConfiguration'
        TreatmentDescription:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: A custom description of the default treatment for the campaign.
        TreatmentName:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: "A custom name of the default treatment for the campaign,\
              \ if the campaign has multiple treatments. A <i>treatment</i> is a variation\
              \ of a campaign that's used for A/B testing."
        Priority:
          allOf:
          - $ref: '#/components/schemas/__integer'
          - description: "Defines the priority of the campaign, used to decide the\
              \ order of messages displayed to user if there are multiple messages\
              \ scheduled to be displayed at the same moment."
      type: object
    CreateCampaignRequest:
      example:
        WriteCampaignRequest:
          Hook:
            Mode: ""
            WebUrl: ""
            LambdaFunctionName: ""
          Description: ""
          SegmentId: ""
          Priority: ""
          TemplateConfiguration:
            SMSTemplate:
              Version: ""
              Name: ""
            EmailTemplate:
              Version: ""
              Name: ""
            InAppTemplate:
              Version: ""
              Name: ""
            PushTemplate:
              Version: ""
              Name: ""
            VoiceTemplate:
              Version: ""
              Name: ""
          IsPaused: ""
          AdditionalTreatments: ""
          Name: ""
          SegmentVersion: ""
          tags: ""
          TreatmentDescription: ""
          MessageConfiguration:
            APNSMessage:
              JsonBody: ""
              Action: ""
              MediaUrl: ""
              TimeToLive: ""
              ImageSmallIconUrl: ""
              ImageUrl: ""
              Title: ""
              ImageIconUrl: ""
              SilentPush: ""
              Body: ""
              RawContent: ""
              Url: ""
            BaiduMessage:
              JsonBody: ""
              Action: ""
              MediaUrl: ""
              TimeToLive: ""
              ImageSmallIconUrl: ""
              ImageUrl: ""
              Title: ""
              ImageIconUrl: ""
              SilentPush: ""
              Body: ""
              RawContent: ""
              Url: ""
            DefaultMessage:
              JsonBody: ""
              Action: ""
              MediaUrl: ""
              TimeToLive: ""
              ImageSmallIconUrl: ""
              ImageUrl: ""
              Title: ""
              ImageIconUrl: ""
              SilentPush: ""
              Body: ""
              RawContent: ""
              Url: ""
            InAppMessage:
              CustomConfig: ""
              Layout: ""
              Content: ""
              Body: ""
            EmailMessage:
              FromAddress: ""
              HtmlBody: ""
              Title: ""
              Body: ""
            GCMMessage:
              JsonBody: ""
              Action: ""
              MediaUrl: ""
              TimeToLive: ""
              ImageSmallIconUrl: ""
              ImageUrl: ""
              Title: ""
              ImageIconUrl: ""
              SilentPush: ""
              Body: ""
              RawContent: ""
              Url: ""
            SMSMessage:
              EntityId: ""
              OriginationNumber: ""
              SenderId: ""
              Body: ""
              MessageType: ""
              TemplateId: ""
            CustomMessage:
              Data: ""
            ADMMessage:
              JsonBody: ""
              Action: ""
              MediaUrl: ""
              TimeToLive: ""
              ImageSmallIconUrl: ""
              ImageUrl: ""
              Title: ""
              ImageIconUrl: ""
              SilentPush: ""
              Body: ""
              RawContent: ""
              Url: ""
          Limits:
            Daily: ""
            MaximumDuration: ""
            Total: ""
            MessagesPerSecond: ""
            Session: ""
          HoldoutPercent: ""
          Schedule:
            Timezone: ""
            QuietTime:
              Start: ""
              End: ""
            EndTime: ""
            StartTime: ""
            Frequency: ""
            EventFilter:
              FilterType: ""
              Dimensions:
                Metrics: ""
                EventType:
                  DimensionType: ""
                  Values: ""
                Attributes: ""
            IsLocalTime: ""
          CustomDeliveryConfiguration:
            DeliveryUri: ""
            EndpointTypes: ""
          TreatmentName: ""
      properties:
        WriteCampaignRequest:
          $ref: '#/components/schemas/WriteCampaignRequest'
      required:
      - WriteCampaignRequest
      title: CreateCampaignRequest
      type: object
    EmailTemplateRequest:
      description: Specifies the content and settings for a message template that
        can be used in messages that are sent through the email channel.
      example:
        HtmlPart: ""
        RecommenderId: ""
        TextPart: ""
        DefaultSubstitutions: ""
        TemplateDescription: ""
        Subject: ""
        tags: ""
      properties:
        DefaultSubstitutions:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: "A JSON object that specifies the default values to use for\
              \ message variables in the message template. This object is a set of\
              \ key-value pairs. Each key defines a message variable in the template.\
              \ The corresponding value defines the default value for that variable.\
              \ When you create a message that's based on the template, you can override\
              \ these defaults with message-specific and address-specific variables\
              \ and values."
        HtmlPart:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: "The message body, in HTML format, to use in email messages\
              \ that are based on the message template. We recommend using HTML format\
              \ for email clients that render HTML content. You can include links,\
              \ formatted text, and more in an HTML message."
        RecommenderId:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: "The unique identifier for the recommender model to use for\
              \ the message template. Amazon Pinpoint uses this value to determine\
              \ how to retrieve and process data from a recommender model when it\
              \ sends messages that use the template, if the template contains message\
              \ variables for recommendation data."
        Subject:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: "The subject line, or title, to use in email messages that\
              \ are based on the message template."
        tags:
          allOf:
          - $ref: '#/components/schemas/MapOf__string'
          - description: "<note><p>As of <b>22-05-2023</b> tags has been deprecated\
              \ for update operations. After this date any value in tags is not processed\
              \ and an error code is not returned. To manage tags we recommend using\
              \ either <a href=\"https://docs.aws.amazon.com/pinpoint/latest/apireference/tags-resource-arn.html\"\
              >Tags</a> in the <i>API Reference for Amazon Pinpoint</i>, <a href=\"\
              https://docs.aws.amazon.com/cli/latest/reference/resourcegroupstaggingapi/index.html\"\
              >resourcegroupstaggingapi</a> commands in the <i>AWS Command Line Interface\
              \ Documentation</i> or <a href=\"https://sdk.amazonaws.com/java/api/latest/software/amazon/awssdk/services/resourcegroupstaggingapi/package-summary.html\"\
              >resourcegroupstaggingapi</a> in the <i>AWS SDK</i>.</p></note> <p>(Deprecated)\
              \ A string-to-string map of key-value pairs that defines the tags to\
              \ associate with the message template. Each tag consists of a required\
              \ tag key and an associated tag value.</p>"
        TemplateDescription:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: A custom description of the message template.
        TextPart:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: "The message body, in plain text format, to use in email\
              \ messages that are based on the message template. We recommend using\
              \ plain text format for email clients that don't render HTML content\
              \ and clients that are connected to high-latency networks, such as mobile\
              \ devices."
      type: object
    CreateEmailTemplateRequest:
      properties:
        EmailTemplateRequest:
          $ref: '#/components/schemas/EmailTemplateRequest'
      required:
      - EmailTemplateRequest
      title: CreateEmailTemplateRequest
      type: object
    CreateTemplateMessageBody:
      description: Provides information about a request to create a message template.
      example:
        Message: ""
        RequestID: ""
        Arn: ""
      properties:
        Arn:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The Amazon Resource Name (ARN) of the message template that
              was created.
        Message:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The message that's returned from the API for the request
              to create the message template.
        RequestID:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The unique identifier for the request to create the message
              template.
      type: object
    ExportJobRequest:
      description: Specifies the settings for a job that exports endpoint definitions
        to an Amazon Simple Storage Service (Amazon S3) bucket.
      example:
        S3UrlPrefix: ""
        SegmentId: ""
        RoleArn: ""
        SegmentVersion: ""
      properties:
        RoleArn:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The Amazon Resource Name (ARN) of the AWS Identity and Access
              Management (IAM) role that authorizes Amazon Pinpoint to access the
              Amazon S3 location where you want to export endpoint definitions to.
        S3UrlPrefix:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: "The URL of the location in an Amazon Simple Storage Service\
              \ (Amazon S3) bucket where you want to export endpoint definitions to.\
              \ This location is typically a folder that contains multiple files.\
              \ The URL should be in the following format: s3://<replaceable>bucket-name</replaceable>/<replaceable>folder-name</replaceable>/."
        SegmentId:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: "The identifier for the segment to export endpoint definitions\
              \ from. If you don't specify this value, Amazon Pinpoint exports definitions\
              \ for all the endpoints that are associated with the application."
        SegmentVersion:
          allOf:
          - $ref: '#/components/schemas/__integer'
          - description: "The version of the segment to export endpoint definitions\
              \ from, if specified."
      required:
      - RoleArn
      - S3UrlPrefix
      type: object
    CreateExportJobRequest:
      example:
        ExportJobRequest:
          S3UrlPrefix: ""
          SegmentId: ""
          RoleArn: ""
          SegmentVersion: ""
      properties:
        ExportJobRequest:
          $ref: '#/components/schemas/ExportJobRequest'
      required:
      - ExportJobRequest
      title: CreateExportJobRequest
      type: object
    ExportJobResponse:
      description: Provides information about the status and settings of a job that
        exports endpoint definitions to a file. The file can be added directly to
        an Amazon Simple Storage Service (Amazon S3) bucket by using the Amazon Pinpoint
        API or downloaded directly to a computer by using the Amazon Pinpoint console.
      example:
        CompletedPieces: ""
        CreationDate: ""
        TotalProcessed: ""
        Definition:
          S3UrlPrefix: ""
          SegmentId: ""
          RoleArn: ""
          SegmentVersion: ""
        Failures: ""
        JobStatus: ""
        TotalFailures: ""
        Type: ""
        FailedPieces: ""
        Id: ""
        TotalPieces: ""
        ApplicationId: ""
        CompletionDate: ""
      properties:
        ApplicationId:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The unique identifier for the application that's associated
              with the export job.
        CompletedPieces:
          allOf:
          - $ref: '#/components/schemas/__integer'
          - description: "The number of pieces that were processed successfully (completed)\
              \ by the export job, as of the time of the request."
        CompletionDate:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: "The date, in ISO 8601 format, when the export job was completed."
        CreationDate:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: "The date, in ISO 8601 format, when the export job was created."
        Definition:
          $ref: '#/components/schemas/ExportJobResponse_Definition'
        FailedPieces:
          allOf:
          - $ref: '#/components/schemas/__integer'
          - description: "The number of pieces that weren't processed successfully\
              \ (failed) by the export job, as of the time of the request."
        Failures:
          allOf:
          - $ref: '#/components/schemas/ListOf__string'
          - description: "An array of entries, one for each of the first 100 entries\
              \ that weren't processed successfully (failed) by the export job, if\
              \ any."
        Id:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The unique identifier for the export job.
        JobStatus:
          allOf:
          - $ref: '#/components/schemas/JobStatus'
          - description: The status of the export job. The job status is FAILED if
              Amazon Pinpoint wasn't able to process one or more pieces in the job.
        TotalFailures:
          allOf:
          - $ref: '#/components/schemas/__integer'
          - description: "The total number of endpoint definitions that weren't processed\
              \ successfully (failed) by the export job, typically because an error,\
              \ such as a syntax error, occurred."
        TotalPieces:
          allOf:
          - $ref: '#/components/schemas/__integer'
          - description: The total number of pieces that must be processed to complete
              the export job. Each piece consists of an approximately equal portion
              of the endpoint definitions that are part of the export job.
        TotalProcessed:
          allOf:
          - $ref: '#/components/schemas/__integer'
          - description: The total number of endpoint definitions that were processed
              by the export job.
        Type:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The job type. This value is EXPORT for export jobs.
      required:
      - ApplicationId
      - CreationDate
      - Definition
      - Id
      - JobStatus
      - Type
      type: object
    ImportJobRequest:
      description: Specifies the settings for a job that imports endpoint definitions
        from an Amazon Simple Storage Service (Amazon S3) bucket.
      example:
        Format: ""
        SegmentName: ""
        S3Url: ""
        SegmentId: ""
        DefineSegment: ""
        RegisterEndpoints: ""
        ExternalId: ""
        RoleArn: ""
      properties:
        DefineSegment:
          allOf:
          - $ref: '#/components/schemas/__boolean'
          - description: "Specifies whether to create a segment that contains the\
              \ endpoints, when the endpoint definitions are imported."
        ExternalId:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: "(Deprecated) Your AWS account ID, which you assigned to\
              \ an external ID key in an IAM trust policy. Amazon Pinpoint previously\
              \ used this value to assume an IAM role when importing endpoint definitions,\
              \ but we removed this requirement. We don't recommend use of external\
              \ IDs for IAM roles that are assumed by Amazon Pinpoint."
        Format:
          allOf:
          - $ref: '#/components/schemas/Format'
          - description: "The format of the files that contain the endpoint definitions\
              \ to import. Valid values are: CSV, for comma-separated values format;\
              \ and, JSON, for newline-delimited JSON format. If the Amazon S3 location\
              \ stores multiple files that use different formats, Amazon Pinpoint\
              \ imports data only from the files that use the specified format."
        RegisterEndpoints:
          allOf:
          - $ref: '#/components/schemas/__boolean'
          - description: "Specifies whether to register the endpoints with Amazon\
              \ Pinpoint, when the endpoint definitions are imported."
        RoleArn:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The Amazon Resource Name (ARN) of the AWS Identity and Access
              Management (IAM) role that authorizes Amazon Pinpoint to access the
              Amazon S3 location to import endpoint definitions from.
        S3Url:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: "<p>The URL of the Amazon Simple Storage Service (Amazon\
              \ S3) bucket that contains the endpoint definitions to import. This\
              \ location can be a folder or a single file. If the location is a folder,\
              \ Amazon Pinpoint imports endpoint definitions from the files in this\
              \ location, including any subfolders that the folder contains.</p> <p>The\
              \ URL should be in the following format: s3://<replaceable>bucket-name</replaceable>/<replaceable>folder-name</replaceable>/<replaceable>file-name</replaceable>.\
              \ The location can end with the key for an individual object or a prefix\
              \ that qualifies multiple objects.</p>"
        SegmentId:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: "The identifier for the segment to update or add the imported\
              \ endpoint definitions to, if the import job is meant to update an existing\
              \ segment."
        SegmentName:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: "A custom name for the segment that's created by the import\
              \ job, if the value of the DefineSegment property is true."
      required:
      - Format
      - RoleArn
      - S3Url
      type: object
    CreateImportJobRequest:
      example:
        ImportJobRequest:
          Format: ""
          SegmentName: ""
          S3Url: ""
          SegmentId: ""
          DefineSegment: ""
          RegisterEndpoints: ""
          ExternalId: ""
          RoleArn: ""
      properties:
        ImportJobRequest:
          $ref: '#/components/schemas/ImportJobRequest'
      required:
      - ImportJobRequest
      title: CreateImportJobRequest
      type: object
    ImportJobResponse:
      description: Provides information about the status and settings of a job that
        imports endpoint definitions from one or more files. The files can be stored
        in an Amazon Simple Storage Service (Amazon S3) bucket or uploaded directly
        from a computer by using the Amazon Pinpoint console.
      example:
        CompletedPieces: ""
        CreationDate: ""
        TotalProcessed: ""
        Definition:
          Format: ""
          SegmentName: ""
          S3Url: ""
          SegmentId: ""
          DefineSegment: ""
          RegisterEndpoints: ""
          ExternalId: ""
          RoleArn: ""
        Failures: ""
        JobStatus: ""
        TotalFailures: ""
        Type: ""
        FailedPieces: ""
        Id: ""
        TotalPieces: ""
        ApplicationId: ""
        CompletionDate: ""
      properties:
        ApplicationId:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The unique identifier for the application that's associated
              with the import job.
        CompletedPieces:
          allOf:
          - $ref: '#/components/schemas/__integer'
          - description: "The number of pieces that were processed successfully (completed)\
              \ by the import job, as of the time of the request."
        CompletionDate:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: "The date, in ISO 8601 format, when the import job was completed."
        CreationDate:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: "The date, in ISO 8601 format, when the import job was created."
        Definition:
          $ref: '#/components/schemas/ImportJobResponse_Definition'
        FailedPieces:
          allOf:
          - $ref: '#/components/schemas/__integer'
          - description: "The number of pieces that weren't processed successfully\
              \ (failed) by the import job, as of the time of the request."
        Failures:
          allOf:
          - $ref: '#/components/schemas/ListOf__string'
          - description: "An array of entries, one for each of the first 100 entries\
              \ that weren't processed successfully (failed) by the import job, if\
              \ any."
        Id:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The unique identifier for the import job.
        JobStatus:
          allOf:
          - $ref: '#/components/schemas/JobStatus'
          - description: The status of the import job. The job status is FAILED if
              Amazon Pinpoint wasn't able to process one or more pieces in the job.
        TotalFailures:
          allOf:
          - $ref: '#/components/schemas/__integer'
          - description: "The total number of endpoint definitions that weren't processed\
              \ successfully (failed) by the import job, typically because an error,\
              \ such as a syntax error, occurred."
        TotalPieces:
          allOf:
          - $ref: '#/components/schemas/__integer'
          - description: The total number of pieces that must be processed to complete
              the import job. Each piece consists of an approximately equal portion
              of the endpoint definitions that are part of the import job.
        TotalProcessed:
          allOf:
          - $ref: '#/components/schemas/__integer'
          - description: The total number of endpoint definitions that were processed
              by the import job.
        Type:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The job type. This value is IMPORT for import jobs.
      required:
      - ApplicationId
      - CreationDate
      - Definition
      - Id
      - JobStatus
      - Type
      type: object
    InAppTemplateRequest:
      description: InApp Template Request.
      example:
        CustomConfig: ""
        Layout: ""
        Content: ""
        TemplateDescription: ""
        tags: ""
      properties:
        Content:
          allOf:
          - $ref: '#/components/schemas/ListOfInAppMessageContent'
          - description: "The content of the message, can include up to 5 modals.\
              \ Each modal must contain a message, a header, and background color.\
              \ ImageUrl and buttons are optional."
        CustomConfig:
          allOf:
          - $ref: '#/components/schemas/MapOf__string'
          - description: Custom config to be sent to client.
        Layout:
          allOf:
          - $ref: '#/components/schemas/Layout'
          - description: The layout of the message.
        tags:
          allOf:
          - $ref: '#/components/schemas/MapOf__string'
          - description: "<note><p>As of <b>22-05-2023</b> tags has been deprecated\
              \ for update operations. After this date any value in tags is not processed\
              \ and an error code is not returned. To manage tags we recommend using\
              \ either <a href=\"https://docs.aws.amazon.com/pinpoint/latest/apireference/tags-resource-arn.html\"\
              >Tags</a> in the <i>API Reference for Amazon Pinpoint</i>, <a href=\"\
              https://docs.aws.amazon.com/cli/latest/reference/resourcegroupstaggingapi/index.html\"\
              >resourcegroupstaggingapi</a> commands in the <i>AWS Command Line Interface\
              \ Documentation</i> or <a href=\"https://sdk.amazonaws.com/java/api/latest/software/amazon/awssdk/services/resourcegroupstaggingapi/package-summary.html\"\
              >resourcegroupstaggingapi</a> in the <i>AWS SDK</i>.</p></note> <p>(Deprecated)\
              \ A string-to-string map of key-value pairs that defines the tags to\
              \ associate with the message template. Each tag consists of a required\
              \ tag key and an associated tag value.</p>"
        TemplateDescription:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The description of the template.
      type: object
    CreateInAppTemplateRequest:
      properties:
        InAppTemplateRequest:
          $ref: '#/components/schemas/InAppTemplateRequest'
      required:
      - InAppTemplateRequest
      title: CreateInAppTemplateRequest
      type: object
    TemplateCreateMessageBody:
      description: Provides information about a request to create a message template.
      example:
        Message: ""
        RequestID: ""
        Arn: ""
      properties:
        Arn:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The Amazon Resource Name (ARN) of the message template that
              was created.
        Message:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The message that's returned from the API for the request
              to create the message template.
        RequestID:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The unique identifier for the request to create the message
              template.
      type: object
    WriteJourneyRequest:
      description: Specifies the configuration and other settings for a journey.
      example:
        Activities: ""
        CreationDate: ""
        LastModifiedDate: ""
        ClosedDays:
          VOICE: ""
          SMS: ""
          CUSTOM: ""
          EMAIL: ""
          PUSH: ""
        QuietTime:
          Start: ""
          End: ""
        LocalTime: ""
        StartCondition:
          Description: ""
          SegmentStartCondition:
            SegmentId: ""
          EventStartCondition:
            SegmentId: SegmentId
            EventFilter:
              FilterType: ""
              Dimensions:
                Metrics: ""
                EventType:
                  DimensionType: ""
                  Values: ""
                Attributes: ""
        SendingSchedule: ""
        WaitForQuietTime: ""
        RefreshFrequency: ""
        Name: ""
        StartActivity: ""
        OpenHours:
          VOICE: ""
          SMS: ""
          CUSTOM: ""
          EMAIL: ""
          PUSH: ""
        Limits:
          MessagesPerSecond: ""
          EndpointReentryCap: ""
          DailyCap: ""
          EndpointReentryInterval: ""
          TimeframeCap:
            Cap: ""
            Days: ""
          TotalCap: ""
        JourneyChannelSettings:
          ConnectCampaignArn: ""
          ConnectCampaignExecutionRoleArn: ""
        TimezoneEstimationMethods: ""
        State: ""
        Schedule:
          Timezone: ""
          EndTime: ""
          StartTime: ""
        RefreshOnSegmentUpdate: ""
      properties:
        Activities:
          allOf:
          - $ref: '#/components/schemas/MapOfActivity'
          - description: "A map that contains a set of Activity objects, one object\
              \ for each activity in the journey. For each Activity object, the key\
              \ is the unique identifier (string) for an activity and the value is\
              \ the settings for the activity. An activity identifier can contain\
              \ a maximum of 100 characters. The characters must be alphanumeric characters."
        CreationDate:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: "The date, in ISO 8601 format, when the journey was created."
        LastModifiedDate:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: "The date, in ISO 8601 format, when the journey was last\
              \ modified."
        Limits:
          $ref: '#/components/schemas/CreateJourney_request_WriteJourneyRequest_Limits'
        LocalTime:
          allOf:
          - $ref: '#/components/schemas/__boolean'
          - description: "Specifies whether the journey's scheduled start and end\
              \ times use each participant's local time. To base the schedule on each\
              \ participant's local time, set this value to true."
        Name:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: "The name of the journey. A journey name can contain a maximum\
              \ of 150 characters. The characters can be alphanumeric characters or\
              \ symbols, such as underscores (_) or hyphens (-). A journey name can't\
              \ contain any spaces."
        QuietTime:
          $ref: '#/components/schemas/CreateJourney_request_WriteJourneyRequest_QuietTime'
        RefreshFrequency:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: "The frequency with which Amazon Pinpoint evaluates segment\
              \ and event data for the journey, as a duration in ISO 8601 format."
        Schedule:
          $ref: '#/components/schemas/CreateJourney_request_WriteJourneyRequest_Schedule'
        StartActivity:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The unique identifier for the first activity in the journey.
              The identifier for this activity can contain a maximum of 128 characters.
              The characters must be alphanumeric characters.
        StartCondition:
          $ref: '#/components/schemas/CreateJourney_request_WriteJourneyRequest_StartCondition'
        State:
          allOf:
          - $ref: '#/components/schemas/State'
          - description: "<p>The status of the journey. Valid values are:</p> <ul><li><p>DRAFT\
              \ - Saves the journey and doesn't publish it.</p></li> <li><p>ACTIVE\
              \ - Saves and publishes the journey. Depending on the journey's schedule,\
              \ the journey starts running immediately or at the scheduled start time.\
              \ If a journey's status is ACTIVE, you can't add, change, or remove\
              \ activities from it.</p></li></ul> <p>PAUSED, CANCELLED, COMPLETED,\
              \ and CLOSED states are not supported in requests to create or update\
              \ a journey. To cancel, pause, or resume a journey, use the <link  linkend=\"\
              apps-application-id-journeys-journey-id-state\">Journey State</link>\
              \ resource.</p>"
        WaitForQuietTime:
          allOf:
          - $ref: '#/components/schemas/__boolean'
          - description: Specifies whether endpoints in quiet hours should enter a
              wait till the end of their quiet hours.
        RefreshOnSegmentUpdate:
          allOf:
          - $ref: '#/components/schemas/__boolean'
          - description: Indicates whether the journey participants should be refreshed
              when a segment is updated.
        JourneyChannelSettings:
          $ref: '#/components/schemas/CreateJourney_request_WriteJourneyRequest_JourneyChannelSettings'
        SendingSchedule:
          allOf:
          - $ref: '#/components/schemas/__boolean'
          - description: Indicates if journey has Advance Quiet Time enabled. This
              flag should be set to true in order to allow using OpenHours and ClosedDays.
        OpenHours:
          $ref: '#/components/schemas/CreateJourney_request_WriteJourneyRequest_OpenHours'
        ClosedDays:
          $ref: '#/components/schemas/CreateJourney_request_WriteJourneyRequest_ClosedDays'
        TimezoneEstimationMethods:
          allOf:
          - $ref: '#/components/schemas/ListOf__TimezoneEstimationMethodsElement'
          - description: "<p>An array of time zone estimation methods, if any, to\
              \ use for determining an <a href=\"https://docs.aws.amazon.com/pinpoint/latest/apireference/apps-application-id-endpoints-endpoint-id.html\"\
              >Endpoints</a> time zone if the Endpoint does not have a value for the\
              \ Demographic.Timezone attribute.</p> <ul> <li><p>PHONE_NUMBER - A time\
              \ zone is determined based on the Endpoint.Address and Endpoint.Location.Country.</p></li>\
              \ <li><p>POSTAL_CODE - A time zone is determined based on the Endpoint.Location.PostalCode\
              \ and Endpoint.Location.Country.</p> <note><p>POSTAL_CODE detection\
              \ is only supported in the United States, United Kingdom, Australia,\
              \ New Zealand, Canada, France, Italy, Spain, Germany and in regions\
              \ where Amazon Pinpoint is available.</p></note></li> </ul>"
      required:
      - Name
      type: object
    CreateJourneyRequest:
      example:
        WriteJourneyRequest:
          Activities: ""
          CreationDate: ""
          LastModifiedDate: ""
          ClosedDays:
            VOICE: ""
            SMS: ""
            CUSTOM: ""
            EMAIL: ""
            PUSH: ""
          QuietTime:
            Start: ""
            End: ""
          LocalTime: ""
          StartCondition:
            Description: ""
            SegmentStartCondition:
              SegmentId: ""
            EventStartCondition:
              SegmentId: SegmentId
              EventFilter:
                FilterType: ""
                Dimensions:
                  Metrics: ""
                  EventType:
                    DimensionType: ""
                    Values: ""
                  Attributes: ""
          SendingSchedule: ""
          WaitForQuietTime: ""
          RefreshFrequency: ""
          Name: ""
          StartActivity: ""
          OpenHours:
            VOICE: ""
            SMS: ""
            CUSTOM: ""
            EMAIL: ""
            PUSH: ""
          Limits:
            MessagesPerSecond: ""
            EndpointReentryCap: ""
            DailyCap: ""
            EndpointReentryInterval: ""
            TimeframeCap:
              Cap: ""
              Days: ""
            TotalCap: ""
          JourneyChannelSettings:
            ConnectCampaignArn: ""
            ConnectCampaignExecutionRoleArn: ""
          TimezoneEstimationMethods: ""
          State: ""
          Schedule:
            Timezone: ""
            EndTime: ""
            StartTime: ""
          RefreshOnSegmentUpdate: ""
      properties:
        WriteJourneyRequest:
          $ref: '#/components/schemas/WriteJourneyRequest'
      required:
      - WriteJourneyRequest
      title: CreateJourneyRequest
      type: object
    JourneyResponse:
      description: "Provides information about the status, configuration, and other\
        \ settings for a journey."
      example:
        Activities: ""
        CreationDate: ""
        LastModifiedDate: ""
        ClosedDays:
          VOICE: ""
          SMS: ""
          CUSTOM: ""
          EMAIL: ""
          PUSH: ""
        QuietTime:
          Start: ""
          End: ""
        LocalTime: ""
        StartCondition:
          Description: ""
          SegmentStartCondition:
            SegmentId: ""
          EventStartCondition:
            SegmentId: SegmentId
            EventFilter:
              FilterType: ""
              Dimensions:
                Metrics: ""
                EventType:
                  DimensionType: ""
                  Values: ""
                Attributes: ""
        SendingSchedule: ""
        WaitForQuietTime: ""
        RefreshFrequency: ""
        Name: ""
        StartActivity: ""
        tags: ""
        OpenHours:
          VOICE: ""
          SMS: ""
          CUSTOM: ""
          EMAIL: ""
          PUSH: ""
        Limits:
          MessagesPerSecond: ""
          EndpointReentryCap: ""
          DailyCap: ""
          EndpointReentryInterval: ""
          TimeframeCap:
            Cap: ""
            Days: ""
          TotalCap: ""
        JourneyChannelSettings:
          ConnectCampaignArn: ""
          ConnectCampaignExecutionRoleArn: ""
        TimezoneEstimationMethods: ""
        State: ""
        Schedule:
          Timezone: ""
          EndTime: ""
          StartTime: ""
        Id: ""
        ApplicationId: ""
        RefreshOnSegmentUpdate: ""
      properties:
        Activities:
          allOf:
          - $ref: '#/components/schemas/MapOfActivity'
          - description: "A map that contains a set of Activity objects, one object\
              \ for each activity in the journey. For each Activity object, the key\
              \ is the unique identifier (string) for an activity and the value is\
              \ the settings for the activity."
        ApplicationId:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The unique identifier for the application that the journey
              applies to.
        CreationDate:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: "The date, in ISO 8601 format, when the journey was created."
        Id:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The unique identifier for the journey.
        LastModifiedDate:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: "The date, in ISO 8601 format, when the journey was last\
              \ modified."
        Limits:
          $ref: '#/components/schemas/CreateJourney_request_WriteJourneyRequest_Limits'
        LocalTime:
          allOf:
          - $ref: '#/components/schemas/__boolean'
          - description: "Specifies whether the journey's scheduled start and end\
              \ times use each participant's local time. If this value is true, the\
              \ schedule uses each participant's local time."
        Name:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The name of the journey.
        QuietTime:
          $ref: '#/components/schemas/CreateJourney_request_WriteJourneyRequest_QuietTime'
        RefreshFrequency:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: "The frequency with which Amazon Pinpoint evaluates segment\
              \ and event data for the journey, as a duration in ISO 8601 format."
        Schedule:
          $ref: '#/components/schemas/CreateJourney_request_WriteJourneyRequest_Schedule'
        StartActivity:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The unique identifier for the first activity in the journey.
        StartCondition:
          $ref: '#/components/schemas/CreateJourney_request_WriteJourneyRequest_StartCondition'
        State:
          allOf:
          - $ref: '#/components/schemas/State'
          - description: "<p>The current status of the journey. Possible values are:</p>\
              \ <ul><li><p>DRAFT - The journey is being developed and hasn't been\
              \ published yet.</p></li> <li><p>ACTIVE - The journey has been developed\
              \ and published. Depending on the journey's schedule, the journey may\
              \ currently be running or scheduled to start running at a later time.\
              \ If a journey's status is ACTIVE, you can't add, change, or remove\
              \ activities from it.</p></li> <li><p>COMPLETED - The journey has been\
              \ published and has finished running. All participants have entered\
              \ the journey and no participants are waiting to complete the journey\
              \ or any activities in the journey.</p></li> <li><p>CANCELLED - The\
              \ journey has been stopped. If a journey's status is CANCELLED, you\
              \ can't add, change, or remove activities or segment settings from the\
              \ journey.</p></li> <li><p>CLOSED - The journey has been published and\
              \ has started running. It may have also passed its scheduled end time,\
              \ or passed its scheduled start time and a refresh frequency hasn't\
              \ been specified for it. If a journey's status is CLOSED, you can't\
              \ add participants to it, and no existing participants can enter the\
              \ journey for the first time. However, any existing participants who\
              \ are currently waiting to start an activity may continue the journey.</p></li></ul>"
        tags:
          allOf:
          - $ref: '#/components/schemas/MapOf__string'
          - description: This object is not used or supported.
        WaitForQuietTime:
          allOf:
          - $ref: '#/components/schemas/__boolean'
          - description: Indicates whether endpoints in quiet hours should enter a
              wait activity until quiet hours have elapsed.
        RefreshOnSegmentUpdate:
          allOf:
          - $ref: '#/components/schemas/__boolean'
          - description: Indicates whether the journey participants should be refreshed
              when a segment is updated.
        JourneyChannelSettings:
          $ref: '#/components/schemas/CreateJourney_request_WriteJourneyRequest_JourneyChannelSettings'
        SendingSchedule:
          allOf:
          - $ref: '#/components/schemas/__boolean'
          - description: Indicates if journey has Advance Quiet Time enabled. This
              flag should be set to true in order to allow using OpenHours and ClosedDays.
        OpenHours:
          $ref: '#/components/schemas/JourneyResponse_OpenHours'
        ClosedDays:
          $ref: '#/components/schemas/JourneyResponse_ClosedDays'
        TimezoneEstimationMethods:
          allOf:
          - $ref: '#/components/schemas/ListOf__TimezoneEstimationMethodsElement'
          - description: "<p>An array of time zone estimation methods, if any, to\
              \ use for determining an <a href=\"https://docs.aws.amazon.com/pinpoint/latest/apireference/apps-application-id-endpoints-endpoint-id.html\"\
              >Endpoints</a> time zone if the Endpoint does not have a value for the\
              \ Demographic.Timezone attribute.</p> <ul> <li><p>PHONE_NUMBER - A time\
              \ zone is determined based on the Endpoint.Address and Endpoint.Location.Country.</p></li>\
              \ <li><p>POSTAL_CODE - A time zone is determined based on the Endpoint.Location.PostalCode\
              \ and Endpoint.Location.Country.</p> <note><p>POSTAL_CODE detection\
              \ is only supported in the United States, United Kingdom, Australia,\
              \ New Zealand, Canada, France, Italy, Spain, Germany and in regions\
              \ where Amazon Pinpoint is available.</p></note></li> </ul>"
      required:
      - ApplicationId
      - Id
      - Name
      type: object
    PushNotificationTemplateRequest:
      description: Specifies the content and settings for a message template that
        can be used in messages that are sent through a push notification channel.
      example:
        GCM:
          Action: ""
          ImageUrl: ""
          SmallImageIconUrl: ""
          Title: ""
          ImageIconUrl: ""
          Sound: ""
          Body: ""
          RawContent: ""
          Url: ""
        RecommenderId: ""
        Baidu:
          Action: ""
          ImageUrl: ""
          SmallImageIconUrl: ""
          Title: ""
          ImageIconUrl: ""
          Sound: ""
          Body: ""
          RawContent: ""
          Url: ""
        ADM:
          Action: ""
          ImageUrl: ""
          SmallImageIconUrl: ""
          Title: ""
          ImageIconUrl: ""
          Sound: ""
          Body: ""
          RawContent: ""
          Url: ""
        APNS:
          Action: ""
          MediaUrl: ""
          Title: ""
          Sound: ""
          Body: ""
          RawContent: ""
          Url: ""
        DefaultSubstitutions: ""
        TemplateDescription: ""
        Default:
          Action: ""
          Title: ""
          Sound: ""
          Body: ""
          Url: ""
        tags: ""
      properties:
        ADM:
          $ref: '#/components/schemas/UpdatePushTemplate_request_PushNotificationTemplateRequest_ADM'
        APNS:
          $ref: '#/components/schemas/UpdatePushTemplate_request_PushNotificationTemplateRequest_APNS'
        Baidu:
          $ref: '#/components/schemas/UpdatePushTemplate_request_PushNotificationTemplateRequest_Baidu'
        Default:
          $ref: '#/components/schemas/UpdatePushTemplate_request_PushNotificationTemplateRequest_Default'
        DefaultSubstitutions:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: "A JSON object that specifies the default values to use for\
              \ message variables in the message template. This object is a set of\
              \ key-value pairs. Each key defines a message variable in the template.\
              \ The corresponding value defines the default value for that variable.\
              \ When you create a message that's based on the template, you can override\
              \ these defaults with message-specific and address-specific variables\
              \ and values."
        GCM:
          $ref: '#/components/schemas/UpdatePushTemplate_request_PushNotificationTemplateRequest_GCM'
        RecommenderId:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: "The unique identifier for the recommender model to use for\
              \ the message template. Amazon Pinpoint uses this value to determine\
              \ how to retrieve and process data from a recommender model when it\
              \ sends messages that use the template, if the template contains message\
              \ variables for recommendation data."
        tags:
          allOf:
          - $ref: '#/components/schemas/MapOf__string'
          - description: "<note><p>As of <b>22-05-2023</b> tags has been deprecated\
              \ for update operations. After this date any value in tags is not processed\
              \ and an error code is not returned. To manage tags we recommend using\
              \ either <a href=\"https://docs.aws.amazon.com/pinpoint/latest/apireference/tags-resource-arn.html\"\
              >Tags</a> in the <i>API Reference for Amazon Pinpoint</i>, <a href=\"\
              https://docs.aws.amazon.com/cli/latest/reference/resourcegroupstaggingapi/index.html\"\
              >resourcegroupstaggingapi</a> commands in the <i>AWS Command Line Interface\
              \ Documentation</i> or <a href=\"https://sdk.amazonaws.com/java/api/latest/software/amazon/awssdk/services/resourcegroupstaggingapi/package-summary.html\"\
              >resourcegroupstaggingapi</a> in the <i>AWS SDK</i>.</p></note> <p>(Deprecated)\
              \ A string-to-string map of key-value pairs that defines the tags to\
              \ associate with the message template. Each tag consists of a required\
              \ tag key and an associated tag value.</p>"
        TemplateDescription:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: A custom description of the message template.
      type: object
    CreatePushTemplateRequest:
      properties:
        PushNotificationTemplateRequest:
          $ref: '#/components/schemas/PushNotificationTemplateRequest'
      required:
      - PushNotificationTemplateRequest
      title: CreatePushTemplateRequest
      type: object
    CreateRecommenderConfiguration:
      description: Specifies Amazon Pinpoint configuration settings for retrieving
        and processing recommendation data from a recommender model.
      example:
        RecommendationProviderUri: ""
        RecommendationsDisplayName: ""
        Description: ""
        RecommendationsPerMessage: ""
        RecommendationProviderRoleArn: ""
        Attributes: ""
        RecommendationTransformerUri: ""
        Name: ""
        RecommendationProviderIdType: ""
      properties:
        Attributes:
          allOf:
          - $ref: '#/components/schemas/MapOf__string'
          - description: "<p>A map of key-value pairs that defines 1-10 custom endpoint\
              \ or user attributes, depending on the value for the RecommendationProviderIdType\
              \ property. Each of these attributes temporarily stores a recommended\
              \ item that's retrieved from the recommender model and sent to an AWS\
              \ Lambda function for additional processing. Each attribute can be used\
              \ as a message variable in a message template.</p> <p>In the map, the\
              \ key is the name of a custom attribute and the value is a custom display\
              \ name for that attribute. The display name appears in the <b>Attribute\
              \ finder</b> of the template editor on the Amazon Pinpoint console.\
              \ The following restrictions apply to these names:</p> <ul><li><p>An\
              \ attribute name must start with a letter or number and it can contain\
              \ up to 50 characters. The characters can be letters, numbers, underscores\
              \ (_), or hyphens (-). Attribute names are case sensitive and must be\
              \ unique.</p></li> <li><p>An attribute display name must start with\
              \ a letter or number and it can contain up to 25 characters. The characters\
              \ can be letters, numbers, spaces, underscores (_), or hyphens (-).</p></li></ul>\
              \ <p>This object is required if the configuration invokes an AWS Lambda\
              \ function (RecommendationTransformerUri) to process recommendation\
              \ data. Otherwise, don't include this object in your request.</p>"
        Description:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: "A custom description of the configuration for the recommender\
              \ model. The description can contain up to 128 characters. The characters\
              \ can be letters, numbers, spaces, or the following symbols: _ ; ()\
              \ , ‐."
        Name:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: "A custom name of the configuration for the recommender model.\
              \ The name must start with a letter or number and it can contain up\
              \ to 128 characters. The characters can be letters, numbers, spaces,\
              \ underscores (_), or hyphens (-)."
        RecommendationProviderIdType:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: "<p>The type of Amazon Pinpoint ID to associate with unique\
              \ user IDs in the recommender model. This value enables the model to\
              \ use attribute and event data that’s specific to a particular endpoint\
              \ or user in an Amazon Pinpoint application. Valid values are:</p> <ul><li><p>PINPOINT_ENDPOINT_ID\
              \ - Associate each user in the model with a particular endpoint in Amazon\
              \ Pinpoint. The data is correlated based on endpoint IDs in Amazon Pinpoint.\
              \ This is the default value.</p></li> <li><p>PINPOINT_USER_ID - Associate\
              \ each user in the model with a particular user and endpoint in Amazon\
              \ Pinpoint. The data is correlated based on user IDs in Amazon Pinpoint.\
              \ If you specify this value, an endpoint definition in Amazon Pinpoint\
              \ has to specify both a user ID (UserId) and an endpoint ID. Otherwise,\
              \ messages won’t be sent to the user's endpoint.</p></li></ul>"
        RecommendationProviderRoleArn:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The Amazon Resource Name (ARN) of the AWS Identity and Access
              Management (IAM) role that authorizes Amazon Pinpoint to retrieve recommendation
              data from the recommender model.
        RecommendationProviderUri:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The Amazon Resource Name (ARN) of the recommender model to
              retrieve recommendation data from. This value must match the ARN of
              an Amazon Personalize campaign.
        RecommendationTransformerUri:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The name or Amazon Resource Name (ARN) of the AWS Lambda
              function to invoke for additional processing of recommendation data
              that's retrieved from the recommender model.
        RecommendationsDisplayName:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: "<p>A custom display name for the standard endpoint or user\
              \ attribute (RecommendationItems) that temporarily stores recommended\
              \ items for each endpoint or user, depending on the value for the RecommendationProviderIdType\
              \ property. This value is required if the configuration doesn't invoke\
              \ an AWS Lambda function (RecommendationTransformerUri) to perform additional\
              \ processing of recommendation data.</p> <p>This name appears in the\
              \ <b>Attribute finder</b> of the template editor on the Amazon Pinpoint\
              \ console. The name can contain up to 25 characters. The characters\
              \ can be letters, numbers, spaces, underscores (_), or hyphens (-).\
              \ These restrictions don't apply to attribute values.</p>"
        RecommendationsPerMessage:
          allOf:
          - $ref: '#/components/schemas/__integer'
          - description: "<p>The number of recommended items to retrieve from the\
              \ model for each endpoint or user, depending on the value for the RecommendationProviderIdType\
              \ property. This number determines how many recommended items are available\
              \ for use in message variables. The minimum value is 1. The maximum\
              \ value is 5. The default value is 5.</p> <p>To use multiple recommended\
              \ items and custom attributes with message variables, you have to use\
              \ an AWS Lambda function (RecommendationTransformerUri) to perform additional\
              \ processing of recommendation data.</p>"
      required:
      - RecommendationProviderRoleArn
      - RecommendationProviderUri
      type: object
    CreateRecommenderConfigurationRequest:
      example:
        CreateRecommenderConfiguration:
          RecommendationProviderUri: ""
          RecommendationsDisplayName: ""
          Description: ""
          RecommendationsPerMessage: ""
          RecommendationProviderRoleArn: ""
          Attributes: ""
          RecommendationTransformerUri: ""
          Name: ""
          RecommendationProviderIdType: ""
      properties:
        CreateRecommenderConfiguration:
          $ref: '#/components/schemas/CreateRecommenderConfiguration'
      required:
      - CreateRecommenderConfiguration
      title: CreateRecommenderConfigurationRequest
      type: object
    RecommenderConfigurationResponse:
      description: Provides information about Amazon Pinpoint configuration settings
        for retrieving and processing data from a recommender model.
      example:
        CreationDate: ""
        LastModifiedDate: ""
        RecommendationProviderUri: ""
        RecommendationsDisplayName: ""
        Description: ""
        RecommendationsPerMessage: ""
        RecommendationProviderRoleArn: ""
        Attributes: ""
        Id: ""
        RecommendationTransformerUri: ""
        Name: ""
        RecommendationProviderIdType: ""
      properties:
        Attributes:
          allOf:
          - $ref: '#/components/schemas/MapOf__string'
          - description: "<p>A map that defines 1-10 custom endpoint or user attributes,\
              \ depending on the value for the RecommendationProviderIdType property.\
              \ Each of these attributes temporarily stores a recommended item that's\
              \ retrieved from the recommender model and sent to an AWS Lambda function\
              \ for additional processing. Each attribute can be used as a message\
              \ variable in a message template.</p> <p>This value is null if the configuration\
              \ doesn't invoke an AWS Lambda function (RecommendationTransformerUri)\
              \ to perform additional processing of recommendation data.</p>"
        CreationDate:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: "The date, in extended ISO 8601 format, when the configuration\
              \ was created for the recommender model."
        Description:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The custom description of the configuration for the recommender
              model.
        Id:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The unique identifier for the recommender model configuration.
        LastModifiedDate:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: "The date, in extended ISO 8601 format, when the configuration\
              \ for the recommender model was last modified."
        Name:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The custom name of the configuration for the recommender
              model.
        RecommendationProviderIdType:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: "<p>The type of Amazon Pinpoint ID that's associated with\
              \ unique user IDs in the recommender model. This value enables the model\
              \ to use attribute and event data that’s specific to a particular endpoint\
              \ or user in an Amazon Pinpoint application. Possible values are:</p>\
              \ <ul><li><p>PINPOINT_ENDPOINT_ID - Each user in the model is associated\
              \ with a particular endpoint in Amazon Pinpoint. The data is correlated\
              \ based on endpoint IDs in Amazon Pinpoint. This is the default value.</p></li>\
              \ <li><p>PINPOINT_USER_ID - Each user in the model is associated with\
              \ a particular user and endpoint in Amazon Pinpoint. The data is correlated\
              \ based on user IDs in Amazon Pinpoint. If this value is specified,\
              \ an endpoint definition in Amazon Pinpoint has to specify both a user\
              \ ID (UserId) and an endpoint ID. Otherwise, messages won’t be sent\
              \ to the user's endpoint.</p></li></ul>"
        RecommendationProviderRoleArn:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The Amazon Resource Name (ARN) of the AWS Identity and Access
              Management (IAM) role that authorizes Amazon Pinpoint to retrieve recommendation
              data from the recommender model.
        RecommendationProviderUri:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The Amazon Resource Name (ARN) of the recommender model that
              Amazon Pinpoint retrieves the recommendation data from. This value is
              the ARN of an Amazon Personalize campaign.
        RecommendationTransformerUri:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The name or Amazon Resource Name (ARN) of the AWS Lambda
              function that Amazon Pinpoint invokes to perform additional processing
              of recommendation data that it retrieves from the recommender model.
        RecommendationsDisplayName:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: "<p>The custom display name for the standard endpoint or\
              \ user attribute (RecommendationItems) that temporarily stores recommended\
              \ items for each endpoint or user, depending on the value for the RecommendationProviderIdType\
              \ property. This name appears in the <b>Attribute finder</b> of the\
              \ template editor on the Amazon Pinpoint console.</p> <p>This value\
              \ is null if the configuration doesn't invoke an AWS Lambda function\
              \ (RecommendationTransformerUri) to perform additional processing of\
              \ recommendation data.</p>"
        RecommendationsPerMessage:
          allOf:
          - $ref: '#/components/schemas/__integer'
          - description: "The number of recommended items that are retrieved from\
              \ the model for each endpoint or user, depending on the value for the\
              \ RecommendationProviderIdType property. This number determines how\
              \ many recommended items are available for use in message variables."
      required:
      - CreationDate
      - Id
      - LastModifiedDate
      - RecommendationProviderRoleArn
      - RecommendationProviderUri
      type: object
    WriteSegmentRequest:
      description: "Specifies the configuration, dimension, and other settings for\
        \ a segment. A WriteSegmentRequest object can include a Dimensions object\
        \ or a SegmentGroups object, but not both."
      example:
        SegmentGroups:
          Groups: ""
          Include: ""
        Dimensions:
          Demographic:
            AppVersion:
              DimensionType: ""
              Values: ""
            DeviceType:
              DimensionType: ""
              Values: ""
            Platform:
              DimensionType: ""
              Values: ""
            Channel:
              DimensionType: ""
              Values: ""
            Model:
              DimensionType: ""
              Values: ""
            Make:
              DimensionType: ""
              Values: ""
          Metrics: ""
          Attributes: ""
          Behavior:
            Recency:
              Duration: ""
              RecencyType: ""
          Location:
            GPSPoint:
              RangeInKilometers: ""
              Coordinates:
                Latitude: ""
                Longitude: ""
            Country:
              DimensionType: ""
              Values: ""
          UserAttributes: ""
        Name: ""
        tags: ""
      properties:
        Dimensions:
          $ref: '#/components/schemas/CreateSegment_request_WriteSegmentRequest_Dimensions'
        Name:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The name of the segment.
        SegmentGroups:
          $ref: '#/components/schemas/CreateSegment_request_WriteSegmentRequest_SegmentGroups'
        tags:
          allOf:
          - $ref: '#/components/schemas/MapOf__string'
          - description: "<note><p>As of <b>22-05-2023</b> tags has been deprecated\
              \ for update operations. After this date any value in tags is not processed\
              \ and an error code is not returned. To manage tags we recommend using\
              \ either <a href=\"https://docs.aws.amazon.com/pinpoint/latest/apireference/tags-resource-arn.html\"\
              >Tags</a> in the <i>API Reference for Amazon Pinpoint</i>, <a href=\"\
              https://docs.aws.amazon.com/cli/latest/reference/resourcegroupstaggingapi/index.html\"\
              >resourcegroupstaggingapi</a> commands in the <i>AWS Command Line Interface\
              \ Documentation</i> or <a href=\"https://sdk.amazonaws.com/java/api/latest/software/amazon/awssdk/services/resourcegroupstaggingapi/package-summary.html\"\
              >resourcegroupstaggingapi</a> in the <i>AWS SDK</i>.</p></note> <p>(Deprecated)\
              \ A string-to-string map of key-value pairs that defines the tags to\
              \ associate with the segment. Each tag consists of a required tag key\
              \ and an associated tag value.</p>"
      type: object
    CreateSegmentRequest:
      example:
        WriteSegmentRequest:
          SegmentGroups:
            Groups: ""
            Include: ""
          Dimensions:
            Demographic:
              AppVersion:
                DimensionType: ""
                Values: ""
              DeviceType:
                DimensionType: ""
                Values: ""
              Platform:
                DimensionType: ""
                Values: ""
              Channel:
                DimensionType: ""
                Values: ""
              Model:
                DimensionType: ""
                Values: ""
              Make:
                DimensionType: ""
                Values: ""
            Metrics: ""
            Attributes: ""
            Behavior:
              Recency:
                Duration: ""
                RecencyType: ""
            Location:
              GPSPoint:
                RangeInKilometers: ""
                Coordinates:
                  Latitude: ""
                  Longitude: ""
              Country:
                DimensionType: ""
                Values: ""
            UserAttributes: ""
          Name: ""
          tags: ""
      properties:
        WriteSegmentRequest:
          $ref: '#/components/schemas/WriteSegmentRequest'
      required:
      - WriteSegmentRequest
      title: CreateSegmentRequest
      type: object
    SegmentResponse:
      description: "Provides information about the configuration, dimension, and other\
        \ settings for a segment."
      example:
        SegmentType: ""
        CreationDate: ""
        LastModifiedDate: ""
        Version: ""
        SegmentGroups:
          Groups: ""
          Include: ""
        Dimensions:
          Demographic:
            AppVersion:
              DimensionType: ""
              Values: ""
            DeviceType:
              DimensionType: ""
              Values: ""
            Platform:
              DimensionType: ""
              Values: ""
            Channel:
              DimensionType: ""
              Values: ""
            Model:
              DimensionType: ""
              Values: ""
            Make:
              DimensionType: ""
              Values: ""
          Metrics: ""
          Attributes: ""
          Behavior:
            Recency:
              Duration: ""
              RecencyType: ""
          Location:
            GPSPoint:
              RangeInKilometers: ""
              Coordinates:
                Latitude: ""
                Longitude: ""
            Country:
              DimensionType: ""
              Values: ""
          UserAttributes: ""
        Id: ""
        ApplicationId: ""
        Arn: ""
        ImportDefinition:
          Format: ""
          ChannelCounts: ""
          S3Url: ""
          Size: ""
          ExternalId: ""
          RoleArn: ""
        Name: ""
        tags: ""
      properties:
        ApplicationId:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The unique identifier for the application that the segment
              is associated with.
        Arn:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The Amazon Resource Name (ARN) of the segment.
        CreationDate:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The date and time when the segment was created.
        Dimensions:
          $ref: '#/components/schemas/SegmentResponse_Dimensions'
        Id:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The unique identifier for the segment.
        ImportDefinition:
          $ref: '#/components/schemas/SegmentResponse_ImportDefinition'
        LastModifiedDate:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The date and time when the segment was last modified.
        Name:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The name of the segment.
        SegmentGroups:
          $ref: '#/components/schemas/SegmentResponse_SegmentGroups'
        SegmentType:
          allOf:
          - $ref: '#/components/schemas/SegmentType'
          - description: "<p>The segment type. Valid values are:</p> <ul><li><p>DIMENSIONAL\
              \ - A dynamic segment, which is a segment that uses selection criteria\
              \ that you specify and is based on endpoint data that's reported by\
              \ your app. Dynamic segments can change over time.</p></li> <li><p>IMPORT\
              \ - A static segment, which is a segment that uses selection criteria\
              \ that you specify and is based on endpoint definitions that you import\
              \ from a file. Imported segments are static; they don't change over\
              \ time.</p></li></ul>"
        tags:
          allOf:
          - $ref: '#/components/schemas/MapOf__string'
          - description: A string-to-string map of key-value pairs that identifies
              the tags that are associated with the segment. Each tag consists of
              a required tag key and an associated tag value.
        Version:
          allOf:
          - $ref: '#/components/schemas/__integer'
          - description: The version number of the segment.
      required:
      - ApplicationId
      - Arn
      - CreationDate
      - Id
      - SegmentType
      type: object
    SMSTemplateRequest:
      description: Specifies the content and settings for a message template that
        can be used in text messages that are sent through the SMS channel.
      example:
        RecommenderId: ""
        DefaultSubstitutions: ""
        TemplateDescription: ""
        Body: ""
        tags: ""
      properties:
        Body:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The message body to use in text messages that are based on
              the message template.
        DefaultSubstitutions:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: "A JSON object that specifies the default values to use for\
              \ message variables in the message template. This object is a set of\
              \ key-value pairs. Each key defines a message variable in the template.\
              \ The corresponding value defines the default value for that variable.\
              \ When you create a message that's based on the template, you can override\
              \ these defaults with message-specific and address-specific variables\
              \ and values."
        RecommenderId:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: "The unique identifier for the recommender model to use for\
              \ the message template. Amazon Pinpoint uses this value to determine\
              \ how to retrieve and process data from a recommender model when it\
              \ sends messages that use the template, if the template contains message\
              \ variables for recommendation data."
        tags:
          allOf:
          - $ref: '#/components/schemas/MapOf__string'
          - description: "<note><p>As of <b>22-05-2023</b> tags has been deprecated\
              \ for update operations. After this date any value in tags is not processed\
              \ and an error code is not returned. To manage tags we recommend using\
              \ either <a href=\"https://docs.aws.amazon.com/pinpoint/latest/apireference/tags-resource-arn.html\"\
              >Tags</a> in the <i>API Reference for Amazon Pinpoint</i>, <a href=\"\
              https://docs.aws.amazon.com/cli/latest/reference/resourcegroupstaggingapi/index.html\"\
              >resourcegroupstaggingapi</a> commands in the <i>AWS Command Line Interface\
              \ Documentation</i> or <a href=\"https://sdk.amazonaws.com/java/api/latest/software/amazon/awssdk/services/resourcegroupstaggingapi/package-summary.html\"\
              >resourcegroupstaggingapi</a> in the <i>AWS SDK</i>.</p></note> <p>(Deprecated)\
              \ A string-to-string map of key-value pairs that defines the tags to\
              \ associate with the message template. Each tag consists of a required\
              \ tag key and an associated tag value.</p>"
        TemplateDescription:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: A custom description of the message template.
      type: object
    CreateSmsTemplateRequest:
      properties:
        SMSTemplateRequest:
          $ref: '#/components/schemas/SMSTemplateRequest'
      required:
      - SMSTemplateRequest
      title: CreateSmsTemplateRequest
      type: object
    VoiceTemplateRequest:
      description: Specifies the content and settings for a message template that
        can be used in messages that are sent through the voice channel.
      example:
        LanguageCode: ""
        VoiceId: ""
        DefaultSubstitutions: ""
        TemplateDescription: ""
        Body: ""
        tags: ""
      properties:
        Body:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: "The text of the script to use in messages that are based\
              \ on the message template, in plain text format."
        DefaultSubstitutions:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: "A JSON object that specifies the default values to use for\
              \ message variables in the message template. This object is a set of\
              \ key-value pairs. Each key defines a message variable in the template.\
              \ The corresponding value defines the default value for that variable.\
              \ When you create a message that's based on the template, you can override\
              \ these defaults with message-specific and address-specific variables\
              \ and values."
        LanguageCode:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: "The code for the language to use when synthesizing the text\
              \ of the script in messages that are based on the message template.\
              \ For a list of supported languages and the code for each one, see the\
              \ <a href=\"https://docs.aws.amazon.com/polly/latest/dg/what-is.html\"\
              >Amazon Polly Developer Guide</a>."
        tags:
          allOf:
          - $ref: '#/components/schemas/MapOf__string'
          - description: "<note><p>As of <b>22-05-2023</b> tags has been deprecated\
              \ for update operations. After this date any value in tags is not processed\
              \ and an error code is not returned. To manage tags we recommend using\
              \ either <a href=\"https://docs.aws.amazon.com/pinpoint/latest/apireference/tags-resource-arn.html\"\
              >Tags</a> in the <i>API Reference for Amazon Pinpoint</i>, <a href=\"\
              https://docs.aws.amazon.com/cli/latest/reference/resourcegroupstaggingapi/index.html\"\
              >resourcegroupstaggingapi</a> commands in the <i>AWS Command Line Interface\
              \ Documentation</i> or <a href=\"https://sdk.amazonaws.com/java/api/latest/software/amazon/awssdk/services/resourcegroupstaggingapi/package-summary.html\"\
              >resourcegroupstaggingapi</a> in the <i>AWS SDK</i>.</p></note> <p>(Deprecated)\
              \ A string-to-string map of key-value pairs that defines the tags to\
              \ associate with the message template. Each tag consists of a required\
              \ tag key and an associated tag value.</p>"
        TemplateDescription:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: A custom description of the message template.
        VoiceId:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: "The name of the voice to use when delivering messages that\
              \ are based on the message template. For a list of supported voices,\
              \ see the <a href=\"https://docs.aws.amazon.com/polly/latest/dg/what-is.html\"\
              >Amazon Polly Developer Guide</a>."
      type: object
    CreateVoiceTemplateRequest:
      properties:
        VoiceTemplateRequest:
          $ref: '#/components/schemas/VoiceTemplateRequest'
      required:
      - VoiceTemplateRequest
      title: CreateVoiceTemplateRequest
      type: object
    ListOf__EndpointTypesElement:
      items:
        $ref: '#/components/schemas/__EndpointTypesElement'
      type: array
    JourneyCustomMessage:
      description: Specifies the message content for a custom channel message that's
        sent to participants in a journey.
      properties:
        Data:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The message content that's passed to an AWS Lambda function
              or to a web hook.
      type: object
    DefaultButtonConfiguration:
      description: Default button configuration.
      properties:
        BackgroundColor:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The background color of the button.
        BorderRadius:
          allOf:
          - $ref: '#/components/schemas/__integer'
          - description: The border radius of the button.
        ButtonAction:
          allOf:
          - $ref: '#/components/schemas/ButtonAction'
          - description: Action triggered by the button.
        Link:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: Button destination.
        Text:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: Button text.
        TextColor:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The text color of the button.
      required:
      - ButtonAction
      - Text
      type: object
    DefaultMessage:
      description: Specifies the default message for all channels.
      properties:
        Body:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The default body of the message.
        Substitutions:
          allOf:
          - $ref: '#/components/schemas/MapOfListOf__string'
          - description: The default message variables to use in the message. You
              can override these default variables with individual address variables.
      type: object
    DefaultPushNotificationMessage:
      description: Specifies the default settings and content for a push notification
        that's sent directly to an endpoint.
      properties:
        Action:
          allOf:
          - $ref: '#/components/schemas/Action'
          - description: <p>The default action to occur if a recipient taps the push
              notification. Valid values are:</p> <ul><li><p>OPEN_APP - Your app opens
              or it becomes the foreground app if it was sent to the background. This
              is the default action.</p></li> <li><p>DEEP_LINK - Your app opens and
              displays a designated user interface in the app. This setting uses the
              deep-linking features of the iOS and Android platforms.</p></li> <li><p>URL
              - The default mobile browser on the recipient's device opens and loads
              the web page at a URL that you specify.</p></li></ul>
        Body:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The default body of the notification message.
        Data:
          allOf:
          - $ref: '#/components/schemas/MapOf__string'
          - description: "The JSON data payload to use for the default push notification,\
              \ if the notification is a silent push notification. This payload is\
              \ added to the data.pinpoint.jsonBody object of the notification."
        SilentPush:
          allOf:
          - $ref: '#/components/schemas/__boolean'
          - description: "Specifies whether the default notification is a silent push\
              \ notification, which is a push notification that doesn't display on\
              \ a recipient's device. Silent push notifications can be used for cases\
              \ such as updating an app's configuration or delivering messages to\
              \ an in-app notification center."
        Substitutions:
          allOf:
          - $ref: '#/components/schemas/MapOfListOf__string'
          - description: The default message variables to use in the notification
              message. You can override the default variables with individual address
              variables.
        Title:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The default title to display above the notification message
              on a recipient's device.
        Url:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: "The default URL to open in a recipient's default mobile\
              \ browser, if a recipient taps the push notification and the value of\
              \ the Action property is URL."
      type: object
    DeleteAdmChannelRequest:
      properties: {}
      title: DeleteAdmChannelRequest
      type: object
    DeleteApnsChannelRequest:
      properties: {}
      title: DeleteApnsChannelRequest
      type: object
    DeleteApnsSandboxChannelRequest:
      properties: {}
      title: DeleteApnsSandboxChannelRequest
      type: object
    DeleteApnsVoipChannelRequest:
      properties: {}
      title: DeleteApnsVoipChannelRequest
      type: object
    DeleteApnsVoipSandboxChannelRequest:
      properties: {}
      title: DeleteApnsVoipSandboxChannelRequest
      type: object
    DeleteAppRequest:
      properties: {}
      title: DeleteAppRequest
      type: object
    DeleteBaiduChannelRequest:
      properties: {}
      title: DeleteBaiduChannelRequest
      type: object
    DeleteCampaignRequest:
      properties: {}
      title: DeleteCampaignRequest
      type: object
    DeleteEmailChannelRequest:
      properties: {}
      title: DeleteEmailChannelRequest
      type: object
    EmailChannelResponse:
      description: Provides information about the status and settings of the email
        channel for an application.
      example:
        CreationDate: ""
        LastModifiedBy: ""
        LastModifiedDate: ""
        Platform: ""
        MessagesPerSecond: ""
        Enabled: ""
        HasCredential: ""
        RoleArn: ""
        IsArchived: ""
        ConfigurationSet: ""
        FromAddress: ""
        Version: ""
        Id: ""
        ApplicationId: ""
        Identity: ""
      properties:
        ApplicationId:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The unique identifier for the application that the email
              channel applies to.
        ConfigurationSet:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The <a href="https://docs.aws.amazon.com/ses/latest/APIReference/API_ConfigurationSet.html">Amazon
              SES configuration set</a> that's applied to messages that are sent through
              the channel.
        CreationDate:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: "The date and time, in ISO 8601 format, when the email channel\
              \ was enabled."
        Enabled:
          allOf:
          - $ref: '#/components/schemas/__boolean'
          - description: Specifies whether the email channel is enabled for the application.
        FromAddress:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The verified email address that email is sent from when you
              send email through the channel.
        HasCredential:
          allOf:
          - $ref: '#/components/schemas/__boolean'
          - description: (Not used) This property is retained only for backward compatibility.
        Id:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: (Deprecated) An identifier for the email channel. This property
              is retained only for backward compatibility.
        Identity:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: " <p>The Amazon Resource Name (ARN) of the identity, verified\
              \ with Amazon Simple Email Service (Amazon SES), that's used when you\
              \ send email through the channel.</p>"
        IsArchived:
          allOf:
          - $ref: '#/components/schemas/__boolean'
          - description: Specifies whether the email channel is archived.
        LastModifiedBy:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The user who last modified the email channel.
        LastModifiedDate:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: "The date and time, in ISO 8601 format, when the email channel\
              \ was last modified."
        MessagesPerSecond:
          allOf:
          - $ref: '#/components/schemas/__integer'
          - description: The maximum number of emails that can be sent through the
              channel each second.
        Platform:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: "The type of messaging or notification platform for the channel.\
              \ For the email channel, this value is EMAIL."
        RoleArn:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: ' <p>The ARN of the AWS Identity and Access Management (IAM)
              role that Amazon Pinpoint uses to submit email-related event data for
              the channel.</p>'
        Version:
          allOf:
          - $ref: '#/components/schemas/__integer'
          - description: The current version of the email channel.
      required:
      - Platform
      type: object
    DeleteEmailTemplateRequest:
      properties: {}
      title: DeleteEmailTemplateRequest
      type: object
    MessageBody:
      description: Provides information about an API request or response.
      example:
        Message: ""
        RequestID: ""
      properties:
        Message:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The message that's returned from the API.
        RequestID:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The unique identifier for the request or response.
      type: object
    DeleteEndpointRequest:
      properties: {}
      title: DeleteEndpointRequest
      type: object
    EndpointResponse:
      description: Provides information about the channel type and other settings
        for an endpoint.
      example:
        CreationDate: ""
        User:
          UserId: ""
          UserAttributes: ""
        Address: ""
        RequestId: ""
        Attributes: ""
        EndpointStatus: ""
        Demographic:
          AppVersion: ""
          Locale: ""
          PlatformVersion: ""
          Timezone: ""
          Platform: ""
          Model: ""
          Make: ""
          ModelVersion: ""
        Metrics: ""
        OptOut: ""
        Id: ""
        ApplicationId: ""
        CohortId: ""
        ChannelType: ""
        EffectiveDate: ""
        Location:
          Country: ""
          PostalCode: ""
          Region: ""
          Latitude: ""
          City: ""
          Longitude: ""
      properties:
        Address:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: "The destination address for messages or push notifications\
              \ that you send to the endpoint. The address varies by channel. For\
              \ example, the address for a push-notification channel is typically\
              \ the token provided by a push notification service, such as an Apple\
              \ Push Notification service (APNs) device token or a Firebase Cloud\
              \ Messaging (FCM) registration token. The address for the SMS channel\
              \ is a phone number in E.164 format, such as +12065550100. The address\
              \ for the email channel is an email address."
        ApplicationId:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The unique identifier for the application that's associated
              with the endpoint.
        Attributes:
          allOf:
          - $ref: '#/components/schemas/MapOfListOf__string'
          - description: "One or more custom attributes that describe the endpoint\
              \ by associating a name with an array of values. For example, the value\
              \ of a custom attribute named Interests might be: [\"Science\", \"Music\"\
              , \"Travel\"]. You can use these attributes as filter criteria when\
              \ you create segments."
        ChannelType:
          allOf:
          - $ref: '#/components/schemas/ChannelType'
          - description: The channel that's used when sending messages or push notifications
              to the endpoint.
        CohortId:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: "A number from 0-99 that represents the cohort that the endpoint\
              \ is assigned to. Endpoints are grouped into cohorts randomly, and each\
              \ cohort contains approximately 1 percent of the endpoints for an application.\
              \ Amazon Pinpoint assigns cohorts to the holdout or treatment allocations\
              \ for campaigns."
        CreationDate:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: "The date and time, in ISO 8601 format, when the endpoint\
              \ was created."
        Demographic:
          $ref: '#/components/schemas/UpdateEndpoint_request_EndpointRequest_Demographic'
        EffectiveDate:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: "The date and time, in ISO 8601 format, when the endpoint\
              \ was last updated."
        EndpointStatus:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: "<p>Specifies whether messages or push notifications are\
              \ sent to the endpoint. Possible values are: ACTIVE, messages are sent\
              \ to the endpoint; and, INACTIVE, messages aren’t sent to the endpoint.</p>\
              \ <p>Amazon Pinpoint automatically sets this value to ACTIVE when you\
              \ create an endpoint or update an existing endpoint. Amazon Pinpoint\
              \ automatically sets this value to INACTIVE if you update another endpoint\
              \ that has the same address specified by the Address property.</p>"
        Id:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The unique identifier that you assigned to the endpoint.
              The identifier should be a globally unique identifier (GUID) to ensure
              that it doesn't conflict with other endpoint identifiers that are associated
              with the application.
        Location:
          $ref: '#/components/schemas/UpdateEndpoint_request_EndpointRequest_Location'
        Metrics:
          allOf:
          - $ref: '#/components/schemas/MapOf__double'
          - description: One or more custom metrics that your app reports to Amazon
              Pinpoint for the endpoint.
        OptOut:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: "Specifies whether the user who's associated with the endpoint\
              \ has opted out of receiving messages and push notifications from you.\
              \ Possible values are: ALL, the user has opted out and doesn't want\
              \ to receive any messages or push notifications; and, NONE, the user\
              \ hasn't opted out and wants to receive all messages and push notifications."
        RequestId:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The unique identifier for the most recent request to update
              the endpoint.
        User:
          $ref: '#/components/schemas/EndpointResponse_User'
      type: object
    DeleteEventStreamRequest:
      properties: {}
      title: DeleteEventStreamRequest
      type: object
    EventStream:
      description: Specifies settings for publishing event data to an Amazon Kinesis
        data stream or an Amazon Kinesis Data Firehose delivery stream.
      example:
        LastUpdatedBy: ""
        LastModifiedDate: ""
        ExternalId: ""
        ApplicationId: ""
        DestinationStreamArn: ""
        RoleArn: ""
      properties:
        ApplicationId:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The unique identifier for the application to publish event
              data for.
        DestinationStreamArn:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: |-
              <p>The Amazon Resource Name (ARN) of the Amazon Kinesis data stream or Amazon Kinesis Data Firehose delivery stream to publish event data to.</p> <p>For a Kinesis data stream, the ARN format is: arn:aws:kinesis:<replaceable>region</replaceable>:<replaceable>account-id</replaceable>:stream/<replaceable>stream_name</replaceable>
                             </p> <p>For a Kinesis Data Firehose delivery stream, the ARN format is: arn:aws:firehose:<replaceable>region</replaceable>:<replaceable>account-id</replaceable>:deliverystream/<replaceable>stream_name</replaceable>
                             </p>
        ExternalId:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: "(Deprecated) Your AWS account ID, which you assigned to\
              \ an external ID key in an IAM trust policy. Amazon Pinpoint previously\
              \ used this value to assume an IAM role when publishing event data,\
              \ but we removed this requirement. We don't recommend use of external\
              \ IDs for IAM roles that are assumed by Amazon Pinpoint."
        LastModifiedDate:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: "The date, in ISO 8601 format, when the event stream was\
              \ last modified."
        LastUpdatedBy:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The IAM user who last modified the event stream.
        RoleArn:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The AWS Identity and Access Management (IAM) role that authorizes
              Amazon Pinpoint to publish event data to the stream in your AWS account.
      required:
      - ApplicationId
      - DestinationStreamArn
      - RoleArn
      type: object
    DeleteGcmChannelRequest:
      properties: {}
      title: DeleteGcmChannelRequest
      type: object
    GCMChannelResponse:
      description: "Provides information about the status and settings of the GCM\
        \ channel for an application. The GCM channel enables Amazon Pinpoint to send\
        \ push notifications through the Firebase Cloud Messaging (FCM), formerly\
        \ Google Cloud Messaging (GCM), service."
      example:
        CreationDate: ""
        LastModifiedBy: ""
        LastModifiedDate: ""
        Credential: ""
        Platform: ""
        DefaultAuthenticationMethod: ""
        Enabled: ""
        HasCredential: ""
        IsArchived: ""
        Version: ""
        HasFcmServiceCredentials: ""
        Id: ""
        ApplicationId: ""
      properties:
        ApplicationId:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The unique identifier for the application that the GCM channel
              applies to.
        CreationDate:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The date and time when the GCM channel was enabled.
        Credential:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: "The Web API Key, also referred to as an <i>API_KEY</i> or\
              \ <i>server key</i>, that you received from Google to communicate with\
              \ Google services."
        DefaultAuthenticationMethod:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The default authentication method used for GCM. Values are
              either "TOKEN" or "KEY". Defaults to "KEY".
        Enabled:
          allOf:
          - $ref: '#/components/schemas/__boolean'
          - description: Specifies whether the GCM channel is enabled for the application.
        HasCredential:
          allOf:
          - $ref: '#/components/schemas/__boolean'
          - description: (Not used) This property is retained only for backward compatibility.
        HasFcmServiceCredentials:
          allOf:
          - $ref: '#/components/schemas/__boolean'
          - description: Returns true if the JSON file provided by Google during registration
              process was used in the <b>ServiceJson</b> field of the request.
        Id:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: (Deprecated) An identifier for the GCM channel. This property
              is retained only for backward compatibility.
        IsArchived:
          allOf:
          - $ref: '#/components/schemas/__boolean'
          - description: Specifies whether the GCM channel is archived.
        LastModifiedBy:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The user who last modified the GCM channel.
        LastModifiedDate:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The date and time when the GCM channel was last modified.
        Platform:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: "The type of messaging or notification platform for the channel.\
              \ For the GCM channel, this value is GCM."
        Version:
          allOf:
          - $ref: '#/components/schemas/__integer'
          - description: The current version of the GCM channel.
      required:
      - Platform
      type: object
    DeleteInAppTemplateRequest:
      properties: {}
      title: DeleteInAppTemplateRequest
      type: object
    DeleteJourneyRequest:
      properties: {}
      title: DeleteJourneyRequest
      type: object
    DeletePushTemplateRequest:
      properties: {}
      title: DeletePushTemplateRequest
      type: object
    DeleteRecommenderConfigurationRequest:
      properties: {}
      title: DeleteRecommenderConfigurationRequest
      type: object
    DeleteSegmentRequest:
      properties: {}
      title: DeleteSegmentRequest
      type: object
    DeleteSmsChannelRequest:
      properties: {}
      title: DeleteSmsChannelRequest
      type: object
    SMSChannelResponse:
      description: Provides information about the status and settings of the SMS channel
        for an application.
      example:
        ShortCode: ""
        CreationDate: ""
        LastModifiedBy: ""
        LastModifiedDate: ""
        Platform: ""
        Enabled: ""
        HasCredential: ""
        PromotionalMessagesPerSecond: ""
        SenderId: ""
        IsArchived: ""
        Version: ""
        TransactionalMessagesPerSecond: ""
        Id: ""
        ApplicationId: ""
      properties:
        ApplicationId:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The unique identifier for the application that the SMS channel
              applies to.
        CreationDate:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: "The date and time, in ISO 8601 format, when the SMS channel\
              \ was enabled."
        Enabled:
          allOf:
          - $ref: '#/components/schemas/__boolean'
          - description: Specifies whether the SMS channel is enabled for the application.
        HasCredential:
          allOf:
          - $ref: '#/components/schemas/__boolean'
          - description: (Not used) This property is retained only for backward compatibility.
        Id:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: (Deprecated) An identifier for the SMS channel. This property
              is retained only for backward compatibility.
        IsArchived:
          allOf:
          - $ref: '#/components/schemas/__boolean'
          - description: Specifies whether the SMS channel is archived.
        LastModifiedBy:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The user who last modified the SMS channel.
        LastModifiedDate:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: "The date and time, in ISO 8601 format, when the SMS channel\
              \ was last modified."
        Platform:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: "The type of messaging or notification platform for the channel.\
              \ For the SMS channel, this value is SMS."
        PromotionalMessagesPerSecond:
          allOf:
          - $ref: '#/components/schemas/__integer'
          - description: The maximum number of promotional messages that you can send
              through the SMS channel each second.
        SenderId:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The identity that displays on recipients' devices when they
              receive messages from the SMS channel.
        ShortCode:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The registered short code to use when you send messages through
              the SMS channel.
        TransactionalMessagesPerSecond:
          allOf:
          - $ref: '#/components/schemas/__integer'
          - description: The maximum number of transactional messages that you can
              send through the SMS channel each second.
        Version:
          allOf:
          - $ref: '#/components/schemas/__integer'
          - description: The current version of the SMS channel.
      required:
      - Platform
      type: object
    DeleteSmsTemplateRequest:
      properties: {}
      title: DeleteSmsTemplateRequest
      type: object
    DeleteUserEndpointsRequest:
      properties: {}
      title: DeleteUserEndpointsRequest
      type: object
    EndpointsResponse:
      description: Provides information about all the endpoints that are associated
        with a user ID.
      example:
        Item: ""
      properties:
        Item:
          allOf:
          - $ref: '#/components/schemas/ListOfEndpointResponse'
          - description: "An array of responses, one for each endpoint that's associated\
              \ with the user ID."
      required:
      - Item
      type: object
    DeleteVoiceChannelRequest:
      properties: {}
      title: DeleteVoiceChannelRequest
      type: object
    VoiceChannelResponse:
      description: Provides information about the status and settings of the voice
        channel for an application.
      example:
        IsArchived: ""
        CreationDate: ""
        LastModifiedBy: ""
        LastModifiedDate: ""
        Platform: ""
        Version: ""
        Enabled: ""
        HasCredential: ""
        Id: ""
        ApplicationId: ""
      properties:
        ApplicationId:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The unique identifier for the application that the voice
              channel applies to.
        CreationDate:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: "The date and time, in ISO 8601 format, when the voice channel\
              \ was enabled."
        Enabled:
          allOf:
          - $ref: '#/components/schemas/__boolean'
          - description: Specifies whether the voice channel is enabled for the application.
        HasCredential:
          allOf:
          - $ref: '#/components/schemas/__boolean'
          - description: (Not used) This property is retained only for backward compatibility.
        Id:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: (Deprecated) An identifier for the voice channel. This property
              is retained only for backward compatibility.
        IsArchived:
          allOf:
          - $ref: '#/components/schemas/__boolean'
          - description: Specifies whether the voice channel is archived.
        LastModifiedBy:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The user who last modified the voice channel.
        LastModifiedDate:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: "The date and time, in ISO 8601 format, when the voice channel\
              \ was last modified."
        Platform:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: "The type of messaging or notification platform for the channel.\
              \ For the voice channel, this value is VOICE."
        Version:
          allOf:
          - $ref: '#/components/schemas/__integer'
          - description: The current version of the voice channel.
      required:
      - Platform
      type: object
    DeleteVoiceTemplateRequest:
      properties: {}
      title: DeleteVoiceTemplateRequest
      type: object
    DeliveryStatus:
      enum:
      - SUCCESSFUL
      - THROTTLED
      - TEMPORARY_FAILURE
      - PERMANENT_FAILURE
      - UNKNOWN_FAILURE
      - OPT_OUT
      - DUPLICATE
      type: string
    DimensionType:
      enum:
      - INCLUSIVE
      - EXCLUSIVE
      type: string
    EmailMessage:
      description: Specifies the default settings and content for a one-time email
        message that's sent directly to an endpoint.
      properties:
        Body:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The body of the email message.
        FeedbackForwardingAddress:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: "The email address to forward bounces and complaints to,\
              \ if feedback forwarding is enabled."
        FromAddress:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The verified email address to send the email message from.
              The default value is the FromAddress specified for the email channel.
        RawEmail:
          $ref: '#/components/schemas/EmailMessage_RawEmail'
        ReplyToAddresses:
          allOf:
          - $ref: '#/components/schemas/ListOf__string'
          - description: "The reply-to email address(es) for the email message. If\
              \ a recipient replies to the email, each reply-to address receives the\
              \ reply."
        SimpleEmail:
          $ref: '#/components/schemas/EmailMessage_SimpleEmail'
        Substitutions:
          allOf:
          - $ref: '#/components/schemas/MapOfListOf__string'
          - description: The default message variables to use in the email message.
              You can override the default variables with individual address variables.
      type: object
    GCMMessage:
      description: "Specifies the settings for a one-time message that's sent directly\
        \ to an endpoint through the GCM channel. The GCM channel enables Amazon Pinpoint\
        \ to send messages to the Firebase Cloud Messaging (FCM), formerly Google\
        \ Cloud Messaging (GCM), service."
      properties:
        Action:
          allOf:
          - $ref: '#/components/schemas/Action'
          - description: <p>The action to occur if the recipient taps the push notification.
              Valid values are:</p> <ul><li><p>OPEN_APP - Your app opens or it becomes
              the foreground app if it was sent to the background. This is the default
              action.</p></li> <li><p>DEEP_LINK - Your app opens and displays a designated
              user interface in the app. This action uses the deep-linking features
              of the Android platform.</p></li> <li><p>URL - The default mobile browser
              on the recipient's device opens and loads the web page at a URL that
              you specify.</p></li></ul>
        Body:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The body of the notification message.
        CollapseKey:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: <p>An arbitrary string that identifies a group of messages
              that can be collapsed to ensure that only the last message is sent when
              delivery can resume. This helps avoid sending too many instances of
              the same messages when the recipient's device comes online again or
              becomes active.</p> <p>Amazon Pinpoint specifies this value in the Firebase
              Cloud Messaging (FCM) collapse_key parameter when it sends the notification
              message to FCM.</p>
        Data:
          allOf:
          - $ref: '#/components/schemas/MapOf__string'
          - description: "The JSON data payload to use for the push notification,\
              \ if the notification is a silent push notification. This payload is\
              \ added to the data.pinpoint.jsonBody object of the notification."
        IconReference:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The icon image name of the asset saved in your app.
        ImageIconUrl:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The URL of the large icon image to display in the content
              view of the push notification.
        ImageUrl:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The URL of an image to display in the push notification.
        PreferredAuthenticationMethod:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: "The preferred authentication method, with valid values \"\
              KEY\" or \"TOKEN\". If a value isn't provided then the <b>DefaultAuthenticationMethod</b>\
              \ is used."
        Priority:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: "<p>para>normal – The notification might be delayed. Delivery\
              \ is optimized for battery usage on the recipient's device. Use this\
              \ value unless immediate delivery is required.</p>/listitem> <li><p>high\
              \ – The notification is sent immediately and might wake a sleeping device.</p></li>/para>\
              \ <p>Amazon Pinpoint specifies this value in the FCM priority parameter\
              \ when it sends the notification message to FCM.</p> <p>The equivalent\
              \ values for Apple Push Notification service (APNs) are 5, for normal,\
              \ and 10, for high. If you specify an APNs value for this property,\
              \ Amazon Pinpoint accepts and converts the value to the corresponding\
              \ FCM value.</p>"
        RawContent:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: "The raw, JSON-formatted string to use as the payload for\
              \ the notification message. If specified, this value overrides all other\
              \ content for the message."
        RestrictedPackageName:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The package name of the application where registration tokens
              must match in order for the recipient to receive the message.
        SilentPush:
          allOf:
          - $ref: '#/components/schemas/__boolean'
          - description: "Specifies whether the notification is a silent push notification,\
              \ which is a push notification that doesn't display on a recipient's\
              \ device. Silent push notifications can be used for cases such as updating\
              \ an app's configuration or supporting phone home functionality."
        SmallImageIconUrl:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The URL of the small icon image to display in the status
              bar and the content view of the push notification.
        Sound:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: "The sound to play when the recipient receives the push notification.\
              \ You can use the default stream or specify the file name of a sound\
              \ resource that's bundled in your app. On an Android platform, the sound\
              \ file must reside in /res/raw/."
        Substitutions:
          allOf:
          - $ref: '#/components/schemas/MapOfListOf__string'
          - description: The default message variables to use in the notification
              message. You can override the default variables with individual address
              variables.
        TimeToLive:
          allOf:
          - $ref: '#/components/schemas/__integer'
          - description: "<p>The amount of time, in seconds, that FCM should store\
              \ and attempt to deliver the push notification, if the service is unable\
              \ to deliver the notification the first time. If you don't specify this\
              \ value, FCM defaults to the maximum value, which is 2,419,200 seconds\
              \ (28 days).</p> <p>Amazon Pinpoint specifies this value in the FCM\
              \ time_to_live parameter when it sends the notification message to FCM.</p>"
        Title:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The title to display above the notification message on the
              recipient's device.
        Url:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: "The URL to open in the recipient's default mobile browser,\
              \ if a recipient taps the push notification and the value of the Action\
              \ property is URL."
      type: object
    SMSMessage:
      description: Specifies the default settings for a one-time SMS message that's
        sent directly to an endpoint.
      properties:
        Body:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The body of the SMS message.
        Keyword:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The SMS program name that you provided to AWS Support when
              you requested your dedicated number.
        MediaUrl:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: This field is reserved for future use.
        MessageType:
          allOf:
          - $ref: '#/components/schemas/MessageType'
          - description: "The SMS message type. Valid values are TRANSACTIONAL (for\
              \ messages that are critical or time-sensitive, such as a one-time passwords)\
              \ and PROMOTIONAL (for messsages that aren't critical or time-sensitive,\
              \ such as marketing messages)."
        OriginationNumber:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: "The number to send the SMS message from. This value should\
              \ be one of the dedicated long or short codes that's assigned to your\
              \ AWS account. If you don't specify a long or short code, Amazon Pinpoint\
              \ assigns a random long code to the SMS message and sends the message\
              \ from that code."
        SenderId:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The sender ID to display as the sender of the message on
              a recipient's device. Support for sender IDs varies by country or region.
        Substitutions:
          allOf:
          - $ref: '#/components/schemas/MapOfListOf__string'
          - description: The message variables to use in the SMS message. You can
              override the default variables with individual address variables.
        EntityId:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The entity ID or Principal Entity (PE) id received from the
              regulatory body for sending SMS in your country.
        TemplateId:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The template ID received from the regulatory body for sending
              SMS in your country.
      type: object
    VoiceMessage:
      description: Specifies the settings for a one-time voice message that's sent
        directly to an endpoint through the voice channel.
      properties:
        Body:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The text of the script to use for the voice message.
        LanguageCode:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: "The code for the language to use when synthesizing the text\
              \ of the message script. For a list of supported languages and the code\
              \ for each one, see the <a href=\"https://docs.aws.amazon.com/polly/latest/dg/what-is.html\"\
              >Amazon Polly Developer Guide</a>."
        OriginationNumber:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: "The long code to send the voice message from. This value\
              \ should be one of the dedicated long codes that's assigned to your\
              \ AWS account. Although it isn't required, we recommend that you specify\
              \ the long code in E.164 format, for example +12065550100, to ensure\
              \ prompt and accurate delivery of the message."
        Substitutions:
          allOf:
          - $ref: '#/components/schemas/MapOfListOf__string'
          - description: The default message variables to use in the voice message.
              You can override the default variables with individual address variables.
        VoiceId:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: "The name of the voice to use when delivering the message.\
              \ For a list of supported voices, see the <a href=\"https://docs.aws.amazon.com/polly/latest/dg/what-is.html\"\
              >Amazon Polly Developer Guide</a>."
      type: object
    Duration:
      enum:
      - HR_24
      - DAY_7
      - DAY_14
      - DAY_30
      type: string
    EmailChannelRequest:
      description: Specifies the status and settings of the email channel for an application.
      example:
        ConfigurationSet: ""
        FromAddress: ""
        Enabled: ""
        Identity: ""
        RoleArn: ""
      properties:
        ConfigurationSet:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The <a href="https://docs.aws.amazon.com/ses/latest/APIReference/API_ConfigurationSet.html">Amazon
              SES configuration set</a> that you want to apply to messages that you
              send through the channel.
        Enabled:
          allOf:
          - $ref: '#/components/schemas/__boolean'
          - description: Specifies whether to enable the email channel for the application.
        FromAddress:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: ' <p>The verified email address that you want to send email
              from when you send email through the channel.</p>'
        Identity:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: " <p>The Amazon Resource Name (ARN) of the identity, verified\
              \ with Amazon Simple Email Service (Amazon SES), that you want to use\
              \ when you send email through the channel.</p>"
        RoleArn:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: ' <p>The ARN of the AWS Identity and Access Management (IAM)
              role that you want Amazon Pinpoint to use when it submits email-related
              event data for the channel.</p>'
      required:
      - FromAddress
      - Identity
      type: object
    RawEmail:
      description: "Specifies the contents of an email message, represented as a raw\
        \ MIME message."
      properties:
        Data:
          allOf:
          - $ref: '#/components/schemas/__blob'
          - description: "The email message, represented as a raw MIME message. The\
              \ entire message must be base64 encoded."
      type: object
    SimpleEmail:
      description: "Specifies the contents of an email message, composed of a subject,\
        \ a text part, and an HTML part."
      properties:
        HtmlPart:
          $ref: '#/components/schemas/SimpleEmail_HtmlPart'
        Subject:
          $ref: '#/components/schemas/SimpleEmail_Subject'
        TextPart:
          $ref: '#/components/schemas/SimpleEmail_TextPart'
      type: object
    JourneyEmailMessage:
      description: Specifies the "From" address for an email message that's sent to
        participants in a journey.
      properties:
        FromAddress:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The verified email address to send the email message from.
              The default address is the FromAddress specified for the email channel
              for the application.
      type: object
    TemplateType:
      enum:
      - EMAIL
      - SMS
      - VOICE
      - PUSH
      - INAPP
      type: string
    EmailTemplateResponse:
      description: Provides information about the content and settings for a message
        template that can be used in messages that are sent through the email channel.
      example:
        CreationDate: ""
        HtmlPart: ""
        LastModifiedDate: ""
        TextPart: ""
        TemplateDescription: ""
        TemplateType: ""
        Subject: ""
        tags: ""
        RecommenderId: ""
        Version: ""
        TemplateName: ""
        DefaultSubstitutions: ""
        Arn: ""
      properties:
        Arn:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The Amazon Resource Name (ARN) of the message template.
        CreationDate:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: "The date, in ISO 8601 format, when the message template\
              \ was created."
        DefaultSubstitutions:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The JSON object that specifies the default values that are
              used for message variables in the message template. This object is a
              set of key-value pairs. Each key defines a message variable in the template.
              The corresponding value defines the default value for that variable.
        HtmlPart:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: "The message body, in HTML format, that's used in email messages\
              \ that are based on the message template."
        LastModifiedDate:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: "The date, in ISO 8601 format, when the message template\
              \ was last modified."
        RecommenderId:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The unique identifier for the recommender model that's used
              by the message template.
        Subject:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: "The subject line, or title, that's used in email messages\
              \ that are based on the message template."
        tags:
          allOf:
          - $ref: '#/components/schemas/MapOf__string'
          - description: A string-to-string map of key-value pairs that identifies
              the tags that are associated with the message template. Each tag consists
              of a required tag key and an associated tag value.
        TemplateDescription:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The custom description of the message template.
        TemplateName:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The name of the message template.
        TemplateType:
          allOf:
          - $ref: '#/components/schemas/TemplateType'
          - description: "The type of channel that the message template is designed\
              \ for. For an email template, this value is EMAIL."
        TextPart:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: "The message body, in plain text format, that's used in email\
              \ messages that are based on the message template."
        Version:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: "The unique identifier, as an integer, for the active version\
              \ of the message template, or the version of the template that you specified\
              \ by using the version parameter in your request."
      required:
      - CreationDate
      - LastModifiedDate
      - TemplateName
      - TemplateType
      type: object
    EndpointBatchItem:
      description: Specifies an endpoint to create or update and the settings and
        attributes to set or change for the endpoint.
      properties:
        Address:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: "The destination address for messages or push notifications\
              \ that you send to the endpoint. The address varies by channel. For\
              \ a push-notification channel, use the token provided by the push notification\
              \ service, such as an Apple Push Notification service (APNs) device\
              \ token or a Firebase Cloud Messaging (FCM) registration token. For\
              \ the SMS channel, use a phone number in E.164 format, such as +12065550100.\
              \ For the email channel, use an email address."
        Attributes:
          allOf:
          - $ref: '#/components/schemas/MapOfListOf__string'
          - description: "<p>One or more custom attributes that describe the endpoint\
              \ by associating a name with an array of values. For example, the value\
              \ of a custom attribute named Interests might be: [\"Science\", \"Music\"\
              , \"Travel\"]. You can use these attributes as filter criteria when\
              \ you create segments. Attribute names are case sensitive.</p> <p>An\
              \ attribute name can contain up to 50 characters. An attribute value\
              \ can contain up to 100 characters. When you define the name of a custom\
              \ attribute, avoid using the following characters: number sign (#),\
              \ colon (:), question mark (?), backslash (\\), and slash (/). The Amazon\
              \ Pinpoint console can't display attribute names that contain these\
              \ characters. This restriction doesn't apply to attribute values.</p>"
        ChannelType:
          allOf:
          - $ref: '#/components/schemas/ChannelType'
          - description: The channel to use when sending messages or push notifications
              to the endpoint.
        Demographic:
          $ref: '#/components/schemas/UpdateEndpoint_request_EndpointRequest_Demographic'
        EffectiveDate:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: "The date and time, in ISO 8601 format, when the endpoint\
              \ was created or updated."
        EndpointStatus:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: "<p>Specifies whether to send messages or push notifications\
              \ to the endpoint. Valid values are: ACTIVE, messages are sent to the\
              \ endpoint; and, INACTIVE, messages aren’t sent to the endpoint.</p>\
              \ <p>Amazon Pinpoint automatically sets this value to ACTIVE when you\
              \ create an endpoint or update an existing endpoint. Amazon Pinpoint\
              \ automatically sets this value to INACTIVE if you update another endpoint\
              \ that has the same address specified by the Address property.</p>"
        Id:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The unique identifier for the endpoint in the context of
              the batch.
        Location:
          $ref: '#/components/schemas/UpdateEndpoint_request_EndpointRequest_Location'
        Metrics:
          allOf:
          - $ref: '#/components/schemas/MapOf__double'
          - description: One or more custom metrics that your app reports to Amazon
              Pinpoint for the endpoint.
        OptOut:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: "Specifies whether the user who's associated with the endpoint\
              \ has opted out of receiving messages and push notifications from you.\
              \ Possible values are: ALL, the user has opted out and doesn't want\
              \ to receive any messages or push notifications; and, NONE, the user\
              \ hasn't opted out and wants to receive all messages and push notifications."
        RequestId:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The unique identifier for the request to create or update
              the endpoint.
        User:
          $ref: '#/components/schemas/UpdateEndpoint_request_EndpointRequest_User'
      type: object
    EndpointBatchRequest:
      description: Specifies a batch of endpoints to create or update and the settings
        and attributes to set or change for each endpoint.
      example:
        Item: ""
      properties:
        Item:
          allOf:
          - $ref: '#/components/schemas/ListOfEndpointBatchItem'
          - description: "An array that defines the endpoints to create or update\
              \ and, for each endpoint, the property values to set or change. An array\
              \ can contain a maximum of 100 items."
      required:
      - Item
      type: object
    EndpointItemResponse:
      description: Provides the status code and message that result from processing
        data for an endpoint.
      properties:
        Message:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The custom message that's returned in the response as a result
              of processing the endpoint data.
        StatusCode:
          allOf:
          - $ref: '#/components/schemas/__integer'
          - description: The status code that's returned in the response as a result
              of processing the endpoint data.
      type: object
    __double:
      format: double
      type: number
    EndpointMessageResult:
      description: Provides information about the delivery status and results of sending
        a message directly to an endpoint.
      properties:
        Address:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The endpoint address that the message was delivered to.
        DeliveryStatus:
          allOf:
          - $ref: '#/components/schemas/DeliveryStatus'
          - description: <p>The delivery status of the message. Possible values are:</p>
              <ul> <li><p>DUPLICATE - The endpoint address is a duplicate of another
              endpoint address. Amazon Pinpoint won't attempt to send the message
              again.</p></li> <li><p>OPT_OUT - The user who's associated with the
              endpoint has opted out of receiving messages from you. Amazon Pinpoint
              won't attempt to send the message again.</p></li> <li><p>PERMANENT_FAILURE
              - An error occurred when delivering the message to the endpoint. Amazon
              Pinpoint won't attempt to send the message again.</p></li>    <li><p>SUCCESSFUL
              - The message was successfully delivered to the endpoint.</p></li> <li><p>TEMPORARY_FAILURE
              - A temporary error occurred. Amazon Pinpoint won't attempt to send
              the message again.</p></li> <li><p>THROTTLED - Amazon Pinpoint throttled
              the operation to send the message to the endpoint.</p></li> <li><p>TIMEOUT
              - The message couldn't be sent within the timeout period.</p></li> <li><p>UNKNOWN_FAILURE
              - An unknown error occurred.</p></li></ul>
        MessageId:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The unique identifier for the message that was sent.
        StatusCode:
          allOf:
          - $ref: '#/components/schemas/__integer'
          - description: The downstream service status code for delivering the message.
        StatusMessage:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The status message for delivering the message.
        UpdatedToken:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: "For push notifications that are sent through the GCM channel,\
              \ specifies whether the endpoint's device registration token was updated\
              \ as part of delivering the message."
      required:
      - DeliveryStatus
      - StatusCode
      type: object
    EndpointRequest:
      description: Specifies the channel type and other settings for an endpoint.
      example:
        EndpointStatus: ""
        Demographic:
          AppVersion: ""
          Locale: ""
          PlatformVersion: ""
          Timezone: ""
          Platform: ""
          Model: ""
          Make: ""
          ModelVersion: ""
        Metrics: ""
        User:
          UserId: ""
          UserAttributes: ""
        Address: ""
        OptOut: ""
        RequestId: ""
        Attributes: ""
        ChannelType: ""
        EffectiveDate: ""
        Location:
          Country: ""
          PostalCode: ""
          Region: ""
          Latitude: ""
          City: ""
          Longitude: ""
      properties:
        Address:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: "The destination address for messages or push notifications\
              \ that you send to the endpoint. The address varies by channel. For\
              \ a push-notification channel, use the token provided by the push notification\
              \ service, such as an Apple Push Notification service (APNs) device\
              \ token or a Firebase Cloud Messaging (FCM) registration token. For\
              \ the SMS channel, use a phone number in E.164 format, such as +12065550100.\
              \ For the email channel, use an email address."
        Attributes:
          allOf:
          - $ref: '#/components/schemas/MapOfListOf__string'
          - description: "<p>One or more custom attributes that describe the endpoint\
              \ by associating a name with an array of values. For example, the value\
              \ of a custom attribute named Interests might be: [\"Science\", \"Music\"\
              , \"Travel\"]. You can use these attributes as filter criteria when\
              \ you create segments. Attribute names are case sensitive.</p> <p>An\
              \ attribute name can contain up to 50 characters. An attribute value\
              \ can contain up to 100 characters. When you define the name of a custom\
              \ attribute, avoid using the following characters: number sign (#),\
              \ colon (:), question mark (?), backslash (\\), and slash (/). The Amazon\
              \ Pinpoint console can't display attribute names that contain these\
              \ characters. This restriction doesn't apply to attribute values.</p>"
        ChannelType:
          allOf:
          - $ref: '#/components/schemas/ChannelType'
          - description: The channel to use when sending messages or push notifications
              to the endpoint.
        Demographic:
          $ref: '#/components/schemas/UpdateEndpoint_request_EndpointRequest_Demographic'
        EffectiveDate:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: "The date and time, in ISO 8601 format, when the endpoint\
              \ is updated."
        EndpointStatus:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: "<p>Specifies whether to send messages or push notifications\
              \ to the endpoint. Valid values are: ACTIVE, messages are sent to the\
              \ endpoint; and, INACTIVE, messages aren’t sent to the endpoint.</p>\
              \ <p>Amazon Pinpoint automatically sets this value to ACTIVE when you\
              \ create an endpoint or update an existing endpoint. Amazon Pinpoint\
              \ automatically sets this value to INACTIVE if you update another endpoint\
              \ that has the same address specified by the Address property.</p>"
        Location:
          $ref: '#/components/schemas/UpdateEndpoint_request_EndpointRequest_Location'
        Metrics:
          allOf:
          - $ref: '#/components/schemas/MapOf__double'
          - description: One or more custom metrics that your app reports to Amazon
              Pinpoint for the endpoint.
        OptOut:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: "Specifies whether the user who's associated with the endpoint\
              \ has opted out of receiving messages and push notifications from you.\
              \ Possible values are: ALL, the user has opted out and doesn't want\
              \ to receive any messages or push notifications; and, NONE, the user\
              \ hasn't opted out and wants to receive all messages and push notifications."
        RequestId:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The unique identifier for the most recent request to update
              the endpoint.
        User:
          $ref: '#/components/schemas/UpdateEndpoint_request_EndpointRequest_User'
      type: object
    EndpointSendConfiguration:
      description: "Specifies the content, including message variables and attributes,\
        \ to use in a message that's sent directly to an endpoint."
      properties:
        BodyOverride:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: "The body of the message. If specified, this value overrides\
              \ the default message body."
        Context:
          allOf:
          - $ref: '#/components/schemas/MapOf__string'
          - description: "<p>A map of custom attributes to attach to the message for\
              \ the address. Attribute names are case sensitive.</p> <p>For a push\
              \ notification, this payload is added to the data.pinpoint object. For\
              \ an email or text message, this payload is added to email/SMS delivery\
              \ receipt event attributes.</p>"
        RawContent:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: "The raw, JSON-formatted string to use as the payload for\
              \ the message. If specified, this value overrides all other values for\
              \ the message."
        Substitutions:
          allOf:
          - $ref: '#/components/schemas/MapOfListOf__string'
          - description: A map of the message variables to merge with the variables
              specified for the default message (DefaultMessage.Substitutions). The
              variables specified in this map take precedence over all other variables.
        TitleOverride:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: "The title or subject line of the message. If specified,\
              \ this value overrides the default message title or subject line."
      type: object
    ListOfEndpointResponse:
      items:
        $ref: '#/components/schemas/EndpointResponse'
      type: array
    Session:
      description: Provides information about a session.
      properties:
        Duration:
          allOf:
          - $ref: '#/components/schemas/__integer'
          - description: "The duration of the session, in milliseconds."
        Id:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The unique identifier for the session.
        StartTimestamp:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The date and time when the session began.
        StopTimestamp:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The date and time when the session ended.
      required:
      - Id
      - StartTimestamp
      type: object
    Event:
      description: Specifies information about an event that reports data to Amazon
        Pinpoint.
      properties:
        AppPackageName:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The package name of the app that's recording the event.
        AppTitle:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The title of the app that's recording the event.
        AppVersionCode:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The version number of the app that's recording the event.
        Attributes:
          allOf:
          - $ref: '#/components/schemas/MapOf__string'
          - description: One or more custom attributes that are associated with the
              event.
        ClientSdkVersion:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The version of the SDK that's running on the client device.
        EventType:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The name of the event.
        Metrics:
          allOf:
          - $ref: '#/components/schemas/MapOf__double'
          - description: One or more custom metrics that are associated with the event.
        SdkName:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The name of the SDK that's being used to record the event.
        Session:
          $ref: '#/components/schemas/Event_Session'
        Timestamp:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: "The date and time, in ISO 8601 format, when the event occurred."
      required:
      - EventType
      - Timestamp
      type: object
    EventCondition:
      description: Specifies the conditions to evaluate for an event that applies
        to an activity in a journey.
      properties:
        Dimensions:
          $ref: '#/components/schemas/EventCondition_Dimensions'
        MessageActivity:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The message identifier (message_id) for the message to use
              when determining whether message events meet the condition.
      type: object
    MapOfAttributeDimension:
      additionalProperties:
        $ref: '#/components/schemas/AttributeDimension'
      type: object
    SetDimension:
      description: Specifies the dimension type and values for a segment dimension.
      properties:
        DimensionType:
          allOf:
          - $ref: '#/components/schemas/DimensionType'
          - description: "The type of segment dimension to use. Valid values are:\
              \ INCLUSIVE, endpoints that match the criteria are included in the segment;\
              \ and, EXCLUSIVE, endpoints that match the criteria are excluded from\
              \ the segment."
        Values:
          allOf:
          - $ref: '#/components/schemas/ListOf__string'
          - description: "The criteria values to use for the segment dimension. Depending\
              \ on the value of the DimensionType property, endpoints are included\
              \ or excluded from the segment if their values match the criteria values."
      required:
      - Values
      type: object
    MapOfMetricDimension:
      additionalProperties:
        $ref: '#/components/schemas/MetricDimension'
      type: object
    EventFilter:
      description: Specifies the settings for an event that causes a campaign to be
        sent or a journey activity to be performed.
      example:
        FilterType: ""
        Dimensions:
          Metrics: ""
          EventType:
            DimensionType: ""
            Values: ""
          Attributes: ""
      properties:
        Dimensions:
          $ref: '#/components/schemas/EventFilter_Dimensions'
        FilterType:
          allOf:
          - $ref: '#/components/schemas/FilterType'
          - description: "The type of event that causes the campaign to be sent or\
              \ the journey activity to be performed. Valid values are: SYSTEM, sends\
              \ the campaign or performs the activity when a system event occurs;\
              \ and, ENDPOINT, sends the campaign or performs the activity when an\
              \ endpoint event (<link  linkend=\"apps-application-id-events\">Events\
              \ resource</link>) occurs."
      required:
      - Dimensions
      - FilterType
      type: object
    EventItemResponse:
      description: Provides the status code and message that result from processing
        an event.
      properties:
        Message:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: A custom message that's returned in the response as a result
              of processing the event.
        StatusCode:
          allOf:
          - $ref: '#/components/schemas/__integer'
          - description: "The status code that's returned in the response as a result\
              \ of processing the event. Possible values are: 202, for events that\
              \ were accepted; and, 400, for events that weren't valid."
      type: object
    EventStartCondition:
      description: Specifies the settings for an event that causes a journey activity
        to start.
      example:
        SegmentId: SegmentId
        EventFilter:
          FilterType: ""
          Dimensions:
            Metrics: ""
            EventType:
              DimensionType: ""
              Values: ""
            Attributes: ""
      properties:
        EventFilter:
          $ref: '#/components/schemas/EventFilter'
        SegmentId:
          type: string
      type: object
    PublicEndpoint:
      description: Specifies the properties and attributes of an endpoint that's associated
        with an event.
      properties:
        Address:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: "The unique identifier for the recipient, such as a device\
              \ token, email address, or mobile phone number."
        Attributes:
          allOf:
          - $ref: '#/components/schemas/MapOfListOf__string'
          - description: One or more custom attributes that describe the endpoint
              by associating a name with an array of values. You can use these attributes
              as filter criteria when you create segments.
        ChannelType:
          allOf:
          - $ref: '#/components/schemas/ChannelType'
          - description: The channel that's used when sending messages or push notifications
              to the endpoint.
        Demographic:
          $ref: '#/components/schemas/UpdateEndpoint_request_EndpointRequest_Demographic'
        EffectiveDate:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: "The date and time, in ISO 8601 format, when the endpoint\
              \ was last updated."
        EndpointStatus:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: "<p>Specifies whether to send messages or push notifications\
              \ to the endpoint. Valid values are: ACTIVE, messages are sent to the\
              \ endpoint; and, INACTIVE, messages aren’t sent to the endpoint.</p>\
              \ <p>Amazon Pinpoint automatically sets this value to ACTIVE when you\
              \ create an endpoint or update an existing endpoint. Amazon Pinpoint\
              \ automatically sets this value to INACTIVE if you update another endpoint\
              \ that has the same address specified by the Address property.</p>"
        Location:
          $ref: '#/components/schemas/UpdateEndpoint_request_EndpointRequest_Location'
        Metrics:
          allOf:
          - $ref: '#/components/schemas/MapOf__double'
          - description: One or more custom metrics that your app reports to Amazon
              Pinpoint for the endpoint.
        OptOut:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: "Specifies whether the user who's associated with the endpoint\
              \ has opted out of receiving messages and push notifications from you.\
              \ Possible values are: ALL, the user has opted out and doesn't want\
              \ to receive any messages or push notifications; and, NONE, the user\
              \ hasn't opted out and wants to receive all messages and push notifications."
        RequestId:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: A unique identifier that's generated each time the endpoint
              is updated.
        User:
          $ref: '#/components/schemas/EndpointResponse_User'
      type: object
    MapOfEvent:
      additionalProperties:
        $ref: '#/components/schemas/Event'
      type: object
    EventsBatch:
      description: Specifies a batch of endpoints and events to process.
      properties:
        Endpoint:
          $ref: '#/components/schemas/EventsBatch_Endpoint'
        Events:
          allOf:
          - $ref: '#/components/schemas/MapOfEvent'
          - description: A set of properties that are associated with the event.
      required:
      - Endpoint
      - Events
      type: object
    EventsRequest:
      description: Specifies a batch of events to process.
      example:
        BatchItem: ""
      properties:
        BatchItem:
          allOf:
          - $ref: '#/components/schemas/MapOfEventsBatch'
          - description: "The batch of events to process. For each item in a batch,\
              \ the endpoint ID acts as a key that has an EventsBatch object as its\
              \ value."
      required:
      - BatchItem
      type: object
    MapOfItemResponse:
      additionalProperties:
        $ref: '#/components/schemas/ItemResponse'
      type: object
    EventsResponse:
      description: Provides information about endpoints and the events that they're
        associated with.
      example:
        Results: ""
      properties:
        Results:
          allOf:
          - $ref: '#/components/schemas/MapOfItemResponse'
          - description: "A map that contains a multipart response for each endpoint.\
              \ For each item in this object, the endpoint ID is the key and the item\
              \ response is the value. If no item response exists, the value can also\
              \ be one of the following: 202, the request was processed successfully;\
              \ or 400, the payload wasn't valid or required fields were missing."
      type: object
    ExportJobResource:
      description: Provides information about the resource settings for a job that
        exports endpoint definitions to a file. The file can be added directly to
        an Amazon Simple Storage Service (Amazon S3) bucket by using the Amazon Pinpoint
        API or downloaded directly to a computer by using the Amazon Pinpoint console.
      properties:
        RoleArn:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The Amazon Resource Name (ARN) of the AWS Identity and Access
              Management (IAM) role that authorized Amazon Pinpoint to access the
              Amazon S3 location where the endpoint definitions were exported to.
        S3UrlPrefix:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: "The URL of the location in an Amazon Simple Storage Service\
              \ (Amazon S3) bucket where the endpoint definitions were exported to.\
              \ This location is typically a folder that contains multiple files.\
              \ The URL should be in the following format: s3://<replaceable>bucket-name</replaceable>/<replaceable>folder-name</replaceable>/."
        SegmentId:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: "The identifier for the segment that the endpoint definitions\
              \ were exported from. If this value isn't present, Amazon Pinpoint exported\
              \ definitions for all the endpoints that are associated with the application."
        SegmentVersion:
          allOf:
          - $ref: '#/components/schemas/__integer'
          - description: The version of the segment that the endpoint definitions
              were exported from.
      required:
      - RoleArn
      - S3UrlPrefix
      type: object
    JobStatus:
      enum:
      - CREATED
      - PREPARING_FOR_INITIALIZATION
      - INITIALIZING
      - PROCESSING
      - PENDING_JOB
      - COMPLETING
      - COMPLETED
      - FAILING
      - FAILED
      type: string
    ListOfExportJobResponse:
      items:
        $ref: '#/components/schemas/ExportJobResponse'
      type: array
    ExportJobsResponse:
      description: Provides information about all the export jobs that are associated
        with an application or segment. An export job is a job that exports endpoint
        definitions to a file.
      example:
        Item: ""
        NextToken: ""
      properties:
        Item:
          allOf:
          - $ref: '#/components/schemas/ListOfExportJobResponse'
          - description: "An array of responses, one for each export job that's associated\
              \ with the application (Export Jobs resource) or segment (Segment Export\
              \ Jobs resource)."
        NextToken:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The string to use in a subsequent request to get the next
              page of results in a paginated response. This value is null if there
              are no additional pages.
      required:
      - Item
      type: object
    Frequency:
      enum:
      - ONCE
      - HOURLY
      - DAILY
      - WEEKLY
      - MONTHLY
      - EVENT
      - IN_APP_EVENT
      type: string
    GCMChannelRequest:
      description: "Specifies the status and settings of the GCM channel for an application.\
        \ This channel enables Amazon Pinpoint to send push notifications through\
        \ the Firebase Cloud Messaging (FCM), formerly Google Cloud Messaging (GCM),\
        \ service."
      example:
        ApiKey: ""
        DefaultAuthenticationMethod: ""
        Enabled: ""
        ServiceJson: ""
      properties:
        ApiKey:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: "The Web API Key, also referred to as an <i>API_KEY</i> or\
              \ <i>server key</i>, that you received from Google to communicate with\
              \ Google services."
        DefaultAuthenticationMethod:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The default authentication method used for GCM. Values are
              either "TOKEN" or "KEY". Defaults to "KEY".
        Enabled:
          allOf:
          - $ref: '#/components/schemas/__boolean'
          - description: Specifies whether to enable the GCM channel for the application.
        ServiceJson:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The contents of the JSON file provided by Google during registration
              in order to generate an access token for authentication. For more information
              see <a href="https://firebase.google.com/docs/cloud-messaging/migrate-v1">Migrate
              from legacy FCM APIs to HTTP v1</a>.
      type: object
    GPSCoordinates:
      description: Specifies the GPS coordinates of a location.
      properties:
        Latitude:
          allOf:
          - $ref: '#/components/schemas/__double'
          - description: The latitude coordinate of the location.
        Longitude:
          allOf:
          - $ref: '#/components/schemas/__double'
          - description: The longitude coordinate of the location.
      required:
      - Latitude
      - Longitude
      type: object
    GPSPointDimension:
      description: Specifies GPS-based criteria for including or excluding endpoints
        from a segment.
      properties:
        Coordinates:
          $ref: '#/components/schemas/GPSPointDimension_Coordinates'
        RangeInKilometers:
          allOf:
          - $ref: '#/components/schemas/__double'
          - description: "The range, in kilometers, from the GPS coordinates."
      required:
      - Coordinates
      type: object
    GetAdmChannelRequest:
      properties: {}
      title: GetAdmChannelRequest
      type: object
    GetApnsChannelRequest:
      properties: {}
      title: GetApnsChannelRequest
      type: object
    GetApnsSandboxChannelRequest:
      properties: {}
      title: GetApnsSandboxChannelRequest
      type: object
    GetApnsVoipChannelRequest:
      properties: {}
      title: GetApnsVoipChannelRequest
      type: object
    GetApnsVoipSandboxChannelRequest:
      properties: {}
      title: GetApnsVoipSandboxChannelRequest
      type: object
    GetAppRequest:
      properties: {}
      title: GetAppRequest
      type: object
    GetApplicationDateRangeKpiRequest:
      properties: {}
      title: GetApplicationDateRangeKpiRequest
      type: object
    GetApplicationSettingsRequest:
      properties: {}
      title: GetApplicationSettingsRequest
      type: object
    GetAppsRequest:
      properties: {}
      title: GetAppsRequest
      type: object
    GetBaiduChannelRequest:
      properties: {}
      title: GetBaiduChannelRequest
      type: object
    GetCampaignActivitiesRequest:
      properties: {}
      title: GetCampaignActivitiesRequest
      type: object
    GetCampaignDateRangeKpiRequest:
      properties: {}
      title: GetCampaignDateRangeKpiRequest
      type: object
    GetCampaignRequest:
      properties: {}
      title: GetCampaignRequest
      type: object
    GetCampaignVersionRequest:
      properties: {}
      title: GetCampaignVersionRequest
      type: object
    GetCampaignVersionsRequest:
      properties: {}
      title: GetCampaignVersionsRequest
      type: object
    GetCampaignsRequest:
      properties: {}
      title: GetCampaignsRequest
      type: object
    GetChannelsRequest:
      properties: {}
      title: GetChannelsRequest
      type: object
    GetEmailChannelRequest:
      properties: {}
      title: GetEmailChannelRequest
      type: object
    GetEmailTemplateRequest:
      properties: {}
      title: GetEmailTemplateRequest
      type: object
    GetEndpointRequest:
      properties: {}
      title: GetEndpointRequest
      type: object
    GetEventStreamRequest:
      properties: {}
      title: GetEventStreamRequest
      type: object
    GetExportJobRequest:
      properties: {}
      title: GetExportJobRequest
      type: object
    GetExportJobsRequest:
      properties: {}
      title: GetExportJobsRequest
      type: object
    GetGcmChannelRequest:
      properties: {}
      title: GetGcmChannelRequest
      type: object
    GetImportJobRequest:
      properties: {}
      title: GetImportJobRequest
      type: object
    GetImportJobsRequest:
      properties: {}
      title: GetImportJobsRequest
      type: object
    ImportJobsResponse:
      description: Provides information about the status and settings of all the import
        jobs that are associated with an application or segment. An import job is
        a job that imports endpoint definitions from one or more files.
      example:
        Item: ""
        NextToken: ""
      properties:
        Item:
          allOf:
          - $ref: '#/components/schemas/ListOfImportJobResponse'
          - description: "An array of responses, one for each import job that's associated\
              \ with the application (Import Jobs resource) or segment (Segment Import\
              \ Jobs resource)."
        NextToken:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The string to use in a subsequent request to get the next
              page of results in a paginated response. This value is null if there
              are no additional pages.
      required:
      - Item
      type: object
    GetInAppMessagesRequest:
      properties: {}
      title: GetInAppMessagesRequest
      type: object
    InAppMessagesResponse:
      description: Get in-app messages response object.
      example:
        InAppMessageCampaigns: ""
      properties:
        InAppMessageCampaigns:
          allOf:
          - $ref: '#/components/schemas/ListOfInAppMessageCampaign'
          - description: List of targeted in-app message campaigns.
      type: object
    GetInAppTemplateRequest:
      properties: {}
      title: GetInAppTemplateRequest
      type: object
    InAppTemplateResponse:
      description: In-App Template Response.
      example:
        CreationDate: ""
        CustomConfig: ""
        LastModifiedDate: ""
        Layout: ""
        Version: ""
        Content: ""
        TemplateName: ""
        TemplateDescription: ""
        TemplateType: ""
        Arn: ""
        tags: ""
      properties:
        Arn:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The resource arn of the template.
        Content:
          allOf:
          - $ref: '#/components/schemas/ListOfInAppMessageContent'
          - description: "The content of the message, can include up to 5 modals.\
              \ Each modal must contain a message, a header, and background color.\
              \ ImageUrl and buttons are optional."
        CreationDate:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The creation date of the template.
        CustomConfig:
          allOf:
          - $ref: '#/components/schemas/MapOf__string'
          - description: Custom config to be sent to client.
        LastModifiedDate:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The last modified date of the template.
        Layout:
          allOf:
          - $ref: '#/components/schemas/Layout'
          - description: The layout of the message.
        tags:
          allOf:
          - $ref: '#/components/schemas/MapOf__string'
          - description: A string-to-string map of key-value pairs that defines the
              tags to associate with the message template. Each tag consists of a
              required tag key and an associated tag value.
        TemplateDescription:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The description of the template.
        TemplateName:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The name of the template.
        TemplateType:
          allOf:
          - $ref: '#/components/schemas/TemplateType'
          - description: The type of the template.
        Version:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The version id of the template.
      required:
      - CreationDate
      - LastModifiedDate
      - TemplateName
      - TemplateType
      type: object
    GetJourneyDateRangeKpiRequest:
      properties: {}
      title: GetJourneyDateRangeKpiRequest
      type: object
    JourneyDateRangeKpiResponse:
      description: "Provides the results of a query that retrieved the data for a\
        \ standard engagement metric that applies to a journey, and provides information\
        \ about that query."
      example:
        KpiResult:
          Rows: ""
        KpiName: ""
        JourneyId: ""
        EndTime: ""
        NextToken: ""
        StartTime: ""
        ApplicationId: ""
      properties:
        ApplicationId:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The unique identifier for the application that the metric
              applies to.
        EndTime:
          allOf:
          - $ref: '#/components/schemas/__timestampIso8601'
          - description: "The last date and time of the date range that was used to\
              \ filter the query results, in extended ISO 8601 format. The date range\
              \ is inclusive."
        JourneyId:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The unique identifier for the journey that the metric applies
              to.
        KpiName:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: "The name of the metric, also referred to as a <i>key performance\
              \ indicator (KPI)</i>, that the data was retrieved for. This value describes\
              \ the associated metric and consists of two or more terms, which are\
              \ comprised of lowercase alphanumeric characters, separated by a hyphen.\
              \ For a list of possible values, see the <a href=\"https://docs.aws.amazon.com/pinpoint/latest/developerguide/analytics-standard-metrics.html\"\
              >Amazon Pinpoint Developer Guide</a>."
        KpiResult:
          $ref: '#/components/schemas/ApplicationDateRangeKpiResponse_KpiResult'
        NextToken:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The string to use in a subsequent request to get the next
              page of results in a paginated response. This value is null for the
              Journey Engagement Metrics resource because the resource returns all
              results in a single page.
        StartTime:
          allOf:
          - $ref: '#/components/schemas/__timestampIso8601'
          - description: "The first date and time of the date range that was used\
              \ to filter the query results, in extended ISO 8601 format. The date\
              \ range is inclusive."
      required:
      - ApplicationId
      - EndTime
      - JourneyId
      - KpiName
      - KpiResult
      - StartTime
      type: object
    GetJourneyExecutionActivityMetricsRequest:
      properties: {}
      title: GetJourneyExecutionActivityMetricsRequest
      type: object
    JourneyExecutionActivityMetricsResponse:
      description: "Provides the results of a query that retrieved the data for a\
        \ standard execution metric that applies to a journey activity, and provides\
        \ information about that query."
      example:
        JourneyId: ""
        Metrics: ""
        LastEvaluatedTime: ""
        JourneyActivityId: ""
        ActivityType: ""
        ApplicationId: ""
      properties:
        ActivityType:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: "<p>The type of activity that the metric applies to. Possible\
              \ values are:</p> <ul><li><p>CONDITIONAL_SPLIT – For a yes/no split\
              \ activity, which is an activity that sends participants down one of\
              \ two paths in a journey.</p></li> <li><p>HOLDOUT – For a holdout activity,\
              \ which is an activity that stops a journey for a specified percentage\
              \ of participants.</p></li> <li><p>MESSAGE – For an email activity,\
              \ which is an activity that sends an email message to participants.</p></li>\
              \ <li><p>MULTI_CONDITIONAL_SPLIT – For a multivariate split activity,\
              \ which is an activity that sends participants down one of as many as\
              \ five paths in a journey.</p></li> <li><p>RANDOM_SPLIT – For a random\
              \ split activity, which is an activity that sends specified percentages\
              \ of participants down one of as many as five paths in a journey.</p></li>\
              \ <li><p>WAIT – For a wait activity, which is an activity that waits\
              \ for a certain amount of time or until a specific date and time before\
              \ moving participants to the next activity in a journey.</p></li></ul>"
        ApplicationId:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The unique identifier for the application that the metric
              applies to.
        JourneyActivityId:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The unique identifier for the activity that the metric applies
              to.
        JourneyId:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The unique identifier for the journey that the metric applies
              to.
        LastEvaluatedTime:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: "The date and time, in ISO 8601 format, when Amazon Pinpoint\
              \ last evaluated the execution status of the activity and updated the\
              \ data for the metric."
        Metrics:
          allOf:
          - $ref: '#/components/schemas/MapOf__string'
          - description: "A JSON object that contains the results of the query. The\
              \ results vary depending on the type of activity (ActivityType). For\
              \ information about the structure and contents of the results, see the\
              \ <a href=\"https://docs.aws.amazon.com/pinpoint/latest/developerguide/analytics-standard-metrics.html\"\
              >Amazon Pinpoint Developer Guide</a>."
      required:
      - ActivityType
      - ApplicationId
      - JourneyActivityId
      - JourneyId
      - LastEvaluatedTime
      - Metrics
      type: object
    GetJourneyExecutionMetricsRequest:
      properties: {}
      title: GetJourneyExecutionMetricsRequest
      type: object
    JourneyExecutionMetricsResponse:
      description: "Provides the results of a query that retrieved the data for a\
        \ standard execution metric that applies to a journey, and provides information\
        \ about that query."
      example:
        JourneyId: ""
        Metrics: ""
        LastEvaluatedTime: ""
        ApplicationId: ""
      properties:
        ApplicationId:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The unique identifier for the application that the metric
              applies to.
        JourneyId:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The unique identifier for the journey that the metric applies
              to.
        LastEvaluatedTime:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: "The date and time, in ISO 8601 format, when Amazon Pinpoint\
              \ last evaluated the journey and updated the data for the metric."
        Metrics:
          allOf:
          - $ref: '#/components/schemas/MapOf__string'
          - description: "A JSON object that contains the results of the query. For\
              \ information about the structure and contents of the results, see the\
              \ <a href=\"https://docs.aws.amazon.com//pinpoint/latest/developerguide/analytics-standard-metrics.html\"\
              >Amazon Pinpoint Developer Guide</a>."
      required:
      - ApplicationId
      - JourneyId
      - LastEvaluatedTime
      - Metrics
      type: object
    GetJourneyRequest:
      properties: {}
      title: GetJourneyRequest
      type: object
    GetJourneyRunExecutionActivityMetricsRequest:
      properties: {}
      title: GetJourneyRunExecutionActivityMetricsRequest
      type: object
    JourneyRunExecutionActivityMetricsResponse:
      description: "Provides the results of a query that retrieved the data for a\
        \ standard execution metric that applies to a journey activity for a particular\
        \ journey run, and provides information about that query."
      properties:
        ActivityType:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: "<p>The type of activity that the metric applies to. Possible\
              \ values are:</p> <ul><li><p>CONDITIONAL_SPLIT – For a yes/no split\
              \ activity, which is an activity that sends participants down one of\
              \ two paths in a journey.</p></li> <li><p>HOLDOUT – For a holdout activity,\
              \ which is an activity that stops a journey for a specified percentage\
              \ of participants.</p></li> <li><p>MESSAGE – For an email activity,\
              \ which is an activity that sends an email message to participants.</p></li>\
              \ <li><p>MULTI_CONDITIONAL_SPLIT – For a multivariate split activity,\
              \ which is an activity that sends participants down one of as many as\
              \ five paths in a journey.</p></li> <li><p>RANDOM_SPLIT – For a random\
              \ split activity, which is an activity that sends specified percentages\
              \ of participants down one of as many as five paths in a journey.</p></li>\
              \ <li><p>WAIT – For a wait activity, which is an activity that waits\
              \ for a certain amount of time or until a specific date and time before\
              \ moving participants to the next activity in a journey.</p></li></ul>"
        ApplicationId:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The unique identifier for the application that the metric
              applies to.
        JourneyActivityId:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The unique identifier for the activity that the metric applies
              to.
        JourneyId:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The unique identifier for the journey that the metric applies
              to.
        LastEvaluatedTime:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: "The date and time, in ISO 8601 format, when Amazon Pinpoint\
              \ last evaluated the execution status of the activity for this journey\
              \ run and updated the data for the metric."
        Metrics:
          allOf:
          - $ref: '#/components/schemas/MapOf__string'
          - description: "A JSON object that contains the results of the query. For\
              \ information about the structure and contents of the results, see see\
              \ <a href=\"https://docs.aws.amazon.com//pinpoint/latest/developerguide/analytics-standard-metrics.html\"\
              >Standard Amazon Pinpoint analytics metrics</a> in the <i>Amazon Pinpoint\
              \ Developer Guide</i>."
        RunId:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The unique identifier for the journey run that the metric
              applies to.
      required:
      - ActivityType
      - ApplicationId
      - JourneyActivityId
      - JourneyId
      - LastEvaluatedTime
      - Metrics
      - RunId
      type: object
    GetJourneyRunExecutionMetricsRequest:
      properties: {}
      title: GetJourneyRunExecutionMetricsRequest
      type: object
    JourneyRunExecutionMetricsResponse:
      description: "Provides the results of a query that retrieved the data for a\
        \ standard execution metric that applies to a journey run, and provides information\
        \ about that query."
      properties:
        ApplicationId:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The unique identifier for the application that the metric
              applies to.
        JourneyId:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The unique identifier for the journey that the metric applies
              to.
        LastEvaluatedTime:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: "The date and time, in ISO 8601 format, when Amazon Pinpoint\
              \ last evaluated the journey run and updated the data for the metric."
        Metrics:
          allOf:
          - $ref: '#/components/schemas/MapOf__string'
          - description: "A JSON object that contains the results of the query. For\
              \ information about the structure and contents of the results, see the\
              \ <a href=\"https://docs.aws.amazon.com//pinpoint/latest/developerguide/analytics-standard-metrics.html\"\
              >Standard Amazon Pinpoint analytics metrics</a> in the <i>Amazon Pinpoint\
              \ Developer Guide</i>."
        RunId:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The unique identifier for the journey run that the metric
              applies to.
      required:
      - ApplicationId
      - JourneyId
      - LastEvaluatedTime
      - Metrics
      - RunId
      type: object
    GetJourneyRunsRequest:
      properties: {}
      title: GetJourneyRunsRequest
      type: object
    JourneyRunsResponse:
      description: Provides information from all runs of a journey.
      properties:
        Item:
          allOf:
          - $ref: '#/components/schemas/ListOfJourneyRunResponse'
          - description: "An array of responses, one for each run of the journey"
        NextToken:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The string to use in a subsequent request to get the next
              page of results in a paginated response. This value is null if there
              are no additional pages.
      required:
      - Item
      type: object
    GetPushTemplateRequest:
      properties: {}
      title: GetPushTemplateRequest
      type: object
    PushNotificationTemplateResponse:
      description: Provides information about the content and settings for a message
        template that can be used in messages that are sent through a push notification
        channel.
      example:
        CreationDate: ""
        LastModifiedDate: ""
        ADM:
          Action: ""
          ImageUrl: ""
          SmallImageIconUrl: ""
          Title: ""
          ImageIconUrl: ""
          Sound: ""
          Body: ""
          RawContent: ""
          Url: ""
        APNS:
          Action: ""
          MediaUrl: ""
          Title: ""
          Sound: ""
          Body: ""
          RawContent: ""
          Url: ""
        TemplateDescription: ""
        TemplateType: ""
        Default:
          Action: ""
          Title: ""
          Sound: ""
          Body: ""
          Url: ""
        tags: ""
        GCM:
          Action: ""
          ImageUrl: ""
          SmallImageIconUrl: ""
          Title: ""
          ImageIconUrl: ""
          Sound: ""
          Body: ""
          RawContent: ""
          Url: ""
        RecommenderId: ""
        Baidu:
          Action: ""
          ImageUrl: ""
          SmallImageIconUrl: ""
          Title: ""
          ImageIconUrl: ""
          Sound: ""
          Body: ""
          RawContent: ""
          Url: ""
        Version: ""
        TemplateName: ""
        DefaultSubstitutions: ""
        Arn: ""
      properties:
        ADM:
          $ref: '#/components/schemas/PushNotificationTemplateResponse_ADM'
        APNS:
          $ref: '#/components/schemas/PushNotificationTemplateResponse_APNS'
        Arn:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The Amazon Resource Name (ARN) of the message template.
        Baidu:
          $ref: '#/components/schemas/PushNotificationTemplateResponse_Baidu'
        CreationDate:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: "The date, in ISO 8601 format, when the message template\
              \ was created."
        Default:
          $ref: '#/components/schemas/PushNotificationTemplateResponse_Default'
        DefaultSubstitutions:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The JSON object that specifies the default values that are
              used for message variables in the message template. This object is a
              set of key-value pairs. Each key defines a message variable in the template.
              The corresponding value defines the default value for that variable.
        GCM:
          $ref: '#/components/schemas/PushNotificationTemplateResponse_GCM'
        LastModifiedDate:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: "The date, in ISO 8601 format, when the message template\
              \ was last modified."
        RecommenderId:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The unique identifier for the recommender model that's used
              by the message template.
        tags:
          allOf:
          - $ref: '#/components/schemas/MapOf__string'
          - description: A string-to-string map of key-value pairs that identifies
              the tags that are associated with the message template. Each tag consists
              of a required tag key and an associated tag value.
        TemplateDescription:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The custom description of the message template.
        TemplateName:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The name of the message template.
        TemplateType:
          allOf:
          - $ref: '#/components/schemas/TemplateType'
          - description: "The type of channel that the message template is designed\
              \ for. For a push notification template, this value is PUSH."
        Version:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: "The unique identifier, as an integer, for the active version\
              \ of the message template, or the version of the template that you specified\
              \ by using the version parameter in your request."
      required:
      - CreationDate
      - LastModifiedDate
      - TemplateName
      - TemplateType
      type: object
    GetRecommenderConfigurationRequest:
      properties: {}
      title: GetRecommenderConfigurationRequest
      type: object
    GetRecommenderConfigurationsRequest:
      properties: {}
      title: GetRecommenderConfigurationsRequest
      type: object
    ListRecommenderConfigurationsResponse:
      description: Provides information about all the recommender model configurations
        that are associated with your Amazon Pinpoint account.
      example:
        Item: ""
        NextToken: ""
      properties:
        Item:
          allOf:
          - $ref: '#/components/schemas/ListOfRecommenderConfigurationResponse'
          - description: "An array of responses, one for each recommender model configuration\
              \ that's associated with your Amazon Pinpoint account."
        NextToken:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The string to use in a subsequent request to get the next
              page of results in a paginated response. This value is null if there
              are no additional pages.
      required:
      - Item
      type: object
    GetSegmentExportJobsRequest:
      properties: {}
      title: GetSegmentExportJobsRequest
      type: object
    GetSegmentImportJobsRequest:
      properties: {}
      title: GetSegmentImportJobsRequest
      type: object
    GetSegmentRequest:
      properties: {}
      title: GetSegmentRequest
      type: object
    GetSegmentVersionRequest:
      properties: {}
      title: GetSegmentVersionRequest
      type: object
    GetSegmentVersionsRequest:
      properties: {}
      title: GetSegmentVersionsRequest
      type: object
    SegmentsResponse:
      description: Provides information about all the segments that are associated
        with an application.
      example:
        Item: ""
        NextToken: ""
      properties:
        Item:
          allOf:
          - $ref: '#/components/schemas/ListOfSegmentResponse'
          - description: "An array of responses, one for each segment that's associated\
              \ with the application (Segments resource) or each version of a segment\
              \ that's associated with the application (Segment Versions resource)."
        NextToken:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The string to use in a subsequent request to get the next
              page of results in a paginated response. This value is null if there
              are no additional pages.
      required:
      - Item
      type: object
    GetSegmentsRequest:
      properties: {}
      title: GetSegmentsRequest
      type: object
    GetSmsChannelRequest:
      properties: {}
      title: GetSmsChannelRequest
      type: object
    GetSmsTemplateRequest:
      properties: {}
      title: GetSmsTemplateRequest
      type: object
    SMSTemplateResponse:
      description: Provides information about the content and settings for a message
        template that can be used in text messages that are sent through the SMS channel.
      example:
        CreationDate: ""
        LastModifiedDate: ""
        RecommenderId: ""
        Version: ""
        TemplateName: ""
        DefaultSubstitutions: ""
        TemplateDescription: ""
        TemplateType: ""
        Arn: ""
        Body: ""
        tags: ""
      properties:
        Arn:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The Amazon Resource Name (ARN) of the message template.
        Body:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The message body that's used in text messages that are based
              on the message template.
        CreationDate:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: "The date, in ISO 8601 format, when the message template\
              \ was created."
        DefaultSubstitutions:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The JSON object that specifies the default values that are
              used for message variables in the message template. This object is a
              set of key-value pairs. Each key defines a message variable in the template.
              The corresponding value defines the default value for that variable.
        LastModifiedDate:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: "The date, in ISO 8601 format, when the message template\
              \ was last modified."
        RecommenderId:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The unique identifier for the recommender model that's used
              by the message template.
        tags:
          allOf:
          - $ref: '#/components/schemas/MapOf__string'
          - description: A string-to-string map of key-value pairs that identifies
              the tags that are associated with the message template. Each tag consists
              of a required tag key and an associated tag value.
        TemplateDescription:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The custom description of the message template.
        TemplateName:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The name of the message template.
        TemplateType:
          allOf:
          - $ref: '#/components/schemas/TemplateType'
          - description: "The type of channel that the message template is designed\
              \ for. For an SMS template, this value is SMS."
        Version:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: "The unique identifier, as an integer, for the active version\
              \ of the message template, or the version of the template that you specified\
              \ by using the version parameter in your request."
      required:
      - CreationDate
      - LastModifiedDate
      - TemplateName
      - TemplateType
      type: object
    GetUserEndpointsRequest:
      properties: {}
      title: GetUserEndpointsRequest
      type: object
    GetVoiceChannelRequest:
      properties: {}
      title: GetVoiceChannelRequest
      type: object
    GetVoiceTemplateRequest:
      properties: {}
      title: GetVoiceTemplateRequest
      type: object
    VoiceTemplateResponse:
      description: Provides information about the content and settings for a message
        template that can be used in messages that are sent through the voice channel.
      example:
        CreationDate: ""
        LanguageCode: ""
        LastModifiedDate: ""
        Version: ""
        TemplateName: ""
        VoiceId: ""
        DefaultSubstitutions: ""
        TemplateDescription: ""
        TemplateType: ""
        Arn: ""
        Body: ""
        tags: ""
      properties:
        Arn:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The Amazon Resource Name (ARN) of the message template.
        Body:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: "The text of the script that's used in messages that are\
              \ based on the message template, in plain text format."
        CreationDate:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: "The date, in ISO 8601 format, when the message template\
              \ was created."
        DefaultSubstitutions:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The JSON object that specifies the default values that are
              used for message variables in the message template. This object is a
              set of key-value pairs. Each key defines a message variable in the template.
              The corresponding value defines the default value for that variable.
        LanguageCode:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: "The code for the language that's used when synthesizing\
              \ the text of the script in messages that are based on the message template.\
              \ For a list of supported languages and the code for each one, see the\
              \ <a href=\"https://docs.aws.amazon.com/polly/latest/dg/what-is.html\"\
              >Amazon Polly Developer Guide</a>."
        LastModifiedDate:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: "The date, in ISO 8601 format, when the message template\
              \ was last modified."
        tags:
          allOf:
          - $ref: '#/components/schemas/MapOf__string'
          - description: A string-to-string map of key-value pairs that identifies
              the tags that are associated with the message template. Each tag consists
              of a required tag key and an associated tag value.
        TemplateDescription:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The custom description of the message template.
        TemplateName:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The name of the message template.
        TemplateType:
          allOf:
          - $ref: '#/components/schemas/TemplateType'
          - description: "The type of channel that the message template is designed\
              \ for. For a voice template, this value is VOICE."
        Version:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: "The unique identifier, as an integer, for the active version\
              \ of the message template, or the version of the template that you specified\
              \ by using the version parameter in your request."
        VoiceId:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: "The name of the voice that's used when delivering messages\
              \ that are based on the message template. For a list of supported voices,\
              \ see the <a href=\"https://docs.aws.amazon.com/polly/latest/dg/what-is.html\"\
              >Amazon Polly Developer Guide</a>."
      required:
      - CreationDate
      - LastModifiedDate
      - TemplateName
      - TemplateType
      type: object
    ImportJobResource:
      description: Provides information about the resource settings for a job that
        imports endpoint definitions from one or more files. The files can be stored
        in an Amazon Simple Storage Service (Amazon S3) bucket or uploaded directly
        from a computer by using the Amazon Pinpoint console.
      properties:
        DefineSegment:
          allOf:
          - $ref: '#/components/schemas/__boolean'
          - description: "Specifies whether the import job creates a segment that\
              \ contains the endpoints, when the endpoint definitions are imported."
        ExternalId:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: "(Deprecated) Your AWS account ID, which you assigned to\
              \ an external ID key in an IAM trust policy. Amazon Pinpoint previously\
              \ used this value to assume an IAM role when importing endpoint definitions,\
              \ but we removed this requirement. We don't recommend use of external\
              \ IDs for IAM roles that are assumed by Amazon Pinpoint."
        Format:
          allOf:
          - $ref: '#/components/schemas/Format'
          - description: "<p>The format of the files that contain the endpoint definitions\
              \ to import. Valid values are: CSV, for comma-separated values format;\
              \ and, JSON, for newline-delimited JSON format.</p> <p>If the files\
              \ are stored in an Amazon S3 location and that location contains multiple\
              \ files that use different formats, Amazon Pinpoint imports data only\
              \ from the files that use the specified format.</p>"
        RegisterEndpoints:
          allOf:
          - $ref: '#/components/schemas/__boolean'
          - description: "Specifies whether the import job registers the endpoints\
              \ with Amazon Pinpoint, when the endpoint definitions are imported."
        RoleArn:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The Amazon Resource Name (ARN) of the AWS Identity and Access
              Management (IAM) role that authorizes Amazon Pinpoint to access the
              Amazon S3 location to import endpoint definitions from.
        S3Url:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: "<p>The URL of the Amazon Simple Storage Service (Amazon\
              \ S3) bucket that contains the endpoint definitions to import. This\
              \ location can be a folder or a single file. If the location is a folder,\
              \ Amazon Pinpoint imports endpoint definitions from the files in this\
              \ location, including any subfolders that the folder contains.</p> <p>The\
              \ URL should be in the following format: s3://<replaceable>bucket-name</replaceable>/<replaceable>folder-name</replaceable>/<replaceable>file-name</replaceable>.\
              \ The location can end with the key for an individual object or a prefix\
              \ that qualifies multiple objects.</p>"
        SegmentId:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: "The identifier for the segment that the import job updates\
              \ or adds endpoint definitions to, if the import job updates an existing\
              \ segment."
        SegmentName:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: "The custom name for the segment that's created by the import\
              \ job, if the value of the DefineSegment property is true."
      required:
      - Format
      - RoleArn
      - S3Url
      type: object
    ListOfImportJobResponse:
      items:
        $ref: '#/components/schemas/ImportJobResponse'
      type: array
    InAppCampaignSchedule:
      description: Schedule of the campaign.
      properties:
        EndDate:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The scheduled time after which the in-app message should
              not be shown. Timestamp is in ISO 8601 format.
        EventFilter:
          $ref: '#/components/schemas/InAppCampaignSchedule_EventFilter'
        QuietTime:
          $ref: '#/components/schemas/InAppCampaignSchedule_QuietTime'
      type: object
    InAppMessage:
      description: Provides all fields required for building an in-app message.
      properties:
        Content:
          allOf:
          - $ref: '#/components/schemas/ListOfInAppMessageContent'
          - description: In-app message content.
        CustomConfig:
          allOf:
          - $ref: '#/components/schemas/MapOf__string'
          - description: Custom config to be sent to SDK.
        Layout:
          allOf:
          - $ref: '#/components/schemas/Layout'
          - description: The layout of the message.
      type: object
    InAppMessageBodyConfig:
      description: Text config for Message Body.
      properties:
        Alignment:
          allOf:
          - $ref: '#/components/schemas/Alignment'
          - description: "The alignment of the text. Valid values: LEFT, CENTER, RIGHT."
        Body:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: Message Body.
        TextColor:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The text color.
      required:
      - Alignment
      - Body
      - TextColor
      type: object
    OverrideButtonConfiguration:
      description: Override button configuration.
      properties:
        ButtonAction:
          allOf:
          - $ref: '#/components/schemas/ButtonAction'
          - description: Action triggered by the button.
        Link:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: Button destination.
      required:
      - ButtonAction
      type: object
    InAppMessageButton:
      description: Button Config for an in-app message.
      properties:
        Android:
          $ref: '#/components/schemas/InAppMessageButton_Android'
        DefaultConfig:
          $ref: '#/components/schemas/InAppMessageButton_DefaultConfig'
        IOS:
          $ref: '#/components/schemas/InAppMessageButton_Android'
        Web:
          $ref: '#/components/schemas/InAppMessageButton_Android'
      type: object
    InAppMessageCampaign:
      description: Targeted in-app message campaign.
      properties:
        CampaignId:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: Campaign id of the corresponding campaign.
        DailyCap:
          allOf:
          - $ref: '#/components/schemas/__integer'
          - description: Daily cap which controls the number of times any in-app messages
              can be shown to the endpoint during a day.
        InAppMessage:
          $ref: '#/components/schemas/InAppMessageCampaign_InAppMessage'
        Priority:
          allOf:
          - $ref: '#/components/schemas/__integer'
          - description: Priority of the in-app message.
        Schedule:
          $ref: '#/components/schemas/InAppMessageCampaign_Schedule'
        SessionCap:
          allOf:
          - $ref: '#/components/schemas/__integer'
          - description: Session cap which controls the number of times an in-app
              message can be shown to the endpoint during an application session.
        TotalCap:
          allOf:
          - $ref: '#/components/schemas/__integer'
          - description: Total cap which controls the number of times an in-app message
              can be shown to the endpoint.
        TreatmentId:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: Treatment id of the campaign.
      type: object
    InAppMessageHeaderConfig:
      description: Text config for Message Header.
      properties:
        Alignment:
          allOf:
          - $ref: '#/components/schemas/Alignment'
          - description: "The alignment of the text. Valid values: LEFT, CENTER, RIGHT."
        Header:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: Message Header.
        TextColor:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The text color.
      required:
      - Alignment
      - Header
      - TextColor
      type: object
    InAppMessageContent:
      description: The configuration for the message content.
      properties:
        BackgroundColor:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The background color for the message.
        BodyConfig:
          $ref: '#/components/schemas/InAppMessageContent_BodyConfig'
        HeaderConfig:
          $ref: '#/components/schemas/InAppMessageContent_HeaderConfig'
        ImageUrl:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The image url for the background of message.
        PrimaryBtn:
          $ref: '#/components/schemas/InAppMessageContent_PrimaryBtn'
        SecondaryBtn:
          $ref: '#/components/schemas/InAppMessageContent_SecondaryBtn'
      type: object
    ListOfInAppMessageCampaign:
      items:
        $ref: '#/components/schemas/InAppMessageCampaign'
      type: array
    Include:
      enum:
      - ALL
      - ANY
      - NONE
      type: string
    MapOfEventItemResponse:
      additionalProperties:
        $ref: '#/components/schemas/EventItemResponse'
      type: object
    ItemResponse:
      description: Provides information about the results of a request to create or
        update an endpoint that's associated with an event.
      properties:
        EndpointItemResponse:
          $ref: '#/components/schemas/ItemResponse_EndpointItemResponse'
        EventsItemResponse:
          allOf:
          - $ref: '#/components/schemas/MapOfEventItemResponse'
          - description: "A multipart response object that contains a key and a value\
              \ for each event in the request. In each object, the event ID is the\
              \ key and an EventItemResponse object is the value."
      type: object
    JourneyPushMessage:
      description: Specifies the message configuration for a push notification that's
        sent to participants in a journey.
      properties:
        TimeToLive:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: "<p>The number of seconds that the push notification service\
              \ should keep the message, if the service is unable to deliver the notification\
              \ the first time. This value is converted to an expiration value when\
              \ it's sent to a push-notification service. If this value is 0, the\
              \ service treats the notification as if it expires immediately and the\
              \ service doesn't store or try to deliver the notification again.</p>\
              \ <p>This value doesn't apply to messages that are sent through the\
              \ Amazon Device Messaging (ADM) service.</p>"
      type: object
    JourneyRunStatus:
      enum:
      - SCHEDULED
      - RUNNING
      - COMPLETED
      - CANCELLED
      type: string
    JourneyRunResponse:
      description: Provides information from a specified run of a journey.
      properties:
        CreationTime:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: "The time when the journey run was created or scheduled,\
              \ in ISO 8601 format."
        LastUpdateTime:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: "The last time the journey run was updated, in ISO 8601 format.."
        RunId:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The unique identifier for the run.
        Status:
          allOf:
          - $ref: '#/components/schemas/JourneyRunStatus'
          - description: The current status of the journey run.
      required:
      - CreationTime
      - LastUpdateTime
      - RunId
      - Status
      type: object
    ListOfJourneyRunResponse:
      items:
        $ref: '#/components/schemas/JourneyRunResponse'
      type: array
    JourneySMSMessage:
      description: Specifies the sender ID and message type for an SMS message that's
        sent to participants in a journey.
      properties:
        MessageType:
          allOf:
          - $ref: '#/components/schemas/MessageType'
          - description: "The SMS message type. Valid values are TRANSACTIONAL (for\
              \ messages that are critical or time-sensitive, such as a one-time passwords)\
              \ and PROMOTIONAL (for messsages that aren't critical or time-sensitive,\
              \ such as marketing messages)."
        OriginationNumber:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: "The long code to send the SMS message from. This value should\
              \ be one of the dedicated long codes that's assigned to your AWS account.\
              \ Although it isn't required, we recommend that you specify the long\
              \ code using an E.164 format to ensure prompt and accurate delivery\
              \ of the message. For example, +12065550100."
        SenderId:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: "The sender ID to display as the sender of the message on\
              \ a recipient's device. Support for sender IDs varies by country or\
              \ region. For more information, see <a href=\"https://docs.aws.amazon.com/pinpoint/latest/userguide/channels-sms-countries.html\"\
              >Supported Countries and Regions</a> in the Amazon Pinpoint User Guide."
        EntityId:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The entity ID or Principal Entity (PE) id received from the
              regulatory body for sending SMS in your country.
        TemplateId:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The template ID received from the regulatory body for sending
              SMS in your country.
      type: object
    JourneyStateRequest:
      description: Changes the status of a journey.
      example:
        State: ""
      properties:
        State:
          allOf:
          - $ref: '#/components/schemas/State'
          - description: "<p>The status of the journey. Currently, Supported values\
              \ are ACTIVE, PAUSED, and CANCELLED</p> <p>If you cancel a journey,\
              \ Amazon Pinpoint continues to perform activities that are currently\
              \ in progress, until those activities are complete. Amazon Pinpoint\
              \ also continues to collect and aggregate analytics data for those activities,\
              \ until they are complete, and any activities that were complete when\
              \ you cancelled the journey.</p> <p>After you cancel a journey, you\
              \ can't add, change, or remove any activities from the journey. In addition,\
              \ Amazon Pinpoint stops evaluating the journey and doesn't perform any\
              \ activities that haven't started.</p> <p>When the journey is paused,\
              \ Amazon Pinpoint continues to perform activities that are currently\
              \ in progress, until those activities are complete. Endpoints will stop\
              \ entering journeys when the journey is paused and will resume entering\
              \ the journey after the journey is resumed. For wait activities, wait\
              \ time is paused when the journey is paused. Currently, PAUSED only\
              \ supports journeys with a segment refresh interval.</p>"
      type: object
    ListOfJourneyResponse:
      items:
        $ref: '#/components/schemas/JourneyResponse'
      type: array
    JourneysResponse:
      description: "Provides information about the status, configuration, and other\
        \ settings for all the journeys that are associated with an application."
      example:
        Item: ""
        NextToken: ""
      properties:
        Item:
          allOf:
          - $ref: '#/components/schemas/ListOfJourneyResponse'
          - description: "An array of responses, one for each journey that's associated\
              \ with the application."
        NextToken:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The string to use in a subsequent request to get the next
              page of results in a paginated response. This value is null if there
              are no additional pages.
      required:
      - Item
      type: object
    ListJourneysRequest:
      properties: {}
      title: ListJourneysRequest
      type: object
    ListOfRecommenderConfigurationResponse:
      items:
        $ref: '#/components/schemas/RecommenderConfigurationResponse'
      type: array
    ListTagsForResourceRequest:
      properties: {}
      title: ListTagsForResourceRequest
      type: object
    TagsModel:
      description: "Specifies the tags (keys and values) for an application, campaign,\
        \ message template, or segment."
      example:
        tags: ""
      properties:
        tags:
          allOf:
          - $ref: '#/components/schemas/MapOf__string'
          - description: "<p>A string-to-string map of key-value pairs that defines\
              \ the tags for an application, campaign, message template, or segment.\
              \ Each of these resources can have a maximum of 50 tags.</p> <p>Each\
              \ tag consists of a required tag key and an associated tag value. The\
              \ maximum length of a tag key is 128 characters. The maximum length\
              \ of a tag value is 256 characters.</p>"
      required:
      - tags
      type: object
    ListTemplateVersionsRequest:
      properties: {}
      title: ListTemplateVersionsRequest
      type: object
    TemplateVersionsResponse:
      description: Provides information about all the versions of a specific message
        template.
      example:
        Item: ""
        Message: ""
        NextToken: ""
        RequestID: ""
      properties:
        Item:
          allOf:
          - $ref: '#/components/schemas/ListOfTemplateVersionResponse'
          - description: "An array of responses, one for each version of the message\
              \ template."
        Message:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The message that's returned from the API for the request
              to retrieve information about all the versions of the message template.
        NextToken:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The string to use in a subsequent request to get the next
              page of results in a paginated response. This value is null if there
              are no additional pages.
        RequestID:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The unique identifier for the request to retrieve information
              about all the versions of the message template.
      required:
      - Item
      type: object
    ListTemplatesRequest:
      properties: {}
      title: ListTemplatesRequest
      type: object
    TemplatesResponse:
      description: Provides information about all the message templates that are associated
        with your Amazon Pinpoint account.
      example:
        Item: ""
        NextToken: ""
      properties:
        Item:
          allOf:
          - $ref: '#/components/schemas/ListOfTemplateResponse'
          - description: "An array of responses, one for each message template that's\
              \ associated with your Amazon Pinpoint account and meets any filter\
              \ criteria that you specified in the request."
        NextToken:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The string to use in a subsequent request to get the next
              page of results in a paginated response. This value is null if there
              are no additional pages.
      required:
      - Item
      type: object
    Message:
      description: Specifies the content and settings for a push notification that's
        sent to recipients of a campaign.
      properties:
        Action:
          allOf:
          - $ref: '#/components/schemas/Action'
          - description: <p>The action to occur if a recipient taps the push notification.
              Valid values are:</p> <ul><li><p>OPEN_APP - Your app opens or it becomes
              the foreground app if it was sent to the background. This is the default
              action.</p></li> <li><p>DEEP_LINK - Your app opens and displays a designated
              user interface in the app. This setting uses the deep-linking features
              of iOS and Android.</p></li> <li><p>URL - The default mobile browser
              on the recipient's device opens and loads the web page at a URL that
              you specify.</p></li></ul>
        Body:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The body of the notification message. The maximum number
              of characters is 200.
        ImageIconUrl:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: "The URL of the image to display as the push-notification\
              \ icon, such as the icon for the app."
        ImageSmallIconUrl:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: "The URL of the image to display as the small, push-notification\
              \ icon, such as a small version of the icon for the app."
        ImageUrl:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The URL of an image to display in the push notification.
        JsonBody:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The JSON payload to use for a silent push notification.
        MediaUrl:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The URL of the image or video to display in the push notification.
        RawContent:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: "The raw, JSON-formatted string to use as the payload for\
              \ the notification message. If specified, this value overrides all other\
              \ content for the message."
        SilentPush:
          allOf:
          - $ref: '#/components/schemas/__boolean'
          - description: "Specifies whether the notification is a silent push notification,\
              \ which is a push notification that doesn't display on a recipient's\
              \ device. Silent push notifications can be used for cases such as updating\
              \ an app's configuration, displaying messages in an in-app message center,\
              \ or supporting phone home functionality."
        TimeToLive:
          allOf:
          - $ref: '#/components/schemas/__integer'
          - description: "<p>The number of seconds that the push-notification service\
              \ should keep the message, if the service is unable to deliver the notification\
              \ the first time. This value is converted to an expiration value when\
              \ it's sent to a push-notification service. If this value is 0, the\
              \ service treats the notification as if it expires immediately and the\
              \ service doesn't store or try to deliver the notification again.</p>\
              \ <p>This value doesn't apply to messages that are sent through the\
              \ Amazon Device Messaging (ADM) service.</p>"
        Title:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The title to display above the notification message on a
              recipient's device.
        Url:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: "The URL to open in a recipient's default mobile browser,\
              \ if a recipient taps the push notification and the value of the Action\
              \ property is URL."
      type: object
    MessageRequest:
      description: Specifies the configuration and other settings for a message.
      example:
        Addresses: ""
        Context: ""
        Endpoints: ""
        MessageConfiguration:
          APNSMessage:
            Action: ""
            CollapseId: ""
            MediaUrl: ""
            Category: ""
            TimeToLive: ""
            Priority: ""
            Title: ""
            Data: ""
            Sound: ""
            Badge: ""
            Url: ""
            PreferredAuthenticationMethod: ""
            APNSPushType: ""
            ThreadId: ""
            Substitutions: ""
            SilentPush: ""
            Body: ""
            RawContent: ""
          BaiduMessage:
            Action: ""
            TimeToLive: ""
            IconReference: ""
            ImageUrl: ""
            SmallImageIconUrl: ""
            Title: ""
            Data: ""
            Sound: ""
            Url: ""
            Substitutions: ""
            ImageIconUrl: ""
            SilentPush: ""
            Body: ""
            RawContent: ""
          DefaultMessage:
            Substitutions: ""
            Body: ""
          EmailMessage:
            FromAddress: ""
            FeedbackForwardingAddress: ""
            Substitutions: ""
            RawEmail:
              Data: ""
            ReplyToAddresses: ""
            SimpleEmail:
              HtmlPart:
                Charset: ""
                Data: ""
              TextPart:
                Charset: ""
                Data: ""
              Subject:
                Charset: ""
                Data: ""
            Body: ""
          VoiceMessage:
            LanguageCode: ""
            OriginationNumber: ""
            Substitutions: ""
            VoiceId: ""
            Body: ""
          GCMMessage:
            Action: ""
            TimeToLive: ""
            Priority: ""
            IconReference: ""
            ImageUrl: ""
            SmallImageIconUrl: ""
            Title: ""
            Data: ""
            Sound: ""
            Url: ""
            RestrictedPackageName: ""
            PreferredAuthenticationMethod: ""
            Substitutions: ""
            ImageIconUrl: ""
            SilentPush: ""
            Body: ""
            CollapseKey: ""
            RawContent: ""
          SMSMessage:
            EntityId: ""
            MediaUrl: ""
            OriginationNumber: ""
            Keyword: ""
            Substitutions: ""
            SenderId: ""
            Body: ""
            MessageType: ""
            TemplateId: ""
          DefaultPushNotificationMessage:
            Action: ""
            Substitutions: ""
            Title: ""
            Data: ""
            SilentPush: ""
            Body: ""
            Url: ""
          ADMMessage:
            Action: ""
            ConsolidationKey: ""
            IconReference: ""
            ImageUrl: ""
            SmallImageIconUrl: ""
            Title: ""
            Data: ""
            Sound: ""
            ExpiresAfter: ""
            Url: ""
            Substitutions: ""
            ImageIconUrl: ""
            SilentPush: ""
            Body: ""
            RawContent: ""
            MD5: ""
        TraceId: ""
        TemplateConfiguration:
          SMSTemplate:
            Version: ""
            Name: ""
          EmailTemplate:
            Version: ""
            Name: ""
          InAppTemplate:
            Version: ""
            Name: ""
          PushTemplate:
            Version: ""
            Name: ""
          VoiceTemplate:
            Version: ""
            Name: ""
      properties:
        Addresses:
          allOf:
          - $ref: '#/components/schemas/MapOfAddressConfiguration'
          - description: "A map of key-value pairs, where each key is an address and\
              \ each value is an <a href=\"https://docs.aws.amazon.com/pinpoint/latest/apireference/apps-application-id-messages.html#apps-application-id-messages-model-addressconfiguration\"\
              >AddressConfiguration</a> object. An address can be a push notification\
              \ token, a phone number, or an email address. You can use an <a href=\"\
              https://docs.aws.amazon.com/pinpoint/latest/apireference/apps-application-id-messages.html#apps-application-id-messages-model-addressconfiguration\"\
              >AddressConfiguration</a> object to tailor the message for an address\
              \ by specifying settings such as content overrides and message variables."
        Context:
          allOf:
          - $ref: '#/components/schemas/MapOf__string'
          - description: "A map of custom attributes to attach to the message. For\
              \ a push notification, this payload is added to the data.pinpoint object.\
              \ For an email or text message, this payload is added to email/SMS delivery\
              \ receipt event attributes."
        Endpoints:
          allOf:
          - $ref: '#/components/schemas/MapOfEndpointSendConfiguration'
          - description: "A map of key-value pairs, where each key is an endpoint\
              \ ID and each value is an <a href=\"https://docs.aws.amazon.com/pinpoint/latest/apireference/apps-application-id-messages.html#apps-application-id-messages-model-endpointsendconfiguration\"\
              >EndpointSendConfiguration</a> object. You can use an <a href=\"https://docs.aws.amazon.com/pinpoint/latest/apireference/apps-application-id-messages.html#apps-application-id-messages-model-endpointsendconfiguration\"\
              >EndpointSendConfiguration</a> object to tailor the message for an endpoint\
              \ by specifying settings such as content overrides and message variables."
        MessageConfiguration:
          $ref: '#/components/schemas/SendMessages_request_MessageRequest_MessageConfiguration'
        TemplateConfiguration:
          $ref: '#/components/schemas/SendMessages_request_MessageRequest_TemplateConfiguration'
        TraceId:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The unique identifier for tracing the message. This identifier
              is visible to message recipients.
      required:
      - MessageConfiguration
      type: object
    MapOfEndpointMessageResult:
      additionalProperties:
        $ref: '#/components/schemas/EndpointMessageResult'
      type: object
    MapOfMessageResult:
      additionalProperties:
        $ref: '#/components/schemas/MessageResult'
      type: object
    MessageResponse:
      description: Provides information about the results of a request to send a message
        to an endpoint address.
      example:
        RequestId: ""
        EndpointResult: ""
        ApplicationId: ""
        Result: ""
      properties:
        ApplicationId:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The unique identifier for the application that was used to
              send the message.
        EndpointResult:
          allOf:
          - $ref: '#/components/schemas/MapOfEndpointMessageResult'
          - description: "A map that contains a multipart response for each address\
              \ that the message was sent to. In the map, the endpoint ID is the key\
              \ and the result is the value."
        RequestId:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The identifier for the original request that the message
              was delivered for.
        Result:
          allOf:
          - $ref: '#/components/schemas/MapOfMessageResult'
          - description: "A map that contains a multipart response for each address\
              \ (email address, phone number, or push notification token) that the\
              \ message was sent to. In the map, the address is the key and the result\
              \ is the value."
      required:
      - ApplicationId
      type: object
    MessageResult:
      description: Provides information about the results of sending a message directly
        to an endpoint address.
      properties:
        DeliveryStatus:
          allOf:
          - $ref: '#/components/schemas/DeliveryStatus'
          - description: <p>The delivery status of the message. Possible values are:</p>
              <ul> <li><p>DUPLICATE - The endpoint address is a duplicate of another
              endpoint address. Amazon Pinpoint won't attempt to send the message
              again.</p></li>   <li><p>OPT_OUT - The user who's associated with the
              endpoint address has opted out of receiving messages from you. Amazon
              Pinpoint won't attempt to send the message again.</p></li> <li><p>PERMANENT_FAILURE
              - An error occurred when delivering the message to the endpoint address.
              Amazon Pinpoint won't attempt to send the message again.</p></li>   <li><p>SUCCESSFUL
              - The message was successfully delivered to the endpoint address.</p></li>
              <li><p>TEMPORARY_FAILURE - A temporary error occurred. Amazon Pinpoint
              won't attempt to send the message again.</p></li> <li><p>THROTTLED -
              Amazon Pinpoint throttled the operation to send the message to the endpoint
              address.</p></li> <li><p>TIMEOUT - The message couldn't be sent within
              the timeout period.</p></li> <li><p>UNKNOWN_FAILURE - An unknown error
              occurred.</p></li></ul>
        MessageId:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The unique identifier for the message that was sent.
        StatusCode:
          allOf:
          - $ref: '#/components/schemas/__integer'
          - description: The downstream service status code for delivering the message.
        StatusMessage:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The status message for delivering the message.
        UpdatedToken:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: "For push notifications that are sent through the GCM channel,\
              \ specifies whether the endpoint's device registration token was updated\
              \ as part of delivering the message."
      required:
      - DeliveryStatus
      - StatusCode
      type: object
    MetricDimension:
      description: Specifies metric-based criteria for including or excluding endpoints
        from a segment. These criteria derive from custom metrics that you define
        for endpoints.
      properties:
        ComparisonOperator:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: "The operator to use when comparing metric values. Valid\
              \ values are: GREATER_THAN, LESS_THAN, GREATER_THAN_OR_EQUAL, LESS_THAN_OR_EQUAL,\
              \ and EQUAL."
        Value:
          allOf:
          - $ref: '#/components/schemas/__double'
          - description: The value to compare.
      required:
      - ComparisonOperator
      - Value
      type: object
    SimpleCondition:
      description: Specifies a condition to evaluate for an activity in a journey.
      properties:
        EventCondition:
          $ref: '#/components/schemas/SimpleCondition_EventCondition'
        SegmentCondition:
          $ref: '#/components/schemas/SimpleCondition_SegmentCondition'
        SegmentDimensions:
          $ref: '#/components/schemas/SimpleCondition_SegmentDimensions'
      type: object
    MultiConditionalBranch:
      description: Specifies a condition to evaluate for an activity path in a journey.
      properties:
        Condition:
          $ref: '#/components/schemas/MultiConditionalBranch_Condition'
        NextActivity:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: "The unique identifier for the next activity to perform,\
              \ after completing the activity for the path."
      type: object
    ListOfMultiConditionalBranch:
      items:
        $ref: '#/components/schemas/MultiConditionalBranch'
      type: array
    NumberValidateRequest:
      description: Specifies a phone number to validate and retrieve information about.
      example:
        PhoneNumber: ""
        IsoCountryCode: ""
      properties:
        IsoCountryCode:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: "The two-character code, in ISO 3166-1 alpha-2 format, for\
              \ the country or region where the phone number was originally registered."
        PhoneNumber:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: "The phone number to retrieve information about. The phone\
              \ number that you provide should include a valid numeric country code.\
              \ Otherwise, the operation might result in an error."
      type: object
    NumberValidateResponse:
      description: Provides information about a phone number.
      example:
        Timezone: ""
        CleansedPhoneNumberNational: ""
        CountryCodeIso2: ""
        ZipCode: ""
        City: ""
        County: ""
        PhoneTypeCode: ""
        CountryCodeNumeric: ""
        PhoneType: ""
        Country: ""
        Carrier: ""
        CleansedPhoneNumberE164: ""
        OriginalCountryCodeIso2: ""
        OriginalPhoneNumber: ""
      properties:
        Carrier:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: "The carrier or service provider that the phone number is\
              \ currently registered with. In some countries and regions, this value\
              \ may be the carrier or service provider that the phone number was originally\
              \ registered with."
        City:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The name of the city where the phone number was originally
              registered.
        CleansedPhoneNumberE164:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: "The cleansed phone number, in E.164 format, for the location\
              \ where the phone number was originally registered."
        CleansedPhoneNumberNational:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: "The cleansed phone number, in the format for the location\
              \ where the phone number was originally registered."
        Country:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The name of the country or region where the phone number
              was originally registered.
        CountryCodeIso2:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: "The two-character code, in ISO 3166-1 alpha-2 format, for\
              \ the country or region where the phone number was originally registered."
        CountryCodeNumeric:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The numeric code for the country or region where the phone
              number was originally registered.
        County:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The name of the county where the phone number was originally
              registered.
        OriginalCountryCodeIso2:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: "The two-character code, in ISO 3166-1 alpha-2 format, that\
              \ was sent in the request body."
        OriginalPhoneNumber:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The phone number that was sent in the request body.
        PhoneType:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: |-
              The description of the phone type. Valid values are: MOBILE, LANDLINE, VOIP,
                                INVALID, PREPAID, and OTHER.
        PhoneTypeCode:
          allOf:
          - $ref: '#/components/schemas/__integer'
          - description: "The phone type, represented by an integer. Valid values\
              \ are: 0 (mobile), 1 (landline), 2 (VoIP), 3 (invalid), 4 (other), and\
              \ 5 (prepaid)."
        Timezone:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The time zone for the location where the phone number was
              originally registered.
        ZipCode:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The postal or ZIP code for the location where the phone number
              was originally registered.
      type: object
    PhoneNumberValidateRequest:
      example:
        NumberValidateRequest:
          PhoneNumber: ""
          IsoCountryCode: ""
      properties:
        NumberValidateRequest:
          $ref: '#/components/schemas/NumberValidateRequest'
      required:
      - NumberValidateRequest
      title: PhoneNumberValidateRequest
      type: object
    WriteEventStream:
      description: Specifies the Amazon Resource Name (ARN) of an event stream to
        publish events to and the AWS Identity and Access Management (IAM) role to
        use when publishing those events.
      example:
        DestinationStreamArn: ""
        RoleArn: ""
      properties:
        DestinationStreamArn:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: |-
              <p>The Amazon Resource Name (ARN) of the Amazon Kinesis data stream or Amazon Kinesis Data Firehose delivery stream that you want to publish event data to.</p> <p>For a Kinesis data stream, the ARN format is: arn:aws:kinesis:<replaceable>region</replaceable>:<replaceable>account-id</replaceable>:stream/<replaceable>stream_name</replaceable>
                             </p> <p>For a Kinesis Data Firehose delivery stream, the ARN format is: arn:aws:firehose:<replaceable>region</replaceable>:<replaceable>account-id</replaceable>:deliverystream/<replaceable>stream_name</replaceable>
                             </p>
        RoleArn:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The AWS Identity and Access Management (IAM) role that authorizes
              Amazon Pinpoint to publish event data to the stream in your AWS account.
      required:
      - DestinationStreamArn
      - RoleArn
      type: object
    PutEventStreamRequest:
      example:
        WriteEventStream:
          DestinationStreamArn: ""
          RoleArn: ""
      properties:
        WriteEventStream:
          $ref: '#/components/schemas/WriteEventStream'
      required:
      - WriteEventStream
      title: PutEventStreamRequest
      type: object
    PutEventsRequest:
      example:
        EventsRequest:
          BatchItem: ""
      properties:
        EventsRequest:
          $ref: '#/components/schemas/EventsRequest'
      required:
      - EventsRequest
      title: PutEventsRequest
      type: object
    ListOfRandomSplitEntry:
      items:
        $ref: '#/components/schemas/RandomSplitEntry'
      type: array
    RandomSplitEntry:
      description: Specifies the settings for a path in a random split activity in
        a journey.
      properties:
        NextActivity:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: "The unique identifier for the next activity to perform,\
              \ after completing the activity for the path."
        Percentage:
          allOf:
          - $ref: '#/components/schemas/__integer'
          - description: "<p>The percentage of participants to send down the activity\
              \ path.</p> <p>To determine which participants are sent down each path,\
              \ Amazon Pinpoint applies a probability-based algorithm to the percentages\
              \ that you specify for the paths. Therefore, the actual percentage of\
              \ participants who are sent down a path may not be equal to the percentage\
              \ that you specify.</p>"
      type: object
    __blob:
      type: string
    RecencyType:
      enum:
      - ACTIVE
      - INACTIVE
      type: string
    RecencyDimension:
      description: Specifies criteria for including or excluding endpoints from a
        segment based on how recently an endpoint was active.
      properties:
        Duration:
          allOf:
          - $ref: '#/components/schemas/Duration'
          - description: The duration to use when determining whether an endpoint
              is active or inactive.
        RecencyType:
          allOf:
          - $ref: '#/components/schemas/RecencyType'
          - description: "The type of recency dimension to use for the segment. Valid\
              \ values are: ACTIVE, endpoints that were active within the specified\
              \ duration are included in the segment; and, INACTIVE, endpoints that\
              \ weren't active within the specified duration are included in the segment."
      required:
      - Duration
      - RecencyType
      type: object
    UpdateAttributesRequest:
      description: Specifies one or more attributes to remove from all the endpoints
        that are associated with an application.
      example:
        Blacklist: ""
      properties:
        Blacklist:
          allOf:
          - $ref: '#/components/schemas/ListOf__string'
          - description: "An array of the attributes to remove from all the endpoints\
              \ that are associated with the application. The array can specify the\
              \ complete, exact name of each attribute to remove or it can specify\
              \ a glob pattern that an attribute name must match in order for the\
              \ attribute to be removed."
      type: object
    RemoveAttributesRequest:
      example:
        UpdateAttributesRequest:
          Blacklist: ""
      properties:
        UpdateAttributesRequest:
          $ref: '#/components/schemas/UpdateAttributesRequest'
      required:
      - UpdateAttributesRequest
      title: RemoveAttributesRequest
      type: object
    ListOfResultRowValue:
      items:
        $ref: '#/components/schemas/ResultRowValue'
      type: array
    ResultRow:
      description: "Provides the results of a query that retrieved the data for a\
        \ standard metric that applies to an application, campaign, or journey."
      properties:
        GroupedBys:
          allOf:
          - $ref: '#/components/schemas/ListOfResultRowValue'
          - description: An array of objects that defines the field and field values
              that were used to group data in a result set that contains multiple
              results. This value is null if the data in a result set isn’t grouped.
        Values:
          allOf:
          - $ref: '#/components/schemas/ListOfResultRowValue'
          - description: "An array of objects that provides pre-aggregated values\
              \ for a standard metric that applies to an application, campaign, or\
              \ journey."
      required:
      - GroupedBys
      - Values
      type: object
    ResultRowValue:
      description: "Provides a single value and metadata about that value as part\
        \ of an array of query results for a standard metric that applies to an application,\
        \ campaign, or journey."
      properties:
        Key:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The friendly name of the metric whose value is specified
              by the Value property.
        Type:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The data type of the value specified by the Value property.
        Value:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: "In a Values object, the value for the metric that the query\
              \ retrieved data for. In a GroupedBys object, the value for the field\
              \ that was used to group data in a result set that contains multiple\
              \ results (Values objects)."
      required:
      - Key
      - Type
      - Value
      type: object
    SMSChannelRequest:
      description: Specifies the status and settings of the SMS channel for an application.
      example:
        ShortCode: ""
        Enabled: ""
        SenderId: ""
      properties:
        Enabled:
          allOf:
          - $ref: '#/components/schemas/__boolean'
          - description: Specifies whether to enable the SMS channel for the application.
        SenderId:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The identity that you want to display on recipients' devices
              when they receive messages from the SMS channel.
        ShortCode:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The registered short code that you want to use when you send
              messages through the SMS channel.
      type: object
    SegmentBehaviors:
      description: Specifies dimension settings for including or excluding endpoints
        from a segment based on how recently an endpoint was active.
      properties:
        Recency:
          $ref: '#/components/schemas/SegmentBehaviors_Recency'
      type: object
    SegmentCondition:
      description: Specifies a segment to associate with an activity in a journey.
      properties:
        SegmentId:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The unique identifier for the segment to associate with the
              activity.
      required:
      - SegmentId
      type: object
    SegmentDemographics:
      description: "Specifies demographic-based dimension settings for including or\
        \ excluding endpoints from a segment. These settings derive from characteristics\
        \ of endpoint devices, such as platform, make, and model."
      properties:
        AppVersion:
          $ref: '#/components/schemas/SegmentDemographics_AppVersion'
        Channel:
          $ref: '#/components/schemas/SegmentDemographics_Channel'
        DeviceType:
          $ref: '#/components/schemas/SegmentDemographics_DeviceType'
        Make:
          $ref: '#/components/schemas/SegmentDemographics_Make'
        Model:
          $ref: '#/components/schemas/SegmentDemographics_Model'
        Platform:
          $ref: '#/components/schemas/SegmentDemographics_Platform'
      type: object
    SegmentLocation:
      description: Specifies geographical dimension settings for a segment.
      properties:
        Country:
          $ref: '#/components/schemas/SegmentLocation_Country'
        GPSPoint:
          $ref: '#/components/schemas/SegmentLocation_GPSPoint'
      type: object
    ListOfSegmentDimensions:
      items:
        $ref: '#/components/schemas/SegmentDimensions'
      type: array
    ListOfSegmentReference:
      items:
        $ref: '#/components/schemas/SegmentReference'
      type: array
    SourceType:
      enum:
      - ALL
      - ANY
      - NONE
      type: string
    Type:
      enum:
      - ALL
      - ANY
      - NONE
      type: string
    SegmentGroup:
      description: "Specifies the base segments and dimensions for a segment, and\
        \ the relationships between these base segments and dimensions."
      properties:
        Dimensions:
          allOf:
          - $ref: '#/components/schemas/ListOfSegmentDimensions'
          - description: An array that defines the dimensions for the segment.
        SourceSegments:
          allOf:
          - $ref: '#/components/schemas/ListOfSegmentReference'
          - description: "<p>The base segment to build the segment on. A base segment,\
              \ also referred to as a <i>source segment</i>, defines the initial population\
              \ of endpoints for a segment. When you add dimensions to a segment,\
              \ Amazon Pinpoint filters the base segment by using the dimensions that\
              \ you specify.</p> <p>You can specify more than one dimensional segment\
              \ or only one imported segment. If you specify an imported segment,\
              \ the Amazon Pinpoint console displays a segment size estimate that\
              \ indicates the size of the imported segment without any filters applied\
              \ to it.</p>"
        SourceType:
          allOf:
          - $ref: '#/components/schemas/SourceType'
          - description: "Specifies how to handle multiple base segments for the segment.\
              \ For example, if you specify three base segments for the segment, whether\
              \ the resulting segment is based on all, any, or none of the base segments."
        Type:
          allOf:
          - $ref: '#/components/schemas/Type'
          - description: "Specifies how to handle multiple dimensions for the segment.\
              \ For example, if you specify three dimensions for the segment, whether\
              \ the resulting segment includes endpoints that match all, any, or none\
              \ of the dimensions."
      type: object
    ListOfSegmentGroup:
      items:
        $ref: '#/components/schemas/SegmentGroup'
      type: array
    MapOf__integer:
      additionalProperties:
        $ref: '#/components/schemas/__integer'
      type: object
    SegmentImportResource:
      description: Provides information about the import job that created a segment.
        An import job is a job that creates a user segment by importing endpoint definitions.
      properties:
        ChannelCounts:
          allOf:
          - $ref: '#/components/schemas/MapOf__integer'
          - description: The number of channel types in the endpoint definitions that
              were imported to create the segment.
        ExternalId:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: "(Deprecated) Your AWS account ID, which you assigned to\
              \ an external ID key in an IAM trust policy. Amazon Pinpoint previously\
              \ used this value to assume an IAM role when importing endpoint definitions,\
              \ but we removed this requirement. We don't recommend use of external\
              \ IDs for IAM roles that are assumed by Amazon Pinpoint."
        Format:
          allOf:
          - $ref: '#/components/schemas/Format'
          - description: "The format of the files that were imported to create the\
              \ segment. Valid values are: CSV, for comma-separated values format;\
              \ and, JSON, for newline-delimited JSON format."
        RoleArn:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The Amazon Resource Name (ARN) of the AWS Identity and Access
              Management (IAM) role that authorized Amazon Pinpoint to access the
              Amazon S3 location to import endpoint definitions from.
        S3Url:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The URL of the Amazon Simple Storage Service (Amazon S3)
              bucket that the endpoint definitions were imported from to create the
              segment.
        Size:
          allOf:
          - $ref: '#/components/schemas/__integer'
          - description: The number of endpoint definitions that were imported successfully
              to create the segment.
      required:
      - ExternalId
      - Format
      - RoleArn
      - S3Url
      - Size
      type: object
    SegmentReference:
      description: Specifies the segment identifier and version of a segment.
      properties:
        Id:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The unique identifier for the segment.
        Version:
          allOf:
          - $ref: '#/components/schemas/__integer'
          - description: The version number of the segment.
      required:
      - Id
      type: object
    SegmentType:
      enum:
      - DIMENSIONAL
      - IMPORT
      type: string
    ListOfSegmentResponse:
      items:
        $ref: '#/components/schemas/SegmentResponse'
      type: array
    SendMessagesRequest:
      example:
        MessageRequest:
          Addresses: ""
          Context: ""
          Endpoints: ""
          MessageConfiguration:
            APNSMessage:
              Action: ""
              CollapseId: ""
              MediaUrl: ""
              Category: ""
              TimeToLive: ""
              Priority: ""
              Title: ""
              Data: ""
              Sound: ""
              Badge: ""
              Url: ""
              PreferredAuthenticationMethod: ""
              APNSPushType: ""
              ThreadId: ""
              Substitutions: ""
              SilentPush: ""
              Body: ""
              RawContent: ""
            BaiduMessage:
              Action: ""
              TimeToLive: ""
              IconReference: ""
              ImageUrl: ""
              SmallImageIconUrl: ""
              Title: ""
              Data: ""
              Sound: ""
              Url: ""
              Substitutions: ""
              ImageIconUrl: ""
              SilentPush: ""
              Body: ""
              RawContent: ""
            DefaultMessage:
              Substitutions: ""
              Body: ""
            EmailMessage:
              FromAddress: ""
              FeedbackForwardingAddress: ""
              Substitutions: ""
              RawEmail:
                Data: ""
              ReplyToAddresses: ""
              SimpleEmail:
                HtmlPart:
                  Charset: ""
                  Data: ""
                TextPart:
                  Charset: ""
                  Data: ""
                Subject:
                  Charset: ""
                  Data: ""
              Body: ""
            VoiceMessage:
              LanguageCode: ""
              OriginationNumber: ""
              Substitutions: ""
              VoiceId: ""
              Body: ""
            GCMMessage:
              Action: ""
              TimeToLive: ""
              Priority: ""
              IconReference: ""
              ImageUrl: ""
              SmallImageIconUrl: ""
              Title: ""
              Data: ""
              Sound: ""
              Url: ""
              RestrictedPackageName: ""
              PreferredAuthenticationMethod: ""
              Substitutions: ""
              ImageIconUrl: ""
              SilentPush: ""
              Body: ""
              CollapseKey: ""
              RawContent: ""
            SMSMessage:
              EntityId: ""
              MediaUrl: ""
              OriginationNumber: ""
              Keyword: ""
              Substitutions: ""
              SenderId: ""
              Body: ""
              MessageType: ""
              TemplateId: ""
            DefaultPushNotificationMessage:
              Action: ""
              Substitutions: ""
              Title: ""
              Data: ""
              SilentPush: ""
              Body: ""
              Url: ""
            ADMMessage:
              Action: ""
              ConsolidationKey: ""
              IconReference: ""
              ImageUrl: ""
              SmallImageIconUrl: ""
              Title: ""
              Data: ""
              Sound: ""
              ExpiresAfter: ""
              Url: ""
              Substitutions: ""
              ImageIconUrl: ""
              SilentPush: ""
              Body: ""
              RawContent: ""
              MD5: ""
          TraceId: ""
          TemplateConfiguration:
            SMSTemplate:
              Version: ""
              Name: ""
            EmailTemplate:
              Version: ""
              Name: ""
            InAppTemplate:
              Version: ""
              Name: ""
            PushTemplate:
              Version: ""
              Name: ""
            VoiceTemplate:
              Version: ""
              Name: ""
      properties:
        MessageRequest:
          $ref: '#/components/schemas/MessageRequest'
      required:
      - MessageRequest
      title: SendMessagesRequest
      type: object
    SendOTPMessageRequestParameters:
      description: Send OTP message request parameters.
      example:
        BrandName: ""
        EntityId: ""
        CodeLength: ""
        AllowedAttempts: ""
        Language: ""
        ReferenceId: ""
        Channel: ""
        ValidityPeriod: ""
        DestinationIdentity: ""
        OriginationIdentity: ""
        TemplateId: ""
      properties:
        AllowedAttempts:
          allOf:
          - $ref: '#/components/schemas/__integer'
          - description: The attempts allowed to validate an OTP.
        BrandName:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The brand name that will be substituted into the OTP message
              body. Should be owned by calling AWS account.
        Channel:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: "Channel type for the OTP message. Supported values: [SMS]."
        CodeLength:
          allOf:
          - $ref: '#/components/schemas/__integer'
          - description: The number of characters in the generated OTP.
        DestinationIdentity:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The destination identity to send OTP to.
        EntityId:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: A unique Entity ID received from DLT after entity registration
              is approved.
        Language:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The language to be used for the outgoing message body containing
              the OTP.
        OriginationIdentity:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The origination identity used to send OTP from.
        ReferenceId:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: Developer-specified reference identifier. Required to match
              during OTP verification.
        TemplateId:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: A unique Template ID received from DLT after entity registration
              is approved.
        ValidityPeriod:
          allOf:
          - $ref: '#/components/schemas/__integer'
          - description: The time in minutes before the OTP is no longer valid.
      required:
      - BrandName
      - Channel
      - DestinationIdentity
      - OriginationIdentity
      - ReferenceId
      type: object
    SendOTPMessageRequest:
      example:
        SendOTPMessageRequestParameters:
          BrandName: ""
          EntityId: ""
          CodeLength: ""
          AllowedAttempts: ""
          Language: ""
          ReferenceId: ""
          Channel: ""
          ValidityPeriod: ""
          DestinationIdentity: ""
          OriginationIdentity: ""
          TemplateId: ""
      properties:
        SendOTPMessageRequestParameters:
          $ref: '#/components/schemas/SendOTPMessageRequestParameters'
      required:
      - SendOTPMessageRequestParameters
      title: SendOTPMessageRequest
      type: object
    SendUsersMessageRequest:
      description: Specifies the configuration and other settings for a message to
        send to all the endpoints that are associated with a list of users.
      example:
        Context: ""
        MessageConfiguration:
          APNSMessage:
            Action: ""
            CollapseId: ""
            MediaUrl: ""
            Category: ""
            TimeToLive: ""
            Priority: ""
            Title: ""
            Data: ""
            Sound: ""
            Badge: ""
            Url: ""
            PreferredAuthenticationMethod: ""
            APNSPushType: ""
            ThreadId: ""
            Substitutions: ""
            SilentPush: ""
            Body: ""
            RawContent: ""
          BaiduMessage:
            Action: ""
            TimeToLive: ""
            IconReference: ""
            ImageUrl: ""
            SmallImageIconUrl: ""
            Title: ""
            Data: ""
            Sound: ""
            Url: ""
            Substitutions: ""
            ImageIconUrl: ""
            SilentPush: ""
            Body: ""
            RawContent: ""
          DefaultMessage:
            Substitutions: ""
            Body: ""
          EmailMessage:
            FromAddress: ""
            FeedbackForwardingAddress: ""
            Substitutions: ""
            RawEmail:
              Data: ""
            ReplyToAddresses: ""
            SimpleEmail:
              HtmlPart:
                Charset: ""
                Data: ""
              TextPart:
                Charset: ""
                Data: ""
              Subject:
                Charset: ""
                Data: ""
            Body: ""
          VoiceMessage:
            LanguageCode: ""
            OriginationNumber: ""
            Substitutions: ""
            VoiceId: ""
            Body: ""
          GCMMessage:
            Action: ""
            TimeToLive: ""
            Priority: ""
            IconReference: ""
            ImageUrl: ""
            SmallImageIconUrl: ""
            Title: ""
            Data: ""
            Sound: ""
            Url: ""
            RestrictedPackageName: ""
            PreferredAuthenticationMethod: ""
            Substitutions: ""
            ImageIconUrl: ""
            SilentPush: ""
            Body: ""
            CollapseKey: ""
            RawContent: ""
          SMSMessage:
            EntityId: ""
            MediaUrl: ""
            OriginationNumber: ""
            Keyword: ""
            Substitutions: ""
            SenderId: ""
            Body: ""
            MessageType: ""
            TemplateId: ""
          DefaultPushNotificationMessage:
            Action: ""
            Substitutions: ""
            Title: ""
            Data: ""
            SilentPush: ""
            Body: ""
            Url: ""
          ADMMessage:
            Action: ""
            ConsolidationKey: ""
            IconReference: ""
            ImageUrl: ""
            SmallImageIconUrl: ""
            Title: ""
            Data: ""
            Sound: ""
            ExpiresAfter: ""
            Url: ""
            Substitutions: ""
            ImageIconUrl: ""
            SilentPush: ""
            Body: ""
            RawContent: ""
            MD5: ""
        TraceId: ""
        TemplateConfiguration:
          SMSTemplate:
            Version: ""
            Name: ""
          EmailTemplate:
            Version: ""
            Name: ""
          InAppTemplate:
            Version: ""
            Name: ""
          PushTemplate:
            Version: ""
            Name: ""
          VoiceTemplate:
            Version: ""
            Name: ""
        Users: ""
      properties:
        Context:
          allOf:
          - $ref: '#/components/schemas/MapOf__string'
          - description: "A map of custom attribute-value pairs. For a push notification,\
              \ Amazon Pinpoint adds these attributes to the data.pinpoint object\
              \ in the body of the notification payload. Amazon Pinpoint also provides\
              \ these attributes in the events that it generates for users-messages\
              \ deliveries."
        MessageConfiguration:
          $ref: '#/components/schemas/SendMessages_request_MessageRequest_MessageConfiguration'
        TemplateConfiguration:
          $ref: '#/components/schemas/SendMessages_request_MessageRequest_TemplateConfiguration'
        TraceId:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The unique identifier for tracing the message. This identifier
              is visible to message recipients.
        Users:
          allOf:
          - $ref: '#/components/schemas/MapOfEndpointSendConfiguration'
          - description: A map that associates user IDs with <a href="https://docs.aws.amazon.com/pinpoint/latest/apireference/apps-application-id-messages.html#apps-application-id-messages-model-endpointsendconfiguration">EndpointSendConfiguration</a>
              objects. You can use an <a href="https://docs.aws.amazon.com/pinpoint/latest/apireference/apps-application-id-messages.html#apps-application-id-messages-model-endpointsendconfiguration">EndpointSendConfiguration</a>
              object to tailor the message for a user by specifying settings such
              as content overrides and message variables.
      required:
      - MessageConfiguration
      - Users
      type: object
    MapOfMapOfEndpointMessageResult:
      additionalProperties:
        $ref: '#/components/schemas/MapOfEndpointMessageResult'
      type: object
    SendUsersMessageResponse:
      description: Provides information about which users and endpoints a message
        was sent to.
      example:
        RequestId: ""
        ApplicationId: ""
        Result: ""
      properties:
        ApplicationId:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The unique identifier for the application that was used to
              send the message.
        RequestId:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The unique identifier that was assigned to the message request.
        Result:
          allOf:
          - $ref: '#/components/schemas/MapOfMapOfEndpointMessageResult'
          - description: "An object that indicates which endpoints the message was\
              \ sent to, for each user. The object lists user IDs and, for each user\
              \ ID, provides the endpoint IDs that the message was sent to. For each\
              \ endpoint ID, it provides an EndpointMessageResult object."
      required:
      - ApplicationId
      type: object
    SendUsersMessagesRequest:
      example:
        SendUsersMessageRequest:
          Context: ""
          MessageConfiguration:
            APNSMessage:
              Action: ""
              CollapseId: ""
              MediaUrl: ""
              Category: ""
              TimeToLive: ""
              Priority: ""
              Title: ""
              Data: ""
              Sound: ""
              Badge: ""
              Url: ""
              PreferredAuthenticationMethod: ""
              APNSPushType: ""
              ThreadId: ""
              Substitutions: ""
              SilentPush: ""
              Body: ""
              RawContent: ""
            BaiduMessage:
              Action: ""
              TimeToLive: ""
              IconReference: ""
              ImageUrl: ""
              SmallImageIconUrl: ""
              Title: ""
              Data: ""
              Sound: ""
              Url: ""
              Substitutions: ""
              ImageIconUrl: ""
              SilentPush: ""
              Body: ""
              RawContent: ""
            DefaultMessage:
              Substitutions: ""
              Body: ""
            EmailMessage:
              FromAddress: ""
              FeedbackForwardingAddress: ""
              Substitutions: ""
              RawEmail:
                Data: ""
              ReplyToAddresses: ""
              SimpleEmail:
                HtmlPart:
                  Charset: ""
                  Data: ""
                TextPart:
                  Charset: ""
                  Data: ""
                Subject:
                  Charset: ""
                  Data: ""
              Body: ""
            VoiceMessage:
              LanguageCode: ""
              OriginationNumber: ""
              Substitutions: ""
              VoiceId: ""
              Body: ""
            GCMMessage:
              Action: ""
              TimeToLive: ""
              Priority: ""
              IconReference: ""
              ImageUrl: ""
              SmallImageIconUrl: ""
              Title: ""
              Data: ""
              Sound: ""
              Url: ""
              RestrictedPackageName: ""
              PreferredAuthenticationMethod: ""
              Substitutions: ""
              ImageIconUrl: ""
              SilentPush: ""
              Body: ""
              CollapseKey: ""
              RawContent: ""
            SMSMessage:
              EntityId: ""
              MediaUrl: ""
              OriginationNumber: ""
              Keyword: ""
              Substitutions: ""
              SenderId: ""
              Body: ""
              MessageType: ""
              TemplateId: ""
            DefaultPushNotificationMessage:
              Action: ""
              Substitutions: ""
              Title: ""
              Data: ""
              SilentPush: ""
              Body: ""
              Url: ""
            ADMMessage:
              Action: ""
              ConsolidationKey: ""
              IconReference: ""
              ImageUrl: ""
              SmallImageIconUrl: ""
              Title: ""
              Data: ""
              Sound: ""
              ExpiresAfter: ""
              Url: ""
              Substitutions: ""
              ImageIconUrl: ""
              SilentPush: ""
              Body: ""
              RawContent: ""
              MD5: ""
          TraceId: ""
          TemplateConfiguration:
            SMSTemplate:
              Version: ""
              Name: ""
            EmailTemplate:
              Version: ""
              Name: ""
            InAppTemplate:
              Version: ""
              Name: ""
            PushTemplate:
              Version: ""
              Name: ""
            VoiceTemplate:
              Version: ""
              Name: ""
          Users: ""
      properties:
        SendUsersMessageRequest:
          $ref: '#/components/schemas/SendUsersMessageRequest'
      required:
      - SendUsersMessageRequest
      title: SendUsersMessagesRequest
      type: object
    SimpleEmailPart:
      description: "Specifies the subject or body of an email message, represented\
        \ as textual email data and the applicable character set."
      properties:
        Charset:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The applicable character set for the message content.
        Data:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The textual data of the message content.
      type: object
    TagResourceRequest:
      example:
        TagsModel:
          tags: ""
      properties:
        TagsModel:
          $ref: '#/components/schemas/TagsModel'
      required:
      - TagsModel
      title: TagResourceRequest
      type: object
    Template:
      description: Specifies the name and version of the message template to use for
        the message.
      properties:
        Name:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: "The name of the message template to use for the message.\
              \ If specified, this value must match the name of an existing message\
              \ template."
        Version:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: "<p>The unique identifier for the version of the message\
              \ template to use for the message. If specified, this value must match\
              \ the identifier for an existing template version. To retrieve a list\
              \ of versions and version identifiers for a template, use the <link\
              \  linkend=\"templates-template-name-template-type-versions\">Template\
              \ Versions</link> resource.</p> <p>If you don't specify a value for\
              \ this property, Amazon Pinpoint uses the <i>active version</i> of the\
              \ template. The <i>active version</i> is typically the version of a\
              \ template that's been most recently reviewed and approved for use,\
              \ depending on your workflow. It isn't necessarily the latest version\
              \ of a template.</p>"
      type: object
    TemplateActiveVersionRequest:
      description: Specifies which version of a message template to use as the active
        version of the template.
      example:
        Version: ""
      properties:
        Version:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: "The version of the message template to use as the active\
              \ version of the template. Valid values are: latest, for the most recent\
              \ version of the template; or, the unique identifier for any existing\
              \ version of the template. If you specify an identifier, the value must\
              \ match the identifier for an existing template version. To retrieve\
              \ a list of versions and version identifiers for a template, use the\
              \ <link  linkend=\"templates-template-name-template-type-versions\"\
              >Template Versions</link> resource."
      type: object
    TemplateResponse:
      description: Provides information about a message template that's associated
        with your Amazon Pinpoint account.
      properties:
        Arn:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: "The Amazon Resource Name (ARN) of the message template.\
              \ This value isn't included in a TemplateResponse object. To retrieve\
              \ the ARN of a template, use the GetEmailTemplate, GetPushTemplate,\
              \ GetSmsTemplate, or GetVoiceTemplate operation, depending on the type\
              \ of template that you want to retrieve the ARN for."
        CreationDate:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: "The date, in ISO 8601 format, when the message template\
              \ was created."
        DefaultSubstitutions:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: "The JSON object that specifies the default values that are\
              \ used for message variables in the message template. This object isn't\
              \ included in a TemplateResponse object. To retrieve this object for\
              \ a template, use the GetEmailTemplate, GetPushTemplate, GetSmsTemplate,\
              \ or GetVoiceTemplate operation, depending on the type of template that\
              \ you want to retrieve the object for."
        LastModifiedDate:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: "The date, in ISO 8601 format, when the message template\
              \ was last modified."
        tags:
          allOf:
          - $ref: '#/components/schemas/MapOf__string'
          - description: "A map of key-value pairs that identifies the tags that are\
              \ associated with the message template. This object isn't included in\
              \ a TemplateResponse object. To retrieve this object for a template,\
              \ use the GetEmailTemplate, GetPushTemplate, GetSmsTemplate, or GetVoiceTemplate\
              \ operation, depending on the type of template that you want to retrieve\
              \ the object for."
        TemplateDescription:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: "The custom description of the message template. This value\
              \ isn't included in a TemplateResponse object. To retrieve the description\
              \ of a template, use the GetEmailTemplate, GetPushTemplate, GetSmsTemplate,\
              \ or GetVoiceTemplate operation, depending on the type of template that\
              \ you want to retrieve the description for."
        TemplateName:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The name of the message template.
        TemplateType:
          allOf:
          - $ref: '#/components/schemas/TemplateType'
          - description: "The type of channel that the message template is designed\
              \ for. Possible values are: EMAIL, PUSH, SMS, INAPP, and VOICE."
        Version:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: "The unique identifier, as an integer, for the active version\
              \ of the message template."
      required:
      - CreationDate
      - LastModifiedDate
      - TemplateName
      - TemplateType
      type: object
    TemplateVersionResponse:
      description: Provides information about a specific version of a message template.
      properties:
        CreationDate:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: "The date, in ISO 8601 format, when the version of the message\
              \ template was created."
        DefaultSubstitutions:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: A JSON object that specifies the default values that are
              used for message variables in the version of the message template. This
              object is a set of key-value pairs. Each key defines a message variable
              in the template. The corresponding value defines the default value for
              that variable.
        LastModifiedDate:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: "The date, in ISO 8601 format, when the version of the message\
              \ template was last modified."
        TemplateDescription:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The custom description of the version of the message template.
        TemplateName:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The name of the message template.
        TemplateType:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: "The type of channel that the message template is designed\
              \ for. Possible values are: EMAIL, PUSH, SMS, INAPP, and VOICE."
        Version:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The unique identifier for the version of the message template.
              This value is an integer that Amazon Pinpoint automatically increments
              and assigns to each new version of a template.
      required:
      - CreationDate
      - LastModifiedDate
      - TemplateName
      - TemplateType
      type: object
    ListOfTemplateVersionResponse:
      items:
        $ref: '#/components/schemas/TemplateVersionResponse'
      type: array
    ListOfTemplateResponse:
      items:
        $ref: '#/components/schemas/TemplateResponse'
      type: array
    TreatmentResource:
      description: Specifies the settings for a campaign treatment. A <i>treatment</i>
        is a variation of a campaign that's used for A/B testing of a campaign.
      properties:
        CustomDeliveryConfiguration:
          $ref: '#/components/schemas/TreatmentResource_CustomDeliveryConfiguration'
        Id:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The unique identifier for the treatment.
        MessageConfiguration:
          $ref: '#/components/schemas/TreatmentResource_MessageConfiguration'
        Schedule:
          $ref: '#/components/schemas/TreatmentResource_Schedule'
        SizePercent:
          allOf:
          - $ref: '#/components/schemas/__integer'
          - description: The allocated percentage of users (segment members) that
              the treatment is sent to.
        State:
          $ref: '#/components/schemas/TreatmentResource_State'
        TemplateConfiguration:
          $ref: '#/components/schemas/TreatmentResource_TemplateConfiguration'
        TreatmentDescription:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The custom description of the treatment.
        TreatmentName:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The custom name of the treatment.
      required:
      - Id
      - SizePercent
      type: object
    UntagResourceRequest:
      properties: {}
      title: UntagResourceRequest
      type: object
    UpdateAdmChannelRequest:
      example:
        ADMChannelRequest:
          ClientSecret: ""
          ClientId: ""
          Enabled: ""
      properties:
        ADMChannelRequest:
          $ref: '#/components/schemas/ADMChannelRequest'
      required:
      - ADMChannelRequest
      title: UpdateAdmChannelRequest
      type: object
    UpdateApnsChannelRequest:
      example:
        APNSChannelRequest:
          BundleId: ""
          PrivateKey: ""
          DefaultAuthenticationMethod: ""
          Enabled: ""
          TokenKey: ""
          TeamId: ""
          Certificate: ""
          TokenKeyId: ""
      properties:
        APNSChannelRequest:
          $ref: '#/components/schemas/APNSChannelRequest'
      required:
      - APNSChannelRequest
      title: UpdateApnsChannelRequest
      type: object
    UpdateApnsSandboxChannelRequest:
      example:
        APNSSandboxChannelRequest:
          BundleId: ""
          PrivateKey: ""
          DefaultAuthenticationMethod: ""
          Enabled: ""
          TokenKey: ""
          TeamId: ""
          Certificate: ""
          TokenKeyId: ""
      properties:
        APNSSandboxChannelRequest:
          $ref: '#/components/schemas/APNSSandboxChannelRequest'
      required:
      - APNSSandboxChannelRequest
      title: UpdateApnsSandboxChannelRequest
      type: object
    UpdateApnsVoipChannelRequest:
      example:
        APNSVoipChannelRequest:
          BundleId: ""
          PrivateKey: ""
          DefaultAuthenticationMethod: ""
          Enabled: ""
          TokenKey: ""
          TeamId: ""
          Certificate: ""
          TokenKeyId: ""
      properties:
        APNSVoipChannelRequest:
          $ref: '#/components/schemas/APNSVoipChannelRequest'
      required:
      - APNSVoipChannelRequest
      title: UpdateApnsVoipChannelRequest
      type: object
    UpdateApnsVoipSandboxChannelRequest:
      example:
        APNSVoipSandboxChannelRequest:
          BundleId: ""
          PrivateKey: ""
          DefaultAuthenticationMethod: ""
          Enabled: ""
          TokenKey: ""
          TeamId: ""
          Certificate: ""
          TokenKeyId: ""
      properties:
        APNSVoipSandboxChannelRequest:
          $ref: '#/components/schemas/APNSVoipSandboxChannelRequest'
      required:
      - APNSVoipSandboxChannelRequest
      title: UpdateApnsVoipSandboxChannelRequest
      type: object
    WriteApplicationSettingsRequest:
      description: Specifies the default settings for an application.
      example:
        Limits:
          Daily: ""
          MaximumDuration: ""
          Total: ""
          MessagesPerSecond: ""
          Session: ""
        QuietTime:
          Start: ""
          End: ""
        JourneyLimits:
          DailyCap: ""
          TimeframeCap:
            Cap: ""
            Days: ""
          TotalCap: ""
        CampaignHook:
          Mode: ""
          WebUrl: ""
          LambdaFunctionName: ""
        EventTaggingEnabled: true
        CloudWatchMetricsEnabled: ""
      properties:
        CampaignHook:
          $ref: '#/components/schemas/UpdateApplicationSettings_request_WriteApplicationSettingsRequest_CampaignHook'
        CloudWatchMetricsEnabled:
          allOf:
          - $ref: '#/components/schemas/__boolean'
          - description: Specifies whether to enable application-related alarms in
              Amazon CloudWatch.
        EventTaggingEnabled:
          type: boolean
        Limits:
          $ref: '#/components/schemas/UpdateApplicationSettings_request_WriteApplicationSettingsRequest_Limits'
        QuietTime:
          $ref: '#/components/schemas/UpdateApplicationSettings_request_WriteApplicationSettingsRequest_QuietTime'
        JourneyLimits:
          $ref: '#/components/schemas/UpdateApplicationSettings_request_WriteApplicationSettingsRequest_JourneyLimits'
      type: object
    UpdateApplicationSettingsRequest:
      example:
        WriteApplicationSettingsRequest:
          Limits:
            Daily: ""
            MaximumDuration: ""
            Total: ""
            MessagesPerSecond: ""
            Session: ""
          QuietTime:
            Start: ""
            End: ""
          JourneyLimits:
            DailyCap: ""
            TimeframeCap:
              Cap: ""
              Days: ""
            TotalCap: ""
          CampaignHook:
            Mode: ""
            WebUrl: ""
            LambdaFunctionName: ""
          EventTaggingEnabled: true
          CloudWatchMetricsEnabled: ""
      properties:
        WriteApplicationSettingsRequest:
          $ref: '#/components/schemas/WriteApplicationSettingsRequest'
      required:
      - WriteApplicationSettingsRequest
      title: UpdateApplicationSettingsRequest
      type: object
    UpdateBaiduChannelRequest:
      example:
        BaiduChannelRequest:
          SecretKey: ""
          ApiKey: ""
          Enabled: ""
      properties:
        BaiduChannelRequest:
          $ref: '#/components/schemas/BaiduChannelRequest'
      required:
      - BaiduChannelRequest
      title: UpdateBaiduChannelRequest
      type: object
    UpdateCampaignRequest:
      properties:
        WriteCampaignRequest:
          $ref: '#/components/schemas/WriteCampaignRequest'
      required:
      - WriteCampaignRequest
      title: UpdateCampaignRequest
      type: object
    UpdateEmailChannelRequest:
      example:
        EmailChannelRequest:
          ConfigurationSet: ""
          FromAddress: ""
          Enabled: ""
          Identity: ""
          RoleArn: ""
      properties:
        EmailChannelRequest:
          $ref: '#/components/schemas/EmailChannelRequest'
      required:
      - EmailChannelRequest
      title: UpdateEmailChannelRequest
      type: object
    UpdateEmailTemplateRequest:
      example:
        EmailTemplateRequest:
          HtmlPart: ""
          RecommenderId: ""
          TextPart: ""
          DefaultSubstitutions: ""
          TemplateDescription: ""
          Subject: ""
          tags: ""
      properties:
        EmailTemplateRequest:
          $ref: '#/components/schemas/EmailTemplateRequest'
      required:
      - EmailTemplateRequest
      title: UpdateEmailTemplateRequest
      type: object
    UpdateEndpointRequest:
      example:
        EndpointRequest:
          EndpointStatus: ""
          Demographic:
            AppVersion: ""
            Locale: ""
            PlatformVersion: ""
            Timezone: ""
            Platform: ""
            Model: ""
            Make: ""
            ModelVersion: ""
          Metrics: ""
          User:
            UserId: ""
            UserAttributes: ""
          Address: ""
          OptOut: ""
          RequestId: ""
          Attributes: ""
          ChannelType: ""
          EffectiveDate: ""
          Location:
            Country: ""
            PostalCode: ""
            Region: ""
            Latitude: ""
            City: ""
            Longitude: ""
      properties:
        EndpointRequest:
          $ref: '#/components/schemas/EndpointRequest'
      required:
      - EndpointRequest
      title: UpdateEndpointRequest
      type: object
    UpdateEndpointsBatchRequest:
      example:
        EndpointBatchRequest:
          Item: ""
      properties:
        EndpointBatchRequest:
          $ref: '#/components/schemas/EndpointBatchRequest'
      required:
      - EndpointBatchRequest
      title: UpdateEndpointsBatchRequest
      type: object
    UpdateGcmChannelRequest:
      example:
        GCMChannelRequest:
          ApiKey: ""
          DefaultAuthenticationMethod: ""
          Enabled: ""
          ServiceJson: ""
      properties:
        GCMChannelRequest:
          $ref: '#/components/schemas/GCMChannelRequest'
      required:
      - GCMChannelRequest
      title: UpdateGcmChannelRequest
      type: object
    UpdateInAppTemplateRequest:
      example:
        InAppTemplateRequest:
          CustomConfig: ""
          Layout: ""
          Content: ""
          TemplateDescription: ""
          tags: ""
      properties:
        InAppTemplateRequest:
          $ref: '#/components/schemas/InAppTemplateRequest'
      required:
      - InAppTemplateRequest
      title: UpdateInAppTemplateRequest
      type: object
    UpdateJourneyRequest:
      properties:
        WriteJourneyRequest:
          $ref: '#/components/schemas/WriteJourneyRequest'
      required:
      - WriteJourneyRequest
      title: UpdateJourneyRequest
      type: object
    UpdateJourneyStateRequest:
      example:
        JourneyStateRequest:
          State: ""
      properties:
        JourneyStateRequest:
          $ref: '#/components/schemas/JourneyStateRequest'
      required:
      - JourneyStateRequest
      title: UpdateJourneyStateRequest
      type: object
    UpdatePushTemplateRequest:
      example:
        PushNotificationTemplateRequest:
          GCM:
            Action: ""
            ImageUrl: ""
            SmallImageIconUrl: ""
            Title: ""
            ImageIconUrl: ""
            Sound: ""
            Body: ""
            RawContent: ""
            Url: ""
          RecommenderId: ""
          Baidu:
            Action: ""
            ImageUrl: ""
            SmallImageIconUrl: ""
            Title: ""
            ImageIconUrl: ""
            Sound: ""
            Body: ""
            RawContent: ""
            Url: ""
          ADM:
            Action: ""
            ImageUrl: ""
            SmallImageIconUrl: ""
            Title: ""
            ImageIconUrl: ""
            Sound: ""
            Body: ""
            RawContent: ""
            Url: ""
          APNS:
            Action: ""
            MediaUrl: ""
            Title: ""
            Sound: ""
            Body: ""
            RawContent: ""
            Url: ""
          DefaultSubstitutions: ""
          TemplateDescription: ""
          Default:
            Action: ""
            Title: ""
            Sound: ""
            Body: ""
            Url: ""
          tags: ""
      properties:
        PushNotificationTemplateRequest:
          $ref: '#/components/schemas/PushNotificationTemplateRequest'
      required:
      - PushNotificationTemplateRequest
      title: UpdatePushTemplateRequest
      type: object
    UpdateRecommenderConfiguration:
      description: Specifies Amazon Pinpoint configuration settings for retrieving
        and processing recommendation data from a recommender model.
      example:
        RecommendationProviderUri: ""
        RecommendationsDisplayName: ""
        Description: ""
        RecommendationsPerMessage: ""
        RecommendationProviderRoleArn: ""
        Attributes: ""
        RecommendationTransformerUri: ""
        Name: ""
        RecommendationProviderIdType: ""
      properties:
        Attributes:
          allOf:
          - $ref: '#/components/schemas/MapOf__string'
          - description: "<p>A map of key-value pairs that defines 1-10 custom endpoint\
              \ or user attributes, depending on the value for the RecommendationProviderIdType\
              \ property. Each of these attributes temporarily stores a recommended\
              \ item that's retrieved from the recommender model and sent to an AWS\
              \ Lambda function for additional processing. Each attribute can be used\
              \ as a message variable in a message template.</p> <p>In the map, the\
              \ key is the name of a custom attribute and the value is a custom display\
              \ name for that attribute. The display name appears in the <b>Attribute\
              \ finder</b> of the template editor on the Amazon Pinpoint console.\
              \ The following restrictions apply to these names:</p> <ul><li><p>An\
              \ attribute name must start with a letter or number and it can contain\
              \ up to 50 characters. The characters can be letters, numbers, underscores\
              \ (_), or hyphens (-). Attribute names are case sensitive and must be\
              \ unique.</p></li> <li><p>An attribute display name must start with\
              \ a letter or number and it can contain up to 25 characters. The characters\
              \ can be letters, numbers, spaces, underscores (_), or hyphens (-).</p></li></ul>\
              \ <p>This object is required if the configuration invokes an AWS Lambda\
              \ function (RecommendationTransformerUri) to process recommendation\
              \ data. Otherwise, don't include this object in your request.</p>"
        Description:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: "A custom description of the configuration for the recommender\
              \ model. The description can contain up to 128 characters. The characters\
              \ can be letters, numbers, spaces, or the following symbols: _ ; ()\
              \ , ‐."
        Name:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: "A custom name of the configuration for the recommender model.\
              \ The name must start with a letter or number and it can contain up\
              \ to 128 characters. The characters can be letters, numbers, spaces,\
              \ underscores (_), or hyphens (-)."
        RecommendationProviderIdType:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: "<p>The type of Amazon Pinpoint ID to associate with unique\
              \ user IDs in the recommender model. This value enables the model to\
              \ use attribute and event data that’s specific to a particular endpoint\
              \ or user in an Amazon Pinpoint application. Valid values are:</p> <ul><li><p>PINPOINT_ENDPOINT_ID\
              \ - Associate each user in the model with a particular endpoint in Amazon\
              \ Pinpoint. The data is correlated based on endpoint IDs in Amazon Pinpoint.\
              \ This is the default value.</p></li> <li><p>PINPOINT_USER_ID - Associate\
              \ each user in the model with a particular user and endpoint in Amazon\
              \ Pinpoint. The data is correlated based on user IDs in Amazon Pinpoint.\
              \ If you specify this value, an endpoint definition in Amazon Pinpoint\
              \ has to specify both a user ID (UserId) and an endpoint ID. Otherwise,\
              \ messages won’t be sent to the user's endpoint.</p></li></ul>"
        RecommendationProviderRoleArn:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The Amazon Resource Name (ARN) of the AWS Identity and Access
              Management (IAM) role that authorizes Amazon Pinpoint to retrieve recommendation
              data from the recommender model.
        RecommendationProviderUri:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The Amazon Resource Name (ARN) of the recommender model to
              retrieve recommendation data from. This value must match the ARN of
              an Amazon Personalize campaign.
        RecommendationTransformerUri:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The name or Amazon Resource Name (ARN) of the AWS Lambda
              function to invoke for additional processing of recommendation data
              that's retrieved from the recommender model.
        RecommendationsDisplayName:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: "<p>A custom display name for the standard endpoint or user\
              \ attribute (RecommendationItems) that temporarily stores recommended\
              \ items for each endpoint or user, depending on the value for the RecommendationProviderIdType\
              \ property. This value is required if the configuration doesn't invoke\
              \ an AWS Lambda function (RecommendationTransformerUri) to perform additional\
              \ processing of recommendation data.</p> <p>This name appears in the\
              \ <b>Attribute finder</b> of the template editor on the Amazon Pinpoint\
              \ console. The name can contain up to 25 characters. The characters\
              \ can be letters, numbers, spaces, underscores (_), or hyphens (-).\
              \ These restrictions don't apply to attribute values.</p>"
        RecommendationsPerMessage:
          allOf:
          - $ref: '#/components/schemas/__integer'
          - description: "<p>The number of recommended items to retrieve from the\
              \ model for each endpoint or user, depending on the value for the RecommendationProviderIdType\
              \ property. This number determines how many recommended items are available\
              \ for use in message variables. The minimum value is 1. The maximum\
              \ value is 5. The default value is 5.</p> <p>To use multiple recommended\
              \ items and custom attributes with message variables, you have to use\
              \ an AWS Lambda function (RecommendationTransformerUri) to perform additional\
              \ processing of recommendation data.</p>"
      required:
      - RecommendationProviderRoleArn
      - RecommendationProviderUri
      type: object
    UpdateRecommenderConfigurationRequest:
      example:
        UpdateRecommenderConfiguration:
          RecommendationProviderUri: ""
          RecommendationsDisplayName: ""
          Description: ""
          RecommendationsPerMessage: ""
          RecommendationProviderRoleArn: ""
          Attributes: ""
          RecommendationTransformerUri: ""
          Name: ""
          RecommendationProviderIdType: ""
      properties:
        UpdateRecommenderConfiguration:
          $ref: '#/components/schemas/UpdateRecommenderConfiguration'
      required:
      - UpdateRecommenderConfiguration
      title: UpdateRecommenderConfigurationRequest
      type: object
    UpdateSegmentRequest:
      properties:
        WriteSegmentRequest:
          $ref: '#/components/schemas/WriteSegmentRequest'
      required:
      - WriteSegmentRequest
      title: UpdateSegmentRequest
      type: object
    UpdateSmsChannelRequest:
      example:
        SMSChannelRequest:
          ShortCode: ""
          Enabled: ""
          SenderId: ""
      properties:
        SMSChannelRequest:
          $ref: '#/components/schemas/SMSChannelRequest'
      required:
      - SMSChannelRequest
      title: UpdateSmsChannelRequest
      type: object
    UpdateSmsTemplateRequest:
      example:
        SMSTemplateRequest:
          RecommenderId: ""
          DefaultSubstitutions: ""
          TemplateDescription: ""
          Body: ""
          tags: ""
      properties:
        SMSTemplateRequest:
          $ref: '#/components/schemas/SMSTemplateRequest'
      required:
      - SMSTemplateRequest
      title: UpdateSmsTemplateRequest
      type: object
    UpdateTemplateActiveVersionRequest:
      example:
        TemplateActiveVersionRequest:
          Version: ""
      properties:
        TemplateActiveVersionRequest:
          $ref: '#/components/schemas/TemplateActiveVersionRequest'
      required:
      - TemplateActiveVersionRequest
      title: UpdateTemplateActiveVersionRequest
      type: object
    VoiceChannelRequest:
      description: Specifies the status and settings of the voice channel for an application.
      example:
        Enabled: ""
      properties:
        Enabled:
          allOf:
          - $ref: '#/components/schemas/__boolean'
          - description: Specifies whether to enable the voice channel for the application.
      type: object
    UpdateVoiceChannelRequest:
      example:
        VoiceChannelRequest:
          Enabled: ""
      properties:
        VoiceChannelRequest:
          $ref: '#/components/schemas/VoiceChannelRequest'
      required:
      - VoiceChannelRequest
      title: UpdateVoiceChannelRequest
      type: object
    UpdateVoiceTemplateRequest:
      example:
        VoiceTemplateRequest:
          LanguageCode: ""
          VoiceId: ""
          DefaultSubstitutions: ""
          TemplateDescription: ""
          Body: ""
          tags: ""
      properties:
        VoiceTemplateRequest:
          $ref: '#/components/schemas/VoiceTemplateRequest'
      required:
      - VoiceTemplateRequest
      title: UpdateVoiceTemplateRequest
      type: object
    VerificationResponse:
      description: Verify OTP Message Response.
      example:
        Valid: ""
      properties:
        Valid:
          allOf:
          - $ref: '#/components/schemas/__boolean'
          - description: Specifies whether the OTP is valid or not.
      type: object
    VerifyOTPMessageRequestParameters:
      description: Verify OTP message request.
      example:
        ReferenceId: ""
        DestinationIdentity: ""
        Otp: ""
      properties:
        DestinationIdentity:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The destination identity to send OTP to.
        Otp:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The OTP the end user provided for verification.
        ReferenceId:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The reference identifier provided when the OTP was previously
              sent.
      required:
      - DestinationIdentity
      - Otp
      - ReferenceId
      type: object
    VerifyOTPMessageRequest:
      example:
        VerifyOTPMessageRequestParameters:
          ReferenceId: ""
          DestinationIdentity: ""
          Otp: ""
      properties:
        VerifyOTPMessageRequestParameters:
          $ref: '#/components/schemas/VerifyOTPMessageRequestParameters'
      required:
      - VerifyOTPMessageRequestParameters
      title: VerifyOTPMessageRequest
      type: object
    WriteTreatmentResource:
      description: Specifies the settings for a campaign treatment. A <i>treatment</i>
        is a variation of a campaign that's used for A/B testing of a campaign.
      properties:
        CustomDeliveryConfiguration:
          $ref: '#/components/schemas/TreatmentResource_CustomDeliveryConfiguration'
        MessageConfiguration:
          $ref: '#/components/schemas/TreatmentResource_MessageConfiguration'
        Schedule:
          $ref: '#/components/schemas/TreatmentResource_Schedule'
        SizePercent:
          allOf:
          - $ref: '#/components/schemas/__integer'
          - description: The allocated percentage of users (segment members) to send
              the treatment to.
        TemplateConfiguration:
          $ref: '#/components/schemas/TreatmentResource_TemplateConfiguration'
        TreatmentDescription:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: A custom description of the treatment.
        TreatmentName:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: A custom name for the treatment.
      required:
      - SizePercent
      type: object
    __EndpointTypesElement:
      enum:
      - PUSH
      - GCM
      - APNS
      - APNS_SANDBOX
      - APNS_VOIP
      - APNS_VOIP_SANDBOX
      - ADM
      - SMS
      - VOICE
      - EMAIL
      - BAIDU
      - CUSTOM
      - IN_APP
      type: string
    __TimezoneEstimationMethodsElement:
      enum:
      - PHONE_NUMBER
      - POSTAL_CODE
      type: string
    DayOfWeek:
      enum:
      - MONDAY
      - TUESDAY
      - WEDNESDAY
      - THURSDAY
      - FRIDAY
      - SATURDAY
      - SUNDAY
      type: string
    OpenHoursRule:
      description: Specifies the start and end time for OpenHours.
      properties:
        StartTime:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: "The start of the scheduled time, in ISO 8601 format, when\
              \ the channel can send messages."
        EndTime:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: "The end of the scheduled time, in ISO 8601 format, when\
              \ the channel can't send messages."
      type: object
    ListOfOpenHoursRules:
      items:
        $ref: '#/components/schemas/ListOfOpenHoursRules_inner'
      type: array
    MapOfListOfOpenHoursRules:
      additionalProperties:
        $ref: '#/components/schemas/ListOfOpenHoursRules'
      type: object
    ClosedDaysRule:
      description: Specifies the rule settings for when messages can't be sent.
      properties:
        Name:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The name of the closed day rule.
        StartDateTime:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: Start DateTime ISO 8601 format
        EndDateTime:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: End DateTime ISO 8601 format
      type: object
    ListOfClosedDaysRules:
      items:
        $ref: '#/components/schemas/ListOfClosedDaysRules_inner'
      type: array
    CreateApp_request_CreateApplicationRequest:
      description: Specifies the display name of an application and the tags to associate
        with the application.
      properties:
        Name:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The display name of the application. This name is displayed
              as the <b>Project name</b> on the Amazon Pinpoint console.
        tags:
          allOf:
          - $ref: '#/components/schemas/MapOf__string'
          - description: A string-to-string map of key-value pairs that defines the
              tags to associate with the application. Each tag consists of a required
              tag key and an associated tag value.
      type: object
    CreateApp_request:
      properties:
        CreateApplicationRequest:
          $ref: '#/components/schemas/CreateApp_request_CreateApplicationRequest'
      required:
      - CreateApplicationRequest
      type: object
    CreateCampaign_request_WriteCampaignRequest_CustomDeliveryConfiguration:
      allOf:
      - $ref: '#/components/schemas/CustomDeliveryConfiguration'
      - description: The delivery configuration settings for sending the campaign
          through a custom channel. This object is required if the MessageConfiguration
          object for the campaign specifies a CustomMessage object.
      example:
        DeliveryUri: ""
        EndpointTypes: ""
    CreateCampaign_request_WriteCampaignRequest_Hook:
      allOf:
      - $ref: '#/components/schemas/CampaignHook'
      - description: The settings for the AWS Lambda function to invoke as a code
          hook for the campaign. You can use this hook to customize the segment that's
          used by the campaign.
      example:
        Mode: ""
        WebUrl: ""
        LambdaFunctionName: ""
    CreateCampaign_request_WriteCampaignRequest_Limits:
      allOf:
      - $ref: '#/components/schemas/CampaignLimits'
      - description: The messaging limits for the campaign.
      example:
        Daily: ""
        MaximumDuration: ""
        Total: ""
        MessagesPerSecond: ""
        Session: ""
    CreateCampaign_request_WriteCampaignRequest_MessageConfiguration:
      allOf:
      - $ref: '#/components/schemas/MessageConfiguration'
      - description: The message configuration settings for the campaign.
      example:
        APNSMessage:
          JsonBody: ""
          Action: ""
          MediaUrl: ""
          TimeToLive: ""
          ImageSmallIconUrl: ""
          ImageUrl: ""
          Title: ""
          ImageIconUrl: ""
          SilentPush: ""
          Body: ""
          RawContent: ""
          Url: ""
        BaiduMessage:
          JsonBody: ""
          Action: ""
          MediaUrl: ""
          TimeToLive: ""
          ImageSmallIconUrl: ""
          ImageUrl: ""
          Title: ""
          ImageIconUrl: ""
          SilentPush: ""
          Body: ""
          RawContent: ""
          Url: ""
        DefaultMessage:
          JsonBody: ""
          Action: ""
          MediaUrl: ""
          TimeToLive: ""
          ImageSmallIconUrl: ""
          ImageUrl: ""
          Title: ""
          ImageIconUrl: ""
          SilentPush: ""
          Body: ""
          RawContent: ""
          Url: ""
        InAppMessage:
          CustomConfig: ""
          Layout: ""
          Content: ""
          Body: ""
        EmailMessage:
          FromAddress: ""
          HtmlBody: ""
          Title: ""
          Body: ""
        GCMMessage:
          JsonBody: ""
          Action: ""
          MediaUrl: ""
          TimeToLive: ""
          ImageSmallIconUrl: ""
          ImageUrl: ""
          Title: ""
          ImageIconUrl: ""
          SilentPush: ""
          Body: ""
          RawContent: ""
          Url: ""
        SMSMessage:
          EntityId: ""
          OriginationNumber: ""
          SenderId: ""
          Body: ""
          MessageType: ""
          TemplateId: ""
        CustomMessage:
          Data: ""
        ADMMessage:
          JsonBody: ""
          Action: ""
          MediaUrl: ""
          TimeToLive: ""
          ImageSmallIconUrl: ""
          ImageUrl: ""
          Title: ""
          ImageIconUrl: ""
          SilentPush: ""
          Body: ""
          RawContent: ""
          Url: ""
    CreateCampaign_request_WriteCampaignRequest_Schedule:
      allOf:
      - $ref: '#/components/schemas/Schedule'
      - description: The schedule settings for the campaign.
      example:
        Timezone: ""
        QuietTime:
          Start: ""
          End: ""
        EndTime: ""
        StartTime: ""
        Frequency: ""
        EventFilter:
          FilterType: ""
          Dimensions:
            Metrics: ""
            EventType:
              DimensionType: ""
              Values: ""
            Attributes: ""
        IsLocalTime: ""
    CreateCampaign_request_WriteCampaignRequest_TemplateConfiguration:
      allOf:
      - $ref: '#/components/schemas/TemplateConfiguration'
      - description: The message template to use for the campaign.
      example:
        SMSTemplate:
          Version: ""
          Name: ""
        EmailTemplate:
          Version: ""
          Name: ""
        InAppTemplate:
          Version: ""
          Name: ""
        PushTemplate:
          Version: ""
          Name: ""
        VoiceTemplate:
          Version: ""
          Name: ""
    CreateCampaign_request_WriteCampaignRequest:
      description: Specifies the configuration and other settings for a campaign.
      properties:
        AdditionalTreatments:
          allOf:
          - $ref: '#/components/schemas/ListOfWriteTreatmentResource'
          - description: "An array of requests that defines additional treatments\
              \ for the campaign, in addition to the default treatment for the campaign."
        CustomDeliveryConfiguration:
          $ref: '#/components/schemas/CreateCampaign_request_WriteCampaignRequest_CustomDeliveryConfiguration'
        Description:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: A custom description of the campaign.
        HoldoutPercent:
          allOf:
          - $ref: '#/components/schemas/__integer'
          - description: The allocated percentage of users (segment members) who shouldn't
              receive messages from the campaign.
        Hook:
          $ref: '#/components/schemas/CreateCampaign_request_WriteCampaignRequest_Hook'
        IsPaused:
          allOf:
          - $ref: '#/components/schemas/__boolean'
          - description: Specifies whether to pause the campaign. A paused campaign
              doesn't run unless you resume it by changing this value to false.
        Limits:
          $ref: '#/components/schemas/CreateCampaign_request_WriteCampaignRequest_Limits'
        MessageConfiguration:
          $ref: '#/components/schemas/CreateCampaign_request_WriteCampaignRequest_MessageConfiguration'
        Name:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: A custom name for the campaign.
        Schedule:
          $ref: '#/components/schemas/CreateCampaign_request_WriteCampaignRequest_Schedule'
        SegmentId:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The unique identifier for the segment to associate with the
              campaign.
        SegmentVersion:
          allOf:
          - $ref: '#/components/schemas/__integer'
          - description: The version of the segment to associate with the campaign.
        tags:
          allOf:
          - $ref: '#/components/schemas/MapOf__string'
          - description: "<note><p>As of <b>22-05-2023</b> tags has been deprecated\
              \ for update operations. After this date any value in tags is not processed\
              \ and an error code is not returned. To manage tags we recommend using\
              \ either <a href=\"https://docs.aws.amazon.com/pinpoint/latest/apireference/tags-resource-arn.html\"\
              >Tags</a> in the <i>API Reference for Amazon Pinpoint</i>, <a href=\"\
              https://docs.aws.amazon.com/cli/latest/reference/resourcegroupstaggingapi/index.html\"\
              >resourcegroupstaggingapi</a> commands in the <i>AWS Command Line Interface\
              \ Documentation</i> or <a href=\"https://sdk.amazonaws.com/java/api/latest/software/amazon/awssdk/services/resourcegroupstaggingapi/package-summary.html\"\
              >resourcegroupstaggingapi</a> in the <i>AWS SDK</i>.</p></note> <p>(Deprecated)\
              \ A string-to-string map of key-value pairs that defines the tags to\
              \ associate with the campaign. Each tag consists of a required tag key\
              \ and an associated tag value.</p>"
        TemplateConfiguration:
          $ref: '#/components/schemas/CreateCampaign_request_WriteCampaignRequest_TemplateConfiguration'
        TreatmentDescription:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: A custom description of the default treatment for the campaign.
        TreatmentName:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: "A custom name of the default treatment for the campaign,\
              \ if the campaign has multiple treatments. A <i>treatment</i> is a variation\
              \ of a campaign that's used for A/B testing."
        Priority:
          allOf:
          - $ref: '#/components/schemas/__integer'
          - description: "Defines the priority of the campaign, used to decide the\
              \ order of messages displayed to user if there are multiple messages\
              \ scheduled to be displayed at the same moment."
      type: object
    CreateCampaign_request:
      properties:
        WriteCampaignRequest:
          $ref: '#/components/schemas/CreateCampaign_request_WriteCampaignRequest'
      required:
      - WriteCampaignRequest
      type: object
    UpdateEmailTemplate_request_EmailTemplateRequest:
      description: Specifies the content and settings for a message template that
        can be used in messages that are sent through the email channel.
      properties:
        DefaultSubstitutions:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: "A JSON object that specifies the default values to use for\
              \ message variables in the message template. This object is a set of\
              \ key-value pairs. Each key defines a message variable in the template.\
              \ The corresponding value defines the default value for that variable.\
              \ When you create a message that's based on the template, you can override\
              \ these defaults with message-specific and address-specific variables\
              \ and values."
        HtmlPart:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: "The message body, in HTML format, to use in email messages\
              \ that are based on the message template. We recommend using HTML format\
              \ for email clients that render HTML content. You can include links,\
              \ formatted text, and more in an HTML message."
        RecommenderId:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: "The unique identifier for the recommender model to use for\
              \ the message template. Amazon Pinpoint uses this value to determine\
              \ how to retrieve and process data from a recommender model when it\
              \ sends messages that use the template, if the template contains message\
              \ variables for recommendation data."
        Subject:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: "The subject line, or title, to use in email messages that\
              \ are based on the message template."
        tags:
          allOf:
          - $ref: '#/components/schemas/MapOf__string'
          - description: "<note><p>As of <b>22-05-2023</b> tags has been deprecated\
              \ for update operations. After this date any value in tags is not processed\
              \ and an error code is not returned. To manage tags we recommend using\
              \ either <a href=\"https://docs.aws.amazon.com/pinpoint/latest/apireference/tags-resource-arn.html\"\
              >Tags</a> in the <i>API Reference for Amazon Pinpoint</i>, <a href=\"\
              https://docs.aws.amazon.com/cli/latest/reference/resourcegroupstaggingapi/index.html\"\
              >resourcegroupstaggingapi</a> commands in the <i>AWS Command Line Interface\
              \ Documentation</i> or <a href=\"https://sdk.amazonaws.com/java/api/latest/software/amazon/awssdk/services/resourcegroupstaggingapi/package-summary.html\"\
              >resourcegroupstaggingapi</a> in the <i>AWS SDK</i>.</p></note> <p>(Deprecated)\
              \ A string-to-string map of key-value pairs that defines the tags to\
              \ associate with the message template. Each tag consists of a required\
              \ tag key and an associated tag value.</p>"
        TemplateDescription:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: A custom description of the message template.
        TextPart:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: "The message body, in plain text format, to use in email\
              \ messages that are based on the message template. We recommend using\
              \ plain text format for email clients that don't render HTML content\
              \ and clients that are connected to high-latency networks, such as mobile\
              \ devices."
      type: object
    UpdateEmailTemplate_request:
      properties:
        EmailTemplateRequest:
          $ref: '#/components/schemas/UpdateEmailTemplate_request_EmailTemplateRequest'
      required:
      - EmailTemplateRequest
      type: object
    CreateExportJob_request_ExportJobRequest:
      description: Specifies the settings for a job that exports endpoint definitions
        to an Amazon Simple Storage Service (Amazon S3) bucket.
      properties:
        RoleArn:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The Amazon Resource Name (ARN) of the AWS Identity and Access
              Management (IAM) role that authorizes Amazon Pinpoint to access the
              Amazon S3 location where you want to export endpoint definitions to.
        S3UrlPrefix:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: "The URL of the location in an Amazon Simple Storage Service\
              \ (Amazon S3) bucket where you want to export endpoint definitions to.\
              \ This location is typically a folder that contains multiple files.\
              \ The URL should be in the following format: s3://<replaceable>bucket-name</replaceable>/<replaceable>folder-name</replaceable>/."
        SegmentId:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: "The identifier for the segment to export endpoint definitions\
              \ from. If you don't specify this value, Amazon Pinpoint exports definitions\
              \ for all the endpoints that are associated with the application."
        SegmentVersion:
          allOf:
          - $ref: '#/components/schemas/__integer'
          - description: "The version of the segment to export endpoint definitions\
              \ from, if specified."
      type: object
    CreateExportJob_request:
      properties:
        ExportJobRequest:
          $ref: '#/components/schemas/CreateExportJob_request_ExportJobRequest'
      required:
      - ExportJobRequest
      type: object
    CreateImportJob_request_ImportJobRequest:
      description: Specifies the settings for a job that imports endpoint definitions
        from an Amazon Simple Storage Service (Amazon S3) bucket.
      properties:
        DefineSegment:
          allOf:
          - $ref: '#/components/schemas/__boolean'
          - description: "Specifies whether to create a segment that contains the\
              \ endpoints, when the endpoint definitions are imported."
        ExternalId:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: "(Deprecated) Your AWS account ID, which you assigned to\
              \ an external ID key in an IAM trust policy. Amazon Pinpoint previously\
              \ used this value to assume an IAM role when importing endpoint definitions,\
              \ but we removed this requirement. We don't recommend use of external\
              \ IDs for IAM roles that are assumed by Amazon Pinpoint."
        Format:
          allOf:
          - $ref: '#/components/schemas/Format'
          - description: "The format of the files that contain the endpoint definitions\
              \ to import. Valid values are: CSV, for comma-separated values format;\
              \ and, JSON, for newline-delimited JSON format. If the Amazon S3 location\
              \ stores multiple files that use different formats, Amazon Pinpoint\
              \ imports data only from the files that use the specified format."
        RegisterEndpoints:
          allOf:
          - $ref: '#/components/schemas/__boolean'
          - description: "Specifies whether to register the endpoints with Amazon\
              \ Pinpoint, when the endpoint definitions are imported."
        RoleArn:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The Amazon Resource Name (ARN) of the AWS Identity and Access
              Management (IAM) role that authorizes Amazon Pinpoint to access the
              Amazon S3 location to import endpoint definitions from.
        S3Url:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: "<p>The URL of the Amazon Simple Storage Service (Amazon\
              \ S3) bucket that contains the endpoint definitions to import. This\
              \ location can be a folder or a single file. If the location is a folder,\
              \ Amazon Pinpoint imports endpoint definitions from the files in this\
              \ location, including any subfolders that the folder contains.</p> <p>The\
              \ URL should be in the following format: s3://<replaceable>bucket-name</replaceable>/<replaceable>folder-name</replaceable>/<replaceable>file-name</replaceable>.\
              \ The location can end with the key for an individual object or a prefix\
              \ that qualifies multiple objects.</p>"
        SegmentId:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: "The identifier for the segment to update or add the imported\
              \ endpoint definitions to, if the import job is meant to update an existing\
              \ segment."
        SegmentName:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: "A custom name for the segment that's created by the import\
              \ job, if the value of the DefineSegment property is true."
      type: object
    CreateImportJob_request:
      properties:
        ImportJobRequest:
          $ref: '#/components/schemas/CreateImportJob_request_ImportJobRequest'
      required:
      - ImportJobRequest
      type: object
    UpdateInAppTemplate_request_InAppTemplateRequest:
      description: InApp Template Request.
      properties:
        Content:
          allOf:
          - $ref: '#/components/schemas/ListOfInAppMessageContent'
          - description: "The content of the message, can include up to 5 modals.\
              \ Each modal must contain a message, a header, and background color.\
              \ ImageUrl and buttons are optional."
        CustomConfig:
          allOf:
          - $ref: '#/components/schemas/MapOf__string'
          - description: Custom config to be sent to client.
        Layout:
          allOf:
          - $ref: '#/components/schemas/Layout'
          - description: The layout of the message.
        tags:
          allOf:
          - $ref: '#/components/schemas/MapOf__string'
          - description: "<note><p>As of <b>22-05-2023</b> tags has been deprecated\
              \ for update operations. After this date any value in tags is not processed\
              \ and an error code is not returned. To manage tags we recommend using\
              \ either <a href=\"https://docs.aws.amazon.com/pinpoint/latest/apireference/tags-resource-arn.html\"\
              >Tags</a> in the <i>API Reference for Amazon Pinpoint</i>, <a href=\"\
              https://docs.aws.amazon.com/cli/latest/reference/resourcegroupstaggingapi/index.html\"\
              >resourcegroupstaggingapi</a> commands in the <i>AWS Command Line Interface\
              \ Documentation</i> or <a href=\"https://sdk.amazonaws.com/java/api/latest/software/amazon/awssdk/services/resourcegroupstaggingapi/package-summary.html\"\
              >resourcegroupstaggingapi</a> in the <i>AWS SDK</i>.</p></note> <p>(Deprecated)\
              \ A string-to-string map of key-value pairs that defines the tags to\
              \ associate with the message template. Each tag consists of a required\
              \ tag key and an associated tag value.</p>"
        TemplateDescription:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The description of the template.
      type: object
    UpdateInAppTemplate_request:
      properties:
        InAppTemplateRequest:
          $ref: '#/components/schemas/UpdateInAppTemplate_request_InAppTemplateRequest'
      required:
      - InAppTemplateRequest
      type: object
    CreateJourney_request_WriteJourneyRequest_Limits:
      allOf:
      - $ref: '#/components/schemas/JourneyLimits'
      - description: The messaging and entry limits for the journey.
      example:
        MessagesPerSecond: ""
        EndpointReentryCap: ""
        DailyCap: ""
        EndpointReentryInterval: ""
        TimeframeCap:
          Cap: ""
          Days: ""
        TotalCap: ""
    CreateJourney_request_WriteJourneyRequest_QuietTime:
      allOf:
      - $ref: '#/components/schemas/QuietTime'
      - description: "<p>The quiet time settings for the journey. Quiet time is a\
          \ specific time range when a journey doesn't send messages to participants,\
          \ if all the following conditions are met:</p> <ul><li><p>The EndpointDemographic.Timezone\
          \ property of the endpoint for the participant is set to a valid value.</p></li>\
          \ <li><p>The current time in the participant's time zone is later than or\
          \ equal to the time specified by the QuietTime.Start property for the journey.</p></li>\
          \ <li><p>The current time in the participant's time zone is earlier than\
          \ or equal to the time specified by the QuietTime.End property for the journey.</p></li></ul>\
          \ <p>If any of the preceding conditions isn't met, the participant will\
          \ receive messages from the journey, even if quiet time is enabled.</p>"
      example:
        Start: ""
        End: ""
    CreateJourney_request_WriteJourneyRequest_Schedule:
      allOf:
      - $ref: '#/components/schemas/JourneySchedule'
      - description: The schedule settings for the journey.
      example:
        Timezone: ""
        EndTime: ""
        StartTime: ""
    CreateJourney_request_WriteJourneyRequest_StartCondition:
      allOf:
      - $ref: '#/components/schemas/StartCondition'
      - description: The segment that defines which users are participants in the
          journey.
      example:
        Description: ""
        SegmentStartCondition:
          SegmentId: ""
        EventStartCondition:
          SegmentId: SegmentId
          EventFilter:
            FilterType: ""
            Dimensions:
              Metrics: ""
              EventType:
                DimensionType: ""
                Values: ""
              Attributes: ""
    CreateJourney_request_WriteJourneyRequest_JourneyChannelSettings:
      allOf:
      - $ref: '#/components/schemas/JourneyChannelSettings'
      - description: The channel-specific configurations for the journey.
      example:
        ConnectCampaignArn: ""
        ConnectCampaignExecutionRoleArn: ""
    CreateJourney_request_WriteJourneyRequest_OpenHours:
      allOf:
      - $ref: '#/components/schemas/OpenHours'
      - description: The time when journey allow to send messages. QuietTime should
          be configured first and SendingSchedule should be set to true.
      example:
        VOICE: ""
        SMS: ""
        CUSTOM: ""
        EMAIL: ""
        PUSH: ""
    CreateJourney_request_WriteJourneyRequest_ClosedDays:
      allOf:
      - $ref: '#/components/schemas/ClosedDays'
      - description: The time when journey will stop sending messages. QuietTime should
          be configured first and SendingSchedule should be set to true.
      example:
        VOICE: ""
        SMS: ""
        CUSTOM: ""
        EMAIL: ""
        PUSH: ""
    CreateJourney_request_WriteJourneyRequest:
      description: Specifies the configuration and other settings for a journey.
      properties:
        Activities:
          allOf:
          - $ref: '#/components/schemas/MapOfActivity'
          - description: "A map that contains a set of Activity objects, one object\
              \ for each activity in the journey. For each Activity object, the key\
              \ is the unique identifier (string) for an activity and the value is\
              \ the settings for the activity. An activity identifier can contain\
              \ a maximum of 100 characters. The characters must be alphanumeric characters."
        CreationDate:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: "The date, in ISO 8601 format, when the journey was created."
        LastModifiedDate:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: "The date, in ISO 8601 format, when the journey was last\
              \ modified."
        Limits:
          $ref: '#/components/schemas/CreateJourney_request_WriteJourneyRequest_Limits'
        LocalTime:
          allOf:
          - $ref: '#/components/schemas/__boolean'
          - description: "Specifies whether the journey's scheduled start and end\
              \ times use each participant's local time. To base the schedule on each\
              \ participant's local time, set this value to true."
        Name:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: "The name of the journey. A journey name can contain a maximum\
              \ of 150 characters. The characters can be alphanumeric characters or\
              \ symbols, such as underscores (_) or hyphens (-). A journey name can't\
              \ contain any spaces."
        QuietTime:
          $ref: '#/components/schemas/CreateJourney_request_WriteJourneyRequest_QuietTime'
        RefreshFrequency:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: "The frequency with which Amazon Pinpoint evaluates segment\
              \ and event data for the journey, as a duration in ISO 8601 format."
        Schedule:
          $ref: '#/components/schemas/CreateJourney_request_WriteJourneyRequest_Schedule'
        StartActivity:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The unique identifier for the first activity in the journey.
              The identifier for this activity can contain a maximum of 128 characters.
              The characters must be alphanumeric characters.
        StartCondition:
          $ref: '#/components/schemas/CreateJourney_request_WriteJourneyRequest_StartCondition'
        State:
          allOf:
          - $ref: '#/components/schemas/State'
          - description: "<p>The status of the journey. Valid values are:</p> <ul><li><p>DRAFT\
              \ - Saves the journey and doesn't publish it.</p></li> <li><p>ACTIVE\
              \ - Saves and publishes the journey. Depending on the journey's schedule,\
              \ the journey starts running immediately or at the scheduled start time.\
              \ If a journey's status is ACTIVE, you can't add, change, or remove\
              \ activities from it.</p></li></ul> <p>PAUSED, CANCELLED, COMPLETED,\
              \ and CLOSED states are not supported in requests to create or update\
              \ a journey. To cancel, pause, or resume a journey, use the <link  linkend=\"\
              apps-application-id-journeys-journey-id-state\">Journey State</link>\
              \ resource.</p>"
        WaitForQuietTime:
          allOf:
          - $ref: '#/components/schemas/__boolean'
          - description: Specifies whether endpoints in quiet hours should enter a
              wait till the end of their quiet hours.
        RefreshOnSegmentUpdate:
          allOf:
          - $ref: '#/components/schemas/__boolean'
          - description: Indicates whether the journey participants should be refreshed
              when a segment is updated.
        JourneyChannelSettings:
          $ref: '#/components/schemas/CreateJourney_request_WriteJourneyRequest_JourneyChannelSettings'
        SendingSchedule:
          allOf:
          - $ref: '#/components/schemas/__boolean'
          - description: Indicates if journey has Advance Quiet Time enabled. This
              flag should be set to true in order to allow using OpenHours and ClosedDays.
        OpenHours:
          $ref: '#/components/schemas/CreateJourney_request_WriteJourneyRequest_OpenHours'
        ClosedDays:
          $ref: '#/components/schemas/CreateJourney_request_WriteJourneyRequest_ClosedDays'
        TimezoneEstimationMethods:
          allOf:
          - $ref: '#/components/schemas/ListOf__TimezoneEstimationMethodsElement'
          - description: "<p>An array of time zone estimation methods, if any, to\
              \ use for determining an <a href=\"https://docs.aws.amazon.com/pinpoint/latest/apireference/apps-application-id-endpoints-endpoint-id.html\"\
              >Endpoints</a> time zone if the Endpoint does not have a value for the\
              \ Demographic.Timezone attribute.</p> <ul> <li><p>PHONE_NUMBER - A time\
              \ zone is determined based on the Endpoint.Address and Endpoint.Location.Country.</p></li>\
              \ <li><p>POSTAL_CODE - A time zone is determined based on the Endpoint.Location.PostalCode\
              \ and Endpoint.Location.Country.</p> <note><p>POSTAL_CODE detection\
              \ is only supported in the United States, United Kingdom, Australia,\
              \ New Zealand, Canada, France, Italy, Spain, Germany and in regions\
              \ where Amazon Pinpoint is available.</p></note></li> </ul>"
      type: object
    CreateJourney_request:
      properties:
        WriteJourneyRequest:
          $ref: '#/components/schemas/CreateJourney_request_WriteJourneyRequest'
      required:
      - WriteJourneyRequest
      type: object
    UpdatePushTemplate_request_PushNotificationTemplateRequest_ADM:
      allOf:
      - $ref: '#/components/schemas/AndroidPushNotificationTemplate'
      - description: The message template to use for the ADM (Amazon Device Messaging)
          channel. This message template overrides the default template for push notification
          channels (DefaultPushNotificationTemplate).
      example:
        Action: ""
        ImageUrl: ""
        SmallImageIconUrl: ""
        Title: ""
        ImageIconUrl: ""
        Sound: ""
        Body: ""
        RawContent: ""
        Url: ""
    UpdatePushTemplate_request_PushNotificationTemplateRequest_APNS:
      allOf:
      - $ref: '#/components/schemas/APNSPushNotificationTemplate'
      - description: The message template to use for the APNs (Apple Push Notification
          service) channel. This message template overrides the default template for
          push notification channels (DefaultPushNotificationTemplate).
      example:
        Action: ""
        MediaUrl: ""
        Title: ""
        Sound: ""
        Body: ""
        RawContent: ""
        Url: ""
    UpdatePushTemplate_request_PushNotificationTemplateRequest_Baidu:
      allOf:
      - $ref: '#/components/schemas/AndroidPushNotificationTemplate'
      - description: The message template to use for the Baidu (Baidu Cloud Push)
          channel. This message template overrides the default template for push notification
          channels (DefaultPushNotificationTemplate).
      example:
        Action: ""
        ImageUrl: ""
        SmallImageIconUrl: ""
        Title: ""
        ImageIconUrl: ""
        Sound: ""
        Body: ""
        RawContent: ""
        Url: ""
    UpdatePushTemplate_request_PushNotificationTemplateRequest_Default:
      allOf:
      - $ref: '#/components/schemas/DefaultPushNotificationTemplate'
      - description: The default message template to use for push notification channels.
      example:
        Action: ""
        Title: ""
        Sound: ""
        Body: ""
        Url: ""
    UpdatePushTemplate_request_PushNotificationTemplateRequest_GCM:
      allOf:
      - $ref: '#/components/schemas/AndroidPushNotificationTemplate'
      - description: "The message template to use for the GCM channel, which is used\
          \ to send notifications through the Firebase Cloud Messaging (FCM), formerly\
          \ Google Cloud Messaging (GCM), service. This message template overrides\
          \ the default template for push notification channels (DefaultPushNotificationTemplate)."
      example:
        Action: ""
        ImageUrl: ""
        SmallImageIconUrl: ""
        Title: ""
        ImageIconUrl: ""
        Sound: ""
        Body: ""
        RawContent: ""
        Url: ""
    UpdatePushTemplate_request_PushNotificationTemplateRequest:
      description: Specifies the content and settings for a message template that
        can be used in messages that are sent through a push notification channel.
      properties:
        ADM:
          $ref: '#/components/schemas/UpdatePushTemplate_request_PushNotificationTemplateRequest_ADM'
        APNS:
          $ref: '#/components/schemas/UpdatePushTemplate_request_PushNotificationTemplateRequest_APNS'
        Baidu:
          $ref: '#/components/schemas/UpdatePushTemplate_request_PushNotificationTemplateRequest_Baidu'
        Default:
          $ref: '#/components/schemas/UpdatePushTemplate_request_PushNotificationTemplateRequest_Default'
        DefaultSubstitutions:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: "A JSON object that specifies the default values to use for\
              \ message variables in the message template. This object is a set of\
              \ key-value pairs. Each key defines a message variable in the template.\
              \ The corresponding value defines the default value for that variable.\
              \ When you create a message that's based on the template, you can override\
              \ these defaults with message-specific and address-specific variables\
              \ and values."
        GCM:
          $ref: '#/components/schemas/UpdatePushTemplate_request_PushNotificationTemplateRequest_GCM'
        RecommenderId:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: "The unique identifier for the recommender model to use for\
              \ the message template. Amazon Pinpoint uses this value to determine\
              \ how to retrieve and process data from a recommender model when it\
              \ sends messages that use the template, if the template contains message\
              \ variables for recommendation data."
        tags:
          allOf:
          - $ref: '#/components/schemas/MapOf__string'
          - description: "<note><p>As of <b>22-05-2023</b> tags has been deprecated\
              \ for update operations. After this date any value in tags is not processed\
              \ and an error code is not returned. To manage tags we recommend using\
              \ either <a href=\"https://docs.aws.amazon.com/pinpoint/latest/apireference/tags-resource-arn.html\"\
              >Tags</a> in the <i>API Reference for Amazon Pinpoint</i>, <a href=\"\
              https://docs.aws.amazon.com/cli/latest/reference/resourcegroupstaggingapi/index.html\"\
              >resourcegroupstaggingapi</a> commands in the <i>AWS Command Line Interface\
              \ Documentation</i> or <a href=\"https://sdk.amazonaws.com/java/api/latest/software/amazon/awssdk/services/resourcegroupstaggingapi/package-summary.html\"\
              >resourcegroupstaggingapi</a> in the <i>AWS SDK</i>.</p></note> <p>(Deprecated)\
              \ A string-to-string map of key-value pairs that defines the tags to\
              \ associate with the message template. Each tag consists of a required\
              \ tag key and an associated tag value.</p>"
        TemplateDescription:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: A custom description of the message template.
      type: object
    UpdatePushTemplate_request:
      properties:
        PushNotificationTemplateRequest:
          $ref: '#/components/schemas/UpdatePushTemplate_request_PushNotificationTemplateRequest'
      required:
      - PushNotificationTemplateRequest
      type: object
    CreateRecommenderConfiguration_request_CreateRecommenderConfiguration:
      description: Specifies Amazon Pinpoint configuration settings for retrieving
        and processing recommendation data from a recommender model.
      properties:
        Attributes:
          allOf:
          - $ref: '#/components/schemas/MapOf__string'
          - description: "<p>A map of key-value pairs that defines 1-10 custom endpoint\
              \ or user attributes, depending on the value for the RecommendationProviderIdType\
              \ property. Each of these attributes temporarily stores a recommended\
              \ item that's retrieved from the recommender model and sent to an AWS\
              \ Lambda function for additional processing. Each attribute can be used\
              \ as a message variable in a message template.</p> <p>In the map, the\
              \ key is the name of a custom attribute and the value is a custom display\
              \ name for that attribute. The display name appears in the <b>Attribute\
              \ finder</b> of the template editor on the Amazon Pinpoint console.\
              \ The following restrictions apply to these names:</p> <ul><li><p>An\
              \ attribute name must start with a letter or number and it can contain\
              \ up to 50 characters. The characters can be letters, numbers, underscores\
              \ (_), or hyphens (-). Attribute names are case sensitive and must be\
              \ unique.</p></li> <li><p>An attribute display name must start with\
              \ a letter or number and it can contain up to 25 characters. The characters\
              \ can be letters, numbers, spaces, underscores (_), or hyphens (-).</p></li></ul>\
              \ <p>This object is required if the configuration invokes an AWS Lambda\
              \ function (RecommendationTransformerUri) to process recommendation\
              \ data. Otherwise, don't include this object in your request.</p>"
        Description:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: "A custom description of the configuration for the recommender\
              \ model. The description can contain up to 128 characters. The characters\
              \ can be letters, numbers, spaces, or the following symbols: _ ; ()\
              \ , ‐."
        Name:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: "A custom name of the configuration for the recommender model.\
              \ The name must start with a letter or number and it can contain up\
              \ to 128 characters. The characters can be letters, numbers, spaces,\
              \ underscores (_), or hyphens (-)."
        RecommendationProviderIdType:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: "<p>The type of Amazon Pinpoint ID to associate with unique\
              \ user IDs in the recommender model. This value enables the model to\
              \ use attribute and event data that’s specific to a particular endpoint\
              \ or user in an Amazon Pinpoint application. Valid values are:</p> <ul><li><p>PINPOINT_ENDPOINT_ID\
              \ - Associate each user in the model with a particular endpoint in Amazon\
              \ Pinpoint. The data is correlated based on endpoint IDs in Amazon Pinpoint.\
              \ This is the default value.</p></li> <li><p>PINPOINT_USER_ID - Associate\
              \ each user in the model with a particular user and endpoint in Amazon\
              \ Pinpoint. The data is correlated based on user IDs in Amazon Pinpoint.\
              \ If you specify this value, an endpoint definition in Amazon Pinpoint\
              \ has to specify both a user ID (UserId) and an endpoint ID. Otherwise,\
              \ messages won’t be sent to the user's endpoint.</p></li></ul>"
        RecommendationProviderRoleArn:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The Amazon Resource Name (ARN) of the AWS Identity and Access
              Management (IAM) role that authorizes Amazon Pinpoint to retrieve recommendation
              data from the recommender model.
        RecommendationProviderUri:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The Amazon Resource Name (ARN) of the recommender model to
              retrieve recommendation data from. This value must match the ARN of
              an Amazon Personalize campaign.
        RecommendationTransformerUri:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The name or Amazon Resource Name (ARN) of the AWS Lambda
              function to invoke for additional processing of recommendation data
              that's retrieved from the recommender model.
        RecommendationsDisplayName:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: "<p>A custom display name for the standard endpoint or user\
              \ attribute (RecommendationItems) that temporarily stores recommended\
              \ items for each endpoint or user, depending on the value for the RecommendationProviderIdType\
              \ property. This value is required if the configuration doesn't invoke\
              \ an AWS Lambda function (RecommendationTransformerUri) to perform additional\
              \ processing of recommendation data.</p> <p>This name appears in the\
              \ <b>Attribute finder</b> of the template editor on the Amazon Pinpoint\
              \ console. The name can contain up to 25 characters. The characters\
              \ can be letters, numbers, spaces, underscores (_), or hyphens (-).\
              \ These restrictions don't apply to attribute values.</p>"
        RecommendationsPerMessage:
          allOf:
          - $ref: '#/components/schemas/__integer'
          - description: "<p>The number of recommended items to retrieve from the\
              \ model for each endpoint or user, depending on the value for the RecommendationProviderIdType\
              \ property. This number determines how many recommended items are available\
              \ for use in message variables. The minimum value is 1. The maximum\
              \ value is 5. The default value is 5.</p> <p>To use multiple recommended\
              \ items and custom attributes with message variables, you have to use\
              \ an AWS Lambda function (RecommendationTransformerUri) to perform additional\
              \ processing of recommendation data.</p>"
      type: object
    CreateRecommenderConfiguration_request:
      properties:
        CreateRecommenderConfiguration:
          $ref: '#/components/schemas/CreateRecommenderConfiguration_request_CreateRecommenderConfiguration'
      required:
      - CreateRecommenderConfiguration
      type: object
    CreateSegment_request_WriteSegmentRequest_Dimensions:
      allOf:
      - $ref: '#/components/schemas/SegmentDimensions'
      - description: The criteria that define the dimensions for the segment.
      example:
        Demographic:
          AppVersion:
            DimensionType: ""
            Values: ""
          DeviceType:
            DimensionType: ""
            Values: ""
          Platform:
            DimensionType: ""
            Values: ""
          Channel:
            DimensionType: ""
            Values: ""
          Model:
            DimensionType: ""
            Values: ""
          Make:
            DimensionType: ""
            Values: ""
        Metrics: ""
        Attributes: ""
        Behavior:
          Recency:
            Duration: ""
            RecencyType: ""
        Location:
          GPSPoint:
            RangeInKilometers: ""
            Coordinates:
              Latitude: ""
              Longitude: ""
          Country:
            DimensionType: ""
            Values: ""
        UserAttributes: ""
    CreateSegment_request_WriteSegmentRequest_SegmentGroups:
      allOf:
      - $ref: '#/components/schemas/SegmentGroupList'
      - description: The segment group to use and the dimensions to apply to the group's
          base segments in order to build the segment. A segment group can consist
          of zero or more base segments. Your request can include only one segment
          group.
      example:
        Groups: ""
        Include: ""
    CreateSegment_request_WriteSegmentRequest:
      description: "Specifies the configuration, dimension, and other settings for\
        \ a segment. A WriteSegmentRequest object can include a Dimensions object\
        \ or a SegmentGroups object, but not both."
      properties:
        Dimensions:
          $ref: '#/components/schemas/CreateSegment_request_WriteSegmentRequest_Dimensions'
        Name:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The name of the segment.
        SegmentGroups:
          $ref: '#/components/schemas/CreateSegment_request_WriteSegmentRequest_SegmentGroups'
        tags:
          allOf:
          - $ref: '#/components/schemas/MapOf__string'
          - description: "<note><p>As of <b>22-05-2023</b> tags has been deprecated\
              \ for update operations. After this date any value in tags is not processed\
              \ and an error code is not returned. To manage tags we recommend using\
              \ either <a href=\"https://docs.aws.amazon.com/pinpoint/latest/apireference/tags-resource-arn.html\"\
              >Tags</a> in the <i>API Reference for Amazon Pinpoint</i>, <a href=\"\
              https://docs.aws.amazon.com/cli/latest/reference/resourcegroupstaggingapi/index.html\"\
              >resourcegroupstaggingapi</a> commands in the <i>AWS Command Line Interface\
              \ Documentation</i> or <a href=\"https://sdk.amazonaws.com/java/api/latest/software/amazon/awssdk/services/resourcegroupstaggingapi/package-summary.html\"\
              >resourcegroupstaggingapi</a> in the <i>AWS SDK</i>.</p></note> <p>(Deprecated)\
              \ A string-to-string map of key-value pairs that defines the tags to\
              \ associate with the segment. Each tag consists of a required tag key\
              \ and an associated tag value.</p>"
      type: object
    CreateSegment_request:
      properties:
        WriteSegmentRequest:
          $ref: '#/components/schemas/CreateSegment_request_WriteSegmentRequest'
      required:
      - WriteSegmentRequest
      type: object
    UpdateSmsTemplate_request_SMSTemplateRequest:
      description: Specifies the content and settings for a message template that
        can be used in text messages that are sent through the SMS channel.
      properties:
        Body:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The message body to use in text messages that are based on
              the message template.
        DefaultSubstitutions:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: "A JSON object that specifies the default values to use for\
              \ message variables in the message template. This object is a set of\
              \ key-value pairs. Each key defines a message variable in the template.\
              \ The corresponding value defines the default value for that variable.\
              \ When you create a message that's based on the template, you can override\
              \ these defaults with message-specific and address-specific variables\
              \ and values."
        RecommenderId:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: "The unique identifier for the recommender model to use for\
              \ the message template. Amazon Pinpoint uses this value to determine\
              \ how to retrieve and process data from a recommender model when it\
              \ sends messages that use the template, if the template contains message\
              \ variables for recommendation data."
        tags:
          allOf:
          - $ref: '#/components/schemas/MapOf__string'
          - description: "<note><p>As of <b>22-05-2023</b> tags has been deprecated\
              \ for update operations. After this date any value in tags is not processed\
              \ and an error code is not returned. To manage tags we recommend using\
              \ either <a href=\"https://docs.aws.amazon.com/pinpoint/latest/apireference/tags-resource-arn.html\"\
              >Tags</a> in the <i>API Reference for Amazon Pinpoint</i>, <a href=\"\
              https://docs.aws.amazon.com/cli/latest/reference/resourcegroupstaggingapi/index.html\"\
              >resourcegroupstaggingapi</a> commands in the <i>AWS Command Line Interface\
              \ Documentation</i> or <a href=\"https://sdk.amazonaws.com/java/api/latest/software/amazon/awssdk/services/resourcegroupstaggingapi/package-summary.html\"\
              >resourcegroupstaggingapi</a> in the <i>AWS SDK</i>.</p></note> <p>(Deprecated)\
              \ A string-to-string map of key-value pairs that defines the tags to\
              \ associate with the message template. Each tag consists of a required\
              \ tag key and an associated tag value.</p>"
        TemplateDescription:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: A custom description of the message template.
      type: object
    UpdateSmsTemplate_request:
      properties:
        SMSTemplateRequest:
          $ref: '#/components/schemas/UpdateSmsTemplate_request_SMSTemplateRequest'
      required:
      - SMSTemplateRequest
      type: object
    UpdateVoiceTemplate_request_VoiceTemplateRequest:
      description: Specifies the content and settings for a message template that
        can be used in messages that are sent through the voice channel.
      properties:
        Body:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: "The text of the script to use in messages that are based\
              \ on the message template, in plain text format."
        DefaultSubstitutions:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: "A JSON object that specifies the default values to use for\
              \ message variables in the message template. This object is a set of\
              \ key-value pairs. Each key defines a message variable in the template.\
              \ The corresponding value defines the default value for that variable.\
              \ When you create a message that's based on the template, you can override\
              \ these defaults with message-specific and address-specific variables\
              \ and values."
        LanguageCode:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: "The code for the language to use when synthesizing the text\
              \ of the script in messages that are based on the message template.\
              \ For a list of supported languages and the code for each one, see the\
              \ <a href=\"https://docs.aws.amazon.com/polly/latest/dg/what-is.html\"\
              >Amazon Polly Developer Guide</a>."
        tags:
          allOf:
          - $ref: '#/components/schemas/MapOf__string'
          - description: "<note><p>As of <b>22-05-2023</b> tags has been deprecated\
              \ for update operations. After this date any value in tags is not processed\
              \ and an error code is not returned. To manage tags we recommend using\
              \ either <a href=\"https://docs.aws.amazon.com/pinpoint/latest/apireference/tags-resource-arn.html\"\
              >Tags</a> in the <i>API Reference for Amazon Pinpoint</i>, <a href=\"\
              https://docs.aws.amazon.com/cli/latest/reference/resourcegroupstaggingapi/index.html\"\
              >resourcegroupstaggingapi</a> commands in the <i>AWS Command Line Interface\
              \ Documentation</i> or <a href=\"https://sdk.amazonaws.com/java/api/latest/software/amazon/awssdk/services/resourcegroupstaggingapi/package-summary.html\"\
              >resourcegroupstaggingapi</a> in the <i>AWS SDK</i>.</p></note> <p>(Deprecated)\
              \ A string-to-string map of key-value pairs that defines the tags to\
              \ associate with the message template. Each tag consists of a required\
              \ tag key and an associated tag value.</p>"
        TemplateDescription:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: A custom description of the message template.
        VoiceId:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: "The name of the voice to use when delivering messages that\
              \ are based on the message template. For a list of supported voices,\
              \ see the <a href=\"https://docs.aws.amazon.com/polly/latest/dg/what-is.html\"\
              >Amazon Polly Developer Guide</a>."
      type: object
    UpdateVoiceTemplate_request:
      properties:
        VoiceTemplateRequest:
          $ref: '#/components/schemas/UpdateVoiceTemplate_request_VoiceTemplateRequest'
      required:
      - VoiceTemplateRequest
      type: object
    UpdateAdmChannel_request_ADMChannelRequest:
      description: Specifies the status and settings of the ADM (Amazon Device Messaging)
        channel for an application.
      properties:
        ClientId:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The Client ID that you received from Amazon to send messages
              by using ADM.
        ClientSecret:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The Client Secret that you received from Amazon to send messages
              by using ADM.
        Enabled:
          allOf:
          - $ref: '#/components/schemas/__boolean'
          - description: Specifies whether to enable the ADM channel for the application.
      type: object
    UpdateAdmChannel_request:
      properties:
        ADMChannelRequest:
          $ref: '#/components/schemas/UpdateAdmChannel_request_ADMChannelRequest'
      required:
      - ADMChannelRequest
      type: object
    UpdateApnsChannel_request_APNSChannelRequest:
      description: Specifies the status and settings of the APNs (Apple Push Notification
        service) channel for an application.
      properties:
        BundleId:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The bundle identifier that's assigned to your iOS app. This
              identifier is used for APNs tokens.
        Certificate:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: "The APNs client certificate that you received from Apple,\
              \ if you want Amazon Pinpoint to communicate with APNs by using an APNs\
              \ certificate."
        DefaultAuthenticationMethod:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: "The default authentication method that you want Amazon Pinpoint\
              \ to use when authenticating with APNs, key or certificate."
        Enabled:
          allOf:
          - $ref: '#/components/schemas/__boolean'
          - description: Specifies whether to enable the APNs channel for the application.
        PrivateKey:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The private key for the APNs client certificate that you
              want Amazon Pinpoint to use to communicate with APNs.
        TeamId:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The identifier that's assigned to your Apple developer account
              team. This identifier is used for APNs tokens.
        TokenKey:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The authentication key to use for APNs tokens.
        TokenKeyId:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: "The key identifier that's assigned to your APNs signing\
              \ key, if you want Amazon Pinpoint to communicate with APNs by using\
              \ APNs tokens."
      type: object
    UpdateApnsChannel_request:
      properties:
        APNSChannelRequest:
          $ref: '#/components/schemas/UpdateApnsChannel_request_APNSChannelRequest'
      required:
      - APNSChannelRequest
      type: object
    UpdateApnsSandboxChannel_request_APNSSandboxChannelRequest:
      description: Specifies the status and settings of the APNs (Apple Push Notification
        service) sandbox channel for an application.
      properties:
        BundleId:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The bundle identifier that's assigned to your iOS app. This
              identifier is used for APNs tokens.
        Certificate:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: "The APNs client certificate that you received from Apple,\
              \ if you want Amazon Pinpoint to communicate with the APNs sandbox environment\
              \ by using an APNs certificate."
        DefaultAuthenticationMethod:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: "The default authentication method that you want Amazon Pinpoint\
              \ to use when authenticating with the APNs sandbox environment, key\
              \ or certificate."
        Enabled:
          allOf:
          - $ref: '#/components/schemas/__boolean'
          - description: Specifies whether to enable the APNs sandbox channel for
              the application.
        PrivateKey:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The private key for the APNs client certificate that you
              want Amazon Pinpoint to use to communicate with the APNs sandbox environment.
        TeamId:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The identifier that's assigned to your Apple developer account
              team. This identifier is used for APNs tokens.
        TokenKey:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The authentication key to use for APNs tokens.
        TokenKeyId:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: "The key identifier that's assigned to your APNs signing\
              \ key, if you want Amazon Pinpoint to communicate with the APNs sandbox\
              \ environment by using APNs tokens."
      type: object
    UpdateApnsSandboxChannel_request:
      properties:
        APNSSandboxChannelRequest:
          $ref: '#/components/schemas/UpdateApnsSandboxChannel_request_APNSSandboxChannelRequest'
      required:
      - APNSSandboxChannelRequest
      type: object
    UpdateApnsVoipChannel_request_APNSVoipChannelRequest:
      description: Specifies the status and settings of the APNs (Apple Push Notification
        service) VoIP channel for an application.
      properties:
        BundleId:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The bundle identifier that's assigned to your iOS app. This
              identifier is used for APNs tokens.
        Certificate:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: "The APNs client certificate that you received from Apple,\
              \ if you want Amazon Pinpoint to communicate with APNs by using an APNs\
              \ certificate."
        DefaultAuthenticationMethod:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: "The default authentication method that you want Amazon Pinpoint\
              \ to use when authenticating with APNs, key or certificate."
        Enabled:
          allOf:
          - $ref: '#/components/schemas/__boolean'
          - description: Specifies whether to enable the APNs VoIP channel for the
              application.
        PrivateKey:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The private key for the APNs client certificate that you
              want Amazon Pinpoint to use to communicate with APNs.
        TeamId:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The identifier that's assigned to your Apple developer account
              team. This identifier is used for APNs tokens.
        TokenKey:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The authentication key to use for APNs tokens.
        TokenKeyId:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: "The key identifier that's assigned to your APNs signing\
              \ key, if you want Amazon Pinpoint to communicate with APNs by using\
              \ APNs tokens."
      type: object
    UpdateApnsVoipChannel_request:
      properties:
        APNSVoipChannelRequest:
          $ref: '#/components/schemas/UpdateApnsVoipChannel_request_APNSVoipChannelRequest'
      required:
      - APNSVoipChannelRequest
      type: object
    UpdateApnsVoipSandboxChannel_request_APNSVoipSandboxChannelRequest:
      description: Specifies the status and settings of the APNs (Apple Push Notification
        service) VoIP sandbox channel for an application.
      properties:
        BundleId:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The bundle identifier that's assigned to your iOS app. This
              identifier is used for APNs tokens.
        Certificate:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: "The APNs client certificate that you received from Apple,\
              \ if you want Amazon Pinpoint to communicate with the APNs sandbox environment\
              \ by using an APNs certificate."
        DefaultAuthenticationMethod:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: "The default authentication method that you want Amazon Pinpoint\
              \ to use when authenticating with the APNs sandbox environment for this\
              \ channel, key or certificate."
        Enabled:
          allOf:
          - $ref: '#/components/schemas/__boolean'
          - description: Specifies whether the APNs VoIP sandbox channel is enabled
              for the application.
        PrivateKey:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The private key for the APNs client certificate that you
              want Amazon Pinpoint to use to communicate with the APNs sandbox environment.
        TeamId:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The identifier that's assigned to your Apple developer account
              team. This identifier is used for APNs tokens.
        TokenKey:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The authentication key to use for APNs tokens.
        TokenKeyId:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: "The key identifier that's assigned to your APNs signing\
              \ key, if you want Amazon Pinpoint to communicate with the APNs sandbox\
              \ environment by using APNs tokens."
      type: object
    UpdateApnsVoipSandboxChannel_request:
      properties:
        APNSVoipSandboxChannelRequest:
          $ref: '#/components/schemas/UpdateApnsVoipSandboxChannel_request_APNSVoipSandboxChannelRequest'
      required:
      - APNSVoipSandboxChannelRequest
      type: object
    UpdateBaiduChannel_request_BaiduChannelRequest:
      description: Specifies the status and settings of the Baidu (Baidu Cloud Push)
        channel for an application.
      properties:
        ApiKey:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The API key that you received from the Baidu Cloud Push service
              to communicate with the service.
        Enabled:
          allOf:
          - $ref: '#/components/schemas/__boolean'
          - description: Specifies whether to enable the Baidu channel for the application.
        SecretKey:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The secret key that you received from the Baidu Cloud Push
              service to communicate with the service.
      type: object
    UpdateBaiduChannel_request:
      properties:
        BaiduChannelRequest:
          $ref: '#/components/schemas/UpdateBaiduChannel_request_BaiduChannelRequest'
      required:
      - BaiduChannelRequest
      type: object
    UpdateEmailChannel_request_EmailChannelRequest:
      description: Specifies the status and settings of the email channel for an application.
      properties:
        ConfigurationSet:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The <a href="https://docs.aws.amazon.com/ses/latest/APIReference/API_ConfigurationSet.html">Amazon
              SES configuration set</a> that you want to apply to messages that you
              send through the channel.
        Enabled:
          allOf:
          - $ref: '#/components/schemas/__boolean'
          - description: Specifies whether to enable the email channel for the application.
        FromAddress:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: ' <p>The verified email address that you want to send email
              from when you send email through the channel.</p>'
        Identity:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: " <p>The Amazon Resource Name (ARN) of the identity, verified\
              \ with Amazon Simple Email Service (Amazon SES), that you want to use\
              \ when you send email through the channel.</p>"
        RoleArn:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: ' <p>The ARN of the AWS Identity and Access Management (IAM)
              role that you want Amazon Pinpoint to use when it submits email-related
              event data for the channel.</p>'
      type: object
    UpdateEmailChannel_request:
      properties:
        EmailChannelRequest:
          $ref: '#/components/schemas/UpdateEmailChannel_request_EmailChannelRequest'
      required:
      - EmailChannelRequest
      type: object
    UpdateEndpoint_request_EndpointRequest_Demographic:
      allOf:
      - $ref: '#/components/schemas/EndpointDemographic'
      - description: "The demographic information for the endpoint, such as the time\
          \ zone and platform."
      example:
        AppVersion: ""
        Locale: ""
        PlatformVersion: ""
        Timezone: ""
        Platform: ""
        Model: ""
        Make: ""
        ModelVersion: ""
    UpdateEndpoint_request_EndpointRequest_Location:
      allOf:
      - $ref: '#/components/schemas/EndpointLocation'
      - description: The geographic information for the endpoint.
      example:
        Country: ""
        PostalCode: ""
        Region: ""
        Latitude: ""
        City: ""
        Longitude: ""
    UpdateEndpoint_request_EndpointRequest_User:
      allOf:
      - $ref: '#/components/schemas/EndpointUser'
      - description: One or more custom attributes that describe the user who's associated
          with the endpoint.
      example:
        UserId: ""
        UserAttributes: ""
    UpdateEndpoint_request_EndpointRequest:
      description: Specifies the channel type and other settings for an endpoint.
      properties:
        Address:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: "The destination address for messages or push notifications\
              \ that you send to the endpoint. The address varies by channel. For\
              \ a push-notification channel, use the token provided by the push notification\
              \ service, such as an Apple Push Notification service (APNs) device\
              \ token or a Firebase Cloud Messaging (FCM) registration token. For\
              \ the SMS channel, use a phone number in E.164 format, such as +12065550100.\
              \ For the email channel, use an email address."
        Attributes:
          allOf:
          - $ref: '#/components/schemas/MapOfListOf__string'
          - description: "<p>One or more custom attributes that describe the endpoint\
              \ by associating a name with an array of values. For example, the value\
              \ of a custom attribute named Interests might be: [\"Science\", \"Music\"\
              , \"Travel\"]. You can use these attributes as filter criteria when\
              \ you create segments. Attribute names are case sensitive.</p> <p>An\
              \ attribute name can contain up to 50 characters. An attribute value\
              \ can contain up to 100 characters. When you define the name of a custom\
              \ attribute, avoid using the following characters: number sign (#),\
              \ colon (:), question mark (?), backslash (\\), and slash (/). The Amazon\
              \ Pinpoint console can't display attribute names that contain these\
              \ characters. This restriction doesn't apply to attribute values.</p>"
        ChannelType:
          allOf:
          - $ref: '#/components/schemas/ChannelType'
          - description: The channel to use when sending messages or push notifications
              to the endpoint.
        Demographic:
          $ref: '#/components/schemas/UpdateEndpoint_request_EndpointRequest_Demographic'
        EffectiveDate:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: "The date and time, in ISO 8601 format, when the endpoint\
              \ is updated."
        EndpointStatus:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: "<p>Specifies whether to send messages or push notifications\
              \ to the endpoint. Valid values are: ACTIVE, messages are sent to the\
              \ endpoint; and, INACTIVE, messages aren’t sent to the endpoint.</p>\
              \ <p>Amazon Pinpoint automatically sets this value to ACTIVE when you\
              \ create an endpoint or update an existing endpoint. Amazon Pinpoint\
              \ automatically sets this value to INACTIVE if you update another endpoint\
              \ that has the same address specified by the Address property.</p>"
        Location:
          $ref: '#/components/schemas/UpdateEndpoint_request_EndpointRequest_Location'
        Metrics:
          allOf:
          - $ref: '#/components/schemas/MapOf__double'
          - description: One or more custom metrics that your app reports to Amazon
              Pinpoint for the endpoint.
        OptOut:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: "Specifies whether the user who's associated with the endpoint\
              \ has opted out of receiving messages and push notifications from you.\
              \ Possible values are: ALL, the user has opted out and doesn't want\
              \ to receive any messages or push notifications; and, NONE, the user\
              \ hasn't opted out and wants to receive all messages and push notifications."
        RequestId:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The unique identifier for the most recent request to update
              the endpoint.
        User:
          $ref: '#/components/schemas/UpdateEndpoint_request_EndpointRequest_User'
      type: object
    UpdateEndpoint_request:
      properties:
        EndpointRequest:
          $ref: '#/components/schemas/UpdateEndpoint_request_EndpointRequest'
      required:
      - EndpointRequest
      type: object
    PutEventStream_request_WriteEventStream:
      description: Specifies the Amazon Resource Name (ARN) of an event stream to
        publish events to and the AWS Identity and Access Management (IAM) role to
        use when publishing those events.
      properties:
        DestinationStreamArn:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: |-
              <p>The Amazon Resource Name (ARN) of the Amazon Kinesis data stream or Amazon Kinesis Data Firehose delivery stream that you want to publish event data to.</p> <p>For a Kinesis data stream, the ARN format is: arn:aws:kinesis:<replaceable>region</replaceable>:<replaceable>account-id</replaceable>:stream/<replaceable>stream_name</replaceable>
                             </p> <p>For a Kinesis Data Firehose delivery stream, the ARN format is: arn:aws:firehose:<replaceable>region</replaceable>:<replaceable>account-id</replaceable>:deliverystream/<replaceable>stream_name</replaceable>
                             </p>
        RoleArn:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The AWS Identity and Access Management (IAM) role that authorizes
              Amazon Pinpoint to publish event data to the stream in your AWS account.
      type: object
    PutEventStream_request:
      properties:
        WriteEventStream:
          $ref: '#/components/schemas/PutEventStream_request_WriteEventStream'
      required:
      - WriteEventStream
      type: object
    UpdateGcmChannel_request_GCMChannelRequest:
      description: "Specifies the status and settings of the GCM channel for an application.\
        \ This channel enables Amazon Pinpoint to send push notifications through\
        \ the Firebase Cloud Messaging (FCM), formerly Google Cloud Messaging (GCM),\
        \ service."
      properties:
        ApiKey:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: "The Web API Key, also referred to as an <i>API_KEY</i> or\
              \ <i>server key</i>, that you received from Google to communicate with\
              \ Google services."
        DefaultAuthenticationMethod:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The default authentication method used for GCM. Values are
              either "TOKEN" or "KEY". Defaults to "KEY".
        Enabled:
          allOf:
          - $ref: '#/components/schemas/__boolean'
          - description: Specifies whether to enable the GCM channel for the application.
        ServiceJson:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The contents of the JSON file provided by Google during registration
              in order to generate an access token for authentication. For more information
              see <a href="https://firebase.google.com/docs/cloud-messaging/migrate-v1">Migrate
              from legacy FCM APIs to HTTP v1</a>.
      type: object
    UpdateGcmChannel_request:
      properties:
        GCMChannelRequest:
          $ref: '#/components/schemas/UpdateGcmChannel_request_GCMChannelRequest'
      required:
      - GCMChannelRequest
      type: object
    UpdateRecommenderConfiguration_request:
      properties:
        UpdateRecommenderConfiguration:
          $ref: '#/components/schemas/CreateRecommenderConfiguration_request_CreateRecommenderConfiguration'
      required:
      - UpdateRecommenderConfiguration
      type: object
    UpdateSmsChannel_request_SMSChannelRequest:
      description: Specifies the status and settings of the SMS channel for an application.
      properties:
        Enabled:
          allOf:
          - $ref: '#/components/schemas/__boolean'
          - description: Specifies whether to enable the SMS channel for the application.
        SenderId:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The identity that you want to display on recipients' devices
              when they receive messages from the SMS channel.
        ShortCode:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The registered short code that you want to use when you send
              messages through the SMS channel.
      type: object
    UpdateSmsChannel_request:
      properties:
        SMSChannelRequest:
          $ref: '#/components/schemas/UpdateSmsChannel_request_SMSChannelRequest'
      required:
      - SMSChannelRequest
      type: object
    UpdateVoiceChannel_request_VoiceChannelRequest:
      description: Specifies the status and settings of the voice channel for an application.
      properties:
        Enabled:
          allOf:
          - $ref: '#/components/schemas/__boolean'
          - description: Specifies whether to enable the voice channel for the application.
      type: object
    UpdateVoiceChannel_request:
      properties:
        VoiceChannelRequest:
          $ref: '#/components/schemas/UpdateVoiceChannel_request_VoiceChannelRequest'
      required:
      - VoiceChannelRequest
      type: object
    UpdateApplicationSettings_request_WriteApplicationSettingsRequest_CampaignHook:
      allOf:
      - $ref: '#/components/schemas/CampaignHook'
      - description: "<p>The settings for the AWS Lambda function to invoke by default\
          \ as a code hook for campaigns in the application. You can use this hook\
          \ to customize segments that are used by campaigns in the application.</p>\
          \ <p>To override these settings and define custom settings for a specific\
          \ campaign, use the CampaignHook object of the <link  linkend=\"apps-application-id-campaigns-campaign-id\"\
          >Campaign</link> resource.</p>"
      example:
        Mode: ""
        WebUrl: ""
        LambdaFunctionName: ""
    UpdateApplicationSettings_request_WriteApplicationSettingsRequest_Limits:
      allOf:
      - $ref: '#/components/schemas/CampaignLimits'
      - description: "The default sending limits for campaigns in the application.\
          \ To override these limits and define custom limits for a specific campaign\
          \ or journey, use the <link  linkend=\"apps-application-id-campaigns-campaign-id\"\
          >Campaign</link> resource or the <link  linkend=\"apps-application-id-journeys-journey-id\"\
          >Journey</link> resource, respectively."
      example:
        Daily: ""
        MaximumDuration: ""
        Total: ""
        MessagesPerSecond: ""
        Session: ""
    UpdateApplicationSettings_request_WriteApplicationSettingsRequest_QuietTime:
      allOf:
      - $ref: '#/components/schemas/QuietTime'
      - description: "<p>The default quiet time for campaigns in the application.\
          \ Quiet time is a specific time range when messages aren't sent to endpoints,\
          \ if all the following conditions are met:</p> <ul><li><p>The EndpointDemographic.Timezone\
          \ property of the endpoint is set to a valid value.</p></li> <li><p>The\
          \ current time in the endpoint's time zone is later than or equal to the\
          \ time specified by the QuietTime.Start property for the application (or\
          \ a campaign or journey that has custom quiet time settings).</p></li> <li><p>The\
          \ current time in the endpoint's time zone is earlier than or equal to the\
          \ time specified by the QuietTime.End property for the application (or a\
          \ campaign or journey that has custom quiet time settings).</p></li></ul>\
          \ <p>If any of the preceding conditions isn't met, the endpoint will receive\
          \ messages from a campaign or journey, even if quiet time is enabled.</p>\
          \ <p>To override the default quiet time settings for a specific campaign\
          \ or journey, use the <link  linkend=\"apps-application-id-campaigns-campaign-id\"\
          >Campaign</link> resource or the <link  linkend=\"apps-application-id-journeys-journey-id\"\
          >Journey</link> resource to define a custom quiet time for the campaign\
          \ or journey.</p>"
      example:
        Start: ""
        End: ""
    UpdateApplicationSettings_request_WriteApplicationSettingsRequest_JourneyLimits:
      allOf:
      - $ref: '#/components/schemas/ApplicationSettingsJourneyLimits'
      - description: "The default sending limits for journeys in the application.\
          \ These limits apply to each journey for the application but can be overridden,\
          \ on a per journey basis, with the JourneyLimits resource."
      example:
        DailyCap: ""
        TimeframeCap:
          Cap: ""
          Days: ""
        TotalCap: ""
    UpdateApplicationSettings_request_WriteApplicationSettingsRequest:
      description: Specifies the default settings for an application.
      properties:
        CampaignHook:
          $ref: '#/components/schemas/UpdateApplicationSettings_request_WriteApplicationSettingsRequest_CampaignHook'
        CloudWatchMetricsEnabled:
          allOf:
          - $ref: '#/components/schemas/__boolean'
          - description: Specifies whether to enable application-related alarms in
              Amazon CloudWatch.
        EventTaggingEnabled:
          type: boolean
        Limits:
          $ref: '#/components/schemas/UpdateApplicationSettings_request_WriteApplicationSettingsRequest_Limits'
        QuietTime:
          $ref: '#/components/schemas/UpdateApplicationSettings_request_WriteApplicationSettingsRequest_QuietTime'
        JourneyLimits:
          $ref: '#/components/schemas/UpdateApplicationSettings_request_WriteApplicationSettingsRequest_JourneyLimits'
      type: object
    UpdateApplicationSettings_request:
      properties:
        WriteApplicationSettingsRequest:
          $ref: '#/components/schemas/UpdateApplicationSettings_request_WriteApplicationSettingsRequest'
      required:
      - WriteApplicationSettingsRequest
      type: object
    TagResource_request_TagsModel:
      description: "Specifies the tags (keys and values) for an application, campaign,\
        \ message template, or segment."
      properties:
        tags:
          allOf:
          - $ref: '#/components/schemas/MapOf__string'
          - description: "<p>A string-to-string map of key-value pairs that defines\
              \ the tags for an application, campaign, message template, or segment.\
              \ Each of these resources can have a maximum of 50 tags.</p> <p>Each\
              \ tag consists of a required tag key and an associated tag value. The\
              \ maximum length of a tag key is 128 characters. The maximum length\
              \ of a tag value is 256 characters.</p>"
      type: object
    TagResource_request:
      properties:
        TagsModel:
          $ref: '#/components/schemas/TagResource_request_TagsModel'
      required:
      - TagsModel
      type: object
    PhoneNumberValidate_request_NumberValidateRequest:
      description: Specifies a phone number to validate and retrieve information about.
      properties:
        IsoCountryCode:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: "The two-character code, in ISO 3166-1 alpha-2 format, for\
              \ the country or region where the phone number was originally registered."
        PhoneNumber:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: "The phone number to retrieve information about. The phone\
              \ number that you provide should include a valid numeric country code.\
              \ Otherwise, the operation might result in an error."
      type: object
    PhoneNumberValidate_request:
      properties:
        NumberValidateRequest:
          $ref: '#/components/schemas/PhoneNumberValidate_request_NumberValidateRequest'
      required:
      - NumberValidateRequest
      type: object
    PutEvents_request_EventsRequest:
      description: Specifies a batch of events to process.
      properties:
        BatchItem:
          allOf:
          - $ref: '#/components/schemas/MapOfEventsBatch'
          - description: "The batch of events to process. For each item in a batch,\
              \ the endpoint ID acts as a key that has an EventsBatch object as its\
              \ value."
      type: object
    PutEvents_request:
      properties:
        EventsRequest:
          $ref: '#/components/schemas/PutEvents_request_EventsRequest'
      required:
      - EventsRequest
      type: object
    RemoveAttributes_request_UpdateAttributesRequest:
      description: Specifies one or more attributes to remove from all the endpoints
        that are associated with an application.
      properties:
        Blacklist:
          allOf:
          - $ref: '#/components/schemas/ListOf__string'
          - description: "An array of the attributes to remove from all the endpoints\
              \ that are associated with the application. The array can specify the\
              \ complete, exact name of each attribute to remove or it can specify\
              \ a glob pattern that an attribute name must match in order for the\
              \ attribute to be removed."
      type: object
    RemoveAttributes_request:
      properties:
        UpdateAttributesRequest:
          $ref: '#/components/schemas/RemoveAttributes_request_UpdateAttributesRequest'
      required:
      - UpdateAttributesRequest
      type: object
    SendMessages_request_MessageRequest_MessageConfiguration:
      allOf:
      - $ref: '#/components/schemas/DirectMessageConfiguration'
      - description: The settings and content for the default message and any default
          messages that you defined for specific channels.
      example:
        APNSMessage:
          Action: ""
          CollapseId: ""
          MediaUrl: ""
          Category: ""
          TimeToLive: ""
          Priority: ""
          Title: ""
          Data: ""
          Sound: ""
          Badge: ""
          Url: ""
          PreferredAuthenticationMethod: ""
          APNSPushType: ""
          ThreadId: ""
          Substitutions: ""
          SilentPush: ""
          Body: ""
          RawContent: ""
        BaiduMessage:
          Action: ""
          TimeToLive: ""
          IconReference: ""
          ImageUrl: ""
          SmallImageIconUrl: ""
          Title: ""
          Data: ""
          Sound: ""
          Url: ""
          Substitutions: ""
          ImageIconUrl: ""
          SilentPush: ""
          Body: ""
          RawContent: ""
        DefaultMessage:
          Substitutions: ""
          Body: ""
        EmailMessage:
          FromAddress: ""
          FeedbackForwardingAddress: ""
          Substitutions: ""
          RawEmail:
            Data: ""
          ReplyToAddresses: ""
          SimpleEmail:
            HtmlPart:
              Charset: ""
              Data: ""
            TextPart:
              Charset: ""
              Data: ""
            Subject:
              Charset: ""
              Data: ""
          Body: ""
        VoiceMessage:
          LanguageCode: ""
          OriginationNumber: ""
          Substitutions: ""
          VoiceId: ""
          Body: ""
        GCMMessage:
          Action: ""
          TimeToLive: ""
          Priority: ""
          IconReference: ""
          ImageUrl: ""
          SmallImageIconUrl: ""
          Title: ""
          Data: ""
          Sound: ""
          Url: ""
          RestrictedPackageName: ""
          PreferredAuthenticationMethod: ""
          Substitutions: ""
          ImageIconUrl: ""
          SilentPush: ""
          Body: ""
          CollapseKey: ""
          RawContent: ""
        SMSMessage:
          EntityId: ""
          MediaUrl: ""
          OriginationNumber: ""
          Keyword: ""
          Substitutions: ""
          SenderId: ""
          Body: ""
          MessageType: ""
          TemplateId: ""
        DefaultPushNotificationMessage:
          Action: ""
          Substitutions: ""
          Title: ""
          Data: ""
          SilentPush: ""
          Body: ""
          Url: ""
        ADMMessage:
          Action: ""
          ConsolidationKey: ""
          IconReference: ""
          ImageUrl: ""
          SmallImageIconUrl: ""
          Title: ""
          Data: ""
          Sound: ""
          ExpiresAfter: ""
          Url: ""
          Substitutions: ""
          ImageIconUrl: ""
          SilentPush: ""
          Body: ""
          RawContent: ""
          MD5: ""
    SendMessages_request_MessageRequest_TemplateConfiguration:
      allOf:
      - $ref: '#/components/schemas/TemplateConfiguration'
      - description: The message template to use for the message.
      example:
        SMSTemplate:
          Version: ""
          Name: ""
        EmailTemplate:
          Version: ""
          Name: ""
        InAppTemplate:
          Version: ""
          Name: ""
        PushTemplate:
          Version: ""
          Name: ""
        VoiceTemplate:
          Version: ""
          Name: ""
    SendMessages_request_MessageRequest:
      description: Specifies the configuration and other settings for a message.
      properties:
        Addresses:
          allOf:
          - $ref: '#/components/schemas/MapOfAddressConfiguration'
          - description: "A map of key-value pairs, where each key is an address and\
              \ each value is an <a href=\"https://docs.aws.amazon.com/pinpoint/latest/apireference/apps-application-id-messages.html#apps-application-id-messages-model-addressconfiguration\"\
              >AddressConfiguration</a> object. An address can be a push notification\
              \ token, a phone number, or an email address. You can use an <a href=\"\
              https://docs.aws.amazon.com/pinpoint/latest/apireference/apps-application-id-messages.html#apps-application-id-messages-model-addressconfiguration\"\
              >AddressConfiguration</a> object to tailor the message for an address\
              \ by specifying settings such as content overrides and message variables."
        Context:
          allOf:
          - $ref: '#/components/schemas/MapOf__string'
          - description: "A map of custom attributes to attach to the message. For\
              \ a push notification, this payload is added to the data.pinpoint object.\
              \ For an email or text message, this payload is added to email/SMS delivery\
              \ receipt event attributes."
        Endpoints:
          allOf:
          - $ref: '#/components/schemas/MapOfEndpointSendConfiguration'
          - description: "A map of key-value pairs, where each key is an endpoint\
              \ ID and each value is an <a href=\"https://docs.aws.amazon.com/pinpoint/latest/apireference/apps-application-id-messages.html#apps-application-id-messages-model-endpointsendconfiguration\"\
              >EndpointSendConfiguration</a> object. You can use an <a href=\"https://docs.aws.amazon.com/pinpoint/latest/apireference/apps-application-id-messages.html#apps-application-id-messages-model-endpointsendconfiguration\"\
              >EndpointSendConfiguration</a> object to tailor the message for an endpoint\
              \ by specifying settings such as content overrides and message variables."
        MessageConfiguration:
          $ref: '#/components/schemas/SendMessages_request_MessageRequest_MessageConfiguration'
        TemplateConfiguration:
          $ref: '#/components/schemas/SendMessages_request_MessageRequest_TemplateConfiguration'
        TraceId:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The unique identifier for tracing the message. This identifier
              is visible to message recipients.
      type: object
    SendMessages_request:
      properties:
        MessageRequest:
          $ref: '#/components/schemas/SendMessages_request_MessageRequest'
      required:
      - MessageRequest
      type: object
    SendOTPMessage_request_SendOTPMessageRequestParameters:
      description: Send OTP message request parameters.
      properties:
        AllowedAttempts:
          allOf:
          - $ref: '#/components/schemas/__integer'
          - description: The attempts allowed to validate an OTP.
        BrandName:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The brand name that will be substituted into the OTP message
              body. Should be owned by calling AWS account.
        Channel:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: "Channel type for the OTP message. Supported values: [SMS]."
        CodeLength:
          allOf:
          - $ref: '#/components/schemas/__integer'
          - description: The number of characters in the generated OTP.
        DestinationIdentity:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The destination identity to send OTP to.
        EntityId:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: A unique Entity ID received from DLT after entity registration
              is approved.
        Language:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The language to be used for the outgoing message body containing
              the OTP.
        OriginationIdentity:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The origination identity used to send OTP from.
        ReferenceId:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: Developer-specified reference identifier. Required to match
              during OTP verification.
        TemplateId:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: A unique Template ID received from DLT after entity registration
              is approved.
        ValidityPeriod:
          allOf:
          - $ref: '#/components/schemas/__integer'
          - description: The time in minutes before the OTP is no longer valid.
      type: object
    SendOTPMessage_request:
      properties:
        SendOTPMessageRequestParameters:
          $ref: '#/components/schemas/SendOTPMessage_request_SendOTPMessageRequestParameters'
      required:
      - SendOTPMessageRequestParameters
      type: object
    SendUsersMessages_request_SendUsersMessageRequest:
      description: Specifies the configuration and other settings for a message to
        send to all the endpoints that are associated with a list of users.
      properties:
        Context:
          allOf:
          - $ref: '#/components/schemas/MapOf__string'
          - description: "A map of custom attribute-value pairs. For a push notification,\
              \ Amazon Pinpoint adds these attributes to the data.pinpoint object\
              \ in the body of the notification payload. Amazon Pinpoint also provides\
              \ these attributes in the events that it generates for users-messages\
              \ deliveries."
        MessageConfiguration:
          $ref: '#/components/schemas/SendMessages_request_MessageRequest_MessageConfiguration'
        TemplateConfiguration:
          $ref: '#/components/schemas/SendMessages_request_MessageRequest_TemplateConfiguration'
        TraceId:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The unique identifier for tracing the message. This identifier
              is visible to message recipients.
        Users:
          allOf:
          - $ref: '#/components/schemas/MapOfEndpointSendConfiguration'
          - description: A map that associates user IDs with <a href="https://docs.aws.amazon.com/pinpoint/latest/apireference/apps-application-id-messages.html#apps-application-id-messages-model-endpointsendconfiguration">EndpointSendConfiguration</a>
              objects. You can use an <a href="https://docs.aws.amazon.com/pinpoint/latest/apireference/apps-application-id-messages.html#apps-application-id-messages-model-endpointsendconfiguration">EndpointSendConfiguration</a>
              object to tailor the message for a user by specifying settings such
              as content overrides and message variables.
      type: object
    SendUsersMessages_request:
      properties:
        SendUsersMessageRequest:
          $ref: '#/components/schemas/SendUsersMessages_request_SendUsersMessageRequest'
      required:
      - SendUsersMessageRequest
      type: object
    UpdateEndpointsBatch_request_EndpointBatchRequest:
      description: Specifies a batch of endpoints to create or update and the settings
        and attributes to set or change for each endpoint.
      properties:
        Item:
          allOf:
          - $ref: '#/components/schemas/ListOfEndpointBatchItem'
          - description: "An array that defines the endpoints to create or update\
              \ and, for each endpoint, the property values to set or change. An array\
              \ can contain a maximum of 100 items."
      type: object
    UpdateEndpointsBatch_request:
      properties:
        EndpointBatchRequest:
          $ref: '#/components/schemas/UpdateEndpointsBatch_request_EndpointBatchRequest'
      required:
      - EndpointBatchRequest
      type: object
    UpdateJourneyState_request_JourneyStateRequest:
      description: Changes the status of a journey.
      properties:
        State:
          allOf:
          - $ref: '#/components/schemas/State'
          - description: "<p>The status of the journey. Currently, Supported values\
              \ are ACTIVE, PAUSED, and CANCELLED</p> <p>If you cancel a journey,\
              \ Amazon Pinpoint continues to perform activities that are currently\
              \ in progress, until those activities are complete. Amazon Pinpoint\
              \ also continues to collect and aggregate analytics data for those activities,\
              \ until they are complete, and any activities that were complete when\
              \ you cancelled the journey.</p> <p>After you cancel a journey, you\
              \ can't add, change, or remove any activities from the journey. In addition,\
              \ Amazon Pinpoint stops evaluating the journey and doesn't perform any\
              \ activities that haven't started.</p> <p>When the journey is paused,\
              \ Amazon Pinpoint continues to perform activities that are currently\
              \ in progress, until those activities are complete. Endpoints will stop\
              \ entering journeys when the journey is paused and will resume entering\
              \ the journey after the journey is resumed. For wait activities, wait\
              \ time is paused when the journey is paused. Currently, PAUSED only\
              \ supports journeys with a segment refresh interval.</p>"
      type: object
    UpdateJourneyState_request:
      properties:
        JourneyStateRequest:
          $ref: '#/components/schemas/UpdateJourneyState_request_JourneyStateRequest'
      required:
      - JourneyStateRequest
      type: object
    UpdateTemplateActiveVersion_request_TemplateActiveVersionRequest:
      description: Specifies which version of a message template to use as the active
        version of the template.
      properties:
        Version:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: "The version of the message template to use as the active\
              \ version of the template. Valid values are: latest, for the most recent\
              \ version of the template; or, the unique identifier for any existing\
              \ version of the template. If you specify an identifier, the value must\
              \ match the identifier for an existing template version. To retrieve\
              \ a list of versions and version identifiers for a template, use the\
              \ <link  linkend=\"templates-template-name-template-type-versions\"\
              >Template Versions</link> resource."
      type: object
    UpdateTemplateActiveVersion_request:
      properties:
        TemplateActiveVersionRequest:
          $ref: '#/components/schemas/UpdateTemplateActiveVersion_request_TemplateActiveVersionRequest'
      required:
      - TemplateActiveVersionRequest
      type: object
    VerifyOTPMessage_request_VerifyOTPMessageRequestParameters:
      description: Verify OTP message request.
      properties:
        DestinationIdentity:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The destination identity to send OTP to.
        Otp:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The OTP the end user provided for verification.
        ReferenceId:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The reference identifier provided when the OTP was previously
              sent.
      type: object
    VerifyOTPMessage_request:
      properties:
        VerifyOTPMessageRequestParameters:
          $ref: '#/components/schemas/VerifyOTPMessage_request_VerifyOTPMessageRequestParameters'
      required:
      - VerifyOTPMessageRequestParameters
      type: object
    MessageConfiguration_ADMMessage:
      allOf:
      - $ref: '#/components/schemas/Message'
      - description: "The message that the campaign sends through the ADM (Amazon\
          \ Device Messaging) channel. If specified, this message overrides the default\
          \ message."
      example:
        JsonBody: ""
        Action: ""
        MediaUrl: ""
        TimeToLive: ""
        ImageSmallIconUrl: ""
        ImageUrl: ""
        Title: ""
        ImageIconUrl: ""
        SilentPush: ""
        Body: ""
        RawContent: ""
        Url: ""
    MessageConfiguration_APNSMessage:
      allOf:
      - $ref: '#/components/schemas/Message'
      - description: "The message that the campaign sends through the APNs (Apple\
          \ Push Notification service) channel. If specified, this message overrides\
          \ the default message."
      example:
        JsonBody: ""
        Action: ""
        MediaUrl: ""
        TimeToLive: ""
        ImageSmallIconUrl: ""
        ImageUrl: ""
        Title: ""
        ImageIconUrl: ""
        SilentPush: ""
        Body: ""
        RawContent: ""
        Url: ""
    MessageConfiguration_BaiduMessage:
      allOf:
      - $ref: '#/components/schemas/Message'
      - description: "The message that the campaign sends through the Baidu (Baidu\
          \ Cloud Push) channel. If specified, this message overrides the default\
          \ message."
      example:
        JsonBody: ""
        Action: ""
        MediaUrl: ""
        TimeToLive: ""
        ImageSmallIconUrl: ""
        ImageUrl: ""
        Title: ""
        ImageIconUrl: ""
        SilentPush: ""
        Body: ""
        RawContent: ""
        Url: ""
    MessageConfiguration_CustomMessage:
      allOf:
      - $ref: '#/components/schemas/CampaignCustomMessage'
      - description: "<p>The message that the campaign sends through a custom channel,\
          \ as specified by the delivery configuration (CustomDeliveryConfiguration)\
          \ settings for the campaign. If specified, this message overrides the default\
          \ message.</p> "
      example:
        Data: ""
    MessageConfiguration_DefaultMessage:
      allOf:
      - $ref: '#/components/schemas/Message'
      - description: The default message that the campaign sends through all the channels
          that are configured for the campaign.
      example:
        JsonBody: ""
        Action: ""
        MediaUrl: ""
        TimeToLive: ""
        ImageSmallIconUrl: ""
        ImageUrl: ""
        Title: ""
        ImageIconUrl: ""
        SilentPush: ""
        Body: ""
        RawContent: ""
        Url: ""
    MessageConfiguration_EmailMessage:
      allOf:
      - $ref: '#/components/schemas/CampaignEmailMessage'
      - description: "The message that the campaign sends through the email channel.\
          \ If specified, this message overrides the default message."
      example:
        FromAddress: ""
        HtmlBody: ""
        Title: ""
        Body: ""
    MessageConfiguration_GCMMessage:
      allOf:
      - $ref: '#/components/schemas/Message'
      - description: "The message that the campaign sends through the GCM channel,\
          \ which enables Amazon Pinpoint to send push notifications through the Firebase\
          \ Cloud Messaging (FCM), formerly Google Cloud Messaging (GCM), service.\
          \ If specified, this message overrides the default message."
      example:
        JsonBody: ""
        Action: ""
        MediaUrl: ""
        TimeToLive: ""
        ImageSmallIconUrl: ""
        ImageUrl: ""
        Title: ""
        ImageIconUrl: ""
        SilentPush: ""
        Body: ""
        RawContent: ""
        Url: ""
    MessageConfiguration_SMSMessage:
      allOf:
      - $ref: '#/components/schemas/CampaignSmsMessage'
      - description: "The message that the campaign sends through the SMS channel.\
          \ If specified, this message overrides the default message."
      example:
        EntityId: ""
        OriginationNumber: ""
        SenderId: ""
        Body: ""
        MessageType: ""
        TemplateId: ""
    MessageConfiguration_InAppMessage:
      allOf:
      - $ref: '#/components/schemas/CampaignInAppMessage'
      - description: The in-app message configuration.
      example:
        CustomConfig: ""
        Layout: ""
        Content: ""
        Body: ""
    Schedule_EventFilter:
      allOf:
      - $ref: '#/components/schemas/CampaignEventFilter'
      - description: "The type of event that causes the campaign to be sent, if the\
          \ value of the Frequency property is EVENT."
      example:
        FilterType: ""
        Dimensions:
          Metrics: ""
          EventType:
            DimensionType: ""
            Values: ""
          Attributes: ""
    Schedule_QuietTime:
      allOf:
      - $ref: '#/components/schemas/QuietTime'
      - description: "<p>The default quiet time for the campaign. Quiet time is a\
          \ specific time range when a campaign doesn't send messages to endpoints,\
          \ if all the following conditions are met:</p> <ul><li><p>The EndpointDemographic.Timezone\
          \ property of the endpoint is set to a valid value.</p></li> <li><p>The\
          \ current time in the endpoint's time zone is later than or equal to the\
          \ time specified by the QuietTime.Start property for the campaign.</p></li>\
          \ <li><p>The current time in the endpoint's time zone is earlier than or\
          \ equal to the time specified by the QuietTime.End property for the campaign.</p></li></ul>\
          \ <p>If any of the preceding conditions isn't met, the endpoint will receive\
          \ messages from the campaign, even if quiet time is enabled.</p>"
      example:
        Start: ""
        End: ""
    TemplateConfiguration_EmailTemplate:
      allOf:
      - $ref: '#/components/schemas/Template'
      - description: The email template to use for the message.
      example:
        Version: ""
        Name: ""
    TemplateConfiguration_PushTemplate:
      allOf:
      - $ref: '#/components/schemas/Template'
      - description: The push notification template to use for the message.
      example:
        Version: ""
        Name: ""
    TemplateConfiguration_SMSTemplate:
      allOf:
      - $ref: '#/components/schemas/Template'
      - description: The SMS template to use for the message.
      example:
        Version: ""
        Name: ""
    TemplateConfiguration_VoiceTemplate:
      allOf:
      - $ref: '#/components/schemas/Template'
      - description: The voice template to use for the message. This object isn't
          supported for campaigns.
      example:
        Version: ""
        Name: ""
    TemplateConfiguration_InAppTemplate:
      allOf:
      - $ref: '#/components/schemas/Template'
      - description: The InApp template to use for the message. The InApp template
          object is not supported for SendMessages.
      example:
        Version: ""
        Name: ""
    JourneyLimits_TimeframeCap:
      allOf:
      - $ref: '#/components/schemas/JourneyTimeframeCap'
      - description: The number of messages that an endpoint can receive during the
          specified timeframe.
      example:
        Cap: ""
        Days: ""
    StartCondition_SegmentStartCondition:
      allOf:
      - $ref: '#/components/schemas/SegmentCondition'
      - description: The segment that's associated with the first activity in the
          journey. This segment determines which users are participants in the journey.
      example:
        SegmentId: ""
    SegmentDimensions_Behavior:
      allOf:
      - $ref: '#/components/schemas/SegmentBehaviors'
      - description: "The behavior-based criteria, such as how recently users have\
          \ used your app, for the segment."
      example:
        Recency:
          Duration: ""
          RecencyType: ""
    SegmentDimensions_Demographic:
      allOf:
      - $ref: '#/components/schemas/SegmentDemographics'
      - description: "The demographic-based criteria, such as device platform, for\
          \ the segment."
      example:
        AppVersion:
          DimensionType: ""
          Values: ""
        DeviceType:
          DimensionType: ""
          Values: ""
        Platform:
          DimensionType: ""
          Values: ""
        Channel:
          DimensionType: ""
          Values: ""
        Model:
          DimensionType: ""
          Values: ""
        Make:
          DimensionType: ""
          Values: ""
    SegmentDimensions_Location:
      allOf:
      - $ref: '#/components/schemas/SegmentLocation'
      - description: "The location-based criteria, such as region or GPS coordinates,\
          \ for the segment."
      example:
        GPSPoint:
          RangeInKilometers: ""
          Coordinates:
            Latitude: ""
            Longitude: ""
        Country:
          DimensionType: ""
          Values: ""
    DirectMessageConfiguration_ADMMessage:
      allOf:
      - $ref: '#/components/schemas/ADMMessage'
      - description: The default push notification message for the ADM (Amazon Device
          Messaging) channel. This message overrides the default push notification
          message (DefaultPushNotificationMessage).
      example:
        Action: ""
        ConsolidationKey: ""
        IconReference: ""
        ImageUrl: ""
        SmallImageIconUrl: ""
        Title: ""
        Data: ""
        Sound: ""
        ExpiresAfter: ""
        Url: ""
        Substitutions: ""
        ImageIconUrl: ""
        SilentPush: ""
        Body: ""
        RawContent: ""
        MD5: ""
    DirectMessageConfiguration_APNSMessage:
      allOf:
      - $ref: '#/components/schemas/APNSMessage'
      - description: The default push notification message for the APNs (Apple Push
          Notification service) channel. This message overrides the default push notification
          message (DefaultPushNotificationMessage).
      example:
        Action: ""
        CollapseId: ""
        MediaUrl: ""
        Category: ""
        TimeToLive: ""
        Priority: ""
        Title: ""
        Data: ""
        Sound: ""
        Badge: ""
        Url: ""
        PreferredAuthenticationMethod: ""
        APNSPushType: ""
        ThreadId: ""
        Substitutions: ""
        SilentPush: ""
        Body: ""
        RawContent: ""
    DirectMessageConfiguration_BaiduMessage:
      allOf:
      - $ref: '#/components/schemas/BaiduMessage'
      - description: The default push notification message for the Baidu (Baidu Cloud
          Push) channel. This message overrides the default push notification message
          (DefaultPushNotificationMessage).
      example:
        Action: ""
        TimeToLive: ""
        IconReference: ""
        ImageUrl: ""
        SmallImageIconUrl: ""
        Title: ""
        Data: ""
        Sound: ""
        Url: ""
        Substitutions: ""
        ImageIconUrl: ""
        SilentPush: ""
        Body: ""
        RawContent: ""
    DirectMessageConfiguration_DefaultMessage:
      allOf:
      - $ref: '#/components/schemas/DefaultMessage'
      - description: The default message for all channels.
      example:
        Substitutions: ""
        Body: ""
    DirectMessageConfiguration_DefaultPushNotificationMessage:
      allOf:
      - $ref: '#/components/schemas/DefaultPushNotificationMessage'
      - description: The default push notification message for all push notification
          channels.
      example:
        Action: ""
        Substitutions: ""
        Title: ""
        Data: ""
        SilentPush: ""
        Body: ""
        Url: ""
    DirectMessageConfiguration_EmailMessage:
      allOf:
      - $ref: '#/components/schemas/EmailMessage'
      - description: The default message for the email channel. This message overrides
          the default message (DefaultMessage).
      example:
        FromAddress: ""
        FeedbackForwardingAddress: ""
        Substitutions: ""
        RawEmail:
          Data: ""
        ReplyToAddresses: ""
        SimpleEmail:
          HtmlPart:
            Charset: ""
            Data: ""
          TextPart:
            Charset: ""
            Data: ""
          Subject:
            Charset: ""
            Data: ""
        Body: ""
    DirectMessageConfiguration_GCMMessage:
      allOf:
      - $ref: '#/components/schemas/GCMMessage'
      - description: "The default push notification message for the GCM channel, which\
          \ is used to send notifications through the Firebase Cloud Messaging (FCM),\
          \ formerly Google Cloud Messaging (GCM), service. This message overrides\
          \ the default push notification message (DefaultPushNotificationMessage)."
      example:
        Action: ""
        TimeToLive: ""
        Priority: ""
        IconReference: ""
        ImageUrl: ""
        SmallImageIconUrl: ""
        Title: ""
        Data: ""
        Sound: ""
        Url: ""
        RestrictedPackageName: ""
        PreferredAuthenticationMethod: ""
        Substitutions: ""
        ImageIconUrl: ""
        SilentPush: ""
        Body: ""
        CollapseKey: ""
        RawContent: ""
    DirectMessageConfiguration_SMSMessage:
      allOf:
      - $ref: '#/components/schemas/SMSMessage'
      - description: The default message for the SMS channel. This message overrides
          the default message (DefaultMessage).
      example:
        EntityId: ""
        MediaUrl: ""
        OriginationNumber: ""
        Keyword: ""
        Substitutions: ""
        SenderId: ""
        Body: ""
        MessageType: ""
        TemplateId: ""
    DirectMessageConfiguration_VoiceMessage:
      allOf:
      - $ref: '#/components/schemas/VoiceMessage'
      - description: The default message for the voice channel. This message overrides
          the default message (DefaultMessage).
      example:
        LanguageCode: ""
        OriginationNumber: ""
        Substitutions: ""
        VoiceId: ""
        Body: ""
    ApplicationSettingsJourneyLimits_TimeframeCap:
      allOf:
      - $ref: '#/components/schemas/JourneyTimeframeCap'
      - description: The default maximum number of messages that can be sent to an
          endpoint during the specified timeframe for all journeys.
      example:
        Cap: ""
        Days: ""
    CustomMessageActivity_MessageConfig:
      allOf:
      - $ref: '#/components/schemas/JourneyCustomMessage'
      - description: Specifies the message data included in a custom channel message
          that's sent to participants in a journey.
    ConditionalSplitActivity_Condition:
      allOf:
      - $ref: '#/components/schemas/Condition'
      - description: "The conditions that define the paths for the activity, and the\
          \ relationship between the conditions."
    ConditionalSplitActivity_EvaluationWaitTime:
      allOf:
      - $ref: '#/components/schemas/WaitTime'
      - description: "The amount of time to wait before determining whether the conditions\
          \ are met, or the date and time when Amazon Pinpoint determines whether\
          \ the conditions are met."
    EmailMessageActivity_MessageConfig:
      allOf:
      - $ref: '#/components/schemas/JourneyEmailMessage'
      - description: Specifies the sender address for an email message that's sent
          to participants in the journey.
    MultiConditionalSplitActivity_EvaluationWaitTime:
      allOf:
      - $ref: '#/components/schemas/WaitTime'
      - description: The amount of time to wait or the date and time when Amazon Pinpoint
          determines whether the conditions are met.
    PushMessageActivity_MessageConfig:
      allOf:
      - $ref: '#/components/schemas/JourneyPushMessage'
      - description: Specifies the time to live (TTL) value for push notifications
          that are sent to participants in a journey.
    SMSMessageActivity_MessageConfig:
      allOf:
      - $ref: '#/components/schemas/JourneySMSMessage'
      - description: Specifies the sender ID and message type for an SMS message that's
          sent to participants in a journey.
    WaitActivity_WaitTime:
      allOf:
      - $ref: '#/components/schemas/WaitTime'
      - description: The amount of time to wait or the date and time when the activity
          moves participants to the next activity in the journey.
    Activity_CUSTOM:
      allOf:
      - $ref: '#/components/schemas/CustomMessageActivity'
      - description: The settings for a custom message activity. This type of activity
          calls an AWS Lambda function or web hook that sends messages to participants.
    Activity_ConditionalSplit:
      allOf:
      - $ref: '#/components/schemas/ConditionalSplitActivity'
      - description: "The settings for a yes/no split activity. This type of activity\
          \ sends participants down one of two paths in a journey, based on conditions\
          \ that you specify."
    Activity_EMAIL:
      allOf:
      - $ref: '#/components/schemas/EmailMessageActivity'
      - description: The settings for an email activity. This type of activity sends
          an email message to participants.
    Activity_Holdout:
      allOf:
      - $ref: '#/components/schemas/HoldoutActivity'
      - description: The settings for a holdout activity. This type of activity stops
          a journey for a specified percentage of participants.
    Activity_MultiCondition:
      allOf:
      - $ref: '#/components/schemas/MultiConditionalSplitActivity'
      - description: "The settings for a multivariate split activity. This type of\
          \ activity sends participants down one of as many as five paths (including\
          \ a default <i>Else</i> path) in a journey, based on conditions that you\
          \ specify."
    Activity_PUSH:
      allOf:
      - $ref: '#/components/schemas/PushMessageActivity'
      - description: The settings for a push notification activity. This type of activity
          sends a push notification to participants.
    Activity_RandomSplit:
      allOf:
      - $ref: '#/components/schemas/RandomSplitActivity'
      - description: "The settings for a random split activity. This type of activity\
          \ randomly sends specified percentages of participants down one of as many\
          \ as five paths in a journey, based on conditions that you specify."
    Activity_SMS:
      allOf:
      - $ref: '#/components/schemas/SMSMessageActivity'
      - description: The settings for an SMS activity. This type of activity sends
          a text message to participants.
    Activity_Wait:
      allOf:
      - $ref: '#/components/schemas/WaitActivity'
      - description: The settings for a wait activity. This type of activity waits
          for a certain amount of time or until a specific date and time before moving
          participants to the next activity in a journey.
    Activity_ContactCenter:
      allOf:
      - $ref: '#/components/schemas/ContactCenterActivity'
      - description: The settings for a connect activity. This type of activity initiates
          a contact center call to participants.
    ApplicationDateRangeKpiResponse_KpiResult:
      allOf:
      - $ref: '#/components/schemas/BaseKpiResult'
      - description: An array of objects that contains the results of the query. Each
          object contains the value for the metric and metadata about that value.
      example:
        Rows: ""
    ApplicationSettingsResource_CampaignHook:
      allOf:
      - $ref: '#/components/schemas/CampaignHook'
      - description: The settings for the AWS Lambda function to invoke by default
          as a code hook for campaigns in the application. You can use this hook to
          customize segments that are used by campaigns in the application.
      example:
        Mode: ""
        WebUrl: ""
        LambdaFunctionName: ""
    ApplicationSettingsResource_Limits:
      allOf:
      - $ref: '#/components/schemas/CampaignLimits'
      - description: The default sending limits for campaigns in the application.
      example:
        Daily: ""
        MaximumDuration: ""
        Total: ""
        MessagesPerSecond: ""
        Session: ""
    ApplicationSettingsResource_QuietTime:
      allOf:
      - $ref: '#/components/schemas/QuietTime'
      - description: "<p>The default quiet time for campaigns in the application.\
          \ Quiet time is a specific time range when messages aren't sent to endpoints,\
          \ if all the following conditions are met:</p> <ul><li><p>The EndpointDemographic.Timezone\
          \ property of the endpoint is set to a valid value.</p></li> <li><p>The\
          \ current time in the endpoint's time zone is later than or equal to the\
          \ time specified by the QuietTime.Start property for the application (or\
          \ a campaign or journey that has custom quiet time settings).</p></li> <li><p>The\
          \ current time in the endpoint's time zone is earlier than or equal to the\
          \ time specified by the QuietTime.End property for the application (or a\
          \ campaign or journey that has custom quiet time settings).</p></li></ul>\
          \ <p>If any of the preceding conditions isn't met, the endpoint will receive\
          \ messages from a campaign or journey, even if quiet time is enabled.</p>"
      example:
        Start: ""
        End: ""
    EventDimensions_EventType:
      allOf:
      - $ref: '#/components/schemas/SetDimension'
      - description: "The name of the event that causes the campaign to be sent or\
          \ the journey activity to be performed. This can be a standard event that\
          \ Amazon Pinpoint generates, such as _email.delivered. For campaigns, this\
          \ can also be a custom event that's specific to your application. For information\
          \ about standard events, see <a href=\"https://docs.aws.amazon.com/pinpoint/latest/developerguide/event-streams.html\"\
          >Streaming Amazon Pinpoint Events</a> in the <i>Amazon Pinpoint Developer\
          \ Guide</i>."
      example:
        DimensionType: ""
        Values: ""
    CampaignEventFilter_Dimensions:
      allOf:
      - $ref: '#/components/schemas/EventDimensions'
      - description: The dimension settings of the event filter for the campaign.
      example:
        Metrics: ""
        EventType:
          DimensionType: ""
          Values: ""
        Attributes: ""
    CampaignResponse_CustomDeliveryConfiguration:
      allOf:
      - $ref: '#/components/schemas/CustomDeliveryConfiguration'
      - description: The delivery configuration settings for sending the campaign
          through a custom channel.
      example:
        DeliveryUri: ""
        EndpointTypes: ""
    CampaignResponse_DefaultState:
      allOf:
      - $ref: '#/components/schemas/CampaignState'
      - description: The current status of the campaign's default treatment. This
          value exists only for campaigns that have more than one treatment.
      example:
        CampaignStatus: ""
    CampaignResponse_Hook:
      allOf:
      - $ref: '#/components/schemas/CampaignHook'
      - description: The settings for the AWS Lambda function to use as a code hook
          for the campaign. You can use this hook to customize the segment that's
          used by the campaign.
      example:
        Mode: ""
        WebUrl: ""
        LambdaFunctionName: ""
    CampaignResponse_State:
      allOf:
      - $ref: '#/components/schemas/CampaignState'
      - description: The current status of the campaign.
      example:
        CampaignStatus: ""
    CampaignResponse_TemplateConfiguration:
      allOf:
      - $ref: '#/components/schemas/TemplateConfiguration'
      - description: The message template that’s used for the campaign.
      example:
        SMSTemplate:
          Version: ""
          Name: ""
        EmailTemplate:
          Version: ""
          Name: ""
        InAppTemplate:
          Version: ""
          Name: ""
        PushTemplate:
          Version: ""
          Name: ""
        VoiceTemplate:
          Version: ""
          Name: ""
    ExportJobResponse_Definition:
      allOf:
      - $ref: '#/components/schemas/ExportJobResource'
      - description: The resource settings that apply to the export job.
      example:
        S3UrlPrefix: ""
        SegmentId: ""
        RoleArn: ""
        SegmentVersion: ""
    ImportJobResponse_Definition:
      allOf:
      - $ref: '#/components/schemas/ImportJobResource'
      - description: The resource settings that apply to the import job.
      example:
        Format: ""
        SegmentName: ""
        S3Url: ""
        SegmentId: ""
        DefineSegment: ""
        RegisterEndpoints: ""
        ExternalId: ""
        RoleArn: ""
    JourneyResponse_OpenHours:
      allOf:
      - $ref: '#/components/schemas/OpenHours'
      - description: The time when a journey can send messages. QuietTime should be
          configured first and SendingSchedule should be set to true.
      example:
        VOICE: ""
        SMS: ""
        CUSTOM: ""
        EMAIL: ""
        PUSH: ""
    JourneyResponse_ClosedDays:
      allOf:
      - $ref: '#/components/schemas/ClosedDays'
      - description: The time when a journey will not send messages. QuietTime should
          be configured first and SendingSchedule should be set to true.
      example:
        VOICE: ""
        SMS: ""
        CUSTOM: ""
        EMAIL: ""
        PUSH: ""
    SegmentResponse_Dimensions:
      allOf:
      - $ref: '#/components/schemas/SegmentDimensions'
      - description: The dimension settings for the segment.
      example:
        Demographic:
          AppVersion:
            DimensionType: ""
            Values: ""
          DeviceType:
            DimensionType: ""
            Values: ""
          Platform:
            DimensionType: ""
            Values: ""
          Channel:
            DimensionType: ""
            Values: ""
          Model:
            DimensionType: ""
            Values: ""
          Make:
            DimensionType: ""
            Values: ""
        Metrics: ""
        Attributes: ""
        Behavior:
          Recency:
            Duration: ""
            RecencyType: ""
        Location:
          GPSPoint:
            RangeInKilometers: ""
            Coordinates:
              Latitude: ""
              Longitude: ""
          Country:
            DimensionType: ""
            Values: ""
        UserAttributes: ""
    SegmentResponse_ImportDefinition:
      allOf:
      - $ref: '#/components/schemas/SegmentImportResource'
      - description: The settings for the import job that's associated with the segment.
      example:
        Format: ""
        ChannelCounts: ""
        S3Url: ""
        Size: ""
        ExternalId: ""
        RoleArn: ""
    SegmentResponse_SegmentGroups:
      allOf:
      - $ref: '#/components/schemas/SegmentGroupList'
      - description: A list of one or more segment groups that apply to the segment.
          Each segment group consists of zero or more base segments and the dimensions
          that are applied to those base segments.
      example:
        Groups: ""
        Include: ""
    EndpointResponse_User:
      allOf:
      - $ref: '#/components/schemas/EndpointUser'
      - description: One or more custom user attributes that your app reports to Amazon
          Pinpoint for the user who's associated with the endpoint.
      example:
        UserId: ""
        UserAttributes: ""
    EmailMessage_RawEmail:
      allOf:
      - $ref: '#/components/schemas/RawEmail'
      - description: "The email message, represented as a raw MIME message."
      example:
        Data: ""
    EmailMessage_SimpleEmail:
      allOf:
      - $ref: '#/components/schemas/SimpleEmail'
      - description: "The email message, composed of a subject, a text part, and an\
          \ HTML part."
      example:
        HtmlPart:
          Charset: ""
          Data: ""
        TextPart:
          Charset: ""
          Data: ""
        Subject:
          Charset: ""
          Data: ""
    SimpleEmail_HtmlPart:
      allOf:
      - $ref: '#/components/schemas/SimpleEmailPart'
      - description: "The body of the email message, in HTML format. We recommend\
          \ using HTML format for email clients that render HTML content. You can\
          \ include links, formatted text, and more in an HTML message."
      example:
        Charset: ""
        Data: ""
    SimpleEmail_Subject:
      allOf:
      - $ref: '#/components/schemas/SimpleEmailPart'
      - description: "The subject line, or title, of the email."
      example:
        Charset: ""
        Data: ""
    SimpleEmail_TextPart:
      allOf:
      - $ref: '#/components/schemas/SimpleEmailPart'
      - description: "The body of the email message, in plain text format. We recommend\
          \ using plain text format for email clients that don't render HTML content\
          \ and clients that are connected to high-latency networks, such as mobile\
          \ devices."
      example:
        Charset: ""
        Data: ""
    Event_Session:
      allOf:
      - $ref: '#/components/schemas/Session'
      - description: Information about the session in which the event occurred.
    EventCondition_Dimensions:
      allOf:
      - $ref: '#/components/schemas/EventDimensions'
      - description: The dimensions for the event filter to use for the activity.
    EventFilter_Dimensions:
      allOf:
      - $ref: '#/components/schemas/EventDimensions'
      - description: The dimensions for the event filter to use for the campaign or
          the journey activity.
      example:
        Metrics: ""
        EventType:
          DimensionType: ""
          Values: ""
        Attributes: ""
    EventsBatch_Endpoint:
      allOf:
      - $ref: '#/components/schemas/PublicEndpoint'
      - description: A set of properties and attributes that are associated with the
          endpoint.
    GPSPointDimension_Coordinates:
      allOf:
      - $ref: '#/components/schemas/GPSCoordinates'
      - description: The GPS coordinates to measure distance from.
      example:
        Latitude: ""
        Longitude: ""
    PushNotificationTemplateResponse_ADM:
      allOf:
      - $ref: '#/components/schemas/AndroidPushNotificationTemplate'
      - description: The message template that's used for the ADM (Amazon Device Messaging)
          channel. This message template overrides the default template for push notification
          channels (DefaultPushNotificationTemplate).
      example:
        Action: ""
        ImageUrl: ""
        SmallImageIconUrl: ""
        Title: ""
        ImageIconUrl: ""
        Sound: ""
        Body: ""
        RawContent: ""
        Url: ""
    PushNotificationTemplateResponse_APNS:
      allOf:
      - $ref: '#/components/schemas/APNSPushNotificationTemplate'
      - description: The message template that's used for the APNs (Apple Push Notification
          service) channel. This message template overrides the default template for
          push notification channels (DefaultPushNotificationTemplate).
      example:
        Action: ""
        MediaUrl: ""
        Title: ""
        Sound: ""
        Body: ""
        RawContent: ""
        Url: ""
    PushNotificationTemplateResponse_Baidu:
      allOf:
      - $ref: '#/components/schemas/AndroidPushNotificationTemplate'
      - description: The message template that's used for the Baidu (Baidu Cloud Push)
          channel. This message template overrides the default template for push notification
          channels (DefaultPushNotificationTemplate).
      example:
        Action: ""
        ImageUrl: ""
        SmallImageIconUrl: ""
        Title: ""
        ImageIconUrl: ""
        Sound: ""
        Body: ""
        RawContent: ""
        Url: ""
    PushNotificationTemplateResponse_Default:
      allOf:
      - $ref: '#/components/schemas/DefaultPushNotificationTemplate'
      - description: The default message template that's used for push notification
          channels.
      example:
        Action: ""
        Title: ""
        Sound: ""
        Body: ""
        Url: ""
    PushNotificationTemplateResponse_GCM:
      allOf:
      - $ref: '#/components/schemas/AndroidPushNotificationTemplate'
      - description: "The message template that's used for the GCM channel, which\
          \ is used to send notifications through the Firebase Cloud Messaging (FCM),\
          \ formerly Google Cloud Messaging (GCM), service. This message template\
          \ overrides the default template for push notification channels (DefaultPushNotificationTemplate)."
      example:
        Action: ""
        ImageUrl: ""
        SmallImageIconUrl: ""
        Title: ""
        ImageIconUrl: ""
        Sound: ""
        Body: ""
        RawContent: ""
        Url: ""
    InAppCampaignSchedule_EventFilter:
      allOf:
      - $ref: '#/components/schemas/CampaignEventFilter'
      - description: The event filter the SDK has to use to show the in-app message
          in the application.
    InAppCampaignSchedule_QuietTime:
      allOf:
      - $ref: '#/components/schemas/QuietTime'
      - description: Time during which the in-app message should not be shown to the
          user.
    InAppMessageButton_Android:
      allOf:
      - $ref: '#/components/schemas/OverrideButtonConfiguration'
      - description: Default button content.
    InAppMessageButton_DefaultConfig:
      allOf:
      - $ref: '#/components/schemas/DefaultButtonConfiguration'
      - description: Default button content.
    InAppMessageCampaign_InAppMessage:
      allOf:
      - $ref: '#/components/schemas/InAppMessage'
      - description: In-app message content with all fields required for rendering
          an in-app message.
    InAppMessageCampaign_Schedule:
      allOf:
      - $ref: '#/components/schemas/InAppCampaignSchedule'
      - description: Schedule of the campaign.
    InAppMessageContent_BodyConfig:
      allOf:
      - $ref: '#/components/schemas/InAppMessageBodyConfig'
      - description: The configuration for the message body.
    InAppMessageContent_HeaderConfig:
      allOf:
      - $ref: '#/components/schemas/InAppMessageHeaderConfig'
      - description: The configuration for the message header.
    InAppMessageContent_PrimaryBtn:
      allOf:
      - $ref: '#/components/schemas/InAppMessageButton'
      - description: The first button inside the message.
    InAppMessageContent_SecondaryBtn:
      allOf:
      - $ref: '#/components/schemas/InAppMessageButton'
      - description: The second button inside message.
    ItemResponse_EndpointItemResponse:
      allOf:
      - $ref: '#/components/schemas/EndpointItemResponse'
      - description: The response that was received after the endpoint data was accepted.
    SimpleCondition_EventCondition:
      allOf:
      - $ref: '#/components/schemas/EventCondition'
      - description: The dimension settings for the event that's associated with the
          activity.
    SimpleCondition_SegmentCondition:
      allOf:
      - $ref: '#/components/schemas/SegmentCondition'
      - description: The segment that's associated with the activity.
    SimpleCondition_SegmentDimensions:
      allOf:
      - $ref: '#/components/schemas/SegmentDimensions'
      - description: The dimension settings for the segment that's associated with
          the activity.
        xml:
          name: segmentDimensions
    MultiConditionalBranch_Condition:
      allOf:
      - $ref: '#/components/schemas/SimpleCondition'
      - description: The condition to evaluate for the activity path.
    SegmentBehaviors_Recency:
      allOf:
      - $ref: '#/components/schemas/RecencyDimension'
      - description: The dimension settings that are based on how recently an endpoint
          was active.
      example:
        Duration: ""
        RecencyType: ""
    SegmentDemographics_AppVersion:
      allOf:
      - $ref: '#/components/schemas/SetDimension'
      - description: The app version criteria for the segment.
      example:
        DimensionType: ""
        Values: ""
    SegmentDemographics_Channel:
      allOf:
      - $ref: '#/components/schemas/SetDimension'
      - description: The channel criteria for the segment.
      example:
        DimensionType: ""
        Values: ""
    SegmentDemographics_DeviceType:
      allOf:
      - $ref: '#/components/schemas/SetDimension'
      - description: The device type criteria for the segment.
      example:
        DimensionType: ""
        Values: ""
    SegmentDemographics_Make:
      allOf:
      - $ref: '#/components/schemas/SetDimension'
      - description: The device make criteria for the segment.
      example:
        DimensionType: ""
        Values: ""
    SegmentDemographics_Model:
      allOf:
      - $ref: '#/components/schemas/SetDimension'
      - description: The device model criteria for the segment.
      example:
        DimensionType: ""
        Values: ""
    SegmentDemographics_Platform:
      allOf:
      - $ref: '#/components/schemas/SetDimension'
      - description: The device platform criteria for the segment.
      example:
        DimensionType: ""
        Values: ""
    SegmentLocation_Country:
      allOf:
      - $ref: '#/components/schemas/SetDimension'
      - description: "The country or region code, in ISO 3166-1 alpha-2 format, for\
          \ the segment."
      example:
        DimensionType: ""
        Values: ""
    SegmentLocation_GPSPoint:
      allOf:
      - $ref: '#/components/schemas/GPSPointDimension'
      - description: The GPS location and range for the segment.
      example:
        RangeInKilometers: ""
        Coordinates:
          Latitude: ""
          Longitude: ""
    TreatmentResource_CustomDeliveryConfiguration:
      allOf:
      - $ref: '#/components/schemas/CustomDeliveryConfiguration'
      - description: The delivery configuration settings for sending the treatment
          through a custom channel. This object is required if the MessageConfiguration
          object for the treatment specifies a CustomMessage object.
    TreatmentResource_MessageConfiguration:
      allOf:
      - $ref: '#/components/schemas/MessageConfiguration'
      - description: The message configuration settings for the treatment.
    TreatmentResource_Schedule:
      allOf:
      - $ref: '#/components/schemas/Schedule'
      - description: The schedule settings for the treatment.
    TreatmentResource_State:
      allOf:
      - $ref: '#/components/schemas/CampaignState'
      - description: The current status of the treatment.
    TreatmentResource_TemplateConfiguration:
      allOf:
      - $ref: '#/components/schemas/TemplateConfiguration'
      - description: The message template to use for the treatment.
    ListOfOpenHoursRules_inner:
      allOf:
      - $ref: '#/components/schemas/OpenHoursRule'
      - description: Open Hour Rule Details.
    ListOfClosedDaysRules_inner:
      allOf:
      - $ref: '#/components/schemas/ClosedDaysRule'
      - description: ClosedDays rule details.
  securitySchemes:
    hmac:
      description: Amazon Signature authorization v4
      in: header
      name: Authorization
      type: apiKey
      x-amazon-apigateway-authtype: awsSigv4
x-hasEquivalentPaths: true

