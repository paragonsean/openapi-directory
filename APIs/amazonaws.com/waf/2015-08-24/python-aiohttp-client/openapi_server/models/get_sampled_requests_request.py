# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.get_sampled_requests_request_time_window import GetSampledRequestsRequestTimeWindow
from openapi_server import util


class GetSampledRequestsRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, web_acl_id: str=None, rule_id: str=None, time_window: GetSampledRequestsRequestTimeWindow=None, max_items: int=None):
        """GetSampledRequestsRequest - a model defined in OpenAPI

        :param web_acl_id: The web_acl_id of this GetSampledRequestsRequest.
        :param rule_id: The rule_id of this GetSampledRequestsRequest.
        :param time_window: The time_window of this GetSampledRequestsRequest.
        :param max_items: The max_items of this GetSampledRequestsRequest.
        """
        self.openapi_types = {
            'web_acl_id': str,
            'rule_id': str,
            'time_window': GetSampledRequestsRequestTimeWindow,
            'max_items': int
        }

        self.attribute_map = {
            'web_acl_id': 'WebAclId',
            'rule_id': 'RuleId',
            'time_window': 'TimeWindow',
            'max_items': 'MaxItems'
        }

        self._web_acl_id = web_acl_id
        self._rule_id = rule_id
        self._time_window = time_window
        self._max_items = max_items

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GetSampledRequestsRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The GetSampledRequestsRequest of this GetSampledRequestsRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def web_acl_id(self):
        """Gets the web_acl_id of this GetSampledRequestsRequest.


        :return: The web_acl_id of this GetSampledRequestsRequest.
        :rtype: str
        """
        return self._web_acl_id

    @web_acl_id.setter
    def web_acl_id(self, web_acl_id):
        """Sets the web_acl_id of this GetSampledRequestsRequest.


        :param web_acl_id: The web_acl_id of this GetSampledRequestsRequest.
        :type web_acl_id: str
        """
        if web_acl_id is None:
            raise ValueError("Invalid value for `web_acl_id`, must not be `None`")

        self._web_acl_id = web_acl_id

    @property
    def rule_id(self):
        """Gets the rule_id of this GetSampledRequestsRequest.


        :return: The rule_id of this GetSampledRequestsRequest.
        :rtype: str
        """
        return self._rule_id

    @rule_id.setter
    def rule_id(self, rule_id):
        """Sets the rule_id of this GetSampledRequestsRequest.


        :param rule_id: The rule_id of this GetSampledRequestsRequest.
        :type rule_id: str
        """
        if rule_id is None:
            raise ValueError("Invalid value for `rule_id`, must not be `None`")

        self._rule_id = rule_id

    @property
    def time_window(self):
        """Gets the time_window of this GetSampledRequestsRequest.


        :return: The time_window of this GetSampledRequestsRequest.
        :rtype: GetSampledRequestsRequestTimeWindow
        """
        return self._time_window

    @time_window.setter
    def time_window(self, time_window):
        """Sets the time_window of this GetSampledRequestsRequest.


        :param time_window: The time_window of this GetSampledRequestsRequest.
        :type time_window: GetSampledRequestsRequestTimeWindow
        """
        if time_window is None:
            raise ValueError("Invalid value for `time_window`, must not be `None`")

        self._time_window = time_window

    @property
    def max_items(self):
        """Gets the max_items of this GetSampledRequestsRequest.


        :return: The max_items of this GetSampledRequestsRequest.
        :rtype: int
        """
        return self._max_items

    @max_items.setter
    def max_items(self, max_items):
        """Sets the max_items of this GetSampledRequestsRequest.


        :param max_items: The max_items of this GetSampledRequestsRequest.
        :type max_items: int
        """
        if max_items is None:
            raise ValueError("Invalid value for `max_items`, must not be `None`")

        self._max_items = max_items
