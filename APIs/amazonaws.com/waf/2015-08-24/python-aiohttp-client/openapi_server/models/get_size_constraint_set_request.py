# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class GetSizeConstraintSetRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, size_constraint_set_id: str=None):
        """GetSizeConstraintSetRequest - a model defined in OpenAPI

        :param size_constraint_set_id: The size_constraint_set_id of this GetSizeConstraintSetRequest.
        """
        self.openapi_types = {
            'size_constraint_set_id': str
        }

        self.attribute_map = {
            'size_constraint_set_id': 'SizeConstraintSetId'
        }

        self._size_constraint_set_id = size_constraint_set_id

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GetSizeConstraintSetRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The GetSizeConstraintSetRequest of this GetSizeConstraintSetRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def size_constraint_set_id(self):
        """Gets the size_constraint_set_id of this GetSizeConstraintSetRequest.


        :return: The size_constraint_set_id of this GetSizeConstraintSetRequest.
        :rtype: str
        """
        return self._size_constraint_set_id

    @size_constraint_set_id.setter
    def size_constraint_set_id(self, size_constraint_set_id):
        """Sets the size_constraint_set_id of this GetSizeConstraintSetRequest.


        :param size_constraint_set_id: The size_constraint_set_id of this GetSizeConstraintSetRequest.
        :type size_constraint_set_id: str
        """
        if size_constraint_set_id is None:
            raise ValueError("Invalid value for `size_constraint_set_id`, must not be `None`")

        self._size_constraint_set_id = size_constraint_set_id
