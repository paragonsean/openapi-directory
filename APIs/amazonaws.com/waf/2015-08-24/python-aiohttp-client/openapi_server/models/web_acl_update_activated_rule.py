# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.activated_rule_action import ActivatedRuleAction
from openapi_server.models.activated_rule_override_action import ActivatedRuleOverrideAction
from openapi_server.models.waf_rule_type import WafRuleType
from openapi_server import util


class WebACLUpdateActivatedRule(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, priority: int=None, rule_id: str=None, action: ActivatedRuleAction=None, override_action: ActivatedRuleOverrideAction=None, type: WafRuleType=None, excluded_rules: List=None):
        """WebACLUpdateActivatedRule - a model defined in OpenAPI

        :param priority: The priority of this WebACLUpdateActivatedRule.
        :param rule_id: The rule_id of this WebACLUpdateActivatedRule.
        :param action: The action of this WebACLUpdateActivatedRule.
        :param override_action: The override_action of this WebACLUpdateActivatedRule.
        :param type: The type of this WebACLUpdateActivatedRule.
        :param excluded_rules: The excluded_rules of this WebACLUpdateActivatedRule.
        """
        self.openapi_types = {
            'priority': int,
            'rule_id': str,
            'action': ActivatedRuleAction,
            'override_action': ActivatedRuleOverrideAction,
            'type': WafRuleType,
            'excluded_rules': List
        }

        self.attribute_map = {
            'priority': 'Priority',
            'rule_id': 'RuleId',
            'action': 'Action',
            'override_action': 'OverrideAction',
            'type': 'Type',
            'excluded_rules': 'ExcludedRules'
        }

        self._priority = priority
        self._rule_id = rule_id
        self._action = action
        self._override_action = override_action
        self._type = type
        self._excluded_rules = excluded_rules

    @classmethod
    def from_dict(cls, dikt: dict) -> 'WebACLUpdateActivatedRule':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The WebACLUpdate_ActivatedRule of this WebACLUpdateActivatedRule.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def priority(self):
        """Gets the priority of this WebACLUpdateActivatedRule.


        :return: The priority of this WebACLUpdateActivatedRule.
        :rtype: int
        """
        return self._priority

    @priority.setter
    def priority(self, priority):
        """Sets the priority of this WebACLUpdateActivatedRule.


        :param priority: The priority of this WebACLUpdateActivatedRule.
        :type priority: int
        """
        if priority is None:
            raise ValueError("Invalid value for `priority`, must not be `None`")

        self._priority = priority

    @property
    def rule_id(self):
        """Gets the rule_id of this WebACLUpdateActivatedRule.


        :return: The rule_id of this WebACLUpdateActivatedRule.
        :rtype: str
        """
        return self._rule_id

    @rule_id.setter
    def rule_id(self, rule_id):
        """Sets the rule_id of this WebACLUpdateActivatedRule.


        :param rule_id: The rule_id of this WebACLUpdateActivatedRule.
        :type rule_id: str
        """
        if rule_id is None:
            raise ValueError("Invalid value for `rule_id`, must not be `None`")

        self._rule_id = rule_id

    @property
    def action(self):
        """Gets the action of this WebACLUpdateActivatedRule.


        :return: The action of this WebACLUpdateActivatedRule.
        :rtype: ActivatedRuleAction
        """
        return self._action

    @action.setter
    def action(self, action):
        """Sets the action of this WebACLUpdateActivatedRule.


        :param action: The action of this WebACLUpdateActivatedRule.
        :type action: ActivatedRuleAction
        """

        self._action = action

    @property
    def override_action(self):
        """Gets the override_action of this WebACLUpdateActivatedRule.


        :return: The override_action of this WebACLUpdateActivatedRule.
        :rtype: ActivatedRuleOverrideAction
        """
        return self._override_action

    @override_action.setter
    def override_action(self, override_action):
        """Sets the override_action of this WebACLUpdateActivatedRule.


        :param override_action: The override_action of this WebACLUpdateActivatedRule.
        :type override_action: ActivatedRuleOverrideAction
        """

        self._override_action = override_action

    @property
    def type(self):
        """Gets the type of this WebACLUpdateActivatedRule.


        :return: The type of this WebACLUpdateActivatedRule.
        :rtype: WafRuleType
        """
        return self._type

    @type.setter
    def type(self, type):
        """Sets the type of this WebACLUpdateActivatedRule.


        :param type: The type of this WebACLUpdateActivatedRule.
        :type type: WafRuleType
        """

        self._type = type

    @property
    def excluded_rules(self):
        """Gets the excluded_rules of this WebACLUpdateActivatedRule.


        :return: The excluded_rules of this WebACLUpdateActivatedRule.
        :rtype: List
        """
        return self._excluded_rules

    @excluded_rules.setter
    def excluded_rules(self, excluded_rules):
        """Sets the excluded_rules of this WebACLUpdateActivatedRule.


        :param excluded_rules: The excluded_rules of this WebACLUpdateActivatedRule.
        :type excluded_rules: List
        """

        self._excluded_rules = excluded_rules
