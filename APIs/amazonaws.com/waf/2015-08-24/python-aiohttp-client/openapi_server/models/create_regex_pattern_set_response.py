# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.create_regex_pattern_set_response_regex_pattern_set import CreateRegexPatternSetResponseRegexPatternSet
from openapi_server import util


class CreateRegexPatternSetResponse(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, regex_pattern_set: CreateRegexPatternSetResponseRegexPatternSet=None, change_token: str=None):
        """CreateRegexPatternSetResponse - a model defined in OpenAPI

        :param regex_pattern_set: The regex_pattern_set of this CreateRegexPatternSetResponse.
        :param change_token: The change_token of this CreateRegexPatternSetResponse.
        """
        self.openapi_types = {
            'regex_pattern_set': CreateRegexPatternSetResponseRegexPatternSet,
            'change_token': str
        }

        self.attribute_map = {
            'regex_pattern_set': 'RegexPatternSet',
            'change_token': 'ChangeToken'
        }

        self._regex_pattern_set = regex_pattern_set
        self._change_token = change_token

    @classmethod
    def from_dict(cls, dikt: dict) -> 'CreateRegexPatternSetResponse':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The CreateRegexPatternSetResponse of this CreateRegexPatternSetResponse.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def regex_pattern_set(self):
        """Gets the regex_pattern_set of this CreateRegexPatternSetResponse.


        :return: The regex_pattern_set of this CreateRegexPatternSetResponse.
        :rtype: CreateRegexPatternSetResponseRegexPatternSet
        """
        return self._regex_pattern_set

    @regex_pattern_set.setter
    def regex_pattern_set(self, regex_pattern_set):
        """Sets the regex_pattern_set of this CreateRegexPatternSetResponse.


        :param regex_pattern_set: The regex_pattern_set of this CreateRegexPatternSetResponse.
        :type regex_pattern_set: CreateRegexPatternSetResponseRegexPatternSet
        """

        self._regex_pattern_set = regex_pattern_set

    @property
    def change_token(self):
        """Gets the change_token of this CreateRegexPatternSetResponse.


        :return: The change_token of this CreateRegexPatternSetResponse.
        :rtype: str
        """
        return self._change_token

    @change_token.setter
    def change_token(self, change_token):
        """Sets the change_token of this CreateRegexPatternSetResponse.


        :param change_token: The change_token of this CreateRegexPatternSetResponse.
        :type change_token: str
        """

        self._change_token = change_token
