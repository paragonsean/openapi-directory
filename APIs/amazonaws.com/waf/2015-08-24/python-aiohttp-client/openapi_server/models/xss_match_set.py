# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class XssMatchSet(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, xss_match_set_id: str=None, name: str=None, xss_match_tuples: List=None):
        """XssMatchSet - a model defined in OpenAPI

        :param xss_match_set_id: The xss_match_set_id of this XssMatchSet.
        :param name: The name of this XssMatchSet.
        :param xss_match_tuples: The xss_match_tuples of this XssMatchSet.
        """
        self.openapi_types = {
            'xss_match_set_id': str,
            'name': str,
            'xss_match_tuples': List
        }

        self.attribute_map = {
            'xss_match_set_id': 'XssMatchSetId',
            'name': 'Name',
            'xss_match_tuples': 'XssMatchTuples'
        }

        self._xss_match_set_id = xss_match_set_id
        self._name = name
        self._xss_match_tuples = xss_match_tuples

    @classmethod
    def from_dict(cls, dikt: dict) -> 'XssMatchSet':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The XssMatchSet of this XssMatchSet.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def xss_match_set_id(self):
        """Gets the xss_match_set_id of this XssMatchSet.


        :return: The xss_match_set_id of this XssMatchSet.
        :rtype: str
        """
        return self._xss_match_set_id

    @xss_match_set_id.setter
    def xss_match_set_id(self, xss_match_set_id):
        """Sets the xss_match_set_id of this XssMatchSet.


        :param xss_match_set_id: The xss_match_set_id of this XssMatchSet.
        :type xss_match_set_id: str
        """
        if xss_match_set_id is None:
            raise ValueError("Invalid value for `xss_match_set_id`, must not be `None`")

        self._xss_match_set_id = xss_match_set_id

    @property
    def name(self):
        """Gets the name of this XssMatchSet.


        :return: The name of this XssMatchSet.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this XssMatchSet.


        :param name: The name of this XssMatchSet.
        :type name: str
        """

        self._name = name

    @property
    def xss_match_tuples(self):
        """Gets the xss_match_tuples of this XssMatchSet.


        :return: The xss_match_tuples of this XssMatchSet.
        :rtype: List
        """
        return self._xss_match_tuples

    @xss_match_tuples.setter
    def xss_match_tuples(self, xss_match_tuples):
        """Sets the xss_match_tuples of this XssMatchSet.


        :param xss_match_tuples: The xss_match_tuples of this XssMatchSet.
        :type xss_match_tuples: List
        """
        if xss_match_tuples is None:
            raise ValueError("Invalid value for `xss_match_tuples`, must not be `None`")

        self._xss_match_tuples = xss_match_tuples
