/**
 * AWS WAF
 * <note> <p>This is <b>AWS WAF Classic</b> documentation. For more information, see <a href=\"https://docs.aws.amazon.com/waf/latest/developerguide/classic-waf-chapter.html\">AWS WAF Classic</a> in the developer guide.</p> <p> <b>For the latest version of AWS WAF</b>, use the AWS WAFV2 API and see the <a href=\"https://docs.aws.amazon.com/waf/latest/developerguide/waf-chapter.html\">AWS WAF Developer Guide</a>. With the latest version, AWS WAF has a single set of endpoints for regional and global use. </p> </note> <p>This is the <i>AWS WAF Classic API Reference</i> for using AWS WAF Classic with Amazon CloudFront. The AWS WAF Classic actions and data types listed in the reference are available for protecting Amazon CloudFront distributions. You can use these actions and data types via the endpoint <i>waf.amazonaws.com</i>. This guide is for developers who need detailed information about the AWS WAF Classic API actions, data types, and errors. For detailed information about AWS WAF Classic features and an overview of how to use the AWS WAF Classic API, see the <a href=\"https://docs.aws.amazon.com/waf/latest/developerguide/classic-waf-chapter.html\">AWS WAF Classic</a> in the developer guide.</p>
 *
 * The version of the OpenAPI document: 2015-08-24
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.AwsWaf);
  }
}(this, function(expect, AwsWaf) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new AwsWaf.GetRateBasedRuleResponseRule();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('GetRateBasedRuleResponseRule', function() {
    it('should create an instance of GetRateBasedRuleResponseRule', function() {
      // uncomment below and update the code to test GetRateBasedRuleResponseRule
      //var instance = new AwsWaf.GetRateBasedRuleResponseRule();
      //expect(instance).to.be.a(AwsWaf.GetRateBasedRuleResponseRule);
    });

    it('should have the property ruleId (base name: "RuleId")', function() {
      // uncomment below and update the code to test the property ruleId
      //var instance = new AwsWaf.GetRateBasedRuleResponseRule();
      //expect(instance).to.be();
    });

    it('should have the property name (base name: "Name")', function() {
      // uncomment below and update the code to test the property name
      //var instance = new AwsWaf.GetRateBasedRuleResponseRule();
      //expect(instance).to.be();
    });

    it('should have the property metricName (base name: "MetricName")', function() {
      // uncomment below and update the code to test the property metricName
      //var instance = new AwsWaf.GetRateBasedRuleResponseRule();
      //expect(instance).to.be();
    });

    it('should have the property matchPredicates (base name: "MatchPredicates")', function() {
      // uncomment below and update the code to test the property matchPredicates
      //var instance = new AwsWaf.GetRateBasedRuleResponseRule();
      //expect(instance).to.be();
    });

    it('should have the property rateKey (base name: "RateKey")', function() {
      // uncomment below and update the code to test the property rateKey
      //var instance = new AwsWaf.GetRateBasedRuleResponseRule();
      //expect(instance).to.be();
    });

    it('should have the property rateLimit (base name: "RateLimit")', function() {
      // uncomment below and update the code to test the property rateLimit
      //var instance = new AwsWaf.GetRateBasedRuleResponseRule();
      //expect(instance).to.be();
    });

  });

}));
