/**
 * AWS WAF
 * <note> <p>This is <b>AWS WAF Classic</b> documentation. For more information, see <a href=\"https://docs.aws.amazon.com/waf/latest/developerguide/classic-waf-chapter.html\">AWS WAF Classic</a> in the developer guide.</p> <p> <b>For the latest version of AWS WAF</b>, use the AWS WAFV2 API and see the <a href=\"https://docs.aws.amazon.com/waf/latest/developerguide/waf-chapter.html\">AWS WAF Developer Guide</a>. With the latest version, AWS WAF has a single set of endpoints for regional and global use. </p> </note> <p>This is the <i>AWS WAF Classic API Reference</i> for using AWS WAF Classic with Amazon CloudFront. The AWS WAF Classic actions and data types listed in the reference are available for protecting Amazon CloudFront distributions. You can use these actions and data types via the endpoint <i>waf.amazonaws.com</i>. This guide is for developers who need detailed information about the AWS WAF Classic API actions, data types, and errors. For detailed information about AWS WAF Classic features and an overview of how to use the AWS WAF Classic API, see the <a href=\"https://docs.aws.amazon.com/waf/latest/developerguide/classic-waf-chapter.html\">AWS WAF Classic</a> in the developer guide.</p>
 *
 * The version of the OpenAPI document: 2015-08-24
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIGetLoggingConfigurationResponse_LoggingConfiguration.h
 *
 * 
 */

#ifndef OAIGetLoggingConfigurationResponse_LoggingConfiguration_H
#define OAIGetLoggingConfigurationResponse_LoggingConfiguration_H

#include <QJsonObject>

#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIGetLoggingConfigurationResponse_LoggingConfiguration : public OAIObject {
public:
    OAIGetLoggingConfigurationResponse_LoggingConfiguration();
    OAIGetLoggingConfigurationResponse_LoggingConfiguration(QString json);
    ~OAIGetLoggingConfigurationResponse_LoggingConfiguration() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getResourceArn() const;
    void setResourceArn(const QString &resource_arn);
    bool is_resource_arn_Set() const;
    bool is_resource_arn_Valid() const;

    QList getLogDestinationConfigs() const;
    void setLogDestinationConfigs(const QList &log_destination_configs);
    bool is_log_destination_configs_Set() const;
    bool is_log_destination_configs_Valid() const;

    QList getRedactedFields() const;
    void setRedactedFields(const QList &redacted_fields);
    bool is_redacted_fields_Set() const;
    bool is_redacted_fields_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_resource_arn;
    bool m_resource_arn_isSet;
    bool m_resource_arn_isValid;

    QList m_log_destination_configs;
    bool m_log_destination_configs_isSet;
    bool m_log_destination_configs_isValid;

    QList m_redacted_fields;
    bool m_redacted_fields_isSet;
    bool m_redacted_fields_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIGetLoggingConfigurationResponse_LoggingConfiguration)

#endif // OAIGetLoggingConfigurationResponse_LoggingConfiguration_H
