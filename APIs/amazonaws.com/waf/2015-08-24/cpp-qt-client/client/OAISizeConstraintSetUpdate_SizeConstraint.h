/**
 * AWS WAF
 * <note> <p>This is <b>AWS WAF Classic</b> documentation. For more information, see <a href=\"https://docs.aws.amazon.com/waf/latest/developerguide/classic-waf-chapter.html\">AWS WAF Classic</a> in the developer guide.</p> <p> <b>For the latest version of AWS WAF</b>, use the AWS WAFV2 API and see the <a href=\"https://docs.aws.amazon.com/waf/latest/developerguide/waf-chapter.html\">AWS WAF Developer Guide</a>. With the latest version, AWS WAF has a single set of endpoints for regional and global use. </p> </note> <p>This is the <i>AWS WAF Classic API Reference</i> for using AWS WAF Classic with Amazon CloudFront. The AWS WAF Classic actions and data types listed in the reference are available for protecting Amazon CloudFront distributions. You can use these actions and data types via the endpoint <i>waf.amazonaws.com</i>. This guide is for developers who need detailed information about the AWS WAF Classic API actions, data types, and errors. For detailed information about AWS WAF Classic features and an overview of how to use the AWS WAF Classic API, see the <a href=\"https://docs.aws.amazon.com/waf/latest/developerguide/classic-waf-chapter.html\">AWS WAF Classic</a> in the developer guide.</p>
 *
 * The version of the OpenAPI document: 2015-08-24
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAISizeConstraintSetUpdate_SizeConstraint.h
 *
 * 
 */

#ifndef OAISizeConstraintSetUpdate_SizeConstraint_H
#define OAISizeConstraintSetUpdate_SizeConstraint_H

#include <QJsonObject>

#include "OAIComparisonOperator.h"
#include "OAISizeConstraint_FieldToMatch.h"
#include "OAITextTransformation.h"

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAISizeConstraint_FieldToMatch;

class OAISizeConstraintSetUpdate_SizeConstraint : public OAIObject {
public:
    OAISizeConstraintSetUpdate_SizeConstraint();
    OAISizeConstraintSetUpdate_SizeConstraint(QString json);
    ~OAISizeConstraintSetUpdate_SizeConstraint() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAISizeConstraint_FieldToMatch getFieldToMatch() const;
    void setFieldToMatch(const OAISizeConstraint_FieldToMatch &field_to_match);
    bool is_field_to_match_Set() const;
    bool is_field_to_match_Valid() const;

    OAITextTransformation getTextTransformation() const;
    void setTextTransformation(const OAITextTransformation &text_transformation);
    bool is_text_transformation_Set() const;
    bool is_text_transformation_Valid() const;

    OAIComparisonOperator getComparisonOperator() const;
    void setComparisonOperator(const OAIComparisonOperator &comparison_operator);
    bool is_comparison_operator_Set() const;
    bool is_comparison_operator_Valid() const;

    qint32 getSize() const;
    void setSize(const qint32 &size);
    bool is_size_Set() const;
    bool is_size_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAISizeConstraint_FieldToMatch m_field_to_match;
    bool m_field_to_match_isSet;
    bool m_field_to_match_isValid;

    OAITextTransformation m_text_transformation;
    bool m_text_transformation_isSet;
    bool m_text_transformation_isValid;

    OAIComparisonOperator m_comparison_operator;
    bool m_comparison_operator_isSet;
    bool m_comparison_operator_isValid;

    qint32 m_size;
    bool m_size_isSet;
    bool m_size_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAISizeConstraintSetUpdate_SizeConstraint)

#endif // OAISizeConstraintSetUpdate_SizeConstraint_H
