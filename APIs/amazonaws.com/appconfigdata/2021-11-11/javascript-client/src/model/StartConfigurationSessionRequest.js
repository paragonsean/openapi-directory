/**
 * AWS AppConfig Data
 * <p>AppConfig Data provides the data plane APIs your application uses to retrieve configuration data. Here's how it works:</p> <p>Your application retrieves configuration data by first establishing a configuration session using the AppConfig Data <a>StartConfigurationSession</a> API action. Your session's client then makes periodic calls to <a>GetLatestConfiguration</a> to check for and retrieve the latest data available.</p> <p>When calling <code>StartConfigurationSession</code>, your code sends the following information:</p> <ul> <li> <p>Identifiers (ID or name) of an AppConfig application, environment, and configuration profile that the session tracks.</p> </li> <li> <p>(Optional) The minimum amount of time the session's client must wait between calls to <code>GetLatestConfiguration</code>.</p> </li> </ul> <p>In response, AppConfig provides an <code>InitialConfigurationToken</code> to be given to the session's client and used the first time it calls <code>GetLatestConfiguration</code> for that session.</p> <important> <p>This token should only be used once in your first call to <code>GetLatestConfiguration</code>. You <i>must</i> use the new token in the <code>GetLatestConfiguration</code> response (<code>NextPollConfigurationToken</code>) in each subsequent call to <code>GetLatestConfiguration</code>.</p> </important> <p>When calling <code>GetLatestConfiguration</code>, your client code sends the most recent <code>ConfigurationToken</code> value it has and receives in response:</p> <ul> <li> <p> <code>NextPollConfigurationToken</code>: the <code>ConfigurationToken</code> value to use on the next call to <code>GetLatestConfiguration</code>.</p> </li> <li> <p> <code>NextPollIntervalInSeconds</code>: the duration the client should wait before making its next call to <code>GetLatestConfiguration</code>. This duration may vary over the course of the session, so it should be used instead of the value sent on the <code>StartConfigurationSession</code> call.</p> </li> <li> <p>The configuration: the latest data intended for the session. This may be empty if the client already has the latest version of the configuration.</p> </li> </ul> <important> <p>The <code>InitialConfigurationToken</code> and <code>NextPollConfigurationToken</code> should only be used once. To support long poll use cases, the tokens are valid for up to 24 hours. If a <code>GetLatestConfiguration</code> call uses an expired token, the system returns <code>BadRequestException</code>.</p> </important> <p>For more information and to view example CLI commands that show how to retrieve a configuration using the AppConfig Data <code>StartConfigurationSession</code> and <code>GetLatestConfiguration</code> API actions, see <a href=\"http://docs.aws.amazon.com/appconfig/latest/userguide/appconfig-retrieving-the-configuration\">Retrieving the configuration</a> in the <i>AppConfig User Guide</i>.</p>
 *
 * The version of the OpenAPI document: 2021-11-11
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The StartConfigurationSessionRequest model module.
 * @module model/StartConfigurationSessionRequest
 * @version 2021-11-11
 */
class StartConfigurationSessionRequest {
    /**
     * Constructs a new <code>StartConfigurationSessionRequest</code>.
     * @alias module:model/StartConfigurationSessionRequest
     * @param applicationIdentifier {String} The application ID or the application name.
     * @param environmentIdentifier {String} The environment ID or the environment name.
     * @param configurationProfileIdentifier {String} The configuration profile ID or the configuration profile name.
     */
    constructor(applicationIdentifier, environmentIdentifier, configurationProfileIdentifier) { 
        
        StartConfigurationSessionRequest.initialize(this, applicationIdentifier, environmentIdentifier, configurationProfileIdentifier);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, applicationIdentifier, environmentIdentifier, configurationProfileIdentifier) { 
        obj['ApplicationIdentifier'] = applicationIdentifier;
        obj['EnvironmentIdentifier'] = environmentIdentifier;
        obj['ConfigurationProfileIdentifier'] = configurationProfileIdentifier;
    }

    /**
     * Constructs a <code>StartConfigurationSessionRequest</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/StartConfigurationSessionRequest} obj Optional instance to populate.
     * @return {module:model/StartConfigurationSessionRequest} The populated <code>StartConfigurationSessionRequest</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new StartConfigurationSessionRequest();

            if (data.hasOwnProperty('ApplicationIdentifier')) {
                obj['ApplicationIdentifier'] = ApiClient.convertToType(data['ApplicationIdentifier'], 'String');
            }
            if (data.hasOwnProperty('EnvironmentIdentifier')) {
                obj['EnvironmentIdentifier'] = ApiClient.convertToType(data['EnvironmentIdentifier'], 'String');
            }
            if (data.hasOwnProperty('ConfigurationProfileIdentifier')) {
                obj['ConfigurationProfileIdentifier'] = ApiClient.convertToType(data['ConfigurationProfileIdentifier'], 'String');
            }
            if (data.hasOwnProperty('RequiredMinimumPollIntervalInSeconds')) {
                obj['RequiredMinimumPollIntervalInSeconds'] = ApiClient.convertToType(data['RequiredMinimumPollIntervalInSeconds'], 'Number');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>StartConfigurationSessionRequest</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>StartConfigurationSessionRequest</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of StartConfigurationSessionRequest.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['ApplicationIdentifier'] && !(typeof data['ApplicationIdentifier'] === 'string' || data['ApplicationIdentifier'] instanceof String)) {
            throw new Error("Expected the field `ApplicationIdentifier` to be a primitive type in the JSON string but got " + data['ApplicationIdentifier']);
        }
        // ensure the json data is a string
        if (data['EnvironmentIdentifier'] && !(typeof data['EnvironmentIdentifier'] === 'string' || data['EnvironmentIdentifier'] instanceof String)) {
            throw new Error("Expected the field `EnvironmentIdentifier` to be a primitive type in the JSON string but got " + data['EnvironmentIdentifier']);
        }
        // ensure the json data is a string
        if (data['ConfigurationProfileIdentifier'] && !(typeof data['ConfigurationProfileIdentifier'] === 'string' || data['ConfigurationProfileIdentifier'] instanceof String)) {
            throw new Error("Expected the field `ConfigurationProfileIdentifier` to be a primitive type in the JSON string but got " + data['ConfigurationProfileIdentifier']);
        }

        return true;
    }


}

StartConfigurationSessionRequest.RequiredProperties = ["ApplicationIdentifier", "EnvironmentIdentifier", "ConfigurationProfileIdentifier"];

/**
 * The application ID or the application name.
 * @member {String} ApplicationIdentifier
 */
StartConfigurationSessionRequest.prototype['ApplicationIdentifier'] = undefined;

/**
 * The environment ID or the environment name.
 * @member {String} EnvironmentIdentifier
 */
StartConfigurationSessionRequest.prototype['EnvironmentIdentifier'] = undefined;

/**
 * The configuration profile ID or the configuration profile name.
 * @member {String} ConfigurationProfileIdentifier
 */
StartConfigurationSessionRequest.prototype['ConfigurationProfileIdentifier'] = undefined;

/**
 * Sets a constraint on a session. If you specify a value of, for example, 60 seconds, then the client that established the session can't call <a>GetLatestConfiguration</a> more frequently than every 60 seconds.
 * @member {Number} RequiredMinimumPollIntervalInSeconds
 */
StartConfigurationSessionRequest.prototype['RequiredMinimumPollIntervalInSeconds'] = undefined;






export default StartConfigurationSessionRequest;

