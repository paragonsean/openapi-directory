# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class StartConfigurationSessionResponse(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, initial_configuration_token: str=None):
        """StartConfigurationSessionResponse - a model defined in OpenAPI

        :param initial_configuration_token: The initial_configuration_token of this StartConfigurationSessionResponse.
        """
        self.openapi_types = {
            'initial_configuration_token': str
        }

        self.attribute_map = {
            'initial_configuration_token': 'InitialConfigurationToken'
        }

        self._initial_configuration_token = initial_configuration_token

    @classmethod
    def from_dict(cls, dikt: dict) -> 'StartConfigurationSessionResponse':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The StartConfigurationSessionResponse of this StartConfigurationSessionResponse.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def initial_configuration_token(self):
        """Gets the initial_configuration_token of this StartConfigurationSessionResponse.


        :return: The initial_configuration_token of this StartConfigurationSessionResponse.
        :rtype: str
        """
        return self._initial_configuration_token

    @initial_configuration_token.setter
    def initial_configuration_token(self, initial_configuration_token):
        """Sets the initial_configuration_token of this StartConfigurationSessionResponse.


        :param initial_configuration_token: The initial_configuration_token of this StartConfigurationSessionResponse.
        :type initial_configuration_token: str
        """

        self._initial_configuration_token = initial_configuration_token
