/**
 * Amazon OpenSearch Service
 * <p>Use the Amazon OpenSearch Service configuration API to create, configure, and manage OpenSearch Service domains.</p> <p>For sample code that uses the configuration API, see the <a href=\"https://docs.aws.amazon.com/opensearch-service/latest/developerguide/opensearch-configuration-samples.html\"> <i>Amazon OpenSearch Service Developer Guide</i> </a>. The guide also contains <a href=\"https://docs.aws.amazon.com/opensearch-service/latest/developerguide/request-signing.html\">sample code</a> for sending signed HTTP requests to the OpenSearch APIs. The endpoint for configuration service requests is Region specific: es.<i>region</i>.amazonaws.com. For example, es.us-east-1.amazonaws.com. For a current list of supported Regions and endpoints, see <a href=\"https://docs.aws.amazon.com/general/latest/gr/rande.html#service-regions\">Amazon Web Services service endpoints</a>.</p>
 *
 * The version of the OpenAPI document: 2021-01-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import DomainPackageDetailsErrorDetails from './DomainPackageDetailsErrorDetails';
import DomainPackageStatus from './DomainPackageStatus';
import PackageType from './PackageType';

/**
 * The DomainPackageDetails model module.
 * @module model/DomainPackageDetails
 * @version 2021-01-01
 */
class DomainPackageDetails {
    /**
     * Constructs a new <code>DomainPackageDetails</code>.
     * Information about a package that is associated with a domain. For more information, see &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/opensearch-service/latest/developerguide/custom-packages.html\&quot;&gt;Custom packages for Amazon OpenSearch Service&lt;/a&gt;.
     * @alias module:model/DomainPackageDetails
     */
    constructor() { 
        
        DomainPackageDetails.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>DomainPackageDetails</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/DomainPackageDetails} obj Optional instance to populate.
     * @return {module:model/DomainPackageDetails} The populated <code>DomainPackageDetails</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new DomainPackageDetails();

            if (data.hasOwnProperty('PackageID')) {
                obj['PackageID'] = ApiClient.convertToType(data['PackageID'], 'String');
            }
            if (data.hasOwnProperty('PackageName')) {
                obj['PackageName'] = ApiClient.convertToType(data['PackageName'], 'String');
            }
            if (data.hasOwnProperty('PackageType')) {
                obj['PackageType'] = ApiClient.convertToType(data['PackageType'], PackageType);
            }
            if (data.hasOwnProperty('LastUpdated')) {
                obj['LastUpdated'] = ApiClient.convertToType(data['LastUpdated'], 'Date');
            }
            if (data.hasOwnProperty('DomainName')) {
                obj['DomainName'] = ApiClient.convertToType(data['DomainName'], 'String');
            }
            if (data.hasOwnProperty('DomainPackageStatus')) {
                obj['DomainPackageStatus'] = ApiClient.convertToType(data['DomainPackageStatus'], DomainPackageStatus);
            }
            if (data.hasOwnProperty('PackageVersion')) {
                obj['PackageVersion'] = ApiClient.convertToType(data['PackageVersion'], 'String');
            }
            if (data.hasOwnProperty('ReferencePath')) {
                obj['ReferencePath'] = ApiClient.convertToType(data['ReferencePath'], 'String');
            }
            if (data.hasOwnProperty('ErrorDetails')) {
                obj['ErrorDetails'] = DomainPackageDetailsErrorDetails.constructFromObject(data['ErrorDetails']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>DomainPackageDetails</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>DomainPackageDetails</code>.
     */
    static validateJSON(data) {
        // validate the optional field `PackageID`
        if (data['PackageID']) { // data not null
          String.validateJSON(data['PackageID']);
        }
        // validate the optional field `PackageName`
        if (data['PackageName']) { // data not null
          String.validateJSON(data['PackageName']);
        }
        // validate the optional field `PackageType`
        if (data['PackageType']) { // data not null
          PackageType.validateJSON(data['PackageType']);
        }
        // validate the optional field `LastUpdated`
        if (data['LastUpdated']) { // data not null
          Date.validateJSON(data['LastUpdated']);
        }
        // validate the optional field `DomainName`
        if (data['DomainName']) { // data not null
          String.validateJSON(data['DomainName']);
        }
        // validate the optional field `DomainPackageStatus`
        if (data['DomainPackageStatus']) { // data not null
          DomainPackageStatus.validateJSON(data['DomainPackageStatus']);
        }
        // validate the optional field `PackageVersion`
        if (data['PackageVersion']) { // data not null
          String.validateJSON(data['PackageVersion']);
        }
        // validate the optional field `ReferencePath`
        if (data['ReferencePath']) { // data not null
          String.validateJSON(data['ReferencePath']);
        }
        // validate the optional field `ErrorDetails`
        if (data['ErrorDetails']) { // data not null
          DomainPackageDetailsErrorDetails.validateJSON(data['ErrorDetails']);
        }

        return true;
    }


}



/**
 * @member {String} PackageID
 */
DomainPackageDetails.prototype['PackageID'] = undefined;

/**
 * @member {String} PackageName
 */
DomainPackageDetails.prototype['PackageName'] = undefined;

/**
 * @member {module:model/PackageType} PackageType
 */
DomainPackageDetails.prototype['PackageType'] = undefined;

/**
 * @member {Date} LastUpdated
 */
DomainPackageDetails.prototype['LastUpdated'] = undefined;

/**
 * @member {String} DomainName
 */
DomainPackageDetails.prototype['DomainName'] = undefined;

/**
 * @member {module:model/DomainPackageStatus} DomainPackageStatus
 */
DomainPackageDetails.prototype['DomainPackageStatus'] = undefined;

/**
 * @member {String} PackageVersion
 */
DomainPackageDetails.prototype['PackageVersion'] = undefined;

/**
 * @member {String} ReferencePath
 */
DomainPackageDetails.prototype['ReferencePath'] = undefined;

/**
 * @member {module:model/DomainPackageDetailsErrorDetails} ErrorDetails
 */
DomainPackageDetails.prototype['ErrorDetails'] = undefined;






export default DomainPackageDetails;

