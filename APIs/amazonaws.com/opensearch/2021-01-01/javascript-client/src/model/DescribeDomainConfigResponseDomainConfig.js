/**
 * Amazon OpenSearch Service
 * <p>Use the Amazon OpenSearch Service configuration API to create, configure, and manage OpenSearch Service domains.</p> <p>For sample code that uses the configuration API, see the <a href=\"https://docs.aws.amazon.com/opensearch-service/latest/developerguide/opensearch-configuration-samples.html\"> <i>Amazon OpenSearch Service Developer Guide</i> </a>. The guide also contains <a href=\"https://docs.aws.amazon.com/opensearch-service/latest/developerguide/request-signing.html\">sample code</a> for sending signed HTTP requests to the OpenSearch APIs. The endpoint for configuration service requests is Region specific: es.<i>region</i>.amazonaws.com. For example, es.us-east-1.amazonaws.com. For a current list of supported Regions and endpoints, see <a href=\"https://docs.aws.amazon.com/general/latest/gr/rande.html#service-regions\">Amazon Web Services service endpoints</a>.</p>
 *
 * The version of the OpenAPI document: 2021-01-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import DomainConfig from './DomainConfig';
import DomainConfigAccessPolicies from './DomainConfigAccessPolicies';
import DomainConfigAdvancedOptions from './DomainConfigAdvancedOptions';
import DomainConfigAdvancedSecurityOptions from './DomainConfigAdvancedSecurityOptions';
import DomainConfigAutoTuneOptions from './DomainConfigAutoTuneOptions';
import DomainConfigChangeProgressDetails from './DomainConfigChangeProgressDetails';
import DomainConfigClusterConfig from './DomainConfigClusterConfig';
import DomainConfigCognitoOptions from './DomainConfigCognitoOptions';
import DomainConfigDomainEndpointOptions from './DomainConfigDomainEndpointOptions';
import DomainConfigEBSOptions from './DomainConfigEBSOptions';
import DomainConfigEncryptionAtRestOptions from './DomainConfigEncryptionAtRestOptions';
import DomainConfigEngineVersion from './DomainConfigEngineVersion';
import DomainConfigLogPublishingOptions from './DomainConfigLogPublishingOptions';
import DomainConfigNodeToNodeEncryptionOptions from './DomainConfigNodeToNodeEncryptionOptions';
import DomainConfigOffPeakWindowOptions from './DomainConfigOffPeakWindowOptions';
import DomainConfigSnapshotOptions from './DomainConfigSnapshotOptions';
import DomainConfigSoftwareUpdateOptions from './DomainConfigSoftwareUpdateOptions';
import DomainConfigVPCOptions from './DomainConfigVPCOptions';

/**
 * The DescribeDomainConfigResponseDomainConfig model module.
 * @module model/DescribeDomainConfigResponseDomainConfig
 * @version 2021-01-01
 */
class DescribeDomainConfigResponseDomainConfig {
    /**
     * Constructs a new <code>DescribeDomainConfigResponseDomainConfig</code>.
     * @alias module:model/DescribeDomainConfigResponseDomainConfig
     * @implements module:model/DomainConfig
     */
    constructor() { 
        DomainConfig.initialize(this);
        DescribeDomainConfigResponseDomainConfig.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>DescribeDomainConfigResponseDomainConfig</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/DescribeDomainConfigResponseDomainConfig} obj Optional instance to populate.
     * @return {module:model/DescribeDomainConfigResponseDomainConfig} The populated <code>DescribeDomainConfigResponseDomainConfig</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new DescribeDomainConfigResponseDomainConfig();
            DomainConfig.constructFromObject(data, obj);

            if (data.hasOwnProperty('EngineVersion')) {
                obj['EngineVersion'] = DomainConfigEngineVersion.constructFromObject(data['EngineVersion']);
            }
            if (data.hasOwnProperty('ClusterConfig')) {
                obj['ClusterConfig'] = DomainConfigClusterConfig.constructFromObject(data['ClusterConfig']);
            }
            if (data.hasOwnProperty('EBSOptions')) {
                obj['EBSOptions'] = DomainConfigEBSOptions.constructFromObject(data['EBSOptions']);
            }
            if (data.hasOwnProperty('AccessPolicies')) {
                obj['AccessPolicies'] = DomainConfigAccessPolicies.constructFromObject(data['AccessPolicies']);
            }
            if (data.hasOwnProperty('SnapshotOptions')) {
                obj['SnapshotOptions'] = DomainConfigSnapshotOptions.constructFromObject(data['SnapshotOptions']);
            }
            if (data.hasOwnProperty('VPCOptions')) {
                obj['VPCOptions'] = DomainConfigVPCOptions.constructFromObject(data['VPCOptions']);
            }
            if (data.hasOwnProperty('CognitoOptions')) {
                obj['CognitoOptions'] = DomainConfigCognitoOptions.constructFromObject(data['CognitoOptions']);
            }
            if (data.hasOwnProperty('EncryptionAtRestOptions')) {
                obj['EncryptionAtRestOptions'] = DomainConfigEncryptionAtRestOptions.constructFromObject(data['EncryptionAtRestOptions']);
            }
            if (data.hasOwnProperty('NodeToNodeEncryptionOptions')) {
                obj['NodeToNodeEncryptionOptions'] = DomainConfigNodeToNodeEncryptionOptions.constructFromObject(data['NodeToNodeEncryptionOptions']);
            }
            if (data.hasOwnProperty('AdvancedOptions')) {
                obj['AdvancedOptions'] = DomainConfigAdvancedOptions.constructFromObject(data['AdvancedOptions']);
            }
            if (data.hasOwnProperty('LogPublishingOptions')) {
                obj['LogPublishingOptions'] = DomainConfigLogPublishingOptions.constructFromObject(data['LogPublishingOptions']);
            }
            if (data.hasOwnProperty('DomainEndpointOptions')) {
                obj['DomainEndpointOptions'] = DomainConfigDomainEndpointOptions.constructFromObject(data['DomainEndpointOptions']);
            }
            if (data.hasOwnProperty('AdvancedSecurityOptions')) {
                obj['AdvancedSecurityOptions'] = DomainConfigAdvancedSecurityOptions.constructFromObject(data['AdvancedSecurityOptions']);
            }
            if (data.hasOwnProperty('AutoTuneOptions')) {
                obj['AutoTuneOptions'] = DomainConfigAutoTuneOptions.constructFromObject(data['AutoTuneOptions']);
            }
            if (data.hasOwnProperty('ChangeProgressDetails')) {
                obj['ChangeProgressDetails'] = DomainConfigChangeProgressDetails.constructFromObject(data['ChangeProgressDetails']);
            }
            if (data.hasOwnProperty('OffPeakWindowOptions')) {
                obj['OffPeakWindowOptions'] = DomainConfigOffPeakWindowOptions.constructFromObject(data['OffPeakWindowOptions']);
            }
            if (data.hasOwnProperty('SoftwareUpdateOptions')) {
                obj['SoftwareUpdateOptions'] = DomainConfigSoftwareUpdateOptions.constructFromObject(data['SoftwareUpdateOptions']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>DescribeDomainConfigResponseDomainConfig</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>DescribeDomainConfigResponseDomainConfig</code>.
     */
    static validateJSON(data) {
        // validate the optional field `EngineVersion`
        if (data['EngineVersion']) { // data not null
          DomainConfigEngineVersion.validateJSON(data['EngineVersion']);
        }
        // validate the optional field `ClusterConfig`
        if (data['ClusterConfig']) { // data not null
          DomainConfigClusterConfig.validateJSON(data['ClusterConfig']);
        }
        // validate the optional field `EBSOptions`
        if (data['EBSOptions']) { // data not null
          DomainConfigEBSOptions.validateJSON(data['EBSOptions']);
        }
        // validate the optional field `AccessPolicies`
        if (data['AccessPolicies']) { // data not null
          DomainConfigAccessPolicies.validateJSON(data['AccessPolicies']);
        }
        // validate the optional field `SnapshotOptions`
        if (data['SnapshotOptions']) { // data not null
          DomainConfigSnapshotOptions.validateJSON(data['SnapshotOptions']);
        }
        // validate the optional field `VPCOptions`
        if (data['VPCOptions']) { // data not null
          DomainConfigVPCOptions.validateJSON(data['VPCOptions']);
        }
        // validate the optional field `CognitoOptions`
        if (data['CognitoOptions']) { // data not null
          DomainConfigCognitoOptions.validateJSON(data['CognitoOptions']);
        }
        // validate the optional field `EncryptionAtRestOptions`
        if (data['EncryptionAtRestOptions']) { // data not null
          DomainConfigEncryptionAtRestOptions.validateJSON(data['EncryptionAtRestOptions']);
        }
        // validate the optional field `NodeToNodeEncryptionOptions`
        if (data['NodeToNodeEncryptionOptions']) { // data not null
          DomainConfigNodeToNodeEncryptionOptions.validateJSON(data['NodeToNodeEncryptionOptions']);
        }
        // validate the optional field `AdvancedOptions`
        if (data['AdvancedOptions']) { // data not null
          DomainConfigAdvancedOptions.validateJSON(data['AdvancedOptions']);
        }
        // validate the optional field `LogPublishingOptions`
        if (data['LogPublishingOptions']) { // data not null
          DomainConfigLogPublishingOptions.validateJSON(data['LogPublishingOptions']);
        }
        // validate the optional field `DomainEndpointOptions`
        if (data['DomainEndpointOptions']) { // data not null
          DomainConfigDomainEndpointOptions.validateJSON(data['DomainEndpointOptions']);
        }
        // validate the optional field `AdvancedSecurityOptions`
        if (data['AdvancedSecurityOptions']) { // data not null
          DomainConfigAdvancedSecurityOptions.validateJSON(data['AdvancedSecurityOptions']);
        }
        // validate the optional field `AutoTuneOptions`
        if (data['AutoTuneOptions']) { // data not null
          DomainConfigAutoTuneOptions.validateJSON(data['AutoTuneOptions']);
        }
        // validate the optional field `ChangeProgressDetails`
        if (data['ChangeProgressDetails']) { // data not null
          DomainConfigChangeProgressDetails.validateJSON(data['ChangeProgressDetails']);
        }
        // validate the optional field `OffPeakWindowOptions`
        if (data['OffPeakWindowOptions']) { // data not null
          DomainConfigOffPeakWindowOptions.validateJSON(data['OffPeakWindowOptions']);
        }
        // validate the optional field `SoftwareUpdateOptions`
        if (data['SoftwareUpdateOptions']) { // data not null
          DomainConfigSoftwareUpdateOptions.validateJSON(data['SoftwareUpdateOptions']);
        }

        return true;
    }


}



/**
 * @member {module:model/DomainConfigEngineVersion} EngineVersion
 */
DescribeDomainConfigResponseDomainConfig.prototype['EngineVersion'] = undefined;

/**
 * @member {module:model/DomainConfigClusterConfig} ClusterConfig
 */
DescribeDomainConfigResponseDomainConfig.prototype['ClusterConfig'] = undefined;

/**
 * @member {module:model/DomainConfigEBSOptions} EBSOptions
 */
DescribeDomainConfigResponseDomainConfig.prototype['EBSOptions'] = undefined;

/**
 * @member {module:model/DomainConfigAccessPolicies} AccessPolicies
 */
DescribeDomainConfigResponseDomainConfig.prototype['AccessPolicies'] = undefined;

/**
 * @member {module:model/DomainConfigSnapshotOptions} SnapshotOptions
 */
DescribeDomainConfigResponseDomainConfig.prototype['SnapshotOptions'] = undefined;

/**
 * @member {module:model/DomainConfigVPCOptions} VPCOptions
 */
DescribeDomainConfigResponseDomainConfig.prototype['VPCOptions'] = undefined;

/**
 * @member {module:model/DomainConfigCognitoOptions} CognitoOptions
 */
DescribeDomainConfigResponseDomainConfig.prototype['CognitoOptions'] = undefined;

/**
 * @member {module:model/DomainConfigEncryptionAtRestOptions} EncryptionAtRestOptions
 */
DescribeDomainConfigResponseDomainConfig.prototype['EncryptionAtRestOptions'] = undefined;

/**
 * @member {module:model/DomainConfigNodeToNodeEncryptionOptions} NodeToNodeEncryptionOptions
 */
DescribeDomainConfigResponseDomainConfig.prototype['NodeToNodeEncryptionOptions'] = undefined;

/**
 * @member {module:model/DomainConfigAdvancedOptions} AdvancedOptions
 */
DescribeDomainConfigResponseDomainConfig.prototype['AdvancedOptions'] = undefined;

/**
 * @member {module:model/DomainConfigLogPublishingOptions} LogPublishingOptions
 */
DescribeDomainConfigResponseDomainConfig.prototype['LogPublishingOptions'] = undefined;

/**
 * @member {module:model/DomainConfigDomainEndpointOptions} DomainEndpointOptions
 */
DescribeDomainConfigResponseDomainConfig.prototype['DomainEndpointOptions'] = undefined;

/**
 * @member {module:model/DomainConfigAdvancedSecurityOptions} AdvancedSecurityOptions
 */
DescribeDomainConfigResponseDomainConfig.prototype['AdvancedSecurityOptions'] = undefined;

/**
 * @member {module:model/DomainConfigAutoTuneOptions} AutoTuneOptions
 */
DescribeDomainConfigResponseDomainConfig.prototype['AutoTuneOptions'] = undefined;

/**
 * @member {module:model/DomainConfigChangeProgressDetails} ChangeProgressDetails
 */
DescribeDomainConfigResponseDomainConfig.prototype['ChangeProgressDetails'] = undefined;

/**
 * @member {module:model/DomainConfigOffPeakWindowOptions} OffPeakWindowOptions
 */
DescribeDomainConfigResponseDomainConfig.prototype['OffPeakWindowOptions'] = undefined;

/**
 * @member {module:model/DomainConfigSoftwareUpdateOptions} SoftwareUpdateOptions
 */
DescribeDomainConfigResponseDomainConfig.prototype['SoftwareUpdateOptions'] = undefined;


// Implement DomainConfig interface:
/**
 * @member {module:model/DomainConfigEngineVersion} EngineVersion
 */
DomainConfig.prototype['EngineVersion'] = undefined;
/**
 * @member {module:model/DomainConfigClusterConfig} ClusterConfig
 */
DomainConfig.prototype['ClusterConfig'] = undefined;
/**
 * @member {module:model/DomainConfigEBSOptions} EBSOptions
 */
DomainConfig.prototype['EBSOptions'] = undefined;
/**
 * @member {module:model/DomainConfigAccessPolicies} AccessPolicies
 */
DomainConfig.prototype['AccessPolicies'] = undefined;
/**
 * @member {module:model/DomainConfigSnapshotOptions} SnapshotOptions
 */
DomainConfig.prototype['SnapshotOptions'] = undefined;
/**
 * @member {module:model/DomainConfigVPCOptions} VPCOptions
 */
DomainConfig.prototype['VPCOptions'] = undefined;
/**
 * @member {module:model/DomainConfigCognitoOptions} CognitoOptions
 */
DomainConfig.prototype['CognitoOptions'] = undefined;
/**
 * @member {module:model/DomainConfigEncryptionAtRestOptions} EncryptionAtRestOptions
 */
DomainConfig.prototype['EncryptionAtRestOptions'] = undefined;
/**
 * @member {module:model/DomainConfigNodeToNodeEncryptionOptions} NodeToNodeEncryptionOptions
 */
DomainConfig.prototype['NodeToNodeEncryptionOptions'] = undefined;
/**
 * @member {module:model/DomainConfigAdvancedOptions} AdvancedOptions
 */
DomainConfig.prototype['AdvancedOptions'] = undefined;
/**
 * @member {module:model/DomainConfigLogPublishingOptions} LogPublishingOptions
 */
DomainConfig.prototype['LogPublishingOptions'] = undefined;
/**
 * @member {module:model/DomainConfigDomainEndpointOptions} DomainEndpointOptions
 */
DomainConfig.prototype['DomainEndpointOptions'] = undefined;
/**
 * @member {module:model/DomainConfigAdvancedSecurityOptions} AdvancedSecurityOptions
 */
DomainConfig.prototype['AdvancedSecurityOptions'] = undefined;
/**
 * @member {module:model/DomainConfigAutoTuneOptions} AutoTuneOptions
 */
DomainConfig.prototype['AutoTuneOptions'] = undefined;
/**
 * @member {module:model/DomainConfigChangeProgressDetails} ChangeProgressDetails
 */
DomainConfig.prototype['ChangeProgressDetails'] = undefined;
/**
 * @member {module:model/DomainConfigOffPeakWindowOptions} OffPeakWindowOptions
 */
DomainConfig.prototype['OffPeakWindowOptions'] = undefined;
/**
 * @member {module:model/DomainConfigSoftwareUpdateOptions} SoftwareUpdateOptions
 */
DomainConfig.prototype['SoftwareUpdateOptions'] = undefined;




export default DescribeDomainConfigResponseDomainConfig;

