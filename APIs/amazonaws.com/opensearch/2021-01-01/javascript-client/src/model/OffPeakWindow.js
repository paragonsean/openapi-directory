/**
 * Amazon OpenSearch Service
 * <p>Use the Amazon OpenSearch Service configuration API to create, configure, and manage OpenSearch Service domains.</p> <p>For sample code that uses the configuration API, see the <a href=\"https://docs.aws.amazon.com/opensearch-service/latest/developerguide/opensearch-configuration-samples.html\"> <i>Amazon OpenSearch Service Developer Guide</i> </a>. The guide also contains <a href=\"https://docs.aws.amazon.com/opensearch-service/latest/developerguide/request-signing.html\">sample code</a> for sending signed HTTP requests to the OpenSearch APIs. The endpoint for configuration service requests is Region specific: es.<i>region</i>.amazonaws.com. For example, es.us-east-1.amazonaws.com. For a current list of supported Regions and endpoints, see <a href=\"https://docs.aws.amazon.com/general/latest/gr/rande.html#service-regions\">Amazon Web Services service endpoints</a>.</p>
 *
 * The version of the OpenAPI document: 2021-01-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import OffPeakWindowWindowStartTime from './OffPeakWindowWindowStartTime';

/**
 * The OffPeakWindow model module.
 * @module model/OffPeakWindow
 * @version 2021-01-01
 */
class OffPeakWindow {
    /**
     * Constructs a new <code>OffPeakWindow</code>.
     * &lt;p&gt;A custom 10-hour, low-traffic window during which OpenSearch Service can perform mandatory configuration changes on the domain. These actions can include scheduled service software updates and blue/green Auto-Tune enhancements. OpenSearch Service will schedule these actions during the window that you specify.&lt;/p&gt; &lt;p&gt;If you don&#39;t specify a window start time, it defaults to 10:00 P.M. local time.&lt;/p&gt; &lt;p&gt;For more information, see &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/opensearch-service/latest/developerguide/off-peak.html\&quot;&gt;Defining off-peak maintenance windows for Amazon OpenSearch Service&lt;/a&gt;.&lt;/p&gt;
     * @alias module:model/OffPeakWindow
     */
    constructor() { 
        
        OffPeakWindow.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>OffPeakWindow</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/OffPeakWindow} obj Optional instance to populate.
     * @return {module:model/OffPeakWindow} The populated <code>OffPeakWindow</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new OffPeakWindow();

            if (data.hasOwnProperty('WindowStartTime')) {
                obj['WindowStartTime'] = OffPeakWindowWindowStartTime.constructFromObject(data['WindowStartTime']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>OffPeakWindow</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>OffPeakWindow</code>.
     */
    static validateJSON(data) {
        // validate the optional field `WindowStartTime`
        if (data['WindowStartTime']) { // data not null
          OffPeakWindowWindowStartTime.validateJSON(data['WindowStartTime']);
        }

        return true;
    }


}



/**
 * @member {module:model/OffPeakWindowWindowStartTime} WindowStartTime
 */
OffPeakWindow.prototype['WindowStartTime'] = undefined;






export default OffPeakWindow;

