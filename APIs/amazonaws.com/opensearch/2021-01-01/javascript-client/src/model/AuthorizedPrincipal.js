/**
 * Amazon OpenSearch Service
 * <p>Use the Amazon OpenSearch Service configuration API to create, configure, and manage OpenSearch Service domains.</p> <p>For sample code that uses the configuration API, see the <a href=\"https://docs.aws.amazon.com/opensearch-service/latest/developerguide/opensearch-configuration-samples.html\"> <i>Amazon OpenSearch Service Developer Guide</i> </a>. The guide also contains <a href=\"https://docs.aws.amazon.com/opensearch-service/latest/developerguide/request-signing.html\">sample code</a> for sending signed HTTP requests to the OpenSearch APIs. The endpoint for configuration service requests is Region specific: es.<i>region</i>.amazonaws.com. For example, es.us-east-1.amazonaws.com. For a current list of supported Regions and endpoints, see <a href=\"https://docs.aws.amazon.com/general/latest/gr/rande.html#service-regions\">Amazon Web Services service endpoints</a>.</p>
 *
 * The version of the OpenAPI document: 2021-01-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import PrincipalType from './PrincipalType';

/**
 * The AuthorizedPrincipal model module.
 * @module model/AuthorizedPrincipal
 * @version 2021-01-01
 */
class AuthorizedPrincipal {
    /**
     * Constructs a new <code>AuthorizedPrincipal</code>.
     * Information about an Amazon Web Services account or service that has access to an Amazon OpenSearch Service domain through the use of an interface VPC endpoint.
     * @alias module:model/AuthorizedPrincipal
     */
    constructor() { 
        
        AuthorizedPrincipal.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>AuthorizedPrincipal</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/AuthorizedPrincipal} obj Optional instance to populate.
     * @return {module:model/AuthorizedPrincipal} The populated <code>AuthorizedPrincipal</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new AuthorizedPrincipal();

            if (data.hasOwnProperty('PrincipalType')) {
                obj['PrincipalType'] = ApiClient.convertToType(data['PrincipalType'], PrincipalType);
            }
            if (data.hasOwnProperty('Principal')) {
                obj['Principal'] = ApiClient.convertToType(data['Principal'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>AuthorizedPrincipal</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>AuthorizedPrincipal</code>.
     */
    static validateJSON(data) {
        // validate the optional field `PrincipalType`
        if (data['PrincipalType']) { // data not null
          PrincipalType.validateJSON(data['PrincipalType']);
        }
        // validate the optional field `Principal`
        if (data['Principal']) { // data not null
          String.validateJSON(data['Principal']);
        }

        return true;
    }


}



/**
 * @member {module:model/PrincipalType} PrincipalType
 */
AuthorizedPrincipal.prototype['PrincipalType'] = undefined;

/**
 * @member {String} Principal
 */
AuthorizedPrincipal.prototype['Principal'] = undefined;






export default AuthorizedPrincipal;

