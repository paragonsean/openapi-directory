/**
 * Amazon OpenSearch Service
 * <p>Use the Amazon OpenSearch Service configuration API to create, configure, and manage OpenSearch Service domains.</p> <p>For sample code that uses the configuration API, see the <a href=\"https://docs.aws.amazon.com/opensearch-service/latest/developerguide/opensearch-configuration-samples.html\"> <i>Amazon OpenSearch Service Developer Guide</i> </a>. The guide also contains <a href=\"https://docs.aws.amazon.com/opensearch-service/latest/developerguide/request-signing.html\">sample code</a> for sending signed HTTP requests to the OpenSearch APIs. The endpoint for configuration service requests is Region specific: es.<i>region</i>.amazonaws.com. For example, es.us-east-1.amazonaws.com. For a current list of supported Regions and endpoints, see <a href=\"https://docs.aws.amazon.com/general/latest/gr/rande.html#service-regions\">Amazon Web Services service endpoints</a>.</p>
 *
 * The version of the OpenAPI document: 2021-01-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import OpenSearchPartitionInstanceType from './OpenSearchPartitionInstanceType';

/**
 * The InstanceTypeDetails model module.
 * @module model/InstanceTypeDetails
 * @version 2021-01-01
 */
class InstanceTypeDetails {
    /**
     * Constructs a new <code>InstanceTypeDetails</code>.
     * Lists all instance types and available features for a given OpenSearch or Elasticsearch version.
     * @alias module:model/InstanceTypeDetails
     */
    constructor() { 
        
        InstanceTypeDetails.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>InstanceTypeDetails</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/InstanceTypeDetails} obj Optional instance to populate.
     * @return {module:model/InstanceTypeDetails} The populated <code>InstanceTypeDetails</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new InstanceTypeDetails();

            if (data.hasOwnProperty('InstanceType')) {
                obj['InstanceType'] = ApiClient.convertToType(data['InstanceType'], OpenSearchPartitionInstanceType);
            }
            if (data.hasOwnProperty('EncryptionEnabled')) {
                obj['EncryptionEnabled'] = ApiClient.convertToType(data['EncryptionEnabled'], 'Boolean');
            }
            if (data.hasOwnProperty('CognitoEnabled')) {
                obj['CognitoEnabled'] = ApiClient.convertToType(data['CognitoEnabled'], 'Boolean');
            }
            if (data.hasOwnProperty('AppLogsEnabled')) {
                obj['AppLogsEnabled'] = ApiClient.convertToType(data['AppLogsEnabled'], 'Boolean');
            }
            if (data.hasOwnProperty('AdvancedSecurityEnabled')) {
                obj['AdvancedSecurityEnabled'] = ApiClient.convertToType(data['AdvancedSecurityEnabled'], 'Boolean');
            }
            if (data.hasOwnProperty('WarmEnabled')) {
                obj['WarmEnabled'] = ApiClient.convertToType(data['WarmEnabled'], 'Boolean');
            }
            if (data.hasOwnProperty('InstanceRole')) {
                obj['InstanceRole'] = ApiClient.convertToType(data['InstanceRole'], Array);
            }
            if (data.hasOwnProperty('AvailabilityZones')) {
                obj['AvailabilityZones'] = ApiClient.convertToType(data['AvailabilityZones'], Array);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>InstanceTypeDetails</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>InstanceTypeDetails</code>.
     */
    static validateJSON(data) {
        // validate the optional field `InstanceType`
        if (data['InstanceType']) { // data not null
          OpenSearchPartitionInstanceType.validateJSON(data['InstanceType']);
        }
        // validate the optional field `EncryptionEnabled`
        if (data['EncryptionEnabled']) { // data not null
          Boolean.validateJSON(data['EncryptionEnabled']);
        }
        // validate the optional field `CognitoEnabled`
        if (data['CognitoEnabled']) { // data not null
          Boolean.validateJSON(data['CognitoEnabled']);
        }
        // validate the optional field `AppLogsEnabled`
        if (data['AppLogsEnabled']) { // data not null
          Boolean.validateJSON(data['AppLogsEnabled']);
        }
        // validate the optional field `AdvancedSecurityEnabled`
        if (data['AdvancedSecurityEnabled']) { // data not null
          Boolean.validateJSON(data['AdvancedSecurityEnabled']);
        }
        // validate the optional field `WarmEnabled`
        if (data['WarmEnabled']) { // data not null
          Boolean.validateJSON(data['WarmEnabled']);
        }
        // validate the optional field `InstanceRole`
        if (data['InstanceRole']) { // data not null
          Array.validateJSON(data['InstanceRole']);
        }
        // validate the optional field `AvailabilityZones`
        if (data['AvailabilityZones']) { // data not null
          Array.validateJSON(data['AvailabilityZones']);
        }

        return true;
    }


}



/**
 * @member {module:model/OpenSearchPartitionInstanceType} InstanceType
 */
InstanceTypeDetails.prototype['InstanceType'] = undefined;

/**
 * @member {Boolean} EncryptionEnabled
 */
InstanceTypeDetails.prototype['EncryptionEnabled'] = undefined;

/**
 * @member {Boolean} CognitoEnabled
 */
InstanceTypeDetails.prototype['CognitoEnabled'] = undefined;

/**
 * @member {Boolean} AppLogsEnabled
 */
InstanceTypeDetails.prototype['AppLogsEnabled'] = undefined;

/**
 * @member {Boolean} AdvancedSecurityEnabled
 */
InstanceTypeDetails.prototype['AdvancedSecurityEnabled'] = undefined;

/**
 * @member {Boolean} WarmEnabled
 */
InstanceTypeDetails.prototype['WarmEnabled'] = undefined;

/**
 * @member {Array} InstanceRole
 */
InstanceTypeDetails.prototype['InstanceRole'] = undefined;

/**
 * @member {Array} AvailabilityZones
 */
InstanceTypeDetails.prototype['AvailabilityZones'] = undefined;






export default InstanceTypeDetails;

