/**
 * Amazon OpenSearch Service
 * <p>Use the Amazon OpenSearch Service configuration API to create, configure, and manage OpenSearch Service domains.</p> <p>For sample code that uses the configuration API, see the <a href=\"https://docs.aws.amazon.com/opensearch-service/latest/developerguide/opensearch-configuration-samples.html\"> <i>Amazon OpenSearch Service Developer Guide</i> </a>. The guide also contains <a href=\"https://docs.aws.amazon.com/opensearch-service/latest/developerguide/request-signing.html\">sample code</a> for sending signed HTTP requests to the OpenSearch APIs. The endpoint for configuration service requests is Region specific: es.<i>region</i>.amazonaws.com. For example, es.us-east-1.amazonaws.com. For a current list of supported Regions and endpoints, see <a href=\"https://docs.aws.amazon.com/general/latest/gr/rande.html#service-regions\">Amazon Web Services service endpoints</a>.</p>
 *
 * The version of the OpenAPI document: 2021-01-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The DescribeReservedInstancesResponse model module.
 * @module model/DescribeReservedInstancesResponse
 * @version 2021-01-01
 */
class DescribeReservedInstancesResponse {
    /**
     * Constructs a new <code>DescribeReservedInstancesResponse</code>.
     * Container for results from &lt;code&gt;DescribeReservedInstances&lt;/code&gt; 
     * @alias module:model/DescribeReservedInstancesResponse
     */
    constructor() { 
        
        DescribeReservedInstancesResponse.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>DescribeReservedInstancesResponse</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/DescribeReservedInstancesResponse} obj Optional instance to populate.
     * @return {module:model/DescribeReservedInstancesResponse} The populated <code>DescribeReservedInstancesResponse</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new DescribeReservedInstancesResponse();

            if (data.hasOwnProperty('NextToken')) {
                obj['NextToken'] = ApiClient.convertToType(data['NextToken'], 'String');
            }
            if (data.hasOwnProperty('ReservedInstances')) {
                obj['ReservedInstances'] = ApiClient.convertToType(data['ReservedInstances'], Array);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>DescribeReservedInstancesResponse</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>DescribeReservedInstancesResponse</code>.
     */
    static validateJSON(data) {
        // validate the optional field `NextToken`
        if (data['NextToken']) { // data not null
          String.validateJSON(data['NextToken']);
        }
        // validate the optional field `ReservedInstances`
        if (data['ReservedInstances']) { // data not null
          Array.validateJSON(data['ReservedInstances']);
        }

        return true;
    }


}



/**
 * @member {String} NextToken
 */
DescribeReservedInstancesResponse.prototype['NextToken'] = undefined;

/**
 * @member {Array} ReservedInstances
 */
DescribeReservedInstancesResponse.prototype['ReservedInstances'] = undefined;






export default DescribeReservedInstancesResponse;

