/**
 * Amazon OpenSearch Service
 * <p>Use the Amazon OpenSearch Service configuration API to create, configure, and manage OpenSearch Service domains.</p> <p>For sample code that uses the configuration API, see the <a href=\"https://docs.aws.amazon.com/opensearch-service/latest/developerguide/opensearch-configuration-samples.html\"> <i>Amazon OpenSearch Service Developer Guide</i> </a>. The guide also contains <a href=\"https://docs.aws.amazon.com/opensearch-service/latest/developerguide/request-signing.html\">sample code</a> for sending signed HTTP requests to the OpenSearch APIs. The endpoint for configuration service requests is Region specific: es.<i>region</i>.amazonaws.com. For example, es.us-east-1.amazonaws.com. For a current list of supported Regions and endpoints, see <a href=\"https://docs.aws.amazon.com/general/latest/gr/rande.html#service-regions\">Amazon Web Services service endpoints</a>.</p>
 *
 * The version of the OpenAPI document: 2021-01-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import CreateDomainRequestDomainEndpointOptions from './CreateDomainRequestDomainEndpointOptions';
import DomainStatus from './DomainStatus';
import DomainStatusAdvancedSecurityOptions from './DomainStatusAdvancedSecurityOptions';
import DomainStatusAutoTuneOptions from './DomainStatusAutoTuneOptions';
import DomainStatusChangeProgressDetails from './DomainStatusChangeProgressDetails';
import DomainStatusClusterConfig from './DomainStatusClusterConfig';
import DomainStatusCognitoOptions from './DomainStatusCognitoOptions';
import DomainStatusEBSOptions from './DomainStatusEBSOptions';
import DomainStatusEncryptionAtRestOptions from './DomainStatusEncryptionAtRestOptions';
import DomainStatusNodeToNodeEncryptionOptions from './DomainStatusNodeToNodeEncryptionOptions';
import DomainStatusOffPeakWindowOptions from './DomainStatusOffPeakWindowOptions';
import DomainStatusServiceSoftwareOptions from './DomainStatusServiceSoftwareOptions';
import DomainStatusSnapshotOptions from './DomainStatusSnapshotOptions';
import DomainStatusSoftwareUpdateOptions from './DomainStatusSoftwareUpdateOptions';
import DomainStatusVPCOptions from './DomainStatusVPCOptions';

/**
 * The DescribeDryRunProgressResponseDryRunConfig model module.
 * @module model/DescribeDryRunProgressResponseDryRunConfig
 * @version 2021-01-01
 */
class DescribeDryRunProgressResponseDryRunConfig {
    /**
     * Constructs a new <code>DescribeDryRunProgressResponseDryRunConfig</code>.
     * @alias module:model/DescribeDryRunProgressResponseDryRunConfig
     * @implements module:model/DomainStatus
     * @param domainId {String} 
     * @param domainName {String} 
     * @param ARN {String} 
     * @param clusterConfig {module:model/DomainStatusClusterConfig} 
     */
    constructor(domainId, domainName, ARN, clusterConfig) { 
        DomainStatus.initialize(this, domainId, domainName, ARN, clusterConfig);
        DescribeDryRunProgressResponseDryRunConfig.initialize(this, domainId, domainName, ARN, clusterConfig);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, domainId, domainName, ARN, clusterConfig) { 
        obj['DomainId'] = domainId;
        obj['DomainName'] = domainName;
        obj['ARN'] = ARN;
        obj['ClusterConfig'] = clusterConfig;
    }

    /**
     * Constructs a <code>DescribeDryRunProgressResponseDryRunConfig</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/DescribeDryRunProgressResponseDryRunConfig} obj Optional instance to populate.
     * @return {module:model/DescribeDryRunProgressResponseDryRunConfig} The populated <code>DescribeDryRunProgressResponseDryRunConfig</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new DescribeDryRunProgressResponseDryRunConfig();
            DomainStatus.constructFromObject(data, obj);

            if (data.hasOwnProperty('DomainId')) {
                obj['DomainId'] = ApiClient.convertToType(data['DomainId'], 'String');
            }
            if (data.hasOwnProperty('DomainName')) {
                obj['DomainName'] = ApiClient.convertToType(data['DomainName'], 'String');
            }
            if (data.hasOwnProperty('ARN')) {
                obj['ARN'] = ApiClient.convertToType(data['ARN'], 'String');
            }
            if (data.hasOwnProperty('Created')) {
                obj['Created'] = ApiClient.convertToType(data['Created'], 'Boolean');
            }
            if (data.hasOwnProperty('Deleted')) {
                obj['Deleted'] = ApiClient.convertToType(data['Deleted'], 'Boolean');
            }
            if (data.hasOwnProperty('Endpoint')) {
                obj['Endpoint'] = ApiClient.convertToType(data['Endpoint'], 'String');
            }
            if (data.hasOwnProperty('Endpoints')) {
                obj['Endpoints'] = ApiClient.convertToType(data['Endpoints'], Object);
            }
            if (data.hasOwnProperty('Processing')) {
                obj['Processing'] = ApiClient.convertToType(data['Processing'], 'Boolean');
            }
            if (data.hasOwnProperty('UpgradeProcessing')) {
                obj['UpgradeProcessing'] = ApiClient.convertToType(data['UpgradeProcessing'], 'Boolean');
            }
            if (data.hasOwnProperty('EngineVersion')) {
                obj['EngineVersion'] = ApiClient.convertToType(data['EngineVersion'], 'String');
            }
            if (data.hasOwnProperty('ClusterConfig')) {
                obj['ClusterConfig'] = DomainStatusClusterConfig.constructFromObject(data['ClusterConfig']);
            }
            if (data.hasOwnProperty('EBSOptions')) {
                obj['EBSOptions'] = DomainStatusEBSOptions.constructFromObject(data['EBSOptions']);
            }
            if (data.hasOwnProperty('AccessPolicies')) {
                obj['AccessPolicies'] = ApiClient.convertToType(data['AccessPolicies'], 'String');
            }
            if (data.hasOwnProperty('SnapshotOptions')) {
                obj['SnapshotOptions'] = DomainStatusSnapshotOptions.constructFromObject(data['SnapshotOptions']);
            }
            if (data.hasOwnProperty('VPCOptions')) {
                obj['VPCOptions'] = DomainStatusVPCOptions.constructFromObject(data['VPCOptions']);
            }
            if (data.hasOwnProperty('CognitoOptions')) {
                obj['CognitoOptions'] = DomainStatusCognitoOptions.constructFromObject(data['CognitoOptions']);
            }
            if (data.hasOwnProperty('EncryptionAtRestOptions')) {
                obj['EncryptionAtRestOptions'] = DomainStatusEncryptionAtRestOptions.constructFromObject(data['EncryptionAtRestOptions']);
            }
            if (data.hasOwnProperty('NodeToNodeEncryptionOptions')) {
                obj['NodeToNodeEncryptionOptions'] = DomainStatusNodeToNodeEncryptionOptions.constructFromObject(data['NodeToNodeEncryptionOptions']);
            }
            if (data.hasOwnProperty('AdvancedOptions')) {
                obj['AdvancedOptions'] = ApiClient.convertToType(data['AdvancedOptions'], Object);
            }
            if (data.hasOwnProperty('LogPublishingOptions')) {
                obj['LogPublishingOptions'] = ApiClient.convertToType(data['LogPublishingOptions'], Object);
            }
            if (data.hasOwnProperty('ServiceSoftwareOptions')) {
                obj['ServiceSoftwareOptions'] = DomainStatusServiceSoftwareOptions.constructFromObject(data['ServiceSoftwareOptions']);
            }
            if (data.hasOwnProperty('DomainEndpointOptions')) {
                obj['DomainEndpointOptions'] = CreateDomainRequestDomainEndpointOptions.constructFromObject(data['DomainEndpointOptions']);
            }
            if (data.hasOwnProperty('AdvancedSecurityOptions')) {
                obj['AdvancedSecurityOptions'] = DomainStatusAdvancedSecurityOptions.constructFromObject(data['AdvancedSecurityOptions']);
            }
            if (data.hasOwnProperty('AutoTuneOptions')) {
                obj['AutoTuneOptions'] = DomainStatusAutoTuneOptions.constructFromObject(data['AutoTuneOptions']);
            }
            if (data.hasOwnProperty('ChangeProgressDetails')) {
                obj['ChangeProgressDetails'] = DomainStatusChangeProgressDetails.constructFromObject(data['ChangeProgressDetails']);
            }
            if (data.hasOwnProperty('OffPeakWindowOptions')) {
                obj['OffPeakWindowOptions'] = DomainStatusOffPeakWindowOptions.constructFromObject(data['OffPeakWindowOptions']);
            }
            if (data.hasOwnProperty('SoftwareUpdateOptions')) {
                obj['SoftwareUpdateOptions'] = DomainStatusSoftwareUpdateOptions.constructFromObject(data['SoftwareUpdateOptions']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>DescribeDryRunProgressResponseDryRunConfig</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>DescribeDryRunProgressResponseDryRunConfig</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of DescribeDryRunProgressResponseDryRunConfig.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // validate the optional field `DomainId`
        if (data['DomainId']) { // data not null
          String.validateJSON(data['DomainId']);
        }
        // validate the optional field `DomainName`
        if (data['DomainName']) { // data not null
          String.validateJSON(data['DomainName']);
        }
        // validate the optional field `ARN`
        if (data['ARN']) { // data not null
          String.validateJSON(data['ARN']);
        }
        // validate the optional field `Created`
        if (data['Created']) { // data not null
          Boolean.validateJSON(data['Created']);
        }
        // validate the optional field `Deleted`
        if (data['Deleted']) { // data not null
          Boolean.validateJSON(data['Deleted']);
        }
        // validate the optional field `Endpoint`
        if (data['Endpoint']) { // data not null
          String.validateJSON(data['Endpoint']);
        }
        // validate the optional field `Endpoints`
        if (data['Endpoints']) { // data not null
          Object.validateJSON(data['Endpoints']);
        }
        // validate the optional field `Processing`
        if (data['Processing']) { // data not null
          Boolean.validateJSON(data['Processing']);
        }
        // validate the optional field `UpgradeProcessing`
        if (data['UpgradeProcessing']) { // data not null
          Boolean.validateJSON(data['UpgradeProcessing']);
        }
        // validate the optional field `EngineVersion`
        if (data['EngineVersion']) { // data not null
          String.validateJSON(data['EngineVersion']);
        }
        // validate the optional field `ClusterConfig`
        if (data['ClusterConfig']) { // data not null
          DomainStatusClusterConfig.validateJSON(data['ClusterConfig']);
        }
        // validate the optional field `EBSOptions`
        if (data['EBSOptions']) { // data not null
          DomainStatusEBSOptions.validateJSON(data['EBSOptions']);
        }
        // validate the optional field `AccessPolicies`
        if (data['AccessPolicies']) { // data not null
          String.validateJSON(data['AccessPolicies']);
        }
        // validate the optional field `SnapshotOptions`
        if (data['SnapshotOptions']) { // data not null
          DomainStatusSnapshotOptions.validateJSON(data['SnapshotOptions']);
        }
        // validate the optional field `VPCOptions`
        if (data['VPCOptions']) { // data not null
          DomainStatusVPCOptions.validateJSON(data['VPCOptions']);
        }
        // validate the optional field `CognitoOptions`
        if (data['CognitoOptions']) { // data not null
          DomainStatusCognitoOptions.validateJSON(data['CognitoOptions']);
        }
        // validate the optional field `EncryptionAtRestOptions`
        if (data['EncryptionAtRestOptions']) { // data not null
          DomainStatusEncryptionAtRestOptions.validateJSON(data['EncryptionAtRestOptions']);
        }
        // validate the optional field `NodeToNodeEncryptionOptions`
        if (data['NodeToNodeEncryptionOptions']) { // data not null
          DomainStatusNodeToNodeEncryptionOptions.validateJSON(data['NodeToNodeEncryptionOptions']);
        }
        // validate the optional field `AdvancedOptions`
        if (data['AdvancedOptions']) { // data not null
          Object.validateJSON(data['AdvancedOptions']);
        }
        // validate the optional field `LogPublishingOptions`
        if (data['LogPublishingOptions']) { // data not null
          Object.validateJSON(data['LogPublishingOptions']);
        }
        // validate the optional field `ServiceSoftwareOptions`
        if (data['ServiceSoftwareOptions']) { // data not null
          DomainStatusServiceSoftwareOptions.validateJSON(data['ServiceSoftwareOptions']);
        }
        // validate the optional field `DomainEndpointOptions`
        if (data['DomainEndpointOptions']) { // data not null
          CreateDomainRequestDomainEndpointOptions.validateJSON(data['DomainEndpointOptions']);
        }
        // validate the optional field `AdvancedSecurityOptions`
        if (data['AdvancedSecurityOptions']) { // data not null
          DomainStatusAdvancedSecurityOptions.validateJSON(data['AdvancedSecurityOptions']);
        }
        // validate the optional field `AutoTuneOptions`
        if (data['AutoTuneOptions']) { // data not null
          DomainStatusAutoTuneOptions.validateJSON(data['AutoTuneOptions']);
        }
        // validate the optional field `ChangeProgressDetails`
        if (data['ChangeProgressDetails']) { // data not null
          DomainStatusChangeProgressDetails.validateJSON(data['ChangeProgressDetails']);
        }
        // validate the optional field `OffPeakWindowOptions`
        if (data['OffPeakWindowOptions']) { // data not null
          DomainStatusOffPeakWindowOptions.validateJSON(data['OffPeakWindowOptions']);
        }
        // validate the optional field `SoftwareUpdateOptions`
        if (data['SoftwareUpdateOptions']) { // data not null
          DomainStatusSoftwareUpdateOptions.validateJSON(data['SoftwareUpdateOptions']);
        }

        return true;
    }


}

DescribeDryRunProgressResponseDryRunConfig.RequiredProperties = ["DomainId", "DomainName", "ARN", "ClusterConfig"];

/**
 * @member {String} DomainId
 */
DescribeDryRunProgressResponseDryRunConfig.prototype['DomainId'] = undefined;

/**
 * @member {String} DomainName
 */
DescribeDryRunProgressResponseDryRunConfig.prototype['DomainName'] = undefined;

/**
 * @member {String} ARN
 */
DescribeDryRunProgressResponseDryRunConfig.prototype['ARN'] = undefined;

/**
 * @member {Boolean} Created
 */
DescribeDryRunProgressResponseDryRunConfig.prototype['Created'] = undefined;

/**
 * @member {Boolean} Deleted
 */
DescribeDryRunProgressResponseDryRunConfig.prototype['Deleted'] = undefined;

/**
 * @member {String} Endpoint
 */
DescribeDryRunProgressResponseDryRunConfig.prototype['Endpoint'] = undefined;

/**
 * @member {Object} Endpoints
 */
DescribeDryRunProgressResponseDryRunConfig.prototype['Endpoints'] = undefined;

/**
 * @member {Boolean} Processing
 */
DescribeDryRunProgressResponseDryRunConfig.prototype['Processing'] = undefined;

/**
 * @member {Boolean} UpgradeProcessing
 */
DescribeDryRunProgressResponseDryRunConfig.prototype['UpgradeProcessing'] = undefined;

/**
 * @member {String} EngineVersion
 */
DescribeDryRunProgressResponseDryRunConfig.prototype['EngineVersion'] = undefined;

/**
 * @member {module:model/DomainStatusClusterConfig} ClusterConfig
 */
DescribeDryRunProgressResponseDryRunConfig.prototype['ClusterConfig'] = undefined;

/**
 * @member {module:model/DomainStatusEBSOptions} EBSOptions
 */
DescribeDryRunProgressResponseDryRunConfig.prototype['EBSOptions'] = undefined;

/**
 * @member {String} AccessPolicies
 */
DescribeDryRunProgressResponseDryRunConfig.prototype['AccessPolicies'] = undefined;

/**
 * @member {module:model/DomainStatusSnapshotOptions} SnapshotOptions
 */
DescribeDryRunProgressResponseDryRunConfig.prototype['SnapshotOptions'] = undefined;

/**
 * @member {module:model/DomainStatusVPCOptions} VPCOptions
 */
DescribeDryRunProgressResponseDryRunConfig.prototype['VPCOptions'] = undefined;

/**
 * @member {module:model/DomainStatusCognitoOptions} CognitoOptions
 */
DescribeDryRunProgressResponseDryRunConfig.prototype['CognitoOptions'] = undefined;

/**
 * @member {module:model/DomainStatusEncryptionAtRestOptions} EncryptionAtRestOptions
 */
DescribeDryRunProgressResponseDryRunConfig.prototype['EncryptionAtRestOptions'] = undefined;

/**
 * @member {module:model/DomainStatusNodeToNodeEncryptionOptions} NodeToNodeEncryptionOptions
 */
DescribeDryRunProgressResponseDryRunConfig.prototype['NodeToNodeEncryptionOptions'] = undefined;

/**
 * @member {Object} AdvancedOptions
 */
DescribeDryRunProgressResponseDryRunConfig.prototype['AdvancedOptions'] = undefined;

/**
 * @member {Object} LogPublishingOptions
 */
DescribeDryRunProgressResponseDryRunConfig.prototype['LogPublishingOptions'] = undefined;

/**
 * @member {module:model/DomainStatusServiceSoftwareOptions} ServiceSoftwareOptions
 */
DescribeDryRunProgressResponseDryRunConfig.prototype['ServiceSoftwareOptions'] = undefined;

/**
 * @member {module:model/CreateDomainRequestDomainEndpointOptions} DomainEndpointOptions
 */
DescribeDryRunProgressResponseDryRunConfig.prototype['DomainEndpointOptions'] = undefined;

/**
 * @member {module:model/DomainStatusAdvancedSecurityOptions} AdvancedSecurityOptions
 */
DescribeDryRunProgressResponseDryRunConfig.prototype['AdvancedSecurityOptions'] = undefined;

/**
 * @member {module:model/DomainStatusAutoTuneOptions} AutoTuneOptions
 */
DescribeDryRunProgressResponseDryRunConfig.prototype['AutoTuneOptions'] = undefined;

/**
 * @member {module:model/DomainStatusChangeProgressDetails} ChangeProgressDetails
 */
DescribeDryRunProgressResponseDryRunConfig.prototype['ChangeProgressDetails'] = undefined;

/**
 * @member {module:model/DomainStatusOffPeakWindowOptions} OffPeakWindowOptions
 */
DescribeDryRunProgressResponseDryRunConfig.prototype['OffPeakWindowOptions'] = undefined;

/**
 * @member {module:model/DomainStatusSoftwareUpdateOptions} SoftwareUpdateOptions
 */
DescribeDryRunProgressResponseDryRunConfig.prototype['SoftwareUpdateOptions'] = undefined;


// Implement DomainStatus interface:
/**
 * @member {String} DomainId
 */
DomainStatus.prototype['DomainId'] = undefined;
/**
 * @member {String} DomainName
 */
DomainStatus.prototype['DomainName'] = undefined;
/**
 * @member {String} ARN
 */
DomainStatus.prototype['ARN'] = undefined;
/**
 * @member {Boolean} Created
 */
DomainStatus.prototype['Created'] = undefined;
/**
 * @member {Boolean} Deleted
 */
DomainStatus.prototype['Deleted'] = undefined;
/**
 * @member {String} Endpoint
 */
DomainStatus.prototype['Endpoint'] = undefined;
/**
 * @member {Object} Endpoints
 */
DomainStatus.prototype['Endpoints'] = undefined;
/**
 * @member {Boolean} Processing
 */
DomainStatus.prototype['Processing'] = undefined;
/**
 * @member {Boolean} UpgradeProcessing
 */
DomainStatus.prototype['UpgradeProcessing'] = undefined;
/**
 * @member {String} EngineVersion
 */
DomainStatus.prototype['EngineVersion'] = undefined;
/**
 * @member {module:model/DomainStatusClusterConfig} ClusterConfig
 */
DomainStatus.prototype['ClusterConfig'] = undefined;
/**
 * @member {module:model/DomainStatusEBSOptions} EBSOptions
 */
DomainStatus.prototype['EBSOptions'] = undefined;
/**
 * @member {String} AccessPolicies
 */
DomainStatus.prototype['AccessPolicies'] = undefined;
/**
 * @member {module:model/DomainStatusSnapshotOptions} SnapshotOptions
 */
DomainStatus.prototype['SnapshotOptions'] = undefined;
/**
 * @member {module:model/DomainStatusVPCOptions} VPCOptions
 */
DomainStatus.prototype['VPCOptions'] = undefined;
/**
 * @member {module:model/DomainStatusCognitoOptions} CognitoOptions
 */
DomainStatus.prototype['CognitoOptions'] = undefined;
/**
 * @member {module:model/DomainStatusEncryptionAtRestOptions} EncryptionAtRestOptions
 */
DomainStatus.prototype['EncryptionAtRestOptions'] = undefined;
/**
 * @member {module:model/DomainStatusNodeToNodeEncryptionOptions} NodeToNodeEncryptionOptions
 */
DomainStatus.prototype['NodeToNodeEncryptionOptions'] = undefined;
/**
 * @member {Object} AdvancedOptions
 */
DomainStatus.prototype['AdvancedOptions'] = undefined;
/**
 * @member {Object} LogPublishingOptions
 */
DomainStatus.prototype['LogPublishingOptions'] = undefined;
/**
 * @member {module:model/DomainStatusServiceSoftwareOptions} ServiceSoftwareOptions
 */
DomainStatus.prototype['ServiceSoftwareOptions'] = undefined;
/**
 * @member {module:model/CreateDomainRequestDomainEndpointOptions} DomainEndpointOptions
 */
DomainStatus.prototype['DomainEndpointOptions'] = undefined;
/**
 * @member {module:model/DomainStatusAdvancedSecurityOptions} AdvancedSecurityOptions
 */
DomainStatus.prototype['AdvancedSecurityOptions'] = undefined;
/**
 * @member {module:model/DomainStatusAutoTuneOptions} AutoTuneOptions
 */
DomainStatus.prototype['AutoTuneOptions'] = undefined;
/**
 * @member {module:model/DomainStatusChangeProgressDetails} ChangeProgressDetails
 */
DomainStatus.prototype['ChangeProgressDetails'] = undefined;
/**
 * @member {module:model/DomainStatusOffPeakWindowOptions} OffPeakWindowOptions
 */
DomainStatus.prototype['OffPeakWindowOptions'] = undefined;
/**
 * @member {module:model/DomainStatusSoftwareUpdateOptions} SoftwareUpdateOptions
 */
DomainStatus.prototype['SoftwareUpdateOptions'] = undefined;




export default DescribeDryRunProgressResponseDryRunConfig;

