/**
 * Amazon OpenSearch Service
 * <p>Use the Amazon OpenSearch Service configuration API to create, configure, and manage OpenSearch Service domains.</p> <p>For sample code that uses the configuration API, see the <a href=\"https://docs.aws.amazon.com/opensearch-service/latest/developerguide/opensearch-configuration-samples.html\"> <i>Amazon OpenSearch Service Developer Guide</i> </a>. The guide also contains <a href=\"https://docs.aws.amazon.com/opensearch-service/latest/developerguide/request-signing.html\">sample code</a> for sending signed HTTP requests to the OpenSearch APIs. The endpoint for configuration service requests is Region specific: es.<i>region</i>.amazonaws.com. For example, es.us-east-1.amazonaws.com. For a current list of supported Regions and endpoints, see <a href=\"https://docs.aws.amazon.com/general/latest/gr/rande.html#service-regions\">Amazon Web Services service endpoints</a>.</p>
 *
 * The version of the OpenAPI document: 2021-01-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The WindowStartTime model module.
 * @module model/WindowStartTime
 * @version 2021-01-01
 */
class WindowStartTime {
    /**
     * Constructs a new <code>WindowStartTime</code>.
     * The desired start time for an &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/opensearch-service/latest/APIReference/API_OffPeakWindow.html\&quot;&gt;off-peak maintenance window&lt;/a&gt;.
     * @alias module:model/WindowStartTime
     * @param hours {Number} 
     * @param minutes {Number} 
     */
    constructor(hours, minutes) { 
        
        WindowStartTime.initialize(this, hours, minutes);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, hours, minutes) { 
        obj['Hours'] = hours;
        obj['Minutes'] = minutes;
    }

    /**
     * Constructs a <code>WindowStartTime</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/WindowStartTime} obj Optional instance to populate.
     * @return {module:model/WindowStartTime} The populated <code>WindowStartTime</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new WindowStartTime();

            if (data.hasOwnProperty('Hours')) {
                obj['Hours'] = ApiClient.convertToType(data['Hours'], 'Number');
            }
            if (data.hasOwnProperty('Minutes')) {
                obj['Minutes'] = ApiClient.convertToType(data['Minutes'], 'Number');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>WindowStartTime</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>WindowStartTime</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of WindowStartTime.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // validate the optional field `Hours`
        if (data['Hours']) { // data not null
          Number.validateJSON(data['Hours']);
        }
        // validate the optional field `Minutes`
        if (data['Minutes']) { // data not null
          Number.validateJSON(data['Minutes']);
        }

        return true;
    }


}

WindowStartTime.RequiredProperties = ["Hours", "Minutes"];

/**
 * @member {Number} Hours
 */
WindowStartTime.prototype['Hours'] = undefined;

/**
 * @member {Number} Minutes
 */
WindowStartTime.prototype['Minutes'] = undefined;






export default WindowStartTime;

