/**
 * Amazon OpenSearch Service
 * <p>Use the Amazon OpenSearch Service configuration API to create, configure, and manage OpenSearch Service domains.</p> <p>For sample code that uses the configuration API, see the <a href=\"https://docs.aws.amazon.com/opensearch-service/latest/developerguide/opensearch-configuration-samples.html\"> <i>Amazon OpenSearch Service Developer Guide</i> </a>. The guide also contains <a href=\"https://docs.aws.amazon.com/opensearch-service/latest/developerguide/request-signing.html\">sample code</a> for sending signed HTTP requests to the OpenSearch APIs. The endpoint for configuration service requests is Region specific: es.<i>region</i>.amazonaws.com. For example, es.us-east-1.amazonaws.com. For a current list of supported Regions and endpoints, see <a href=\"https://docs.aws.amazon.com/general/latest/gr/rande.html#service-regions\">Amazon Web Services service endpoints</a>.</p>
 *
 * The version of the OpenAPI document: 2021-01-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import CreateDomainRequestAdvancedSecurityOptions from './CreateDomainRequestAdvancedSecurityOptions';
import CreateDomainRequestAutoTuneOptions from './CreateDomainRequestAutoTuneOptions';
import CreateDomainRequestClusterConfig from './CreateDomainRequestClusterConfig';
import CreateDomainRequestCognitoOptions from './CreateDomainRequestCognitoOptions';
import CreateDomainRequestDomainEndpointOptions from './CreateDomainRequestDomainEndpointOptions';
import CreateDomainRequestEBSOptions from './CreateDomainRequestEBSOptions';
import CreateDomainRequestEncryptionAtRestOptions from './CreateDomainRequestEncryptionAtRestOptions';
import CreateDomainRequestNodeToNodeEncryptionOptions from './CreateDomainRequestNodeToNodeEncryptionOptions';
import CreateDomainRequestOffPeakWindowOptions from './CreateDomainRequestOffPeakWindowOptions';
import CreateDomainRequestSnapshotOptions from './CreateDomainRequestSnapshotOptions';
import CreateDomainRequestSoftwareUpdateOptions from './CreateDomainRequestSoftwareUpdateOptions';
import CreateDomainRequestVPCOptions from './CreateDomainRequestVPCOptions';
import LogPublishingOption from './LogPublishingOption';
import Tag from './Tag';

/**
 * The CreateDomainRequest model module.
 * @module model/CreateDomainRequest
 * @version 2021-01-01
 */
class CreateDomainRequest {
    /**
     * Constructs a new <code>CreateDomainRequest</code>.
     * @alias module:model/CreateDomainRequest
     * @param domainName {String} The name of an OpenSearch Service domain. Domain names are unique across the domains owned by an account within an Amazon Web Services Region.
     */
    constructor(domainName) { 
        
        CreateDomainRequest.initialize(this, domainName);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, domainName) { 
        obj['DomainName'] = domainName;
    }

    /**
     * Constructs a <code>CreateDomainRequest</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/CreateDomainRequest} obj Optional instance to populate.
     * @return {module:model/CreateDomainRequest} The populated <code>CreateDomainRequest</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new CreateDomainRequest();

            if (data.hasOwnProperty('DomainName')) {
                obj['DomainName'] = ApiClient.convertToType(data['DomainName'], 'String');
            }
            if (data.hasOwnProperty('EngineVersion')) {
                obj['EngineVersion'] = ApiClient.convertToType(data['EngineVersion'], 'String');
            }
            if (data.hasOwnProperty('ClusterConfig')) {
                obj['ClusterConfig'] = CreateDomainRequestClusterConfig.constructFromObject(data['ClusterConfig']);
            }
            if (data.hasOwnProperty('EBSOptions')) {
                obj['EBSOptions'] = CreateDomainRequestEBSOptions.constructFromObject(data['EBSOptions']);
            }
            if (data.hasOwnProperty('AccessPolicies')) {
                obj['AccessPolicies'] = ApiClient.convertToType(data['AccessPolicies'], 'String');
            }
            if (data.hasOwnProperty('SnapshotOptions')) {
                obj['SnapshotOptions'] = CreateDomainRequestSnapshotOptions.constructFromObject(data['SnapshotOptions']);
            }
            if (data.hasOwnProperty('VPCOptions')) {
                obj['VPCOptions'] = CreateDomainRequestVPCOptions.constructFromObject(data['VPCOptions']);
            }
            if (data.hasOwnProperty('CognitoOptions')) {
                obj['CognitoOptions'] = CreateDomainRequestCognitoOptions.constructFromObject(data['CognitoOptions']);
            }
            if (data.hasOwnProperty('EncryptionAtRestOptions')) {
                obj['EncryptionAtRestOptions'] = CreateDomainRequestEncryptionAtRestOptions.constructFromObject(data['EncryptionAtRestOptions']);
            }
            if (data.hasOwnProperty('NodeToNodeEncryptionOptions')) {
                obj['NodeToNodeEncryptionOptions'] = CreateDomainRequestNodeToNodeEncryptionOptions.constructFromObject(data['NodeToNodeEncryptionOptions']);
            }
            if (data.hasOwnProperty('AdvancedOptions')) {
                obj['AdvancedOptions'] = ApiClient.convertToType(data['AdvancedOptions'], {'String': 'String'});
            }
            if (data.hasOwnProperty('LogPublishingOptions')) {
                obj['LogPublishingOptions'] = ApiClient.convertToType(data['LogPublishingOptions'], {'String': LogPublishingOption});
            }
            if (data.hasOwnProperty('DomainEndpointOptions')) {
                obj['DomainEndpointOptions'] = CreateDomainRequestDomainEndpointOptions.constructFromObject(data['DomainEndpointOptions']);
            }
            if (data.hasOwnProperty('AdvancedSecurityOptions')) {
                obj['AdvancedSecurityOptions'] = CreateDomainRequestAdvancedSecurityOptions.constructFromObject(data['AdvancedSecurityOptions']);
            }
            if (data.hasOwnProperty('TagList')) {
                obj['TagList'] = ApiClient.convertToType(data['TagList'], [Tag]);
            }
            if (data.hasOwnProperty('AutoTuneOptions')) {
                obj['AutoTuneOptions'] = CreateDomainRequestAutoTuneOptions.constructFromObject(data['AutoTuneOptions']);
            }
            if (data.hasOwnProperty('OffPeakWindowOptions')) {
                obj['OffPeakWindowOptions'] = CreateDomainRequestOffPeakWindowOptions.constructFromObject(data['OffPeakWindowOptions']);
            }
            if (data.hasOwnProperty('SoftwareUpdateOptions')) {
                obj['SoftwareUpdateOptions'] = CreateDomainRequestSoftwareUpdateOptions.constructFromObject(data['SoftwareUpdateOptions']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>CreateDomainRequest</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>CreateDomainRequest</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of CreateDomainRequest.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['DomainName'] && !(typeof data['DomainName'] === 'string' || data['DomainName'] instanceof String)) {
            throw new Error("Expected the field `DomainName` to be a primitive type in the JSON string but got " + data['DomainName']);
        }
        // ensure the json data is a string
        if (data['EngineVersion'] && !(typeof data['EngineVersion'] === 'string' || data['EngineVersion'] instanceof String)) {
            throw new Error("Expected the field `EngineVersion` to be a primitive type in the JSON string but got " + data['EngineVersion']);
        }
        // validate the optional field `ClusterConfig`
        if (data['ClusterConfig']) { // data not null
          CreateDomainRequestClusterConfig.validateJSON(data['ClusterConfig']);
        }
        // validate the optional field `EBSOptions`
        if (data['EBSOptions']) { // data not null
          CreateDomainRequestEBSOptions.validateJSON(data['EBSOptions']);
        }
        // ensure the json data is a string
        if (data['AccessPolicies'] && !(typeof data['AccessPolicies'] === 'string' || data['AccessPolicies'] instanceof String)) {
            throw new Error("Expected the field `AccessPolicies` to be a primitive type in the JSON string but got " + data['AccessPolicies']);
        }
        // validate the optional field `SnapshotOptions`
        if (data['SnapshotOptions']) { // data not null
          CreateDomainRequestSnapshotOptions.validateJSON(data['SnapshotOptions']);
        }
        // validate the optional field `VPCOptions`
        if (data['VPCOptions']) { // data not null
          CreateDomainRequestVPCOptions.validateJSON(data['VPCOptions']);
        }
        // validate the optional field `CognitoOptions`
        if (data['CognitoOptions']) { // data not null
          CreateDomainRequestCognitoOptions.validateJSON(data['CognitoOptions']);
        }
        // validate the optional field `EncryptionAtRestOptions`
        if (data['EncryptionAtRestOptions']) { // data not null
          CreateDomainRequestEncryptionAtRestOptions.validateJSON(data['EncryptionAtRestOptions']);
        }
        // validate the optional field `NodeToNodeEncryptionOptions`
        if (data['NodeToNodeEncryptionOptions']) { // data not null
          CreateDomainRequestNodeToNodeEncryptionOptions.validateJSON(data['NodeToNodeEncryptionOptions']);
        }
        // validate the optional field `DomainEndpointOptions`
        if (data['DomainEndpointOptions']) { // data not null
          CreateDomainRequestDomainEndpointOptions.validateJSON(data['DomainEndpointOptions']);
        }
        // validate the optional field `AdvancedSecurityOptions`
        if (data['AdvancedSecurityOptions']) { // data not null
          CreateDomainRequestAdvancedSecurityOptions.validateJSON(data['AdvancedSecurityOptions']);
        }
        if (data['TagList']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['TagList'])) {
                throw new Error("Expected the field `TagList` to be an array in the JSON data but got " + data['TagList']);
            }
            // validate the optional field `TagList` (array)
            for (const item of data['TagList']) {
                Tag.validateJSON(item);
            };
        }
        // validate the optional field `AutoTuneOptions`
        if (data['AutoTuneOptions']) { // data not null
          CreateDomainRequestAutoTuneOptions.validateJSON(data['AutoTuneOptions']);
        }
        // validate the optional field `OffPeakWindowOptions`
        if (data['OffPeakWindowOptions']) { // data not null
          CreateDomainRequestOffPeakWindowOptions.validateJSON(data['OffPeakWindowOptions']);
        }
        // validate the optional field `SoftwareUpdateOptions`
        if (data['SoftwareUpdateOptions']) { // data not null
          CreateDomainRequestSoftwareUpdateOptions.validateJSON(data['SoftwareUpdateOptions']);
        }

        return true;
    }


}

CreateDomainRequest.RequiredProperties = ["DomainName"];

/**
 * The name of an OpenSearch Service domain. Domain names are unique across the domains owned by an account within an Amazon Web Services Region.
 * @member {String} DomainName
 */
CreateDomainRequest.prototype['DomainName'] = undefined;

/**
 * String of format Elasticsearch_X.Y or OpenSearch_X.Y to specify the engine version for the OpenSearch Service domain. For example, <code>OpenSearch_1.0</code> or <code>Elasticsearch_7.9</code>. For more information, see <a href=\"https://docs.aws.amazon.com/opensearch-service/latest/developerguide/createupdatedomains.html#createdomains\">Creating and managing Amazon OpenSearch Service domains</a>.
 * @member {String} EngineVersion
 */
CreateDomainRequest.prototype['EngineVersion'] = undefined;

/**
 * @member {module:model/CreateDomainRequestClusterConfig} ClusterConfig
 */
CreateDomainRequest.prototype['ClusterConfig'] = undefined;

/**
 * @member {module:model/CreateDomainRequestEBSOptions} EBSOptions
 */
CreateDomainRequest.prototype['EBSOptions'] = undefined;

/**
 * Access policy rules for an Amazon OpenSearch Service domain endpoint. For more information, see <a href=\"https://docs.aws.amazon.com/opensearch-service/latest/developerguide/createupdatedomains.html#createdomain-configure-access-policies\">Configuring access policies</a>. The maximum size of a policy document is 100 KB.
 * @member {String} AccessPolicies
 */
CreateDomainRequest.prototype['AccessPolicies'] = undefined;

/**
 * @member {module:model/CreateDomainRequestSnapshotOptions} SnapshotOptions
 */
CreateDomainRequest.prototype['SnapshotOptions'] = undefined;

/**
 * @member {module:model/CreateDomainRequestVPCOptions} VPCOptions
 */
CreateDomainRequest.prototype['VPCOptions'] = undefined;

/**
 * @member {module:model/CreateDomainRequestCognitoOptions} CognitoOptions
 */
CreateDomainRequest.prototype['CognitoOptions'] = undefined;

/**
 * @member {module:model/CreateDomainRequestEncryptionAtRestOptions} EncryptionAtRestOptions
 */
CreateDomainRequest.prototype['EncryptionAtRestOptions'] = undefined;

/**
 * @member {module:model/CreateDomainRequestNodeToNodeEncryptionOptions} NodeToNodeEncryptionOptions
 */
CreateDomainRequest.prototype['NodeToNodeEncryptionOptions'] = undefined;

/**
 * <p>Exposes native OpenSearch configuration values from <code>opensearch.yml</code>. The following advanced options are available: </p> <ul> <li> <p>Allows references to indexes in an HTTP request body. Must be <code>false</code> when configuring access to individual sub-resources. Default is <code>true</code>.</p> </li> <li> <p>Specifies the percentage of heap space allocated to field data. Default is unbounded.</p> </li> </ul> <p>For more information, see <a href=\"https://docs.aws.amazon.com/opensearch-service/latest/developerguide/createupdatedomains.html#createdomain-configure-advanced-options\">Advanced cluster parameters</a>.</p>
 * @member {Object.<String, String>} AdvancedOptions
 */
CreateDomainRequest.prototype['AdvancedOptions'] = undefined;

/**
 * Key-value pairs to configure log publishing.
 * @member {Object.<String, module:model/LogPublishingOption>} LogPublishingOptions
 */
CreateDomainRequest.prototype['LogPublishingOptions'] = undefined;

/**
 * @member {module:model/CreateDomainRequestDomainEndpointOptions} DomainEndpointOptions
 */
CreateDomainRequest.prototype['DomainEndpointOptions'] = undefined;

/**
 * @member {module:model/CreateDomainRequestAdvancedSecurityOptions} AdvancedSecurityOptions
 */
CreateDomainRequest.prototype['AdvancedSecurityOptions'] = undefined;

/**
 * A list of tags attached to a domain.
 * @member {Array.<module:model/Tag>} TagList
 */
CreateDomainRequest.prototype['TagList'] = undefined;

/**
 * @member {module:model/CreateDomainRequestAutoTuneOptions} AutoTuneOptions
 */
CreateDomainRequest.prototype['AutoTuneOptions'] = undefined;

/**
 * @member {module:model/CreateDomainRequestOffPeakWindowOptions} OffPeakWindowOptions
 */
CreateDomainRequest.prototype['OffPeakWindowOptions'] = undefined;

/**
 * @member {module:model/CreateDomainRequestSoftwareUpdateOptions} SoftwareUpdateOptions
 */
CreateDomainRequest.prototype['SoftwareUpdateOptions'] = undefined;






export default CreateDomainRequest;

