/**
 * Amazon OpenSearch Service
 * <p>Use the Amazon OpenSearch Service configuration API to create, configure, and manage OpenSearch Service domains.</p> <p>For sample code that uses the configuration API, see the <a href=\"https://docs.aws.amazon.com/opensearch-service/latest/developerguide/opensearch-configuration-samples.html\"> <i>Amazon OpenSearch Service Developer Guide</i> </a>. The guide also contains <a href=\"https://docs.aws.amazon.com/opensearch-service/latest/developerguide/request-signing.html\">sample code</a> for sending signed HTTP requests to the OpenSearch APIs. The endpoint for configuration service requests is Region specific: es.<i>region</i>.amazonaws.com. For example, es.us-east-1.amazonaws.com. For a current list of supported Regions and endpoints, see <a href=\"https://docs.aws.amazon.com/general/latest/gr/rande.html#service-regions\">Amazon Web Services service endpoints</a>.</p>
 *
 * The version of the OpenAPI document: 2021-01-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import Tag from './Tag';

/**
 * The AddTagsRequest model module.
 * @module model/AddTagsRequest
 * @version 2021-01-01
 */
class AddTagsRequest {
    /**
     * Constructs a new <code>AddTagsRequest</code>.
     * @alias module:model/AddTagsRequest
     * @param ARN {String} The Amazon Resource Name (ARN) of the domain. See <a href=\"https://docs.aws.amazon.com/IAM/latest/UserGuide/index.html\">Identifiers for IAM Entities </a> in <i>Using AWS Identity and Access Management</i> for more information. 
     * @param tagList {Array.<module:model/Tag>} A list of tags attached to a domain.
     */
    constructor(ARN, tagList) { 
        
        AddTagsRequest.initialize(this, ARN, tagList);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, ARN, tagList) { 
        obj['ARN'] = ARN;
        obj['TagList'] = tagList;
    }

    /**
     * Constructs a <code>AddTagsRequest</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/AddTagsRequest} obj Optional instance to populate.
     * @return {module:model/AddTagsRequest} The populated <code>AddTagsRequest</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new AddTagsRequest();

            if (data.hasOwnProperty('ARN')) {
                obj['ARN'] = ApiClient.convertToType(data['ARN'], 'String');
            }
            if (data.hasOwnProperty('TagList')) {
                obj['TagList'] = ApiClient.convertToType(data['TagList'], [Tag]);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>AddTagsRequest</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>AddTagsRequest</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of AddTagsRequest.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['ARN'] && !(typeof data['ARN'] === 'string' || data['ARN'] instanceof String)) {
            throw new Error("Expected the field `ARN` to be a primitive type in the JSON string but got " + data['ARN']);
        }
        if (data['TagList']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['TagList'])) {
                throw new Error("Expected the field `TagList` to be an array in the JSON data but got " + data['TagList']);
            }
            // validate the optional field `TagList` (array)
            for (const item of data['TagList']) {
                Tag.validateJSON(item);
            };
        }

        return true;
    }


}

AddTagsRequest.RequiredProperties = ["ARN", "TagList"];

/**
 * The Amazon Resource Name (ARN) of the domain. See <a href=\"https://docs.aws.amazon.com/IAM/latest/UserGuide/index.html\">Identifiers for IAM Entities </a> in <i>Using AWS Identity and Access Management</i> for more information. 
 * @member {String} ARN
 */
AddTagsRequest.prototype['ARN'] = undefined;

/**
 * A list of tags attached to a domain.
 * @member {Array.<module:model/Tag>} TagList
 */
AddTagsRequest.prototype['TagList'] = undefined;






export default AddTagsRequest;

