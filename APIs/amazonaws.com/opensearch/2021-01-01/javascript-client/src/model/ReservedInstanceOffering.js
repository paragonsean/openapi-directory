/**
 * Amazon OpenSearch Service
 * <p>Use the Amazon OpenSearch Service configuration API to create, configure, and manage OpenSearch Service domains.</p> <p>For sample code that uses the configuration API, see the <a href=\"https://docs.aws.amazon.com/opensearch-service/latest/developerguide/opensearch-configuration-samples.html\"> <i>Amazon OpenSearch Service Developer Guide</i> </a>. The guide also contains <a href=\"https://docs.aws.amazon.com/opensearch-service/latest/developerguide/request-signing.html\">sample code</a> for sending signed HTTP requests to the OpenSearch APIs. The endpoint for configuration service requests is Region specific: es.<i>region</i>.amazonaws.com. For example, es.us-east-1.amazonaws.com. For a current list of supported Regions and endpoints, see <a href=\"https://docs.aws.amazon.com/general/latest/gr/rande.html#service-regions\">Amazon Web Services service endpoints</a>.</p>
 *
 * The version of the OpenAPI document: 2021-01-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import OpenSearchPartitionInstanceType from './OpenSearchPartitionInstanceType';
import ReservedInstancePaymentOption from './ReservedInstancePaymentOption';

/**
 * The ReservedInstanceOffering model module.
 * @module model/ReservedInstanceOffering
 * @version 2021-01-01
 */
class ReservedInstanceOffering {
    /**
     * Constructs a new <code>ReservedInstanceOffering</code>.
     * Details of an OpenSearch Reserved Instance offering.
     * @alias module:model/ReservedInstanceOffering
     */
    constructor() { 
        
        ReservedInstanceOffering.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>ReservedInstanceOffering</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ReservedInstanceOffering} obj Optional instance to populate.
     * @return {module:model/ReservedInstanceOffering} The populated <code>ReservedInstanceOffering</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ReservedInstanceOffering();

            if (data.hasOwnProperty('ReservedInstanceOfferingId')) {
                obj['ReservedInstanceOfferingId'] = ApiClient.convertToType(data['ReservedInstanceOfferingId'], 'String');
            }
            if (data.hasOwnProperty('InstanceType')) {
                obj['InstanceType'] = ApiClient.convertToType(data['InstanceType'], OpenSearchPartitionInstanceType);
            }
            if (data.hasOwnProperty('Duration')) {
                obj['Duration'] = ApiClient.convertToType(data['Duration'], 'Number');
            }
            if (data.hasOwnProperty('FixedPrice')) {
                obj['FixedPrice'] = ApiClient.convertToType(data['FixedPrice'], 'Number');
            }
            if (data.hasOwnProperty('UsagePrice')) {
                obj['UsagePrice'] = ApiClient.convertToType(data['UsagePrice'], 'Number');
            }
            if (data.hasOwnProperty('CurrencyCode')) {
                obj['CurrencyCode'] = ApiClient.convertToType(data['CurrencyCode'], 'String');
            }
            if (data.hasOwnProperty('PaymentOption')) {
                obj['PaymentOption'] = ApiClient.convertToType(data['PaymentOption'], ReservedInstancePaymentOption);
            }
            if (data.hasOwnProperty('RecurringCharges')) {
                obj['RecurringCharges'] = ApiClient.convertToType(data['RecurringCharges'], Array);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>ReservedInstanceOffering</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>ReservedInstanceOffering</code>.
     */
    static validateJSON(data) {
        // validate the optional field `ReservedInstanceOfferingId`
        if (data['ReservedInstanceOfferingId']) { // data not null
          String.validateJSON(data['ReservedInstanceOfferingId']);
        }
        // validate the optional field `InstanceType`
        if (data['InstanceType']) { // data not null
          OpenSearchPartitionInstanceType.validateJSON(data['InstanceType']);
        }
        // validate the optional field `Duration`
        if (data['Duration']) { // data not null
          Number.validateJSON(data['Duration']);
        }
        // validate the optional field `FixedPrice`
        if (data['FixedPrice']) { // data not null
          Number.validateJSON(data['FixedPrice']);
        }
        // validate the optional field `UsagePrice`
        if (data['UsagePrice']) { // data not null
          Number.validateJSON(data['UsagePrice']);
        }
        // validate the optional field `CurrencyCode`
        if (data['CurrencyCode']) { // data not null
          String.validateJSON(data['CurrencyCode']);
        }
        // validate the optional field `PaymentOption`
        if (data['PaymentOption']) { // data not null
          ReservedInstancePaymentOption.validateJSON(data['PaymentOption']);
        }
        // validate the optional field `RecurringCharges`
        if (data['RecurringCharges']) { // data not null
          Array.validateJSON(data['RecurringCharges']);
        }

        return true;
    }


}



/**
 * @member {String} ReservedInstanceOfferingId
 */
ReservedInstanceOffering.prototype['ReservedInstanceOfferingId'] = undefined;

/**
 * @member {module:model/OpenSearchPartitionInstanceType} InstanceType
 */
ReservedInstanceOffering.prototype['InstanceType'] = undefined;

/**
 * @member {Number} Duration
 */
ReservedInstanceOffering.prototype['Duration'] = undefined;

/**
 * @member {Number} FixedPrice
 */
ReservedInstanceOffering.prototype['FixedPrice'] = undefined;

/**
 * @member {Number} UsagePrice
 */
ReservedInstanceOffering.prototype['UsagePrice'] = undefined;

/**
 * @member {String} CurrencyCode
 */
ReservedInstanceOffering.prototype['CurrencyCode'] = undefined;

/**
 * @member {module:model/ReservedInstancePaymentOption} PaymentOption
 */
ReservedInstanceOffering.prototype['PaymentOption'] = undefined;

/**
 * @member {Array} RecurringCharges
 */
ReservedInstanceOffering.prototype['RecurringCharges'] = undefined;






export default ReservedInstanceOffering;

