/**
 * Amazon OpenSearch Service
 * <p>Use the Amazon OpenSearch Service configuration API to create, configure, and manage OpenSearch Service domains.</p> <p>For sample code that uses the configuration API, see the <a href=\"https://docs.aws.amazon.com/opensearch-service/latest/developerguide/opensearch-configuration-samples.html\"> <i>Amazon OpenSearch Service Developer Guide</i> </a>. The guide also contains <a href=\"https://docs.aws.amazon.com/opensearch-service/latest/developerguide/request-signing.html\">sample code</a> for sending signed HTTP requests to the OpenSearch APIs. The endpoint for configuration service requests is Region specific: es.<i>region</i>.amazonaws.com. For example, es.us-east-1.amazonaws.com. For a current list of supported Regions and endpoints, see <a href=\"https://docs.aws.amazon.com/general/latest/gr/rande.html#service-regions\">Amazon Web Services service endpoints</a>.</p>
 *
 * The version of the OpenAPI document: 2021-01-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.AmazonOpenSearchService);
  }
}(this, function(expect, AmazonOpenSearchService) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new AmazonOpenSearchService.CreateDomainRequestEBSOptions();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('CreateDomainRequestEBSOptions', function() {
    it('should create an instance of CreateDomainRequestEBSOptions', function() {
      // uncomment below and update the code to test CreateDomainRequestEBSOptions
      //var instance = new AmazonOpenSearchService.CreateDomainRequestEBSOptions();
      //expect(instance).to.be.a(AmazonOpenSearchService.CreateDomainRequestEBSOptions);
    });

    it('should have the property eBSEnabled (base name: "EBSEnabled")', function() {
      // uncomment below and update the code to test the property eBSEnabled
      //var instance = new AmazonOpenSearchService.CreateDomainRequestEBSOptions();
      //expect(instance).to.be();
    });

    it('should have the property volumeType (base name: "VolumeType")', function() {
      // uncomment below and update the code to test the property volumeType
      //var instance = new AmazonOpenSearchService.CreateDomainRequestEBSOptions();
      //expect(instance).to.be();
    });

    it('should have the property volumeSize (base name: "VolumeSize")', function() {
      // uncomment below and update the code to test the property volumeSize
      //var instance = new AmazonOpenSearchService.CreateDomainRequestEBSOptions();
      //expect(instance).to.be();
    });

    it('should have the property iops (base name: "Iops")', function() {
      // uncomment below and update the code to test the property iops
      //var instance = new AmazonOpenSearchService.CreateDomainRequestEBSOptions();
      //expect(instance).to.be();
    });

    it('should have the property throughput (base name: "Throughput")', function() {
      // uncomment below and update the code to test the property throughput
      //var instance = new AmazonOpenSearchService.CreateDomainRequestEBSOptions();
      //expect(instance).to.be();
    });

  });

}));
