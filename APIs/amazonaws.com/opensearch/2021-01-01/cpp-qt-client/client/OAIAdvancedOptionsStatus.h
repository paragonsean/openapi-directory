/**
 * Amazon OpenSearch Service
 * <p>Use the Amazon OpenSearch Service configuration API to create, configure, and manage OpenSearch Service domains.</p> <p>For sample code that uses the configuration API, see the <a href=\"https://docs.aws.amazon.com/opensearch-service/latest/developerguide/opensearch-configuration-samples.html\"> <i>Amazon OpenSearch Service Developer Guide</i> </a>. The guide also contains <a href=\"https://docs.aws.amazon.com/opensearch-service/latest/developerguide/request-signing.html\">sample code</a> for sending signed HTTP requests to the OpenSearch APIs. The endpoint for configuration service requests is Region specific: es.<i>region</i>.amazonaws.com. For example, es.us-east-1.amazonaws.com. For a current list of supported Regions and endpoints, see <a href=\"https://docs.aws.amazon.com/general/latest/gr/rande.html#service-regions\">Amazon Web Services service endpoints</a>.</p>
 *
 * The version of the OpenAPI document: 2021-01-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIAdvancedOptionsStatus.h
 *
 * &lt;p&gt;Status of the advanced options for the specified domain. The following options are available: &lt;/p&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt; &lt;code&gt;\&quot;rest.action.multi.allow_explicit_index\&quot;: \&quot;true\&quot; | \&quot;false\&quot;&lt;/code&gt; - Note the use of a string rather than a boolean. Specifies whether explicit references to indexes are allowed inside the body of HTTP requests. If you want to configure access policies for domain sub-resources, such as specific indexes and domain APIs, you must disable this property. Default is true.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt; &lt;code&gt;\&quot;indices.fielddata.cache.size\&quot;: \&quot;80\&quot; &lt;/code&gt; - Note the use of a string rather than a boolean. Specifies the percentage of heap space allocated to field data. Default is unbounded.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt; &lt;code&gt;\&quot;indices.query.bool.max_clause_count\&quot;: \&quot;1024\&quot;&lt;/code&gt; - Note the use of a string rather than a boolean. Specifies the maximum number of clauses allowed in a Lucene boolean query. Default is 1,024. Queries with more than the permitted number of clauses result in a &lt;code&gt;TooManyClauses&lt;/code&gt; error.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt; &lt;code&gt;\&quot;override_main_response_version\&quot;: \&quot;true\&quot; | \&quot;false\&quot;&lt;/code&gt; - Note the use of a string rather than a boolean. Specifies whether the domain reports its version as 7.10 to allow Elasticsearch OSS clients and plugins to continue working with it. Default is false when creating a domain and true when upgrading a domain.&lt;/p&gt; &lt;/li&gt; &lt;/ul&gt; &lt;p&gt;For more information, see &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/opensearch-service/latest/developerguide/createupdatedomains.html#createdomain-configure-advanced-options\&quot;&gt;Advanced cluster parameters&lt;/a&gt;.&lt;/p&gt;
 */

#ifndef OAIAdvancedOptionsStatus_H
#define OAIAdvancedOptionsStatus_H

#include <QJsonObject>

#include "OAIAdvancedOptionsStatus_Status.h"
#include <QMap>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIAdvancedOptionsStatus_Status;

class OAIAdvancedOptionsStatus : public OAIObject {
public:
    OAIAdvancedOptionsStatus();
    OAIAdvancedOptionsStatus(QString json);
    ~OAIAdvancedOptionsStatus() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QMap getOptions() const;
    void setOptions(const QMap &options);
    bool is_options_Set() const;
    bool is_options_Valid() const;

    OAIAdvancedOptionsStatus_Status getStatus() const;
    void setStatus(const OAIAdvancedOptionsStatus_Status &status);
    bool is_status_Set() const;
    bool is_status_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QMap m_options;
    bool m_options_isSet;
    bool m_options_isValid;

    OAIAdvancedOptionsStatus_Status m_status;
    bool m_status_isSet;
    bool m_status_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIAdvancedOptionsStatus)

#endif // OAIAdvancedOptionsStatus_H
