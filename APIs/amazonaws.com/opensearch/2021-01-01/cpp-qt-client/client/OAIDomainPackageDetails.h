/**
 * Amazon OpenSearch Service
 * <p>Use the Amazon OpenSearch Service configuration API to create, configure, and manage OpenSearch Service domains.</p> <p>For sample code that uses the configuration API, see the <a href=\"https://docs.aws.amazon.com/opensearch-service/latest/developerguide/opensearch-configuration-samples.html\"> <i>Amazon OpenSearch Service Developer Guide</i> </a>. The guide also contains <a href=\"https://docs.aws.amazon.com/opensearch-service/latest/developerguide/request-signing.html\">sample code</a> for sending signed HTTP requests to the OpenSearch APIs. The endpoint for configuration service requests is Region specific: es.<i>region</i>.amazonaws.com. For example, es.us-east-1.amazonaws.com. For a current list of supported Regions and endpoints, see <a href=\"https://docs.aws.amazon.com/general/latest/gr/rande.html#service-regions\">Amazon Web Services service endpoints</a>.</p>
 *
 * The version of the OpenAPI document: 2021-01-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIDomainPackageDetails.h
 *
 * Information about a package that is associated with a domain. For more information, see &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/opensearch-service/latest/developerguide/custom-packages.html\&quot;&gt;Custom packages for Amazon OpenSearch Service&lt;/a&gt;.
 */

#ifndef OAIDomainPackageDetails_H
#define OAIDomainPackageDetails_H

#include <QJsonObject>

#include "OAIDomainPackageDetails_ErrorDetails.h"
#include "OAIDomainPackageStatus.h"
#include "OAIPackageType.h"
#include <QDateTime>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIDomainPackageDetails_ErrorDetails;

class OAIDomainPackageDetails : public OAIObject {
public:
    OAIDomainPackageDetails();
    OAIDomainPackageDetails(QString json);
    ~OAIDomainPackageDetails() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getPackageId() const;
    void setPackageId(const QString &package_id);
    bool is_package_id_Set() const;
    bool is_package_id_Valid() const;

    QString getPackageName() const;
    void setPackageName(const QString &package_name);
    bool is_package_name_Set() const;
    bool is_package_name_Valid() const;

    OAIPackageType getPackageType() const;
    void setPackageType(const OAIPackageType &package_type);
    bool is_package_type_Set() const;
    bool is_package_type_Valid() const;

    QDateTime getLastUpdated() const;
    void setLastUpdated(const QDateTime &last_updated);
    bool is_last_updated_Set() const;
    bool is_last_updated_Valid() const;

    QString getDomainName() const;
    void setDomainName(const QString &domain_name);
    bool is_domain_name_Set() const;
    bool is_domain_name_Valid() const;

    OAIDomainPackageStatus getDomainPackageStatus() const;
    void setDomainPackageStatus(const OAIDomainPackageStatus &domain_package_status);
    bool is_domain_package_status_Set() const;
    bool is_domain_package_status_Valid() const;

    QString getPackageVersion() const;
    void setPackageVersion(const QString &package_version);
    bool is_package_version_Set() const;
    bool is_package_version_Valid() const;

    QString getReferencePath() const;
    void setReferencePath(const QString &reference_path);
    bool is_reference_path_Set() const;
    bool is_reference_path_Valid() const;

    OAIDomainPackageDetails_ErrorDetails getErrorDetails() const;
    void setErrorDetails(const OAIDomainPackageDetails_ErrorDetails &error_details);
    bool is_error_details_Set() const;
    bool is_error_details_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_package_id;
    bool m_package_id_isSet;
    bool m_package_id_isValid;

    QString m_package_name;
    bool m_package_name_isSet;
    bool m_package_name_isValid;

    OAIPackageType m_package_type;
    bool m_package_type_isSet;
    bool m_package_type_isValid;

    QDateTime m_last_updated;
    bool m_last_updated_isSet;
    bool m_last_updated_isValid;

    QString m_domain_name;
    bool m_domain_name_isSet;
    bool m_domain_name_isValid;

    OAIDomainPackageStatus m_domain_package_status;
    bool m_domain_package_status_isSet;
    bool m_domain_package_status_isValid;

    QString m_package_version;
    bool m_package_version_isSet;
    bool m_package_version_isValid;

    QString m_reference_path;
    bool m_reference_path_isSet;
    bool m_reference_path_isValid;

    OAIDomainPackageDetails_ErrorDetails m_error_details;
    bool m_error_details_isSet;
    bool m_error_details_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIDomainPackageDetails)

#endif // OAIDomainPackageDetails_H
