/**
 * Amazon OpenSearch Service
 * <p>Use the Amazon OpenSearch Service configuration API to create, configure, and manage OpenSearch Service domains.</p> <p>For sample code that uses the configuration API, see the <a href=\"https://docs.aws.amazon.com/opensearch-service/latest/developerguide/opensearch-configuration-samples.html\"> <i>Amazon OpenSearch Service Developer Guide</i> </a>. The guide also contains <a href=\"https://docs.aws.amazon.com/opensearch-service/latest/developerguide/request-signing.html\">sample code</a> for sending signed HTTP requests to the OpenSearch APIs. The endpoint for configuration service requests is Region specific: es.<i>region</i>.amazonaws.com. For example, es.us-east-1.amazonaws.com. For a current list of supported Regions and endpoints, see <a href=\"https://docs.aws.amazon.com/general/latest/gr/rande.html#service-regions\">Amazon Web Services service endpoints</a>.</p>
 *
 * The version of the OpenAPI document: 2021-01-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIUpdateDomainConfigRequest.h
 *
 * Container for the request parameters to the &lt;code&gt;UpdateDomain&lt;/code&gt; operation.
 */

#ifndef OAIUpdateDomainConfigRequest_H
#define OAIUpdateDomainConfigRequest_H

#include <QJsonObject>

#include "OAICreateDomainRequest_AdvancedSecurityOptions.h"
#include "OAICreateDomainRequest_DomainEndpointOptions.h"
#include "OAIDomainStatus_CognitoOptions.h"
#include "OAIDomainStatus_SoftwareUpdateOptions.h"
#include "OAIDryRunMode.h"
#include "OAIUpdateDomainConfigRequest_AutoTuneOptions.h"
#include "OAIUpdateDomainConfigRequest_ClusterConfig.h"
#include "OAIUpdateDomainConfigRequest_EBSOptions.h"
#include "OAIUpdateDomainConfigRequest_EncryptionAtRestOptions.h"
#include "OAIUpdateDomainConfigRequest_NodeToNodeEncryptionOptions.h"
#include "OAIUpdateDomainConfigRequest_OffPeakWindowOptions.h"
#include "OAIUpdateDomainConfigRequest_SnapshotOptions.h"
#include "OAIUpdateDomainConfigRequest_VPCOptions.h"
#include <QMap>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIUpdateDomainConfigRequest_ClusterConfig;
class OAIUpdateDomainConfigRequest_EBSOptions;
class OAIUpdateDomainConfigRequest_SnapshotOptions;
class OAIUpdateDomainConfigRequest_VPCOptions;
class OAIDomainStatus_CognitoOptions;
class OAIUpdateDomainConfigRequest_EncryptionAtRestOptions;
class OAICreateDomainRequest_DomainEndpointOptions;
class OAIUpdateDomainConfigRequest_NodeToNodeEncryptionOptions;
class OAICreateDomainRequest_AdvancedSecurityOptions;
class OAIUpdateDomainConfigRequest_AutoTuneOptions;
class OAIUpdateDomainConfigRequest_OffPeakWindowOptions;
class OAIDomainStatus_SoftwareUpdateOptions;

class OAIUpdateDomainConfigRequest : public OAIObject {
public:
    OAIUpdateDomainConfigRequest();
    OAIUpdateDomainConfigRequest(QString json);
    ~OAIUpdateDomainConfigRequest() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAIUpdateDomainConfigRequest_ClusterConfig getClusterConfig() const;
    void setClusterConfig(const OAIUpdateDomainConfigRequest_ClusterConfig &cluster_config);
    bool is_cluster_config_Set() const;
    bool is_cluster_config_Valid() const;

    OAIUpdateDomainConfigRequest_EBSOptions getEbsOptions() const;
    void setEbsOptions(const OAIUpdateDomainConfigRequest_EBSOptions &ebs_options);
    bool is_ebs_options_Set() const;
    bool is_ebs_options_Valid() const;

    OAIUpdateDomainConfigRequest_SnapshotOptions getSnapshotOptions() const;
    void setSnapshotOptions(const OAIUpdateDomainConfigRequest_SnapshotOptions &snapshot_options);
    bool is_snapshot_options_Set() const;
    bool is_snapshot_options_Valid() const;

    OAIUpdateDomainConfigRequest_VPCOptions getVpcOptions() const;
    void setVpcOptions(const OAIUpdateDomainConfigRequest_VPCOptions &vpc_options);
    bool is_vpc_options_Set() const;
    bool is_vpc_options_Valid() const;

    OAIDomainStatus_CognitoOptions getCognitoOptions() const;
    void setCognitoOptions(const OAIDomainStatus_CognitoOptions &cognito_options);
    bool is_cognito_options_Set() const;
    bool is_cognito_options_Valid() const;

    QMap getAdvancedOptions() const;
    void setAdvancedOptions(const QMap &advanced_options);
    bool is_advanced_options_Set() const;
    bool is_advanced_options_Valid() const;

    QString getAccessPolicies() const;
    void setAccessPolicies(const QString &access_policies);
    bool is_access_policies_Set() const;
    bool is_access_policies_Valid() const;

    QMap getLogPublishingOptions() const;
    void setLogPublishingOptions(const QMap &log_publishing_options);
    bool is_log_publishing_options_Set() const;
    bool is_log_publishing_options_Valid() const;

    OAIUpdateDomainConfigRequest_EncryptionAtRestOptions getEncryptionAtRestOptions() const;
    void setEncryptionAtRestOptions(const OAIUpdateDomainConfigRequest_EncryptionAtRestOptions &encryption_at_rest_options);
    bool is_encryption_at_rest_options_Set() const;
    bool is_encryption_at_rest_options_Valid() const;

    OAICreateDomainRequest_DomainEndpointOptions getDomainEndpointOptions() const;
    void setDomainEndpointOptions(const OAICreateDomainRequest_DomainEndpointOptions &domain_endpoint_options);
    bool is_domain_endpoint_options_Set() const;
    bool is_domain_endpoint_options_Valid() const;

    OAIUpdateDomainConfigRequest_NodeToNodeEncryptionOptions getNodeToNodeEncryptionOptions() const;
    void setNodeToNodeEncryptionOptions(const OAIUpdateDomainConfigRequest_NodeToNodeEncryptionOptions &node_to_node_encryption_options);
    bool is_node_to_node_encryption_options_Set() const;
    bool is_node_to_node_encryption_options_Valid() const;

    OAICreateDomainRequest_AdvancedSecurityOptions getAdvancedSecurityOptions() const;
    void setAdvancedSecurityOptions(const OAICreateDomainRequest_AdvancedSecurityOptions &advanced_security_options);
    bool is_advanced_security_options_Set() const;
    bool is_advanced_security_options_Valid() const;

    OAIUpdateDomainConfigRequest_AutoTuneOptions getAutoTuneOptions() const;
    void setAutoTuneOptions(const OAIUpdateDomainConfigRequest_AutoTuneOptions &auto_tune_options);
    bool is_auto_tune_options_Set() const;
    bool is_auto_tune_options_Valid() const;

    bool getDryRun() const;
    void setDryRun(const bool &dry_run);
    bool is_dry_run_Set() const;
    bool is_dry_run_Valid() const;

    OAIDryRunMode getDryRunMode() const;
    void setDryRunMode(const OAIDryRunMode &dry_run_mode);
    bool is_dry_run_mode_Set() const;
    bool is_dry_run_mode_Valid() const;

    OAIUpdateDomainConfigRequest_OffPeakWindowOptions getOffPeakWindowOptions() const;
    void setOffPeakWindowOptions(const OAIUpdateDomainConfigRequest_OffPeakWindowOptions &off_peak_window_options);
    bool is_off_peak_window_options_Set() const;
    bool is_off_peak_window_options_Valid() const;

    OAIDomainStatus_SoftwareUpdateOptions getSoftwareUpdateOptions() const;
    void setSoftwareUpdateOptions(const OAIDomainStatus_SoftwareUpdateOptions &software_update_options);
    bool is_software_update_options_Set() const;
    bool is_software_update_options_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAIUpdateDomainConfigRequest_ClusterConfig m_cluster_config;
    bool m_cluster_config_isSet;
    bool m_cluster_config_isValid;

    OAIUpdateDomainConfigRequest_EBSOptions m_ebs_options;
    bool m_ebs_options_isSet;
    bool m_ebs_options_isValid;

    OAIUpdateDomainConfigRequest_SnapshotOptions m_snapshot_options;
    bool m_snapshot_options_isSet;
    bool m_snapshot_options_isValid;

    OAIUpdateDomainConfigRequest_VPCOptions m_vpc_options;
    bool m_vpc_options_isSet;
    bool m_vpc_options_isValid;

    OAIDomainStatus_CognitoOptions m_cognito_options;
    bool m_cognito_options_isSet;
    bool m_cognito_options_isValid;

    QMap m_advanced_options;
    bool m_advanced_options_isSet;
    bool m_advanced_options_isValid;

    QString m_access_policies;
    bool m_access_policies_isSet;
    bool m_access_policies_isValid;

    QMap m_log_publishing_options;
    bool m_log_publishing_options_isSet;
    bool m_log_publishing_options_isValid;

    OAIUpdateDomainConfigRequest_EncryptionAtRestOptions m_encryption_at_rest_options;
    bool m_encryption_at_rest_options_isSet;
    bool m_encryption_at_rest_options_isValid;

    OAICreateDomainRequest_DomainEndpointOptions m_domain_endpoint_options;
    bool m_domain_endpoint_options_isSet;
    bool m_domain_endpoint_options_isValid;

    OAIUpdateDomainConfigRequest_NodeToNodeEncryptionOptions m_node_to_node_encryption_options;
    bool m_node_to_node_encryption_options_isSet;
    bool m_node_to_node_encryption_options_isValid;

    OAICreateDomainRequest_AdvancedSecurityOptions m_advanced_security_options;
    bool m_advanced_security_options_isSet;
    bool m_advanced_security_options_isValid;

    OAIUpdateDomainConfigRequest_AutoTuneOptions m_auto_tune_options;
    bool m_auto_tune_options_isSet;
    bool m_auto_tune_options_isValid;

    bool m_dry_run;
    bool m_dry_run_isSet;
    bool m_dry_run_isValid;

    OAIDryRunMode m_dry_run_mode;
    bool m_dry_run_mode_isSet;
    bool m_dry_run_mode_isValid;

    OAIUpdateDomainConfigRequest_OffPeakWindowOptions m_off_peak_window_options;
    bool m_off_peak_window_options_isSet;
    bool m_off_peak_window_options_isValid;

    OAIDomainStatus_SoftwareUpdateOptions m_software_update_options;
    bool m_software_update_options_isSet;
    bool m_software_update_options_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIUpdateDomainConfigRequest)

#endif // OAIUpdateDomainConfigRequest_H
