/**
 * Amazon OpenSearch Service
 * <p>Use the Amazon OpenSearch Service configuration API to create, configure, and manage OpenSearch Service domains.</p> <p>For sample code that uses the configuration API, see the <a href=\"https://docs.aws.amazon.com/opensearch-service/latest/developerguide/opensearch-configuration-samples.html\"> <i>Amazon OpenSearch Service Developer Guide</i> </a>. The guide also contains <a href=\"https://docs.aws.amazon.com/opensearch-service/latest/developerguide/request-signing.html\">sample code</a> for sending signed HTTP requests to the OpenSearch APIs. The endpoint for configuration service requests is Region specific: es.<i>region</i>.amazonaws.com. For example, es.us-east-1.amazonaws.com. For a current list of supported Regions and endpoints, see <a href=\"https://docs.aws.amazon.com/general/latest/gr/rande.html#service-regions\">Amazon Web Services service endpoints</a>.</p>
 *
 * The version of the OpenAPI document: 2021-01-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIPurchaseReservedInstanceOfferingRequest.h
 *
 * Container for request parameters to the &lt;code&gt;PurchaseReservedInstanceOffering&lt;/code&gt; operation.
 */

#ifndef OAIPurchaseReservedInstanceOfferingRequest_H
#define OAIPurchaseReservedInstanceOfferingRequest_H

#include <QJsonObject>

#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIPurchaseReservedInstanceOfferingRequest : public OAIObject {
public:
    OAIPurchaseReservedInstanceOfferingRequest();
    OAIPurchaseReservedInstanceOfferingRequest(QString json);
    ~OAIPurchaseReservedInstanceOfferingRequest() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getReservedInstanceOfferingId() const;
    void setReservedInstanceOfferingId(const QString &reserved_instance_offering_id);
    bool is_reserved_instance_offering_id_Set() const;
    bool is_reserved_instance_offering_id_Valid() const;

    QString getReservationName() const;
    void setReservationName(const QString &reservation_name);
    bool is_reservation_name_Set() const;
    bool is_reservation_name_Valid() const;

    qint32 getInstanceCount() const;
    void setInstanceCount(const qint32 &instance_count);
    bool is_instance_count_Set() const;
    bool is_instance_count_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_reserved_instance_offering_id;
    bool m_reserved_instance_offering_id_isSet;
    bool m_reserved_instance_offering_id_isValid;

    QString m_reservation_name;
    bool m_reservation_name_isSet;
    bool m_reservation_name_isValid;

    qint32 m_instance_count;
    bool m_instance_count_isSet;
    bool m_instance_count_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIPurchaseReservedInstanceOfferingRequest)

#endif // OAIPurchaseReservedInstanceOfferingRequest_H
