/**
 * Amazon OpenSearch Service
 * <p>Use the Amazon OpenSearch Service configuration API to create, configure, and manage OpenSearch Service domains.</p> <p>For sample code that uses the configuration API, see the <a href=\"https://docs.aws.amazon.com/opensearch-service/latest/developerguide/opensearch-configuration-samples.html\"> <i>Amazon OpenSearch Service Developer Guide</i> </a>. The guide also contains <a href=\"https://docs.aws.amazon.com/opensearch-service/latest/developerguide/request-signing.html\">sample code</a> for sending signed HTTP requests to the OpenSearch APIs. The endpoint for configuration service requests is Region specific: es.<i>region</i>.amazonaws.com. For example, es.us-east-1.amazonaws.com. For a current list of supported Regions and endpoints, see <a href=\"https://docs.aws.amazon.com/general/latest/gr/rande.html#service-regions\">Amazon Web Services service endpoints</a>.</p>
 *
 * The version of the OpenAPI document: 2021-01-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIOutboundConnection.h
 *
 * Specifies details about an outbound cross-cluster connection.
 */

#ifndef OAIOutboundConnection_H
#define OAIOutboundConnection_H

#include <QJsonObject>

#include "OAIConnectionMode.h"
#include "OAICreateOutboundConnectionResponse_LocalDomainInfo.h"
#include "OAICreateOutboundConnectionResponse_RemoteDomainInfo.h"
#include "OAIOutboundConnection_ConnectionProperties.h"
#include "OAIOutboundConnection_ConnectionStatus.h"
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAICreateOutboundConnectionResponse_LocalDomainInfo;
class OAICreateOutboundConnectionResponse_RemoteDomainInfo;
class OAIOutboundConnection_ConnectionStatus;
class OAIOutboundConnection_ConnectionProperties;

class OAIOutboundConnection : public OAIObject {
public:
    OAIOutboundConnection();
    OAIOutboundConnection(QString json);
    ~OAIOutboundConnection() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAICreateOutboundConnectionResponse_LocalDomainInfo getLocalDomainInfo() const;
    void setLocalDomainInfo(const OAICreateOutboundConnectionResponse_LocalDomainInfo &local_domain_info);
    bool is_local_domain_info_Set() const;
    bool is_local_domain_info_Valid() const;

    OAICreateOutboundConnectionResponse_RemoteDomainInfo getRemoteDomainInfo() const;
    void setRemoteDomainInfo(const OAICreateOutboundConnectionResponse_RemoteDomainInfo &remote_domain_info);
    bool is_remote_domain_info_Set() const;
    bool is_remote_domain_info_Valid() const;

    QString getConnectionId() const;
    void setConnectionId(const QString &connection_id);
    bool is_connection_id_Set() const;
    bool is_connection_id_Valid() const;

    QString getConnectionAlias() const;
    void setConnectionAlias(const QString &connection_alias);
    bool is_connection_alias_Set() const;
    bool is_connection_alias_Valid() const;

    OAIOutboundConnection_ConnectionStatus getConnectionStatus() const;
    void setConnectionStatus(const OAIOutboundConnection_ConnectionStatus &connection_status);
    bool is_connection_status_Set() const;
    bool is_connection_status_Valid() const;

    OAIConnectionMode getConnectionMode() const;
    void setConnectionMode(const OAIConnectionMode &connection_mode);
    bool is_connection_mode_Set() const;
    bool is_connection_mode_Valid() const;

    OAIOutboundConnection_ConnectionProperties getConnectionProperties() const;
    void setConnectionProperties(const OAIOutboundConnection_ConnectionProperties &connection_properties);
    bool is_connection_properties_Set() const;
    bool is_connection_properties_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAICreateOutboundConnectionResponse_LocalDomainInfo m_local_domain_info;
    bool m_local_domain_info_isSet;
    bool m_local_domain_info_isValid;

    OAICreateOutboundConnectionResponse_RemoteDomainInfo m_remote_domain_info;
    bool m_remote_domain_info_isSet;
    bool m_remote_domain_info_isValid;

    QString m_connection_id;
    bool m_connection_id_isSet;
    bool m_connection_id_isValid;

    QString m_connection_alias;
    bool m_connection_alias_isSet;
    bool m_connection_alias_isValid;

    OAIOutboundConnection_ConnectionStatus m_connection_status;
    bool m_connection_status_isSet;
    bool m_connection_status_isValid;

    OAIConnectionMode m_connection_mode;
    bool m_connection_mode_isSet;
    bool m_connection_mode_isValid;

    OAIOutboundConnection_ConnectionProperties m_connection_properties;
    bool m_connection_properties_isSet;
    bool m_connection_properties_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIOutboundConnection)

#endif // OAIOutboundConnection_H
