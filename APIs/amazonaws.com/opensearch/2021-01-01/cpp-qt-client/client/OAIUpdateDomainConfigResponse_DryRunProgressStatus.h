/**
 * Amazon OpenSearch Service
 * <p>Use the Amazon OpenSearch Service configuration API to create, configure, and manage OpenSearch Service domains.</p> <p>For sample code that uses the configuration API, see the <a href=\"https://docs.aws.amazon.com/opensearch-service/latest/developerguide/opensearch-configuration-samples.html\"> <i>Amazon OpenSearch Service Developer Guide</i> </a>. The guide also contains <a href=\"https://docs.aws.amazon.com/opensearch-service/latest/developerguide/request-signing.html\">sample code</a> for sending signed HTTP requests to the OpenSearch APIs. The endpoint for configuration service requests is Region specific: es.<i>region</i>.amazonaws.com. For example, es.us-east-1.amazonaws.com. For a current list of supported Regions and endpoints, see <a href=\"https://docs.aws.amazon.com/general/latest/gr/rande.html#service-regions\">Amazon Web Services service endpoints</a>.</p>
 *
 * The version of the OpenAPI document: 2021-01-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIUpdateDomainConfigResponse_DryRunProgressStatus.h
 *
 * 
 */

#ifndef OAIUpdateDomainConfigResponse_DryRunProgressStatus_H
#define OAIUpdateDomainConfigResponse_DryRunProgressStatus_H

#include <QJsonObject>

#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIUpdateDomainConfigResponse_DryRunProgressStatus : public OAIObject {
public:
    OAIUpdateDomainConfigResponse_DryRunProgressStatus();
    OAIUpdateDomainConfigResponse_DryRunProgressStatus(QString json);
    ~OAIUpdateDomainConfigResponse_DryRunProgressStatus() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getDryRunId() const;
    void setDryRunId(const QString &dry_run_id);
    bool is_dry_run_id_Set() const;
    bool is_dry_run_id_Valid() const;

    QString getDryRunStatus() const;
    void setDryRunStatus(const QString &dry_run_status);
    bool is_dry_run_status_Set() const;
    bool is_dry_run_status_Valid() const;

    QString getCreationDate() const;
    void setCreationDate(const QString &creation_date);
    bool is_creation_date_Set() const;
    bool is_creation_date_Valid() const;

    QString getUpdateDate() const;
    void setUpdateDate(const QString &update_date);
    bool is_update_date_Set() const;
    bool is_update_date_Valid() const;

    QList getValidationFailures() const;
    void setValidationFailures(const QList &validation_failures);
    bool is_validation_failures_Set() const;
    bool is_validation_failures_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_dry_run_id;
    bool m_dry_run_id_isSet;
    bool m_dry_run_id_isValid;

    QString m_dry_run_status;
    bool m_dry_run_status_isSet;
    bool m_dry_run_status_isValid;

    QString m_creation_date;
    bool m_creation_date_isSet;
    bool m_creation_date_isValid;

    QString m_update_date;
    bool m_update_date_isSet;
    bool m_update_date_isValid;

    QList m_validation_failures;
    bool m_validation_failures_isSet;
    bool m_validation_failures_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIUpdateDomainConfigResponse_DryRunProgressStatus)

#endif // OAIUpdateDomainConfigResponse_DryRunProgressStatus_H
