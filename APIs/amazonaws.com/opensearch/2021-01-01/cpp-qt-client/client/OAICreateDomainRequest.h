/**
 * Amazon OpenSearch Service
 * <p>Use the Amazon OpenSearch Service configuration API to create, configure, and manage OpenSearch Service domains.</p> <p>For sample code that uses the configuration API, see the <a href=\"https://docs.aws.amazon.com/opensearch-service/latest/developerguide/opensearch-configuration-samples.html\"> <i>Amazon OpenSearch Service Developer Guide</i> </a>. The guide also contains <a href=\"https://docs.aws.amazon.com/opensearch-service/latest/developerguide/request-signing.html\">sample code</a> for sending signed HTTP requests to the OpenSearch APIs. The endpoint for configuration service requests is Region specific: es.<i>region</i>.amazonaws.com. For example, es.us-east-1.amazonaws.com. For a current list of supported Regions and endpoints, see <a href=\"https://docs.aws.amazon.com/general/latest/gr/rande.html#service-regions\">Amazon Web Services service endpoints</a>.</p>
 *
 * The version of the OpenAPI document: 2021-01-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAICreateDomainRequest.h
 *
 * 
 */

#ifndef OAICreateDomainRequest_H
#define OAICreateDomainRequest_H

#include <QJsonObject>

#include "OAICreateDomainRequest_AdvancedSecurityOptions.h"
#include "OAICreateDomainRequest_AutoTuneOptions.h"
#include "OAICreateDomainRequest_ClusterConfig.h"
#include "OAICreateDomainRequest_CognitoOptions.h"
#include "OAICreateDomainRequest_DomainEndpointOptions.h"
#include "OAICreateDomainRequest_EBSOptions.h"
#include "OAICreateDomainRequest_EncryptionAtRestOptions.h"
#include "OAICreateDomainRequest_NodeToNodeEncryptionOptions.h"
#include "OAICreateDomainRequest_OffPeakWindowOptions.h"
#include "OAICreateDomainRequest_SnapshotOptions.h"
#include "OAICreateDomainRequest_SoftwareUpdateOptions.h"
#include "OAICreateDomainRequest_VPCOptions.h"
#include <QList>
#include <QMap>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAICreateDomainRequest_ClusterConfig;
class OAICreateDomainRequest_EBSOptions;
class OAICreateDomainRequest_SnapshotOptions;
class OAICreateDomainRequest_VPCOptions;
class OAICreateDomainRequest_CognitoOptions;
class OAICreateDomainRequest_EncryptionAtRestOptions;
class OAICreateDomainRequest_NodeToNodeEncryptionOptions;
class OAICreateDomainRequest_DomainEndpointOptions;
class OAICreateDomainRequest_AdvancedSecurityOptions;
class OAICreateDomainRequest_AutoTuneOptions;
class OAICreateDomainRequest_OffPeakWindowOptions;
class OAICreateDomainRequest_SoftwareUpdateOptions;

class OAICreateDomainRequest : public OAIObject {
public:
    OAICreateDomainRequest();
    OAICreateDomainRequest(QString json);
    ~OAICreateDomainRequest() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getDomainName() const;
    void setDomainName(const QString &domain_name);
    bool is_domain_name_Set() const;
    bool is_domain_name_Valid() const;

    QString getEngineVersion() const;
    void setEngineVersion(const QString &engine_version);
    bool is_engine_version_Set() const;
    bool is_engine_version_Valid() const;

    OAICreateDomainRequest_ClusterConfig getClusterConfig() const;
    void setClusterConfig(const OAICreateDomainRequest_ClusterConfig &cluster_config);
    bool is_cluster_config_Set() const;
    bool is_cluster_config_Valid() const;

    OAICreateDomainRequest_EBSOptions getEbsOptions() const;
    void setEbsOptions(const OAICreateDomainRequest_EBSOptions &ebs_options);
    bool is_ebs_options_Set() const;
    bool is_ebs_options_Valid() const;

    QString getAccessPolicies() const;
    void setAccessPolicies(const QString &access_policies);
    bool is_access_policies_Set() const;
    bool is_access_policies_Valid() const;

    OAICreateDomainRequest_SnapshotOptions getSnapshotOptions() const;
    void setSnapshotOptions(const OAICreateDomainRequest_SnapshotOptions &snapshot_options);
    bool is_snapshot_options_Set() const;
    bool is_snapshot_options_Valid() const;

    OAICreateDomainRequest_VPCOptions getVpcOptions() const;
    void setVpcOptions(const OAICreateDomainRequest_VPCOptions &vpc_options);
    bool is_vpc_options_Set() const;
    bool is_vpc_options_Valid() const;

    OAICreateDomainRequest_CognitoOptions getCognitoOptions() const;
    void setCognitoOptions(const OAICreateDomainRequest_CognitoOptions &cognito_options);
    bool is_cognito_options_Set() const;
    bool is_cognito_options_Valid() const;

    OAICreateDomainRequest_EncryptionAtRestOptions getEncryptionAtRestOptions() const;
    void setEncryptionAtRestOptions(const OAICreateDomainRequest_EncryptionAtRestOptions &encryption_at_rest_options);
    bool is_encryption_at_rest_options_Set() const;
    bool is_encryption_at_rest_options_Valid() const;

    OAICreateDomainRequest_NodeToNodeEncryptionOptions getNodeToNodeEncryptionOptions() const;
    void setNodeToNodeEncryptionOptions(const OAICreateDomainRequest_NodeToNodeEncryptionOptions &node_to_node_encryption_options);
    bool is_node_to_node_encryption_options_Set() const;
    bool is_node_to_node_encryption_options_Valid() const;

    QMap getAdvancedOptions() const;
    void setAdvancedOptions(const QMap &advanced_options);
    bool is_advanced_options_Set() const;
    bool is_advanced_options_Valid() const;

    QMap getLogPublishingOptions() const;
    void setLogPublishingOptions(const QMap &log_publishing_options);
    bool is_log_publishing_options_Set() const;
    bool is_log_publishing_options_Valid() const;

    OAICreateDomainRequest_DomainEndpointOptions getDomainEndpointOptions() const;
    void setDomainEndpointOptions(const OAICreateDomainRequest_DomainEndpointOptions &domain_endpoint_options);
    bool is_domain_endpoint_options_Set() const;
    bool is_domain_endpoint_options_Valid() const;

    OAICreateDomainRequest_AdvancedSecurityOptions getAdvancedSecurityOptions() const;
    void setAdvancedSecurityOptions(const OAICreateDomainRequest_AdvancedSecurityOptions &advanced_security_options);
    bool is_advanced_security_options_Set() const;
    bool is_advanced_security_options_Valid() const;

    QList getTagList() const;
    void setTagList(const QList &tag_list);
    bool is_tag_list_Set() const;
    bool is_tag_list_Valid() const;

    OAICreateDomainRequest_AutoTuneOptions getAutoTuneOptions() const;
    void setAutoTuneOptions(const OAICreateDomainRequest_AutoTuneOptions &auto_tune_options);
    bool is_auto_tune_options_Set() const;
    bool is_auto_tune_options_Valid() const;

    OAICreateDomainRequest_OffPeakWindowOptions getOffPeakWindowOptions() const;
    void setOffPeakWindowOptions(const OAICreateDomainRequest_OffPeakWindowOptions &off_peak_window_options);
    bool is_off_peak_window_options_Set() const;
    bool is_off_peak_window_options_Valid() const;

    OAICreateDomainRequest_SoftwareUpdateOptions getSoftwareUpdateOptions() const;
    void setSoftwareUpdateOptions(const OAICreateDomainRequest_SoftwareUpdateOptions &software_update_options);
    bool is_software_update_options_Set() const;
    bool is_software_update_options_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_domain_name;
    bool m_domain_name_isSet;
    bool m_domain_name_isValid;

    QString m_engine_version;
    bool m_engine_version_isSet;
    bool m_engine_version_isValid;

    OAICreateDomainRequest_ClusterConfig m_cluster_config;
    bool m_cluster_config_isSet;
    bool m_cluster_config_isValid;

    OAICreateDomainRequest_EBSOptions m_ebs_options;
    bool m_ebs_options_isSet;
    bool m_ebs_options_isValid;

    QString m_access_policies;
    bool m_access_policies_isSet;
    bool m_access_policies_isValid;

    OAICreateDomainRequest_SnapshotOptions m_snapshot_options;
    bool m_snapshot_options_isSet;
    bool m_snapshot_options_isValid;

    OAICreateDomainRequest_VPCOptions m_vpc_options;
    bool m_vpc_options_isSet;
    bool m_vpc_options_isValid;

    OAICreateDomainRequest_CognitoOptions m_cognito_options;
    bool m_cognito_options_isSet;
    bool m_cognito_options_isValid;

    OAICreateDomainRequest_EncryptionAtRestOptions m_encryption_at_rest_options;
    bool m_encryption_at_rest_options_isSet;
    bool m_encryption_at_rest_options_isValid;

    OAICreateDomainRequest_NodeToNodeEncryptionOptions m_node_to_node_encryption_options;
    bool m_node_to_node_encryption_options_isSet;
    bool m_node_to_node_encryption_options_isValid;

    QMap m_advanced_options;
    bool m_advanced_options_isSet;
    bool m_advanced_options_isValid;

    QMap m_log_publishing_options;
    bool m_log_publishing_options_isSet;
    bool m_log_publishing_options_isValid;

    OAICreateDomainRequest_DomainEndpointOptions m_domain_endpoint_options;
    bool m_domain_endpoint_options_isSet;
    bool m_domain_endpoint_options_isValid;

    OAICreateDomainRequest_AdvancedSecurityOptions m_advanced_security_options;
    bool m_advanced_security_options_isSet;
    bool m_advanced_security_options_isValid;

    QList m_tag_list;
    bool m_tag_list_isSet;
    bool m_tag_list_isValid;

    OAICreateDomainRequest_AutoTuneOptions m_auto_tune_options;
    bool m_auto_tune_options_isSet;
    bool m_auto_tune_options_isValid;

    OAICreateDomainRequest_OffPeakWindowOptions m_off_peak_window_options;
    bool m_off_peak_window_options_isSet;
    bool m_off_peak_window_options_isValid;

    OAICreateDomainRequest_SoftwareUpdateOptions m_software_update_options;
    bool m_software_update_options_isSet;
    bool m_software_update_options_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAICreateDomainRequest)

#endif // OAICreateDomainRequest_H
