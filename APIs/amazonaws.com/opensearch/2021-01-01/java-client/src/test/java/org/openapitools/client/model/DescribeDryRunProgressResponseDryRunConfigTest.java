/*
 * Amazon OpenSearch Service
 * <p>Use the Amazon OpenSearch Service configuration API to create, configure, and manage OpenSearch Service domains.</p> <p>For sample code that uses the configuration API, see the <a href=\"https://docs.aws.amazon.com/opensearch-service/latest/developerguide/opensearch-configuration-samples.html\"> <i>Amazon OpenSearch Service Developer Guide</i> </a>. The guide also contains <a href=\"https://docs.aws.amazon.com/opensearch-service/latest/developerguide/request-signing.html\">sample code</a> for sending signed HTTP requests to the OpenSearch APIs. The endpoint for configuration service requests is Region specific: es.<i>region</i>.amazonaws.com. For example, es.us-east-1.amazonaws.com. For a current list of supported Regions and endpoints, see <a href=\"https://docs.aws.amazon.com/general/latest/gr/rande.html#service-regions\">Amazon Web Services service endpoints</a>.</p>
 *
 * The version of the OpenAPI document: 2021-01-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;
import java.util.Map;
import org.openapitools.client.model.CreateDomainRequestDomainEndpointOptions;
import org.openapitools.client.model.DomainStatusAdvancedSecurityOptions;
import org.openapitools.client.model.DomainStatusAutoTuneOptions;
import org.openapitools.client.model.DomainStatusChangeProgressDetails;
import org.openapitools.client.model.DomainStatusClusterConfig;
import org.openapitools.client.model.DomainStatusCognitoOptions;
import org.openapitools.client.model.DomainStatusEBSOptions;
import org.openapitools.client.model.DomainStatusEncryptionAtRestOptions;
import org.openapitools.client.model.DomainStatusNodeToNodeEncryptionOptions;
import org.openapitools.client.model.DomainStatusOffPeakWindowOptions;
import org.openapitools.client.model.DomainStatusServiceSoftwareOptions;
import org.openapitools.client.model.DomainStatusSnapshotOptions;
import org.openapitools.client.model.DomainStatusSoftwareUpdateOptions;
import org.openapitools.client.model.DomainStatusVPCOptions;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

/**
 * Model tests for DescribeDryRunProgressResponseDryRunConfig
 */
public class DescribeDryRunProgressResponseDryRunConfigTest {
    private final DescribeDryRunProgressResponseDryRunConfig model = new DescribeDryRunProgressResponseDryRunConfig();

    /**
     * Model tests for DescribeDryRunProgressResponseDryRunConfig
     */
    @Test
    public void testDescribeDryRunProgressResponseDryRunConfig() {
        // TODO: test DescribeDryRunProgressResponseDryRunConfig
    }

    /**
     * Test the property 'domainId'
     */
    @Test
    public void domainIdTest() {
        // TODO: test domainId
    }

    /**
     * Test the property 'domainName'
     */
    @Test
    public void domainNameTest() {
        // TODO: test domainName
    }

    /**
     * Test the property 'ARN'
     */
    @Test
    public void ARNTest() {
        // TODO: test ARN
    }

    /**
     * Test the property 'created'
     */
    @Test
    public void createdTest() {
        // TODO: test created
    }

    /**
     * Test the property 'deleted'
     */
    @Test
    public void deletedTest() {
        // TODO: test deleted
    }

    /**
     * Test the property 'endpoint'
     */
    @Test
    public void endpointTest() {
        // TODO: test endpoint
    }

    /**
     * Test the property 'endpoints'
     */
    @Test
    public void endpointsTest() {
        // TODO: test endpoints
    }

    /**
     * Test the property 'processing'
     */
    @Test
    public void processingTest() {
        // TODO: test processing
    }

    /**
     * Test the property 'upgradeProcessing'
     */
    @Test
    public void upgradeProcessingTest() {
        // TODO: test upgradeProcessing
    }

    /**
     * Test the property 'engineVersion'
     */
    @Test
    public void engineVersionTest() {
        // TODO: test engineVersion
    }

    /**
     * Test the property 'clusterConfig'
     */
    @Test
    public void clusterConfigTest() {
        // TODO: test clusterConfig
    }

    /**
     * Test the property 'ebSOptions'
     */
    @Test
    public void ebSOptionsTest() {
        // TODO: test ebSOptions
    }

    /**
     * Test the property 'accessPolicies'
     */
    @Test
    public void accessPoliciesTest() {
        // TODO: test accessPolicies
    }

    /**
     * Test the property 'snapshotOptions'
     */
    @Test
    public void snapshotOptionsTest() {
        // TODO: test snapshotOptions
    }

    /**
     * Test the property 'vpCOptions'
     */
    @Test
    public void vpCOptionsTest() {
        // TODO: test vpCOptions
    }

    /**
     * Test the property 'cognitoOptions'
     */
    @Test
    public void cognitoOptionsTest() {
        // TODO: test cognitoOptions
    }

    /**
     * Test the property 'encryptionAtRestOptions'
     */
    @Test
    public void encryptionAtRestOptionsTest() {
        // TODO: test encryptionAtRestOptions
    }

    /**
     * Test the property 'nodeToNodeEncryptionOptions'
     */
    @Test
    public void nodeToNodeEncryptionOptionsTest() {
        // TODO: test nodeToNodeEncryptionOptions
    }

    /**
     * Test the property 'advancedOptions'
     */
    @Test
    public void advancedOptionsTest() {
        // TODO: test advancedOptions
    }

    /**
     * Test the property 'logPublishingOptions'
     */
    @Test
    public void logPublishingOptionsTest() {
        // TODO: test logPublishingOptions
    }

    /**
     * Test the property 'serviceSoftwareOptions'
     */
    @Test
    public void serviceSoftwareOptionsTest() {
        // TODO: test serviceSoftwareOptions
    }

    /**
     * Test the property 'domainEndpointOptions'
     */
    @Test
    public void domainEndpointOptionsTest() {
        // TODO: test domainEndpointOptions
    }

    /**
     * Test the property 'advancedSecurityOptions'
     */
    @Test
    public void advancedSecurityOptionsTest() {
        // TODO: test advancedSecurityOptions
    }

    /**
     * Test the property 'autoTuneOptions'
     */
    @Test
    public void autoTuneOptionsTest() {
        // TODO: test autoTuneOptions
    }

    /**
     * Test the property 'changeProgressDetails'
     */
    @Test
    public void changeProgressDetailsTest() {
        // TODO: test changeProgressDetails
    }

    /**
     * Test the property 'offPeakWindowOptions'
     */
    @Test
    public void offPeakWindowOptionsTest() {
        // TODO: test offPeakWindowOptions
    }

    /**
     * Test the property 'softwareUpdateOptions'
     */
    @Test
    public void softwareUpdateOptionsTest() {
        // TODO: test softwareUpdateOptions
    }

}
