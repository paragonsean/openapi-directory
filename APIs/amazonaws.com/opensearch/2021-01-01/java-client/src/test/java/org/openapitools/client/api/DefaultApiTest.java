/*
 * Amazon OpenSearch Service
 * <p>Use the Amazon OpenSearch Service configuration API to create, configure, and manage OpenSearch Service domains.</p> <p>For sample code that uses the configuration API, see the <a href=\"https://docs.aws.amazon.com/opensearch-service/latest/developerguide/opensearch-configuration-samples.html\"> <i>Amazon OpenSearch Service Developer Guide</i> </a>. The guide also contains <a href=\"https://docs.aws.amazon.com/opensearch-service/latest/developerguide/request-signing.html\">sample code</a> for sending signed HTTP requests to the OpenSearch APIs. The endpoint for configuration service requests is Region specific: es.<i>region</i>.amazonaws.com. For example, es.us-east-1.amazonaws.com. For a current list of supported Regions and endpoints, see <a href=\"https://docs.aws.amazon.com/general/latest/gr/rande.html#service-regions\">Amazon Web Services service endpoints</a>.</p>
 *
 * The version of the OpenAPI document: 2021-01-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.AcceptInboundConnectionResponse;
import org.openapitools.client.model.AddTagsRequest;
import org.openapitools.client.model.AssociatePackageResponse;
import org.openapitools.client.model.AuthorizeVpcEndpointAccessRequest;
import org.openapitools.client.model.AuthorizeVpcEndpointAccessResponse;
import org.openapitools.client.model.CancelServiceSoftwareUpdateRequest;
import org.openapitools.client.model.CancelServiceSoftwareUpdateResponse;
import org.openapitools.client.model.CreateDomainRequest;
import org.openapitools.client.model.CreateDomainResponse;
import org.openapitools.client.model.CreateOutboundConnectionRequest;
import org.openapitools.client.model.CreateOutboundConnectionResponse;
import org.openapitools.client.model.CreatePackageRequest;
import org.openapitools.client.model.CreatePackageResponse;
import org.openapitools.client.model.CreateVpcEndpointRequest;
import org.openapitools.client.model.CreateVpcEndpointResponse;
import org.openapitools.client.model.DeleteDomainResponse;
import org.openapitools.client.model.DeleteInboundConnectionResponse;
import org.openapitools.client.model.DeleteOutboundConnectionResponse;
import org.openapitools.client.model.DeletePackageResponse;
import org.openapitools.client.model.DeleteVpcEndpointResponse;
import org.openapitools.client.model.DescribeDomainAutoTunesRequest;
import org.openapitools.client.model.DescribeDomainAutoTunesResponse;
import org.openapitools.client.model.DescribeDomainChangeProgressResponse;
import org.openapitools.client.model.DescribeDomainConfigResponse;
import org.openapitools.client.model.DescribeDomainHealthResponse;
import org.openapitools.client.model.DescribeDomainNodesResponse;
import org.openapitools.client.model.DescribeDomainResponse;
import org.openapitools.client.model.DescribeDomainsRequest;
import org.openapitools.client.model.DescribeDomainsResponse;
import org.openapitools.client.model.DescribeDryRunProgressResponse;
import org.openapitools.client.model.DescribeInboundConnectionsRequest;
import org.openapitools.client.model.DescribeInboundConnectionsResponse;
import org.openapitools.client.model.DescribeInstanceTypeLimitsResponse;
import org.openapitools.client.model.DescribeOutboundConnectionsRequest;
import org.openapitools.client.model.DescribeOutboundConnectionsResponse;
import org.openapitools.client.model.DescribePackagesRequest;
import org.openapitools.client.model.DescribePackagesResponse;
import org.openapitools.client.model.DescribeReservedInstanceOfferingsResponse;
import org.openapitools.client.model.DescribeReservedInstancesResponse;
import org.openapitools.client.model.DescribeVpcEndpointsRequest;
import org.openapitools.client.model.DescribeVpcEndpointsResponse;
import org.openapitools.client.model.DissociatePackageResponse;
import org.openapitools.client.model.GetCompatibleVersionsResponse;
import org.openapitools.client.model.GetPackageVersionHistoryResponse;
import org.openapitools.client.model.GetUpgradeHistoryResponse;
import org.openapitools.client.model.GetUpgradeStatusResponse;
import org.openapitools.client.model.ListDomainNamesResponse;
import org.openapitools.client.model.ListDomainsForPackageResponse;
import org.openapitools.client.model.ListInstanceTypeDetailsResponse;
import org.openapitools.client.model.ListPackagesForDomainResponse;
import org.openapitools.client.model.ListScheduledActionsResponse;
import org.openapitools.client.model.ListTagsResponse;
import org.openapitools.client.model.ListVersionsResponse;
import org.openapitools.client.model.ListVpcEndpointAccessResponse;
import org.openapitools.client.model.ListVpcEndpointsForDomainResponse;
import org.openapitools.client.model.ListVpcEndpointsResponse;
import org.openapitools.client.model.PurchaseReservedInstanceOfferingRequest;
import org.openapitools.client.model.PurchaseReservedInstanceOfferingResponse;
import org.openapitools.client.model.RejectInboundConnectionResponse;
import org.openapitools.client.model.RemoveTagsRequest;
import org.openapitools.client.model.RevokeVpcEndpointAccessRequest;
import org.openapitools.client.model.StartServiceSoftwareUpdateRequest;
import org.openapitools.client.model.StartServiceSoftwareUpdateResponse;
import org.openapitools.client.model.UpdateDomainConfigRequest;
import org.openapitools.client.model.UpdateDomainConfigResponse;
import org.openapitools.client.model.UpdatePackageRequest;
import org.openapitools.client.model.UpdatePackageResponse;
import org.openapitools.client.model.UpdateScheduledActionRequest;
import org.openapitools.client.model.UpdateScheduledActionResponse;
import org.openapitools.client.model.UpdateVpcEndpointRequest;
import org.openapitools.client.model.UpdateVpcEndpointResponse;
import org.openapitools.client.model.UpgradeDomainRequest;
import org.openapitools.client.model.UpgradeDomainResponse;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for DefaultApi
 */
@Disabled
public class DefaultApiTest {

    private final DefaultApi api = new DefaultApi();

    /**
     * Allows the destination Amazon OpenSearch Service domain owner to accept an inbound cross-cluster search connection request. For more information, see &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/opensearch-service/latest/developerguide/cross-cluster-search.html\&quot;&gt;Cross-cluster search for Amazon OpenSearch Service&lt;/a&gt;.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void acceptInboundConnectionTest() throws ApiException {
        String connectionId = null;
        String xAmzContentSha256 = null;
        String xAmzDate = null;
        String xAmzAlgorithm = null;
        String xAmzCredential = null;
        String xAmzSecurityToken = null;
        String xAmzSignature = null;
        String xAmzSignedHeaders = null;
        AcceptInboundConnectionResponse response = api.acceptInboundConnection(connectionId, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders);
        // TODO: test validations
    }

    /**
     * Attaches tags to an existing Amazon OpenSearch Service domain. Tags are a set of case-sensitive key-value pairs. A domain can have up to 10 tags. For more information, see &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/opensearch-service/latest/developerguide/managedomains-awsresourcetagging.html\&quot;&gt;Tagging Amazon OpenSearch Service domains&lt;/a&gt;.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void addTagsTest() throws ApiException {
        AddTagsRequest addTagsRequest = null;
        String xAmzContentSha256 = null;
        String xAmzDate = null;
        String xAmzAlgorithm = null;
        String xAmzCredential = null;
        String xAmzSecurityToken = null;
        String xAmzSignature = null;
        String xAmzSignedHeaders = null;
        api.addTags(addTagsRequest, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders);
        // TODO: test validations
    }

    /**
     * Associates a package with an Amazon OpenSearch Service domain. For more information, see &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/opensearch-service/latest/developerguide/custom-packages.html\&quot;&gt;Custom packages for Amazon OpenSearch Service&lt;/a&gt;.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void associatePackageTest() throws ApiException {
        String packageID = null;
        String domainName = null;
        String xAmzContentSha256 = null;
        String xAmzDate = null;
        String xAmzAlgorithm = null;
        String xAmzCredential = null;
        String xAmzSecurityToken = null;
        String xAmzSignature = null;
        String xAmzSignedHeaders = null;
        AssociatePackageResponse response = api.associatePackage(packageID, domainName, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders);
        // TODO: test validations
    }

    /**
     * Provides access to an Amazon OpenSearch Service domain through the use of an interface VPC endpoint.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void authorizeVpcEndpointAccessTest() throws ApiException {
        String domainName = null;
        AuthorizeVpcEndpointAccessRequest authorizeVpcEndpointAccessRequest = null;
        String xAmzContentSha256 = null;
        String xAmzDate = null;
        String xAmzAlgorithm = null;
        String xAmzCredential = null;
        String xAmzSecurityToken = null;
        String xAmzSignature = null;
        String xAmzSignedHeaders = null;
        AuthorizeVpcEndpointAccessResponse response = api.authorizeVpcEndpointAccess(domainName, authorizeVpcEndpointAccessRequest, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders);
        // TODO: test validations
    }

    /**
     * Cancels a scheduled service software update for an Amazon OpenSearch Service domain. You can only perform this operation before the &lt;code&gt;AutomatedUpdateDate&lt;/code&gt; and when the domain&#39;s &lt;code&gt;UpdateStatus&lt;/code&gt; is &lt;code&gt;PENDING_UPDATE&lt;/code&gt;. For more information, see &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/opensearch-service/latest/developerguide/service-software.html\&quot;&gt;Service software updates in Amazon OpenSearch Service&lt;/a&gt;.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void cancelServiceSoftwareUpdateTest() throws ApiException {
        CancelServiceSoftwareUpdateRequest cancelServiceSoftwareUpdateRequest = null;
        String xAmzContentSha256 = null;
        String xAmzDate = null;
        String xAmzAlgorithm = null;
        String xAmzCredential = null;
        String xAmzSecurityToken = null;
        String xAmzSignature = null;
        String xAmzSignedHeaders = null;
        CancelServiceSoftwareUpdateResponse response = api.cancelServiceSoftwareUpdate(cancelServiceSoftwareUpdateRequest, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders);
        // TODO: test validations
    }

    /**
     * Creates an Amazon OpenSearch Service domain. For more information, see &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/opensearch-service/latest/developerguide/createupdatedomains.html\&quot;&gt;Creating and managing Amazon OpenSearch Service domains&lt;/a&gt;.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void createDomainTest() throws ApiException {
        CreateDomainRequest createDomainRequest = null;
        String xAmzContentSha256 = null;
        String xAmzDate = null;
        String xAmzAlgorithm = null;
        String xAmzCredential = null;
        String xAmzSecurityToken = null;
        String xAmzSignature = null;
        String xAmzSignedHeaders = null;
        CreateDomainResponse response = api.createDomain(createDomainRequest, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders);
        // TODO: test validations
    }

    /**
     * Creates a new cross-cluster search connection from a source Amazon OpenSearch Service domain to a destination domain. For more information, see &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/opensearch-service/latest/developerguide/cross-cluster-search.html\&quot;&gt;Cross-cluster search for Amazon OpenSearch Service&lt;/a&gt;.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void createOutboundConnectionTest() throws ApiException {
        CreateOutboundConnectionRequest createOutboundConnectionRequest = null;
        String xAmzContentSha256 = null;
        String xAmzDate = null;
        String xAmzAlgorithm = null;
        String xAmzCredential = null;
        String xAmzSecurityToken = null;
        String xAmzSignature = null;
        String xAmzSignedHeaders = null;
        CreateOutboundConnectionResponse response = api.createOutboundConnection(createOutboundConnectionRequest, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders);
        // TODO: test validations
    }

    /**
     * Creates a package for use with Amazon OpenSearch Service domains. For more information, see &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/opensearch-service/latest/developerguide/custom-packages.html\&quot;&gt;Custom packages for Amazon OpenSearch Service&lt;/a&gt;.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void createPackageTest() throws ApiException {
        CreatePackageRequest createPackageRequest = null;
        String xAmzContentSha256 = null;
        String xAmzDate = null;
        String xAmzAlgorithm = null;
        String xAmzCredential = null;
        String xAmzSecurityToken = null;
        String xAmzSignature = null;
        String xAmzSignedHeaders = null;
        CreatePackageResponse response = api.createPackage(createPackageRequest, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders);
        // TODO: test validations
    }

    /**
     * Creates an Amazon OpenSearch Service-managed VPC endpoint.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void createVpcEndpointTest() throws ApiException {
        CreateVpcEndpointRequest createVpcEndpointRequest = null;
        String xAmzContentSha256 = null;
        String xAmzDate = null;
        String xAmzAlgorithm = null;
        String xAmzCredential = null;
        String xAmzSecurityToken = null;
        String xAmzSignature = null;
        String xAmzSignedHeaders = null;
        CreateVpcEndpointResponse response = api.createVpcEndpoint(createVpcEndpointRequest, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders);
        // TODO: test validations
    }

    /**
     * Deletes an Amazon OpenSearch Service domain and all of its data. You can&#39;t recover a domain after you delete it.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void deleteDomainTest() throws ApiException {
        String domainName = null;
        String xAmzContentSha256 = null;
        String xAmzDate = null;
        String xAmzAlgorithm = null;
        String xAmzCredential = null;
        String xAmzSecurityToken = null;
        String xAmzSignature = null;
        String xAmzSignedHeaders = null;
        DeleteDomainResponse response = api.deleteDomain(domainName, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders);
        // TODO: test validations
    }

    /**
     * Allows the destination Amazon OpenSearch Service domain owner to delete an existing inbound cross-cluster search connection. For more information, see &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/opensearch-service/latest/developerguide/cross-cluster-search.html\&quot;&gt;Cross-cluster search for Amazon OpenSearch Service&lt;/a&gt;.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void deleteInboundConnectionTest() throws ApiException {
        String connectionId = null;
        String xAmzContentSha256 = null;
        String xAmzDate = null;
        String xAmzAlgorithm = null;
        String xAmzCredential = null;
        String xAmzSecurityToken = null;
        String xAmzSignature = null;
        String xAmzSignedHeaders = null;
        DeleteInboundConnectionResponse response = api.deleteInboundConnection(connectionId, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders);
        // TODO: test validations
    }

    /**
     * Allows the source Amazon OpenSearch Service domain owner to delete an existing outbound cross-cluster search connection. For more information, see &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/opensearch-service/latest/developerguide/cross-cluster-search.html\&quot;&gt;Cross-cluster search for Amazon OpenSearch Service&lt;/a&gt;.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void deleteOutboundConnectionTest() throws ApiException {
        String connectionId = null;
        String xAmzContentSha256 = null;
        String xAmzDate = null;
        String xAmzAlgorithm = null;
        String xAmzCredential = null;
        String xAmzSecurityToken = null;
        String xAmzSignature = null;
        String xAmzSignedHeaders = null;
        DeleteOutboundConnectionResponse response = api.deleteOutboundConnection(connectionId, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders);
        // TODO: test validations
    }

    /**
     * Deletes an Amazon OpenSearch Service package. For more information, see &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/opensearch-service/latest/developerguide/custom-packages.html\&quot;&gt;Custom packages for Amazon OpenSearch Service&lt;/a&gt;.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void deletePackageTest() throws ApiException {
        String packageID = null;
        String xAmzContentSha256 = null;
        String xAmzDate = null;
        String xAmzAlgorithm = null;
        String xAmzCredential = null;
        String xAmzSecurityToken = null;
        String xAmzSignature = null;
        String xAmzSignedHeaders = null;
        DeletePackageResponse response = api.deletePackage(packageID, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders);
        // TODO: test validations
    }

    /**
     * Deletes an Amazon OpenSearch Service-managed interface VPC endpoint.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void deleteVpcEndpointTest() throws ApiException {
        String vpcEndpointId = null;
        String xAmzContentSha256 = null;
        String xAmzDate = null;
        String xAmzAlgorithm = null;
        String xAmzCredential = null;
        String xAmzSecurityToken = null;
        String xAmzSignature = null;
        String xAmzSignedHeaders = null;
        DeleteVpcEndpointResponse response = api.deleteVpcEndpoint(vpcEndpointId, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders);
        // TODO: test validations
    }

    /**
     * Describes the domain configuration for the specified Amazon OpenSearch Service domain, including the domain ID, domain service endpoint, and domain ARN.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void describeDomainTest() throws ApiException {
        String domainName = null;
        String xAmzContentSha256 = null;
        String xAmzDate = null;
        String xAmzAlgorithm = null;
        String xAmzCredential = null;
        String xAmzSecurityToken = null;
        String xAmzSignature = null;
        String xAmzSignedHeaders = null;
        DescribeDomainResponse response = api.describeDomain(domainName, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders);
        // TODO: test validations
    }

    /**
     * Returns the list of optimizations that Auto-Tune has made to an Amazon OpenSearch Service domain. For more information, see &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/opensearch-service/latest/developerguide/auto-tune.html\&quot;&gt;Auto-Tune for Amazon OpenSearch Service&lt;/a&gt;.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void describeDomainAutoTunesTest() throws ApiException {
        String domainName = null;
        DescribeDomainAutoTunesRequest describeDomainAutoTunesRequest = null;
        String xAmzContentSha256 = null;
        String xAmzDate = null;
        String xAmzAlgorithm = null;
        String xAmzCredential = null;
        String xAmzSecurityToken = null;
        String xAmzSignature = null;
        String xAmzSignedHeaders = null;
        String maxResults = null;
        String nextToken = null;
        DescribeDomainAutoTunesResponse response = api.describeDomainAutoTunes(domainName, describeDomainAutoTunesRequest, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders, maxResults, nextToken);
        // TODO: test validations
    }

    /**
     * Returns information about the current blue/green deployment happening on an Amazon OpenSearch Service domain. For more information, see &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/opensearch-service/latest/developerguide/managedomains-configuration-changes.html\&quot;&gt;Making configuration changes in Amazon OpenSearch Service&lt;/a&gt;.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void describeDomainChangeProgressTest() throws ApiException {
        String domainName = null;
        String xAmzContentSha256 = null;
        String xAmzDate = null;
        String xAmzAlgorithm = null;
        String xAmzCredential = null;
        String xAmzSecurityToken = null;
        String xAmzSignature = null;
        String xAmzSignedHeaders = null;
        String changeid = null;
        DescribeDomainChangeProgressResponse response = api.describeDomainChangeProgress(domainName, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders, changeid);
        // TODO: test validations
    }

    /**
     * Returns the configuration of an Amazon OpenSearch Service domain.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void describeDomainConfigTest() throws ApiException {
        String domainName = null;
        String xAmzContentSha256 = null;
        String xAmzDate = null;
        String xAmzAlgorithm = null;
        String xAmzCredential = null;
        String xAmzSecurityToken = null;
        String xAmzSignature = null;
        String xAmzSignedHeaders = null;
        DescribeDomainConfigResponse response = api.describeDomainConfig(domainName, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders);
        // TODO: test validations
    }

    /**
     * Returns information about domain and node health, the standby Availability Zone, number of nodes per Availability Zone, and shard count per node.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void describeDomainHealthTest() throws ApiException {
        String domainName = null;
        String xAmzContentSha256 = null;
        String xAmzDate = null;
        String xAmzAlgorithm = null;
        String xAmzCredential = null;
        String xAmzSecurityToken = null;
        String xAmzSignature = null;
        String xAmzSignedHeaders = null;
        DescribeDomainHealthResponse response = api.describeDomainHealth(domainName, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders);
        // TODO: test validations
    }

    /**
     * Returns information about domain and nodes, including data nodes, master nodes, ultrawarm nodes, Availability Zone(s), standby nodes, node configurations, and node states.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void describeDomainNodesTest() throws ApiException {
        String domainName = null;
        String xAmzContentSha256 = null;
        String xAmzDate = null;
        String xAmzAlgorithm = null;
        String xAmzCredential = null;
        String xAmzSecurityToken = null;
        String xAmzSignature = null;
        String xAmzSignedHeaders = null;
        DescribeDomainNodesResponse response = api.describeDomainNodes(domainName, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders);
        // TODO: test validations
    }

    /**
     * Returns domain configuration information about the specified Amazon OpenSearch Service domains.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void describeDomainsTest() throws ApiException {
        DescribeDomainsRequest describeDomainsRequest = null;
        String xAmzContentSha256 = null;
        String xAmzDate = null;
        String xAmzAlgorithm = null;
        String xAmzCredential = null;
        String xAmzSecurityToken = null;
        String xAmzSignature = null;
        String xAmzSignedHeaders = null;
        DescribeDomainsResponse response = api.describeDomains(describeDomainsRequest, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders);
        // TODO: test validations
    }

    /**
     * Describes the progress of a pre-update dry run analysis on an Amazon OpenSearch Service domain. For more information, see &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/opensearch-service/latest/developerguide/managedomains-configuration-changes#dryrun\&quot;&gt;Determining whether a change will cause a blue/green deployment&lt;/a&gt;.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void describeDryRunProgressTest() throws ApiException {
        String domainName = null;
        String xAmzContentSha256 = null;
        String xAmzDate = null;
        String xAmzAlgorithm = null;
        String xAmzCredential = null;
        String xAmzSecurityToken = null;
        String xAmzSignature = null;
        String xAmzSignedHeaders = null;
        String dryRunId = null;
        Boolean loadDryRunConfig = null;
        DescribeDryRunProgressResponse response = api.describeDryRunProgress(domainName, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders, dryRunId, loadDryRunConfig);
        // TODO: test validations
    }

    /**
     * Lists all the inbound cross-cluster search connections for a destination (remote) Amazon OpenSearch Service domain. For more information, see &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/opensearch-service/latest/developerguide/cross-cluster-search.html\&quot;&gt;Cross-cluster search for Amazon OpenSearch Service&lt;/a&gt;.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void describeInboundConnectionsTest() throws ApiException {
        DescribeInboundConnectionsRequest describeInboundConnectionsRequest = null;
        String xAmzContentSha256 = null;
        String xAmzDate = null;
        String xAmzAlgorithm = null;
        String xAmzCredential = null;
        String xAmzSecurityToken = null;
        String xAmzSignature = null;
        String xAmzSignedHeaders = null;
        String maxResults = null;
        String nextToken = null;
        DescribeInboundConnectionsResponse response = api.describeInboundConnections(describeInboundConnectionsRequest, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders, maxResults, nextToken);
        // TODO: test validations
    }

    /**
     * Describes the instance count, storage, and master node limits for a given OpenSearch or Elasticsearch version and instance type.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void describeInstanceTypeLimitsTest() throws ApiException {
        String instanceType = null;
        String engineVersion = null;
        String xAmzContentSha256 = null;
        String xAmzDate = null;
        String xAmzAlgorithm = null;
        String xAmzCredential = null;
        String xAmzSecurityToken = null;
        String xAmzSignature = null;
        String xAmzSignedHeaders = null;
        String domainName = null;
        DescribeInstanceTypeLimitsResponse response = api.describeInstanceTypeLimits(instanceType, engineVersion, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders, domainName);
        // TODO: test validations
    }

    /**
     * Lists all the outbound cross-cluster connections for a local (source) Amazon OpenSearch Service domain. For more information, see &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/opensearch-service/latest/developerguide/cross-cluster-search.html\&quot;&gt;Cross-cluster search for Amazon OpenSearch Service&lt;/a&gt;.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void describeOutboundConnectionsTest() throws ApiException {
        DescribeOutboundConnectionsRequest describeOutboundConnectionsRequest = null;
        String xAmzContentSha256 = null;
        String xAmzDate = null;
        String xAmzAlgorithm = null;
        String xAmzCredential = null;
        String xAmzSecurityToken = null;
        String xAmzSignature = null;
        String xAmzSignedHeaders = null;
        String maxResults = null;
        String nextToken = null;
        DescribeOutboundConnectionsResponse response = api.describeOutboundConnections(describeOutboundConnectionsRequest, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders, maxResults, nextToken);
        // TODO: test validations
    }

    /**
     * Describes all packages available to OpenSearch Service. For more information, see &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/opensearch-service/latest/developerguide/custom-packages.html\&quot;&gt;Custom packages for Amazon OpenSearch Service&lt;/a&gt;.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void describePackagesTest() throws ApiException {
        DescribePackagesRequest describePackagesRequest = null;
        String xAmzContentSha256 = null;
        String xAmzDate = null;
        String xAmzAlgorithm = null;
        String xAmzCredential = null;
        String xAmzSecurityToken = null;
        String xAmzSignature = null;
        String xAmzSignedHeaders = null;
        String maxResults = null;
        String nextToken = null;
        DescribePackagesResponse response = api.describePackages(describePackagesRequest, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders, maxResults, nextToken);
        // TODO: test validations
    }

    /**
     * Describes the available Amazon OpenSearch Service Reserved Instance offerings for a given Region. For more information, see &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/opensearch-service/latest/developerguide/ri.html\&quot;&gt;Reserved Instances in Amazon OpenSearch Service&lt;/a&gt;.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void describeReservedInstanceOfferingsTest() throws ApiException {
        String xAmzContentSha256 = null;
        String xAmzDate = null;
        String xAmzAlgorithm = null;
        String xAmzCredential = null;
        String xAmzSecurityToken = null;
        String xAmzSignature = null;
        String xAmzSignedHeaders = null;
        String offeringId = null;
        Integer maxResults = null;
        String nextToken = null;
        String maxResults2 = null;
        String nextToken2 = null;
        DescribeReservedInstanceOfferingsResponse response = api.describeReservedInstanceOfferings(xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders, offeringId, maxResults, nextToken, maxResults2, nextToken2);
        // TODO: test validations
    }

    /**
     * Describes the Amazon OpenSearch Service instances that you have reserved in a given Region. For more information, see &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/opensearch-service/latest/developerguide/ri.html\&quot;&gt;Reserved Instances in Amazon OpenSearch Service&lt;/a&gt;.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void describeReservedInstancesTest() throws ApiException {
        String xAmzContentSha256 = null;
        String xAmzDate = null;
        String xAmzAlgorithm = null;
        String xAmzCredential = null;
        String xAmzSecurityToken = null;
        String xAmzSignature = null;
        String xAmzSignedHeaders = null;
        String reservationId = null;
        Integer maxResults = null;
        String nextToken = null;
        String maxResults2 = null;
        String nextToken2 = null;
        DescribeReservedInstancesResponse response = api.describeReservedInstances(xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders, reservationId, maxResults, nextToken, maxResults2, nextToken2);
        // TODO: test validations
    }

    /**
     * Describes one or more Amazon OpenSearch Service-managed VPC endpoints.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void describeVpcEndpointsTest() throws ApiException {
        DescribeVpcEndpointsRequest describeVpcEndpointsRequest = null;
        String xAmzContentSha256 = null;
        String xAmzDate = null;
        String xAmzAlgorithm = null;
        String xAmzCredential = null;
        String xAmzSecurityToken = null;
        String xAmzSignature = null;
        String xAmzSignedHeaders = null;
        DescribeVpcEndpointsResponse response = api.describeVpcEndpoints(describeVpcEndpointsRequest, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders);
        // TODO: test validations
    }

    /**
     * Removes a package from the specified Amazon OpenSearch Service domain. The package can&#39;t be in use with any OpenSearch index for the dissociation to succeed. The package is still available in OpenSearch Service for association later. For more information, see &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/opensearch-service/latest/developerguide/custom-packages.html\&quot;&gt;Custom packages for Amazon OpenSearch Service&lt;/a&gt;.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void dissociatePackageTest() throws ApiException {
        String packageID = null;
        String domainName = null;
        String xAmzContentSha256 = null;
        String xAmzDate = null;
        String xAmzAlgorithm = null;
        String xAmzCredential = null;
        String xAmzSecurityToken = null;
        String xAmzSignature = null;
        String xAmzSignedHeaders = null;
        DissociatePackageResponse response = api.dissociatePackage(packageID, domainName, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders);
        // TODO: test validations
    }

    /**
     * Returns a map of OpenSearch or Elasticsearch versions and the versions you can upgrade them to.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getCompatibleVersionsTest() throws ApiException {
        String xAmzContentSha256 = null;
        String xAmzDate = null;
        String xAmzAlgorithm = null;
        String xAmzCredential = null;
        String xAmzSecurityToken = null;
        String xAmzSignature = null;
        String xAmzSignedHeaders = null;
        String domainName = null;
        GetCompatibleVersionsResponse response = api.getCompatibleVersions(xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders, domainName);
        // TODO: test validations
    }

    /**
     * Returns a list of Amazon OpenSearch Service package versions, along with their creation time, commit message, and plugin properties (if the package is a zip plugin package). For more information, see &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/opensearch-service/latest/developerguide/custom-packages.html\&quot;&gt;Custom packages for Amazon OpenSearch Service&lt;/a&gt;.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getPackageVersionHistoryTest() throws ApiException {
        String packageID = null;
        String xAmzContentSha256 = null;
        String xAmzDate = null;
        String xAmzAlgorithm = null;
        String xAmzCredential = null;
        String xAmzSecurityToken = null;
        String xAmzSignature = null;
        String xAmzSignedHeaders = null;
        Integer maxResults = null;
        String nextToken = null;
        String maxResults2 = null;
        String nextToken2 = null;
        GetPackageVersionHistoryResponse response = api.getPackageVersionHistory(packageID, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders, maxResults, nextToken, maxResults2, nextToken2);
        // TODO: test validations
    }

    /**
     * Retrieves the complete history of the last 10 upgrades performed on an Amazon OpenSearch Service domain.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getUpgradeHistoryTest() throws ApiException {
        String domainName = null;
        String xAmzContentSha256 = null;
        String xAmzDate = null;
        String xAmzAlgorithm = null;
        String xAmzCredential = null;
        String xAmzSecurityToken = null;
        String xAmzSignature = null;
        String xAmzSignedHeaders = null;
        Integer maxResults = null;
        String nextToken = null;
        String maxResults2 = null;
        String nextToken2 = null;
        GetUpgradeHistoryResponse response = api.getUpgradeHistory(domainName, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders, maxResults, nextToken, maxResults2, nextToken2);
        // TODO: test validations
    }

    /**
     * Returns the most recent status of the last upgrade or upgrade eligibility check performed on an Amazon OpenSearch Service domain.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getUpgradeStatusTest() throws ApiException {
        String domainName = null;
        String xAmzContentSha256 = null;
        String xAmzDate = null;
        String xAmzAlgorithm = null;
        String xAmzCredential = null;
        String xAmzSecurityToken = null;
        String xAmzSignature = null;
        String xAmzSignedHeaders = null;
        GetUpgradeStatusResponse response = api.getUpgradeStatus(domainName, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders);
        // TODO: test validations
    }

    /**
     * Returns the names of all Amazon OpenSearch Service domains owned by the current user in the active Region.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void listDomainNamesTest() throws ApiException {
        String xAmzContentSha256 = null;
        String xAmzDate = null;
        String xAmzAlgorithm = null;
        String xAmzCredential = null;
        String xAmzSecurityToken = null;
        String xAmzSignature = null;
        String xAmzSignedHeaders = null;
        String engineType = null;
        ListDomainNamesResponse response = api.listDomainNames(xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders, engineType);
        // TODO: test validations
    }

    /**
     * Lists all Amazon OpenSearch Service domains associated with a given package. For more information, see &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/opensearch-service/latest/developerguide/custom-packages.html\&quot;&gt;Custom packages for Amazon OpenSearch Service&lt;/a&gt;.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void listDomainsForPackageTest() throws ApiException {
        String packageID = null;
        String xAmzContentSha256 = null;
        String xAmzDate = null;
        String xAmzAlgorithm = null;
        String xAmzCredential = null;
        String xAmzSecurityToken = null;
        String xAmzSignature = null;
        String xAmzSignedHeaders = null;
        Integer maxResults = null;
        String nextToken = null;
        String maxResults2 = null;
        String nextToken2 = null;
        ListDomainsForPackageResponse response = api.listDomainsForPackage(packageID, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders, maxResults, nextToken, maxResults2, nextToken2);
        // TODO: test validations
    }

    /**
     * Lists all instance types and available features for a given OpenSearch or Elasticsearch version.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void listInstanceTypeDetailsTest() throws ApiException {
        String engineVersion = null;
        String xAmzContentSha256 = null;
        String xAmzDate = null;
        String xAmzAlgorithm = null;
        String xAmzCredential = null;
        String xAmzSecurityToken = null;
        String xAmzSignature = null;
        String xAmzSignedHeaders = null;
        String domainName = null;
        Integer maxResults = null;
        String nextToken = null;
        Boolean retrieveAZs = null;
        String instanceType = null;
        String maxResults2 = null;
        String nextToken2 = null;
        ListInstanceTypeDetailsResponse response = api.listInstanceTypeDetails(engineVersion, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders, domainName, maxResults, nextToken, retrieveAZs, instanceType, maxResults2, nextToken2);
        // TODO: test validations
    }

    /**
     * Lists all packages associated with an Amazon OpenSearch Service domain. For more information, see &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/opensearch-service/latest/developerguide/custom-packages.html\&quot;&gt;Custom packages for Amazon OpenSearch Service&lt;/a&gt;.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void listPackagesForDomainTest() throws ApiException {
        String domainName = null;
        String xAmzContentSha256 = null;
        String xAmzDate = null;
        String xAmzAlgorithm = null;
        String xAmzCredential = null;
        String xAmzSecurityToken = null;
        String xAmzSignature = null;
        String xAmzSignedHeaders = null;
        Integer maxResults = null;
        String nextToken = null;
        String maxResults2 = null;
        String nextToken2 = null;
        ListPackagesForDomainResponse response = api.listPackagesForDomain(domainName, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders, maxResults, nextToken, maxResults2, nextToken2);
        // TODO: test validations
    }

    /**
     * Retrieves a list of configuration changes that are scheduled for a domain. These changes can be &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/opensearch-service/latest/developerguide/service-software.html\&quot;&gt;service software updates&lt;/a&gt; or &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/opensearch-service/latest/developerguide/auto-tune.html#auto-tune-types\&quot;&gt;blue/green Auto-Tune enhancements&lt;/a&gt;.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void listScheduledActionsTest() throws ApiException {
        String domainName = null;
        String xAmzContentSha256 = null;
        String xAmzDate = null;
        String xAmzAlgorithm = null;
        String xAmzCredential = null;
        String xAmzSecurityToken = null;
        String xAmzSignature = null;
        String xAmzSignedHeaders = null;
        Integer maxResults = null;
        String nextToken = null;
        String maxResults2 = null;
        String nextToken2 = null;
        ListScheduledActionsResponse response = api.listScheduledActions(domainName, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders, maxResults, nextToken, maxResults2, nextToken2);
        // TODO: test validations
    }

    /**
     * Returns all resource tags for an Amazon OpenSearch Service domain. For more information, see &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/opensearch-service/latest/developerguide/managedomains-awsresourcetagging.html\&quot;&gt;Tagging Amazon OpenSearch Service domains&lt;/a&gt;.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void listTagsTest() throws ApiException {
        String arn = null;
        String xAmzContentSha256 = null;
        String xAmzDate = null;
        String xAmzAlgorithm = null;
        String xAmzCredential = null;
        String xAmzSecurityToken = null;
        String xAmzSignature = null;
        String xAmzSignedHeaders = null;
        ListTagsResponse response = api.listTags(arn, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders);
        // TODO: test validations
    }

    /**
     * Lists all versions of OpenSearch and Elasticsearch that Amazon OpenSearch Service supports.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void listVersionsTest() throws ApiException {
        String xAmzContentSha256 = null;
        String xAmzDate = null;
        String xAmzAlgorithm = null;
        String xAmzCredential = null;
        String xAmzSecurityToken = null;
        String xAmzSignature = null;
        String xAmzSignedHeaders = null;
        Integer maxResults = null;
        String nextToken = null;
        String maxResults2 = null;
        String nextToken2 = null;
        ListVersionsResponse response = api.listVersions(xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders, maxResults, nextToken, maxResults2, nextToken2);
        // TODO: test validations
    }

    /**
     * Retrieves information about each Amazon Web Services principal that is allowed to access a given Amazon OpenSearch Service domain through the use of an interface VPC endpoint.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void listVpcEndpointAccessTest() throws ApiException {
        String domainName = null;
        String xAmzContentSha256 = null;
        String xAmzDate = null;
        String xAmzAlgorithm = null;
        String xAmzCredential = null;
        String xAmzSecurityToken = null;
        String xAmzSignature = null;
        String xAmzSignedHeaders = null;
        String nextToken = null;
        ListVpcEndpointAccessResponse response = api.listVpcEndpointAccess(domainName, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders, nextToken);
        // TODO: test validations
    }

    /**
     * Retrieves all Amazon OpenSearch Service-managed VPC endpoints in the current Amazon Web Services account and Region.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void listVpcEndpointsTest() throws ApiException {
        String xAmzContentSha256 = null;
        String xAmzDate = null;
        String xAmzAlgorithm = null;
        String xAmzCredential = null;
        String xAmzSecurityToken = null;
        String xAmzSignature = null;
        String xAmzSignedHeaders = null;
        String nextToken = null;
        ListVpcEndpointsResponse response = api.listVpcEndpoints(xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders, nextToken);
        // TODO: test validations
    }

    /**
     * Retrieves all Amazon OpenSearch Service-managed VPC endpoints associated with a particular domain.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void listVpcEndpointsForDomainTest() throws ApiException {
        String domainName = null;
        String xAmzContentSha256 = null;
        String xAmzDate = null;
        String xAmzAlgorithm = null;
        String xAmzCredential = null;
        String xAmzSecurityToken = null;
        String xAmzSignature = null;
        String xAmzSignedHeaders = null;
        String nextToken = null;
        ListVpcEndpointsForDomainResponse response = api.listVpcEndpointsForDomain(domainName, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders, nextToken);
        // TODO: test validations
    }

    /**
     * Allows you to purchase Amazon OpenSearch Service Reserved Instances.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void purchaseReservedInstanceOfferingTest() throws ApiException {
        PurchaseReservedInstanceOfferingRequest purchaseReservedInstanceOfferingRequest = null;
        String xAmzContentSha256 = null;
        String xAmzDate = null;
        String xAmzAlgorithm = null;
        String xAmzCredential = null;
        String xAmzSecurityToken = null;
        String xAmzSignature = null;
        String xAmzSignedHeaders = null;
        PurchaseReservedInstanceOfferingResponse response = api.purchaseReservedInstanceOffering(purchaseReservedInstanceOfferingRequest, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders);
        // TODO: test validations
    }

    /**
     * Allows the remote Amazon OpenSearch Service domain owner to reject an inbound cross-cluster connection request.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void rejectInboundConnectionTest() throws ApiException {
        String connectionId = null;
        String xAmzContentSha256 = null;
        String xAmzDate = null;
        String xAmzAlgorithm = null;
        String xAmzCredential = null;
        String xAmzSecurityToken = null;
        String xAmzSignature = null;
        String xAmzSignedHeaders = null;
        RejectInboundConnectionResponse response = api.rejectInboundConnection(connectionId, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders);
        // TODO: test validations
    }

    /**
     * Removes the specified set of tags from an Amazon OpenSearch Service domain. For more information, see &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/opensearch-service/latest/developerguide/managedomains.html#managedomains-awsresorcetagging\&quot;&gt; Tagging Amazon OpenSearch Service domains&lt;/a&gt;.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void removeTagsTest() throws ApiException {
        RemoveTagsRequest removeTagsRequest = null;
        String xAmzContentSha256 = null;
        String xAmzDate = null;
        String xAmzAlgorithm = null;
        String xAmzCredential = null;
        String xAmzSecurityToken = null;
        String xAmzSignature = null;
        String xAmzSignedHeaders = null;
        api.removeTags(removeTagsRequest, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders);
        // TODO: test validations
    }

    /**
     * Revokes access to an Amazon OpenSearch Service domain that was provided through an interface VPC endpoint.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void revokeVpcEndpointAccessTest() throws ApiException {
        String domainName = null;
        RevokeVpcEndpointAccessRequest revokeVpcEndpointAccessRequest = null;
        String xAmzContentSha256 = null;
        String xAmzDate = null;
        String xAmzAlgorithm = null;
        String xAmzCredential = null;
        String xAmzSecurityToken = null;
        String xAmzSignature = null;
        String xAmzSignedHeaders = null;
        Object response = api.revokeVpcEndpointAccess(domainName, revokeVpcEndpointAccessRequest, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders);
        // TODO: test validations
    }

    /**
     * Schedules a service software update for an Amazon OpenSearch Service domain. For more information, see &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/opensearch-service/latest/developerguide/service-software.html\&quot;&gt;Service software updates in Amazon OpenSearch Service&lt;/a&gt;.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void startServiceSoftwareUpdateTest() throws ApiException {
        StartServiceSoftwareUpdateRequest startServiceSoftwareUpdateRequest = null;
        String xAmzContentSha256 = null;
        String xAmzDate = null;
        String xAmzAlgorithm = null;
        String xAmzCredential = null;
        String xAmzSecurityToken = null;
        String xAmzSignature = null;
        String xAmzSignedHeaders = null;
        StartServiceSoftwareUpdateResponse response = api.startServiceSoftwareUpdate(startServiceSoftwareUpdateRequest, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders);
        // TODO: test validations
    }

    /**
     * Modifies the cluster configuration of the specified Amazon OpenSearch Service domain.sl
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void updateDomainConfigTest() throws ApiException {
        String domainName = null;
        UpdateDomainConfigRequest updateDomainConfigRequest = null;
        String xAmzContentSha256 = null;
        String xAmzDate = null;
        String xAmzAlgorithm = null;
        String xAmzCredential = null;
        String xAmzSecurityToken = null;
        String xAmzSignature = null;
        String xAmzSignedHeaders = null;
        UpdateDomainConfigResponse response = api.updateDomainConfig(domainName, updateDomainConfigRequest, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders);
        // TODO: test validations
    }

    /**
     * Updates a package for use with Amazon OpenSearch Service domains. For more information, see &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/opensearch-service/latest/developerguide/custom-packages.html\&quot;&gt;Custom packages for Amazon OpenSearch Service&lt;/a&gt;.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void updatePackageTest() throws ApiException {
        UpdatePackageRequest updatePackageRequest = null;
        String xAmzContentSha256 = null;
        String xAmzDate = null;
        String xAmzAlgorithm = null;
        String xAmzCredential = null;
        String xAmzSecurityToken = null;
        String xAmzSignature = null;
        String xAmzSignedHeaders = null;
        UpdatePackageResponse response = api.updatePackage(updatePackageRequest, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders);
        // TODO: test validations
    }

    /**
     * Reschedules a planned domain configuration change for a later time. This change can be a scheduled &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/opensearch-service/latest/developerguide/service-software.html\&quot;&gt;service software update&lt;/a&gt; or a &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/opensearch-service/latest/developerguide/auto-tune.html#auto-tune-types\&quot;&gt;blue/green Auto-Tune enhancement&lt;/a&gt;.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void updateScheduledActionTest() throws ApiException {
        String domainName = null;
        UpdateScheduledActionRequest updateScheduledActionRequest = null;
        String xAmzContentSha256 = null;
        String xAmzDate = null;
        String xAmzAlgorithm = null;
        String xAmzCredential = null;
        String xAmzSecurityToken = null;
        String xAmzSignature = null;
        String xAmzSignedHeaders = null;
        UpdateScheduledActionResponse response = api.updateScheduledAction(domainName, updateScheduledActionRequest, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders);
        // TODO: test validations
    }

    /**
     * Modifies an Amazon OpenSearch Service-managed interface VPC endpoint.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void updateVpcEndpointTest() throws ApiException {
        UpdateVpcEndpointRequest updateVpcEndpointRequest = null;
        String xAmzContentSha256 = null;
        String xAmzDate = null;
        String xAmzAlgorithm = null;
        String xAmzCredential = null;
        String xAmzSecurityToken = null;
        String xAmzSignature = null;
        String xAmzSignedHeaders = null;
        UpdateVpcEndpointResponse response = api.updateVpcEndpoint(updateVpcEndpointRequest, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders);
        // TODO: test validations
    }

    /**
     * Allows you to either upgrade your Amazon OpenSearch Service domain or perform an upgrade eligibility check to a compatible version of OpenSearch or Elasticsearch.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void upgradeDomainTest() throws ApiException {
        UpgradeDomainRequest upgradeDomainRequest = null;
        String xAmzContentSha256 = null;
        String xAmzDate = null;
        String xAmzAlgorithm = null;
        String xAmzCredential = null;
        String xAmzSecurityToken = null;
        String xAmzSignature = null;
        String xAmzSignedHeaders = null;
        UpgradeDomainResponse response = api.upgradeDomain(upgradeDomainRequest, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders);
        // TODO: test validations
    }

}
