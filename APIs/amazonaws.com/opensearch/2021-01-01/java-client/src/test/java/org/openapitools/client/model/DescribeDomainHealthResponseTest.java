/*
 * Amazon OpenSearch Service
 * <p>Use the Amazon OpenSearch Service configuration API to create, configure, and manage OpenSearch Service domains.</p> <p>For sample code that uses the configuration API, see the <a href=\"https://docs.aws.amazon.com/opensearch-service/latest/developerguide/opensearch-configuration-samples.html\"> <i>Amazon OpenSearch Service Developer Guide</i> </a>. The guide also contains <a href=\"https://docs.aws.amazon.com/opensearch-service/latest/developerguide/request-signing.html\">sample code</a> for sending signed HTTP requests to the OpenSearch APIs. The endpoint for configuration service requests is Region specific: es.<i>region</i>.amazonaws.com. For example, es.us-east-1.amazonaws.com. For a current list of supported Regions and endpoints, see <a href=\"https://docs.aws.amazon.com/general/latest/gr/rande.html#service-regions\">Amazon Web Services service endpoints</a>.</p>
 *
 * The version of the OpenAPI document: 2021-01-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.DomainHealth;
import org.openapitools.client.model.DomainState;
import org.openapitools.client.model.MasterNodeStatus;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

/**
 * Model tests for DescribeDomainHealthResponse
 */
public class DescribeDomainHealthResponseTest {
    private final DescribeDomainHealthResponse model = new DescribeDomainHealthResponse();

    /**
     * Model tests for DescribeDomainHealthResponse
     */
    @Test
    public void testDescribeDomainHealthResponse() {
        // TODO: test DescribeDomainHealthResponse
    }

    /**
     * Test the property 'domainState'
     */
    @Test
    public void domainStateTest() {
        // TODO: test domainState
    }

    /**
     * Test the property 'availabilityZoneCount'
     */
    @Test
    public void availabilityZoneCountTest() {
        // TODO: test availabilityZoneCount
    }

    /**
     * Test the property 'activeAvailabilityZoneCount'
     */
    @Test
    public void activeAvailabilityZoneCountTest() {
        // TODO: test activeAvailabilityZoneCount
    }

    /**
     * Test the property 'standByAvailabilityZoneCount'
     */
    @Test
    public void standByAvailabilityZoneCountTest() {
        // TODO: test standByAvailabilityZoneCount
    }

    /**
     * Test the property 'dataNodeCount'
     */
    @Test
    public void dataNodeCountTest() {
        // TODO: test dataNodeCount
    }

    /**
     * Test the property 'dedicatedMaster'
     */
    @Test
    public void dedicatedMasterTest() {
        // TODO: test dedicatedMaster
    }

    /**
     * Test the property 'masterEligibleNodeCount'
     */
    @Test
    public void masterEligibleNodeCountTest() {
        // TODO: test masterEligibleNodeCount
    }

    /**
     * Test the property 'warmNodeCount'
     */
    @Test
    public void warmNodeCountTest() {
        // TODO: test warmNodeCount
    }

    /**
     * Test the property 'masterNode'
     */
    @Test
    public void masterNodeTest() {
        // TODO: test masterNode
    }

    /**
     * Test the property 'clusterHealth'
     */
    @Test
    public void clusterHealthTest() {
        // TODO: test clusterHealth
    }

    /**
     * Test the property 'totalShards'
     */
    @Test
    public void totalShardsTest() {
        // TODO: test totalShards
    }

    /**
     * Test the property 'totalUnAssignedShards'
     */
    @Test
    public void totalUnAssignedShardsTest() {
        // TODO: test totalUnAssignedShards
    }

    /**
     * Test the property 'environmentInformation'
     */
    @Test
    public void environmentInformationTest() {
        // TODO: test environmentInformation
    }

}
