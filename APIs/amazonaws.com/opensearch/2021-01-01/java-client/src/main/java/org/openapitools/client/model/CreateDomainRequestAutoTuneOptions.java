/*
 * Amazon OpenSearch Service
 * <p>Use the Amazon OpenSearch Service configuration API to create, configure, and manage OpenSearch Service domains.</p> <p>For sample code that uses the configuration API, see the <a href=\"https://docs.aws.amazon.com/opensearch-service/latest/developerguide/opensearch-configuration-samples.html\"> <i>Amazon OpenSearch Service Developer Guide</i> </a>. The guide also contains <a href=\"https://docs.aws.amazon.com/opensearch-service/latest/developerguide/request-signing.html\">sample code</a> for sending signed HTTP requests to the OpenSearch APIs. The endpoint for configuration service requests is Region specific: es.<i>region</i>.amazonaws.com. For example, es.us-east-1.amazonaws.com. For a current list of supported Regions and endpoints, see <a href=\"https://docs.aws.amazon.com/general/latest/gr/rande.html#service-regions\">Amazon Web Services service endpoints</a>.</p>
 *
 * The version of the OpenAPI document: 2021-01-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.AutoTuneDesiredState;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * CreateDomainRequestAutoTuneOptions
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T12:13:04.518663-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class CreateDomainRequestAutoTuneOptions {
  public static final String SERIALIZED_NAME_DESIRED_STATE = "DesiredState";
  @SerializedName(SERIALIZED_NAME_DESIRED_STATE)
  private AutoTuneDesiredState desiredState;

  public static final String SERIALIZED_NAME_MAINTENANCE_SCHEDULES = "MaintenanceSchedules";
  @SerializedName(SERIALIZED_NAME_MAINTENANCE_SCHEDULES)
  private List maintenanceSchedules;

  public static final String SERIALIZED_NAME_USE_OFF_PEAK_WINDOW = "UseOffPeakWindow";
  @SerializedName(SERIALIZED_NAME_USE_OFF_PEAK_WINDOW)
  private Boolean useOffPeakWindow;

  public CreateDomainRequestAutoTuneOptions() {
  }

  public CreateDomainRequestAutoTuneOptions desiredState(AutoTuneDesiredState desiredState) {
    this.desiredState = desiredState;
    return this;
  }

  /**
   * Get desiredState
   * @return desiredState
   */
  @javax.annotation.Nullable
  public AutoTuneDesiredState getDesiredState() {
    return desiredState;
  }

  public void setDesiredState(AutoTuneDesiredState desiredState) {
    this.desiredState = desiredState;
  }


  public CreateDomainRequestAutoTuneOptions maintenanceSchedules(List maintenanceSchedules) {
    this.maintenanceSchedules = maintenanceSchedules;
    return this;
  }

  /**
   * Get maintenanceSchedules
   * @return maintenanceSchedules
   */
  @javax.annotation.Nullable
  public List getMaintenanceSchedules() {
    return maintenanceSchedules;
  }

  public void setMaintenanceSchedules(List maintenanceSchedules) {
    this.maintenanceSchedules = maintenanceSchedules;
  }


  public CreateDomainRequestAutoTuneOptions useOffPeakWindow(Boolean useOffPeakWindow) {
    this.useOffPeakWindow = useOffPeakWindow;
    return this;
  }

  /**
   * Get useOffPeakWindow
   * @return useOffPeakWindow
   */
  @javax.annotation.Nullable
  public Boolean getUseOffPeakWindow() {
    return useOffPeakWindow;
  }

  public void setUseOffPeakWindow(Boolean useOffPeakWindow) {
    this.useOffPeakWindow = useOffPeakWindow;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CreateDomainRequestAutoTuneOptions createDomainRequestAutoTuneOptions = (CreateDomainRequestAutoTuneOptions) o;
    return Objects.equals(this.desiredState, createDomainRequestAutoTuneOptions.desiredState) &&
        Objects.equals(this.maintenanceSchedules, createDomainRequestAutoTuneOptions.maintenanceSchedules) &&
        Objects.equals(this.useOffPeakWindow, createDomainRequestAutoTuneOptions.useOffPeakWindow);
  }

  @Override
  public int hashCode() {
    return Objects.hash(desiredState, maintenanceSchedules, useOffPeakWindow);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CreateDomainRequestAutoTuneOptions {\n");
    sb.append("    desiredState: ").append(toIndentedString(desiredState)).append("\n");
    sb.append("    maintenanceSchedules: ").append(toIndentedString(maintenanceSchedules)).append("\n");
    sb.append("    useOffPeakWindow: ").append(toIndentedString(useOffPeakWindow)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("DesiredState");
    openapiFields.add("MaintenanceSchedules");
    openapiFields.add("UseOffPeakWindow");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to CreateDomainRequestAutoTuneOptions
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!CreateDomainRequestAutoTuneOptions.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in CreateDomainRequestAutoTuneOptions is not found in the empty JSON string", CreateDomainRequestAutoTuneOptions.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!CreateDomainRequestAutoTuneOptions.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `CreateDomainRequestAutoTuneOptions` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // validate the optional field `DesiredState`
      if (jsonObj.get("DesiredState") != null && !jsonObj.get("DesiredState").isJsonNull()) {
        AutoTuneDesiredState.validateJsonElement(jsonObj.get("DesiredState"));
      }
      // validate the optional field `MaintenanceSchedules`
      if (jsonObj.get("MaintenanceSchedules") != null && !jsonObj.get("MaintenanceSchedules").isJsonNull()) {
        List.validateJsonElement(jsonObj.get("MaintenanceSchedules"));
      }
      // validate the optional field `UseOffPeakWindow`
      if (jsonObj.get("UseOffPeakWindow") != null && !jsonObj.get("UseOffPeakWindow").isJsonNull()) {
        Boolean.validateJsonElement(jsonObj.get("UseOffPeakWindow"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!CreateDomainRequestAutoTuneOptions.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'CreateDomainRequestAutoTuneOptions' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<CreateDomainRequestAutoTuneOptions> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(CreateDomainRequestAutoTuneOptions.class));

       return (TypeAdapter<T>) new TypeAdapter<CreateDomainRequestAutoTuneOptions>() {
           @Override
           public void write(JsonWriter out, CreateDomainRequestAutoTuneOptions value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public CreateDomainRequestAutoTuneOptions read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of CreateDomainRequestAutoTuneOptions given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of CreateDomainRequestAutoTuneOptions
   * @throws IOException if the JSON string is invalid with respect to CreateDomainRequestAutoTuneOptions
   */
  public static CreateDomainRequestAutoTuneOptions fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, CreateDomainRequestAutoTuneOptions.class);
  }

  /**
   * Convert an instance of CreateDomainRequestAutoTuneOptions to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

