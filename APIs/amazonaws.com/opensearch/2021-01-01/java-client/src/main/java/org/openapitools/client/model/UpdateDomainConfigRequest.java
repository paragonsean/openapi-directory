/*
 * Amazon OpenSearch Service
 * <p>Use the Amazon OpenSearch Service configuration API to create, configure, and manage OpenSearch Service domains.</p> <p>For sample code that uses the configuration API, see the <a href=\"https://docs.aws.amazon.com/opensearch-service/latest/developerguide/opensearch-configuration-samples.html\"> <i>Amazon OpenSearch Service Developer Guide</i> </a>. The guide also contains <a href=\"https://docs.aws.amazon.com/opensearch-service/latest/developerguide/request-signing.html\">sample code</a> for sending signed HTTP requests to the OpenSearch APIs. The endpoint for configuration service requests is Region specific: es.<i>region</i>.amazonaws.com. For example, es.us-east-1.amazonaws.com. For a current list of supported Regions and endpoints, see <a href=\"https://docs.aws.amazon.com/general/latest/gr/rande.html#service-regions\">Amazon Web Services service endpoints</a>.</p>
 *
 * The version of the OpenAPI document: 2021-01-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;
import java.util.HashMap;
import java.util.Map;
import org.openapitools.client.model.CreateDomainRequestAdvancedSecurityOptions;
import org.openapitools.client.model.CreateDomainRequestClusterConfig;
import org.openapitools.client.model.CreateDomainRequestCognitoOptions;
import org.openapitools.client.model.CreateDomainRequestDomainEndpointOptions;
import org.openapitools.client.model.CreateDomainRequestEBSOptions;
import org.openapitools.client.model.CreateDomainRequestEncryptionAtRestOptions;
import org.openapitools.client.model.CreateDomainRequestNodeToNodeEncryptionOptions;
import org.openapitools.client.model.CreateDomainRequestOffPeakWindowOptions;
import org.openapitools.client.model.CreateDomainRequestSnapshotOptions;
import org.openapitools.client.model.CreateDomainRequestSoftwareUpdateOptions;
import org.openapitools.client.model.CreateDomainRequestVPCOptions;
import org.openapitools.client.model.LogPublishingOption;
import org.openapitools.client.model.UpdateDomainConfigRequestAutoTuneOptions;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * UpdateDomainConfigRequest
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T12:13:04.518663-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class UpdateDomainConfigRequest {
  public static final String SERIALIZED_NAME_CLUSTER_CONFIG = "ClusterConfig";
  @SerializedName(SERIALIZED_NAME_CLUSTER_CONFIG)
  private CreateDomainRequestClusterConfig clusterConfig;

  public static final String SERIALIZED_NAME_EB_S_OPTIONS = "EBSOptions";
  @SerializedName(SERIALIZED_NAME_EB_S_OPTIONS)
  private CreateDomainRequestEBSOptions ebSOptions;

  public static final String SERIALIZED_NAME_SNAPSHOT_OPTIONS = "SnapshotOptions";
  @SerializedName(SERIALIZED_NAME_SNAPSHOT_OPTIONS)
  private CreateDomainRequestSnapshotOptions snapshotOptions;

  public static final String SERIALIZED_NAME_VP_C_OPTIONS = "VPCOptions";
  @SerializedName(SERIALIZED_NAME_VP_C_OPTIONS)
  private CreateDomainRequestVPCOptions vpCOptions;

  public static final String SERIALIZED_NAME_COGNITO_OPTIONS = "CognitoOptions";
  @SerializedName(SERIALIZED_NAME_COGNITO_OPTIONS)
  private CreateDomainRequestCognitoOptions cognitoOptions;

  public static final String SERIALIZED_NAME_ADVANCED_OPTIONS = "AdvancedOptions";
  @SerializedName(SERIALIZED_NAME_ADVANCED_OPTIONS)
  private Map<String, String> advancedOptions = new HashMap<>();

  public static final String SERIALIZED_NAME_ACCESS_POLICIES = "AccessPolicies";
  @SerializedName(SERIALIZED_NAME_ACCESS_POLICIES)
  private String accessPolicies;

  public static final String SERIALIZED_NAME_LOG_PUBLISHING_OPTIONS = "LogPublishingOptions";
  @SerializedName(SERIALIZED_NAME_LOG_PUBLISHING_OPTIONS)
  private Map<String, LogPublishingOption> logPublishingOptions = new HashMap<>();

  public static final String SERIALIZED_NAME_ENCRYPTION_AT_REST_OPTIONS = "EncryptionAtRestOptions";
  @SerializedName(SERIALIZED_NAME_ENCRYPTION_AT_REST_OPTIONS)
  private CreateDomainRequestEncryptionAtRestOptions encryptionAtRestOptions;

  public static final String SERIALIZED_NAME_DOMAIN_ENDPOINT_OPTIONS = "DomainEndpointOptions";
  @SerializedName(SERIALIZED_NAME_DOMAIN_ENDPOINT_OPTIONS)
  private CreateDomainRequestDomainEndpointOptions domainEndpointOptions;

  public static final String SERIALIZED_NAME_NODE_TO_NODE_ENCRYPTION_OPTIONS = "NodeToNodeEncryptionOptions";
  @SerializedName(SERIALIZED_NAME_NODE_TO_NODE_ENCRYPTION_OPTIONS)
  private CreateDomainRequestNodeToNodeEncryptionOptions nodeToNodeEncryptionOptions;

  public static final String SERIALIZED_NAME_ADVANCED_SECURITY_OPTIONS = "AdvancedSecurityOptions";
  @SerializedName(SERIALIZED_NAME_ADVANCED_SECURITY_OPTIONS)
  private CreateDomainRequestAdvancedSecurityOptions advancedSecurityOptions;

  public static final String SERIALIZED_NAME_AUTO_TUNE_OPTIONS = "AutoTuneOptions";
  @SerializedName(SERIALIZED_NAME_AUTO_TUNE_OPTIONS)
  private UpdateDomainConfigRequestAutoTuneOptions autoTuneOptions;

  public static final String SERIALIZED_NAME_DRY_RUN = "DryRun";
  @SerializedName(SERIALIZED_NAME_DRY_RUN)
  private Boolean dryRun;

  /**
   * &lt;p&gt;The type of dry run to perform.&lt;/p&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt; &lt;code&gt;Basic&lt;/code&gt; only returns the type of deployment (blue/green or dynamic) that the update will cause.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt; &lt;code&gt;Verbose&lt;/code&gt; runs an additional check to validate the changes you&#39;re making. For more information, see &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/opensearch-service/latest/developerguide/managedomains-configuration-changes#validation-check\&quot;&gt;Validating a domain update&lt;/a&gt;.&lt;/p&gt; &lt;/li&gt; &lt;/ul&gt;
   */
  @JsonAdapter(DryRunModeEnum.Adapter.class)
  public enum DryRunModeEnum {
    BASIC("Basic"),
    
    VERBOSE("Verbose");

    private String value;

    DryRunModeEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static DryRunModeEnum fromValue(String value) {
      for (DryRunModeEnum b : DryRunModeEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }

    public static class Adapter extends TypeAdapter<DryRunModeEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final DryRunModeEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public DryRunModeEnum read(final JsonReader jsonReader) throws IOException {
        String value =  jsonReader.nextString();
        return DryRunModeEnum.fromValue(value);
      }
    }

    public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      String value = jsonElement.getAsString();
      DryRunModeEnum.fromValue(value);
    }
  }

  public static final String SERIALIZED_NAME_DRY_RUN_MODE = "DryRunMode";
  @SerializedName(SERIALIZED_NAME_DRY_RUN_MODE)
  private DryRunModeEnum dryRunMode;

  public static final String SERIALIZED_NAME_OFF_PEAK_WINDOW_OPTIONS = "OffPeakWindowOptions";
  @SerializedName(SERIALIZED_NAME_OFF_PEAK_WINDOW_OPTIONS)
  private CreateDomainRequestOffPeakWindowOptions offPeakWindowOptions;

  public static final String SERIALIZED_NAME_SOFTWARE_UPDATE_OPTIONS = "SoftwareUpdateOptions";
  @SerializedName(SERIALIZED_NAME_SOFTWARE_UPDATE_OPTIONS)
  private CreateDomainRequestSoftwareUpdateOptions softwareUpdateOptions;

  public UpdateDomainConfigRequest() {
  }

  public UpdateDomainConfigRequest clusterConfig(CreateDomainRequestClusterConfig clusterConfig) {
    this.clusterConfig = clusterConfig;
    return this;
  }

  /**
   * Get clusterConfig
   * @return clusterConfig
   */
  @javax.annotation.Nullable
  public CreateDomainRequestClusterConfig getClusterConfig() {
    return clusterConfig;
  }

  public void setClusterConfig(CreateDomainRequestClusterConfig clusterConfig) {
    this.clusterConfig = clusterConfig;
  }


  public UpdateDomainConfigRequest ebSOptions(CreateDomainRequestEBSOptions ebSOptions) {
    this.ebSOptions = ebSOptions;
    return this;
  }

  /**
   * Get ebSOptions
   * @return ebSOptions
   */
  @javax.annotation.Nullable
  public CreateDomainRequestEBSOptions getEbSOptions() {
    return ebSOptions;
  }

  public void setEbSOptions(CreateDomainRequestEBSOptions ebSOptions) {
    this.ebSOptions = ebSOptions;
  }


  public UpdateDomainConfigRequest snapshotOptions(CreateDomainRequestSnapshotOptions snapshotOptions) {
    this.snapshotOptions = snapshotOptions;
    return this;
  }

  /**
   * Get snapshotOptions
   * @return snapshotOptions
   */
  @javax.annotation.Nullable
  public CreateDomainRequestSnapshotOptions getSnapshotOptions() {
    return snapshotOptions;
  }

  public void setSnapshotOptions(CreateDomainRequestSnapshotOptions snapshotOptions) {
    this.snapshotOptions = snapshotOptions;
  }


  public UpdateDomainConfigRequest vpCOptions(CreateDomainRequestVPCOptions vpCOptions) {
    this.vpCOptions = vpCOptions;
    return this;
  }

  /**
   * Get vpCOptions
   * @return vpCOptions
   */
  @javax.annotation.Nullable
  public CreateDomainRequestVPCOptions getVpCOptions() {
    return vpCOptions;
  }

  public void setVpCOptions(CreateDomainRequestVPCOptions vpCOptions) {
    this.vpCOptions = vpCOptions;
  }


  public UpdateDomainConfigRequest cognitoOptions(CreateDomainRequestCognitoOptions cognitoOptions) {
    this.cognitoOptions = cognitoOptions;
    return this;
  }

  /**
   * Get cognitoOptions
   * @return cognitoOptions
   */
  @javax.annotation.Nullable
  public CreateDomainRequestCognitoOptions getCognitoOptions() {
    return cognitoOptions;
  }

  public void setCognitoOptions(CreateDomainRequestCognitoOptions cognitoOptions) {
    this.cognitoOptions = cognitoOptions;
  }


  public UpdateDomainConfigRequest advancedOptions(Map<String, String> advancedOptions) {
    this.advancedOptions = advancedOptions;
    return this;
  }

  public UpdateDomainConfigRequest putAdvancedOptionsItem(String key, String advancedOptionsItem) {
    if (this.advancedOptions == null) {
      this.advancedOptions = new HashMap<>();
    }
    this.advancedOptions.put(key, advancedOptionsItem);
    return this;
  }

  /**
   * &lt;p&gt;Exposes native OpenSearch configuration values from &lt;code&gt;opensearch.yml&lt;/code&gt;. The following advanced options are available: &lt;/p&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;Allows references to indexes in an HTTP request body. Must be &lt;code&gt;false&lt;/code&gt; when configuring access to individual sub-resources. Default is &lt;code&gt;true&lt;/code&gt;.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;Specifies the percentage of heap space allocated to field data. Default is unbounded.&lt;/p&gt; &lt;/li&gt; &lt;/ul&gt; &lt;p&gt;For more information, see &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/opensearch-service/latest/developerguide/createupdatedomains.html#createdomain-configure-advanced-options\&quot;&gt;Advanced cluster parameters&lt;/a&gt;.&lt;/p&gt;
   * @return advancedOptions
   */
  @javax.annotation.Nullable
  public Map<String, String> getAdvancedOptions() {
    return advancedOptions;
  }

  public void setAdvancedOptions(Map<String, String> advancedOptions) {
    this.advancedOptions = advancedOptions;
  }


  public UpdateDomainConfigRequest accessPolicies(String accessPolicies) {
    this.accessPolicies = accessPolicies;
    return this;
  }

  /**
   * Access policy rules for an Amazon OpenSearch Service domain endpoint. For more information, see &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/opensearch-service/latest/developerguide/createupdatedomains.html#createdomain-configure-access-policies\&quot;&gt;Configuring access policies&lt;/a&gt;. The maximum size of a policy document is 100 KB.
   * @return accessPolicies
   */
  @javax.annotation.Nullable
  public String getAccessPolicies() {
    return accessPolicies;
  }

  public void setAccessPolicies(String accessPolicies) {
    this.accessPolicies = accessPolicies;
  }


  public UpdateDomainConfigRequest logPublishingOptions(Map<String, LogPublishingOption> logPublishingOptions) {
    this.logPublishingOptions = logPublishingOptions;
    return this;
  }

  public UpdateDomainConfigRequest putLogPublishingOptionsItem(String key, LogPublishingOption logPublishingOptionsItem) {
    if (this.logPublishingOptions == null) {
      this.logPublishingOptions = new HashMap<>();
    }
    this.logPublishingOptions.put(key, logPublishingOptionsItem);
    return this;
  }

  /**
   * Options to publish OpenSearch logs to Amazon CloudWatch Logs.
   * @return logPublishingOptions
   */
  @javax.annotation.Nullable
  public Map<String, LogPublishingOption> getLogPublishingOptions() {
    return logPublishingOptions;
  }

  public void setLogPublishingOptions(Map<String, LogPublishingOption> logPublishingOptions) {
    this.logPublishingOptions = logPublishingOptions;
  }


  public UpdateDomainConfigRequest encryptionAtRestOptions(CreateDomainRequestEncryptionAtRestOptions encryptionAtRestOptions) {
    this.encryptionAtRestOptions = encryptionAtRestOptions;
    return this;
  }

  /**
   * Get encryptionAtRestOptions
   * @return encryptionAtRestOptions
   */
  @javax.annotation.Nullable
  public CreateDomainRequestEncryptionAtRestOptions getEncryptionAtRestOptions() {
    return encryptionAtRestOptions;
  }

  public void setEncryptionAtRestOptions(CreateDomainRequestEncryptionAtRestOptions encryptionAtRestOptions) {
    this.encryptionAtRestOptions = encryptionAtRestOptions;
  }


  public UpdateDomainConfigRequest domainEndpointOptions(CreateDomainRequestDomainEndpointOptions domainEndpointOptions) {
    this.domainEndpointOptions = domainEndpointOptions;
    return this;
  }

  /**
   * Get domainEndpointOptions
   * @return domainEndpointOptions
   */
  @javax.annotation.Nullable
  public CreateDomainRequestDomainEndpointOptions getDomainEndpointOptions() {
    return domainEndpointOptions;
  }

  public void setDomainEndpointOptions(CreateDomainRequestDomainEndpointOptions domainEndpointOptions) {
    this.domainEndpointOptions = domainEndpointOptions;
  }


  public UpdateDomainConfigRequest nodeToNodeEncryptionOptions(CreateDomainRequestNodeToNodeEncryptionOptions nodeToNodeEncryptionOptions) {
    this.nodeToNodeEncryptionOptions = nodeToNodeEncryptionOptions;
    return this;
  }

  /**
   * Get nodeToNodeEncryptionOptions
   * @return nodeToNodeEncryptionOptions
   */
  @javax.annotation.Nullable
  public CreateDomainRequestNodeToNodeEncryptionOptions getNodeToNodeEncryptionOptions() {
    return nodeToNodeEncryptionOptions;
  }

  public void setNodeToNodeEncryptionOptions(CreateDomainRequestNodeToNodeEncryptionOptions nodeToNodeEncryptionOptions) {
    this.nodeToNodeEncryptionOptions = nodeToNodeEncryptionOptions;
  }


  public UpdateDomainConfigRequest advancedSecurityOptions(CreateDomainRequestAdvancedSecurityOptions advancedSecurityOptions) {
    this.advancedSecurityOptions = advancedSecurityOptions;
    return this;
  }

  /**
   * Get advancedSecurityOptions
   * @return advancedSecurityOptions
   */
  @javax.annotation.Nullable
  public CreateDomainRequestAdvancedSecurityOptions getAdvancedSecurityOptions() {
    return advancedSecurityOptions;
  }

  public void setAdvancedSecurityOptions(CreateDomainRequestAdvancedSecurityOptions advancedSecurityOptions) {
    this.advancedSecurityOptions = advancedSecurityOptions;
  }


  public UpdateDomainConfigRequest autoTuneOptions(UpdateDomainConfigRequestAutoTuneOptions autoTuneOptions) {
    this.autoTuneOptions = autoTuneOptions;
    return this;
  }

  /**
   * Get autoTuneOptions
   * @return autoTuneOptions
   */
  @javax.annotation.Nullable
  public UpdateDomainConfigRequestAutoTuneOptions getAutoTuneOptions() {
    return autoTuneOptions;
  }

  public void setAutoTuneOptions(UpdateDomainConfigRequestAutoTuneOptions autoTuneOptions) {
    this.autoTuneOptions = autoTuneOptions;
  }


  public UpdateDomainConfigRequest dryRun(Boolean dryRun) {
    this.dryRun = dryRun;
    return this;
  }

  /**
   * This flag, when set to True, specifies whether the &lt;code&gt;UpdateDomain&lt;/code&gt; request should return the results of a dry run analysis without actually applying the change. A dry run determines what type of deployment the update will cause.
   * @return dryRun
   */
  @javax.annotation.Nullable
  public Boolean getDryRun() {
    return dryRun;
  }

  public void setDryRun(Boolean dryRun) {
    this.dryRun = dryRun;
  }


  public UpdateDomainConfigRequest dryRunMode(DryRunModeEnum dryRunMode) {
    this.dryRunMode = dryRunMode;
    return this;
  }

  /**
   * &lt;p&gt;The type of dry run to perform.&lt;/p&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt; &lt;code&gt;Basic&lt;/code&gt; only returns the type of deployment (blue/green or dynamic) that the update will cause.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt; &lt;code&gt;Verbose&lt;/code&gt; runs an additional check to validate the changes you&#39;re making. For more information, see &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/opensearch-service/latest/developerguide/managedomains-configuration-changes#validation-check\&quot;&gt;Validating a domain update&lt;/a&gt;.&lt;/p&gt; &lt;/li&gt; &lt;/ul&gt;
   * @return dryRunMode
   */
  @javax.annotation.Nullable
  public DryRunModeEnum getDryRunMode() {
    return dryRunMode;
  }

  public void setDryRunMode(DryRunModeEnum dryRunMode) {
    this.dryRunMode = dryRunMode;
  }


  public UpdateDomainConfigRequest offPeakWindowOptions(CreateDomainRequestOffPeakWindowOptions offPeakWindowOptions) {
    this.offPeakWindowOptions = offPeakWindowOptions;
    return this;
  }

  /**
   * Get offPeakWindowOptions
   * @return offPeakWindowOptions
   */
  @javax.annotation.Nullable
  public CreateDomainRequestOffPeakWindowOptions getOffPeakWindowOptions() {
    return offPeakWindowOptions;
  }

  public void setOffPeakWindowOptions(CreateDomainRequestOffPeakWindowOptions offPeakWindowOptions) {
    this.offPeakWindowOptions = offPeakWindowOptions;
  }


  public UpdateDomainConfigRequest softwareUpdateOptions(CreateDomainRequestSoftwareUpdateOptions softwareUpdateOptions) {
    this.softwareUpdateOptions = softwareUpdateOptions;
    return this;
  }

  /**
   * Get softwareUpdateOptions
   * @return softwareUpdateOptions
   */
  @javax.annotation.Nullable
  public CreateDomainRequestSoftwareUpdateOptions getSoftwareUpdateOptions() {
    return softwareUpdateOptions;
  }

  public void setSoftwareUpdateOptions(CreateDomainRequestSoftwareUpdateOptions softwareUpdateOptions) {
    this.softwareUpdateOptions = softwareUpdateOptions;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    UpdateDomainConfigRequest updateDomainConfigRequest = (UpdateDomainConfigRequest) o;
    return Objects.equals(this.clusterConfig, updateDomainConfigRequest.clusterConfig) &&
        Objects.equals(this.ebSOptions, updateDomainConfigRequest.ebSOptions) &&
        Objects.equals(this.snapshotOptions, updateDomainConfigRequest.snapshotOptions) &&
        Objects.equals(this.vpCOptions, updateDomainConfigRequest.vpCOptions) &&
        Objects.equals(this.cognitoOptions, updateDomainConfigRequest.cognitoOptions) &&
        Objects.equals(this.advancedOptions, updateDomainConfigRequest.advancedOptions) &&
        Objects.equals(this.accessPolicies, updateDomainConfigRequest.accessPolicies) &&
        Objects.equals(this.logPublishingOptions, updateDomainConfigRequest.logPublishingOptions) &&
        Objects.equals(this.encryptionAtRestOptions, updateDomainConfigRequest.encryptionAtRestOptions) &&
        Objects.equals(this.domainEndpointOptions, updateDomainConfigRequest.domainEndpointOptions) &&
        Objects.equals(this.nodeToNodeEncryptionOptions, updateDomainConfigRequest.nodeToNodeEncryptionOptions) &&
        Objects.equals(this.advancedSecurityOptions, updateDomainConfigRequest.advancedSecurityOptions) &&
        Objects.equals(this.autoTuneOptions, updateDomainConfigRequest.autoTuneOptions) &&
        Objects.equals(this.dryRun, updateDomainConfigRequest.dryRun) &&
        Objects.equals(this.dryRunMode, updateDomainConfigRequest.dryRunMode) &&
        Objects.equals(this.offPeakWindowOptions, updateDomainConfigRequest.offPeakWindowOptions) &&
        Objects.equals(this.softwareUpdateOptions, updateDomainConfigRequest.softwareUpdateOptions);
  }

  @Override
  public int hashCode() {
    return Objects.hash(clusterConfig, ebSOptions, snapshotOptions, vpCOptions, cognitoOptions, advancedOptions, accessPolicies, logPublishingOptions, encryptionAtRestOptions, domainEndpointOptions, nodeToNodeEncryptionOptions, advancedSecurityOptions, autoTuneOptions, dryRun, dryRunMode, offPeakWindowOptions, softwareUpdateOptions);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class UpdateDomainConfigRequest {\n");
    sb.append("    clusterConfig: ").append(toIndentedString(clusterConfig)).append("\n");
    sb.append("    ebSOptions: ").append(toIndentedString(ebSOptions)).append("\n");
    sb.append("    snapshotOptions: ").append(toIndentedString(snapshotOptions)).append("\n");
    sb.append("    vpCOptions: ").append(toIndentedString(vpCOptions)).append("\n");
    sb.append("    cognitoOptions: ").append(toIndentedString(cognitoOptions)).append("\n");
    sb.append("    advancedOptions: ").append(toIndentedString(advancedOptions)).append("\n");
    sb.append("    accessPolicies: ").append(toIndentedString(accessPolicies)).append("\n");
    sb.append("    logPublishingOptions: ").append(toIndentedString(logPublishingOptions)).append("\n");
    sb.append("    encryptionAtRestOptions: ").append(toIndentedString(encryptionAtRestOptions)).append("\n");
    sb.append("    domainEndpointOptions: ").append(toIndentedString(domainEndpointOptions)).append("\n");
    sb.append("    nodeToNodeEncryptionOptions: ").append(toIndentedString(nodeToNodeEncryptionOptions)).append("\n");
    sb.append("    advancedSecurityOptions: ").append(toIndentedString(advancedSecurityOptions)).append("\n");
    sb.append("    autoTuneOptions: ").append(toIndentedString(autoTuneOptions)).append("\n");
    sb.append("    dryRun: ").append(toIndentedString(dryRun)).append("\n");
    sb.append("    dryRunMode: ").append(toIndentedString(dryRunMode)).append("\n");
    sb.append("    offPeakWindowOptions: ").append(toIndentedString(offPeakWindowOptions)).append("\n");
    sb.append("    softwareUpdateOptions: ").append(toIndentedString(softwareUpdateOptions)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("ClusterConfig");
    openapiFields.add("EBSOptions");
    openapiFields.add("SnapshotOptions");
    openapiFields.add("VPCOptions");
    openapiFields.add("CognitoOptions");
    openapiFields.add("AdvancedOptions");
    openapiFields.add("AccessPolicies");
    openapiFields.add("LogPublishingOptions");
    openapiFields.add("EncryptionAtRestOptions");
    openapiFields.add("DomainEndpointOptions");
    openapiFields.add("NodeToNodeEncryptionOptions");
    openapiFields.add("AdvancedSecurityOptions");
    openapiFields.add("AutoTuneOptions");
    openapiFields.add("DryRun");
    openapiFields.add("DryRunMode");
    openapiFields.add("OffPeakWindowOptions");
    openapiFields.add("SoftwareUpdateOptions");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to UpdateDomainConfigRequest
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!UpdateDomainConfigRequest.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in UpdateDomainConfigRequest is not found in the empty JSON string", UpdateDomainConfigRequest.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!UpdateDomainConfigRequest.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `UpdateDomainConfigRequest` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // validate the optional field `ClusterConfig`
      if (jsonObj.get("ClusterConfig") != null && !jsonObj.get("ClusterConfig").isJsonNull()) {
        CreateDomainRequestClusterConfig.validateJsonElement(jsonObj.get("ClusterConfig"));
      }
      // validate the optional field `EBSOptions`
      if (jsonObj.get("EBSOptions") != null && !jsonObj.get("EBSOptions").isJsonNull()) {
        CreateDomainRequestEBSOptions.validateJsonElement(jsonObj.get("EBSOptions"));
      }
      // validate the optional field `SnapshotOptions`
      if (jsonObj.get("SnapshotOptions") != null && !jsonObj.get("SnapshotOptions").isJsonNull()) {
        CreateDomainRequestSnapshotOptions.validateJsonElement(jsonObj.get("SnapshotOptions"));
      }
      // validate the optional field `VPCOptions`
      if (jsonObj.get("VPCOptions") != null && !jsonObj.get("VPCOptions").isJsonNull()) {
        CreateDomainRequestVPCOptions.validateJsonElement(jsonObj.get("VPCOptions"));
      }
      // validate the optional field `CognitoOptions`
      if (jsonObj.get("CognitoOptions") != null && !jsonObj.get("CognitoOptions").isJsonNull()) {
        CreateDomainRequestCognitoOptions.validateJsonElement(jsonObj.get("CognitoOptions"));
      }
      if ((jsonObj.get("AccessPolicies") != null && !jsonObj.get("AccessPolicies").isJsonNull()) && !jsonObj.get("AccessPolicies").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `AccessPolicies` to be a primitive type in the JSON string but got `%s`", jsonObj.get("AccessPolicies").toString()));
      }
      // validate the optional field `EncryptionAtRestOptions`
      if (jsonObj.get("EncryptionAtRestOptions") != null && !jsonObj.get("EncryptionAtRestOptions").isJsonNull()) {
        CreateDomainRequestEncryptionAtRestOptions.validateJsonElement(jsonObj.get("EncryptionAtRestOptions"));
      }
      // validate the optional field `DomainEndpointOptions`
      if (jsonObj.get("DomainEndpointOptions") != null && !jsonObj.get("DomainEndpointOptions").isJsonNull()) {
        CreateDomainRequestDomainEndpointOptions.validateJsonElement(jsonObj.get("DomainEndpointOptions"));
      }
      // validate the optional field `NodeToNodeEncryptionOptions`
      if (jsonObj.get("NodeToNodeEncryptionOptions") != null && !jsonObj.get("NodeToNodeEncryptionOptions").isJsonNull()) {
        CreateDomainRequestNodeToNodeEncryptionOptions.validateJsonElement(jsonObj.get("NodeToNodeEncryptionOptions"));
      }
      // validate the optional field `AdvancedSecurityOptions`
      if (jsonObj.get("AdvancedSecurityOptions") != null && !jsonObj.get("AdvancedSecurityOptions").isJsonNull()) {
        CreateDomainRequestAdvancedSecurityOptions.validateJsonElement(jsonObj.get("AdvancedSecurityOptions"));
      }
      // validate the optional field `AutoTuneOptions`
      if (jsonObj.get("AutoTuneOptions") != null && !jsonObj.get("AutoTuneOptions").isJsonNull()) {
        UpdateDomainConfigRequestAutoTuneOptions.validateJsonElement(jsonObj.get("AutoTuneOptions"));
      }
      if ((jsonObj.get("DryRunMode") != null && !jsonObj.get("DryRunMode").isJsonNull()) && !jsonObj.get("DryRunMode").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `DryRunMode` to be a primitive type in the JSON string but got `%s`", jsonObj.get("DryRunMode").toString()));
      }
      // validate the optional field `DryRunMode`
      if (jsonObj.get("DryRunMode") != null && !jsonObj.get("DryRunMode").isJsonNull()) {
        DryRunModeEnum.validateJsonElement(jsonObj.get("DryRunMode"));
      }
      // validate the optional field `OffPeakWindowOptions`
      if (jsonObj.get("OffPeakWindowOptions") != null && !jsonObj.get("OffPeakWindowOptions").isJsonNull()) {
        CreateDomainRequestOffPeakWindowOptions.validateJsonElement(jsonObj.get("OffPeakWindowOptions"));
      }
      // validate the optional field `SoftwareUpdateOptions`
      if (jsonObj.get("SoftwareUpdateOptions") != null && !jsonObj.get("SoftwareUpdateOptions").isJsonNull()) {
        CreateDomainRequestSoftwareUpdateOptions.validateJsonElement(jsonObj.get("SoftwareUpdateOptions"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!UpdateDomainConfigRequest.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'UpdateDomainConfigRequest' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<UpdateDomainConfigRequest> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(UpdateDomainConfigRequest.class));

       return (TypeAdapter<T>) new TypeAdapter<UpdateDomainConfigRequest>() {
           @Override
           public void write(JsonWriter out, UpdateDomainConfigRequest value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public UpdateDomainConfigRequest read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of UpdateDomainConfigRequest given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of UpdateDomainConfigRequest
   * @throws IOException if the JSON string is invalid with respect to UpdateDomainConfigRequest
   */
  public static UpdateDomainConfigRequest fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, UpdateDomainConfigRequest.class);
  }

  /**
   * Convert an instance of UpdateDomainConfigRequest to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

