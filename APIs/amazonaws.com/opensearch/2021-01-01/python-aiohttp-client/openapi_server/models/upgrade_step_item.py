# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.upgrade_status import UpgradeStatus
from openapi_server.models.upgrade_step import UpgradeStep
from openapi_server import util


class UpgradeStepItem(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, upgrade_step: UpgradeStep=None, upgrade_step_status: UpgradeStatus=None, issues: List=None, progress_percent: float=None):
        """UpgradeStepItem - a model defined in OpenAPI

        :param upgrade_step: The upgrade_step of this UpgradeStepItem.
        :param upgrade_step_status: The upgrade_step_status of this UpgradeStepItem.
        :param issues: The issues of this UpgradeStepItem.
        :param progress_percent: The progress_percent of this UpgradeStepItem.
        """
        self.openapi_types = {
            'upgrade_step': UpgradeStep,
            'upgrade_step_status': UpgradeStatus,
            'issues': List,
            'progress_percent': float
        }

        self.attribute_map = {
            'upgrade_step': 'UpgradeStep',
            'upgrade_step_status': 'UpgradeStepStatus',
            'issues': 'Issues',
            'progress_percent': 'ProgressPercent'
        }

        self._upgrade_step = upgrade_step
        self._upgrade_step_status = upgrade_step_status
        self._issues = issues
        self._progress_percent = progress_percent

    @classmethod
    def from_dict(cls, dikt: dict) -> 'UpgradeStepItem':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The UpgradeStepItem of this UpgradeStepItem.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def upgrade_step(self):
        """Gets the upgrade_step of this UpgradeStepItem.


        :return: The upgrade_step of this UpgradeStepItem.
        :rtype: UpgradeStep
        """
        return self._upgrade_step

    @upgrade_step.setter
    def upgrade_step(self, upgrade_step):
        """Sets the upgrade_step of this UpgradeStepItem.


        :param upgrade_step: The upgrade_step of this UpgradeStepItem.
        :type upgrade_step: UpgradeStep
        """

        self._upgrade_step = upgrade_step

    @property
    def upgrade_step_status(self):
        """Gets the upgrade_step_status of this UpgradeStepItem.


        :return: The upgrade_step_status of this UpgradeStepItem.
        :rtype: UpgradeStatus
        """
        return self._upgrade_step_status

    @upgrade_step_status.setter
    def upgrade_step_status(self, upgrade_step_status):
        """Sets the upgrade_step_status of this UpgradeStepItem.


        :param upgrade_step_status: The upgrade_step_status of this UpgradeStepItem.
        :type upgrade_step_status: UpgradeStatus
        """

        self._upgrade_step_status = upgrade_step_status

    @property
    def issues(self):
        """Gets the issues of this UpgradeStepItem.


        :return: The issues of this UpgradeStepItem.
        :rtype: List
        """
        return self._issues

    @issues.setter
    def issues(self, issues):
        """Sets the issues of this UpgradeStepItem.


        :param issues: The issues of this UpgradeStepItem.
        :type issues: List
        """

        self._issues = issues

    @property
    def progress_percent(self):
        """Gets the progress_percent of this UpgradeStepItem.


        :return: The progress_percent of this UpgradeStepItem.
        :rtype: float
        """
        return self._progress_percent

    @progress_percent.setter
    def progress_percent(self, progress_percent):
        """Sets the progress_percent of this UpgradeStepItem.


        :param progress_percent: The progress_percent of this UpgradeStepItem.
        :type progress_percent: float
        """

        self._progress_percent = progress_percent
