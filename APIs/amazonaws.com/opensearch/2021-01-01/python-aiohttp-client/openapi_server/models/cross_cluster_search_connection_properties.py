# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.skip_unavailable_status import SkipUnavailableStatus
from openapi_server import util


class CrossClusterSearchConnectionProperties(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, skip_unavailable: SkipUnavailableStatus=None):
        """CrossClusterSearchConnectionProperties - a model defined in OpenAPI

        :param skip_unavailable: The skip_unavailable of this CrossClusterSearchConnectionProperties.
        """
        self.openapi_types = {
            'skip_unavailable': SkipUnavailableStatus
        }

        self.attribute_map = {
            'skip_unavailable': 'SkipUnavailable'
        }

        self._skip_unavailable = skip_unavailable

    @classmethod
    def from_dict(cls, dikt: dict) -> 'CrossClusterSearchConnectionProperties':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The CrossClusterSearchConnectionProperties of this CrossClusterSearchConnectionProperties.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def skip_unavailable(self):
        """Gets the skip_unavailable of this CrossClusterSearchConnectionProperties.


        :return: The skip_unavailable of this CrossClusterSearchConnectionProperties.
        :rtype: SkipUnavailableStatus
        """
        return self._skip_unavailable

    @skip_unavailable.setter
    def skip_unavailable(self, skip_unavailable):
        """Sets the skip_unavailable of this CrossClusterSearchConnectionProperties.


        :param skip_unavailable: The skip_unavailable of this CrossClusterSearchConnectionProperties.
        :type skip_unavailable: SkipUnavailableStatus
        """

        self._skip_unavailable = skip_unavailable
