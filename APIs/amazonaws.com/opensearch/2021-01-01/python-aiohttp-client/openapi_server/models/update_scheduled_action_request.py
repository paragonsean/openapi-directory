# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class UpdateScheduledActionRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, action_id: str=None, action_type: str=None, schedule_at: str=None, desired_start_time: int=None):
        """UpdateScheduledActionRequest - a model defined in OpenAPI

        :param action_id: The action_id of this UpdateScheduledActionRequest.
        :param action_type: The action_type of this UpdateScheduledActionRequest.
        :param schedule_at: The schedule_at of this UpdateScheduledActionRequest.
        :param desired_start_time: The desired_start_time of this UpdateScheduledActionRequest.
        """
        self.openapi_types = {
            'action_id': str,
            'action_type': str,
            'schedule_at': str,
            'desired_start_time': int
        }

        self.attribute_map = {
            'action_id': 'ActionID',
            'action_type': 'ActionType',
            'schedule_at': 'ScheduleAt',
            'desired_start_time': 'DesiredStartTime'
        }

        self._action_id = action_id
        self._action_type = action_type
        self._schedule_at = schedule_at
        self._desired_start_time = desired_start_time

    @classmethod
    def from_dict(cls, dikt: dict) -> 'UpdateScheduledActionRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The UpdateScheduledAction_request of this UpdateScheduledActionRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def action_id(self):
        """Gets the action_id of this UpdateScheduledActionRequest.

        The unique identifier of the action to reschedule. To retrieve this ID, send a <a href=\"https://docs.aws.amazon.com/opensearch-service/latest/APIReference/API_ListScheduledActions.html\">ListScheduledActions</a> request.

        :return: The action_id of this UpdateScheduledActionRequest.
        :rtype: str
        """
        return self._action_id

    @action_id.setter
    def action_id(self, action_id):
        """Sets the action_id of this UpdateScheduledActionRequest.

        The unique identifier of the action to reschedule. To retrieve this ID, send a <a href=\"https://docs.aws.amazon.com/opensearch-service/latest/APIReference/API_ListScheduledActions.html\">ListScheduledActions</a> request.

        :param action_id: The action_id of this UpdateScheduledActionRequest.
        :type action_id: str
        """
        if action_id is None:
            raise ValueError("Invalid value for `action_id`, must not be `None`")

        self._action_id = action_id

    @property
    def action_type(self):
        """Gets the action_type of this UpdateScheduledActionRequest.

        The type of action to reschedule. Can be one of <code>SERVICE_SOFTWARE_UPDATE</code>, <code>JVM_HEAP_SIZE_TUNING</code>, or <code>JVM_YOUNG_GEN_TUNING</code>. To retrieve this value, send a <a href=\"https://docs.aws.amazon.com/opensearch-service/latest/APIReference/API_ListScheduledActions.html\">ListScheduledActions</a> request.

        :return: The action_type of this UpdateScheduledActionRequest.
        :rtype: str
        """
        return self._action_type

    @action_type.setter
    def action_type(self, action_type):
        """Sets the action_type of this UpdateScheduledActionRequest.

        The type of action to reschedule. Can be one of <code>SERVICE_SOFTWARE_UPDATE</code>, <code>JVM_HEAP_SIZE_TUNING</code>, or <code>JVM_YOUNG_GEN_TUNING</code>. To retrieve this value, send a <a href=\"https://docs.aws.amazon.com/opensearch-service/latest/APIReference/API_ListScheduledActions.html\">ListScheduledActions</a> request.

        :param action_type: The action_type of this UpdateScheduledActionRequest.
        :type action_type: str
        """
        allowed_values = ["SERVICE_SOFTWARE_UPDATE", "JVM_HEAP_SIZE_TUNING", "JVM_YOUNG_GEN_TUNING"]  # noqa: E501
        if action_type not in allowed_values:
            raise ValueError(
                "Invalid value for `action_type` ({0}), must be one of {1}"
                .format(action_type, allowed_values)
            )

        self._action_type = action_type

    @property
    def schedule_at(self):
        """Gets the schedule_at of this UpdateScheduledActionRequest.

        <p>When to schedule the action.</p> <ul> <li> <p> <code>NOW</code> - Immediately schedules the update to happen in the current hour if there's capacity available.</p> </li> <li> <p> <code>TIMESTAMP</code> - Lets you specify a custom date and time to apply the update. If you specify this value, you must also provide a value for <code>DesiredStartTime</code>.</p> </li> <li> <p> <code>OFF_PEAK_WINDOW</code> - Marks the action to be picked up during an upcoming off-peak window. There's no guarantee that the change will be implemented during the next immediate window. Depending on capacity, it might happen in subsequent days.</p> </li> </ul>

        :return: The schedule_at of this UpdateScheduledActionRequest.
        :rtype: str
        """
        return self._schedule_at

    @schedule_at.setter
    def schedule_at(self, schedule_at):
        """Sets the schedule_at of this UpdateScheduledActionRequest.

        <p>When to schedule the action.</p> <ul> <li> <p> <code>NOW</code> - Immediately schedules the update to happen in the current hour if there's capacity available.</p> </li> <li> <p> <code>TIMESTAMP</code> - Lets you specify a custom date and time to apply the update. If you specify this value, you must also provide a value for <code>DesiredStartTime</code>.</p> </li> <li> <p> <code>OFF_PEAK_WINDOW</code> - Marks the action to be picked up during an upcoming off-peak window. There's no guarantee that the change will be implemented during the next immediate window. Depending on capacity, it might happen in subsequent days.</p> </li> </ul>

        :param schedule_at: The schedule_at of this UpdateScheduledActionRequest.
        :type schedule_at: str
        """
        allowed_values = ["NOW", "TIMESTAMP", "OFF_PEAK_WINDOW"]  # noqa: E501
        if schedule_at not in allowed_values:
            raise ValueError(
                "Invalid value for `schedule_at` ({0}), must be one of {1}"
                .format(schedule_at, allowed_values)
            )

        self._schedule_at = schedule_at

    @property
    def desired_start_time(self):
        """Gets the desired_start_time of this UpdateScheduledActionRequest.

        The time to implement the change, in Coordinated Universal Time (UTC). Only specify this parameter if you set <code>ScheduleAt</code> to <code>TIMESTAMP</code>.

        :return: The desired_start_time of this UpdateScheduledActionRequest.
        :rtype: int
        """
        return self._desired_start_time

    @desired_start_time.setter
    def desired_start_time(self, desired_start_time):
        """Sets the desired_start_time of this UpdateScheduledActionRequest.

        The time to implement the change, in Coordinated Universal Time (UTC). Only specify this parameter if you set <code>ScheduleAt</code> to <code>TIMESTAMP</code>.

        :param desired_start_time: The desired_start_time of this UpdateScheduledActionRequest.
        :type desired_start_time: int
        """

        self._desired_start_time = desired_start_time
