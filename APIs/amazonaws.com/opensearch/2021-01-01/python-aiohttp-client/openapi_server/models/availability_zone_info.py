# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.zone_status import ZoneStatus
from openapi_server import util


class AvailabilityZoneInfo(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, availability_zone_name: str=None, zone_status: ZoneStatus=None, configured_data_node_count: str=None, available_data_node_count: str=None, total_shards: str=None, total_un_assigned_shards: str=None):
        """AvailabilityZoneInfo - a model defined in OpenAPI

        :param availability_zone_name: The availability_zone_name of this AvailabilityZoneInfo.
        :param zone_status: The zone_status of this AvailabilityZoneInfo.
        :param configured_data_node_count: The configured_data_node_count of this AvailabilityZoneInfo.
        :param available_data_node_count: The available_data_node_count of this AvailabilityZoneInfo.
        :param total_shards: The total_shards of this AvailabilityZoneInfo.
        :param total_un_assigned_shards: The total_un_assigned_shards of this AvailabilityZoneInfo.
        """
        self.openapi_types = {
            'availability_zone_name': str,
            'zone_status': ZoneStatus,
            'configured_data_node_count': str,
            'available_data_node_count': str,
            'total_shards': str,
            'total_un_assigned_shards': str
        }

        self.attribute_map = {
            'availability_zone_name': 'AvailabilityZoneName',
            'zone_status': 'ZoneStatus',
            'configured_data_node_count': 'ConfiguredDataNodeCount',
            'available_data_node_count': 'AvailableDataNodeCount',
            'total_shards': 'TotalShards',
            'total_un_assigned_shards': 'TotalUnAssignedShards'
        }

        self._availability_zone_name = availability_zone_name
        self._zone_status = zone_status
        self._configured_data_node_count = configured_data_node_count
        self._available_data_node_count = available_data_node_count
        self._total_shards = total_shards
        self._total_un_assigned_shards = total_un_assigned_shards

    @classmethod
    def from_dict(cls, dikt: dict) -> 'AvailabilityZoneInfo':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The AvailabilityZoneInfo of this AvailabilityZoneInfo.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def availability_zone_name(self):
        """Gets the availability_zone_name of this AvailabilityZoneInfo.


        :return: The availability_zone_name of this AvailabilityZoneInfo.
        :rtype: str
        """
        return self._availability_zone_name

    @availability_zone_name.setter
    def availability_zone_name(self, availability_zone_name):
        """Sets the availability_zone_name of this AvailabilityZoneInfo.


        :param availability_zone_name: The availability_zone_name of this AvailabilityZoneInfo.
        :type availability_zone_name: str
        """

        self._availability_zone_name = availability_zone_name

    @property
    def zone_status(self):
        """Gets the zone_status of this AvailabilityZoneInfo.


        :return: The zone_status of this AvailabilityZoneInfo.
        :rtype: ZoneStatus
        """
        return self._zone_status

    @zone_status.setter
    def zone_status(self, zone_status):
        """Sets the zone_status of this AvailabilityZoneInfo.


        :param zone_status: The zone_status of this AvailabilityZoneInfo.
        :type zone_status: ZoneStatus
        """

        self._zone_status = zone_status

    @property
    def configured_data_node_count(self):
        """Gets the configured_data_node_count of this AvailabilityZoneInfo.


        :return: The configured_data_node_count of this AvailabilityZoneInfo.
        :rtype: str
        """
        return self._configured_data_node_count

    @configured_data_node_count.setter
    def configured_data_node_count(self, configured_data_node_count):
        """Sets the configured_data_node_count of this AvailabilityZoneInfo.


        :param configured_data_node_count: The configured_data_node_count of this AvailabilityZoneInfo.
        :type configured_data_node_count: str
        """

        self._configured_data_node_count = configured_data_node_count

    @property
    def available_data_node_count(self):
        """Gets the available_data_node_count of this AvailabilityZoneInfo.


        :return: The available_data_node_count of this AvailabilityZoneInfo.
        :rtype: str
        """
        return self._available_data_node_count

    @available_data_node_count.setter
    def available_data_node_count(self, available_data_node_count):
        """Sets the available_data_node_count of this AvailabilityZoneInfo.


        :param available_data_node_count: The available_data_node_count of this AvailabilityZoneInfo.
        :type available_data_node_count: str
        """

        self._available_data_node_count = available_data_node_count

    @property
    def total_shards(self):
        """Gets the total_shards of this AvailabilityZoneInfo.


        :return: The total_shards of this AvailabilityZoneInfo.
        :rtype: str
        """
        return self._total_shards

    @total_shards.setter
    def total_shards(self, total_shards):
        """Sets the total_shards of this AvailabilityZoneInfo.


        :param total_shards: The total_shards of this AvailabilityZoneInfo.
        :type total_shards: str
        """

        self._total_shards = total_shards

    @property
    def total_un_assigned_shards(self):
        """Gets the total_un_assigned_shards of this AvailabilityZoneInfo.


        :return: The total_un_assigned_shards of this AvailabilityZoneInfo.
        :rtype: str
        """
        return self._total_un_assigned_shards

    @total_un_assigned_shards.setter
    def total_un_assigned_shards(self, total_un_assigned_shards):
        """Sets the total_un_assigned_shards of this AvailabilityZoneInfo.


        :param total_un_assigned_shards: The total_un_assigned_shards of this AvailabilityZoneInfo.
        :type total_un_assigned_shards: str
        """

        self._total_un_assigned_shards = total_un_assigned_shards
