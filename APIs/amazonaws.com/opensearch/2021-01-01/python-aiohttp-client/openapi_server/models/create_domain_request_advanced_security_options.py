# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.create_domain_request_advanced_security_options_master_user_options import CreateDomainRequestAdvancedSecurityOptionsMasterUserOptions
from openapi_server.models.create_domain_request_advanced_security_options_saml_options import CreateDomainRequestAdvancedSecurityOptionsSAMLOptions
from openapi_server import util


class CreateDomainRequestAdvancedSecurityOptions(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, enabled: bool=None, internal_user_database_enabled: bool=None, master_user_options: CreateDomainRequestAdvancedSecurityOptionsMasterUserOptions=None, saml_options: CreateDomainRequestAdvancedSecurityOptionsSAMLOptions=None, anonymous_auth_enabled: bool=None):
        """CreateDomainRequestAdvancedSecurityOptions - a model defined in OpenAPI

        :param enabled: The enabled of this CreateDomainRequestAdvancedSecurityOptions.
        :param internal_user_database_enabled: The internal_user_database_enabled of this CreateDomainRequestAdvancedSecurityOptions.
        :param master_user_options: The master_user_options of this CreateDomainRequestAdvancedSecurityOptions.
        :param saml_options: The saml_options of this CreateDomainRequestAdvancedSecurityOptions.
        :param anonymous_auth_enabled: The anonymous_auth_enabled of this CreateDomainRequestAdvancedSecurityOptions.
        """
        self.openapi_types = {
            'enabled': bool,
            'internal_user_database_enabled': bool,
            'master_user_options': CreateDomainRequestAdvancedSecurityOptionsMasterUserOptions,
            'saml_options': CreateDomainRequestAdvancedSecurityOptionsSAMLOptions,
            'anonymous_auth_enabled': bool
        }

        self.attribute_map = {
            'enabled': 'Enabled',
            'internal_user_database_enabled': 'InternalUserDatabaseEnabled',
            'master_user_options': 'MasterUserOptions',
            'saml_options': 'SAMLOptions',
            'anonymous_auth_enabled': 'AnonymousAuthEnabled'
        }

        self._enabled = enabled
        self._internal_user_database_enabled = internal_user_database_enabled
        self._master_user_options = master_user_options
        self._saml_options = saml_options
        self._anonymous_auth_enabled = anonymous_auth_enabled

    @classmethod
    def from_dict(cls, dikt: dict) -> 'CreateDomainRequestAdvancedSecurityOptions':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The CreateDomainRequest_AdvancedSecurityOptions of this CreateDomainRequestAdvancedSecurityOptions.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def enabled(self):
        """Gets the enabled of this CreateDomainRequestAdvancedSecurityOptions.


        :return: The enabled of this CreateDomainRequestAdvancedSecurityOptions.
        :rtype: bool
        """
        return self._enabled

    @enabled.setter
    def enabled(self, enabled):
        """Sets the enabled of this CreateDomainRequestAdvancedSecurityOptions.


        :param enabled: The enabled of this CreateDomainRequestAdvancedSecurityOptions.
        :type enabled: bool
        """

        self._enabled = enabled

    @property
    def internal_user_database_enabled(self):
        """Gets the internal_user_database_enabled of this CreateDomainRequestAdvancedSecurityOptions.


        :return: The internal_user_database_enabled of this CreateDomainRequestAdvancedSecurityOptions.
        :rtype: bool
        """
        return self._internal_user_database_enabled

    @internal_user_database_enabled.setter
    def internal_user_database_enabled(self, internal_user_database_enabled):
        """Sets the internal_user_database_enabled of this CreateDomainRequestAdvancedSecurityOptions.


        :param internal_user_database_enabled: The internal_user_database_enabled of this CreateDomainRequestAdvancedSecurityOptions.
        :type internal_user_database_enabled: bool
        """

        self._internal_user_database_enabled = internal_user_database_enabled

    @property
    def master_user_options(self):
        """Gets the master_user_options of this CreateDomainRequestAdvancedSecurityOptions.


        :return: The master_user_options of this CreateDomainRequestAdvancedSecurityOptions.
        :rtype: CreateDomainRequestAdvancedSecurityOptionsMasterUserOptions
        """
        return self._master_user_options

    @master_user_options.setter
    def master_user_options(self, master_user_options):
        """Sets the master_user_options of this CreateDomainRequestAdvancedSecurityOptions.


        :param master_user_options: The master_user_options of this CreateDomainRequestAdvancedSecurityOptions.
        :type master_user_options: CreateDomainRequestAdvancedSecurityOptionsMasterUserOptions
        """

        self._master_user_options = master_user_options

    @property
    def saml_options(self):
        """Gets the saml_options of this CreateDomainRequestAdvancedSecurityOptions.


        :return: The saml_options of this CreateDomainRequestAdvancedSecurityOptions.
        :rtype: CreateDomainRequestAdvancedSecurityOptionsSAMLOptions
        """
        return self._saml_options

    @saml_options.setter
    def saml_options(self, saml_options):
        """Sets the saml_options of this CreateDomainRequestAdvancedSecurityOptions.


        :param saml_options: The saml_options of this CreateDomainRequestAdvancedSecurityOptions.
        :type saml_options: CreateDomainRequestAdvancedSecurityOptionsSAMLOptions
        """

        self._saml_options = saml_options

    @property
    def anonymous_auth_enabled(self):
        """Gets the anonymous_auth_enabled of this CreateDomainRequestAdvancedSecurityOptions.


        :return: The anonymous_auth_enabled of this CreateDomainRequestAdvancedSecurityOptions.
        :rtype: bool
        """
        return self._anonymous_auth_enabled

    @anonymous_auth_enabled.setter
    def anonymous_auth_enabled(self, anonymous_auth_enabled):
        """Sets the anonymous_auth_enabled of this CreateDomainRequestAdvancedSecurityOptions.


        :param anonymous_auth_enabled: The anonymous_auth_enabled of this CreateDomainRequestAdvancedSecurityOptions.
        :type anonymous_auth_enabled: bool
        """

        self._anonymous_auth_enabled = anonymous_auth_enabled
