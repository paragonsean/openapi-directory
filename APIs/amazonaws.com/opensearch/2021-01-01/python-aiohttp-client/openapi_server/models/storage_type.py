# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class StorageType(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, storage_type_name: str=None, storage_sub_type_name: str=None, storage_type_limits: List=None):
        """StorageType - a model defined in OpenAPI

        :param storage_type_name: The storage_type_name of this StorageType.
        :param storage_sub_type_name: The storage_sub_type_name of this StorageType.
        :param storage_type_limits: The storage_type_limits of this StorageType.
        """
        self.openapi_types = {
            'storage_type_name': str,
            'storage_sub_type_name': str,
            'storage_type_limits': List
        }

        self.attribute_map = {
            'storage_type_name': 'StorageTypeName',
            'storage_sub_type_name': 'StorageSubTypeName',
            'storage_type_limits': 'StorageTypeLimits'
        }

        self._storage_type_name = storage_type_name
        self._storage_sub_type_name = storage_sub_type_name
        self._storage_type_limits = storage_type_limits

    @classmethod
    def from_dict(cls, dikt: dict) -> 'StorageType':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The StorageType of this StorageType.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def storage_type_name(self):
        """Gets the storage_type_name of this StorageType.


        :return: The storage_type_name of this StorageType.
        :rtype: str
        """
        return self._storage_type_name

    @storage_type_name.setter
    def storage_type_name(self, storage_type_name):
        """Sets the storage_type_name of this StorageType.


        :param storage_type_name: The storage_type_name of this StorageType.
        :type storage_type_name: str
        """

        self._storage_type_name = storage_type_name

    @property
    def storage_sub_type_name(self):
        """Gets the storage_sub_type_name of this StorageType.


        :return: The storage_sub_type_name of this StorageType.
        :rtype: str
        """
        return self._storage_sub_type_name

    @storage_sub_type_name.setter
    def storage_sub_type_name(self, storage_sub_type_name):
        """Sets the storage_sub_type_name of this StorageType.


        :param storage_sub_type_name: The storage_sub_type_name of this StorageType.
        :type storage_sub_type_name: str
        """

        self._storage_sub_type_name = storage_sub_type_name

    @property
    def storage_type_limits(self):
        """Gets the storage_type_limits of this StorageType.


        :return: The storage_type_limits of this StorageType.
        :rtype: List
        """
        return self._storage_type_limits

    @storage_type_limits.setter
    def storage_type_limits(self, storage_type_limits):
        """Sets the storage_type_limits of this StorageType.


        :param storage_type_limits: The storage_type_limits of this StorageType.
        :type storage_type_limits: List
        """

        self._storage_type_limits = storage_type_limits
