# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class InstanceCountLimits(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, minimum_instance_count: int=None, maximum_instance_count: int=None):
        """InstanceCountLimits - a model defined in OpenAPI

        :param minimum_instance_count: The minimum_instance_count of this InstanceCountLimits.
        :param maximum_instance_count: The maximum_instance_count of this InstanceCountLimits.
        """
        self.openapi_types = {
            'minimum_instance_count': int,
            'maximum_instance_count': int
        }

        self.attribute_map = {
            'minimum_instance_count': 'MinimumInstanceCount',
            'maximum_instance_count': 'MaximumInstanceCount'
        }

        self._minimum_instance_count = minimum_instance_count
        self._maximum_instance_count = maximum_instance_count

    @classmethod
    def from_dict(cls, dikt: dict) -> 'InstanceCountLimits':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The InstanceCountLimits of this InstanceCountLimits.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def minimum_instance_count(self):
        """Gets the minimum_instance_count of this InstanceCountLimits.


        :return: The minimum_instance_count of this InstanceCountLimits.
        :rtype: int
        """
        return self._minimum_instance_count

    @minimum_instance_count.setter
    def minimum_instance_count(self, minimum_instance_count):
        """Sets the minimum_instance_count of this InstanceCountLimits.


        :param minimum_instance_count: The minimum_instance_count of this InstanceCountLimits.
        :type minimum_instance_count: int
        """

        self._minimum_instance_count = minimum_instance_count

    @property
    def maximum_instance_count(self):
        """Gets the maximum_instance_count of this InstanceCountLimits.


        :return: The maximum_instance_count of this InstanceCountLimits.
        :rtype: int
        """
        return self._maximum_instance_count

    @maximum_instance_count.setter
    def maximum_instance_count(self, maximum_instance_count):
        """Sets the maximum_instance_count of this InstanceCountLimits.


        :param maximum_instance_count: The maximum_instance_count of this InstanceCountLimits.
        :type maximum_instance_count: int
        """

        self._maximum_instance_count = maximum_instance_count
