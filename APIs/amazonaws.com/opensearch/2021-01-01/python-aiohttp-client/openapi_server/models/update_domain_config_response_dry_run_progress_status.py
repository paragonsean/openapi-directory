# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class UpdateDomainConfigResponseDryRunProgressStatus(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, dry_run_id: str=None, dry_run_status: str=None, creation_date: str=None, update_date: str=None, validation_failures: List=None):
        """UpdateDomainConfigResponseDryRunProgressStatus - a model defined in OpenAPI

        :param dry_run_id: The dry_run_id of this UpdateDomainConfigResponseDryRunProgressStatus.
        :param dry_run_status: The dry_run_status of this UpdateDomainConfigResponseDryRunProgressStatus.
        :param creation_date: The creation_date of this UpdateDomainConfigResponseDryRunProgressStatus.
        :param update_date: The update_date of this UpdateDomainConfigResponseDryRunProgressStatus.
        :param validation_failures: The validation_failures of this UpdateDomainConfigResponseDryRunProgressStatus.
        """
        self.openapi_types = {
            'dry_run_id': str,
            'dry_run_status': str,
            'creation_date': str,
            'update_date': str,
            'validation_failures': List
        }

        self.attribute_map = {
            'dry_run_id': 'DryRunId',
            'dry_run_status': 'DryRunStatus',
            'creation_date': 'CreationDate',
            'update_date': 'UpdateDate',
            'validation_failures': 'ValidationFailures'
        }

        self._dry_run_id = dry_run_id
        self._dry_run_status = dry_run_status
        self._creation_date = creation_date
        self._update_date = update_date
        self._validation_failures = validation_failures

    @classmethod
    def from_dict(cls, dikt: dict) -> 'UpdateDomainConfigResponseDryRunProgressStatus':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The UpdateDomainConfigResponse_DryRunProgressStatus of this UpdateDomainConfigResponseDryRunProgressStatus.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def dry_run_id(self):
        """Gets the dry_run_id of this UpdateDomainConfigResponseDryRunProgressStatus.


        :return: The dry_run_id of this UpdateDomainConfigResponseDryRunProgressStatus.
        :rtype: str
        """
        return self._dry_run_id

    @dry_run_id.setter
    def dry_run_id(self, dry_run_id):
        """Sets the dry_run_id of this UpdateDomainConfigResponseDryRunProgressStatus.


        :param dry_run_id: The dry_run_id of this UpdateDomainConfigResponseDryRunProgressStatus.
        :type dry_run_id: str
        """
        if dry_run_id is None:
            raise ValueError("Invalid value for `dry_run_id`, must not be `None`")

        self._dry_run_id = dry_run_id

    @property
    def dry_run_status(self):
        """Gets the dry_run_status of this UpdateDomainConfigResponseDryRunProgressStatus.


        :return: The dry_run_status of this UpdateDomainConfigResponseDryRunProgressStatus.
        :rtype: str
        """
        return self._dry_run_status

    @dry_run_status.setter
    def dry_run_status(self, dry_run_status):
        """Sets the dry_run_status of this UpdateDomainConfigResponseDryRunProgressStatus.


        :param dry_run_status: The dry_run_status of this UpdateDomainConfigResponseDryRunProgressStatus.
        :type dry_run_status: str
        """
        if dry_run_status is None:
            raise ValueError("Invalid value for `dry_run_status`, must not be `None`")

        self._dry_run_status = dry_run_status

    @property
    def creation_date(self):
        """Gets the creation_date of this UpdateDomainConfigResponseDryRunProgressStatus.


        :return: The creation_date of this UpdateDomainConfigResponseDryRunProgressStatus.
        :rtype: str
        """
        return self._creation_date

    @creation_date.setter
    def creation_date(self, creation_date):
        """Sets the creation_date of this UpdateDomainConfigResponseDryRunProgressStatus.


        :param creation_date: The creation_date of this UpdateDomainConfigResponseDryRunProgressStatus.
        :type creation_date: str
        """
        if creation_date is None:
            raise ValueError("Invalid value for `creation_date`, must not be `None`")

        self._creation_date = creation_date

    @property
    def update_date(self):
        """Gets the update_date of this UpdateDomainConfigResponseDryRunProgressStatus.


        :return: The update_date of this UpdateDomainConfigResponseDryRunProgressStatus.
        :rtype: str
        """
        return self._update_date

    @update_date.setter
    def update_date(self, update_date):
        """Sets the update_date of this UpdateDomainConfigResponseDryRunProgressStatus.


        :param update_date: The update_date of this UpdateDomainConfigResponseDryRunProgressStatus.
        :type update_date: str
        """
        if update_date is None:
            raise ValueError("Invalid value for `update_date`, must not be `None`")

        self._update_date = update_date

    @property
    def validation_failures(self):
        """Gets the validation_failures of this UpdateDomainConfigResponseDryRunProgressStatus.


        :return: The validation_failures of this UpdateDomainConfigResponseDryRunProgressStatus.
        :rtype: List
        """
        return self._validation_failures

    @validation_failures.setter
    def validation_failures(self, validation_failures):
        """Sets the validation_failures of this UpdateDomainConfigResponseDryRunProgressStatus.


        :param validation_failures: The validation_failures of this UpdateDomainConfigResponseDryRunProgressStatus.
        :type validation_failures: List
        """

        self._validation_failures = validation_failures
