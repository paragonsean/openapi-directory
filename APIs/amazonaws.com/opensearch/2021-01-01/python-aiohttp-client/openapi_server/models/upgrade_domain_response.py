# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.upgrade_domain_response_change_progress_details import UpgradeDomainResponseChangeProgressDetails
from openapi_server import util


class UpgradeDomainResponse(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, upgrade_id: str=None, domain_name: str=None, target_version: str=None, perform_check_only: bool=None, advanced_options: Dict=None, change_progress_details: UpgradeDomainResponseChangeProgressDetails=None):
        """UpgradeDomainResponse - a model defined in OpenAPI

        :param upgrade_id: The upgrade_id of this UpgradeDomainResponse.
        :param domain_name: The domain_name of this UpgradeDomainResponse.
        :param target_version: The target_version of this UpgradeDomainResponse.
        :param perform_check_only: The perform_check_only of this UpgradeDomainResponse.
        :param advanced_options: The advanced_options of this UpgradeDomainResponse.
        :param change_progress_details: The change_progress_details of this UpgradeDomainResponse.
        """
        self.openapi_types = {
            'upgrade_id': str,
            'domain_name': str,
            'target_version': str,
            'perform_check_only': bool,
            'advanced_options': Dict,
            'change_progress_details': UpgradeDomainResponseChangeProgressDetails
        }

        self.attribute_map = {
            'upgrade_id': 'UpgradeId',
            'domain_name': 'DomainName',
            'target_version': 'TargetVersion',
            'perform_check_only': 'PerformCheckOnly',
            'advanced_options': 'AdvancedOptions',
            'change_progress_details': 'ChangeProgressDetails'
        }

        self._upgrade_id = upgrade_id
        self._domain_name = domain_name
        self._target_version = target_version
        self._perform_check_only = perform_check_only
        self._advanced_options = advanced_options
        self._change_progress_details = change_progress_details

    @classmethod
    def from_dict(cls, dikt: dict) -> 'UpgradeDomainResponse':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The UpgradeDomainResponse of this UpgradeDomainResponse.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def upgrade_id(self):
        """Gets the upgrade_id of this UpgradeDomainResponse.


        :return: The upgrade_id of this UpgradeDomainResponse.
        :rtype: str
        """
        return self._upgrade_id

    @upgrade_id.setter
    def upgrade_id(self, upgrade_id):
        """Sets the upgrade_id of this UpgradeDomainResponse.


        :param upgrade_id: The upgrade_id of this UpgradeDomainResponse.
        :type upgrade_id: str
        """

        self._upgrade_id = upgrade_id

    @property
    def domain_name(self):
        """Gets the domain_name of this UpgradeDomainResponse.


        :return: The domain_name of this UpgradeDomainResponse.
        :rtype: str
        """
        return self._domain_name

    @domain_name.setter
    def domain_name(self, domain_name):
        """Sets the domain_name of this UpgradeDomainResponse.


        :param domain_name: The domain_name of this UpgradeDomainResponse.
        :type domain_name: str
        """

        self._domain_name = domain_name

    @property
    def target_version(self):
        """Gets the target_version of this UpgradeDomainResponse.


        :return: The target_version of this UpgradeDomainResponse.
        :rtype: str
        """
        return self._target_version

    @target_version.setter
    def target_version(self, target_version):
        """Sets the target_version of this UpgradeDomainResponse.


        :param target_version: The target_version of this UpgradeDomainResponse.
        :type target_version: str
        """

        self._target_version = target_version

    @property
    def perform_check_only(self):
        """Gets the perform_check_only of this UpgradeDomainResponse.


        :return: The perform_check_only of this UpgradeDomainResponse.
        :rtype: bool
        """
        return self._perform_check_only

    @perform_check_only.setter
    def perform_check_only(self, perform_check_only):
        """Sets the perform_check_only of this UpgradeDomainResponse.


        :param perform_check_only: The perform_check_only of this UpgradeDomainResponse.
        :type perform_check_only: bool
        """

        self._perform_check_only = perform_check_only

    @property
    def advanced_options(self):
        """Gets the advanced_options of this UpgradeDomainResponse.


        :return: The advanced_options of this UpgradeDomainResponse.
        :rtype: Dict
        """
        return self._advanced_options

    @advanced_options.setter
    def advanced_options(self, advanced_options):
        """Sets the advanced_options of this UpgradeDomainResponse.


        :param advanced_options: The advanced_options of this UpgradeDomainResponse.
        :type advanced_options: Dict
        """

        self._advanced_options = advanced_options

    @property
    def change_progress_details(self):
        """Gets the change_progress_details of this UpgradeDomainResponse.


        :return: The change_progress_details of this UpgradeDomainResponse.
        :rtype: UpgradeDomainResponseChangeProgressDetails
        """
        return self._change_progress_details

    @change_progress_details.setter
    def change_progress_details(self, change_progress_details):
        """Sets the change_progress_details of this UpgradeDomainResponse.


        :param change_progress_details: The change_progress_details of this UpgradeDomainResponse.
        :type change_progress_details: UpgradeDomainResponseChangeProgressDetails
        """

        self._change_progress_details = change_progress_details
