# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.create_domain_request_vpc_options import CreateDomainRequestVPCOptions
import re
from openapi_server import util


class CreateVpcEndpointRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, domain_arn: str=None, vpc_options: CreateDomainRequestVPCOptions=None, client_token: str=None):
        """CreateVpcEndpointRequest - a model defined in OpenAPI

        :param domain_arn: The domain_arn of this CreateVpcEndpointRequest.
        :param vpc_options: The vpc_options of this CreateVpcEndpointRequest.
        :param client_token: The client_token of this CreateVpcEndpointRequest.
        """
        self.openapi_types = {
            'domain_arn': str,
            'vpc_options': CreateDomainRequestVPCOptions,
            'client_token': str
        }

        self.attribute_map = {
            'domain_arn': 'DomainArn',
            'vpc_options': 'VpcOptions',
            'client_token': 'ClientToken'
        }

        self._domain_arn = domain_arn
        self._vpc_options = vpc_options
        self._client_token = client_token

    @classmethod
    def from_dict(cls, dikt: dict) -> 'CreateVpcEndpointRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The CreateVpcEndpoint_request of this CreateVpcEndpointRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def domain_arn(self):
        """Gets the domain_arn of this CreateVpcEndpointRequest.

        The Amazon Resource Name (ARN) of the domain to create the endpoint for.

        :return: The domain_arn of this CreateVpcEndpointRequest.
        :rtype: str
        """
        return self._domain_arn

    @domain_arn.setter
    def domain_arn(self, domain_arn):
        """Sets the domain_arn of this CreateVpcEndpointRequest.

        The Amazon Resource Name (ARN) of the domain to create the endpoint for.

        :param domain_arn: The domain_arn of this CreateVpcEndpointRequest.
        :type domain_arn: str
        """
        if domain_arn is None:
            raise ValueError("Invalid value for `domain_arn`, must not be `None`")
        if domain_arn is not None and len(domain_arn) > 512:
            raise ValueError("Invalid value for `domain_arn`, length must be less than or equal to `512`")
        if domain_arn is not None and len(domain_arn) < 1:
            raise ValueError("Invalid value for `domain_arn`, length must be greater than or equal to `1`")
        if domain_arn is not None and not re.search(r'arn:aws[a-z\-]*:[a-z]+:[a-z0-9\-]+:[0-9]+:domain\/[a-z0-9\-]+', domain_arn):
            raise ValueError("Invalid value for `domain_arn`, must be a follow pattern or equal to `/arn:aws[a-z\-]*:[a-z]+:[a-z0-9\-]+:[0-9]+:domain\/[a-z0-9\-]+/`")

        self._domain_arn = domain_arn

    @property
    def vpc_options(self):
        """Gets the vpc_options of this CreateVpcEndpointRequest.


        :return: The vpc_options of this CreateVpcEndpointRequest.
        :rtype: CreateDomainRequestVPCOptions
        """
        return self._vpc_options

    @vpc_options.setter
    def vpc_options(self, vpc_options):
        """Sets the vpc_options of this CreateVpcEndpointRequest.


        :param vpc_options: The vpc_options of this CreateVpcEndpointRequest.
        :type vpc_options: CreateDomainRequestVPCOptions
        """
        if vpc_options is None:
            raise ValueError("Invalid value for `vpc_options`, must not be `None`")

        self._vpc_options = vpc_options

    @property
    def client_token(self):
        """Gets the client_token of this CreateVpcEndpointRequest.

        Unique, case-sensitive identifier to ensure idempotency of the request.

        :return: The client_token of this CreateVpcEndpointRequest.
        :rtype: str
        """
        return self._client_token

    @client_token.setter
    def client_token(self, client_token):
        """Sets the client_token of this CreateVpcEndpointRequest.

        Unique, case-sensitive identifier to ensure idempotency of the request.

        :param client_token: The client_token of this CreateVpcEndpointRequest.
        :type client_token: str
        """
        if client_token is not None and len(client_token) > 64:
            raise ValueError("Invalid value for `client_token`, length must be less than or equal to `64`")
        if client_token is not None and len(client_token) < 1:
            raise ValueError("Invalid value for `client_token`, length must be greater than or equal to `1`")

        self._client_token = client_token
