# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.action_severity import ActionSeverity
from openapi_server.models.action_status import ActionStatus
from openapi_server.models.action_type import ActionType
from openapi_server.models.scheduled_by import ScheduledBy
from openapi_server import util


class UpdateScheduledActionResponseScheduledAction(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, id: str=None, type: ActionType=None, severity: ActionSeverity=None, scheduled_time: int=None, description: str=None, scheduled_by: ScheduledBy=None, status: ActionStatus=None, mandatory: bool=None, cancellable: bool=None):
        """UpdateScheduledActionResponseScheduledAction - a model defined in OpenAPI

        :param id: The id of this UpdateScheduledActionResponseScheduledAction.
        :param type: The type of this UpdateScheduledActionResponseScheduledAction.
        :param severity: The severity of this UpdateScheduledActionResponseScheduledAction.
        :param scheduled_time: The scheduled_time of this UpdateScheduledActionResponseScheduledAction.
        :param description: The description of this UpdateScheduledActionResponseScheduledAction.
        :param scheduled_by: The scheduled_by of this UpdateScheduledActionResponseScheduledAction.
        :param status: The status of this UpdateScheduledActionResponseScheduledAction.
        :param mandatory: The mandatory of this UpdateScheduledActionResponseScheduledAction.
        :param cancellable: The cancellable of this UpdateScheduledActionResponseScheduledAction.
        """
        self.openapi_types = {
            'id': str,
            'type': ActionType,
            'severity': ActionSeverity,
            'scheduled_time': int,
            'description': str,
            'scheduled_by': ScheduledBy,
            'status': ActionStatus,
            'mandatory': bool,
            'cancellable': bool
        }

        self.attribute_map = {
            'id': 'Id',
            'type': 'Type',
            'severity': 'Severity',
            'scheduled_time': 'ScheduledTime',
            'description': 'Description',
            'scheduled_by': 'ScheduledBy',
            'status': 'Status',
            'mandatory': 'Mandatory',
            'cancellable': 'Cancellable'
        }

        self._id = id
        self._type = type
        self._severity = severity
        self._scheduled_time = scheduled_time
        self._description = description
        self._scheduled_by = scheduled_by
        self._status = status
        self._mandatory = mandatory
        self._cancellable = cancellable

    @classmethod
    def from_dict(cls, dikt: dict) -> 'UpdateScheduledActionResponseScheduledAction':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The UpdateScheduledActionResponse_ScheduledAction of this UpdateScheduledActionResponseScheduledAction.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def id(self):
        """Gets the id of this UpdateScheduledActionResponseScheduledAction.


        :return: The id of this UpdateScheduledActionResponseScheduledAction.
        :rtype: str
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this UpdateScheduledActionResponseScheduledAction.


        :param id: The id of this UpdateScheduledActionResponseScheduledAction.
        :type id: str
        """
        if id is None:
            raise ValueError("Invalid value for `id`, must not be `None`")

        self._id = id

    @property
    def type(self):
        """Gets the type of this UpdateScheduledActionResponseScheduledAction.


        :return: The type of this UpdateScheduledActionResponseScheduledAction.
        :rtype: ActionType
        """
        return self._type

    @type.setter
    def type(self, type):
        """Sets the type of this UpdateScheduledActionResponseScheduledAction.


        :param type: The type of this UpdateScheduledActionResponseScheduledAction.
        :type type: ActionType
        """
        if type is None:
            raise ValueError("Invalid value for `type`, must not be `None`")

        self._type = type

    @property
    def severity(self):
        """Gets the severity of this UpdateScheduledActionResponseScheduledAction.


        :return: The severity of this UpdateScheduledActionResponseScheduledAction.
        :rtype: ActionSeverity
        """
        return self._severity

    @severity.setter
    def severity(self, severity):
        """Sets the severity of this UpdateScheduledActionResponseScheduledAction.


        :param severity: The severity of this UpdateScheduledActionResponseScheduledAction.
        :type severity: ActionSeverity
        """
        if severity is None:
            raise ValueError("Invalid value for `severity`, must not be `None`")

        self._severity = severity

    @property
    def scheduled_time(self):
        """Gets the scheduled_time of this UpdateScheduledActionResponseScheduledAction.


        :return: The scheduled_time of this UpdateScheduledActionResponseScheduledAction.
        :rtype: int
        """
        return self._scheduled_time

    @scheduled_time.setter
    def scheduled_time(self, scheduled_time):
        """Sets the scheduled_time of this UpdateScheduledActionResponseScheduledAction.


        :param scheduled_time: The scheduled_time of this UpdateScheduledActionResponseScheduledAction.
        :type scheduled_time: int
        """
        if scheduled_time is None:
            raise ValueError("Invalid value for `scheduled_time`, must not be `None`")

        self._scheduled_time = scheduled_time

    @property
    def description(self):
        """Gets the description of this UpdateScheduledActionResponseScheduledAction.


        :return: The description of this UpdateScheduledActionResponseScheduledAction.
        :rtype: str
        """
        return self._description

    @description.setter
    def description(self, description):
        """Sets the description of this UpdateScheduledActionResponseScheduledAction.


        :param description: The description of this UpdateScheduledActionResponseScheduledAction.
        :type description: str
        """

        self._description = description

    @property
    def scheduled_by(self):
        """Gets the scheduled_by of this UpdateScheduledActionResponseScheduledAction.


        :return: The scheduled_by of this UpdateScheduledActionResponseScheduledAction.
        :rtype: ScheduledBy
        """
        return self._scheduled_by

    @scheduled_by.setter
    def scheduled_by(self, scheduled_by):
        """Sets the scheduled_by of this UpdateScheduledActionResponseScheduledAction.


        :param scheduled_by: The scheduled_by of this UpdateScheduledActionResponseScheduledAction.
        :type scheduled_by: ScheduledBy
        """

        self._scheduled_by = scheduled_by

    @property
    def status(self):
        """Gets the status of this UpdateScheduledActionResponseScheduledAction.


        :return: The status of this UpdateScheduledActionResponseScheduledAction.
        :rtype: ActionStatus
        """
        return self._status

    @status.setter
    def status(self, status):
        """Sets the status of this UpdateScheduledActionResponseScheduledAction.


        :param status: The status of this UpdateScheduledActionResponseScheduledAction.
        :type status: ActionStatus
        """

        self._status = status

    @property
    def mandatory(self):
        """Gets the mandatory of this UpdateScheduledActionResponseScheduledAction.


        :return: The mandatory of this UpdateScheduledActionResponseScheduledAction.
        :rtype: bool
        """
        return self._mandatory

    @mandatory.setter
    def mandatory(self, mandatory):
        """Sets the mandatory of this UpdateScheduledActionResponseScheduledAction.


        :param mandatory: The mandatory of this UpdateScheduledActionResponseScheduledAction.
        :type mandatory: bool
        """

        self._mandatory = mandatory

    @property
    def cancellable(self):
        """Gets the cancellable of this UpdateScheduledActionResponseScheduledAction.


        :return: The cancellable of this UpdateScheduledActionResponseScheduledAction.
        :rtype: bool
        """
        return self._cancellable

    @cancellable.setter
    def cancellable(self, cancellable):
        """Sets the cancellable of this UpdateScheduledActionResponseScheduledAction.


        :param cancellable: The cancellable of this UpdateScheduledActionResponseScheduledAction.
        :type cancellable: bool
        """

        self._cancellable = cancellable
