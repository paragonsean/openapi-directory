# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.auto_tune_state import AutoTuneState
from openapi_server import util


class DomainStatusAutoTuneOptions(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, state: AutoTuneState=None, error_message: str=None, use_off_peak_window: bool=None):
        """DomainStatusAutoTuneOptions - a model defined in OpenAPI

        :param state: The state of this DomainStatusAutoTuneOptions.
        :param error_message: The error_message of this DomainStatusAutoTuneOptions.
        :param use_off_peak_window: The use_off_peak_window of this DomainStatusAutoTuneOptions.
        """
        self.openapi_types = {
            'state': AutoTuneState,
            'error_message': str,
            'use_off_peak_window': bool
        }

        self.attribute_map = {
            'state': 'State',
            'error_message': 'ErrorMessage',
            'use_off_peak_window': 'UseOffPeakWindow'
        }

        self._state = state
        self._error_message = error_message
        self._use_off_peak_window = use_off_peak_window

    @classmethod
    def from_dict(cls, dikt: dict) -> 'DomainStatusAutoTuneOptions':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The DomainStatus_AutoTuneOptions of this DomainStatusAutoTuneOptions.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def state(self):
        """Gets the state of this DomainStatusAutoTuneOptions.


        :return: The state of this DomainStatusAutoTuneOptions.
        :rtype: AutoTuneState
        """
        return self._state

    @state.setter
    def state(self, state):
        """Sets the state of this DomainStatusAutoTuneOptions.


        :param state: The state of this DomainStatusAutoTuneOptions.
        :type state: AutoTuneState
        """

        self._state = state

    @property
    def error_message(self):
        """Gets the error_message of this DomainStatusAutoTuneOptions.


        :return: The error_message of this DomainStatusAutoTuneOptions.
        :rtype: str
        """
        return self._error_message

    @error_message.setter
    def error_message(self, error_message):
        """Sets the error_message of this DomainStatusAutoTuneOptions.


        :param error_message: The error_message of this DomainStatusAutoTuneOptions.
        :type error_message: str
        """

        self._error_message = error_message

    @property
    def use_off_peak_window(self):
        """Gets the use_off_peak_window of this DomainStatusAutoTuneOptions.


        :return: The use_off_peak_window of this DomainStatusAutoTuneOptions.
        :rtype: bool
        """
        return self._use_off_peak_window

    @use_off_peak_window.setter
    def use_off_peak_window(self, use_off_peak_window):
        """Sets the use_off_peak_window of this DomainStatusAutoTuneOptions.


        :param use_off_peak_window: The use_off_peak_window of this DomainStatusAutoTuneOptions.
        :type use_off_peak_window: bool
        """

        self._use_off_peak_window = use_off_peak_window
