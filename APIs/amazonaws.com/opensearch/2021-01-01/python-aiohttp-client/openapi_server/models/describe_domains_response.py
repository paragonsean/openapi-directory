# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class DescribeDomainsResponse(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, domain_status_list: List=None):
        """DescribeDomainsResponse - a model defined in OpenAPI

        :param domain_status_list: The domain_status_list of this DescribeDomainsResponse.
        """
        self.openapi_types = {
            'domain_status_list': List
        }

        self.attribute_map = {
            'domain_status_list': 'DomainStatusList'
        }

        self._domain_status_list = domain_status_list

    @classmethod
    def from_dict(cls, dikt: dict) -> 'DescribeDomainsResponse':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The DescribeDomainsResponse of this DescribeDomainsResponse.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def domain_status_list(self):
        """Gets the domain_status_list of this DescribeDomainsResponse.


        :return: The domain_status_list of this DescribeDomainsResponse.
        :rtype: List
        """
        return self._domain_status_list

    @domain_status_list.setter
    def domain_status_list(self, domain_status_list):
        """Sets the domain_status_list of this DescribeDomainsResponse.


        :param domain_status_list: The domain_status_list of this DescribeDomainsResponse.
        :type domain_status_list: List
        """
        if domain_status_list is None:
            raise ValueError("Invalid value for `domain_status_list`, must not be `None`")

        self._domain_status_list = domain_status_list
