# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.deployment_status import DeploymentStatus
from openapi_server import util


class CancelServiceSoftwareUpdateResponseServiceSoftwareOptions(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, current_version: str=None, new_version: str=None, update_available: bool=None, cancellable: bool=None, update_status: DeploymentStatus=None, description: str=None, automated_update_date: datetime=None, optional_deployment: bool=None):
        """CancelServiceSoftwareUpdateResponseServiceSoftwareOptions - a model defined in OpenAPI

        :param current_version: The current_version of this CancelServiceSoftwareUpdateResponseServiceSoftwareOptions.
        :param new_version: The new_version of this CancelServiceSoftwareUpdateResponseServiceSoftwareOptions.
        :param update_available: The update_available of this CancelServiceSoftwareUpdateResponseServiceSoftwareOptions.
        :param cancellable: The cancellable of this CancelServiceSoftwareUpdateResponseServiceSoftwareOptions.
        :param update_status: The update_status of this CancelServiceSoftwareUpdateResponseServiceSoftwareOptions.
        :param description: The description of this CancelServiceSoftwareUpdateResponseServiceSoftwareOptions.
        :param automated_update_date: The automated_update_date of this CancelServiceSoftwareUpdateResponseServiceSoftwareOptions.
        :param optional_deployment: The optional_deployment of this CancelServiceSoftwareUpdateResponseServiceSoftwareOptions.
        """
        self.openapi_types = {
            'current_version': str,
            'new_version': str,
            'update_available': bool,
            'cancellable': bool,
            'update_status': DeploymentStatus,
            'description': str,
            'automated_update_date': datetime,
            'optional_deployment': bool
        }

        self.attribute_map = {
            'current_version': 'CurrentVersion',
            'new_version': 'NewVersion',
            'update_available': 'UpdateAvailable',
            'cancellable': 'Cancellable',
            'update_status': 'UpdateStatus',
            'description': 'Description',
            'automated_update_date': 'AutomatedUpdateDate',
            'optional_deployment': 'OptionalDeployment'
        }

        self._current_version = current_version
        self._new_version = new_version
        self._update_available = update_available
        self._cancellable = cancellable
        self._update_status = update_status
        self._description = description
        self._automated_update_date = automated_update_date
        self._optional_deployment = optional_deployment

    @classmethod
    def from_dict(cls, dikt: dict) -> 'CancelServiceSoftwareUpdateResponseServiceSoftwareOptions':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The CancelServiceSoftwareUpdateResponse_ServiceSoftwareOptions of this CancelServiceSoftwareUpdateResponseServiceSoftwareOptions.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def current_version(self):
        """Gets the current_version of this CancelServiceSoftwareUpdateResponseServiceSoftwareOptions.


        :return: The current_version of this CancelServiceSoftwareUpdateResponseServiceSoftwareOptions.
        :rtype: str
        """
        return self._current_version

    @current_version.setter
    def current_version(self, current_version):
        """Sets the current_version of this CancelServiceSoftwareUpdateResponseServiceSoftwareOptions.


        :param current_version: The current_version of this CancelServiceSoftwareUpdateResponseServiceSoftwareOptions.
        :type current_version: str
        """

        self._current_version = current_version

    @property
    def new_version(self):
        """Gets the new_version of this CancelServiceSoftwareUpdateResponseServiceSoftwareOptions.


        :return: The new_version of this CancelServiceSoftwareUpdateResponseServiceSoftwareOptions.
        :rtype: str
        """
        return self._new_version

    @new_version.setter
    def new_version(self, new_version):
        """Sets the new_version of this CancelServiceSoftwareUpdateResponseServiceSoftwareOptions.


        :param new_version: The new_version of this CancelServiceSoftwareUpdateResponseServiceSoftwareOptions.
        :type new_version: str
        """

        self._new_version = new_version

    @property
    def update_available(self):
        """Gets the update_available of this CancelServiceSoftwareUpdateResponseServiceSoftwareOptions.


        :return: The update_available of this CancelServiceSoftwareUpdateResponseServiceSoftwareOptions.
        :rtype: bool
        """
        return self._update_available

    @update_available.setter
    def update_available(self, update_available):
        """Sets the update_available of this CancelServiceSoftwareUpdateResponseServiceSoftwareOptions.


        :param update_available: The update_available of this CancelServiceSoftwareUpdateResponseServiceSoftwareOptions.
        :type update_available: bool
        """

        self._update_available = update_available

    @property
    def cancellable(self):
        """Gets the cancellable of this CancelServiceSoftwareUpdateResponseServiceSoftwareOptions.


        :return: The cancellable of this CancelServiceSoftwareUpdateResponseServiceSoftwareOptions.
        :rtype: bool
        """
        return self._cancellable

    @cancellable.setter
    def cancellable(self, cancellable):
        """Sets the cancellable of this CancelServiceSoftwareUpdateResponseServiceSoftwareOptions.


        :param cancellable: The cancellable of this CancelServiceSoftwareUpdateResponseServiceSoftwareOptions.
        :type cancellable: bool
        """

        self._cancellable = cancellable

    @property
    def update_status(self):
        """Gets the update_status of this CancelServiceSoftwareUpdateResponseServiceSoftwareOptions.


        :return: The update_status of this CancelServiceSoftwareUpdateResponseServiceSoftwareOptions.
        :rtype: DeploymentStatus
        """
        return self._update_status

    @update_status.setter
    def update_status(self, update_status):
        """Sets the update_status of this CancelServiceSoftwareUpdateResponseServiceSoftwareOptions.


        :param update_status: The update_status of this CancelServiceSoftwareUpdateResponseServiceSoftwareOptions.
        :type update_status: DeploymentStatus
        """

        self._update_status = update_status

    @property
    def description(self):
        """Gets the description of this CancelServiceSoftwareUpdateResponseServiceSoftwareOptions.


        :return: The description of this CancelServiceSoftwareUpdateResponseServiceSoftwareOptions.
        :rtype: str
        """
        return self._description

    @description.setter
    def description(self, description):
        """Sets the description of this CancelServiceSoftwareUpdateResponseServiceSoftwareOptions.


        :param description: The description of this CancelServiceSoftwareUpdateResponseServiceSoftwareOptions.
        :type description: str
        """

        self._description = description

    @property
    def automated_update_date(self):
        """Gets the automated_update_date of this CancelServiceSoftwareUpdateResponseServiceSoftwareOptions.


        :return: The automated_update_date of this CancelServiceSoftwareUpdateResponseServiceSoftwareOptions.
        :rtype: datetime
        """
        return self._automated_update_date

    @automated_update_date.setter
    def automated_update_date(self, automated_update_date):
        """Sets the automated_update_date of this CancelServiceSoftwareUpdateResponseServiceSoftwareOptions.


        :param automated_update_date: The automated_update_date of this CancelServiceSoftwareUpdateResponseServiceSoftwareOptions.
        :type automated_update_date: datetime
        """

        self._automated_update_date = automated_update_date

    @property
    def optional_deployment(self):
        """Gets the optional_deployment of this CancelServiceSoftwareUpdateResponseServiceSoftwareOptions.


        :return: The optional_deployment of this CancelServiceSoftwareUpdateResponseServiceSoftwareOptions.
        :rtype: bool
        """
        return self._optional_deployment

    @optional_deployment.setter
    def optional_deployment(self, optional_deployment):
        """Sets the optional_deployment of this CancelServiceSoftwareUpdateResponseServiceSoftwareOptions.


        :param optional_deployment: The optional_deployment of this CancelServiceSoftwareUpdateResponseServiceSoftwareOptions.
        :type optional_deployment: bool
        """

        self._optional_deployment = optional_deployment
