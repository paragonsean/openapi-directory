# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.node_status import NodeStatus
from openapi_server.models.node_type import NodeType
from openapi_server.models.open_search_partition_instance_type import OpenSearchPartitionInstanceType
from openapi_server.models.volume_type import VolumeType
from openapi_server import util


class DomainNodesStatus(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, node_id: str=None, node_type: NodeType=None, availability_zone: str=None, instance_type: OpenSearchPartitionInstanceType=None, node_status: NodeStatus=None, storage_type: str=None, storage_volume_type: VolumeType=None, storage_size: str=None):
        """DomainNodesStatus - a model defined in OpenAPI

        :param node_id: The node_id of this DomainNodesStatus.
        :param node_type: The node_type of this DomainNodesStatus.
        :param availability_zone: The availability_zone of this DomainNodesStatus.
        :param instance_type: The instance_type of this DomainNodesStatus.
        :param node_status: The node_status of this DomainNodesStatus.
        :param storage_type: The storage_type of this DomainNodesStatus.
        :param storage_volume_type: The storage_volume_type of this DomainNodesStatus.
        :param storage_size: The storage_size of this DomainNodesStatus.
        """
        self.openapi_types = {
            'node_id': str,
            'node_type': NodeType,
            'availability_zone': str,
            'instance_type': OpenSearchPartitionInstanceType,
            'node_status': NodeStatus,
            'storage_type': str,
            'storage_volume_type': VolumeType,
            'storage_size': str
        }

        self.attribute_map = {
            'node_id': 'NodeId',
            'node_type': 'NodeType',
            'availability_zone': 'AvailabilityZone',
            'instance_type': 'InstanceType',
            'node_status': 'NodeStatus',
            'storage_type': 'StorageType',
            'storage_volume_type': 'StorageVolumeType',
            'storage_size': 'StorageSize'
        }

        self._node_id = node_id
        self._node_type = node_type
        self._availability_zone = availability_zone
        self._instance_type = instance_type
        self._node_status = node_status
        self._storage_type = storage_type
        self._storage_volume_type = storage_volume_type
        self._storage_size = storage_size

    @classmethod
    def from_dict(cls, dikt: dict) -> 'DomainNodesStatus':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The DomainNodesStatus of this DomainNodesStatus.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def node_id(self):
        """Gets the node_id of this DomainNodesStatus.


        :return: The node_id of this DomainNodesStatus.
        :rtype: str
        """
        return self._node_id

    @node_id.setter
    def node_id(self, node_id):
        """Sets the node_id of this DomainNodesStatus.


        :param node_id: The node_id of this DomainNodesStatus.
        :type node_id: str
        """

        self._node_id = node_id

    @property
    def node_type(self):
        """Gets the node_type of this DomainNodesStatus.


        :return: The node_type of this DomainNodesStatus.
        :rtype: NodeType
        """
        return self._node_type

    @node_type.setter
    def node_type(self, node_type):
        """Sets the node_type of this DomainNodesStatus.


        :param node_type: The node_type of this DomainNodesStatus.
        :type node_type: NodeType
        """

        self._node_type = node_type

    @property
    def availability_zone(self):
        """Gets the availability_zone of this DomainNodesStatus.


        :return: The availability_zone of this DomainNodesStatus.
        :rtype: str
        """
        return self._availability_zone

    @availability_zone.setter
    def availability_zone(self, availability_zone):
        """Sets the availability_zone of this DomainNodesStatus.


        :param availability_zone: The availability_zone of this DomainNodesStatus.
        :type availability_zone: str
        """

        self._availability_zone = availability_zone

    @property
    def instance_type(self):
        """Gets the instance_type of this DomainNodesStatus.


        :return: The instance_type of this DomainNodesStatus.
        :rtype: OpenSearchPartitionInstanceType
        """
        return self._instance_type

    @instance_type.setter
    def instance_type(self, instance_type):
        """Sets the instance_type of this DomainNodesStatus.


        :param instance_type: The instance_type of this DomainNodesStatus.
        :type instance_type: OpenSearchPartitionInstanceType
        """

        self._instance_type = instance_type

    @property
    def node_status(self):
        """Gets the node_status of this DomainNodesStatus.


        :return: The node_status of this DomainNodesStatus.
        :rtype: NodeStatus
        """
        return self._node_status

    @node_status.setter
    def node_status(self, node_status):
        """Sets the node_status of this DomainNodesStatus.


        :param node_status: The node_status of this DomainNodesStatus.
        :type node_status: NodeStatus
        """

        self._node_status = node_status

    @property
    def storage_type(self):
        """Gets the storage_type of this DomainNodesStatus.


        :return: The storage_type of this DomainNodesStatus.
        :rtype: str
        """
        return self._storage_type

    @storage_type.setter
    def storage_type(self, storage_type):
        """Sets the storage_type of this DomainNodesStatus.


        :param storage_type: The storage_type of this DomainNodesStatus.
        :type storage_type: str
        """

        self._storage_type = storage_type

    @property
    def storage_volume_type(self):
        """Gets the storage_volume_type of this DomainNodesStatus.


        :return: The storage_volume_type of this DomainNodesStatus.
        :rtype: VolumeType
        """
        return self._storage_volume_type

    @storage_volume_type.setter
    def storage_volume_type(self, storage_volume_type):
        """Sets the storage_volume_type of this DomainNodesStatus.


        :param storage_volume_type: The storage_volume_type of this DomainNodesStatus.
        :type storage_volume_type: VolumeType
        """

        self._storage_volume_type = storage_volume_type

    @property
    def storage_size(self):
        """Gets the storage_size of this DomainNodesStatus.


        :return: The storage_size of this DomainNodesStatus.
        :rtype: str
        """
        return self._storage_size

    @storage_size.setter
    def storage_size(self, storage_size):
        """Sets the storage_size of this DomainNodesStatus.


        :param storage_size: The storage_size of this DomainNodesStatus.
        :type storage_size: str
        """

        self._storage_size = storage_size
