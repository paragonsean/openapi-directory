/**
 * AWS Elemental MediaStore
 * An AWS Elemental MediaStore container is a namespace that holds folders and objects. You use a container endpoint to create, read, and delete objects. 
 *
 * The version of the OpenAPI document: 2017-09-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIUntagResourceInput.h
 *
 * 
 */

#ifndef OAIUntagResourceInput_H
#define OAIUntagResourceInput_H

#include <QJsonObject>

#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIUntagResourceInput : public OAIObject {
public:
    OAIUntagResourceInput();
    OAIUntagResourceInput(QString json);
    ~OAIUntagResourceInput() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getResource() const;
    void setResource(const QString &resource);
    bool is_resource_Set() const;
    bool is_resource_Valid() const;

    QList getTagKeys() const;
    void setTagKeys(const QList &tag_keys);
    bool is_tag_keys_Set() const;
    bool is_tag_keys_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_resource;
    bool m_resource_isSet;
    bool m_resource_isValid;

    QList m_tag_keys;
    bool m_tag_keys_isSet;
    bool m_tag_keys_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIUntagResourceInput)

#endif // OAIUntagResourceInput_H
