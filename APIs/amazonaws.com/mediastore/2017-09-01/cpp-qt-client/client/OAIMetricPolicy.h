/**
 * AWS Elemental MediaStore
 * An AWS Elemental MediaStore container is a namespace that holds folders and objects. You use a container endpoint to create, read, and delete objects. 
 *
 * The version of the OpenAPI document: 2017-09-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIMetricPolicy.h
 *
 * &lt;p&gt;The metric policy that is associated with the container. A metric policy allows AWS Elemental MediaStore to send metrics to Amazon CloudWatch. In the policy, you must indicate whether you want MediaStore to send container-level metrics. You can also include rules to define groups of objects that you want MediaStore to send object-level metrics for.&lt;/p&gt; &lt;p&gt;To view examples of how to construct a metric policy for your use case, see &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/mediastore/latest/ug/policies-metric-examples.html\&quot;&gt;Example Metric Policies&lt;/a&gt;.&lt;/p&gt;
 */

#ifndef OAIMetricPolicy_H
#define OAIMetricPolicy_H

#include <QJsonObject>

#include "OAIContainerLevelMetrics.h"
#include <QList>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIMetricPolicy : public OAIObject {
public:
    OAIMetricPolicy();
    OAIMetricPolicy(QString json);
    ~OAIMetricPolicy() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAIContainerLevelMetrics getContainerLevelMetrics() const;
    void setContainerLevelMetrics(const OAIContainerLevelMetrics &container_level_metrics);
    bool is_container_level_metrics_Set() const;
    bool is_container_level_metrics_Valid() const;

    QList getMetricPolicyRules() const;
    void setMetricPolicyRules(const QList &metric_policy_rules);
    bool is_metric_policy_rules_Set() const;
    bool is_metric_policy_rules_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAIContainerLevelMetrics m_container_level_metrics;
    bool m_container_level_metrics_isSet;
    bool m_container_level_metrics_isValid;

    QList m_metric_policy_rules;
    bool m_metric_policy_rules_isSet;
    bool m_metric_policy_rules_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIMetricPolicy)

#endif // OAIMetricPolicy_H
