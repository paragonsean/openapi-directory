/**
 * AWS Elemental MediaStore
 * An AWS Elemental MediaStore container is a namespace that holds folders and objects. You use a container endpoint to create, read, and delete objects. 
 *
 * The version of the OpenAPI document: 2017-09-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIPutMetricPolicyInput.h
 *
 * 
 */

#ifndef OAIPutMetricPolicyInput_H
#define OAIPutMetricPolicyInput_H

#include <QJsonObject>

#include "OAIPutMetricPolicyInput_MetricPolicy.h"
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIPutMetricPolicyInput_MetricPolicy;

class OAIPutMetricPolicyInput : public OAIObject {
public:
    OAIPutMetricPolicyInput();
    OAIPutMetricPolicyInput(QString json);
    ~OAIPutMetricPolicyInput() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getContainerName() const;
    void setContainerName(const QString &container_name);
    bool is_container_name_Set() const;
    bool is_container_name_Valid() const;

    OAIPutMetricPolicyInput_MetricPolicy getMetricPolicy() const;
    void setMetricPolicy(const OAIPutMetricPolicyInput_MetricPolicy &metric_policy);
    bool is_metric_policy_Set() const;
    bool is_metric_policy_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_container_name;
    bool m_container_name_isSet;
    bool m_container_name_isValid;

    OAIPutMetricPolicyInput_MetricPolicy m_metric_policy;
    bool m_metric_policy_isSet;
    bool m_metric_policy_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIPutMetricPolicyInput)

#endif // OAIPutMetricPolicyInput_H
