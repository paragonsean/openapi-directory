/**
 * AWS Elemental MediaStore
 * An AWS Elemental MediaStore container is a namespace that holds folders and objects. You use a container endpoint to create, read, and delete objects. 
 *
 * The version of the OpenAPI document: 2017-09-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAICorsRule.h
 *
 * A rule for a CORS policy. You can add up to 100 rules to a CORS policy. If more than one rule applies, the service uses the first applicable rule listed.
 */

#ifndef OAICorsRule_H
#define OAICorsRule_H

#include <QJsonObject>

#include <QList>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAICorsRule : public OAIObject {
public:
    OAICorsRule();
    OAICorsRule(QString json);
    ~OAICorsRule() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QList getAllowedOrigins() const;
    void setAllowedOrigins(const QList &allowed_origins);
    bool is_allowed_origins_Set() const;
    bool is_allowed_origins_Valid() const;

    QList getAllowedMethods() const;
    void setAllowedMethods(const QList &allowed_methods);
    bool is_allowed_methods_Set() const;
    bool is_allowed_methods_Valid() const;

    QList getAllowedHeaders() const;
    void setAllowedHeaders(const QList &allowed_headers);
    bool is_allowed_headers_Set() const;
    bool is_allowed_headers_Valid() const;

    qint32 getMaxAgeSeconds() const;
    void setMaxAgeSeconds(const qint32 &max_age_seconds);
    bool is_max_age_seconds_Set() const;
    bool is_max_age_seconds_Valid() const;

    QList getExposeHeaders() const;
    void setExposeHeaders(const QList &expose_headers);
    bool is_expose_headers_Set() const;
    bool is_expose_headers_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QList m_allowed_origins;
    bool m_allowed_origins_isSet;
    bool m_allowed_origins_isValid;

    QList m_allowed_methods;
    bool m_allowed_methods_isSet;
    bool m_allowed_methods_isValid;

    QList m_allowed_headers;
    bool m_allowed_headers_isSet;
    bool m_allowed_headers_isValid;

    qint32 m_max_age_seconds;
    bool m_max_age_seconds_isSet;
    bool m_max_age_seconds_isValid;

    QList m_expose_headers;
    bool m_expose_headers_isSet;
    bool m_expose_headers_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAICorsRule)

#endif // OAICorsRule_H
