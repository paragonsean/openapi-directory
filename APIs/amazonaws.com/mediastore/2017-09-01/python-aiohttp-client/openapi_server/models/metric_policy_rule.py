# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class MetricPolicyRule(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, object_group: str=None, object_group_name: str=None):
        """MetricPolicyRule - a model defined in OpenAPI

        :param object_group: The object_group of this MetricPolicyRule.
        :param object_group_name: The object_group_name of this MetricPolicyRule.
        """
        self.openapi_types = {
            'object_group': str,
            'object_group_name': str
        }

        self.attribute_map = {
            'object_group': 'ObjectGroup',
            'object_group_name': 'ObjectGroupName'
        }

        self._object_group = object_group
        self._object_group_name = object_group_name

    @classmethod
    def from_dict(cls, dikt: dict) -> 'MetricPolicyRule':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The MetricPolicyRule of this MetricPolicyRule.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def object_group(self):
        """Gets the object_group of this MetricPolicyRule.


        :return: The object_group of this MetricPolicyRule.
        :rtype: str
        """
        return self._object_group

    @object_group.setter
    def object_group(self, object_group):
        """Sets the object_group of this MetricPolicyRule.


        :param object_group: The object_group of this MetricPolicyRule.
        :type object_group: str
        """
        if object_group is None:
            raise ValueError("Invalid value for `object_group`, must not be `None`")

        self._object_group = object_group

    @property
    def object_group_name(self):
        """Gets the object_group_name of this MetricPolicyRule.


        :return: The object_group_name of this MetricPolicyRule.
        :rtype: str
        """
        return self._object_group_name

    @object_group_name.setter
    def object_group_name(self, object_group_name):
        """Sets the object_group_name of this MetricPolicyRule.


        :param object_group_name: The object_group_name of this MetricPolicyRule.
        :type object_group_name: str
        """
        if object_group_name is None:
            raise ValueError("Invalid value for `object_group_name`, must not be `None`")

        self._object_group_name = object_group_name
