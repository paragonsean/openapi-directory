# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class CorsRule(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, allowed_origins: List=None, allowed_methods: List=None, allowed_headers: List=None, max_age_seconds: int=None, expose_headers: List=None):
        """CorsRule - a model defined in OpenAPI

        :param allowed_origins: The allowed_origins of this CorsRule.
        :param allowed_methods: The allowed_methods of this CorsRule.
        :param allowed_headers: The allowed_headers of this CorsRule.
        :param max_age_seconds: The max_age_seconds of this CorsRule.
        :param expose_headers: The expose_headers of this CorsRule.
        """
        self.openapi_types = {
            'allowed_origins': List,
            'allowed_methods': List,
            'allowed_headers': List,
            'max_age_seconds': int,
            'expose_headers': List
        }

        self.attribute_map = {
            'allowed_origins': 'AllowedOrigins',
            'allowed_methods': 'AllowedMethods',
            'allowed_headers': 'AllowedHeaders',
            'max_age_seconds': 'MaxAgeSeconds',
            'expose_headers': 'ExposeHeaders'
        }

        self._allowed_origins = allowed_origins
        self._allowed_methods = allowed_methods
        self._allowed_headers = allowed_headers
        self._max_age_seconds = max_age_seconds
        self._expose_headers = expose_headers

    @classmethod
    def from_dict(cls, dikt: dict) -> 'CorsRule':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The CorsRule of this CorsRule.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def allowed_origins(self):
        """Gets the allowed_origins of this CorsRule.


        :return: The allowed_origins of this CorsRule.
        :rtype: List
        """
        return self._allowed_origins

    @allowed_origins.setter
    def allowed_origins(self, allowed_origins):
        """Sets the allowed_origins of this CorsRule.


        :param allowed_origins: The allowed_origins of this CorsRule.
        :type allowed_origins: List
        """
        if allowed_origins is None:
            raise ValueError("Invalid value for `allowed_origins`, must not be `None`")

        self._allowed_origins = allowed_origins

    @property
    def allowed_methods(self):
        """Gets the allowed_methods of this CorsRule.


        :return: The allowed_methods of this CorsRule.
        :rtype: List
        """
        return self._allowed_methods

    @allowed_methods.setter
    def allowed_methods(self, allowed_methods):
        """Sets the allowed_methods of this CorsRule.


        :param allowed_methods: The allowed_methods of this CorsRule.
        :type allowed_methods: List
        """

        self._allowed_methods = allowed_methods

    @property
    def allowed_headers(self):
        """Gets the allowed_headers of this CorsRule.


        :return: The allowed_headers of this CorsRule.
        :rtype: List
        """
        return self._allowed_headers

    @allowed_headers.setter
    def allowed_headers(self, allowed_headers):
        """Sets the allowed_headers of this CorsRule.


        :param allowed_headers: The allowed_headers of this CorsRule.
        :type allowed_headers: List
        """
        if allowed_headers is None:
            raise ValueError("Invalid value for `allowed_headers`, must not be `None`")

        self._allowed_headers = allowed_headers

    @property
    def max_age_seconds(self):
        """Gets the max_age_seconds of this CorsRule.


        :return: The max_age_seconds of this CorsRule.
        :rtype: int
        """
        return self._max_age_seconds

    @max_age_seconds.setter
    def max_age_seconds(self, max_age_seconds):
        """Sets the max_age_seconds of this CorsRule.


        :param max_age_seconds: The max_age_seconds of this CorsRule.
        :type max_age_seconds: int
        """

        self._max_age_seconds = max_age_seconds

    @property
    def expose_headers(self):
        """Gets the expose_headers of this CorsRule.


        :return: The expose_headers of this CorsRule.
        :rtype: List
        """
        return self._expose_headers

    @expose_headers.setter
    def expose_headers(self, expose_headers):
        """Sets the expose_headers of this CorsRule.


        :param expose_headers: The expose_headers of this CorsRule.
        :type expose_headers: List
        """

        self._expose_headers = expose_headers
