/**
 * AWS Elemental MediaStore
 * An AWS Elemental MediaStore container is a namespace that holds folders and objects. You use a container endpoint to create, read, and delete objects. 
 *
 * The version of the OpenAPI document: 2017-09-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.AwsElementalMediaStore);
  }
}(this, function(expect, AwsElementalMediaStore) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new AwsElementalMediaStore.DefaultApi();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('DefaultApi', function() {
    describe('createContainer', function() {
      it('should call createContainer successfully', function(done) {
        //uncomment below and update the code to test createContainer
        //instance.createContainer(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deleteContainer', function() {
      it('should call deleteContainer successfully', function(done) {
        //uncomment below and update the code to test deleteContainer
        //instance.deleteContainer(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deleteContainerPolicy', function() {
      it('should call deleteContainerPolicy successfully', function(done) {
        //uncomment below and update the code to test deleteContainerPolicy
        //instance.deleteContainerPolicy(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deleteCorsPolicy', function() {
      it('should call deleteCorsPolicy successfully', function(done) {
        //uncomment below and update the code to test deleteCorsPolicy
        //instance.deleteCorsPolicy(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deleteLifecyclePolicy', function() {
      it('should call deleteLifecyclePolicy successfully', function(done) {
        //uncomment below and update the code to test deleteLifecyclePolicy
        //instance.deleteLifecyclePolicy(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deleteMetricPolicy', function() {
      it('should call deleteMetricPolicy successfully', function(done) {
        //uncomment below and update the code to test deleteMetricPolicy
        //instance.deleteMetricPolicy(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('describeContainer', function() {
      it('should call describeContainer successfully', function(done) {
        //uncomment below and update the code to test describeContainer
        //instance.describeContainer(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getContainerPolicy', function() {
      it('should call getContainerPolicy successfully', function(done) {
        //uncomment below and update the code to test getContainerPolicy
        //instance.getContainerPolicy(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getCorsPolicy', function() {
      it('should call getCorsPolicy successfully', function(done) {
        //uncomment below and update the code to test getCorsPolicy
        //instance.getCorsPolicy(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getLifecyclePolicy', function() {
      it('should call getLifecyclePolicy successfully', function(done) {
        //uncomment below and update the code to test getLifecyclePolicy
        //instance.getLifecyclePolicy(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getMetricPolicy', function() {
      it('should call getMetricPolicy successfully', function(done) {
        //uncomment below and update the code to test getMetricPolicy
        //instance.getMetricPolicy(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('listContainers', function() {
      it('should call listContainers successfully', function(done) {
        //uncomment below and update the code to test listContainers
        //instance.listContainers(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('listTagsForResource', function() {
      it('should call listTagsForResource successfully', function(done) {
        //uncomment below and update the code to test listTagsForResource
        //instance.listTagsForResource(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('putContainerPolicy', function() {
      it('should call putContainerPolicy successfully', function(done) {
        //uncomment below and update the code to test putContainerPolicy
        //instance.putContainerPolicy(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('putCorsPolicy', function() {
      it('should call putCorsPolicy successfully', function(done) {
        //uncomment below and update the code to test putCorsPolicy
        //instance.putCorsPolicy(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('putLifecyclePolicy', function() {
      it('should call putLifecyclePolicy successfully', function(done) {
        //uncomment below and update the code to test putLifecyclePolicy
        //instance.putLifecyclePolicy(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('putMetricPolicy', function() {
      it('should call putMetricPolicy successfully', function(done) {
        //uncomment below and update the code to test putMetricPolicy
        //instance.putMetricPolicy(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('startAccessLogging', function() {
      it('should call startAccessLogging successfully', function(done) {
        //uncomment below and update the code to test startAccessLogging
        //instance.startAccessLogging(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('stopAccessLogging', function() {
      it('should call stopAccessLogging successfully', function(done) {
        //uncomment below and update the code to test stopAccessLogging
        //instance.stopAccessLogging(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('tagResource', function() {
      it('should call tagResource successfully', function(done) {
        //uncomment below and update the code to test tagResource
        //instance.tagResource(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('untagResource', function() {
      it('should call untagResource successfully', function(done) {
        //uncomment below and update the code to test untagResource
        //instance.untagResource(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
  });

}));
