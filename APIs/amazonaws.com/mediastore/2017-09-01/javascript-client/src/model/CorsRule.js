/**
 * AWS Elemental MediaStore
 * An AWS Elemental MediaStore container is a namespace that holds folders and objects. You use a container endpoint to create, read, and delete objects. 
 *
 * The version of the OpenAPI document: 2017-09-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The CorsRule model module.
 * @module model/CorsRule
 * @version 2017-09-01
 */
class CorsRule {
    /**
     * Constructs a new <code>CorsRule</code>.
     * A rule for a CORS policy. You can add up to 100 rules to a CORS policy. If more than one rule applies, the service uses the first applicable rule listed.
     * @alias module:model/CorsRule
     * @param allowedOrigins {Array} 
     * @param allowedHeaders {Array} 
     */
    constructor(allowedOrigins, allowedHeaders) { 
        
        CorsRule.initialize(this, allowedOrigins, allowedHeaders);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, allowedOrigins, allowedHeaders) { 
        obj['AllowedOrigins'] = allowedOrigins;
        obj['AllowedHeaders'] = allowedHeaders;
    }

    /**
     * Constructs a <code>CorsRule</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/CorsRule} obj Optional instance to populate.
     * @return {module:model/CorsRule} The populated <code>CorsRule</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new CorsRule();

            if (data.hasOwnProperty('AllowedOrigins')) {
                obj['AllowedOrigins'] = ApiClient.convertToType(data['AllowedOrigins'], Array);
            }
            if (data.hasOwnProperty('AllowedMethods')) {
                obj['AllowedMethods'] = ApiClient.convertToType(data['AllowedMethods'], Array);
            }
            if (data.hasOwnProperty('AllowedHeaders')) {
                obj['AllowedHeaders'] = ApiClient.convertToType(data['AllowedHeaders'], Array);
            }
            if (data.hasOwnProperty('MaxAgeSeconds')) {
                obj['MaxAgeSeconds'] = ApiClient.convertToType(data['MaxAgeSeconds'], 'Number');
            }
            if (data.hasOwnProperty('ExposeHeaders')) {
                obj['ExposeHeaders'] = ApiClient.convertToType(data['ExposeHeaders'], Array);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>CorsRule</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>CorsRule</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of CorsRule.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // validate the optional field `AllowedOrigins`
        if (data['AllowedOrigins']) { // data not null
          Array.validateJSON(data['AllowedOrigins']);
        }
        // validate the optional field `AllowedMethods`
        if (data['AllowedMethods']) { // data not null
          Array.validateJSON(data['AllowedMethods']);
        }
        // validate the optional field `AllowedHeaders`
        if (data['AllowedHeaders']) { // data not null
          Array.validateJSON(data['AllowedHeaders']);
        }
        // validate the optional field `MaxAgeSeconds`
        if (data['MaxAgeSeconds']) { // data not null
          Number.validateJSON(data['MaxAgeSeconds']);
        }
        // validate the optional field `ExposeHeaders`
        if (data['ExposeHeaders']) { // data not null
          Array.validateJSON(data['ExposeHeaders']);
        }

        return true;
    }


}

CorsRule.RequiredProperties = ["AllowedOrigins", "AllowedHeaders"];

/**
 * @member {Array} AllowedOrigins
 */
CorsRule.prototype['AllowedOrigins'] = undefined;

/**
 * @member {Array} AllowedMethods
 */
CorsRule.prototype['AllowedMethods'] = undefined;

/**
 * @member {Array} AllowedHeaders
 */
CorsRule.prototype['AllowedHeaders'] = undefined;

/**
 * @member {Number} MaxAgeSeconds
 */
CorsRule.prototype['MaxAgeSeconds'] = undefined;

/**
 * @member {Array} ExposeHeaders
 */
CorsRule.prototype['ExposeHeaders'] = undefined;






export default CorsRule;

