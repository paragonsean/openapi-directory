/**
 * AWS Elemental MediaStore
 * An AWS Elemental MediaStore container is a namespace that holds folders and objects. You use a container endpoint to create, read, and delete objects. 
 *
 * The version of the OpenAPI document: 2017-09-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The GetContainerPolicyOutput model module.
 * @module model/GetContainerPolicyOutput
 * @version 2017-09-01
 */
class GetContainerPolicyOutput {
    /**
     * Constructs a new <code>GetContainerPolicyOutput</code>.
     * @alias module:model/GetContainerPolicyOutput
     * @param policy {String} 
     */
    constructor(policy) { 
        
        GetContainerPolicyOutput.initialize(this, policy);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, policy) { 
        obj['Policy'] = policy;
    }

    /**
     * Constructs a <code>GetContainerPolicyOutput</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/GetContainerPolicyOutput} obj Optional instance to populate.
     * @return {module:model/GetContainerPolicyOutput} The populated <code>GetContainerPolicyOutput</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new GetContainerPolicyOutput();

            if (data.hasOwnProperty('Policy')) {
                obj['Policy'] = ApiClient.convertToType(data['Policy'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>GetContainerPolicyOutput</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>GetContainerPolicyOutput</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of GetContainerPolicyOutput.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // validate the optional field `Policy`
        if (data['Policy']) { // data not null
          String.validateJSON(data['Policy']);
        }

        return true;
    }


}

GetContainerPolicyOutput.RequiredProperties = ["Policy"];

/**
 * @member {String} Policy
 */
GetContainerPolicyOutput.prototype['Policy'] = undefined;






export default GetContainerPolicyOutput;

