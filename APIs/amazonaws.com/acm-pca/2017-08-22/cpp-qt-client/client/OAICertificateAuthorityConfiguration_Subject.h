/**
 * AWS Certificate Manager Private Certificate Authority
 * <p>This is the <i>Amazon Web Services Private Certificate Authority API Reference</i>. It provides descriptions, syntax, and usage examples for each of the actions and data types involved in creating and managing a private certificate authority (CA) for your organization.</p> <p>The documentation for each action shows the API request parameters and the JSON response. Alternatively, you can use one of the Amazon Web Services SDKs to access an API that is tailored to the programming language or platform that you prefer. For more information, see <a href=\"https://aws.amazon.com/tools/#SDKs\">Amazon Web Services SDKs</a>.</p> <p>Each Amazon Web Services Private CA API operation has a quota that determines the number of times the operation can be called per second. Amazon Web Services Private CA throttles API requests at different rates depending on the operation. Throttling means that Amazon Web Services Private CA rejects an otherwise valid request because the request exceeds the operation's quota for the number of requests per second. When a request is throttled, Amazon Web Services Private CA returns a <a href=\"https://docs.aws.amazon.com/privateca/latest/APIReference/CommonErrors.html\">ThrottlingException</a> error. Amazon Web Services Private CA does not guarantee a minimum request rate for APIs. </p> <p>To see an up-to-date list of your Amazon Web Services Private CA quotas, or to request a quota increase, log into your Amazon Web Services account and visit the <a href=\"https://console.aws.amazon.com/servicequotas/\">Service Quotas</a> console.</p>
 *
 * The version of the OpenAPI document: 2017-08-22
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAICertificateAuthorityConfiguration_Subject.h
 *
 * 
 */

#ifndef OAICertificateAuthorityConfiguration_Subject_H
#define OAICertificateAuthorityConfiguration_Subject_H

#include <QJsonObject>

#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAICertificateAuthorityConfiguration_Subject : public OAIObject {
public:
    OAICertificateAuthorityConfiguration_Subject();
    OAICertificateAuthorityConfiguration_Subject(QString json);
    ~OAICertificateAuthorityConfiguration_Subject() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getCountry() const;
    void setCountry(const QString &country);
    bool is_country_Set() const;
    bool is_country_Valid() const;

    QString getOrganization() const;
    void setOrganization(const QString &organization);
    bool is_organization_Set() const;
    bool is_organization_Valid() const;

    QString getOrganizationalUnit() const;
    void setOrganizationalUnit(const QString &organizational_unit);
    bool is_organizational_unit_Set() const;
    bool is_organizational_unit_Valid() const;

    QString getDistinguishedNameQualifier() const;
    void setDistinguishedNameQualifier(const QString &distinguished_name_qualifier);
    bool is_distinguished_name_qualifier_Set() const;
    bool is_distinguished_name_qualifier_Valid() const;

    QString getState() const;
    void setState(const QString &state);
    bool is_state_Set() const;
    bool is_state_Valid() const;

    QString getCommonName() const;
    void setCommonName(const QString &common_name);
    bool is_common_name_Set() const;
    bool is_common_name_Valid() const;

    QString getSerialNumber() const;
    void setSerialNumber(const QString &serial_number);
    bool is_serial_number_Set() const;
    bool is_serial_number_Valid() const;

    QString getLocality() const;
    void setLocality(const QString &locality);
    bool is_locality_Set() const;
    bool is_locality_Valid() const;

    QString getTitle() const;
    void setTitle(const QString &title);
    bool is_title_Set() const;
    bool is_title_Valid() const;

    QString getSurname() const;
    void setSurname(const QString &surname);
    bool is_surname_Set() const;
    bool is_surname_Valid() const;

    QString getGivenName() const;
    void setGivenName(const QString &given_name);
    bool is_given_name_Set() const;
    bool is_given_name_Valid() const;

    QString getInitials() const;
    void setInitials(const QString &initials);
    bool is_initials_Set() const;
    bool is_initials_Valid() const;

    QString getPseudonym() const;
    void setPseudonym(const QString &pseudonym);
    bool is_pseudonym_Set() const;
    bool is_pseudonym_Valid() const;

    QString getGenerationQualifier() const;
    void setGenerationQualifier(const QString &generation_qualifier);
    bool is_generation_qualifier_Set() const;
    bool is_generation_qualifier_Valid() const;

    QList getCustomAttributes() const;
    void setCustomAttributes(const QList &custom_attributes);
    bool is_custom_attributes_Set() const;
    bool is_custom_attributes_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_country;
    bool m_country_isSet;
    bool m_country_isValid;

    QString m_organization;
    bool m_organization_isSet;
    bool m_organization_isValid;

    QString m_organizational_unit;
    bool m_organizational_unit_isSet;
    bool m_organizational_unit_isValid;

    QString m_distinguished_name_qualifier;
    bool m_distinguished_name_qualifier_isSet;
    bool m_distinguished_name_qualifier_isValid;

    QString m_state;
    bool m_state_isSet;
    bool m_state_isValid;

    QString m_common_name;
    bool m_common_name_isSet;
    bool m_common_name_isValid;

    QString m_serial_number;
    bool m_serial_number_isSet;
    bool m_serial_number_isValid;

    QString m_locality;
    bool m_locality_isSet;
    bool m_locality_isValid;

    QString m_title;
    bool m_title_isSet;
    bool m_title_isValid;

    QString m_surname;
    bool m_surname_isSet;
    bool m_surname_isValid;

    QString m_given_name;
    bool m_given_name_isSet;
    bool m_given_name_isValid;

    QString m_initials;
    bool m_initials_isSet;
    bool m_initials_isValid;

    QString m_pseudonym;
    bool m_pseudonym_isSet;
    bool m_pseudonym_isValid;

    QString m_generation_qualifier;
    bool m_generation_qualifier_isSet;
    bool m_generation_qualifier_isValid;

    QList m_custom_attributes;
    bool m_custom_attributes_isSet;
    bool m_custom_attributes_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAICertificateAuthorityConfiguration_Subject)

#endif // OAICertificateAuthorityConfiguration_Subject_H
