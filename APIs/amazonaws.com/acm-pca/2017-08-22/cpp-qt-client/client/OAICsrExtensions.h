/**
 * AWS Certificate Manager Private Certificate Authority
 * <p>This is the <i>Amazon Web Services Private Certificate Authority API Reference</i>. It provides descriptions, syntax, and usage examples for each of the actions and data types involved in creating and managing a private certificate authority (CA) for your organization.</p> <p>The documentation for each action shows the API request parameters and the JSON response. Alternatively, you can use one of the Amazon Web Services SDKs to access an API that is tailored to the programming language or platform that you prefer. For more information, see <a href=\"https://aws.amazon.com/tools/#SDKs\">Amazon Web Services SDKs</a>.</p> <p>Each Amazon Web Services Private CA API operation has a quota that determines the number of times the operation can be called per second. Amazon Web Services Private CA throttles API requests at different rates depending on the operation. Throttling means that Amazon Web Services Private CA rejects an otherwise valid request because the request exceeds the operation's quota for the number of requests per second. When a request is throttled, Amazon Web Services Private CA returns a <a href=\"https://docs.aws.amazon.com/privateca/latest/APIReference/CommonErrors.html\">ThrottlingException</a> error. Amazon Web Services Private CA does not guarantee a minimum request rate for APIs. </p> <p>To see an up-to-date list of your Amazon Web Services Private CA quotas, or to request a quota increase, log into your Amazon Web Services account and visit the <a href=\"https://console.aws.amazon.com/servicequotas/\">Service Quotas</a> console.</p>
 *
 * The version of the OpenAPI document: 2017-08-22
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAICsrExtensions.h
 *
 * Describes the certificate extensions to be added to the certificate signing request (CSR).
 */

#ifndef OAICsrExtensions_H
#define OAICsrExtensions_H

#include <QJsonObject>

#include "OAICsrExtensions_KeyUsage.h"
#include <QList>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAICsrExtensions_KeyUsage;

class OAICsrExtensions : public OAIObject {
public:
    OAICsrExtensions();
    OAICsrExtensions(QString json);
    ~OAICsrExtensions() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAICsrExtensions_KeyUsage getKeyUsage() const;
    void setKeyUsage(const OAICsrExtensions_KeyUsage &key_usage);
    bool is_key_usage_Set() const;
    bool is_key_usage_Valid() const;

    QList getSubjectInformationAccess() const;
    void setSubjectInformationAccess(const QList &subject_information_access);
    bool is_subject_information_access_Set() const;
    bool is_subject_information_access_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAICsrExtensions_KeyUsage m_key_usage;
    bool m_key_usage_isSet;
    bool m_key_usage_isValid;

    QList m_subject_information_access;
    bool m_subject_information_access_isSet;
    bool m_subject_information_access_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAICsrExtensions)

#endif // OAICsrExtensions_H
