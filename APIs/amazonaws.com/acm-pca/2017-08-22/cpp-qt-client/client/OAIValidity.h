/**
 * AWS Certificate Manager Private Certificate Authority
 * <p>This is the <i>Amazon Web Services Private Certificate Authority API Reference</i>. It provides descriptions, syntax, and usage examples for each of the actions and data types involved in creating and managing a private certificate authority (CA) for your organization.</p> <p>The documentation for each action shows the API request parameters and the JSON response. Alternatively, you can use one of the Amazon Web Services SDKs to access an API that is tailored to the programming language or platform that you prefer. For more information, see <a href=\"https://aws.amazon.com/tools/#SDKs\">Amazon Web Services SDKs</a>.</p> <p>Each Amazon Web Services Private CA API operation has a quota that determines the number of times the operation can be called per second. Amazon Web Services Private CA throttles API requests at different rates depending on the operation. Throttling means that Amazon Web Services Private CA rejects an otherwise valid request because the request exceeds the operation's quota for the number of requests per second. When a request is throttled, Amazon Web Services Private CA returns a <a href=\"https://docs.aws.amazon.com/privateca/latest/APIReference/CommonErrors.html\">ThrottlingException</a> error. Amazon Web Services Private CA does not guarantee a minimum request rate for APIs. </p> <p>To see an up-to-date list of your Amazon Web Services Private CA quotas, or to request a quota increase, log into your Amazon Web Services account and visit the <a href=\"https://console.aws.amazon.com/servicequotas/\">Service Quotas</a> console.</p>
 *
 * The version of the OpenAPI document: 2017-08-22
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIValidity.h
 *
 * &lt;p&gt;Validity specifies the period of time during which a certificate is valid. Validity can be expressed as an explicit date and time when the validity of a certificate starts or expires, or as a span of time after issuance, stated in days, months, or years. For more information, see &lt;a href&#x3D;\&quot;https://tools.ietf.org/html/rfc5280#section-4.1.2.5\&quot;&gt;Validity&lt;/a&gt; in RFC 5280.&lt;/p&gt; &lt;p&gt;Amazon Web Services Private CA API consumes the &lt;code&gt;Validity&lt;/code&gt; data type differently in two distinct parameters of the &lt;code&gt;IssueCertificate&lt;/code&gt; action. The required parameter &lt;code&gt;IssueCertificate&lt;/code&gt;:&lt;code&gt;Validity&lt;/code&gt; specifies the end of a certificate&#39;s validity period. The optional parameter &lt;code&gt;IssueCertificate&lt;/code&gt;:&lt;code&gt;ValidityNotBefore&lt;/code&gt; specifies a customized starting time for the validity period.&lt;/p&gt;
 */

#ifndef OAIValidity_H
#define OAIValidity_H

#include <QJsonObject>

#include "OAIValidityPeriodType.h"

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIValidity : public OAIObject {
public:
    OAIValidity();
    OAIValidity(QString json);
    ~OAIValidity() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    qint32 getValue() const;
    void setValue(const qint32 &value);
    bool is_value_Set() const;
    bool is_value_Valid() const;

    OAIValidityPeriodType getType() const;
    void setType(const OAIValidityPeriodType &type);
    bool is_type_Set() const;
    bool is_type_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    qint32 m_value;
    bool m_value_isSet;
    bool m_value_isValid;

    OAIValidityPeriodType m_type;
    bool m_type_isSet;
    bool m_type_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIValidity)

#endif // OAIValidity_H
