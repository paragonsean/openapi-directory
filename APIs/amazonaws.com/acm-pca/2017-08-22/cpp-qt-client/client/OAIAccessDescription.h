/**
 * AWS Certificate Manager Private Certificate Authority
 * <p>This is the <i>Amazon Web Services Private Certificate Authority API Reference</i>. It provides descriptions, syntax, and usage examples for each of the actions and data types involved in creating and managing a private certificate authority (CA) for your organization.</p> <p>The documentation for each action shows the API request parameters and the JSON response. Alternatively, you can use one of the Amazon Web Services SDKs to access an API that is tailored to the programming language or platform that you prefer. For more information, see <a href=\"https://aws.amazon.com/tools/#SDKs\">Amazon Web Services SDKs</a>.</p> <p>Each Amazon Web Services Private CA API operation has a quota that determines the number of times the operation can be called per second. Amazon Web Services Private CA throttles API requests at different rates depending on the operation. Throttling means that Amazon Web Services Private CA rejects an otherwise valid request because the request exceeds the operation's quota for the number of requests per second. When a request is throttled, Amazon Web Services Private CA returns a <a href=\"https://docs.aws.amazon.com/privateca/latest/APIReference/CommonErrors.html\">ThrottlingException</a> error. Amazon Web Services Private CA does not guarantee a minimum request rate for APIs. </p> <p>To see an up-to-date list of your Amazon Web Services Private CA quotas, or to request a quota increase, log into your Amazon Web Services account and visit the <a href=\"https://console.aws.amazon.com/servicequotas/\">Service Quotas</a> console.</p>
 *
 * The version of the OpenAPI document: 2017-08-22
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIAccessDescription.h
 *
 * Provides access information used by the &lt;code&gt;authorityInfoAccess&lt;/code&gt; and &lt;code&gt;subjectInfoAccess&lt;/code&gt; extensions described in &lt;a href&#x3D;\&quot;https://datatracker.ietf.org/doc/html/rfc5280\&quot;&gt;RFC 5280&lt;/a&gt;.
 */

#ifndef OAIAccessDescription_H
#define OAIAccessDescription_H

#include <QJsonObject>

#include "OAIAccessDescription_AccessLocation.h"
#include "OAIAccessDescription_AccessMethod.h"

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIAccessDescription_AccessMethod;
class OAIAccessDescription_AccessLocation;

class OAIAccessDescription : public OAIObject {
public:
    OAIAccessDescription();
    OAIAccessDescription(QString json);
    ~OAIAccessDescription() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAIAccessDescription_AccessMethod getAccessMethod() const;
    void setAccessMethod(const OAIAccessDescription_AccessMethod &access_method);
    bool is_access_method_Set() const;
    bool is_access_method_Valid() const;

    OAIAccessDescription_AccessLocation getAccessLocation() const;
    void setAccessLocation(const OAIAccessDescription_AccessLocation &access_location);
    bool is_access_location_Set() const;
    bool is_access_location_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAIAccessDescription_AccessMethod m_access_method;
    bool m_access_method_isSet;
    bool m_access_method_isValid;

    OAIAccessDescription_AccessLocation m_access_location;
    bool m_access_location_isSet;
    bool m_access_location_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIAccessDescription)

#endif // OAIAccessDescription_H
