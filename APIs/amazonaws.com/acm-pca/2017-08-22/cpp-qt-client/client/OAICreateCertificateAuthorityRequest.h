/**
 * AWS Certificate Manager Private Certificate Authority
 * <p>This is the <i>Amazon Web Services Private Certificate Authority API Reference</i>. It provides descriptions, syntax, and usage examples for each of the actions and data types involved in creating and managing a private certificate authority (CA) for your organization.</p> <p>The documentation for each action shows the API request parameters and the JSON response. Alternatively, you can use one of the Amazon Web Services SDKs to access an API that is tailored to the programming language or platform that you prefer. For more information, see <a href=\"https://aws.amazon.com/tools/#SDKs\">Amazon Web Services SDKs</a>.</p> <p>Each Amazon Web Services Private CA API operation has a quota that determines the number of times the operation can be called per second. Amazon Web Services Private CA throttles API requests at different rates depending on the operation. Throttling means that Amazon Web Services Private CA rejects an otherwise valid request because the request exceeds the operation's quota for the number of requests per second. When a request is throttled, Amazon Web Services Private CA returns a <a href=\"https://docs.aws.amazon.com/privateca/latest/APIReference/CommonErrors.html\">ThrottlingException</a> error. Amazon Web Services Private CA does not guarantee a minimum request rate for APIs. </p> <p>To see an up-to-date list of your Amazon Web Services Private CA quotas, or to request a quota increase, log into your Amazon Web Services account and visit the <a href=\"https://console.aws.amazon.com/servicequotas/\">Service Quotas</a> console.</p>
 *
 * The version of the OpenAPI document: 2017-08-22
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAICreateCertificateAuthorityRequest.h
 *
 * 
 */

#ifndef OAICreateCertificateAuthorityRequest_H
#define OAICreateCertificateAuthorityRequest_H

#include <QJsonObject>

#include "OAICertificateAuthorityType.h"
#include "OAICertificateAuthorityUsageMode.h"
#include "OAICreateCertificateAuthorityRequest_CertificateAuthorityConfiguration.h"
#include "OAICreateCertificateAuthorityRequest_RevocationConfiguration.h"
#include "OAIKeyStorageSecurityStandard.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAICreateCertificateAuthorityRequest_CertificateAuthorityConfiguration;
class OAICreateCertificateAuthorityRequest_RevocationConfiguration;

class OAICreateCertificateAuthorityRequest : public OAIObject {
public:
    OAICreateCertificateAuthorityRequest();
    OAICreateCertificateAuthorityRequest(QString json);
    ~OAICreateCertificateAuthorityRequest() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAICreateCertificateAuthorityRequest_CertificateAuthorityConfiguration getCertificateAuthorityConfiguration() const;
    void setCertificateAuthorityConfiguration(const OAICreateCertificateAuthorityRequest_CertificateAuthorityConfiguration &certificate_authority_configuration);
    bool is_certificate_authority_configuration_Set() const;
    bool is_certificate_authority_configuration_Valid() const;

    OAICreateCertificateAuthorityRequest_RevocationConfiguration getRevocationConfiguration() const;
    void setRevocationConfiguration(const OAICreateCertificateAuthorityRequest_RevocationConfiguration &revocation_configuration);
    bool is_revocation_configuration_Set() const;
    bool is_revocation_configuration_Valid() const;

    OAICertificateAuthorityType getCertificateAuthorityType() const;
    void setCertificateAuthorityType(const OAICertificateAuthorityType &certificate_authority_type);
    bool is_certificate_authority_type_Set() const;
    bool is_certificate_authority_type_Valid() const;

    QString getIdempotencyToken() const;
    void setIdempotencyToken(const QString &idempotency_token);
    bool is_idempotency_token_Set() const;
    bool is_idempotency_token_Valid() const;

    OAIKeyStorageSecurityStandard getKeyStorageSecurityStandard() const;
    void setKeyStorageSecurityStandard(const OAIKeyStorageSecurityStandard &key_storage_security_standard);
    bool is_key_storage_security_standard_Set() const;
    bool is_key_storage_security_standard_Valid() const;

    QList getTags() const;
    void setTags(const QList &tags);
    bool is_tags_Set() const;
    bool is_tags_Valid() const;

    OAICertificateAuthorityUsageMode getUsageMode() const;
    void setUsageMode(const OAICertificateAuthorityUsageMode &usage_mode);
    bool is_usage_mode_Set() const;
    bool is_usage_mode_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAICreateCertificateAuthorityRequest_CertificateAuthorityConfiguration m_certificate_authority_configuration;
    bool m_certificate_authority_configuration_isSet;
    bool m_certificate_authority_configuration_isValid;

    OAICreateCertificateAuthorityRequest_RevocationConfiguration m_revocation_configuration;
    bool m_revocation_configuration_isSet;
    bool m_revocation_configuration_isValid;

    OAICertificateAuthorityType m_certificate_authority_type;
    bool m_certificate_authority_type_isSet;
    bool m_certificate_authority_type_isValid;

    QString m_idempotency_token;
    bool m_idempotency_token_isSet;
    bool m_idempotency_token_isValid;

    OAIKeyStorageSecurityStandard m_key_storage_security_standard;
    bool m_key_storage_security_standard_isSet;
    bool m_key_storage_security_standard_isValid;

    QList m_tags;
    bool m_tags_isSet;
    bool m_tags_isValid;

    OAICertificateAuthorityUsageMode m_usage_mode;
    bool m_usage_mode_isSet;
    bool m_usage_mode_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAICreateCertificateAuthorityRequest)

#endif // OAICreateCertificateAuthorityRequest_H
