# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.extended_key_usage_type import ExtendedKeyUsageType
from openapi_server import util


class ExtendedKeyUsage(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, extended_key_usage_type: ExtendedKeyUsageType=None, extended_key_usage_object_identifier: str=None):
        """ExtendedKeyUsage - a model defined in OpenAPI

        :param extended_key_usage_type: The extended_key_usage_type of this ExtendedKeyUsage.
        :param extended_key_usage_object_identifier: The extended_key_usage_object_identifier of this ExtendedKeyUsage.
        """
        self.openapi_types = {
            'extended_key_usage_type': ExtendedKeyUsageType,
            'extended_key_usage_object_identifier': str
        }

        self.attribute_map = {
            'extended_key_usage_type': 'ExtendedKeyUsageType',
            'extended_key_usage_object_identifier': 'ExtendedKeyUsageObjectIdentifier'
        }

        self._extended_key_usage_type = extended_key_usage_type
        self._extended_key_usage_object_identifier = extended_key_usage_object_identifier

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ExtendedKeyUsage':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ExtendedKeyUsage of this ExtendedKeyUsage.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def extended_key_usage_type(self):
        """Gets the extended_key_usage_type of this ExtendedKeyUsage.


        :return: The extended_key_usage_type of this ExtendedKeyUsage.
        :rtype: ExtendedKeyUsageType
        """
        return self._extended_key_usage_type

    @extended_key_usage_type.setter
    def extended_key_usage_type(self, extended_key_usage_type):
        """Sets the extended_key_usage_type of this ExtendedKeyUsage.


        :param extended_key_usage_type: The extended_key_usage_type of this ExtendedKeyUsage.
        :type extended_key_usage_type: ExtendedKeyUsageType
        """

        self._extended_key_usage_type = extended_key_usage_type

    @property
    def extended_key_usage_object_identifier(self):
        """Gets the extended_key_usage_object_identifier of this ExtendedKeyUsage.


        :return: The extended_key_usage_object_identifier of this ExtendedKeyUsage.
        :rtype: str
        """
        return self._extended_key_usage_object_identifier

    @extended_key_usage_object_identifier.setter
    def extended_key_usage_object_identifier(self, extended_key_usage_object_identifier):
        """Sets the extended_key_usage_object_identifier of this ExtendedKeyUsage.


        :param extended_key_usage_object_identifier: The extended_key_usage_object_identifier of this ExtendedKeyUsage.
        :type extended_key_usage_object_identifier: str
        """

        self._extended_key_usage_object_identifier = extended_key_usage_object_identifier
