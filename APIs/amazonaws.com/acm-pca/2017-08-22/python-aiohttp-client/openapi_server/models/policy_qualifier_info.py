# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.policy_qualifier_id import PolicyQualifierId
from openapi_server.models.policy_qualifier_info_qualifier import PolicyQualifierInfoQualifier
from openapi_server import util


class PolicyQualifierInfo(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, policy_qualifier_id: PolicyQualifierId=None, qualifier: PolicyQualifierInfoQualifier=None):
        """PolicyQualifierInfo - a model defined in OpenAPI

        :param policy_qualifier_id: The policy_qualifier_id of this PolicyQualifierInfo.
        :param qualifier: The qualifier of this PolicyQualifierInfo.
        """
        self.openapi_types = {
            'policy_qualifier_id': PolicyQualifierId,
            'qualifier': PolicyQualifierInfoQualifier
        }

        self.attribute_map = {
            'policy_qualifier_id': 'PolicyQualifierId',
            'qualifier': 'Qualifier'
        }

        self._policy_qualifier_id = policy_qualifier_id
        self._qualifier = qualifier

    @classmethod
    def from_dict(cls, dikt: dict) -> 'PolicyQualifierInfo':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The PolicyQualifierInfo of this PolicyQualifierInfo.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def policy_qualifier_id(self):
        """Gets the policy_qualifier_id of this PolicyQualifierInfo.


        :return: The policy_qualifier_id of this PolicyQualifierInfo.
        :rtype: PolicyQualifierId
        """
        return self._policy_qualifier_id

    @policy_qualifier_id.setter
    def policy_qualifier_id(self, policy_qualifier_id):
        """Sets the policy_qualifier_id of this PolicyQualifierInfo.


        :param policy_qualifier_id: The policy_qualifier_id of this PolicyQualifierInfo.
        :type policy_qualifier_id: PolicyQualifierId
        """
        if policy_qualifier_id is None:
            raise ValueError("Invalid value for `policy_qualifier_id`, must not be `None`")

        self._policy_qualifier_id = policy_qualifier_id

    @property
    def qualifier(self):
        """Gets the qualifier of this PolicyQualifierInfo.


        :return: The qualifier of this PolicyQualifierInfo.
        :rtype: PolicyQualifierInfoQualifier
        """
        return self._qualifier

    @qualifier.setter
    def qualifier(self, qualifier):
        """Sets the qualifier of this PolicyQualifierInfo.


        :param qualifier: The qualifier of this PolicyQualifierInfo.
        :type qualifier: PolicyQualifierInfoQualifier
        """
        if qualifier is None:
            raise ValueError("Invalid value for `qualifier`, must not be `None`")

        self._qualifier = qualifier
