# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.s3_object_acl import S3ObjectAcl
from openapi_server import util


class RevocationConfigurationCrlConfiguration(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, enabled: bool=None, expiration_in_days: int=None, custom_cname: str=None, s3_bucket_name: str=None, s3_object_acl: S3ObjectAcl=None):
        """RevocationConfigurationCrlConfiguration - a model defined in OpenAPI

        :param enabled: The enabled of this RevocationConfigurationCrlConfiguration.
        :param expiration_in_days: The expiration_in_days of this RevocationConfigurationCrlConfiguration.
        :param custom_cname: The custom_cname of this RevocationConfigurationCrlConfiguration.
        :param s3_bucket_name: The s3_bucket_name of this RevocationConfigurationCrlConfiguration.
        :param s3_object_acl: The s3_object_acl of this RevocationConfigurationCrlConfiguration.
        """
        self.openapi_types = {
            'enabled': bool,
            'expiration_in_days': int,
            'custom_cname': str,
            's3_bucket_name': str,
            's3_object_acl': S3ObjectAcl
        }

        self.attribute_map = {
            'enabled': 'Enabled',
            'expiration_in_days': 'ExpirationInDays',
            'custom_cname': 'CustomCname',
            's3_bucket_name': 'S3BucketName',
            's3_object_acl': 'S3ObjectAcl'
        }

        self._enabled = enabled
        self._expiration_in_days = expiration_in_days
        self._custom_cname = custom_cname
        self._s3_bucket_name = s3_bucket_name
        self._s3_object_acl = s3_object_acl

    @classmethod
    def from_dict(cls, dikt: dict) -> 'RevocationConfigurationCrlConfiguration':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The RevocationConfiguration_CrlConfiguration of this RevocationConfigurationCrlConfiguration.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def enabled(self):
        """Gets the enabled of this RevocationConfigurationCrlConfiguration.


        :return: The enabled of this RevocationConfigurationCrlConfiguration.
        :rtype: bool
        """
        return self._enabled

    @enabled.setter
    def enabled(self, enabled):
        """Sets the enabled of this RevocationConfigurationCrlConfiguration.


        :param enabled: The enabled of this RevocationConfigurationCrlConfiguration.
        :type enabled: bool
        """
        if enabled is None:
            raise ValueError("Invalid value for `enabled`, must not be `None`")

        self._enabled = enabled

    @property
    def expiration_in_days(self):
        """Gets the expiration_in_days of this RevocationConfigurationCrlConfiguration.


        :return: The expiration_in_days of this RevocationConfigurationCrlConfiguration.
        :rtype: int
        """
        return self._expiration_in_days

    @expiration_in_days.setter
    def expiration_in_days(self, expiration_in_days):
        """Sets the expiration_in_days of this RevocationConfigurationCrlConfiguration.


        :param expiration_in_days: The expiration_in_days of this RevocationConfigurationCrlConfiguration.
        :type expiration_in_days: int
        """

        self._expiration_in_days = expiration_in_days

    @property
    def custom_cname(self):
        """Gets the custom_cname of this RevocationConfigurationCrlConfiguration.


        :return: The custom_cname of this RevocationConfigurationCrlConfiguration.
        :rtype: str
        """
        return self._custom_cname

    @custom_cname.setter
    def custom_cname(self, custom_cname):
        """Sets the custom_cname of this RevocationConfigurationCrlConfiguration.


        :param custom_cname: The custom_cname of this RevocationConfigurationCrlConfiguration.
        :type custom_cname: str
        """

        self._custom_cname = custom_cname

    @property
    def s3_bucket_name(self):
        """Gets the s3_bucket_name of this RevocationConfigurationCrlConfiguration.


        :return: The s3_bucket_name of this RevocationConfigurationCrlConfiguration.
        :rtype: str
        """
        return self._s3_bucket_name

    @s3_bucket_name.setter
    def s3_bucket_name(self, s3_bucket_name):
        """Sets the s3_bucket_name of this RevocationConfigurationCrlConfiguration.


        :param s3_bucket_name: The s3_bucket_name of this RevocationConfigurationCrlConfiguration.
        :type s3_bucket_name: str
        """

        self._s3_bucket_name = s3_bucket_name

    @property
    def s3_object_acl(self):
        """Gets the s3_object_acl of this RevocationConfigurationCrlConfiguration.


        :return: The s3_object_acl of this RevocationConfigurationCrlConfiguration.
        :rtype: S3ObjectAcl
        """
        return self._s3_object_acl

    @s3_object_acl.setter
    def s3_object_acl(self, s3_object_acl):
        """Sets the s3_object_acl of this RevocationConfigurationCrlConfiguration.


        :param s3_object_acl: The s3_object_acl of this RevocationConfigurationCrlConfiguration.
        :type s3_object_acl: S3ObjectAcl
        """

        self._s3_object_acl = s3_object_acl
