# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class RevocationConfigurationOcspConfiguration(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, enabled: bool=None, ocsp_custom_cname: str=None):
        """RevocationConfigurationOcspConfiguration - a model defined in OpenAPI

        :param enabled: The enabled of this RevocationConfigurationOcspConfiguration.
        :param ocsp_custom_cname: The ocsp_custom_cname of this RevocationConfigurationOcspConfiguration.
        """
        self.openapi_types = {
            'enabled': bool,
            'ocsp_custom_cname': str
        }

        self.attribute_map = {
            'enabled': 'Enabled',
            'ocsp_custom_cname': 'OcspCustomCname'
        }

        self._enabled = enabled
        self._ocsp_custom_cname = ocsp_custom_cname

    @classmethod
    def from_dict(cls, dikt: dict) -> 'RevocationConfigurationOcspConfiguration':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The RevocationConfiguration_OcspConfiguration of this RevocationConfigurationOcspConfiguration.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def enabled(self):
        """Gets the enabled of this RevocationConfigurationOcspConfiguration.


        :return: The enabled of this RevocationConfigurationOcspConfiguration.
        :rtype: bool
        """
        return self._enabled

    @enabled.setter
    def enabled(self, enabled):
        """Sets the enabled of this RevocationConfigurationOcspConfiguration.


        :param enabled: The enabled of this RevocationConfigurationOcspConfiguration.
        :type enabled: bool
        """
        if enabled is None:
            raise ValueError("Invalid value for `enabled`, must not be `None`")

        self._enabled = enabled

    @property
    def ocsp_custom_cname(self):
        """Gets the ocsp_custom_cname of this RevocationConfigurationOcspConfiguration.


        :return: The ocsp_custom_cname of this RevocationConfigurationOcspConfiguration.
        :rtype: str
        """
        return self._ocsp_custom_cname

    @ocsp_custom_cname.setter
    def ocsp_custom_cname(self, ocsp_custom_cname):
        """Sets the ocsp_custom_cname of this RevocationConfigurationOcspConfiguration.


        :param ocsp_custom_cname: The ocsp_custom_cname of this RevocationConfigurationOcspConfiguration.
        :type ocsp_custom_cname: str
        """

        self._ocsp_custom_cname = ocsp_custom_cname
