# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class Qualifier(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, cps_uri: str=None):
        """Qualifier - a model defined in OpenAPI

        :param cps_uri: The cps_uri of this Qualifier.
        """
        self.openapi_types = {
            'cps_uri': str
        }

        self.attribute_map = {
            'cps_uri': 'CpsUri'
        }

        self._cps_uri = cps_uri

    @classmethod
    def from_dict(cls, dikt: dict) -> 'Qualifier':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Qualifier of this Qualifier.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def cps_uri(self):
        """Gets the cps_uri of this Qualifier.


        :return: The cps_uri of this Qualifier.
        :rtype: str
        """
        return self._cps_uri

    @cps_uri.setter
    def cps_uri(self, cps_uri):
        """Sets the cps_uri of this Qualifier.


        :param cps_uri: The cps_uri of this Qualifier.
        :type cps_uri: str
        """
        if cps_uri is None:
            raise ValueError("Invalid value for `cps_uri`, must not be `None`")

        self._cps_uri = cps_uri
