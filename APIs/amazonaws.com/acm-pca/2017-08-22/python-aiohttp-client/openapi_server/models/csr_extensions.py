# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.csr_extensions_key_usage import CsrExtensionsKeyUsage
from openapi_server import util


class CsrExtensions(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, key_usage: CsrExtensionsKeyUsage=None, subject_information_access: List=None):
        """CsrExtensions - a model defined in OpenAPI

        :param key_usage: The key_usage of this CsrExtensions.
        :param subject_information_access: The subject_information_access of this CsrExtensions.
        """
        self.openapi_types = {
            'key_usage': CsrExtensionsKeyUsage,
            'subject_information_access': List
        }

        self.attribute_map = {
            'key_usage': 'KeyUsage',
            'subject_information_access': 'SubjectInformationAccess'
        }

        self._key_usage = key_usage
        self._subject_information_access = subject_information_access

    @classmethod
    def from_dict(cls, dikt: dict) -> 'CsrExtensions':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The CsrExtensions of this CsrExtensions.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def key_usage(self):
        """Gets the key_usage of this CsrExtensions.


        :return: The key_usage of this CsrExtensions.
        :rtype: CsrExtensionsKeyUsage
        """
        return self._key_usage

    @key_usage.setter
    def key_usage(self, key_usage):
        """Sets the key_usage of this CsrExtensions.


        :param key_usage: The key_usage of this CsrExtensions.
        :type key_usage: CsrExtensionsKeyUsage
        """

        self._key_usage = key_usage

    @property
    def subject_information_access(self):
        """Gets the subject_information_access of this CsrExtensions.


        :return: The subject_information_access of this CsrExtensions.
        :rtype: List
        """
        return self._subject_information_access

    @subject_information_access.setter
    def subject_information_access(self, subject_information_access):
        """Sets the subject_information_access of this CsrExtensions.


        :param subject_information_access: The subject_information_access of this CsrExtensions.
        :type subject_information_access: List
        """

        self._subject_information_access = subject_information_access
