# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class PolicyInformation(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, cert_policy_id: str=None, policy_qualifiers: List=None):
        """PolicyInformation - a model defined in OpenAPI

        :param cert_policy_id: The cert_policy_id of this PolicyInformation.
        :param policy_qualifiers: The policy_qualifiers of this PolicyInformation.
        """
        self.openapi_types = {
            'cert_policy_id': str,
            'policy_qualifiers': List
        }

        self.attribute_map = {
            'cert_policy_id': 'CertPolicyId',
            'policy_qualifiers': 'PolicyQualifiers'
        }

        self._cert_policy_id = cert_policy_id
        self._policy_qualifiers = policy_qualifiers

    @classmethod
    def from_dict(cls, dikt: dict) -> 'PolicyInformation':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The PolicyInformation of this PolicyInformation.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def cert_policy_id(self):
        """Gets the cert_policy_id of this PolicyInformation.


        :return: The cert_policy_id of this PolicyInformation.
        :rtype: str
        """
        return self._cert_policy_id

    @cert_policy_id.setter
    def cert_policy_id(self, cert_policy_id):
        """Sets the cert_policy_id of this PolicyInformation.


        :param cert_policy_id: The cert_policy_id of this PolicyInformation.
        :type cert_policy_id: str
        """
        if cert_policy_id is None:
            raise ValueError("Invalid value for `cert_policy_id`, must not be `None`")

        self._cert_policy_id = cert_policy_id

    @property
    def policy_qualifiers(self):
        """Gets the policy_qualifiers of this PolicyInformation.


        :return: The policy_qualifiers of this PolicyInformation.
        :rtype: List
        """
        return self._policy_qualifiers

    @policy_qualifiers.setter
    def policy_qualifiers(self, policy_qualifiers):
        """Sets the policy_qualifiers of this PolicyInformation.


        :param policy_qualifiers: The policy_qualifiers of this PolicyInformation.
        :type policy_qualifiers: List
        """

        self._policy_qualifiers = policy_qualifiers
