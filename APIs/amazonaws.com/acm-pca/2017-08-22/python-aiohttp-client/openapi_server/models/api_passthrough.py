# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.asn1_subject import ASN1Subject
from openapi_server.models.api_passthrough_extensions import ApiPassthroughExtensions
from openapi_server import util


class ApiPassthrough(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, extensions: ApiPassthroughExtensions=None, subject: ASN1Subject=None):
        """ApiPassthrough - a model defined in OpenAPI

        :param extensions: The extensions of this ApiPassthrough.
        :param subject: The subject of this ApiPassthrough.
        """
        self.openapi_types = {
            'extensions': ApiPassthroughExtensions,
            'subject': ASN1Subject
        }

        self.attribute_map = {
            'extensions': 'Extensions',
            'subject': 'Subject'
        }

        self._extensions = extensions
        self._subject = subject

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ApiPassthrough':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ApiPassthrough of this ApiPassthrough.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def extensions(self):
        """Gets the extensions of this ApiPassthrough.


        :return: The extensions of this ApiPassthrough.
        :rtype: ApiPassthroughExtensions
        """
        return self._extensions

    @extensions.setter
    def extensions(self, extensions):
        """Sets the extensions of this ApiPassthrough.


        :param extensions: The extensions of this ApiPassthrough.
        :type extensions: ApiPassthroughExtensions
        """

        self._extensions = extensions

    @property
    def subject(self):
        """Gets the subject of this ApiPassthrough.


        :return: The subject of this ApiPassthrough.
        :rtype: ASN1Subject
        """
        return self._subject

    @subject.setter
    def subject(self, subject):
        """Sets the subject of this ApiPassthrough.


        :param subject: The subject of this ApiPassthrough.
        :type subject: ASN1Subject
        """

        self._subject = subject
