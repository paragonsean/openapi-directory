# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class CertificateAuthorityConfigurationSubject(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, country: str=None, organization: str=None, organizational_unit: str=None, distinguished_name_qualifier: str=None, state: str=None, common_name: str=None, serial_number: str=None, locality: str=None, title: str=None, surname: str=None, given_name: str=None, initials: str=None, pseudonym: str=None, generation_qualifier: str=None, custom_attributes: List=None):
        """CertificateAuthorityConfigurationSubject - a model defined in OpenAPI

        :param country: The country of this CertificateAuthorityConfigurationSubject.
        :param organization: The organization of this CertificateAuthorityConfigurationSubject.
        :param organizational_unit: The organizational_unit of this CertificateAuthorityConfigurationSubject.
        :param distinguished_name_qualifier: The distinguished_name_qualifier of this CertificateAuthorityConfigurationSubject.
        :param state: The state of this CertificateAuthorityConfigurationSubject.
        :param common_name: The common_name of this CertificateAuthorityConfigurationSubject.
        :param serial_number: The serial_number of this CertificateAuthorityConfigurationSubject.
        :param locality: The locality of this CertificateAuthorityConfigurationSubject.
        :param title: The title of this CertificateAuthorityConfigurationSubject.
        :param surname: The surname of this CertificateAuthorityConfigurationSubject.
        :param given_name: The given_name of this CertificateAuthorityConfigurationSubject.
        :param initials: The initials of this CertificateAuthorityConfigurationSubject.
        :param pseudonym: The pseudonym of this CertificateAuthorityConfigurationSubject.
        :param generation_qualifier: The generation_qualifier of this CertificateAuthorityConfigurationSubject.
        :param custom_attributes: The custom_attributes of this CertificateAuthorityConfigurationSubject.
        """
        self.openapi_types = {
            'country': str,
            'organization': str,
            'organizational_unit': str,
            'distinguished_name_qualifier': str,
            'state': str,
            'common_name': str,
            'serial_number': str,
            'locality': str,
            'title': str,
            'surname': str,
            'given_name': str,
            'initials': str,
            'pseudonym': str,
            'generation_qualifier': str,
            'custom_attributes': List
        }

        self.attribute_map = {
            'country': 'Country',
            'organization': 'Organization',
            'organizational_unit': 'OrganizationalUnit',
            'distinguished_name_qualifier': 'DistinguishedNameQualifier',
            'state': 'State',
            'common_name': 'CommonName',
            'serial_number': 'SerialNumber',
            'locality': 'Locality',
            'title': 'Title',
            'surname': 'Surname',
            'given_name': 'GivenName',
            'initials': 'Initials',
            'pseudonym': 'Pseudonym',
            'generation_qualifier': 'GenerationQualifier',
            'custom_attributes': 'CustomAttributes'
        }

        self._country = country
        self._organization = organization
        self._organizational_unit = organizational_unit
        self._distinguished_name_qualifier = distinguished_name_qualifier
        self._state = state
        self._common_name = common_name
        self._serial_number = serial_number
        self._locality = locality
        self._title = title
        self._surname = surname
        self._given_name = given_name
        self._initials = initials
        self._pseudonym = pseudonym
        self._generation_qualifier = generation_qualifier
        self._custom_attributes = custom_attributes

    @classmethod
    def from_dict(cls, dikt: dict) -> 'CertificateAuthorityConfigurationSubject':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The CertificateAuthorityConfiguration_Subject of this CertificateAuthorityConfigurationSubject.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def country(self):
        """Gets the country of this CertificateAuthorityConfigurationSubject.


        :return: The country of this CertificateAuthorityConfigurationSubject.
        :rtype: str
        """
        return self._country

    @country.setter
    def country(self, country):
        """Sets the country of this CertificateAuthorityConfigurationSubject.


        :param country: The country of this CertificateAuthorityConfigurationSubject.
        :type country: str
        """

        self._country = country

    @property
    def organization(self):
        """Gets the organization of this CertificateAuthorityConfigurationSubject.


        :return: The organization of this CertificateAuthorityConfigurationSubject.
        :rtype: str
        """
        return self._organization

    @organization.setter
    def organization(self, organization):
        """Sets the organization of this CertificateAuthorityConfigurationSubject.


        :param organization: The organization of this CertificateAuthorityConfigurationSubject.
        :type organization: str
        """

        self._organization = organization

    @property
    def organizational_unit(self):
        """Gets the organizational_unit of this CertificateAuthorityConfigurationSubject.


        :return: The organizational_unit of this CertificateAuthorityConfigurationSubject.
        :rtype: str
        """
        return self._organizational_unit

    @organizational_unit.setter
    def organizational_unit(self, organizational_unit):
        """Sets the organizational_unit of this CertificateAuthorityConfigurationSubject.


        :param organizational_unit: The organizational_unit of this CertificateAuthorityConfigurationSubject.
        :type organizational_unit: str
        """

        self._organizational_unit = organizational_unit

    @property
    def distinguished_name_qualifier(self):
        """Gets the distinguished_name_qualifier of this CertificateAuthorityConfigurationSubject.


        :return: The distinguished_name_qualifier of this CertificateAuthorityConfigurationSubject.
        :rtype: str
        """
        return self._distinguished_name_qualifier

    @distinguished_name_qualifier.setter
    def distinguished_name_qualifier(self, distinguished_name_qualifier):
        """Sets the distinguished_name_qualifier of this CertificateAuthorityConfigurationSubject.


        :param distinguished_name_qualifier: The distinguished_name_qualifier of this CertificateAuthorityConfigurationSubject.
        :type distinguished_name_qualifier: str
        """

        self._distinguished_name_qualifier = distinguished_name_qualifier

    @property
    def state(self):
        """Gets the state of this CertificateAuthorityConfigurationSubject.


        :return: The state of this CertificateAuthorityConfigurationSubject.
        :rtype: str
        """
        return self._state

    @state.setter
    def state(self, state):
        """Sets the state of this CertificateAuthorityConfigurationSubject.


        :param state: The state of this CertificateAuthorityConfigurationSubject.
        :type state: str
        """

        self._state = state

    @property
    def common_name(self):
        """Gets the common_name of this CertificateAuthorityConfigurationSubject.


        :return: The common_name of this CertificateAuthorityConfigurationSubject.
        :rtype: str
        """
        return self._common_name

    @common_name.setter
    def common_name(self, common_name):
        """Sets the common_name of this CertificateAuthorityConfigurationSubject.


        :param common_name: The common_name of this CertificateAuthorityConfigurationSubject.
        :type common_name: str
        """

        self._common_name = common_name

    @property
    def serial_number(self):
        """Gets the serial_number of this CertificateAuthorityConfigurationSubject.


        :return: The serial_number of this CertificateAuthorityConfigurationSubject.
        :rtype: str
        """
        return self._serial_number

    @serial_number.setter
    def serial_number(self, serial_number):
        """Sets the serial_number of this CertificateAuthorityConfigurationSubject.


        :param serial_number: The serial_number of this CertificateAuthorityConfigurationSubject.
        :type serial_number: str
        """

        self._serial_number = serial_number

    @property
    def locality(self):
        """Gets the locality of this CertificateAuthorityConfigurationSubject.


        :return: The locality of this CertificateAuthorityConfigurationSubject.
        :rtype: str
        """
        return self._locality

    @locality.setter
    def locality(self, locality):
        """Sets the locality of this CertificateAuthorityConfigurationSubject.


        :param locality: The locality of this CertificateAuthorityConfigurationSubject.
        :type locality: str
        """

        self._locality = locality

    @property
    def title(self):
        """Gets the title of this CertificateAuthorityConfigurationSubject.


        :return: The title of this CertificateAuthorityConfigurationSubject.
        :rtype: str
        """
        return self._title

    @title.setter
    def title(self, title):
        """Sets the title of this CertificateAuthorityConfigurationSubject.


        :param title: The title of this CertificateAuthorityConfigurationSubject.
        :type title: str
        """

        self._title = title

    @property
    def surname(self):
        """Gets the surname of this CertificateAuthorityConfigurationSubject.


        :return: The surname of this CertificateAuthorityConfigurationSubject.
        :rtype: str
        """
        return self._surname

    @surname.setter
    def surname(self, surname):
        """Sets the surname of this CertificateAuthorityConfigurationSubject.


        :param surname: The surname of this CertificateAuthorityConfigurationSubject.
        :type surname: str
        """

        self._surname = surname

    @property
    def given_name(self):
        """Gets the given_name of this CertificateAuthorityConfigurationSubject.


        :return: The given_name of this CertificateAuthorityConfigurationSubject.
        :rtype: str
        """
        return self._given_name

    @given_name.setter
    def given_name(self, given_name):
        """Sets the given_name of this CertificateAuthorityConfigurationSubject.


        :param given_name: The given_name of this CertificateAuthorityConfigurationSubject.
        :type given_name: str
        """

        self._given_name = given_name

    @property
    def initials(self):
        """Gets the initials of this CertificateAuthorityConfigurationSubject.


        :return: The initials of this CertificateAuthorityConfigurationSubject.
        :rtype: str
        """
        return self._initials

    @initials.setter
    def initials(self, initials):
        """Sets the initials of this CertificateAuthorityConfigurationSubject.


        :param initials: The initials of this CertificateAuthorityConfigurationSubject.
        :type initials: str
        """

        self._initials = initials

    @property
    def pseudonym(self):
        """Gets the pseudonym of this CertificateAuthorityConfigurationSubject.


        :return: The pseudonym of this CertificateAuthorityConfigurationSubject.
        :rtype: str
        """
        return self._pseudonym

    @pseudonym.setter
    def pseudonym(self, pseudonym):
        """Sets the pseudonym of this CertificateAuthorityConfigurationSubject.


        :param pseudonym: The pseudonym of this CertificateAuthorityConfigurationSubject.
        :type pseudonym: str
        """

        self._pseudonym = pseudonym

    @property
    def generation_qualifier(self):
        """Gets the generation_qualifier of this CertificateAuthorityConfigurationSubject.


        :return: The generation_qualifier of this CertificateAuthorityConfigurationSubject.
        :rtype: str
        """
        return self._generation_qualifier

    @generation_qualifier.setter
    def generation_qualifier(self, generation_qualifier):
        """Sets the generation_qualifier of this CertificateAuthorityConfigurationSubject.


        :param generation_qualifier: The generation_qualifier of this CertificateAuthorityConfigurationSubject.
        :type generation_qualifier: str
        """

        self._generation_qualifier = generation_qualifier

    @property
    def custom_attributes(self):
        """Gets the custom_attributes of this CertificateAuthorityConfigurationSubject.


        :return: The custom_attributes of this CertificateAuthorityConfigurationSubject.
        :rtype: List
        """
        return self._custom_attributes

    @custom_attributes.setter
    def custom_attributes(self, custom_attributes):
        """Sets the custom_attributes of this CertificateAuthorityConfigurationSubject.


        :param custom_attributes: The custom_attributes of this CertificateAuthorityConfigurationSubject.
        :type custom_attributes: List
        """

        self._custom_attributes = custom_attributes
