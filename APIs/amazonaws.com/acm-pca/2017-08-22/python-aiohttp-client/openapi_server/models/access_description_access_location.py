# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.asn1_subject import ASN1Subject
from openapi_server.models.general_name_edi_party_name import GeneralNameEdiPartyName
from openapi_server.models.general_name_other_name import GeneralNameOtherName
from openapi_server import util


class AccessDescriptionAccessLocation(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, other_name: GeneralNameOtherName=None, rfc822_name: str=None, dns_name: str=None, directory_name: ASN1Subject=None, edi_party_name: GeneralNameEdiPartyName=None, uniform_resource_identifier: str=None, ip_address: str=None, registered_id: str=None):
        """AccessDescriptionAccessLocation - a model defined in OpenAPI

        :param other_name: The other_name of this AccessDescriptionAccessLocation.
        :param rfc822_name: The rfc822_name of this AccessDescriptionAccessLocation.
        :param dns_name: The dns_name of this AccessDescriptionAccessLocation.
        :param directory_name: The directory_name of this AccessDescriptionAccessLocation.
        :param edi_party_name: The edi_party_name of this AccessDescriptionAccessLocation.
        :param uniform_resource_identifier: The uniform_resource_identifier of this AccessDescriptionAccessLocation.
        :param ip_address: The ip_address of this AccessDescriptionAccessLocation.
        :param registered_id: The registered_id of this AccessDescriptionAccessLocation.
        """
        self.openapi_types = {
            'other_name': GeneralNameOtherName,
            'rfc822_name': str,
            'dns_name': str,
            'directory_name': ASN1Subject,
            'edi_party_name': GeneralNameEdiPartyName,
            'uniform_resource_identifier': str,
            'ip_address': str,
            'registered_id': str
        }

        self.attribute_map = {
            'other_name': 'OtherName',
            'rfc822_name': 'Rfc822Name',
            'dns_name': 'DnsName',
            'directory_name': 'DirectoryName',
            'edi_party_name': 'EdiPartyName',
            'uniform_resource_identifier': 'UniformResourceIdentifier',
            'ip_address': 'IpAddress',
            'registered_id': 'RegisteredId'
        }

        self._other_name = other_name
        self._rfc822_name = rfc822_name
        self._dns_name = dns_name
        self._directory_name = directory_name
        self._edi_party_name = edi_party_name
        self._uniform_resource_identifier = uniform_resource_identifier
        self._ip_address = ip_address
        self._registered_id = registered_id

    @classmethod
    def from_dict(cls, dikt: dict) -> 'AccessDescriptionAccessLocation':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The AccessDescription_AccessLocation of this AccessDescriptionAccessLocation.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def other_name(self):
        """Gets the other_name of this AccessDescriptionAccessLocation.


        :return: The other_name of this AccessDescriptionAccessLocation.
        :rtype: GeneralNameOtherName
        """
        return self._other_name

    @other_name.setter
    def other_name(self, other_name):
        """Sets the other_name of this AccessDescriptionAccessLocation.


        :param other_name: The other_name of this AccessDescriptionAccessLocation.
        :type other_name: GeneralNameOtherName
        """

        self._other_name = other_name

    @property
    def rfc822_name(self):
        """Gets the rfc822_name of this AccessDescriptionAccessLocation.


        :return: The rfc822_name of this AccessDescriptionAccessLocation.
        :rtype: str
        """
        return self._rfc822_name

    @rfc822_name.setter
    def rfc822_name(self, rfc822_name):
        """Sets the rfc822_name of this AccessDescriptionAccessLocation.


        :param rfc822_name: The rfc822_name of this AccessDescriptionAccessLocation.
        :type rfc822_name: str
        """

        self._rfc822_name = rfc822_name

    @property
    def dns_name(self):
        """Gets the dns_name of this AccessDescriptionAccessLocation.


        :return: The dns_name of this AccessDescriptionAccessLocation.
        :rtype: str
        """
        return self._dns_name

    @dns_name.setter
    def dns_name(self, dns_name):
        """Sets the dns_name of this AccessDescriptionAccessLocation.


        :param dns_name: The dns_name of this AccessDescriptionAccessLocation.
        :type dns_name: str
        """

        self._dns_name = dns_name

    @property
    def directory_name(self):
        """Gets the directory_name of this AccessDescriptionAccessLocation.


        :return: The directory_name of this AccessDescriptionAccessLocation.
        :rtype: ASN1Subject
        """
        return self._directory_name

    @directory_name.setter
    def directory_name(self, directory_name):
        """Sets the directory_name of this AccessDescriptionAccessLocation.


        :param directory_name: The directory_name of this AccessDescriptionAccessLocation.
        :type directory_name: ASN1Subject
        """

        self._directory_name = directory_name

    @property
    def edi_party_name(self):
        """Gets the edi_party_name of this AccessDescriptionAccessLocation.


        :return: The edi_party_name of this AccessDescriptionAccessLocation.
        :rtype: GeneralNameEdiPartyName
        """
        return self._edi_party_name

    @edi_party_name.setter
    def edi_party_name(self, edi_party_name):
        """Sets the edi_party_name of this AccessDescriptionAccessLocation.


        :param edi_party_name: The edi_party_name of this AccessDescriptionAccessLocation.
        :type edi_party_name: GeneralNameEdiPartyName
        """

        self._edi_party_name = edi_party_name

    @property
    def uniform_resource_identifier(self):
        """Gets the uniform_resource_identifier of this AccessDescriptionAccessLocation.


        :return: The uniform_resource_identifier of this AccessDescriptionAccessLocation.
        :rtype: str
        """
        return self._uniform_resource_identifier

    @uniform_resource_identifier.setter
    def uniform_resource_identifier(self, uniform_resource_identifier):
        """Sets the uniform_resource_identifier of this AccessDescriptionAccessLocation.


        :param uniform_resource_identifier: The uniform_resource_identifier of this AccessDescriptionAccessLocation.
        :type uniform_resource_identifier: str
        """

        self._uniform_resource_identifier = uniform_resource_identifier

    @property
    def ip_address(self):
        """Gets the ip_address of this AccessDescriptionAccessLocation.


        :return: The ip_address of this AccessDescriptionAccessLocation.
        :rtype: str
        """
        return self._ip_address

    @ip_address.setter
    def ip_address(self, ip_address):
        """Sets the ip_address of this AccessDescriptionAccessLocation.


        :param ip_address: The ip_address of this AccessDescriptionAccessLocation.
        :type ip_address: str
        """

        self._ip_address = ip_address

    @property
    def registered_id(self):
        """Gets the registered_id of this AccessDescriptionAccessLocation.


        :return: The registered_id of this AccessDescriptionAccessLocation.
        :rtype: str
        """
        return self._registered_id

    @registered_id.setter
    def registered_id(self, registered_id):
        """Sets the registered_id of this AccessDescriptionAccessLocation.


        :param registered_id: The registered_id of this AccessDescriptionAccessLocation.
        :type registered_id: str
        """

        self._registered_id = registered_id
