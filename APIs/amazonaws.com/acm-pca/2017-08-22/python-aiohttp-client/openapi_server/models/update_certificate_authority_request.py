# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.certificate_authority_status import CertificateAuthorityStatus
from openapi_server.models.update_certificate_authority_request_revocation_configuration import UpdateCertificateAuthorityRequestRevocationConfiguration
from openapi_server import util


class UpdateCertificateAuthorityRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, certificate_authority_arn: str=None, revocation_configuration: UpdateCertificateAuthorityRequestRevocationConfiguration=None, status: CertificateAuthorityStatus=None):
        """UpdateCertificateAuthorityRequest - a model defined in OpenAPI

        :param certificate_authority_arn: The certificate_authority_arn of this UpdateCertificateAuthorityRequest.
        :param revocation_configuration: The revocation_configuration of this UpdateCertificateAuthorityRequest.
        :param status: The status of this UpdateCertificateAuthorityRequest.
        """
        self.openapi_types = {
            'certificate_authority_arn': str,
            'revocation_configuration': UpdateCertificateAuthorityRequestRevocationConfiguration,
            'status': CertificateAuthorityStatus
        }

        self.attribute_map = {
            'certificate_authority_arn': 'CertificateAuthorityArn',
            'revocation_configuration': 'RevocationConfiguration',
            'status': 'Status'
        }

        self._certificate_authority_arn = certificate_authority_arn
        self._revocation_configuration = revocation_configuration
        self._status = status

    @classmethod
    def from_dict(cls, dikt: dict) -> 'UpdateCertificateAuthorityRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The UpdateCertificateAuthorityRequest of this UpdateCertificateAuthorityRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def certificate_authority_arn(self):
        """Gets the certificate_authority_arn of this UpdateCertificateAuthorityRequest.


        :return: The certificate_authority_arn of this UpdateCertificateAuthorityRequest.
        :rtype: str
        """
        return self._certificate_authority_arn

    @certificate_authority_arn.setter
    def certificate_authority_arn(self, certificate_authority_arn):
        """Sets the certificate_authority_arn of this UpdateCertificateAuthorityRequest.


        :param certificate_authority_arn: The certificate_authority_arn of this UpdateCertificateAuthorityRequest.
        :type certificate_authority_arn: str
        """
        if certificate_authority_arn is None:
            raise ValueError("Invalid value for `certificate_authority_arn`, must not be `None`")

        self._certificate_authority_arn = certificate_authority_arn

    @property
    def revocation_configuration(self):
        """Gets the revocation_configuration of this UpdateCertificateAuthorityRequest.


        :return: The revocation_configuration of this UpdateCertificateAuthorityRequest.
        :rtype: UpdateCertificateAuthorityRequestRevocationConfiguration
        """
        return self._revocation_configuration

    @revocation_configuration.setter
    def revocation_configuration(self, revocation_configuration):
        """Sets the revocation_configuration of this UpdateCertificateAuthorityRequest.


        :param revocation_configuration: The revocation_configuration of this UpdateCertificateAuthorityRequest.
        :type revocation_configuration: UpdateCertificateAuthorityRequestRevocationConfiguration
        """

        self._revocation_configuration = revocation_configuration

    @property
    def status(self):
        """Gets the status of this UpdateCertificateAuthorityRequest.


        :return: The status of this UpdateCertificateAuthorityRequest.
        :rtype: CertificateAuthorityStatus
        """
        return self._status

    @status.setter
    def status(self, status):
        """Sets the status of this UpdateCertificateAuthorityRequest.


        :param status: The status of this UpdateCertificateAuthorityRequest.
        :type status: CertificateAuthorityStatus
        """

        self._status = status
