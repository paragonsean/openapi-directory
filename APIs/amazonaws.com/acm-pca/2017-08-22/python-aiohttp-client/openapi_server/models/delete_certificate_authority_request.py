# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class DeleteCertificateAuthorityRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, certificate_authority_arn: str=None, permanent_deletion_time_in_days: int=None):
        """DeleteCertificateAuthorityRequest - a model defined in OpenAPI

        :param certificate_authority_arn: The certificate_authority_arn of this DeleteCertificateAuthorityRequest.
        :param permanent_deletion_time_in_days: The permanent_deletion_time_in_days of this DeleteCertificateAuthorityRequest.
        """
        self.openapi_types = {
            'certificate_authority_arn': str,
            'permanent_deletion_time_in_days': int
        }

        self.attribute_map = {
            'certificate_authority_arn': 'CertificateAuthorityArn',
            'permanent_deletion_time_in_days': 'PermanentDeletionTimeInDays'
        }

        self._certificate_authority_arn = certificate_authority_arn
        self._permanent_deletion_time_in_days = permanent_deletion_time_in_days

    @classmethod
    def from_dict(cls, dikt: dict) -> 'DeleteCertificateAuthorityRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The DeleteCertificateAuthorityRequest of this DeleteCertificateAuthorityRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def certificate_authority_arn(self):
        """Gets the certificate_authority_arn of this DeleteCertificateAuthorityRequest.


        :return: The certificate_authority_arn of this DeleteCertificateAuthorityRequest.
        :rtype: str
        """
        return self._certificate_authority_arn

    @certificate_authority_arn.setter
    def certificate_authority_arn(self, certificate_authority_arn):
        """Sets the certificate_authority_arn of this DeleteCertificateAuthorityRequest.


        :param certificate_authority_arn: The certificate_authority_arn of this DeleteCertificateAuthorityRequest.
        :type certificate_authority_arn: str
        """
        if certificate_authority_arn is None:
            raise ValueError("Invalid value for `certificate_authority_arn`, must not be `None`")

        self._certificate_authority_arn = certificate_authority_arn

    @property
    def permanent_deletion_time_in_days(self):
        """Gets the permanent_deletion_time_in_days of this DeleteCertificateAuthorityRequest.


        :return: The permanent_deletion_time_in_days of this DeleteCertificateAuthorityRequest.
        :rtype: int
        """
        return self._permanent_deletion_time_in_days

    @permanent_deletion_time_in_days.setter
    def permanent_deletion_time_in_days(self, permanent_deletion_time_in_days):
        """Sets the permanent_deletion_time_in_days of this DeleteCertificateAuthorityRequest.


        :param permanent_deletion_time_in_days: The permanent_deletion_time_in_days of this DeleteCertificateAuthorityRequest.
        :type permanent_deletion_time_in_days: int
        """

        self._permanent_deletion_time_in_days = permanent_deletion_time_in_days
