/**
 * AWS Certificate Manager Private Certificate Authority
 * <p>This is the <i>Amazon Web Services Private Certificate Authority API Reference</i>. It provides descriptions, syntax, and usage examples for each of the actions and data types involved in creating and managing a private certificate authority (CA) for your organization.</p> <p>The documentation for each action shows the API request parameters and the JSON response. Alternatively, you can use one of the Amazon Web Services SDKs to access an API that is tailored to the programming language or platform that you prefer. For more information, see <a href=\"https://aws.amazon.com/tools/#SDKs\">Amazon Web Services SDKs</a>.</p> <p>Each Amazon Web Services Private CA API operation has a quota that determines the number of times the operation can be called per second. Amazon Web Services Private CA throttles API requests at different rates depending on the operation. Throttling means that Amazon Web Services Private CA rejects an otherwise valid request because the request exceeds the operation's quota for the number of requests per second. When a request is throttled, Amazon Web Services Private CA returns a <a href=\"https://docs.aws.amazon.com/privateca/latest/APIReference/CommonErrors.html\">ThrottlingException</a> error. Amazon Web Services Private CA does not guarantee a minimum request rate for APIs. </p> <p>To see an up-to-date list of your Amazon Web Services Private CA quotas, or to request a quota increase, log into your Amazon Web Services account and visit the <a href=\"https://console.aws.amazon.com/servicequotas/\">Service Quotas</a> console.</p>
 *
 * The version of the OpenAPI document: 2017-08-22
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from './ApiClient';
import ASN1Subject from './model/ASN1Subject';
import AccessDescription from './model/AccessDescription';
import AccessDescriptionAccessLocation from './model/AccessDescriptionAccessLocation';
import AccessDescriptionAccessMethod from './model/AccessDescriptionAccessMethod';
import AccessMethod from './model/AccessMethod';
import AccessMethodType from './model/AccessMethodType';
import ActionType from './model/ActionType';
import ApiPassthrough from './model/ApiPassthrough';
import ApiPassthroughExtensions from './model/ApiPassthroughExtensions';
import AuditReportResponseFormat from './model/AuditReportResponseFormat';
import AuditReportStatus from './model/AuditReportStatus';
import CertificateAuthority from './model/CertificateAuthority';
import CertificateAuthorityCertificateAuthorityConfiguration from './model/CertificateAuthorityCertificateAuthorityConfiguration';
import CertificateAuthorityConfiguration from './model/CertificateAuthorityConfiguration';
import CertificateAuthorityConfigurationCsrExtensions from './model/CertificateAuthorityConfigurationCsrExtensions';
import CertificateAuthorityConfigurationSubject from './model/CertificateAuthorityConfigurationSubject';
import CertificateAuthorityRevocationConfiguration from './model/CertificateAuthorityRevocationConfiguration';
import CertificateAuthorityStatus from './model/CertificateAuthorityStatus';
import CertificateAuthorityType from './model/CertificateAuthorityType';
import CertificateAuthorityUsageMode from './model/CertificateAuthorityUsageMode';
import CreateCertificateAuthorityAuditReportRequest from './model/CreateCertificateAuthorityAuditReportRequest';
import CreateCertificateAuthorityAuditReportResponse from './model/CreateCertificateAuthorityAuditReportResponse';
import CreateCertificateAuthorityRequest from './model/CreateCertificateAuthorityRequest';
import CreateCertificateAuthorityRequestCertificateAuthorityConfiguration from './model/CreateCertificateAuthorityRequestCertificateAuthorityConfiguration';
import CreateCertificateAuthorityRequestRevocationConfiguration from './model/CreateCertificateAuthorityRequestRevocationConfiguration';
import CreateCertificateAuthorityResponse from './model/CreateCertificateAuthorityResponse';
import CreatePermissionRequest from './model/CreatePermissionRequest';
import CrlConfiguration from './model/CrlConfiguration';
import CsrExtensions from './model/CsrExtensions';
import CsrExtensionsKeyUsage from './model/CsrExtensionsKeyUsage';
import CustomAttribute from './model/CustomAttribute';
import CustomExtension from './model/CustomExtension';
import DeleteCertificateAuthorityRequest from './model/DeleteCertificateAuthorityRequest';
import DeletePermissionRequest from './model/DeletePermissionRequest';
import DeletePolicyRequest from './model/DeletePolicyRequest';
import DescribeCertificateAuthorityAuditReportRequest from './model/DescribeCertificateAuthorityAuditReportRequest';
import DescribeCertificateAuthorityAuditReportResponse from './model/DescribeCertificateAuthorityAuditReportResponse';
import DescribeCertificateAuthorityRequest from './model/DescribeCertificateAuthorityRequest';
import DescribeCertificateAuthorityResponse from './model/DescribeCertificateAuthorityResponse';
import DescribeCertificateAuthorityResponseCertificateAuthority from './model/DescribeCertificateAuthorityResponseCertificateAuthority';
import EdiPartyName from './model/EdiPartyName';
import ExtendedKeyUsage from './model/ExtendedKeyUsage';
import ExtendedKeyUsageType from './model/ExtendedKeyUsageType';
import Extensions from './model/Extensions';
import FailureReason from './model/FailureReason';
import GeneralName from './model/GeneralName';
import GeneralNameEdiPartyName from './model/GeneralNameEdiPartyName';
import GeneralNameOtherName from './model/GeneralNameOtherName';
import GetCertificateAuthorityCertificateRequest from './model/GetCertificateAuthorityCertificateRequest';
import GetCertificateAuthorityCertificateResponse from './model/GetCertificateAuthorityCertificateResponse';
import GetCertificateAuthorityCsrRequest from './model/GetCertificateAuthorityCsrRequest';
import GetCertificateAuthorityCsrResponse from './model/GetCertificateAuthorityCsrResponse';
import GetCertificateRequest from './model/GetCertificateRequest';
import GetCertificateResponse from './model/GetCertificateResponse';
import GetPolicyRequest from './model/GetPolicyRequest';
import GetPolicyResponse from './model/GetPolicyResponse';
import ImportCertificateAuthorityCertificateRequest from './model/ImportCertificateAuthorityCertificateRequest';
import IssueCertificateRequest from './model/IssueCertificateRequest';
import IssueCertificateRequestApiPassthrough from './model/IssueCertificateRequestApiPassthrough';
import IssueCertificateRequestValidity from './model/IssueCertificateRequestValidity';
import IssueCertificateRequestValidityNotBefore from './model/IssueCertificateRequestValidityNotBefore';
import IssueCertificateResponse from './model/IssueCertificateResponse';
import KeyAlgorithm from './model/KeyAlgorithm';
import KeyStorageSecurityStandard from './model/KeyStorageSecurityStandard';
import KeyUsage from './model/KeyUsage';
import ListCertificateAuthoritiesRequest from './model/ListCertificateAuthoritiesRequest';
import ListCertificateAuthoritiesResponse from './model/ListCertificateAuthoritiesResponse';
import ListPermissionsRequest from './model/ListPermissionsRequest';
import ListPermissionsResponse from './model/ListPermissionsResponse';
import ListTagsRequest from './model/ListTagsRequest';
import ListTagsResponse from './model/ListTagsResponse';
import OcspConfiguration from './model/OcspConfiguration';
import OtherName from './model/OtherName';
import Permission from './model/Permission';
import PolicyInformation from './model/PolicyInformation';
import PolicyQualifierId from './model/PolicyQualifierId';
import PolicyQualifierInfo from './model/PolicyQualifierInfo';
import PolicyQualifierInfoQualifier from './model/PolicyQualifierInfoQualifier';
import PutPolicyRequest from './model/PutPolicyRequest';
import Qualifier from './model/Qualifier';
import ResourceOwner from './model/ResourceOwner';
import RestoreCertificateAuthorityRequest from './model/RestoreCertificateAuthorityRequest';
import RevocationConfiguration from './model/RevocationConfiguration';
import RevocationConfigurationCrlConfiguration from './model/RevocationConfigurationCrlConfiguration';
import RevocationConfigurationOcspConfiguration from './model/RevocationConfigurationOcspConfiguration';
import RevocationReason from './model/RevocationReason';
import RevokeCertificateRequest from './model/RevokeCertificateRequest';
import S3ObjectAcl from './model/S3ObjectAcl';
import SigningAlgorithm from './model/SigningAlgorithm';
import Tag from './model/Tag';
import TagCertificateAuthorityRequest from './model/TagCertificateAuthorityRequest';
import UntagCertificateAuthorityRequest from './model/UntagCertificateAuthorityRequest';
import UpdateCertificateAuthorityRequest from './model/UpdateCertificateAuthorityRequest';
import UpdateCertificateAuthorityRequestRevocationConfiguration from './model/UpdateCertificateAuthorityRequestRevocationConfiguration';
import Validity from './model/Validity';
import ValidityPeriodType from './model/ValidityPeriodType';
import DefaultApi from './api/DefaultApi';


/**
* &lt;p&gt;This is the &lt;i&gt;Amazon Web Services Private Certificate Authority API Reference&lt;/i&gt;. It provides descriptions, syntax, and usage examples for each of the actions and data types involved in creating and managing a private certificate authority (CA) for your organization.&lt;/p&gt; &lt;p&gt;The documentation for each action shows the API request parameters and the JSON response. Alternatively, you can use one of the Amazon Web Services SDKs to access an API that is tailored to the programming language or platform that you prefer. For more information, see &lt;a href&#x3D;\&quot;https://aws.amazon.com/tools/#SDKs\&quot;&gt;Amazon Web Services SDKs&lt;/a&gt;.&lt;/p&gt; &lt;p&gt;Each Amazon Web Services Private CA API operation has a quota that determines the number of times the operation can be called per second. Amazon Web Services Private CA throttles API requests at different rates depending on the operation. Throttling means that Amazon Web Services Private CA rejects an otherwise valid request because the request exceeds the operation&#39;s quota for the number of requests per second. When a request is throttled, Amazon Web Services Private CA returns a &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/privateca/latest/APIReference/CommonErrors.html\&quot;&gt;ThrottlingException&lt;/a&gt; error. Amazon Web Services Private CA does not guarantee a minimum request rate for APIs. &lt;/p&gt; &lt;p&gt;To see an up-to-date list of your Amazon Web Services Private CA quotas, or to request a quota increase, log into your Amazon Web Services account and visit the &lt;a href&#x3D;\&quot;https://console.aws.amazon.com/servicequotas/\&quot;&gt;Service Quotas&lt;/a&gt; console.&lt;/p&gt;.<br>
* The <code>index</code> module provides access to constructors for all the classes which comprise the public API.
* <p>
* An AMD (recommended!) or CommonJS application will generally do something equivalent to the following:
* <pre>
* var AwsCertificateManagerPrivateCertificateAuthority = require('index'); // See note below*.
* var xxxSvc = new AwsCertificateManagerPrivateCertificateAuthority.XxxApi(); // Allocate the API class we're going to use.
* var yyyModel = new AwsCertificateManagerPrivateCertificateAuthority.Yyy(); // Construct a model instance.
* yyyModel.someProperty = 'someValue';
* ...
* var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
* ...
* </pre>
* <em>*NOTE: For a top-level AMD script, use require(['index'], function(){...})
* and put the application logic within the callback function.</em>
* </p>
* <p>
* A non-AMD browser application (discouraged) might do something like this:
* <pre>
* var xxxSvc = new AwsCertificateManagerPrivateCertificateAuthority.XxxApi(); // Allocate the API class we're going to use.
* var yyy = new AwsCertificateManagerPrivateCertificateAuthority.Yyy(); // Construct a model instance.
* yyyModel.someProperty = 'someValue';
* ...
* var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
* ...
* </pre>
* </p>
* @module index
* @version 2017-08-22
*/
export {
    /**
     * The ApiClient constructor.
     * @property {module:ApiClient}
     */
    ApiClient,

    /**
     * The ASN1Subject model constructor.
     * @property {module:model/ASN1Subject}
     */
    ASN1Subject,

    /**
     * The AccessDescription model constructor.
     * @property {module:model/AccessDescription}
     */
    AccessDescription,

    /**
     * The AccessDescriptionAccessLocation model constructor.
     * @property {module:model/AccessDescriptionAccessLocation}
     */
    AccessDescriptionAccessLocation,

    /**
     * The AccessDescriptionAccessMethod model constructor.
     * @property {module:model/AccessDescriptionAccessMethod}
     */
    AccessDescriptionAccessMethod,

    /**
     * The AccessMethod model constructor.
     * @property {module:model/AccessMethod}
     */
    AccessMethod,

    /**
     * The AccessMethodType model constructor.
     * @property {module:model/AccessMethodType}
     */
    AccessMethodType,

    /**
     * The ActionType model constructor.
     * @property {module:model/ActionType}
     */
    ActionType,

    /**
     * The ApiPassthrough model constructor.
     * @property {module:model/ApiPassthrough}
     */
    ApiPassthrough,

    /**
     * The ApiPassthroughExtensions model constructor.
     * @property {module:model/ApiPassthroughExtensions}
     */
    ApiPassthroughExtensions,

    /**
     * The AuditReportResponseFormat model constructor.
     * @property {module:model/AuditReportResponseFormat}
     */
    AuditReportResponseFormat,

    /**
     * The AuditReportStatus model constructor.
     * @property {module:model/AuditReportStatus}
     */
    AuditReportStatus,

    /**
     * The CertificateAuthority model constructor.
     * @property {module:model/CertificateAuthority}
     */
    CertificateAuthority,

    /**
     * The CertificateAuthorityCertificateAuthorityConfiguration model constructor.
     * @property {module:model/CertificateAuthorityCertificateAuthorityConfiguration}
     */
    CertificateAuthorityCertificateAuthorityConfiguration,

    /**
     * The CertificateAuthorityConfiguration model constructor.
     * @property {module:model/CertificateAuthorityConfiguration}
     */
    CertificateAuthorityConfiguration,

    /**
     * The CertificateAuthorityConfigurationCsrExtensions model constructor.
     * @property {module:model/CertificateAuthorityConfigurationCsrExtensions}
     */
    CertificateAuthorityConfigurationCsrExtensions,

    /**
     * The CertificateAuthorityConfigurationSubject model constructor.
     * @property {module:model/CertificateAuthorityConfigurationSubject}
     */
    CertificateAuthorityConfigurationSubject,

    /**
     * The CertificateAuthorityRevocationConfiguration model constructor.
     * @property {module:model/CertificateAuthorityRevocationConfiguration}
     */
    CertificateAuthorityRevocationConfiguration,

    /**
     * The CertificateAuthorityStatus model constructor.
     * @property {module:model/CertificateAuthorityStatus}
     */
    CertificateAuthorityStatus,

    /**
     * The CertificateAuthorityType model constructor.
     * @property {module:model/CertificateAuthorityType}
     */
    CertificateAuthorityType,

    /**
     * The CertificateAuthorityUsageMode model constructor.
     * @property {module:model/CertificateAuthorityUsageMode}
     */
    CertificateAuthorityUsageMode,

    /**
     * The CreateCertificateAuthorityAuditReportRequest model constructor.
     * @property {module:model/CreateCertificateAuthorityAuditReportRequest}
     */
    CreateCertificateAuthorityAuditReportRequest,

    /**
     * The CreateCertificateAuthorityAuditReportResponse model constructor.
     * @property {module:model/CreateCertificateAuthorityAuditReportResponse}
     */
    CreateCertificateAuthorityAuditReportResponse,

    /**
     * The CreateCertificateAuthorityRequest model constructor.
     * @property {module:model/CreateCertificateAuthorityRequest}
     */
    CreateCertificateAuthorityRequest,

    /**
     * The CreateCertificateAuthorityRequestCertificateAuthorityConfiguration model constructor.
     * @property {module:model/CreateCertificateAuthorityRequestCertificateAuthorityConfiguration}
     */
    CreateCertificateAuthorityRequestCertificateAuthorityConfiguration,

    /**
     * The CreateCertificateAuthorityRequestRevocationConfiguration model constructor.
     * @property {module:model/CreateCertificateAuthorityRequestRevocationConfiguration}
     */
    CreateCertificateAuthorityRequestRevocationConfiguration,

    /**
     * The CreateCertificateAuthorityResponse model constructor.
     * @property {module:model/CreateCertificateAuthorityResponse}
     */
    CreateCertificateAuthorityResponse,

    /**
     * The CreatePermissionRequest model constructor.
     * @property {module:model/CreatePermissionRequest}
     */
    CreatePermissionRequest,

    /**
     * The CrlConfiguration model constructor.
     * @property {module:model/CrlConfiguration}
     */
    CrlConfiguration,

    /**
     * The CsrExtensions model constructor.
     * @property {module:model/CsrExtensions}
     */
    CsrExtensions,

    /**
     * The CsrExtensionsKeyUsage model constructor.
     * @property {module:model/CsrExtensionsKeyUsage}
     */
    CsrExtensionsKeyUsage,

    /**
     * The CustomAttribute model constructor.
     * @property {module:model/CustomAttribute}
     */
    CustomAttribute,

    /**
     * The CustomExtension model constructor.
     * @property {module:model/CustomExtension}
     */
    CustomExtension,

    /**
     * The DeleteCertificateAuthorityRequest model constructor.
     * @property {module:model/DeleteCertificateAuthorityRequest}
     */
    DeleteCertificateAuthorityRequest,

    /**
     * The DeletePermissionRequest model constructor.
     * @property {module:model/DeletePermissionRequest}
     */
    DeletePermissionRequest,

    /**
     * The DeletePolicyRequest model constructor.
     * @property {module:model/DeletePolicyRequest}
     */
    DeletePolicyRequest,

    /**
     * The DescribeCertificateAuthorityAuditReportRequest model constructor.
     * @property {module:model/DescribeCertificateAuthorityAuditReportRequest}
     */
    DescribeCertificateAuthorityAuditReportRequest,

    /**
     * The DescribeCertificateAuthorityAuditReportResponse model constructor.
     * @property {module:model/DescribeCertificateAuthorityAuditReportResponse}
     */
    DescribeCertificateAuthorityAuditReportResponse,

    /**
     * The DescribeCertificateAuthorityRequest model constructor.
     * @property {module:model/DescribeCertificateAuthorityRequest}
     */
    DescribeCertificateAuthorityRequest,

    /**
     * The DescribeCertificateAuthorityResponse model constructor.
     * @property {module:model/DescribeCertificateAuthorityResponse}
     */
    DescribeCertificateAuthorityResponse,

    /**
     * The DescribeCertificateAuthorityResponseCertificateAuthority model constructor.
     * @property {module:model/DescribeCertificateAuthorityResponseCertificateAuthority}
     */
    DescribeCertificateAuthorityResponseCertificateAuthority,

    /**
     * The EdiPartyName model constructor.
     * @property {module:model/EdiPartyName}
     */
    EdiPartyName,

    /**
     * The ExtendedKeyUsage model constructor.
     * @property {module:model/ExtendedKeyUsage}
     */
    ExtendedKeyUsage,

    /**
     * The ExtendedKeyUsageType model constructor.
     * @property {module:model/ExtendedKeyUsageType}
     */
    ExtendedKeyUsageType,

    /**
     * The Extensions model constructor.
     * @property {module:model/Extensions}
     */
    Extensions,

    /**
     * The FailureReason model constructor.
     * @property {module:model/FailureReason}
     */
    FailureReason,

    /**
     * The GeneralName model constructor.
     * @property {module:model/GeneralName}
     */
    GeneralName,

    /**
     * The GeneralNameEdiPartyName model constructor.
     * @property {module:model/GeneralNameEdiPartyName}
     */
    GeneralNameEdiPartyName,

    /**
     * The GeneralNameOtherName model constructor.
     * @property {module:model/GeneralNameOtherName}
     */
    GeneralNameOtherName,

    /**
     * The GetCertificateAuthorityCertificateRequest model constructor.
     * @property {module:model/GetCertificateAuthorityCertificateRequest}
     */
    GetCertificateAuthorityCertificateRequest,

    /**
     * The GetCertificateAuthorityCertificateResponse model constructor.
     * @property {module:model/GetCertificateAuthorityCertificateResponse}
     */
    GetCertificateAuthorityCertificateResponse,

    /**
     * The GetCertificateAuthorityCsrRequest model constructor.
     * @property {module:model/GetCertificateAuthorityCsrRequest}
     */
    GetCertificateAuthorityCsrRequest,

    /**
     * The GetCertificateAuthorityCsrResponse model constructor.
     * @property {module:model/GetCertificateAuthorityCsrResponse}
     */
    GetCertificateAuthorityCsrResponse,

    /**
     * The GetCertificateRequest model constructor.
     * @property {module:model/GetCertificateRequest}
     */
    GetCertificateRequest,

    /**
     * The GetCertificateResponse model constructor.
     * @property {module:model/GetCertificateResponse}
     */
    GetCertificateResponse,

    /**
     * The GetPolicyRequest model constructor.
     * @property {module:model/GetPolicyRequest}
     */
    GetPolicyRequest,

    /**
     * The GetPolicyResponse model constructor.
     * @property {module:model/GetPolicyResponse}
     */
    GetPolicyResponse,

    /**
     * The ImportCertificateAuthorityCertificateRequest model constructor.
     * @property {module:model/ImportCertificateAuthorityCertificateRequest}
     */
    ImportCertificateAuthorityCertificateRequest,

    /**
     * The IssueCertificateRequest model constructor.
     * @property {module:model/IssueCertificateRequest}
     */
    IssueCertificateRequest,

    /**
     * The IssueCertificateRequestApiPassthrough model constructor.
     * @property {module:model/IssueCertificateRequestApiPassthrough}
     */
    IssueCertificateRequestApiPassthrough,

    /**
     * The IssueCertificateRequestValidity model constructor.
     * @property {module:model/IssueCertificateRequestValidity}
     */
    IssueCertificateRequestValidity,

    /**
     * The IssueCertificateRequestValidityNotBefore model constructor.
     * @property {module:model/IssueCertificateRequestValidityNotBefore}
     */
    IssueCertificateRequestValidityNotBefore,

    /**
     * The IssueCertificateResponse model constructor.
     * @property {module:model/IssueCertificateResponse}
     */
    IssueCertificateResponse,

    /**
     * The KeyAlgorithm model constructor.
     * @property {module:model/KeyAlgorithm}
     */
    KeyAlgorithm,

    /**
     * The KeyStorageSecurityStandard model constructor.
     * @property {module:model/KeyStorageSecurityStandard}
     */
    KeyStorageSecurityStandard,

    /**
     * The KeyUsage model constructor.
     * @property {module:model/KeyUsage}
     */
    KeyUsage,

    /**
     * The ListCertificateAuthoritiesRequest model constructor.
     * @property {module:model/ListCertificateAuthoritiesRequest}
     */
    ListCertificateAuthoritiesRequest,

    /**
     * The ListCertificateAuthoritiesResponse model constructor.
     * @property {module:model/ListCertificateAuthoritiesResponse}
     */
    ListCertificateAuthoritiesResponse,

    /**
     * The ListPermissionsRequest model constructor.
     * @property {module:model/ListPermissionsRequest}
     */
    ListPermissionsRequest,

    /**
     * The ListPermissionsResponse model constructor.
     * @property {module:model/ListPermissionsResponse}
     */
    ListPermissionsResponse,

    /**
     * The ListTagsRequest model constructor.
     * @property {module:model/ListTagsRequest}
     */
    ListTagsRequest,

    /**
     * The ListTagsResponse model constructor.
     * @property {module:model/ListTagsResponse}
     */
    ListTagsResponse,

    /**
     * The OcspConfiguration model constructor.
     * @property {module:model/OcspConfiguration}
     */
    OcspConfiguration,

    /**
     * The OtherName model constructor.
     * @property {module:model/OtherName}
     */
    OtherName,

    /**
     * The Permission model constructor.
     * @property {module:model/Permission}
     */
    Permission,

    /**
     * The PolicyInformation model constructor.
     * @property {module:model/PolicyInformation}
     */
    PolicyInformation,

    /**
     * The PolicyQualifierId model constructor.
     * @property {module:model/PolicyQualifierId}
     */
    PolicyQualifierId,

    /**
     * The PolicyQualifierInfo model constructor.
     * @property {module:model/PolicyQualifierInfo}
     */
    PolicyQualifierInfo,

    /**
     * The PolicyQualifierInfoQualifier model constructor.
     * @property {module:model/PolicyQualifierInfoQualifier}
     */
    PolicyQualifierInfoQualifier,

    /**
     * The PutPolicyRequest model constructor.
     * @property {module:model/PutPolicyRequest}
     */
    PutPolicyRequest,

    /**
     * The Qualifier model constructor.
     * @property {module:model/Qualifier}
     */
    Qualifier,

    /**
     * The ResourceOwner model constructor.
     * @property {module:model/ResourceOwner}
     */
    ResourceOwner,

    /**
     * The RestoreCertificateAuthorityRequest model constructor.
     * @property {module:model/RestoreCertificateAuthorityRequest}
     */
    RestoreCertificateAuthorityRequest,

    /**
     * The RevocationConfiguration model constructor.
     * @property {module:model/RevocationConfiguration}
     */
    RevocationConfiguration,

    /**
     * The RevocationConfigurationCrlConfiguration model constructor.
     * @property {module:model/RevocationConfigurationCrlConfiguration}
     */
    RevocationConfigurationCrlConfiguration,

    /**
     * The RevocationConfigurationOcspConfiguration model constructor.
     * @property {module:model/RevocationConfigurationOcspConfiguration}
     */
    RevocationConfigurationOcspConfiguration,

    /**
     * The RevocationReason model constructor.
     * @property {module:model/RevocationReason}
     */
    RevocationReason,

    /**
     * The RevokeCertificateRequest model constructor.
     * @property {module:model/RevokeCertificateRequest}
     */
    RevokeCertificateRequest,

    /**
     * The S3ObjectAcl model constructor.
     * @property {module:model/S3ObjectAcl}
     */
    S3ObjectAcl,

    /**
     * The SigningAlgorithm model constructor.
     * @property {module:model/SigningAlgorithm}
     */
    SigningAlgorithm,

    /**
     * The Tag model constructor.
     * @property {module:model/Tag}
     */
    Tag,

    /**
     * The TagCertificateAuthorityRequest model constructor.
     * @property {module:model/TagCertificateAuthorityRequest}
     */
    TagCertificateAuthorityRequest,

    /**
     * The UntagCertificateAuthorityRequest model constructor.
     * @property {module:model/UntagCertificateAuthorityRequest}
     */
    UntagCertificateAuthorityRequest,

    /**
     * The UpdateCertificateAuthorityRequest model constructor.
     * @property {module:model/UpdateCertificateAuthorityRequest}
     */
    UpdateCertificateAuthorityRequest,

    /**
     * The UpdateCertificateAuthorityRequestRevocationConfiguration model constructor.
     * @property {module:model/UpdateCertificateAuthorityRequestRevocationConfiguration}
     */
    UpdateCertificateAuthorityRequestRevocationConfiguration,

    /**
     * The Validity model constructor.
     * @property {module:model/Validity}
     */
    Validity,

    /**
     * The ValidityPeriodType model constructor.
     * @property {module:model/ValidityPeriodType}
     */
    ValidityPeriodType,

    /**
    * The DefaultApi service constructor.
    * @property {module:api/DefaultApi}
    */
    DefaultApi
};
