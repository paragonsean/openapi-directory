/*
 * AWS Certificate Manager Private Certificate Authority
 * <p>This is the <i>Amazon Web Services Private Certificate Authority API Reference</i>. It provides descriptions, syntax, and usage examples for each of the actions and data types involved in creating and managing a private certificate authority (CA) for your organization.</p> <p>The documentation for each action shows the API request parameters and the JSON response. Alternatively, you can use one of the Amazon Web Services SDKs to access an API that is tailored to the programming language or platform that you prefer. For more information, see <a href=\"https://aws.amazon.com/tools/#SDKs\">Amazon Web Services SDKs</a>.</p> <p>Each Amazon Web Services Private CA API operation has a quota that determines the number of times the operation can be called per second. Amazon Web Services Private CA throttles API requests at different rates depending on the operation. Throttling means that Amazon Web Services Private CA rejects an otherwise valid request because the request exceeds the operation's quota for the number of requests per second. When a request is throttled, Amazon Web Services Private CA returns a <a href=\"https://docs.aws.amazon.com/privateca/latest/APIReference/CommonErrors.html\">ThrottlingException</a> error. Amazon Web Services Private CA does not guarantee a minimum request rate for APIs. </p> <p>To see an up-to-date list of your Amazon Web Services Private CA quotas, or to request a quota increase, log into your Amazon Web Services account and visit the <a href=\"https://console.aws.amazon.com/servicequotas/\">Service Quotas</a> console.</p>
 *
 * The version of the OpenAPI document: 2017-08-22
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;
import org.openapitools.client.model.ASN1Subject;
import org.openapitools.client.model.GeneralNameEdiPartyName;
import org.openapitools.client.model.GeneralNameOtherName;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

/**
 * Model tests for AccessDescriptionAccessLocation
 */
public class AccessDescriptionAccessLocationTest {
    private final AccessDescriptionAccessLocation model = new AccessDescriptionAccessLocation();

    /**
     * Model tests for AccessDescriptionAccessLocation
     */
    @Test
    public void testAccessDescriptionAccessLocation() {
        // TODO: test AccessDescriptionAccessLocation
    }

    /**
     * Test the property 'otherName'
     */
    @Test
    public void otherNameTest() {
        // TODO: test otherName
    }

    /**
     * Test the property 'rfc822Name'
     */
    @Test
    public void rfc822NameTest() {
        // TODO: test rfc822Name
    }

    /**
     * Test the property 'dnsName'
     */
    @Test
    public void dnsNameTest() {
        // TODO: test dnsName
    }

    /**
     * Test the property 'directoryName'
     */
    @Test
    public void directoryNameTest() {
        // TODO: test directoryName
    }

    /**
     * Test the property 'ediPartyName'
     */
    @Test
    public void ediPartyNameTest() {
        // TODO: test ediPartyName
    }

    /**
     * Test the property 'uniformResourceIdentifier'
     */
    @Test
    public void uniformResourceIdentifierTest() {
        // TODO: test uniformResourceIdentifier
    }

    /**
     * Test the property 'ipAddress'
     */
    @Test
    public void ipAddressTest() {
        // TODO: test ipAddress
    }

    /**
     * Test the property 'registeredId'
     */
    @Test
    public void registeredIdTest() {
        // TODO: test registeredId
    }

}
