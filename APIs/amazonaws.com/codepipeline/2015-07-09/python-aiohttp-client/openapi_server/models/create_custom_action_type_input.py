# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.action_category import ActionCategory
from openapi_server.models.create_custom_action_type_input_input_artifact_details import CreateCustomActionTypeInputInputArtifactDetails
from openapi_server.models.create_custom_action_type_input_output_artifact_details import CreateCustomActionTypeInputOutputArtifactDetails
from openapi_server.models.create_custom_action_type_input_settings import CreateCustomActionTypeInputSettings
from openapi_server import util


class CreateCustomActionTypeInput(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, category: ActionCategory=None, provider: str=None, version: str=None, settings: CreateCustomActionTypeInputSettings=None, configuration_properties: List=None, input_artifact_details: CreateCustomActionTypeInputInputArtifactDetails=None, output_artifact_details: CreateCustomActionTypeInputOutputArtifactDetails=None, tags: List=None):
        """CreateCustomActionTypeInput - a model defined in OpenAPI

        :param category: The category of this CreateCustomActionTypeInput.
        :param provider: The provider of this CreateCustomActionTypeInput.
        :param version: The version of this CreateCustomActionTypeInput.
        :param settings: The settings of this CreateCustomActionTypeInput.
        :param configuration_properties: The configuration_properties of this CreateCustomActionTypeInput.
        :param input_artifact_details: The input_artifact_details of this CreateCustomActionTypeInput.
        :param output_artifact_details: The output_artifact_details of this CreateCustomActionTypeInput.
        :param tags: The tags of this CreateCustomActionTypeInput.
        """
        self.openapi_types = {
            'category': ActionCategory,
            'provider': str,
            'version': str,
            'settings': CreateCustomActionTypeInputSettings,
            'configuration_properties': List,
            'input_artifact_details': CreateCustomActionTypeInputInputArtifactDetails,
            'output_artifact_details': CreateCustomActionTypeInputOutputArtifactDetails,
            'tags': List
        }

        self.attribute_map = {
            'category': 'category',
            'provider': 'provider',
            'version': 'version',
            'settings': 'settings',
            'configuration_properties': 'configurationProperties',
            'input_artifact_details': 'inputArtifactDetails',
            'output_artifact_details': 'outputArtifactDetails',
            'tags': 'tags'
        }

        self._category = category
        self._provider = provider
        self._version = version
        self._settings = settings
        self._configuration_properties = configuration_properties
        self._input_artifact_details = input_artifact_details
        self._output_artifact_details = output_artifact_details
        self._tags = tags

    @classmethod
    def from_dict(cls, dikt: dict) -> 'CreateCustomActionTypeInput':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The CreateCustomActionTypeInput of this CreateCustomActionTypeInput.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def category(self):
        """Gets the category of this CreateCustomActionTypeInput.


        :return: The category of this CreateCustomActionTypeInput.
        :rtype: ActionCategory
        """
        return self._category

    @category.setter
    def category(self, category):
        """Sets the category of this CreateCustomActionTypeInput.


        :param category: The category of this CreateCustomActionTypeInput.
        :type category: ActionCategory
        """
        if category is None:
            raise ValueError("Invalid value for `category`, must not be `None`")

        self._category = category

    @property
    def provider(self):
        """Gets the provider of this CreateCustomActionTypeInput.


        :return: The provider of this CreateCustomActionTypeInput.
        :rtype: str
        """
        return self._provider

    @provider.setter
    def provider(self, provider):
        """Sets the provider of this CreateCustomActionTypeInput.


        :param provider: The provider of this CreateCustomActionTypeInput.
        :type provider: str
        """
        if provider is None:
            raise ValueError("Invalid value for `provider`, must not be `None`")

        self._provider = provider

    @property
    def version(self):
        """Gets the version of this CreateCustomActionTypeInput.


        :return: The version of this CreateCustomActionTypeInput.
        :rtype: str
        """
        return self._version

    @version.setter
    def version(self, version):
        """Sets the version of this CreateCustomActionTypeInput.


        :param version: The version of this CreateCustomActionTypeInput.
        :type version: str
        """
        if version is None:
            raise ValueError("Invalid value for `version`, must not be `None`")

        self._version = version

    @property
    def settings(self):
        """Gets the settings of this CreateCustomActionTypeInput.


        :return: The settings of this CreateCustomActionTypeInput.
        :rtype: CreateCustomActionTypeInputSettings
        """
        return self._settings

    @settings.setter
    def settings(self, settings):
        """Sets the settings of this CreateCustomActionTypeInput.


        :param settings: The settings of this CreateCustomActionTypeInput.
        :type settings: CreateCustomActionTypeInputSettings
        """

        self._settings = settings

    @property
    def configuration_properties(self):
        """Gets the configuration_properties of this CreateCustomActionTypeInput.


        :return: The configuration_properties of this CreateCustomActionTypeInput.
        :rtype: List
        """
        return self._configuration_properties

    @configuration_properties.setter
    def configuration_properties(self, configuration_properties):
        """Sets the configuration_properties of this CreateCustomActionTypeInput.


        :param configuration_properties: The configuration_properties of this CreateCustomActionTypeInput.
        :type configuration_properties: List
        """

        self._configuration_properties = configuration_properties

    @property
    def input_artifact_details(self):
        """Gets the input_artifact_details of this CreateCustomActionTypeInput.


        :return: The input_artifact_details of this CreateCustomActionTypeInput.
        :rtype: CreateCustomActionTypeInputInputArtifactDetails
        """
        return self._input_artifact_details

    @input_artifact_details.setter
    def input_artifact_details(self, input_artifact_details):
        """Sets the input_artifact_details of this CreateCustomActionTypeInput.


        :param input_artifact_details: The input_artifact_details of this CreateCustomActionTypeInput.
        :type input_artifact_details: CreateCustomActionTypeInputInputArtifactDetails
        """
        if input_artifact_details is None:
            raise ValueError("Invalid value for `input_artifact_details`, must not be `None`")

        self._input_artifact_details = input_artifact_details

    @property
    def output_artifact_details(self):
        """Gets the output_artifact_details of this CreateCustomActionTypeInput.


        :return: The output_artifact_details of this CreateCustomActionTypeInput.
        :rtype: CreateCustomActionTypeInputOutputArtifactDetails
        """
        return self._output_artifact_details

    @output_artifact_details.setter
    def output_artifact_details(self, output_artifact_details):
        """Sets the output_artifact_details of this CreateCustomActionTypeInput.


        :param output_artifact_details: The output_artifact_details of this CreateCustomActionTypeInput.
        :type output_artifact_details: CreateCustomActionTypeInputOutputArtifactDetails
        """
        if output_artifact_details is None:
            raise ValueError("Invalid value for `output_artifact_details`, must not be `None`")

        self._output_artifact_details = output_artifact_details

    @property
    def tags(self):
        """Gets the tags of this CreateCustomActionTypeInput.


        :return: The tags of this CreateCustomActionTypeInput.
        :rtype: List
        """
        return self._tags

    @tags.setter
    def tags(self, tags):
        """Sets the tags of this CreateCustomActionTypeInput.


        :param tags: The tags of this CreateCustomActionTypeInput.
        :type tags: List
        """

        self._tags = tags
