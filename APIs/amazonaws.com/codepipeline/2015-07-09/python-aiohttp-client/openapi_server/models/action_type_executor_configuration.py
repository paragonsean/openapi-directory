# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.executor_configuration_job_worker_executor_configuration import ExecutorConfigurationJobWorkerExecutorConfiguration
from openapi_server.models.executor_configuration_lambda_executor_configuration import ExecutorConfigurationLambdaExecutorConfiguration
from openapi_server import util


class ActionTypeExecutorConfiguration(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, lambda_executor_configuration: ExecutorConfigurationLambdaExecutorConfiguration=None, job_worker_executor_configuration: ExecutorConfigurationJobWorkerExecutorConfiguration=None):
        """ActionTypeExecutorConfiguration - a model defined in OpenAPI

        :param lambda_executor_configuration: The lambda_executor_configuration of this ActionTypeExecutorConfiguration.
        :param job_worker_executor_configuration: The job_worker_executor_configuration of this ActionTypeExecutorConfiguration.
        """
        self.openapi_types = {
            'lambda_executor_configuration': ExecutorConfigurationLambdaExecutorConfiguration,
            'job_worker_executor_configuration': ExecutorConfigurationJobWorkerExecutorConfiguration
        }

        self.attribute_map = {
            'lambda_executor_configuration': 'lambdaExecutorConfiguration',
            'job_worker_executor_configuration': 'jobWorkerExecutorConfiguration'
        }

        self._lambda_executor_configuration = lambda_executor_configuration
        self._job_worker_executor_configuration = job_worker_executor_configuration

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ActionTypeExecutorConfiguration':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ActionTypeExecutor_configuration of this ActionTypeExecutorConfiguration.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def lambda_executor_configuration(self):
        """Gets the lambda_executor_configuration of this ActionTypeExecutorConfiguration.


        :return: The lambda_executor_configuration of this ActionTypeExecutorConfiguration.
        :rtype: ExecutorConfigurationLambdaExecutorConfiguration
        """
        return self._lambda_executor_configuration

    @lambda_executor_configuration.setter
    def lambda_executor_configuration(self, lambda_executor_configuration):
        """Sets the lambda_executor_configuration of this ActionTypeExecutorConfiguration.


        :param lambda_executor_configuration: The lambda_executor_configuration of this ActionTypeExecutorConfiguration.
        :type lambda_executor_configuration: ExecutorConfigurationLambdaExecutorConfiguration
        """

        self._lambda_executor_configuration = lambda_executor_configuration

    @property
    def job_worker_executor_configuration(self):
        """Gets the job_worker_executor_configuration of this ActionTypeExecutorConfiguration.


        :return: The job_worker_executor_configuration of this ActionTypeExecutorConfiguration.
        :rtype: ExecutorConfigurationJobWorkerExecutorConfiguration
        """
        return self._job_worker_executor_configuration

    @job_worker_executor_configuration.setter
    def job_worker_executor_configuration(self, job_worker_executor_configuration):
        """Sets the job_worker_executor_configuration of this ActionTypeExecutorConfiguration.


        :param job_worker_executor_configuration: The job_worker_executor_configuration of this ActionTypeExecutorConfiguration.
        :type job_worker_executor_configuration: ExecutorConfigurationJobWorkerExecutorConfiguration
        """

        self._job_worker_executor_configuration = job_worker_executor_configuration
