# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class SourceRevision(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, action_name: str=None, revision_id: str=None, revision_summary: str=None, revision_url: str=None):
        """SourceRevision - a model defined in OpenAPI

        :param action_name: The action_name of this SourceRevision.
        :param revision_id: The revision_id of this SourceRevision.
        :param revision_summary: The revision_summary of this SourceRevision.
        :param revision_url: The revision_url of this SourceRevision.
        """
        self.openapi_types = {
            'action_name': str,
            'revision_id': str,
            'revision_summary': str,
            'revision_url': str
        }

        self.attribute_map = {
            'action_name': 'actionName',
            'revision_id': 'revisionId',
            'revision_summary': 'revisionSummary',
            'revision_url': 'revisionUrl'
        }

        self._action_name = action_name
        self._revision_id = revision_id
        self._revision_summary = revision_summary
        self._revision_url = revision_url

    @classmethod
    def from_dict(cls, dikt: dict) -> 'SourceRevision':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The SourceRevision of this SourceRevision.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def action_name(self):
        """Gets the action_name of this SourceRevision.


        :return: The action_name of this SourceRevision.
        :rtype: str
        """
        return self._action_name

    @action_name.setter
    def action_name(self, action_name):
        """Sets the action_name of this SourceRevision.


        :param action_name: The action_name of this SourceRevision.
        :type action_name: str
        """
        if action_name is None:
            raise ValueError("Invalid value for `action_name`, must not be `None`")

        self._action_name = action_name

    @property
    def revision_id(self):
        """Gets the revision_id of this SourceRevision.


        :return: The revision_id of this SourceRevision.
        :rtype: str
        """
        return self._revision_id

    @revision_id.setter
    def revision_id(self, revision_id):
        """Sets the revision_id of this SourceRevision.


        :param revision_id: The revision_id of this SourceRevision.
        :type revision_id: str
        """

        self._revision_id = revision_id

    @property
    def revision_summary(self):
        """Gets the revision_summary of this SourceRevision.


        :return: The revision_summary of this SourceRevision.
        :rtype: str
        """
        return self._revision_summary

    @revision_summary.setter
    def revision_summary(self, revision_summary):
        """Sets the revision_summary of this SourceRevision.


        :param revision_summary: The revision_summary of this SourceRevision.
        :type revision_summary: str
        """

        self._revision_summary = revision_summary

    @property
    def revision_url(self):
        """Gets the revision_url of this SourceRevision.


        :return: The revision_url of this SourceRevision.
        :rtype: str
        """
        return self._revision_url

    @revision_url.setter
    def revision_url(self, revision_url):
        """Sets the revision_url of this SourceRevision.


        :param revision_url: The revision_url of this SourceRevision.
        :type revision_url: str
        """

        self._revision_url = revision_url
