# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.artifact_location_s3_location import ArtifactLocationS3Location
from openapi_server.models.artifact_location_type import ArtifactLocationType
from openapi_server import util


class ArtifactLocation(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, type: ArtifactLocationType=None, s3_location: ArtifactLocationS3Location=None):
        """ArtifactLocation - a model defined in OpenAPI

        :param type: The type of this ArtifactLocation.
        :param s3_location: The s3_location of this ArtifactLocation.
        """
        self.openapi_types = {
            'type': ArtifactLocationType,
            's3_location': ArtifactLocationS3Location
        }

        self.attribute_map = {
            'type': 'type',
            's3_location': 's3Location'
        }

        self._type = type
        self._s3_location = s3_location

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ArtifactLocation':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Artifact_location of this ArtifactLocation.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def type(self):
        """Gets the type of this ArtifactLocation.


        :return: The type of this ArtifactLocation.
        :rtype: ArtifactLocationType
        """
        return self._type

    @type.setter
    def type(self, type):
        """Sets the type of this ArtifactLocation.


        :param type: The type of this ArtifactLocation.
        :type type: ArtifactLocationType
        """

        self._type = type

    @property
    def s3_location(self):
        """Gets the s3_location of this ArtifactLocation.


        :return: The s3_location of this ArtifactLocation.
        :rtype: ArtifactLocationS3Location
        """
        return self._s3_location

    @s3_location.setter
    def s3_location(self, s3_location):
        """Sets the s3_location of this ArtifactLocation.


        :param s3_location: The s3_location of this ArtifactLocation.
        :type s3_location: ArtifactLocationS3Location
        """

        self._s3_location = s3_location
