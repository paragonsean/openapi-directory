# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class TransitionState(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, enabled: bool=None, last_changed_by: str=None, last_changed_at: datetime=None, disabled_reason: str=None):
        """TransitionState - a model defined in OpenAPI

        :param enabled: The enabled of this TransitionState.
        :param last_changed_by: The last_changed_by of this TransitionState.
        :param last_changed_at: The last_changed_at of this TransitionState.
        :param disabled_reason: The disabled_reason of this TransitionState.
        """
        self.openapi_types = {
            'enabled': bool,
            'last_changed_by': str,
            'last_changed_at': datetime,
            'disabled_reason': str
        }

        self.attribute_map = {
            'enabled': 'enabled',
            'last_changed_by': 'lastChangedBy',
            'last_changed_at': 'lastChangedAt',
            'disabled_reason': 'disabledReason'
        }

        self._enabled = enabled
        self._last_changed_by = last_changed_by
        self._last_changed_at = last_changed_at
        self._disabled_reason = disabled_reason

    @classmethod
    def from_dict(cls, dikt: dict) -> 'TransitionState':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The TransitionState of this TransitionState.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def enabled(self):
        """Gets the enabled of this TransitionState.


        :return: The enabled of this TransitionState.
        :rtype: bool
        """
        return self._enabled

    @enabled.setter
    def enabled(self, enabled):
        """Sets the enabled of this TransitionState.


        :param enabled: The enabled of this TransitionState.
        :type enabled: bool
        """

        self._enabled = enabled

    @property
    def last_changed_by(self):
        """Gets the last_changed_by of this TransitionState.


        :return: The last_changed_by of this TransitionState.
        :rtype: str
        """
        return self._last_changed_by

    @last_changed_by.setter
    def last_changed_by(self, last_changed_by):
        """Sets the last_changed_by of this TransitionState.


        :param last_changed_by: The last_changed_by of this TransitionState.
        :type last_changed_by: str
        """

        self._last_changed_by = last_changed_by

    @property
    def last_changed_at(self):
        """Gets the last_changed_at of this TransitionState.


        :return: The last_changed_at of this TransitionState.
        :rtype: datetime
        """
        return self._last_changed_at

    @last_changed_at.setter
    def last_changed_at(self, last_changed_at):
        """Sets the last_changed_at of this TransitionState.


        :param last_changed_at: The last_changed_at of this TransitionState.
        :type last_changed_at: datetime
        """

        self._last_changed_at = last_changed_at

    @property
    def disabled_reason(self):
        """Gets the disabled_reason of this TransitionState.


        :return: The disabled_reason of this TransitionState.
        :rtype: str
        """
        return self._disabled_reason

    @disabled_reason.setter
    def disabled_reason(self, disabled_reason):
        """Sets the disabled_reason of this TransitionState.


        :param disabled_reason: The disabled_reason of this TransitionState.
        :type disabled_reason: str
        """

        self._disabled_reason = disabled_reason
