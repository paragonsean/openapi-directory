# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.action_state_latest_execution import ActionStateLatestExecution
from openapi_server.models.put_action_revision_input_action_revision import PutActionRevisionInputActionRevision
from openapi_server import util


class ActionState(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, action_name: str=None, current_revision: PutActionRevisionInputActionRevision=None, latest_execution: ActionStateLatestExecution=None, entity_url: str=None, revision_url: str=None):
        """ActionState - a model defined in OpenAPI

        :param action_name: The action_name of this ActionState.
        :param current_revision: The current_revision of this ActionState.
        :param latest_execution: The latest_execution of this ActionState.
        :param entity_url: The entity_url of this ActionState.
        :param revision_url: The revision_url of this ActionState.
        """
        self.openapi_types = {
            'action_name': str,
            'current_revision': PutActionRevisionInputActionRevision,
            'latest_execution': ActionStateLatestExecution,
            'entity_url': str,
            'revision_url': str
        }

        self.attribute_map = {
            'action_name': 'actionName',
            'current_revision': 'currentRevision',
            'latest_execution': 'latestExecution',
            'entity_url': 'entityUrl',
            'revision_url': 'revisionUrl'
        }

        self._action_name = action_name
        self._current_revision = current_revision
        self._latest_execution = latest_execution
        self._entity_url = entity_url
        self._revision_url = revision_url

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ActionState':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ActionState of this ActionState.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def action_name(self):
        """Gets the action_name of this ActionState.


        :return: The action_name of this ActionState.
        :rtype: str
        """
        return self._action_name

    @action_name.setter
    def action_name(self, action_name):
        """Sets the action_name of this ActionState.


        :param action_name: The action_name of this ActionState.
        :type action_name: str
        """

        self._action_name = action_name

    @property
    def current_revision(self):
        """Gets the current_revision of this ActionState.


        :return: The current_revision of this ActionState.
        :rtype: PutActionRevisionInputActionRevision
        """
        return self._current_revision

    @current_revision.setter
    def current_revision(self, current_revision):
        """Sets the current_revision of this ActionState.


        :param current_revision: The current_revision of this ActionState.
        :type current_revision: PutActionRevisionInputActionRevision
        """

        self._current_revision = current_revision

    @property
    def latest_execution(self):
        """Gets the latest_execution of this ActionState.


        :return: The latest_execution of this ActionState.
        :rtype: ActionStateLatestExecution
        """
        return self._latest_execution

    @latest_execution.setter
    def latest_execution(self, latest_execution):
        """Sets the latest_execution of this ActionState.


        :param latest_execution: The latest_execution of this ActionState.
        :type latest_execution: ActionStateLatestExecution
        """

        self._latest_execution = latest_execution

    @property
    def entity_url(self):
        """Gets the entity_url of this ActionState.


        :return: The entity_url of this ActionState.
        :rtype: str
        """
        return self._entity_url

    @entity_url.setter
    def entity_url(self, entity_url):
        """Sets the entity_url of this ActionState.


        :param entity_url: The entity_url of this ActionState.
        :type entity_url: str
        """

        self._entity_url = entity_url

    @property
    def revision_url(self):
        """Gets the revision_url of this ActionState.


        :return: The revision_url of this ActionState.
        :rtype: str
        """
        return self._revision_url

    @revision_url.setter
    def revision_url(self, revision_url):
        """Sets the revision_url of this ActionState.


        :param revision_url: The revision_url of this ActionState.
        :type revision_url: str
        """

        self._revision_url = revision_url
