# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.action_type_settings import ActionTypeSettings
from openapi_server.models.create_custom_action_type_input_input_artifact_details import CreateCustomActionTypeInputInputArtifactDetails
from openapi_server.models.create_custom_action_type_input_output_artifact_details import CreateCustomActionTypeInputOutputArtifactDetails
from openapi_server.models.poll_for_jobs_input_action_type_id import PollForJobsInputActionTypeId
from openapi_server import util


class ActionType(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, id: PollForJobsInputActionTypeId=None, settings: ActionTypeSettings=None, action_configuration_properties: List=None, input_artifact_details: CreateCustomActionTypeInputInputArtifactDetails=None, output_artifact_details: CreateCustomActionTypeInputOutputArtifactDetails=None):
        """ActionType - a model defined in OpenAPI

        :param id: The id of this ActionType.
        :param settings: The settings of this ActionType.
        :param action_configuration_properties: The action_configuration_properties of this ActionType.
        :param input_artifact_details: The input_artifact_details of this ActionType.
        :param output_artifact_details: The output_artifact_details of this ActionType.
        """
        self.openapi_types = {
            'id': PollForJobsInputActionTypeId,
            'settings': ActionTypeSettings,
            'action_configuration_properties': List,
            'input_artifact_details': CreateCustomActionTypeInputInputArtifactDetails,
            'output_artifact_details': CreateCustomActionTypeInputOutputArtifactDetails
        }

        self.attribute_map = {
            'id': 'id',
            'settings': 'settings',
            'action_configuration_properties': 'actionConfigurationProperties',
            'input_artifact_details': 'inputArtifactDetails',
            'output_artifact_details': 'outputArtifactDetails'
        }

        self._id = id
        self._settings = settings
        self._action_configuration_properties = action_configuration_properties
        self._input_artifact_details = input_artifact_details
        self._output_artifact_details = output_artifact_details

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ActionType':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ActionType of this ActionType.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def id(self):
        """Gets the id of this ActionType.


        :return: The id of this ActionType.
        :rtype: PollForJobsInputActionTypeId
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this ActionType.


        :param id: The id of this ActionType.
        :type id: PollForJobsInputActionTypeId
        """
        if id is None:
            raise ValueError("Invalid value for `id`, must not be `None`")

        self._id = id

    @property
    def settings(self):
        """Gets the settings of this ActionType.


        :return: The settings of this ActionType.
        :rtype: ActionTypeSettings
        """
        return self._settings

    @settings.setter
    def settings(self, settings):
        """Sets the settings of this ActionType.


        :param settings: The settings of this ActionType.
        :type settings: ActionTypeSettings
        """

        self._settings = settings

    @property
    def action_configuration_properties(self):
        """Gets the action_configuration_properties of this ActionType.


        :return: The action_configuration_properties of this ActionType.
        :rtype: List
        """
        return self._action_configuration_properties

    @action_configuration_properties.setter
    def action_configuration_properties(self, action_configuration_properties):
        """Sets the action_configuration_properties of this ActionType.


        :param action_configuration_properties: The action_configuration_properties of this ActionType.
        :type action_configuration_properties: List
        """

        self._action_configuration_properties = action_configuration_properties

    @property
    def input_artifact_details(self):
        """Gets the input_artifact_details of this ActionType.


        :return: The input_artifact_details of this ActionType.
        :rtype: CreateCustomActionTypeInputInputArtifactDetails
        """
        return self._input_artifact_details

    @input_artifact_details.setter
    def input_artifact_details(self, input_artifact_details):
        """Sets the input_artifact_details of this ActionType.


        :param input_artifact_details: The input_artifact_details of this ActionType.
        :type input_artifact_details: CreateCustomActionTypeInputInputArtifactDetails
        """
        if input_artifact_details is None:
            raise ValueError("Invalid value for `input_artifact_details`, must not be `None`")

        self._input_artifact_details = input_artifact_details

    @property
    def output_artifact_details(self):
        """Gets the output_artifact_details of this ActionType.


        :return: The output_artifact_details of this ActionType.
        :rtype: CreateCustomActionTypeInputOutputArtifactDetails
        """
        return self._output_artifact_details

    @output_artifact_details.setter
    def output_artifact_details(self, output_artifact_details):
        """Sets the output_artifact_details of this ActionType.


        :param output_artifact_details: The output_artifact_details of this ActionType.
        :type output_artifact_details: CreateCustomActionTypeInputOutputArtifactDetails
        """
        if output_artifact_details is None:
            raise ValueError("Invalid value for `output_artifact_details`, must not be `None`")

        self._output_artifact_details = output_artifact_details
