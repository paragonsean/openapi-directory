# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.stage_execution import StageExecution
from openapi_server.models.stage_state_inbound_transition_state import StageStateInboundTransitionState
from openapi_server.models.stage_state_latest_execution import StageStateLatestExecution
from openapi_server import util


class StageState(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, stage_name: str=None, inbound_execution: StageExecution=None, inbound_transition_state: StageStateInboundTransitionState=None, action_states: List=None, latest_execution: StageStateLatestExecution=None):
        """StageState - a model defined in OpenAPI

        :param stage_name: The stage_name of this StageState.
        :param inbound_execution: The inbound_execution of this StageState.
        :param inbound_transition_state: The inbound_transition_state of this StageState.
        :param action_states: The action_states of this StageState.
        :param latest_execution: The latest_execution of this StageState.
        """
        self.openapi_types = {
            'stage_name': str,
            'inbound_execution': StageExecution,
            'inbound_transition_state': StageStateInboundTransitionState,
            'action_states': List,
            'latest_execution': StageStateLatestExecution
        }

        self.attribute_map = {
            'stage_name': 'stageName',
            'inbound_execution': 'inboundExecution',
            'inbound_transition_state': 'inboundTransitionState',
            'action_states': 'actionStates',
            'latest_execution': 'latestExecution'
        }

        self._stage_name = stage_name
        self._inbound_execution = inbound_execution
        self._inbound_transition_state = inbound_transition_state
        self._action_states = action_states
        self._latest_execution = latest_execution

    @classmethod
    def from_dict(cls, dikt: dict) -> 'StageState':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The StageState of this StageState.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def stage_name(self):
        """Gets the stage_name of this StageState.


        :return: The stage_name of this StageState.
        :rtype: str
        """
        return self._stage_name

    @stage_name.setter
    def stage_name(self, stage_name):
        """Sets the stage_name of this StageState.


        :param stage_name: The stage_name of this StageState.
        :type stage_name: str
        """

        self._stage_name = stage_name

    @property
    def inbound_execution(self):
        """Gets the inbound_execution of this StageState.


        :return: The inbound_execution of this StageState.
        :rtype: StageExecution
        """
        return self._inbound_execution

    @inbound_execution.setter
    def inbound_execution(self, inbound_execution):
        """Sets the inbound_execution of this StageState.


        :param inbound_execution: The inbound_execution of this StageState.
        :type inbound_execution: StageExecution
        """

        self._inbound_execution = inbound_execution

    @property
    def inbound_transition_state(self):
        """Gets the inbound_transition_state of this StageState.


        :return: The inbound_transition_state of this StageState.
        :rtype: StageStateInboundTransitionState
        """
        return self._inbound_transition_state

    @inbound_transition_state.setter
    def inbound_transition_state(self, inbound_transition_state):
        """Sets the inbound_transition_state of this StageState.


        :param inbound_transition_state: The inbound_transition_state of this StageState.
        :type inbound_transition_state: StageStateInboundTransitionState
        """

        self._inbound_transition_state = inbound_transition_state

    @property
    def action_states(self):
        """Gets the action_states of this StageState.


        :return: The action_states of this StageState.
        :rtype: List
        """
        return self._action_states

    @action_states.setter
    def action_states(self, action_states):
        """Sets the action_states of this StageState.


        :param action_states: The action_states of this StageState.
        :type action_states: List
        """

        self._action_states = action_states

    @property
    def latest_execution(self):
        """Gets the latest_execution of this StageState.


        :return: The latest_execution of this StageState.
        :rtype: StageStateLatestExecution
        """
        return self._latest_execution

    @latest_execution.setter
    def latest_execution(self, latest_execution):
        """Sets the latest_execution of this StageState.


        :param latest_execution: The latest_execution of this StageState.
        :type latest_execution: StageStateLatestExecution
        """

        self._latest_execution = latest_execution
