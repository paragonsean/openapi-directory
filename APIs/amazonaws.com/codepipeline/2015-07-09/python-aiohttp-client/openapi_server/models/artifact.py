# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.artifact_location import ArtifactLocation
from openapi_server import util


class Artifact(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, name: str=None, revision: str=None, location: ArtifactLocation=None):
        """Artifact - a model defined in OpenAPI

        :param name: The name of this Artifact.
        :param revision: The revision of this Artifact.
        :param location: The location of this Artifact.
        """
        self.openapi_types = {
            'name': str,
            'revision': str,
            'location': ArtifactLocation
        }

        self.attribute_map = {
            'name': 'name',
            'revision': 'revision',
            'location': 'location'
        }

        self._name = name
        self._revision = revision
        self._location = location

    @classmethod
    def from_dict(cls, dikt: dict) -> 'Artifact':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Artifact of this Artifact.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def name(self):
        """Gets the name of this Artifact.


        :return: The name of this Artifact.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this Artifact.


        :param name: The name of this Artifact.
        :type name: str
        """

        self._name = name

    @property
    def revision(self):
        """Gets the revision of this Artifact.


        :return: The revision of this Artifact.
        :rtype: str
        """
        return self._revision

    @revision.setter
    def revision(self, revision):
        """Sets the revision of this Artifact.


        :param revision: The revision of this Artifact.
        :type revision: str
        """

        self._revision = revision

    @property
    def location(self):
        """Gets the location of this Artifact.


        :return: The location of this Artifact.
        :rtype: ArtifactLocation
        """
        return self._location

    @location.setter
    def location(self, location):
        """Sets the location of this Artifact.


        :param location: The location of this Artifact.
        :type location: ArtifactLocation
        """

        self._location = location
