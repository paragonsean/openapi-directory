# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.pipeline_execution_status import PipelineExecutionStatus
from openapi_server.models.pipeline_execution_summary_stop_trigger import PipelineExecutionSummaryStopTrigger
from openapi_server.models.pipeline_execution_summary_trigger import PipelineExecutionSummaryTrigger
from openapi_server import util


class PipelineExecutionSummary(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, pipeline_execution_id: str=None, status: PipelineExecutionStatus=None, start_time: datetime=None, last_update_time: datetime=None, source_revisions: List=None, trigger: PipelineExecutionSummaryTrigger=None, stop_trigger: PipelineExecutionSummaryStopTrigger=None):
        """PipelineExecutionSummary - a model defined in OpenAPI

        :param pipeline_execution_id: The pipeline_execution_id of this PipelineExecutionSummary.
        :param status: The status of this PipelineExecutionSummary.
        :param start_time: The start_time of this PipelineExecutionSummary.
        :param last_update_time: The last_update_time of this PipelineExecutionSummary.
        :param source_revisions: The source_revisions of this PipelineExecutionSummary.
        :param trigger: The trigger of this PipelineExecutionSummary.
        :param stop_trigger: The stop_trigger of this PipelineExecutionSummary.
        """
        self.openapi_types = {
            'pipeline_execution_id': str,
            'status': PipelineExecutionStatus,
            'start_time': datetime,
            'last_update_time': datetime,
            'source_revisions': List,
            'trigger': PipelineExecutionSummaryTrigger,
            'stop_trigger': PipelineExecutionSummaryStopTrigger
        }

        self.attribute_map = {
            'pipeline_execution_id': 'pipelineExecutionId',
            'status': 'status',
            'start_time': 'startTime',
            'last_update_time': 'lastUpdateTime',
            'source_revisions': 'sourceRevisions',
            'trigger': 'trigger',
            'stop_trigger': 'stopTrigger'
        }

        self._pipeline_execution_id = pipeline_execution_id
        self._status = status
        self._start_time = start_time
        self._last_update_time = last_update_time
        self._source_revisions = source_revisions
        self._trigger = trigger
        self._stop_trigger = stop_trigger

    @classmethod
    def from_dict(cls, dikt: dict) -> 'PipelineExecutionSummary':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The PipelineExecutionSummary of this PipelineExecutionSummary.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def pipeline_execution_id(self):
        """Gets the pipeline_execution_id of this PipelineExecutionSummary.


        :return: The pipeline_execution_id of this PipelineExecutionSummary.
        :rtype: str
        """
        return self._pipeline_execution_id

    @pipeline_execution_id.setter
    def pipeline_execution_id(self, pipeline_execution_id):
        """Sets the pipeline_execution_id of this PipelineExecutionSummary.


        :param pipeline_execution_id: The pipeline_execution_id of this PipelineExecutionSummary.
        :type pipeline_execution_id: str
        """

        self._pipeline_execution_id = pipeline_execution_id

    @property
    def status(self):
        """Gets the status of this PipelineExecutionSummary.


        :return: The status of this PipelineExecutionSummary.
        :rtype: PipelineExecutionStatus
        """
        return self._status

    @status.setter
    def status(self, status):
        """Sets the status of this PipelineExecutionSummary.


        :param status: The status of this PipelineExecutionSummary.
        :type status: PipelineExecutionStatus
        """

        self._status = status

    @property
    def start_time(self):
        """Gets the start_time of this PipelineExecutionSummary.


        :return: The start_time of this PipelineExecutionSummary.
        :rtype: datetime
        """
        return self._start_time

    @start_time.setter
    def start_time(self, start_time):
        """Sets the start_time of this PipelineExecutionSummary.


        :param start_time: The start_time of this PipelineExecutionSummary.
        :type start_time: datetime
        """

        self._start_time = start_time

    @property
    def last_update_time(self):
        """Gets the last_update_time of this PipelineExecutionSummary.


        :return: The last_update_time of this PipelineExecutionSummary.
        :rtype: datetime
        """
        return self._last_update_time

    @last_update_time.setter
    def last_update_time(self, last_update_time):
        """Sets the last_update_time of this PipelineExecutionSummary.


        :param last_update_time: The last_update_time of this PipelineExecutionSummary.
        :type last_update_time: datetime
        """

        self._last_update_time = last_update_time

    @property
    def source_revisions(self):
        """Gets the source_revisions of this PipelineExecutionSummary.


        :return: The source_revisions of this PipelineExecutionSummary.
        :rtype: List
        """
        return self._source_revisions

    @source_revisions.setter
    def source_revisions(self, source_revisions):
        """Sets the source_revisions of this PipelineExecutionSummary.


        :param source_revisions: The source_revisions of this PipelineExecutionSummary.
        :type source_revisions: List
        """

        self._source_revisions = source_revisions

    @property
    def trigger(self):
        """Gets the trigger of this PipelineExecutionSummary.


        :return: The trigger of this PipelineExecutionSummary.
        :rtype: PipelineExecutionSummaryTrigger
        """
        return self._trigger

    @trigger.setter
    def trigger(self, trigger):
        """Sets the trigger of this PipelineExecutionSummary.


        :param trigger: The trigger of this PipelineExecutionSummary.
        :type trigger: PipelineExecutionSummaryTrigger
        """

        self._trigger = trigger

    @property
    def stop_trigger(self):
        """Gets the stop_trigger of this PipelineExecutionSummary.


        :return: The stop_trigger of this PipelineExecutionSummary.
        :rtype: PipelineExecutionSummaryStopTrigger
        """
        return self._stop_trigger

    @stop_trigger.setter
    def stop_trigger(self, stop_trigger):
        """Sets the stop_trigger of this PipelineExecutionSummary.


        :param stop_trigger: The stop_trigger of this PipelineExecutionSummary.
        :type stop_trigger: PipelineExecutionSummaryStopTrigger
        """

        self._stop_trigger = stop_trigger
