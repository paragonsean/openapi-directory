# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.pipeline_execution_status import PipelineExecutionStatus
from openapi_server import util


class PipelineExecution(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, pipeline_name: str=None, pipeline_version: int=None, pipeline_execution_id: str=None, status: PipelineExecutionStatus=None, status_summary: str=None, artifact_revisions: List=None):
        """PipelineExecution - a model defined in OpenAPI

        :param pipeline_name: The pipeline_name of this PipelineExecution.
        :param pipeline_version: The pipeline_version of this PipelineExecution.
        :param pipeline_execution_id: The pipeline_execution_id of this PipelineExecution.
        :param status: The status of this PipelineExecution.
        :param status_summary: The status_summary of this PipelineExecution.
        :param artifact_revisions: The artifact_revisions of this PipelineExecution.
        """
        self.openapi_types = {
            'pipeline_name': str,
            'pipeline_version': int,
            'pipeline_execution_id': str,
            'status': PipelineExecutionStatus,
            'status_summary': str,
            'artifact_revisions': List
        }

        self.attribute_map = {
            'pipeline_name': 'pipelineName',
            'pipeline_version': 'pipelineVersion',
            'pipeline_execution_id': 'pipelineExecutionId',
            'status': 'status',
            'status_summary': 'statusSummary',
            'artifact_revisions': 'artifactRevisions'
        }

        self._pipeline_name = pipeline_name
        self._pipeline_version = pipeline_version
        self._pipeline_execution_id = pipeline_execution_id
        self._status = status
        self._status_summary = status_summary
        self._artifact_revisions = artifact_revisions

    @classmethod
    def from_dict(cls, dikt: dict) -> 'PipelineExecution':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The PipelineExecution of this PipelineExecution.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def pipeline_name(self):
        """Gets the pipeline_name of this PipelineExecution.


        :return: The pipeline_name of this PipelineExecution.
        :rtype: str
        """
        return self._pipeline_name

    @pipeline_name.setter
    def pipeline_name(self, pipeline_name):
        """Sets the pipeline_name of this PipelineExecution.


        :param pipeline_name: The pipeline_name of this PipelineExecution.
        :type pipeline_name: str
        """

        self._pipeline_name = pipeline_name

    @property
    def pipeline_version(self):
        """Gets the pipeline_version of this PipelineExecution.


        :return: The pipeline_version of this PipelineExecution.
        :rtype: int
        """
        return self._pipeline_version

    @pipeline_version.setter
    def pipeline_version(self, pipeline_version):
        """Sets the pipeline_version of this PipelineExecution.


        :param pipeline_version: The pipeline_version of this PipelineExecution.
        :type pipeline_version: int
        """

        self._pipeline_version = pipeline_version

    @property
    def pipeline_execution_id(self):
        """Gets the pipeline_execution_id of this PipelineExecution.


        :return: The pipeline_execution_id of this PipelineExecution.
        :rtype: str
        """
        return self._pipeline_execution_id

    @pipeline_execution_id.setter
    def pipeline_execution_id(self, pipeline_execution_id):
        """Sets the pipeline_execution_id of this PipelineExecution.


        :param pipeline_execution_id: The pipeline_execution_id of this PipelineExecution.
        :type pipeline_execution_id: str
        """

        self._pipeline_execution_id = pipeline_execution_id

    @property
    def status(self):
        """Gets the status of this PipelineExecution.


        :return: The status of this PipelineExecution.
        :rtype: PipelineExecutionStatus
        """
        return self._status

    @status.setter
    def status(self, status):
        """Sets the status of this PipelineExecution.


        :param status: The status of this PipelineExecution.
        :type status: PipelineExecutionStatus
        """

        self._status = status

    @property
    def status_summary(self):
        """Gets the status_summary of this PipelineExecution.


        :return: The status_summary of this PipelineExecution.
        :rtype: str
        """
        return self._status_summary

    @status_summary.setter
    def status_summary(self, status_summary):
        """Sets the status_summary of this PipelineExecution.


        :param status_summary: The status_summary of this PipelineExecution.
        :type status_summary: str
        """

        self._status_summary = status_summary

    @property
    def artifact_revisions(self):
        """Gets the artifact_revisions of this PipelineExecution.


        :return: The artifact_revisions of this PipelineExecution.
        :rtype: List
        """
        return self._artifact_revisions

    @artifact_revisions.setter
    def artifact_revisions(self, artifact_revisions):
        """Sets the artifact_revisions of this PipelineExecution.


        :param artifact_revisions: The artifact_revisions of this PipelineExecution.
        :type artifact_revisions: List
        """

        self._artifact_revisions = artifact_revisions
