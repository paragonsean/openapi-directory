# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.webhook_authentication_type import WebhookAuthenticationType
from openapi_server.models.webhook_definition_authentication_configuration import WebhookDefinitionAuthenticationConfiguration
from openapi_server import util


class ListWebhookItemDefinition(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, name: str=None, target_pipeline: str=None, target_action: str=None, filters: List=None, authentication: WebhookAuthenticationType=None, authentication_configuration: WebhookDefinitionAuthenticationConfiguration=None):
        """ListWebhookItemDefinition - a model defined in OpenAPI

        :param name: The name of this ListWebhookItemDefinition.
        :param target_pipeline: The target_pipeline of this ListWebhookItemDefinition.
        :param target_action: The target_action of this ListWebhookItemDefinition.
        :param filters: The filters of this ListWebhookItemDefinition.
        :param authentication: The authentication of this ListWebhookItemDefinition.
        :param authentication_configuration: The authentication_configuration of this ListWebhookItemDefinition.
        """
        self.openapi_types = {
            'name': str,
            'target_pipeline': str,
            'target_action': str,
            'filters': List,
            'authentication': WebhookAuthenticationType,
            'authentication_configuration': WebhookDefinitionAuthenticationConfiguration
        }

        self.attribute_map = {
            'name': 'name',
            'target_pipeline': 'targetPipeline',
            'target_action': 'targetAction',
            'filters': 'filters',
            'authentication': 'authentication',
            'authentication_configuration': 'authenticationConfiguration'
        }

        self._name = name
        self._target_pipeline = target_pipeline
        self._target_action = target_action
        self._filters = filters
        self._authentication = authentication
        self._authentication_configuration = authentication_configuration

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ListWebhookItemDefinition':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ListWebhookItem_definition of this ListWebhookItemDefinition.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def name(self):
        """Gets the name of this ListWebhookItemDefinition.


        :return: The name of this ListWebhookItemDefinition.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this ListWebhookItemDefinition.


        :param name: The name of this ListWebhookItemDefinition.
        :type name: str
        """
        if name is None:
            raise ValueError("Invalid value for `name`, must not be `None`")

        self._name = name

    @property
    def target_pipeline(self):
        """Gets the target_pipeline of this ListWebhookItemDefinition.


        :return: The target_pipeline of this ListWebhookItemDefinition.
        :rtype: str
        """
        return self._target_pipeline

    @target_pipeline.setter
    def target_pipeline(self, target_pipeline):
        """Sets the target_pipeline of this ListWebhookItemDefinition.


        :param target_pipeline: The target_pipeline of this ListWebhookItemDefinition.
        :type target_pipeline: str
        """
        if target_pipeline is None:
            raise ValueError("Invalid value for `target_pipeline`, must not be `None`")

        self._target_pipeline = target_pipeline

    @property
    def target_action(self):
        """Gets the target_action of this ListWebhookItemDefinition.


        :return: The target_action of this ListWebhookItemDefinition.
        :rtype: str
        """
        return self._target_action

    @target_action.setter
    def target_action(self, target_action):
        """Sets the target_action of this ListWebhookItemDefinition.


        :param target_action: The target_action of this ListWebhookItemDefinition.
        :type target_action: str
        """
        if target_action is None:
            raise ValueError("Invalid value for `target_action`, must not be `None`")

        self._target_action = target_action

    @property
    def filters(self):
        """Gets the filters of this ListWebhookItemDefinition.


        :return: The filters of this ListWebhookItemDefinition.
        :rtype: List
        """
        return self._filters

    @filters.setter
    def filters(self, filters):
        """Sets the filters of this ListWebhookItemDefinition.


        :param filters: The filters of this ListWebhookItemDefinition.
        :type filters: List
        """
        if filters is None:
            raise ValueError("Invalid value for `filters`, must not be `None`")

        self._filters = filters

    @property
    def authentication(self):
        """Gets the authentication of this ListWebhookItemDefinition.


        :return: The authentication of this ListWebhookItemDefinition.
        :rtype: WebhookAuthenticationType
        """
        return self._authentication

    @authentication.setter
    def authentication(self, authentication):
        """Sets the authentication of this ListWebhookItemDefinition.


        :param authentication: The authentication of this ListWebhookItemDefinition.
        :type authentication: WebhookAuthenticationType
        """
        if authentication is None:
            raise ValueError("Invalid value for `authentication`, must not be `None`")

        self._authentication = authentication

    @property
    def authentication_configuration(self):
        """Gets the authentication_configuration of this ListWebhookItemDefinition.


        :return: The authentication_configuration of this ListWebhookItemDefinition.
        :rtype: WebhookDefinitionAuthenticationConfiguration
        """
        return self._authentication_configuration

    @authentication_configuration.setter
    def authentication_configuration(self, authentication_configuration):
        """Sets the authentication_configuration of this ListWebhookItemDefinition.


        :param authentication_configuration: The authentication_configuration of this ListWebhookItemDefinition.
        :type authentication_configuration: WebhookDefinitionAuthenticationConfiguration
        """
        if authentication_configuration is None:
            raise ValueError("Invalid value for `authentication_configuration`, must not be `None`")

        self._authentication_configuration = authentication_configuration
