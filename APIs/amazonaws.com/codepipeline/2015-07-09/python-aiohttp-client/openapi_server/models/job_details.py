# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.job_details_data import JobDetailsData
from openapi_server import util


class JobDetails(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, id: str=None, data: JobDetailsData=None, account_id: str=None):
        """JobDetails - a model defined in OpenAPI

        :param id: The id of this JobDetails.
        :param data: The data of this JobDetails.
        :param account_id: The account_id of this JobDetails.
        """
        self.openapi_types = {
            'id': str,
            'data': JobDetailsData,
            'account_id': str
        }

        self.attribute_map = {
            'id': 'id',
            'data': 'data',
            'account_id': 'accountId'
        }

        self._id = id
        self._data = data
        self._account_id = account_id

    @classmethod
    def from_dict(cls, dikt: dict) -> 'JobDetails':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The JobDetails of this JobDetails.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def id(self):
        """Gets the id of this JobDetails.


        :return: The id of this JobDetails.
        :rtype: str
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this JobDetails.


        :param id: The id of this JobDetails.
        :type id: str
        """

        self._id = id

    @property
    def data(self):
        """Gets the data of this JobDetails.


        :return: The data of this JobDetails.
        :rtype: JobDetailsData
        """
        return self._data

    @data.setter
    def data(self, data):
        """Sets the data of this JobDetails.


        :param data: The data of this JobDetails.
        :type data: JobDetailsData
        """

        self._data = data

    @property
    def account_id(self):
        """Gets the account_id of this JobDetails.


        :return: The account_id of this JobDetails.
        :rtype: str
        """
        return self._account_id

    @account_id.setter
    def account_id(self, account_id):
        """Sets the account_id of this JobDetails.


        :param account_id: The account_id of this JobDetails.
        :type account_id: str
        """

        self._account_id = account_id
