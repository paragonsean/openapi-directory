# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.create_custom_action_type_output_action_type import CreateCustomActionTypeOutputActionType
from openapi_server import util


class CreateCustomActionTypeOutput(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, action_type: CreateCustomActionTypeOutputActionType=None, tags: List=None):
        """CreateCustomActionTypeOutput - a model defined in OpenAPI

        :param action_type: The action_type of this CreateCustomActionTypeOutput.
        :param tags: The tags of this CreateCustomActionTypeOutput.
        """
        self.openapi_types = {
            'action_type': CreateCustomActionTypeOutputActionType,
            'tags': List
        }

        self.attribute_map = {
            'action_type': 'actionType',
            'tags': 'tags'
        }

        self._action_type = action_type
        self._tags = tags

    @classmethod
    def from_dict(cls, dikt: dict) -> 'CreateCustomActionTypeOutput':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The CreateCustomActionTypeOutput of this CreateCustomActionTypeOutput.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def action_type(self):
        """Gets the action_type of this CreateCustomActionTypeOutput.


        :return: The action_type of this CreateCustomActionTypeOutput.
        :rtype: CreateCustomActionTypeOutputActionType
        """
        return self._action_type

    @action_type.setter
    def action_type(self, action_type):
        """Sets the action_type of this CreateCustomActionTypeOutput.


        :param action_type: The action_type of this CreateCustomActionTypeOutput.
        :type action_type: CreateCustomActionTypeOutputActionType
        """
        if action_type is None:
            raise ValueError("Invalid value for `action_type`, must not be `None`")

        self._action_type = action_type

    @property
    def tags(self):
        """Gets the tags of this CreateCustomActionTypeOutput.


        :return: The tags of this CreateCustomActionTypeOutput.
        :rtype: List
        """
        return self._tags

    @tags.setter
    def tags(self, tags):
        """Sets the tags of this CreateCustomActionTypeOutput.


        :param tags: The tags of this CreateCustomActionTypeOutput.
        :type tags: List
        """

        self._tags = tags
