# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.failure_type import FailureType
from openapi_server import util


class PutJobFailureResultInputFailureDetails(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, type: FailureType=None, message: str=None, external_execution_id: str=None):
        """PutJobFailureResultInputFailureDetails - a model defined in OpenAPI

        :param type: The type of this PutJobFailureResultInputFailureDetails.
        :param message: The message of this PutJobFailureResultInputFailureDetails.
        :param external_execution_id: The external_execution_id of this PutJobFailureResultInputFailureDetails.
        """
        self.openapi_types = {
            'type': FailureType,
            'message': str,
            'external_execution_id': str
        }

        self.attribute_map = {
            'type': 'type',
            'message': 'message',
            'external_execution_id': 'externalExecutionId'
        }

        self._type = type
        self._message = message
        self._external_execution_id = external_execution_id

    @classmethod
    def from_dict(cls, dikt: dict) -> 'PutJobFailureResultInputFailureDetails':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The PutJobFailureResultInput_failureDetails of this PutJobFailureResultInputFailureDetails.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def type(self):
        """Gets the type of this PutJobFailureResultInputFailureDetails.


        :return: The type of this PutJobFailureResultInputFailureDetails.
        :rtype: FailureType
        """
        return self._type

    @type.setter
    def type(self, type):
        """Sets the type of this PutJobFailureResultInputFailureDetails.


        :param type: The type of this PutJobFailureResultInputFailureDetails.
        :type type: FailureType
        """
        if type is None:
            raise ValueError("Invalid value for `type`, must not be `None`")

        self._type = type

    @property
    def message(self):
        """Gets the message of this PutJobFailureResultInputFailureDetails.


        :return: The message of this PutJobFailureResultInputFailureDetails.
        :rtype: str
        """
        return self._message

    @message.setter
    def message(self, message):
        """Sets the message of this PutJobFailureResultInputFailureDetails.


        :param message: The message of this PutJobFailureResultInputFailureDetails.
        :type message: str
        """
        if message is None:
            raise ValueError("Invalid value for `message`, must not be `None`")

        self._message = message

    @property
    def external_execution_id(self):
        """Gets the external_execution_id of this PutJobFailureResultInputFailureDetails.


        :return: The external_execution_id of this PutJobFailureResultInputFailureDetails.
        :rtype: str
        """
        return self._external_execution_id

    @external_execution_id.setter
    def external_execution_id(self, external_execution_id):
        """Sets the external_execution_id of this PutJobFailureResultInputFailureDetails.


        :param external_execution_id: The external_execution_id of this PutJobFailureResultInputFailureDetails.
        :type external_execution_id: str
        """

        self._external_execution_id = external_execution_id
