# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.create_pipeline_output_pipeline import CreatePipelineOutputPipeline
from openapi_server import util


class CreatePipelineInput(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, pipeline: CreatePipelineOutputPipeline=None, tags: List=None):
        """CreatePipelineInput - a model defined in OpenAPI

        :param pipeline: The pipeline of this CreatePipelineInput.
        :param tags: The tags of this CreatePipelineInput.
        """
        self.openapi_types = {
            'pipeline': CreatePipelineOutputPipeline,
            'tags': List
        }

        self.attribute_map = {
            'pipeline': 'pipeline',
            'tags': 'tags'
        }

        self._pipeline = pipeline
        self._tags = tags

    @classmethod
    def from_dict(cls, dikt: dict) -> 'CreatePipelineInput':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The CreatePipelineInput of this CreatePipelineInput.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def pipeline(self):
        """Gets the pipeline of this CreatePipelineInput.


        :return: The pipeline of this CreatePipelineInput.
        :rtype: CreatePipelineOutputPipeline
        """
        return self._pipeline

    @pipeline.setter
    def pipeline(self, pipeline):
        """Sets the pipeline of this CreatePipelineInput.


        :param pipeline: The pipeline of this CreatePipelineInput.
        :type pipeline: CreatePipelineOutputPipeline
        """
        if pipeline is None:
            raise ValueError("Invalid value for `pipeline`, must not be `None`")

        self._pipeline = pipeline

    @property
    def tags(self):
        """Gets the tags of this CreatePipelineInput.


        :return: The tags of this CreatePipelineInput.
        :rtype: List
        """
        return self._tags

    @tags.setter
    def tags(self, tags):
        """Sets the tags of this CreatePipelineInput.


        :param tags: The tags of this CreatePipelineInput.
        :type tags: List
        """

        self._tags = tags
