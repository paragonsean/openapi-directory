# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.list_webhook_item_definition import ListWebhookItemDefinition
from openapi_server import util


class ListWebhookItem(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, definition: ListWebhookItemDefinition=None, url: str=None, error_message: str=None, error_code: str=None, last_triggered: datetime=None, arn: str=None, tags: List=None):
        """ListWebhookItem - a model defined in OpenAPI

        :param definition: The definition of this ListWebhookItem.
        :param url: The url of this ListWebhookItem.
        :param error_message: The error_message of this ListWebhookItem.
        :param error_code: The error_code of this ListWebhookItem.
        :param last_triggered: The last_triggered of this ListWebhookItem.
        :param arn: The arn of this ListWebhookItem.
        :param tags: The tags of this ListWebhookItem.
        """
        self.openapi_types = {
            'definition': ListWebhookItemDefinition,
            'url': str,
            'error_message': str,
            'error_code': str,
            'last_triggered': datetime,
            'arn': str,
            'tags': List
        }

        self.attribute_map = {
            'definition': 'definition',
            'url': 'url',
            'error_message': 'errorMessage',
            'error_code': 'errorCode',
            'last_triggered': 'lastTriggered',
            'arn': 'arn',
            'tags': 'tags'
        }

        self._definition = definition
        self._url = url
        self._error_message = error_message
        self._error_code = error_code
        self._last_triggered = last_triggered
        self._arn = arn
        self._tags = tags

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ListWebhookItem':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ListWebhookItem of this ListWebhookItem.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def definition(self):
        """Gets the definition of this ListWebhookItem.


        :return: The definition of this ListWebhookItem.
        :rtype: ListWebhookItemDefinition
        """
        return self._definition

    @definition.setter
    def definition(self, definition):
        """Sets the definition of this ListWebhookItem.


        :param definition: The definition of this ListWebhookItem.
        :type definition: ListWebhookItemDefinition
        """
        if definition is None:
            raise ValueError("Invalid value for `definition`, must not be `None`")

        self._definition = definition

    @property
    def url(self):
        """Gets the url of this ListWebhookItem.


        :return: The url of this ListWebhookItem.
        :rtype: str
        """
        return self._url

    @url.setter
    def url(self, url):
        """Sets the url of this ListWebhookItem.


        :param url: The url of this ListWebhookItem.
        :type url: str
        """
        if url is None:
            raise ValueError("Invalid value for `url`, must not be `None`")

        self._url = url

    @property
    def error_message(self):
        """Gets the error_message of this ListWebhookItem.


        :return: The error_message of this ListWebhookItem.
        :rtype: str
        """
        return self._error_message

    @error_message.setter
    def error_message(self, error_message):
        """Sets the error_message of this ListWebhookItem.


        :param error_message: The error_message of this ListWebhookItem.
        :type error_message: str
        """

        self._error_message = error_message

    @property
    def error_code(self):
        """Gets the error_code of this ListWebhookItem.


        :return: The error_code of this ListWebhookItem.
        :rtype: str
        """
        return self._error_code

    @error_code.setter
    def error_code(self, error_code):
        """Sets the error_code of this ListWebhookItem.


        :param error_code: The error_code of this ListWebhookItem.
        :type error_code: str
        """

        self._error_code = error_code

    @property
    def last_triggered(self):
        """Gets the last_triggered of this ListWebhookItem.


        :return: The last_triggered of this ListWebhookItem.
        :rtype: datetime
        """
        return self._last_triggered

    @last_triggered.setter
    def last_triggered(self, last_triggered):
        """Sets the last_triggered of this ListWebhookItem.


        :param last_triggered: The last_triggered of this ListWebhookItem.
        :type last_triggered: datetime
        """

        self._last_triggered = last_triggered

    @property
    def arn(self):
        """Gets the arn of this ListWebhookItem.


        :return: The arn of this ListWebhookItem.
        :rtype: str
        """
        return self._arn

    @arn.setter
    def arn(self, arn):
        """Sets the arn of this ListWebhookItem.


        :param arn: The arn of this ListWebhookItem.
        :type arn: str
        """

        self._arn = arn

    @property
    def tags(self):
        """Gets the tags of this ListWebhookItem.


        :return: The tags of this ListWebhookItem.
        :rtype: List
        """
        return self._tags

    @tags.setter
    def tags(self, tags):
        """Sets the tags of this ListWebhookItem.


        :param tags: The tags of this ListWebhookItem.
        :type tags: List
        """

        self._tags = tags
