openapi: 3.0.0
info:
  contact:
    email: mike.ralphson@gmail.com
    name: Mike Ralphson
    url: https://github.com/mermade/aws2openapi
    x-twitter: PermittedSoc
  description: "<fullname>CodePipeline</fullname> <p> <b>Overview</b> </p> <p>This\
    \ is the CodePipeline API Reference. This guide provides descriptions of the actions\
    \ and data types for CodePipeline. Some functionality for your pipeline can only\
    \ be configured through the API. For more information, see the <a href=\"https://docs.aws.amazon.com/codepipeline/latest/userguide/welcome.html\"\
    >CodePipeline User Guide</a>.</p> <p>You can use the CodePipeline API to work\
    \ with pipelines, stages, actions, and transitions.</p> <p> <i>Pipelines</i> are\
    \ models of automated release processes. Each pipeline is uniquely named, and\
    \ consists of stages, actions, and transitions. </p> <p>You can work with pipelines\
    \ by calling:</p> <ul> <li> <p> <a>CreatePipeline</a>, which creates a uniquely\
    \ named pipeline.</p> </li> <li> <p> <a>DeletePipeline</a>, which deletes the\
    \ specified pipeline.</p> </li> <li> <p> <a>GetPipeline</a>, which returns information\
    \ about the pipeline structure and pipeline metadata, including the pipeline Amazon\
    \ Resource Name (ARN).</p> </li> <li> <p> <a>GetPipelineExecution</a>, which returns\
    \ information about a specific execution of a pipeline.</p> </li> <li> <p> <a>GetPipelineState</a>,\
    \ which returns information about the current state of the stages and actions\
    \ of a pipeline.</p> </li> <li> <p> <a>ListActionExecutions</a>, which returns\
    \ action-level details for past executions. The details include full stage and\
    \ action-level details, including individual action duration, status, any errors\
    \ that occurred during the execution, and input and output artifact location details.</p>\
    \ </li> <li> <p> <a>ListPipelines</a>, which gets a summary of all of the pipelines\
    \ associated with your account.</p> </li> <li> <p> <a>ListPipelineExecutions</a>,\
    \ which gets a summary of the most recent executions for a pipeline.</p> </li>\
    \ <li> <p> <a>StartPipelineExecution</a>, which runs the most recent revision\
    \ of an artifact through the pipeline.</p> </li> <li> <p> <a>StopPipelineExecution</a>,\
    \ which stops the specified pipeline execution from continuing through the pipeline.</p>\
    \ </li> <li> <p> <a>UpdatePipeline</a>, which updates a pipeline with edits or\
    \ changes to the structure of the pipeline.</p> </li> </ul> <p>Pipelines include\
    \ <i>stages</i>. Each stage contains one or more actions that must complete before\
    \ the next stage begins. A stage results in success or failure. If a stage fails,\
    \ the pipeline stops at that stage and remains stopped until either a new version\
    \ of an artifact appears in the source location, or a user takes action to rerun\
    \ the most recent artifact through the pipeline. You can call <a>GetPipelineState</a>,\
    \ which displays the status of a pipeline, including the status of stages in the\
    \ pipeline, or <a>GetPipeline</a>, which returns the entire structure of the pipeline,\
    \ including the stages of that pipeline. For more information about the structure\
    \ of stages and actions, see <a href=\"https://docs.aws.amazon.com/codepipeline/latest/userguide/pipeline-structure.html\"\
    >CodePipeline Pipeline Structure Reference</a>.</p> <p>Pipeline stages include\
    \ <i>actions</i> that are categorized into categories such as source or build\
    \ actions performed in a stage of a pipeline. For example, you can use a source\
    \ action to import artifacts into a pipeline from a source such as Amazon S3.\
    \ Like stages, you do not work with actions directly in most cases, but you do\
    \ define and interact with actions when working with pipeline operations such\
    \ as <a>CreatePipeline</a> and <a>GetPipelineState</a>. Valid action categories\
    \ are:</p> <ul> <li> <p>Source</p> </li> <li> <p>Build</p> </li> <li> <p>Test</p>\
    \ </li> <li> <p>Deploy</p> </li> <li> <p>Approval</p> </li> <li> <p>Invoke</p>\
    \ </li> </ul> <p>Pipelines also include <i>transitions</i>, which allow the transition\
    \ of artifacts from one stage to the next in a pipeline after the actions in one\
    \ stage complete.</p> <p>You can work with transitions by calling:</p> <ul> <li>\
    \ <p> <a>DisableStageTransition</a>, which prevents artifacts from transitioning\
    \ to the next stage in a pipeline.</p> </li> <li> <p> <a>EnableStageTransition</a>,\
    \ which enables transition of artifacts between stages in a pipeline. </p> </li>\
    \ </ul> <p> <b>Using the API to integrate with CodePipeline</b> </p> <p>For third-party\
    \ integrators or developers who want to create their own integrations with CodePipeline,\
    \ the expected sequence varies from the standard API user. To integrate with CodePipeline,\
    \ developers need to work with the following items:</p> <p> <b>Jobs</b>, which\
    \ are instances of an action. For example, a job for a source action might import\
    \ a revision of an artifact from a source. </p> <p>You can work with jobs by calling:</p>\
    \ <ul> <li> <p> <a>AcknowledgeJob</a>, which confirms whether a job worker has\
    \ received the specified job.</p> </li> <li> <p> <a>GetJobDetails</a>, which returns\
    \ the details of a job.</p> </li> <li> <p> <a>PollForJobs</a>, which determines\
    \ whether there are any jobs to act on.</p> </li> <li> <p> <a>PutJobFailureResult</a>,\
    \ which provides details of a job failure. </p> </li> <li> <p> <a>PutJobSuccessResult</a>,\
    \ which provides details of a job success.</p> </li> </ul> <p> <b>Third party\
    \ jobs</b>, which are instances of an action created by a partner action and integrated\
    \ into CodePipeline. Partner actions are created by members of the Amazon Web\
    \ Services Partner Network.</p> <p>You can work with third party jobs by calling:</p>\
    \ <ul> <li> <p> <a>AcknowledgeThirdPartyJob</a>, which confirms whether a job\
    \ worker has received the specified job.</p> </li> <li> <p> <a>GetThirdPartyJobDetails</a>,\
    \ which requests the details of a job for a partner action.</p> </li> <li> <p>\
    \ <a>PollForThirdPartyJobs</a>, which determines whether there are any jobs to\
    \ act on. </p> </li> <li> <p> <a>PutThirdPartyJobFailureResult</a>, which provides\
    \ details of a job failure.</p> </li> <li> <p> <a>PutThirdPartyJobSuccessResult</a>,\
    \ which provides details of a job success.</p> </li> </ul>"
  license:
    name: Apache 2.0 License
    url: http://www.apache.org/licenses/
  termsOfService: https://aws.amazon.com/service-terms/
  title: AWS CodePipeline
  version: 2015-07-09
  x-release: v4
  x-logo:
    url: https://twitter.com/awscloud/profile_image?size=original
    backgroundColor: '#FFFFFF'
  x-providerName: amazonaws.com
  x-serviceName: codepipeline
  x-origin:
  - contentType: application/json
    url: https://raw.githubusercontent.com/aws/aws-sdk-js/master/apis/codepipeline-2015-07-09.normal.json
    converter:
      url: https://github.com/mermade/aws2openapi
      version: 1.0.0
    x-apisguru-driver: external
  x-apiClientRegistration:
    url: https://portal.aws.amazon.com/gp/aws/developer/registration/index.html?nc2=h_ct
  x-apisguru-categories:
  - cloud
  x-preferred: true
externalDocs:
  description: Amazon Web Services documentation
  url: https://docs.aws.amazon.com/codepipeline/
servers:
- description: The CodePipeline multi-region endpoint
  url: "http://codepipeline.{region}.amazonaws.com"
  variables:
    region:
      default: us-east-1
      description: The AWS region
      enum:
      - us-east-1
      - us-east-2
      - us-west-1
      - us-west-2
      - us-gov-west-1
      - us-gov-east-1
      - ca-central-1
      - eu-north-1
      - eu-west-1
      - eu-west-2
      - eu-west-3
      - eu-central-1
      - eu-south-1
      - af-south-1
      - ap-northeast-1
      - ap-northeast-2
      - ap-northeast-3
      - ap-southeast-1
      - ap-southeast-2
      - ap-east-1
      - ap-south-1
      - sa-east-1
      - me-south-1
- description: The CodePipeline multi-region endpoint
  url: "https://codepipeline.{region}.amazonaws.com"
  variables:
    region:
      default: us-east-1
      description: The AWS region
      enum:
      - us-east-1
      - us-east-2
      - us-west-1
      - us-west-2
      - us-gov-west-1
      - us-gov-east-1
      - ca-central-1
      - eu-north-1
      - eu-west-1
      - eu-west-2
      - eu-west-3
      - eu-central-1
      - eu-south-1
      - af-south-1
      - ap-northeast-1
      - ap-northeast-2
      - ap-northeast-3
      - ap-southeast-1
      - ap-southeast-2
      - ap-east-1
      - ap-south-1
      - sa-east-1
      - me-south-1
- description: The CodePipeline endpoint for China (Beijing) and China (Ningxia)
  url: "http://codepipeline.{region}.amazonaws.com.cn"
  variables:
    region:
      default: cn-north-1
      description: The AWS region
      enum:
      - cn-north-1
      - cn-northwest-1
- description: The CodePipeline endpoint for China (Beijing) and China (Ningxia)
  url: "https://codepipeline.{region}.amazonaws.com.cn"
  variables:
    region:
      default: cn-north-1
      description: The AWS region
      enum:
      - cn-north-1
      - cn-northwest-1
security:
- hmac: []
paths:
  /#X-Amz-Target=CodePipeline_20150709.AcknowledgeJob:
    post:
      description: Returns information about a specified job and whether that job
        has been received by the job worker. Used for custom actions only.
      operationId: acknowledge_job
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - CodePipeline_20150709.AcknowledgeJob
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AcknowledgeJobInput'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AcknowledgeJobOutput'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidNonceException'
          description: InvalidNonceException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JobNotFoundException'
          description: JobNotFoundException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /#X-Amz-Target=CodePipeline_20150709.AcknowledgeThirdPartyJob:
    post:
      description: Confirms a job worker has received the specified job. Used for
        partner actions only.
      operationId: acknowledge_third_party_job
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - CodePipeline_20150709.AcknowledgeThirdPartyJob
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AcknowledgeThirdPartyJobInput'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AcknowledgeThirdPartyJobOutput'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidNonceException'
          description: InvalidNonceException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JobNotFoundException'
          description: JobNotFoundException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidClientTokenException'
          description: InvalidClientTokenException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /#X-Amz-Target=CodePipeline_20150709.CreateCustomActionType:
    post:
      description: Creates a new custom action that can be used in all pipelines associated
        with the Amazon Web Services account. Only used for custom actions.
      operationId: create_custom_action_type
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - CodePipeline_20150709.CreateCustomActionType
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateCustomActionTypeInput'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateCustomActionTypeOutput'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
          description: LimitExceededException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyTagsException'
          description: TooManyTagsException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidTagsException'
          description: InvalidTagsException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConcurrentModificationException'
          description: ConcurrentModificationException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /#X-Amz-Target=CodePipeline_20150709.CreatePipeline:
    post:
      description: "<p>Creates a pipeline.</p> <note> <p>In the pipeline structure,\
        \ you must include either <code>artifactStore</code> or <code>artifactStores</code>\
        \ in your pipeline, but you cannot use both. If you create a cross-region\
        \ action in your pipeline, you must use <code>artifactStores</code>.</p> </note>"
      operationId: create_pipeline
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - CodePipeline_20150709.CreatePipeline
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreatePipelineInput'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreatePipelineOutput'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PipelineNameInUseException'
          description: PipelineNameInUseException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidStageDeclarationException'
          description: InvalidStageDeclarationException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidActionDeclarationException'
          description: InvalidActionDeclarationException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidBlockerDeclarationException'
          description: InvalidBlockerDeclarationException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidStructureException'
          description: InvalidStructureException
        "486":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
          description: LimitExceededException
        "487":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyTagsException'
          description: TooManyTagsException
        "488":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidTagsException'
          description: InvalidTagsException
        "489":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConcurrentModificationException'
          description: ConcurrentModificationException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /#X-Amz-Target=CodePipeline_20150709.DeleteCustomActionType:
    post:
      description: "<p>Marks a custom action as deleted. <code>PollForJobs</code>\
        \ for the custom action fails after the action is marked for deletion. Used\
        \ for custom actions only.</p> <important> <p>To re-create a custom action\
        \ after it has been deleted you must use a string in the version field that\
        \ has never been used before. This string can be an incremented version number,\
        \ for example. To restore a deleted custom action, use a JSON file that is\
        \ identical to the deleted action, including the original string in the version\
        \ field.</p> </important>"
      operationId: delete_custom_action_type
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - CodePipeline_20150709.DeleteCustomActionType
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeleteCustomActionTypeInput'
        required: true
        x-body-name: body
      responses:
        "200":
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConcurrentModificationException'
          description: ConcurrentModificationException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /#X-Amz-Target=CodePipeline_20150709.DeletePipeline:
    post:
      description: Deletes the specified pipeline.
      operationId: delete_pipeline
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - CodePipeline_20150709.DeletePipeline
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeletePipelineInput'
        required: true
        x-body-name: body
      responses:
        "200":
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConcurrentModificationException'
          description: ConcurrentModificationException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /#X-Amz-Target=CodePipeline_20150709.DeleteWebhook:
    post:
      description: "Deletes a previously created webhook by name. Deleting the webhook\
        \ stops CodePipeline from starting a pipeline every time an external event\
        \ occurs. The API returns successfully when trying to delete a webhook that\
        \ is already deleted. If a deleted webhook is re-created by calling PutWebhook\
        \ with the same name, it will have a different URL."
      operationId: delete_webhook
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - CodePipeline_20150709.DeleteWebhook
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeleteWebhookInput'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteWebhookOutput'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConcurrentModificationException'
          description: ConcurrentModificationException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /#X-Amz-Target=CodePipeline_20150709.DeregisterWebhookWithThirdParty:
    post:
      description: Removes the connection between the webhook that was created by
        CodePipeline and the external tool with events to be detected. Currently supported
        only for webhooks that target an action type of GitHub.
      operationId: deregister_webhook_with_third_party
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - CodePipeline_20150709.DeregisterWebhookWithThirdParty
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeregisterWebhookWithThirdPartyInput'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeregisterWebhookWithThirdPartyOutput'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WebhookNotFoundException'
          description: WebhookNotFoundException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /#X-Amz-Target=CodePipeline_20150709.DisableStageTransition:
    post:
      description: Prevents artifacts in a pipeline from transitioning to the next
        stage in the pipeline.
      operationId: disable_stage_transition
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - CodePipeline_20150709.DisableStageTransition
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DisableStageTransitionInput'
        required: true
        x-body-name: body
      responses:
        "200":
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PipelineNotFoundException'
          description: PipelineNotFoundException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StageNotFoundException'
          description: StageNotFoundException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /#X-Amz-Target=CodePipeline_20150709.EnableStageTransition:
    post:
      description: Enables artifacts in a pipeline to transition to a stage in a pipeline.
      operationId: enable_stage_transition
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - CodePipeline_20150709.EnableStageTransition
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EnableStageTransitionInput'
        required: true
        x-body-name: body
      responses:
        "200":
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PipelineNotFoundException'
          description: PipelineNotFoundException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StageNotFoundException'
          description: StageNotFoundException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /#X-Amz-Target=CodePipeline_20150709.GetActionType:
    post:
      description: "Returns information about an action type created for an external\
        \ provider, where the action is to be used by customers of the external provider.\
        \ The action can be created with any supported integration model."
      operationId: get_action_type
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - CodePipeline_20150709.GetActionType
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetActionTypeInput'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetActionTypeOutput'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ActionTypeNotFoundException'
          description: ActionTypeNotFoundException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /#X-Amz-Target=CodePipeline_20150709.GetJobDetails:
    post:
      description: "<p>Returns information about a job. Used for custom actions only.</p>\
        \ <important> <p>When this API is called, CodePipeline returns temporary credentials\
        \ for the S3 bucket used to store artifacts for the pipeline, if the action\
        \ requires access to that S3 bucket for input or output artifacts. This API\
        \ also returns any secret values defined for the action.</p> </important>"
      operationId: get_job_details
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - CodePipeline_20150709.GetJobDetails
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetJobDetailsInput'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetJobDetailsOutput'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JobNotFoundException'
          description: JobNotFoundException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /#X-Amz-Target=CodePipeline_20150709.GetPipeline:
    post:
      description: "Returns the metadata, structure, stages, and actions of a pipeline.\
        \ Can be used to return the entire structure of a pipeline in JSON format,\
        \ which can then be modified and used to update the pipeline structure with\
        \ <a>UpdatePipeline</a>."
      operationId: get_pipeline
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - CodePipeline_20150709.GetPipeline
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetPipelineInput'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetPipelineOutput'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PipelineNotFoundException'
          description: PipelineNotFoundException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PipelineVersionNotFoundException'
          description: PipelineVersionNotFoundException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /#X-Amz-Target=CodePipeline_20150709.GetPipelineExecution:
    post:
      description: "Returns information about an execution of a pipeline, including\
        \ details about artifacts, the pipeline execution ID, and the name, version,\
        \ and status of the pipeline."
      operationId: get_pipeline_execution
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - CodePipeline_20150709.GetPipelineExecution
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetPipelineExecutionInput'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetPipelineExecutionOutput'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PipelineNotFoundException'
          description: PipelineNotFoundException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PipelineExecutionNotFoundException'
          description: PipelineExecutionNotFoundException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /#X-Amz-Target=CodePipeline_20150709.GetPipelineState:
    post:
      description: "<p>Returns information about the state of a pipeline, including\
        \ the stages and actions.</p> <note> <p>Values returned in the <code>revisionId</code>\
        \ and <code>revisionUrl</code> fields indicate the source revision information,\
        \ such as the commit ID, for the current state.</p> </note>"
      operationId: get_pipeline_state
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - CodePipeline_20150709.GetPipelineState
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetPipelineStateInput'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetPipelineStateOutput'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PipelineNotFoundException'
          description: PipelineNotFoundException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /#X-Amz-Target=CodePipeline_20150709.GetThirdPartyJobDetails:
    post:
      description: "<p>Requests the details of a job for a third party action. Used\
        \ for partner actions only.</p> <important> <p>When this API is called, CodePipeline\
        \ returns temporary credentials for the S3 bucket used to store artifacts\
        \ for the pipeline, if the action requires access to that S3 bucket for input\
        \ or output artifacts. This API also returns any secret values defined for\
        \ the action.</p> </important>"
      operationId: get_third_party_job_details
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - CodePipeline_20150709.GetThirdPartyJobDetails
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetThirdPartyJobDetailsInput'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetThirdPartyJobDetailsOutput'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JobNotFoundException'
          description: JobNotFoundException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidClientTokenException'
          description: InvalidClientTokenException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidJobException'
          description: InvalidJobException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /#X-Amz-Target=CodePipeline_20150709.ListActionExecutions:
    post:
      description: Lists the action executions that have occurred in a pipeline.
      operationId: list_action_executions
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: Pagination limit
        explode: true
        in: query
        name: maxResults
        required: false
        schema:
          type: string
        style: form
      - description: Pagination token
        explode: true
        in: query
        name: nextToken
        required: false
        schema:
          type: string
        style: form
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - CodePipeline_20150709.ListActionExecutions
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ListActionExecutionsInput'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListActionExecutionsOutput'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PipelineNotFoundException'
          description: PipelineNotFoundException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidNextTokenException'
          description: InvalidNextTokenException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PipelineExecutionNotFoundException'
          description: PipelineExecutionNotFoundException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /#X-Amz-Target=CodePipeline_20150709.ListActionTypes:
    post:
      description: Gets a summary of all CodePipeline action types associated with
        your account.
      operationId: list_action_types
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: Pagination token
        explode: true
        in: query
        name: nextToken
        required: false
        schema:
          type: string
        style: form
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - CodePipeline_20150709.ListActionTypes
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ListActionTypesInput'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListActionTypesOutput'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidNextTokenException'
          description: InvalidNextTokenException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /#X-Amz-Target=CodePipeline_20150709.ListPipelineExecutions:
    post:
      description: Gets a summary of the most recent executions for a pipeline.
      operationId: list_pipeline_executions
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: Pagination limit
        explode: true
        in: query
        name: maxResults
        required: false
        schema:
          type: string
        style: form
      - description: Pagination token
        explode: true
        in: query
        name: nextToken
        required: false
        schema:
          type: string
        style: form
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - CodePipeline_20150709.ListPipelineExecutions
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ListPipelineExecutionsInput'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListPipelineExecutionsOutput'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PipelineNotFoundException'
          description: PipelineNotFoundException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidNextTokenException'
          description: InvalidNextTokenException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /#X-Amz-Target=CodePipeline_20150709.ListPipelines:
    post:
      description: Gets a summary of all of the pipelines associated with your account.
      operationId: list_pipelines
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: Pagination limit
        explode: true
        in: query
        name: maxResults
        required: false
        schema:
          type: string
        style: form
      - description: Pagination token
        explode: true
        in: query
        name: nextToken
        required: false
        schema:
          type: string
        style: form
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - CodePipeline_20150709.ListPipelines
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ListPipelinesInput'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListPipelinesOutput'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidNextTokenException'
          description: InvalidNextTokenException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /#X-Amz-Target=CodePipeline_20150709.ListTagsForResource:
    post:
      description: Gets the set of key-value pairs (metadata) that are used to manage
        the resource.
      operationId: list_tags_for_resource
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: Pagination limit
        explode: true
        in: query
        name: maxResults
        required: false
        schema:
          type: string
        style: form
      - description: Pagination token
        explode: true
        in: query
        name: nextToken
        required: false
        schema:
          type: string
        style: form
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - CodePipeline_20150709.ListTagsForResource
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ListTagsForResourceInput'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListTagsForResourceOutput'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidNextTokenException'
          description: InvalidNextTokenException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidArnException'
          description: InvalidArnException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /#X-Amz-Target=CodePipeline_20150709.ListWebhooks:
    post:
      description: Gets a listing of all the webhooks in this Amazon Web Services
        Region for this account. The output lists all webhooks and includes the webhook
        URL and ARN and the configuration for each webhook.
      operationId: list_webhooks
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: Pagination limit
        explode: true
        in: query
        name: MaxResults
        required: false
        schema:
          type: string
        style: form
      - description: Pagination token
        explode: true
        in: query
        name: NextToken
        required: false
        schema:
          type: string
        style: form
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - CodePipeline_20150709.ListWebhooks
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ListWebhooksInput'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListWebhooksOutput'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidNextTokenException'
          description: InvalidNextTokenException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /#X-Amz-Target=CodePipeline_20150709.PollForJobs:
    post:
      description: "<p>Returns information about any jobs for CodePipeline to act\
        \ on. <code>PollForJobs</code> is valid only for action types with \"Custom\"\
        \ in the owner field. If the action type contains <code>AWS</code> or <code>ThirdParty</code>\
        \ in the owner field, the <code>PollForJobs</code> action returns an error.</p>\
        \ <important> <p>When this API is called, CodePipeline returns temporary credentials\
        \ for the S3 bucket used to store artifacts for the pipeline, if the action\
        \ requires access to that S3 bucket for input or output artifacts. This API\
        \ also returns any secret values defined for the action.</p> </important>"
      operationId: poll_for_jobs
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - CodePipeline_20150709.PollForJobs
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PollForJobsInput'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PollForJobsOutput'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ActionTypeNotFoundException'
          description: ActionTypeNotFoundException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /#X-Amz-Target=CodePipeline_20150709.PollForThirdPartyJobs:
    post:
      description: "<p>Determines whether there are any third party jobs for a job\
        \ worker to act on. Used for partner actions only.</p> <important> <p>When\
        \ this API is called, CodePipeline returns temporary credentials for the S3\
        \ bucket used to store artifacts for the pipeline, if the action requires\
        \ access to that S3 bucket for input or output artifacts.</p> </important>"
      operationId: poll_for_third_party_jobs
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - CodePipeline_20150709.PollForThirdPartyJobs
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PollForThirdPartyJobsInput'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PollForThirdPartyJobsOutput'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ActionTypeNotFoundException'
          description: ActionTypeNotFoundException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /#X-Amz-Target=CodePipeline_20150709.PutActionRevision:
    post:
      description: Provides information to CodePipeline about new revisions to a source.
      operationId: put_action_revision
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - CodePipeline_20150709.PutActionRevision
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PutActionRevisionInput'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PutActionRevisionOutput'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PipelineNotFoundException'
          description: PipelineNotFoundException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StageNotFoundException'
          description: StageNotFoundException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ActionNotFoundException'
          description: ActionNotFoundException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /#X-Amz-Target=CodePipeline_20150709.PutApprovalResult:
    post:
      description: Provides the response to a manual approval request to CodePipeline.
        Valid responses include Approved and Rejected.
      operationId: put_approval_result
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - CodePipeline_20150709.PutApprovalResult
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PutApprovalResultInput'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PutApprovalResultOutput'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidApprovalTokenException'
          description: InvalidApprovalTokenException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApprovalAlreadyCompletedException'
          description: ApprovalAlreadyCompletedException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PipelineNotFoundException'
          description: PipelineNotFoundException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StageNotFoundException'
          description: StageNotFoundException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ActionNotFoundException'
          description: ActionNotFoundException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /#X-Amz-Target=CodePipeline_20150709.PutJobFailureResult:
    post:
      description: Represents the failure of a job as returned to the pipeline by
        a job worker. Used for custom actions only.
      operationId: put_job_failure_result
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - CodePipeline_20150709.PutJobFailureResult
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PutJobFailureResultInput'
        required: true
        x-body-name: body
      responses:
        "200":
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JobNotFoundException'
          description: JobNotFoundException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidJobStateException'
          description: InvalidJobStateException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /#X-Amz-Target=CodePipeline_20150709.PutJobSuccessResult:
    post:
      description: Represents the success of a job as returned to the pipeline by
        a job worker. Used for custom actions only.
      operationId: put_job_success_result
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - CodePipeline_20150709.PutJobSuccessResult
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PutJobSuccessResultInput'
        required: true
        x-body-name: body
      responses:
        "200":
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JobNotFoundException'
          description: JobNotFoundException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidJobStateException'
          description: InvalidJobStateException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OutputVariablesSizeExceededException'
          description: OutputVariablesSizeExceededException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /#X-Amz-Target=CodePipeline_20150709.PutThirdPartyJobFailureResult:
    post:
      description: Represents the failure of a third party job as returned to the
        pipeline by a job worker. Used for partner actions only.
      operationId: put_third_party_job_failure_result
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - CodePipeline_20150709.PutThirdPartyJobFailureResult
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PutThirdPartyJobFailureResultInput'
        required: true
        x-body-name: body
      responses:
        "200":
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JobNotFoundException'
          description: JobNotFoundException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidJobStateException'
          description: InvalidJobStateException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidClientTokenException'
          description: InvalidClientTokenException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /#X-Amz-Target=CodePipeline_20150709.PutThirdPartyJobSuccessResult:
    post:
      description: Represents the success of a third party job as returned to the
        pipeline by a job worker. Used for partner actions only.
      operationId: put_third_party_job_success_result
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - CodePipeline_20150709.PutThirdPartyJobSuccessResult
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PutThirdPartyJobSuccessResultInput'
        required: true
        x-body-name: body
      responses:
        "200":
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JobNotFoundException'
          description: JobNotFoundException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidJobStateException'
          description: InvalidJobStateException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidClientTokenException'
          description: InvalidClientTokenException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /#X-Amz-Target=CodePipeline_20150709.PutWebhook:
    post:
      description: "Defines a webhook and returns a unique webhook URL generated by\
        \ CodePipeline. This URL can be supplied to third party source hosting providers\
        \ to call every time there's a code change. When CodePipeline receives a POST\
        \ request on this URL, the pipeline defined in the webhook is started as long\
        \ as the POST request satisfied the authentication and filtering requirements\
        \ supplied when defining the webhook. RegisterWebhookWithThirdParty and DeregisterWebhookWithThirdParty\
        \ APIs can be used to automatically configure supported third parties to call\
        \ the generated webhook URL."
      operationId: put_webhook
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - CodePipeline_20150709.PutWebhook
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PutWebhookInput'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PutWebhookOutput'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
          description: LimitExceededException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidWebhookFilterPatternException'
          description: InvalidWebhookFilterPatternException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidWebhookAuthenticationParametersException'
          description: InvalidWebhookAuthenticationParametersException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PipelineNotFoundException'
          description: PipelineNotFoundException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyTagsException'
          description: TooManyTagsException
        "486":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidTagsException'
          description: InvalidTagsException
        "487":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConcurrentModificationException'
          description: ConcurrentModificationException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /#X-Amz-Target=CodePipeline_20150709.RegisterWebhookWithThirdParty:
    post:
      description: Configures a connection between the webhook that was created and
        the external tool with events to be detected.
      operationId: register_webhook_with_third_party
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - CodePipeline_20150709.RegisterWebhookWithThirdParty
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RegisterWebhookWithThirdPartyInput'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RegisterWebhookWithThirdPartyOutput'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WebhookNotFoundException'
          description: WebhookNotFoundException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /#X-Amz-Target=CodePipeline_20150709.RetryStageExecution:
    post:
      description: "Resumes the pipeline execution by retrying the last failed actions\
        \ in a stage. You can retry a stage immediately if any of the actions in the\
        \ stage fail. When you retry, all actions that are still in progress continue\
        \ working, and failed actions are triggered again."
      operationId: retry_stage_execution
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - CodePipeline_20150709.RetryStageExecution
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RetryStageExecutionInput'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RetryStageExecutionOutput'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
          description: ConflictException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PipelineNotFoundException'
          description: PipelineNotFoundException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StageNotFoundException'
          description: StageNotFoundException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StageNotRetryableException'
          description: StageNotRetryableException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotLatestPipelineExecutionException'
          description: NotLatestPipelineExecutionException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /#X-Amz-Target=CodePipeline_20150709.StartPipelineExecution:
    post:
      description: "Starts the specified pipeline. Specifically, it begins processing\
        \ the latest commit to the source location specified as part of the pipeline."
      operationId: start_pipeline_execution
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - CodePipeline_20150709.StartPipelineExecution
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StartPipelineExecutionInput'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StartPipelineExecutionOutput'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
          description: ConflictException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PipelineNotFoundException'
          description: PipelineNotFoundException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /#X-Amz-Target=CodePipeline_20150709.StopPipelineExecution:
    post:
      description: "Stops the specified pipeline execution. You choose to either stop\
        \ the pipeline execution by completing in-progress actions without starting\
        \ subsequent actions, or by abandoning in-progress actions. While completing\
        \ or abandoning in-progress actions, the pipeline execution is in a <code>Stopping</code>\
        \ state. After all in-progress actions are completed or abandoned, the pipeline\
        \ execution is in a <code>Stopped</code> state."
      operationId: stop_pipeline_execution
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - CodePipeline_20150709.StopPipelineExecution
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StopPipelineExecutionInput'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StopPipelineExecutionOutput'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
          description: ConflictException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PipelineNotFoundException'
          description: PipelineNotFoundException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PipelineExecutionNotStoppableException'
          description: PipelineExecutionNotStoppableException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DuplicatedStopRequestException'
          description: DuplicatedStopRequestException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /#X-Amz-Target=CodePipeline_20150709.TagResource:
    post:
      description: 'Adds to or modifies the tags of the given resource. Tags are metadata
        that can be used to manage a resource. '
      operationId: tag_resource
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - CodePipeline_20150709.TagResource
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TagResourceInput'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TagResourceOutput'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidArnException'
          description: InvalidArnException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyTagsException'
          description: TooManyTagsException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidTagsException'
          description: InvalidTagsException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConcurrentModificationException'
          description: ConcurrentModificationException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /#X-Amz-Target=CodePipeline_20150709.UntagResource:
    post:
      description: Removes tags from an Amazon Web Services resource.
      operationId: untag_resource
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - CodePipeline_20150709.UntagResource
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UntagResourceInput'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UntagResourceOutput'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidArnException'
          description: InvalidArnException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidTagsException'
          description: InvalidTagsException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConcurrentModificationException'
          description: ConcurrentModificationException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /#X-Amz-Target=CodePipeline_20150709.UpdateActionType:
    post:
      description: "Updates an action type that was created with any supported integration\
        \ model, where the action type is to be used by customers of the action type\
        \ provider. Use a JSON file with the action definition and <code>UpdateActionType</code>\
        \ to provide the full structure."
      operationId: update_action_type
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - CodePipeline_20150709.UpdateActionType
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateActionTypeInput'
        required: true
        x-body-name: body
      responses:
        "200":
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RequestFailedException'
          description: RequestFailedException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ActionTypeNotFoundException'
          description: ActionTypeNotFoundException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /#X-Amz-Target=CodePipeline_20150709.UpdatePipeline:
    post:
      description: Updates a specified pipeline with edits or changes to its structure.
        Use a JSON file with the pipeline structure and <code>UpdatePipeline</code>
        to provide the full structure of the pipeline. Updating the pipeline increases
        the version number of the pipeline by 1.
      operationId: update_pipeline
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - CodePipeline_20150709.UpdatePipeline
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdatePipelineInput'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdatePipelineOutput'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidStageDeclarationException'
          description: InvalidStageDeclarationException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidActionDeclarationException'
          description: InvalidActionDeclarationException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidBlockerDeclarationException'
          description: InvalidBlockerDeclarationException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidStructureException'
          description: InvalidStructureException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
          description: LimitExceededException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
components:
  parameters:
    X-Amz-Content-Sha256:
      explode: false
      in: header
      name: X-Amz-Content-Sha256
      required: false
      schema:
        type: string
      style: simple
    X-Amz-Date:
      explode: false
      in: header
      name: X-Amz-Date
      required: false
      schema:
        type: string
      style: simple
    X-Amz-Algorithm:
      explode: false
      in: header
      name: X-Amz-Algorithm
      required: false
      schema:
        type: string
      style: simple
    X-Amz-Credential:
      explode: false
      in: header
      name: X-Amz-Credential
      required: false
      schema:
        type: string
      style: simple
    X-Amz-Security-Token:
      explode: false
      in: header
      name: X-Amz-Security-Token
      required: false
      schema:
        type: string
      style: simple
    X-Amz-Signature:
      explode: false
      in: header
      name: X-Amz-Signature
      required: false
      schema:
        type: string
      style: simple
    X-Amz-SignedHeaders:
      explode: false
      in: header
      name: X-Amz-SignedHeaders
      required: false
      schema:
        type: string
      style: simple
  schemas:
    AcknowledgeJobOutput:
      description: Represents the output of an AcknowledgeJob action.
      example:
        status: ""
      properties:
        status:
          allOf:
          - $ref: '#/components/schemas/JobStatus'
          - description: Whether the job worker has received the specified job.
          title: status
      title: AcknowledgeJobOutput
      type: object
    AcknowledgeJobInput:
      description: Represents the input of an AcknowledgeJob action.
      example:
        jobId: ""
        nonce: ""
      properties:
        jobId:
          allOf:
          - $ref: '#/components/schemas/JobId'
          - description: The unique system-generated ID of the job for which you want
              to confirm receipt.
          title: jobId
        nonce:
          allOf:
          - $ref: '#/components/schemas/Nonce'
          - description: A system-generated random number that CodePipeline uses to
              ensure that the job is being worked on by only one job worker. Get this
              number from the response of the <a>PollForJobs</a> request that returned
              this job.
          title: nonce
      required:
      - jobId
      - nonce
      title: AcknowledgeJobInput
      type: object
    ValidationException: {}
    InvalidNonceException: {}
    JobNotFoundException: {}
    AcknowledgeThirdPartyJobOutput:
      description: Represents the output of an AcknowledgeThirdPartyJob action.
      example:
        status: ""
      properties:
        status:
          allOf:
          - $ref: '#/components/schemas/JobStatus'
          - description: "The status information for the third party job, if any."
          title: status
      title: AcknowledgeThirdPartyJobOutput
      type: object
    AcknowledgeThirdPartyJobInput:
      description: Represents the input of an AcknowledgeThirdPartyJob action.
      example:
        jobId: ""
        clientToken: ""
        nonce: ""
      properties:
        jobId:
          allOf:
          - $ref: '#/components/schemas/ThirdPartyJobId'
          - description: The unique system-generated ID of the job.
          title: jobId
        nonce:
          allOf:
          - $ref: '#/components/schemas/Nonce'
          - description: A system-generated random number that CodePipeline uses to
              ensure that the job is being worked on by only one job worker. Get this
              number from the response to a <a>GetThirdPartyJobDetails</a> request.
          title: nonce
        clientToken:
          allOf:
          - $ref: '#/components/schemas/ClientToken'
          - description: The clientToken portion of the clientId and clientToken pair
              used to verify that the calling entity is allowed access to the job
              and its details.
          title: clientToken
      required:
      - clientToken
      - jobId
      - nonce
      title: AcknowledgeThirdPartyJobInput
      type: object
    InvalidClientTokenException: {}
    CreateCustomActionTypeOutput:
      description: Represents the output of a <code>CreateCustomActionType</code>
        operation.
      example:
        actionType:
          settings:
            executionUrlTemplate: ""
            entityUrlTemplate: ""
            thirdPartyConfigurationUrl: ""
            revisionUrlTemplate: ""
          inputArtifactDetails:
            maximumCount: ""
            minimumCount: ""
          actionConfigurationProperties: ""
          outputArtifactDetails:
            maximumCount: ""
            minimumCount: ""
          id:
            owner: ""
            provider: ""
            category: ""
            version: ""
        tags: ""
      properties:
        actionType:
          $ref: '#/components/schemas/CreateCustomActionTypeOutput_actionType'
        tags:
          allOf:
          - $ref: '#/components/schemas/TagList'
          - description: Specifies the tags applied to the custom action.
          title: tags
      required:
      - actionType
      title: CreateCustomActionTypeOutput
      type: object
    CreateCustomActionTypeInput:
      description: Represents the input of a CreateCustomActionType operation.
      example:
        settings:
          executionUrlTemplate: ""
          entityUrlTemplate: ""
          thirdPartyConfigurationUrl: ""
          revisionUrlTemplate: ""
        provider: ""
        inputArtifactDetails:
          maximumCount: ""
          minimumCount: ""
        outputArtifactDetails:
          maximumCount: ""
          minimumCount: ""
        category: ""
        configurationProperties: ""
        version: ""
        tags: ""
      properties:
        category:
          allOf:
          - $ref: '#/components/schemas/ActionCategory'
          - description: "The category of the custom action, such as a build action\
              \ or a test action."
          title: category
        provider:
          allOf:
          - $ref: '#/components/schemas/ActionProvider'
          - description: "The provider of the service used in the custom action, such\
              \ as CodeDeploy."
          title: provider
        version:
          allOf:
          - $ref: '#/components/schemas/Version'
          - description: The version identifier of the custom action.
          title: version
        settings:
          $ref: '#/components/schemas/CreateCustomActionTypeInput_settings'
        configurationProperties:
          allOf:
          - $ref: '#/components/schemas/ActionConfigurationPropertyList'
          - description: "<p>The configuration properties for the custom action.</p>\
              \ <note> <p>You can refer to a name in the configuration properties\
              \ of the custom action within the URL templates by following the format\
              \ of {Config:name}, as long as the configuration property is both required\
              \ and not secret. For more information, see <a href=\"https://docs.aws.amazon.com/codepipeline/latest/userguide/how-to-create-custom-action.html\"\
              >Create a Custom Action for a Pipeline</a>.</p> </note>"
          title: configurationProperties
        inputArtifactDetails:
          $ref: '#/components/schemas/CreateCustomActionTypeInput_inputArtifactDetails'
        outputArtifactDetails:
          $ref: '#/components/schemas/CreateCustomActionTypeInput_outputArtifactDetails'
        tags:
          allOf:
          - $ref: '#/components/schemas/TagList'
          - description: The tags for the custom action.
          title: tags
      required:
      - category
      - inputArtifactDetails
      - outputArtifactDetails
      - provider
      - version
      title: CreateCustomActionTypeInput
      type: object
    LimitExceededException: {}
    TooManyTagsException: {}
    InvalidTagsException: {}
    ConcurrentModificationException: {}
    CreatePipelineOutput:
      description: Represents the output of a <code>CreatePipeline</code> action.
      example:
        pipeline:
          artifactStore:
            location: ""
            encryptionKey:
              id: ""
              type: ""
            type: ""
          roleArn: ""
          name: ""
          stages: ""
          artifactStores: ""
          version: ""
        tags: ""
      properties:
        pipeline:
          $ref: '#/components/schemas/CreatePipelineOutput_pipeline'
        tags:
          allOf:
          - $ref: '#/components/schemas/TagList'
          - description: Specifies the tags applied to the pipeline.
          title: tags
      title: CreatePipelineOutput
      type: object
    CreatePipelineInput:
      description: Represents the input of a <code>CreatePipeline</code> action.
      example:
        pipeline:
          artifactStore:
            location: ""
            encryptionKey:
              id: ""
              type: ""
            type: ""
          roleArn: ""
          name: ""
          stages: ""
          artifactStores: ""
          version: ""
        tags: ""
      properties:
        pipeline:
          $ref: '#/components/schemas/CreatePipelineOutput_pipeline'
        tags:
          allOf:
          - $ref: '#/components/schemas/TagList'
          - description: The tags for the pipeline.
          title: tags
      required:
      - pipeline
      title: CreatePipelineInput
      type: object
    PipelineNameInUseException: {}
    InvalidStageDeclarationException: {}
    InvalidActionDeclarationException: {}
    InvalidBlockerDeclarationException: {}
    InvalidStructureException: {}
    DeleteCustomActionTypeInput:
      description: Represents the input of a <code>DeleteCustomActionType</code> operation.
        The custom action will be marked as deleted.
      example:
        provider: ""
        category: ""
        version: ""
      properties:
        category:
          allOf:
          - $ref: '#/components/schemas/ActionCategory'
          - description: "The category of the custom action that you want to delete,\
              \ such as source or deploy."
          title: category
        provider:
          allOf:
          - $ref: '#/components/schemas/ActionProvider'
          - description: "The provider of the service used in the custom action, such\
              \ as CodeDeploy."
          title: provider
        version:
          allOf:
          - $ref: '#/components/schemas/Version'
          - description: The version of the custom action to delete.
          title: version
      required:
      - category
      - provider
      - version
      title: DeleteCustomActionTypeInput
      type: object
    DeletePipelineInput:
      description: Represents the input of a <code>DeletePipeline</code> action.
      example:
        name: ""
      properties:
        name:
          allOf:
          - $ref: '#/components/schemas/PipelineName'
          - description: The name of the pipeline to be deleted.
          title: name
      required:
      - name
      title: DeletePipelineInput
      type: object
    DeleteWebhookOutput:
      properties: {}
      type: object
    DeleteWebhookInput:
      example:
        name: ""
      properties:
        name:
          allOf:
          - $ref: '#/components/schemas/WebhookName'
          - description: The name of the webhook you want to delete.
          title: name
      required:
      - name
      title: DeleteWebhookInput
      type: object
    DeregisterWebhookWithThirdPartyOutput:
      properties: {}
      type: object
    DeregisterWebhookWithThirdPartyInput:
      example:
        webhookName: ""
      properties:
        webhookName:
          allOf:
          - $ref: '#/components/schemas/WebhookName'
          - description: The name of the webhook you want to deregister.
          title: webhookName
      title: DeregisterWebhookWithThirdPartyInput
      type: object
    WebhookNotFoundException: {}
    DisableStageTransitionInput:
      description: Represents the input of a <code>DisableStageTransition</code> action.
      example:
        pipelineName: ""
        reason: ""
        stageName: ""
        transitionType: ""
      properties:
        pipelineName:
          allOf:
          - $ref: '#/components/schemas/PipelineName'
          - description: The name of the pipeline in which you want to disable the
              flow of artifacts from one stage to another.
          title: pipelineName
        stageName:
          allOf:
          - $ref: '#/components/schemas/StageName'
          - description: The name of the stage where you want to disable the inbound
              or outbound transition of artifacts.
          title: stageName
        transitionType:
          allOf:
          - $ref: '#/components/schemas/StageTransitionType'
          - description: "Specifies whether artifacts are prevented from transitioning\
              \ into the stage and being processed by the actions in that stage (inbound),\
              \ or prevented from transitioning from the stage after they have been\
              \ processed by the actions in that stage (outbound)."
          title: transitionType
        reason:
          allOf:
          - $ref: '#/components/schemas/DisabledReason'
          - description: "The reason given to the user that a stage is disabled, such\
              \ as waiting for manual approval or manual tests. This message is displayed\
              \ in the pipeline console UI."
          title: reason
      required:
      - pipelineName
      - reason
      - stageName
      - transitionType
      title: DisableStageTransitionInput
      type: object
    PipelineNotFoundException: {}
    StageNotFoundException: {}
    EnableStageTransitionInput:
      description: Represents the input of an <code>EnableStageTransition</code> action.
      example:
        pipelineName: ""
        stageName: ""
        transitionType: ""
      properties:
        pipelineName:
          allOf:
          - $ref: '#/components/schemas/PipelineName'
          - description: The name of the pipeline in which you want to enable the
              flow of artifacts from one stage to another.
          title: pipelineName
        stageName:
          allOf:
          - $ref: '#/components/schemas/StageName'
          - description: "The name of the stage where you want to enable the transition\
              \ of artifacts, either into the stage (inbound) or from that stage to\
              \ the next stage (outbound)."
          title: stageName
        transitionType:
          allOf:
          - $ref: '#/components/schemas/StageTransitionType'
          - description: Specifies whether artifacts are allowed to enter the stage
              and be processed by the actions in that stage (inbound) or whether already
              processed artifacts are allowed to transition to the next stage (outbound).
          title: transitionType
      required:
      - pipelineName
      - stageName
      - transitionType
      title: EnableStageTransitionInput
      type: object
    GetActionTypeOutput:
      example:
        actionType:
          urls:
            configurationUrl: ""
            executionUrlTemplate: ""
            entityUrlTemplate: ""
            revisionUrlTemplate: ""
          executor:
            jobTimeout: ""
            configuration:
              lambdaExecutorConfiguration:
                lambdaFunctionArn: ""
              jobWorkerExecutorConfiguration:
                pollingServicePrincipals: ""
                pollingAccounts: ""
            policyStatementsTemplate: ""
            type: ""
          permissions:
            allowedAccounts: ""
          inputArtifactDetails:
            maximumCount: ""
            minimumCount: ""
          description: ""
          outputArtifactDetails:
            maximumCount: ""
            minimumCount: ""
          id:
            owner: ""
            provider: ""
            category: ""
            version: ""
          properties: ""
      properties:
        actionType:
          $ref: '#/components/schemas/GetActionTypeOutput_actionType'
      title: GetActionTypeOutput
      type: object
    GetActionTypeInput:
      example:
        owner: ""
        provider: ""
        category: ""
        version: ""
      properties:
        category:
          allOf:
          - $ref: '#/components/schemas/ActionCategory'
          - description: <p>Defines what kind of action can be taken in the stage.
              The following are the valid values:</p> <ul> <li> <p> <code>Source</code>
              </p> </li> <li> <p> <code>Build</code> </p> </li> <li> <p> <code>Test</code>
              </p> </li> <li> <p> <code>Deploy</code> </p> </li> <li> <p> <code>Approval</code>
              </p> </li> <li> <p> <code>Invoke</code> </p> </li> </ul>
          title: category
        owner:
          allOf:
          - $ref: '#/components/schemas/ActionTypeOwner'
          - description: "The creator of an action type that was created with any\
              \ supported integration model. There are two valid values: <code>AWS</code>\
              \ and <code>ThirdParty</code>."
          title: owner
        provider:
          allOf:
          - $ref: '#/components/schemas/ActionProvider'
          - description: The provider of the action type being called. The provider
              name is specified when the action type is created.
          title: provider
        version:
          allOf:
          - $ref: '#/components/schemas/Version'
          - description: A string that describes the action type version.
          title: version
      required:
      - category
      - owner
      - provider
      - version
      title: GetActionTypeInput
      type: object
    ActionTypeNotFoundException: {}
    GetJobDetailsOutput:
      description: Represents the output of a <code>GetJobDetails</code> action.
      example:
        jobDetails:
          accountId: ""
          data:
            actionTypeId:
              owner: ""
              provider: ""
              category: ""
              version: ""
            pipelineContext:
              pipelineName: ""
              stage:
                name: ""
              pipelineArn: ""
              pipelineExecutionId: ""
              action:
                actionExecutionId: ""
                name: ""
            outputArtifacts: ""
            actionConfiguration:
              configuration: ""
            encryptionKey:
              id: ""
              type: ""
            inputArtifacts: ""
            artifactCredentials:
              accessKeyId: ""
              secretAccessKey: ""
              sessionToken: ""
            continuationToken: ""
          id: ""
      properties:
        jobDetails:
          $ref: '#/components/schemas/GetJobDetailsOutput_jobDetails'
      title: GetJobDetailsOutput
      type: object
    GetJobDetailsInput:
      description: Represents the input of a <code>GetJobDetails</code> action.
      example:
        jobId: ""
      properties:
        jobId:
          allOf:
          - $ref: '#/components/schemas/JobId'
          - description: The unique system-generated ID for the job.
          title: jobId
      required:
      - jobId
      title: GetJobDetailsInput
      type: object
    GetPipelineOutput:
      description: Represents the output of a <code>GetPipeline</code> action.
      example:
        pipeline:
          artifactStore:
            location: ""
            encryptionKey:
              id: ""
              type: ""
            type: ""
          roleArn: ""
          name: ""
          stages: ""
          artifactStores: ""
          version: ""
        metadata:
          pipelineArn: ""
          created: ""
          updated: ""
          pollingDisabledAt: ""
      properties:
        pipeline:
          $ref: '#/components/schemas/CreatePipelineOutput_pipeline'
        metadata:
          $ref: '#/components/schemas/GetPipelineOutput_metadata'
      title: GetPipelineOutput
      type: object
    GetPipelineInput:
      description: Represents the input of a <code>GetPipeline</code> action.
      example:
        name: ""
        version: ""
      properties:
        name:
          allOf:
          - $ref: '#/components/schemas/PipelineName'
          - description: The name of the pipeline for which you want to get information.
              Pipeline names must be unique in an Amazon Web Services account.
          title: name
        version:
          allOf:
          - $ref: '#/components/schemas/PipelineVersion'
          - description: "The version number of the pipeline. If you do not specify\
              \ a version, defaults to the current version."
          title: version
      required:
      - name
      title: GetPipelineInput
      type: object
    PipelineVersionNotFoundException: {}
    GetPipelineExecutionOutput:
      description: Represents the output of a <code>GetPipelineExecution</code> action.
      example:
        pipelineExecution:
          pipelineName: ""
          pipelineVersion: ""
          artifactRevisions: ""
          statusSummary: ""
          pipelineExecutionId: ""
          status: ""
      properties:
        pipelineExecution:
          $ref: '#/components/schemas/GetPipelineExecutionOutput_pipelineExecution'
      title: GetPipelineExecutionOutput
      type: object
    GetPipelineExecutionInput:
      description: Represents the input of a <code>GetPipelineExecution</code> action.
      example:
        pipelineName: ""
        pipelineExecutionId: ""
      properties:
        pipelineName:
          allOf:
          - $ref: '#/components/schemas/PipelineName'
          - description: The name of the pipeline about which you want to get execution
              details.
          title: pipelineName
        pipelineExecutionId:
          allOf:
          - $ref: '#/components/schemas/PipelineExecutionId'
          - description: The ID of the pipeline execution about which you want to
              get execution details.
          title: pipelineExecutionId
      required:
      - pipelineExecutionId
      - pipelineName
      title: GetPipelineExecutionInput
      type: object
    PipelineExecutionNotFoundException: {}
    GetPipelineStateOutput:
      description: Represents the output of a <code>GetPipelineState</code> action.
      example:
        pipelineName: ""
        pipelineVersion: ""
        stageStates: ""
        created: ""
        updated: ""
      properties:
        pipelineName:
          allOf:
          - $ref: '#/components/schemas/PipelineName'
          - description: The name of the pipeline for which you want to get the state.
          title: pipelineName
        pipelineVersion:
          allOf:
          - $ref: '#/components/schemas/PipelineVersion'
          - description: <p>The version number of the pipeline.</p> <note> <p>A newly
              created pipeline is always assigned a version number of <code>1</code>.</p>
              </note>
          title: pipelineVersion
        stageStates:
          allOf:
          - $ref: '#/components/schemas/StageStateList'
          - description: "A list of the pipeline stage output information, including\
              \ stage name, state, most recent run details, whether the stage is disabled,\
              \ and other data."
          title: stageStates
        created:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          - description: "The date and time the pipeline was created, in timestamp\
              \ format."
          title: created
        updated:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          - description: "The date and time the pipeline was last updated, in timestamp\
              \ format."
          title: updated
      title: GetPipelineStateOutput
      type: object
    GetPipelineStateInput:
      description: Represents the input of a <code>GetPipelineState</code> action.
      example:
        name: ""
      properties:
        name:
          allOf:
          - $ref: '#/components/schemas/PipelineName'
          - description: The name of the pipeline about which you want to get information.
          title: name
      required:
      - name
      title: GetPipelineStateInput
      type: object
    GetThirdPartyJobDetailsOutput:
      description: Represents the output of a <code>GetThirdPartyJobDetails</code>
        action.
      example:
        jobDetails:
          data:
            actionTypeId:
              owner: ""
              provider: ""
              category: ""
              version: ""
            pipelineContext:
              pipelineName: ""
              stage:
                name: ""
              pipelineArn: ""
              pipelineExecutionId: ""
              action:
                actionExecutionId: ""
                name: ""
            outputArtifacts: ""
            actionConfiguration:
              configuration: ""
            encryptionKey:
              id: ""
              type: ""
            inputArtifacts: ""
            artifactCredentials:
              accessKeyId: ""
              secretAccessKey: ""
              sessionToken: ""
            continuationToken: ""
          id: ""
          nonce: ""
      properties:
        jobDetails:
          $ref: '#/components/schemas/GetThirdPartyJobDetailsOutput_jobDetails'
      title: GetThirdPartyJobDetailsOutput
      type: object
    GetThirdPartyJobDetailsInput:
      description: Represents the input of a <code>GetThirdPartyJobDetails</code>
        action.
      example:
        jobId: ""
        clientToken: ""
      properties:
        jobId:
          allOf:
          - $ref: '#/components/schemas/ThirdPartyJobId'
          - description: The unique system-generated ID used for identifying the job.
          title: jobId
        clientToken:
          allOf:
          - $ref: '#/components/schemas/ClientToken'
          - description: The clientToken portion of the clientId and clientToken pair
              used to verify that the calling entity is allowed access to the job
              and its details.
          title: clientToken
      required:
      - clientToken
      - jobId
      title: GetThirdPartyJobDetailsInput
      type: object
    InvalidJobException: {}
    ListActionExecutionsOutput:
      example:
        nextToken: ""
        actionExecutionDetails: ""
      properties:
        actionExecutionDetails:
          allOf:
          - $ref: '#/components/schemas/ActionExecutionDetailList'
          - description: "The details for a list of recent executions, such as action\
              \ execution ID."
          title: actionExecutionDetails
        nextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          - description: "If the amount of returned information is significantly large,\
              \ an identifier is also returned and can be used in a subsequent <code>ListActionExecutions</code>\
              \ call to return the next set of action executions in the list."
          title: nextToken
      title: ListActionExecutionsOutput
      type: object
    ListActionExecutionsInput:
      example:
        pipelineName: ""
        filter:
          pipelineExecutionId: ""
        maxResults: ""
        nextToken: ""
      properties:
        pipelineName:
          allOf:
          - $ref: '#/components/schemas/PipelineName'
          - description: ' The name of the pipeline for which you want to list action
              execution history.'
          title: pipelineName
        filter:
          $ref: '#/components/schemas/ListActionExecutionsInput_filter'
        maxResults:
          allOf:
          - $ref: '#/components/schemas/MaxResults'
          - description: "<p>The maximum number of results to return in a single call.\
              \ To retrieve the remaining results, make another call with the returned\
              \ nextToken value. Action execution history is retained for up to 12\
              \ months, based on action execution start times. Default value is 100.\
              \ </p> <note> <p>Detailed execution history is available for executions\
              \ run on or after February 21, 2019.</p> </note>"
          title: maxResults
        nextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          - description: "The token that was returned from the previous <code>ListActionExecutions</code>\
              \ call, which can be used to return the next set of action executions\
              \ in the list."
          title: nextToken
      required:
      - pipelineName
      title: ListActionExecutionsInput
      type: object
    InvalidNextTokenException: {}
    ListActionTypesOutput:
      description: Represents the output of a <code>ListActionTypes</code> action.
      example:
        nextToken: ""
        actionTypes: ""
      properties:
        actionTypes:
          allOf:
          - $ref: '#/components/schemas/ActionTypeList'
          - description: Provides details of the action types.
          title: actionTypes
        nextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          - description: "If the amount of returned information is significantly large,\
              \ an identifier is also returned. It can be used in a subsequent list\
              \ action types call to return the next set of action types in the list."
          title: nextToken
      required:
      - actionTypes
      title: ListActionTypesOutput
      type: object
    ListActionTypesInput:
      description: Represents the input of a <code>ListActionTypes</code> action.
      example:
        actionOwnerFilter: ""
        nextToken: ""
        regionFilter: ""
      properties:
        actionOwnerFilter:
          allOf:
          - $ref: '#/components/schemas/ActionOwner'
          - description: Filters the list of action types to those created by a specified
              entity.
          title: actionOwnerFilter
        nextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          - description: "An identifier that was returned from the previous list action\
              \ types call, which can be used to return the next set of action types\
              \ in the list."
          title: nextToken
        regionFilter:
          allOf:
          - $ref: '#/components/schemas/AWSRegionName'
          - description: The Region to filter on for the list of action types.
          title: regionFilter
      title: ListActionTypesInput
      type: object
    ListPipelineExecutionsOutput:
      description: Represents the output of a <code>ListPipelineExecutions</code>
        action.
      example:
        nextToken: ""
        pipelineExecutionSummaries: ""
      properties:
        pipelineExecutionSummaries:
          allOf:
          - $ref: '#/components/schemas/PipelineExecutionSummaryList'
          - description: A list of executions in the history of a pipeline.
          title: pipelineExecutionSummaries
        nextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          - description: "A token that can be used in the next <code>ListPipelineExecutions</code>\
              \ call. To view all items in the list, continue to call this operation\
              \ with each subsequent token until no more nextToken values are returned."
          title: nextToken
      title: ListPipelineExecutionsOutput
      type: object
    ListPipelineExecutionsInput:
      description: Represents the input of a <code>ListPipelineExecutions</code> action.
      example:
        pipelineName: ""
        maxResults: ""
        nextToken: ""
      properties:
        pipelineName:
          allOf:
          - $ref: '#/components/schemas/PipelineName'
          - description: The name of the pipeline for which you want to get execution
              summary information.
          title: pipelineName
        maxResults:
          allOf:
          - $ref: '#/components/schemas/MaxResults'
          - description: "The maximum number of results to return in a single call.\
              \ To retrieve the remaining results, make another call with the returned\
              \ nextToken value. Pipeline history is limited to the most recent 12\
              \ months, based on pipeline execution start times. Default value is\
              \ 100."
          title: maxResults
        nextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          - description: "The token that was returned from the previous <code>ListPipelineExecutions</code>\
              \ call, which can be used to return the next set of pipeline executions\
              \ in the list."
          title: nextToken
      required:
      - pipelineName
      title: ListPipelineExecutionsInput
      type: object
    ListPipelinesOutput:
      description: Represents the output of a <code>ListPipelines</code> action.
      example:
        pipelines: ""
        nextToken: ""
      properties:
        pipelines:
          allOf:
          - $ref: '#/components/schemas/PipelineList'
          - description: The list of pipelines.
          title: pipelines
        nextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          - description: "If the amount of returned information is significantly large,\
              \ an identifier is also returned. It can be used in a subsequent list\
              \ pipelines call to return the next set of pipelines in the list."
          title: nextToken
      title: ListPipelinesOutput
      type: object
    ListPipelinesInput:
      description: Represents the input of a <code>ListPipelines</code> action.
      example:
        nextToken: ""
        maxResults: ""
      properties:
        nextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          - description: An identifier that was returned from the previous list pipelines
              call. It can be used to return the next set of pipelines in the list.
          title: nextToken
        maxResults:
          allOf:
          - $ref: '#/components/schemas/MaxPipelines'
          - description: "The maximum number of pipelines to return in a single call.\
              \ To retrieve the remaining pipelines, make another call with the returned\
              \ nextToken value. The minimum value you can specify is 1. The maximum\
              \ accepted value is 1000."
          title: maxResults
      title: ListPipelinesInput
      type: object
    ListTagsForResourceOutput:
      example:
        nextToken: ""
        tags: ""
      properties:
        tags:
          allOf:
          - $ref: '#/components/schemas/TagList'
          - description: The tags for the resource.
          title: tags
        nextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          - description: "If the amount of returned information is significantly large,\
              \ an identifier is also returned and can be used in a subsequent API\
              \ call to return the next page of the list. The ListTagsforResource\
              \ call lists all available tags in one call and does not use pagination."
          title: nextToken
      title: ListTagsForResourceOutput
      type: object
    ListTagsForResourceInput:
      example:
        nextToken: ""
        maxResults: ""
        resourceArn: ""
      properties:
        resourceArn:
          allOf:
          - $ref: '#/components/schemas/ResourceArn'
          - description: The Amazon Resource Name (ARN) of the resource to get tags
              for.
          title: resourceArn
        nextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          - description: "The token that was returned from the previous API call,\
              \ which would be used to return the next page of the list. The ListTagsforResource\
              \ call lists all available tags in one call and does not use pagination."
          title: nextToken
        maxResults:
          allOf:
          - $ref: '#/components/schemas/MaxResults'
          - description: The maximum number of results to return in a single call.
          title: maxResults
      required:
      - resourceArn
      title: ListTagsForResourceInput
      type: object
    ResourceNotFoundException: {}
    InvalidArnException: {}
    ListWebhooksOutput:
      example:
        NextToken: ""
        webhooks: ""
      properties:
        webhooks:
          allOf:
          - $ref: '#/components/schemas/WebhookList'
          - description: The JSON detail returned for each webhook in the list output
              for the ListWebhooks call.
          title: webhooks
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          - description: "If the amount of returned information is significantly large,\
              \ an identifier is also returned and can be used in a subsequent ListWebhooks\
              \ call to return the next set of webhooks in the list. "
          title: NextToken
      title: ListWebhooksOutput
      type: object
    ListWebhooksInput:
      example:
        NextToken: ""
        MaxResults: ""
      properties:
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          - description: "The token that was returned from the previous ListWebhooks\
              \ call, which can be used to return the next set of webhooks in the\
              \ list."
          title: NextToken
        MaxResults:
          allOf:
          - $ref: '#/components/schemas/MaxResults'
          - description: "The maximum number of results to return in a single call.\
              \ To retrieve the remaining results, make another call with the returned\
              \ nextToken value."
          title: MaxResults
      title: ListWebhooksInput
      type: object
    PollForJobsOutput:
      description: Represents the output of a <code>PollForJobs</code> action.
      example:
        jobs: ""
      properties:
        jobs:
          allOf:
          - $ref: '#/components/schemas/JobList'
          - description: Information about the jobs to take action on.
          title: jobs
      title: PollForJobsOutput
      type: object
    PollForJobsInput:
      description: Represents the input of a <code>PollForJobs</code> action.
      example:
        actionTypeId:
          owner: ""
          provider: ""
          category: ""
          version: ""
        maxBatchSize: ""
        queryParam: ""
      properties:
        actionTypeId:
          $ref: '#/components/schemas/PollForJobsInput_actionTypeId'
        maxBatchSize:
          allOf:
          - $ref: '#/components/schemas/MaxBatchSize'
          - description: The maximum number of jobs to return in a poll for jobs call.
          title: maxBatchSize
        queryParam:
          allOf:
          - $ref: '#/components/schemas/QueryParamMap'
          - description: "A map of property names and values. For an action type with\
              \ no queryable properties, this value must be null or an empty map.\
              \ For an action type with a queryable property, you must supply that\
              \ property as a key in the map. Only jobs whose action configuration\
              \ matches the mapped value are returned."
          title: queryParam
      required:
      - actionTypeId
      title: PollForJobsInput
      type: object
    PollForThirdPartyJobsOutput:
      description: Represents the output of a <code>PollForThirdPartyJobs</code> action.
      example:
        jobs: ""
      properties:
        jobs:
          allOf:
          - $ref: '#/components/schemas/ThirdPartyJobList'
          - description: Information about the jobs to take action on.
          title: jobs
      title: PollForThirdPartyJobsOutput
      type: object
    PollForThirdPartyJobsInput:
      description: Represents the input of a <code>PollForThirdPartyJobs</code> action.
      example:
        actionTypeId:
          owner: ""
          provider: ""
          category: ""
          version: ""
        maxBatchSize: ""
      properties:
        actionTypeId:
          $ref: '#/components/schemas/PollForJobsInput_actionTypeId'
        maxBatchSize:
          allOf:
          - $ref: '#/components/schemas/MaxBatchSize'
          - description: The maximum number of jobs to return in a poll for jobs call.
          title: maxBatchSize
      required:
      - actionTypeId
      title: PollForThirdPartyJobsInput
      type: object
    PutActionRevisionOutput:
      description: Represents the output of a <code>PutActionRevision</code> action.
      example:
        newRevision: ""
        pipelineExecutionId: ""
      properties:
        newRevision:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          - description: Indicates whether the artifact revision was previously used
              in an execution of the specified pipeline.
          title: newRevision
        pipelineExecutionId:
          allOf:
          - $ref: '#/components/schemas/PipelineExecutionId'
          - description: The ID of the current workflow state of the pipeline.
          title: pipelineExecutionId
      title: PutActionRevisionOutput
      type: object
    PutActionRevisionInput:
      description: Represents the input of a <code>PutActionRevision</code> action.
      example:
        pipelineName: ""
        actionRevision:
          revisionId: ""
          revisionChangeId: ""
          created: ""
        stageName: ""
        actionName: ""
      properties:
        pipelineName:
          allOf:
          - $ref: '#/components/schemas/PipelineName'
          - description: The name of the pipeline that starts processing the revision
              to the source.
          title: pipelineName
        stageName:
          allOf:
          - $ref: '#/components/schemas/StageName'
          - description: The name of the stage that contains the action that acts
              on the revision.
          title: stageName
        actionName:
          allOf:
          - $ref: '#/components/schemas/ActionName'
          - description: The name of the action that processes the revision.
          title: actionName
        actionRevision:
          $ref: '#/components/schemas/PutActionRevisionInput_actionRevision'
      required:
      - actionName
      - actionRevision
      - pipelineName
      - stageName
      title: PutActionRevisionInput
      type: object
    ActionNotFoundException: {}
    PutApprovalResultOutput:
      description: Represents the output of a <code>PutApprovalResult</code> action.
      example:
        approvedAt: ""
      properties:
        approvedAt:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          - description: The timestamp showing when the approval or rejection was
              submitted.
          title: approvedAt
      title: PutApprovalResultOutput
      type: object
    PutApprovalResultInput:
      description: Represents the input of a <code>PutApprovalResult</code> action.
      example:
        pipelineName: ""
        result:
          summary: ""
          status: ""
        stageName: ""
        actionName: ""
        token: ""
      properties:
        pipelineName:
          allOf:
          - $ref: '#/components/schemas/PipelineName'
          - description: 'The name of the pipeline that contains the action. '
          title: pipelineName
        stageName:
          allOf:
          - $ref: '#/components/schemas/StageName'
          - description: The name of the stage that contains the action.
          title: stageName
        actionName:
          allOf:
          - $ref: '#/components/schemas/ActionName'
          - description: The name of the action for which approval is requested.
          title: actionName
        result:
          $ref: '#/components/schemas/PutApprovalResultInput_result'
        token:
          allOf:
          - $ref: '#/components/schemas/ApprovalToken'
          - description: The system-generated token used to identify a unique approval
              request. The token for each open approval request can be obtained using
              the <a>GetPipelineState</a> action. It is used to validate that the
              approval request corresponding to this token is still valid.
          title: token
      required:
      - actionName
      - pipelineName
      - result
      - stageName
      - token
      title: PutApprovalResultInput
      type: object
    InvalidApprovalTokenException: {}
    ApprovalAlreadyCompletedException: {}
    PutJobFailureResultInput:
      description: Represents the input of a <code>PutJobFailureResult</code> action.
      example:
        jobId: ""
        failureDetails:
          type: ""
          message: ""
          externalExecutionId: ""
      properties:
        jobId:
          allOf:
          - $ref: '#/components/schemas/JobId'
          - description: The unique system-generated ID of the job that failed. This
              is the same ID returned from <code>PollForJobs</code>.
          title: jobId
        failureDetails:
          $ref: '#/components/schemas/PutJobFailureResultInput_failureDetails'
      required:
      - failureDetails
      - jobId
      title: PutJobFailureResultInput
      type: object
    InvalidJobStateException: {}
    PutJobSuccessResultInput:
      description: Represents the input of a <code>PutJobSuccessResult</code> action.
      example:
        jobId: ""
        currentRevision:
          created: ""
          changeIdentifier: ""
          revisionSummary: ""
          revision: ""
        executionDetails:
          summary: ""
          percentComplete: ""
          externalExecutionId: ""
        outputVariables: ""
        continuationToken: ""
      properties:
        jobId:
          allOf:
          - $ref: '#/components/schemas/JobId'
          - description: The unique system-generated ID of the job that succeeded.
              This is the same ID returned from <code>PollForJobs</code>.
          title: jobId
        currentRevision:
          $ref: '#/components/schemas/PutJobSuccessResultInput_currentRevision'
        continuationToken:
          allOf:
          - $ref: '#/components/schemas/ContinuationToken'
          - description: "A token generated by a job worker, such as a CodeDeploy\
              \ deployment ID, that a successful job provides to identify a custom\
              \ action in progress. Future jobs use this token to identify the running\
              \ instance of the action. It can be reused to return more information\
              \ about the progress of the custom action. When the action is complete,\
              \ no continuation token should be supplied."
          title: continuationToken
        executionDetails:
          $ref: '#/components/schemas/PutJobSuccessResultInput_executionDetails'
        outputVariables:
          allOf:
          - $ref: '#/components/schemas/OutputVariablesMap'
          - description: Key-value pairs produced as output by a job worker that can
              be made available to a downstream action configuration. <code>outputVariables</code>
              can be included only when there is no continuation token on the request.
          title: outputVariables
      required:
      - jobId
      title: PutJobSuccessResultInput
      type: object
    OutputVariablesSizeExceededException: {}
    PutThirdPartyJobFailureResultInput:
      description: Represents the input of a <code>PutThirdPartyJobFailureResult</code>
        action.
      example:
        jobId: ""
        clientToken: ""
        failureDetails:
          type: ""
          message: ""
          externalExecutionId: ""
      properties:
        jobId:
          allOf:
          - $ref: '#/components/schemas/ThirdPartyJobId'
          - description: The ID of the job that failed. This is the same ID returned
              from <code>PollForThirdPartyJobs</code>.
          title: jobId
        clientToken:
          allOf:
          - $ref: '#/components/schemas/ClientToken'
          - description: The clientToken portion of the clientId and clientToken pair
              used to verify that the calling entity is allowed access to the job
              and its details.
          title: clientToken
        failureDetails:
          $ref: '#/components/schemas/PutThirdPartyJobFailureResultInput_failureDetails'
      required:
      - clientToken
      - failureDetails
      - jobId
      title: PutThirdPartyJobFailureResultInput
      type: object
    PutThirdPartyJobSuccessResultInput:
      description: Represents the input of a <code>PutThirdPartyJobSuccessResult</code>
        action.
      example:
        jobId: ""
        currentRevision:
          created: ""
          changeIdentifier: ""
          revisionSummary: ""
          revision: ""
        clientToken: ""
        executionDetails:
          summary: ""
          percentComplete: ""
          externalExecutionId: ""
        continuationToken: ""
      properties:
        jobId:
          allOf:
          - $ref: '#/components/schemas/ThirdPartyJobId'
          - description: The ID of the job that successfully completed. This is the
              same ID returned from <code>PollForThirdPartyJobs</code>.
          title: jobId
        clientToken:
          allOf:
          - $ref: '#/components/schemas/ClientToken'
          - description: The clientToken portion of the clientId and clientToken pair
              used to verify that the calling entity is allowed access to the job
              and its details.
          title: clientToken
        currentRevision:
          $ref: '#/components/schemas/PutThirdPartyJobSuccessResultInput_currentRevision'
        continuationToken:
          allOf:
          - $ref: '#/components/schemas/ContinuationToken'
          - description: "A token generated by a job worker, such as a CodeDeploy\
              \ deployment ID, that a successful job provides to identify a partner\
              \ action in progress. Future jobs use this token to identify the running\
              \ instance of the action. It can be reused to return more information\
              \ about the progress of the partner action. When the action is complete,\
              \ no continuation token should be supplied."
          title: continuationToken
        executionDetails:
          $ref: '#/components/schemas/PutThirdPartyJobSuccessResultInput_executionDetails'
      required:
      - clientToken
      - jobId
      title: PutThirdPartyJobSuccessResultInput
      type: object
    PutWebhookOutput:
      example:
        webhook:
          lastTriggered: ""
          errorMessage: ""
          errorCode: ""
          definition:
            targetAction: ""
            name: ""
            filters: ""
            targetPipeline: ""
            authenticationConfiguration:
              AllowedIPRange: ""
              SecretToken: ""
            authentication: ""
          arn: ""
          url: ""
          tags: ""
      properties:
        webhook:
          $ref: '#/components/schemas/PutWebhookOutput_webhook'
      title: PutWebhookOutput
      type: object
    PutWebhookInput:
      example:
        webhook:
          targetAction: ""
          name: ""
          filters: ""
          targetPipeline: ""
          authenticationConfiguration:
            AllowedIPRange: ""
            SecretToken: ""
          authentication: ""
        tags: ""
      properties:
        webhook:
          $ref: '#/components/schemas/PutWebhookInput_webhook'
        tags:
          allOf:
          - $ref: '#/components/schemas/TagList'
          - description: The tags for the webhook.
          title: tags
      required:
      - webhook
      title: PutWebhookInput
      type: object
    InvalidWebhookFilterPatternException: {}
    InvalidWebhookAuthenticationParametersException: {}
    RegisterWebhookWithThirdPartyOutput:
      properties: {}
      type: object
    RegisterWebhookWithThirdPartyInput:
      example:
        webhookName: ""
      properties:
        webhookName:
          allOf:
          - $ref: '#/components/schemas/WebhookName'
          - description: 'The name of an existing webhook created with PutWebhook
              to register with a supported third party. '
          title: webhookName
      title: RegisterWebhookWithThirdPartyInput
      type: object
    RetryStageExecutionOutput:
      description: Represents the output of a <code>RetryStageExecution</code> action.
      example:
        pipelineExecutionId: ""
      properties:
        pipelineExecutionId:
          allOf:
          - $ref: '#/components/schemas/PipelineExecutionId'
          - description: The ID of the current workflow execution in the failed stage.
          title: pipelineExecutionId
      title: RetryStageExecutionOutput
      type: object
    RetryStageExecutionInput:
      description: Represents the input of a <code>RetryStageExecution</code> action.
      example:
        pipelineName: ""
        retryMode: ""
        stageName: ""
        pipelineExecutionId: ""
      properties:
        pipelineName:
          allOf:
          - $ref: '#/components/schemas/PipelineName'
          - description: The name of the pipeline that contains the failed stage.
          title: pipelineName
        stageName:
          allOf:
          - $ref: '#/components/schemas/StageName'
          - description: The name of the failed stage to be retried.
          title: stageName
        pipelineExecutionId:
          allOf:
          - $ref: '#/components/schemas/PipelineExecutionId'
          - description: The ID of the pipeline execution in the failed stage to be
              retried. Use the <a>GetPipelineState</a> action to retrieve the current
              pipelineExecutionId of the failed stage
          title: pipelineExecutionId
        retryMode:
          allOf:
          - $ref: '#/components/schemas/StageRetryMode'
          - description: "The scope of the retry attempt. Currently, the only supported\
              \ value is FAILED_ACTIONS."
          title: retryMode
      required:
      - pipelineExecutionId
      - pipelineName
      - retryMode
      - stageName
      title: RetryStageExecutionInput
      type: object
    ConflictException: {}
    StageNotRetryableException: {}
    NotLatestPipelineExecutionException: {}
    StartPipelineExecutionOutput:
      description: Represents the output of a <code>StartPipelineExecution</code>
        action.
      example:
        pipelineExecutionId: ""
      properties:
        pipelineExecutionId:
          allOf:
          - $ref: '#/components/schemas/PipelineExecutionId'
          - description: The unique system-generated ID of the pipeline execution
              that was started.
          title: pipelineExecutionId
      title: StartPipelineExecutionOutput
      type: object
    StartPipelineExecutionInput:
      description: Represents the input of a <code>StartPipelineExecution</code> action.
      example:
        clientRequestToken: ""
        name: ""
      properties:
        name:
          allOf:
          - $ref: '#/components/schemas/PipelineName'
          - description: The name of the pipeline to start.
          title: name
        clientRequestToken:
          allOf:
          - $ref: '#/components/schemas/ClientRequestToken'
          - description: The system-generated unique ID used to identify a unique
              execution request.
          title: clientRequestToken
      required:
      - name
      title: StartPipelineExecutionInput
      type: object
    StopPipelineExecutionOutput:
      example:
        pipelineExecutionId: ""
      properties:
        pipelineExecutionId:
          allOf:
          - $ref: '#/components/schemas/PipelineExecutionId'
          - description: The unique system-generated ID of the pipeline execution
              that was stopped.
          title: pipelineExecutionId
      title: StopPipelineExecutionOutput
      type: object
    StopPipelineExecutionInput:
      example:
        pipelineName: ""
        reason: ""
        abandon: ""
        pipelineExecutionId: ""
      properties:
        pipelineName:
          allOf:
          - $ref: '#/components/schemas/PipelineName'
          - description: The name of the pipeline to stop.
          title: pipelineName
        pipelineExecutionId:
          allOf:
          - $ref: '#/components/schemas/PipelineExecutionId'
          - description: The ID of the pipeline execution to be stopped in the current
              stage. Use the <code>GetPipelineState</code> action to retrieve the
              current pipelineExecutionId.
          title: pipelineExecutionId
        abandon:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          - description: "<p>Use this option to stop the pipeline execution by abandoning,\
              \ rather than finishing, in-progress actions.</p> <note> <p>This option\
              \ can lead to failed or out-of-sequence tasks.</p> </note>"
          title: abandon
        reason:
          allOf:
          - $ref: '#/components/schemas/StopPipelineExecutionReason'
          - description: "Use this option to enter comments, such as the reason the\
              \ pipeline was stopped."
          title: reason
      required:
      - pipelineExecutionId
      - pipelineName
      title: StopPipelineExecutionInput
      type: object
    PipelineExecutionNotStoppableException: {}
    DuplicatedStopRequestException: {}
    TagResourceOutput:
      properties: {}
      type: object
    TagResourceInput:
      example:
        resourceArn: ""
        tags: ""
      properties:
        resourceArn:
          allOf:
          - $ref: '#/components/schemas/ResourceArn'
          - description: The Amazon Resource Name (ARN) of the resource you want to
              add tags to.
          title: resourceArn
        tags:
          allOf:
          - $ref: '#/components/schemas/TagList'
          - description: The tags you want to modify or add to the resource.
          title: tags
      required:
      - resourceArn
      - tags
      title: TagResourceInput
      type: object
    UntagResourceOutput:
      properties: {}
      type: object
    UntagResourceInput:
      example:
        tagKeys: ""
        resourceArn: ""
      properties:
        resourceArn:
          allOf:
          - $ref: '#/components/schemas/ResourceArn'
          - description: ' The Amazon Resource Name (ARN) of the resource to remove
              tags from.'
          title: resourceArn
        tagKeys:
          allOf:
          - $ref: '#/components/schemas/TagKeyList'
          - description: The list of keys for the tags to be removed from the resource.
          title: tagKeys
      required:
      - resourceArn
      - tagKeys
      title: UntagResourceInput
      type: object
    UpdateActionTypeInput:
      example:
        actionType:
          urls:
            configurationUrl: ""
            executionUrlTemplate: ""
            entityUrlTemplate: ""
            revisionUrlTemplate: ""
          executor:
            jobTimeout: ""
            configuration:
              lambdaExecutorConfiguration:
                lambdaFunctionArn: ""
              jobWorkerExecutorConfiguration:
                pollingServicePrincipals: ""
                pollingAccounts: ""
            policyStatementsTemplate: ""
            type: ""
          permissions:
            allowedAccounts: ""
          inputArtifactDetails:
            maximumCount: ""
            minimumCount: ""
          description: ""
          outputArtifactDetails:
            maximumCount: ""
            minimumCount: ""
          id:
            owner: ""
            provider: ""
            category: ""
            version: ""
          properties: ""
      properties:
        actionType:
          $ref: '#/components/schemas/UpdateActionTypeInput_actionType'
      required:
      - actionType
      title: UpdateActionTypeInput
      type: object
    RequestFailedException: {}
    UpdatePipelineOutput:
      description: Represents the output of an <code>UpdatePipeline</code> action.
      example:
        pipeline:
          artifactStore:
            location: ""
            encryptionKey:
              id: ""
              type: ""
            type: ""
          roleArn: ""
          name: ""
          stages: ""
          artifactStores: ""
          version: ""
      properties:
        pipeline:
          $ref: '#/components/schemas/UpdatePipelineOutput_pipeline'
      title: UpdatePipelineOutput
      type: object
    UpdatePipelineInput:
      description: Represents the input of an <code>UpdatePipeline</code> action.
      example:
        pipeline:
          artifactStore:
            location: ""
            encryptionKey:
              id: ""
              type: ""
            type: ""
          roleArn: ""
          name: ""
          stages: ""
          artifactStores: ""
          version: ""
      properties:
        pipeline:
          $ref: '#/components/schemas/UpdatePipelineInput_pipeline'
      required:
      - pipeline
      title: UpdatePipelineInput
      type: object
    AWSRegionName:
      maxLength: 30
      minLength: 4
      type: string
    AccessKeyId:
      format: password
      type: string
    SecretAccessKey:
      format: password
      type: string
    SessionToken:
      format: password
      type: string
    AWSSessionCredentials:
      description: Represents an Amazon Web Services session credentials object. These
        credentials are temporary credentials that are issued by Amazon Web Services
        Secure Token Service (STS). They can be used to access input and output artifacts
        in the S3 bucket used to store artifact for the pipeline in CodePipeline.
      properties:
        accessKeyId:
          allOf:
          - $ref: '#/components/schemas/AccessKeyId'
          - description: The access key for the session.
          title: accessKeyId
        secretAccessKey:
          allOf:
          - $ref: '#/components/schemas/SecretAccessKey'
          - description: The secret access key for the session.
          title: secretAccessKey
        sessionToken:
          allOf:
          - $ref: '#/components/schemas/SessionToken'
          - description: The token for the session.
          title: sessionToken
      required:
      - accessKeyId
      - secretAccessKey
      - sessionToken
      title: AWSSessionCredentials
      type: object
    AccountId:
      pattern: "[0-9]{12}"
      title: AccountId
      type: string
    JobId:
      pattern: "[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}"
      type: string
    Nonce:
      maxLength: 50
      minLength: 1
      type: string
    JobStatus:
      enum:
      - Created
      - Queued
      - Dispatched
      - InProgress
      - TimedOut
      - Succeeded
      - Failed
      title: JobStatus
      type: string
    ThirdPartyJobId:
      maxLength: 512
      minLength: 1
      type: string
    ClientToken:
      maxLength: 256
      minLength: 1
      type: string
    ActionCategory:
      enum:
      - Source
      - Build
      - Deploy
      - Test
      - Invoke
      - Approval
      title: ActionCategory
      type: string
    ActionConfigurationMap:
      additionalProperties:
        $ref: '#/components/schemas/ActionConfigurationValue'
      type: object
    ActionConfiguration:
      description: Represents information about an action configuration.
      properties:
        configuration:
          allOf:
          - $ref: '#/components/schemas/ActionConfigurationMap'
          - description: The configuration data for the action.
          title: configuration
      title: ActionConfiguration
      type: object
    ActionConfigurationKey:
      maxLength: 50
      minLength: 1
      type: string
    ActionConfigurationValue:
      maxLength: 1000
      minLength: 1
      title: ActionConfigurationValue
      type: string
    Boolean:
      type: boolean
    Description:
      maxLength: 160
      minLength: 1
      type: string
    ActionConfigurationPropertyType:
      enum:
      - String
      - Number
      - Boolean
      title: ActionConfigurationPropertyType
      type: string
    ActionConfigurationProperty:
      description: Represents information about an action configuration property.
      properties:
        name:
          allOf:
          - $ref: '#/components/schemas/ActionConfigurationKey'
          - description: The name of the action configuration property.
          title: name
        required:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          - description: Whether the configuration property is a required value.
          title: required
        key:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          - description: Whether the configuration property is a key.
          title: key
        secret:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          - description: "<p>Whether the configuration property is secret. Secrets\
              \ are hidden from all calls except for <code>GetJobDetails</code>, <code>GetThirdPartyJobDetails</code>,\
              \ <code>PollForJobs</code>, and <code>PollForThirdPartyJobs</code>.</p>\
              \ <p>When updating a pipeline, passing * * * * * without changing any\
              \ other values of the action preserves the previous value of the secret.</p>"
          title: secret
        queryable:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          - description: "<p>Indicates that the property is used with <code>PollForJobs</code>.\
              \ When creating a custom action, an action can have up to one queryable\
              \ property. If it has one, that property must be both required and not\
              \ secret.</p> <p>If you create a pipeline with a custom action type,\
              \ and that custom action contains a queryable property, the value for\
              \ that configuration property is subject to other restrictions. The\
              \ value must be less than or equal to twenty (20) characters. The value\
              \ can contain only alphanumeric characters, underscores, and hyphens.</p>"
          title: queryable
        description:
          allOf:
          - $ref: '#/components/schemas/Description'
          - description: The description of the action configuration property that
              is displayed to users.
          title: description
        type:
          allOf:
          - $ref: '#/components/schemas/ActionConfigurationPropertyType'
          - description: The type of the configuration property.
          title: type
      required:
      - key
      - name
      - required
      - secret
      title: ActionConfigurationProperty
      type: object
    ActionConfigurationPropertyList:
      items:
        $ref: '#/components/schemas/ActionConfigurationProperty'
      maxItems: 10
      type: array
    ActionConfigurationQueryableValue:
      maxLength: 50
      minLength: 1
      pattern: "[a-zA-Z0-9_-]+"
      title: ActionConfigurationQueryableValue
      type: string
    ActionName:
      maxLength: 100
      minLength: 1
      pattern: "[A-Za-z0-9.@\\-_]+"
      type: string
    ActionExecutionId:
      type: string
    ActionContext:
      description: Represents the context of an action in the stage of a pipeline
        to a job worker.
      properties:
        name:
          allOf:
          - $ref: '#/components/schemas/ActionName'
          - description: The name of the action in the context of a job.
          title: name
        actionExecutionId:
          allOf:
          - $ref: '#/components/schemas/ActionExecutionId'
          - description: The system-generated unique ID that corresponds to an action's
              execution.
          title: actionExecutionId
      title: ActionContext
      type: object
    ActionTypeId:
      description: Represents information about an action type.
      properties:
        category:
          allOf:
          - $ref: '#/components/schemas/ActionCategory'
          - description: "<p>A category defines what kind of action can be taken in\
              \ the stage, and constrains the provider type for the action. Valid\
              \ categories are limited to one of the following values. </p> <ul> <li>\
              \ <p>Source</p> </li> <li> <p>Build</p> </li> <li> <p>Test</p> </li>\
              \ <li> <p>Deploy</p> </li> <li> <p>Invoke</p> </li> <li> <p>Approval</p>\
              \ </li> </ul>"
          title: category
        owner:
          allOf:
          - $ref: '#/components/schemas/ActionOwner'
          - description: "The creator of the action being called. There are three\
              \ valid values for the <code>Owner</code> field in the action category\
              \ section within your pipeline structure: <code>AWS</code>, <code>ThirdParty</code>,\
              \ and <code>Custom</code>. For more information, see <a href=\"https://docs.aws.amazon.com/codepipeline/latest/userguide/reference-pipeline-structure.html#actions-valid-providers\"\
              >Valid Action Types and Providers in CodePipeline</a>."
          title: owner
        provider:
          allOf:
          - $ref: '#/components/schemas/ActionProvider'
          - description: "The provider of the service being called by the action.\
              \ Valid providers are determined by the action category. For example,\
              \ an action in the Deploy category type might have a provider of CodeDeploy,\
              \ which would be specified as <code>CodeDeploy</code>. For more information,\
              \ see <a href=\"https://docs.aws.amazon.com/codepipeline/latest/userguide/reference-pipeline-structure.html#actions-valid-providers\"\
              >Valid Action Types and Providers in CodePipeline</a>."
          title: provider
        version:
          allOf:
          - $ref: '#/components/schemas/Version'
          - description: A string that describes the action version.
          title: version
      required:
      - category
      - owner
      - provider
      - version
      title: ActionTypeId
      type: object
    ActionRunOrder:
      maximum: 999
      minimum: 1
      type: integer
    OutputArtifactList:
      items:
        $ref: '#/components/schemas/OutputArtifact'
      type: array
    InputArtifactList:
      items:
        $ref: '#/components/schemas/InputArtifact'
      type: array
    RoleArn:
      maxLength: 1024
      pattern: "arn:aws(-[\\w]+)*:iam::[0-9]{12}:role/.*"
      type: string
    ActionNamespace:
      maxLength: 100
      minLength: 1
      pattern: "[A-Za-z0-9@\\-_]+"
      type: string
    ActionDeclaration:
      description: Represents information about an action declaration.
      properties:
        name:
          allOf:
          - $ref: '#/components/schemas/ActionName'
          - description: The action declaration's name.
          title: name
        actionTypeId:
          $ref: '#/components/schemas/ActionDeclaration_actionTypeId'
        runOrder:
          allOf:
          - $ref: '#/components/schemas/ActionRunOrder'
          - description: The order in which actions are run.
          title: runOrder
        configuration:
          allOf:
          - $ref: '#/components/schemas/ActionConfigurationMap'
          - description: "<p>The action's configuration. These are key-value pairs\
              \ that specify input values for an action. For more information, see\
              \ <a href=\"https://docs.aws.amazon.com/codepipeline/latest/userguide/reference-pipeline-structure.html#action-requirements\"\
              >Action Structure Requirements in CodePipeline</a>. For the list of\
              \ configuration properties for the CloudFormation action type in CodePipeline,\
              \ see <a href=\"https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/continuous-delivery-codepipeline-action-reference.html\"\
              >Configuration Properties Reference</a> in the <i>CloudFormation User\
              \ Guide</i>. For template snippets with examples, see <a href=\"https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/continuous-delivery-codepipeline-parameter-override-functions.html\"\
              >Using Parameter Override Functions with CodePipeline Pipelines</a>\
              \ in the <i>CloudFormation User Guide</i>.</p> <p>The values can be\
              \ represented in either JSON or YAML format. For example, the JSON configuration\
              \ item format is as follows: </p> <p> <i>JSON:</i> </p> <p> <code>\"\
              Configuration\" : { Key : Value },</code> </p>"
          title: configuration
        outputArtifacts:
          allOf:
          - $ref: '#/components/schemas/OutputArtifactList'
          - description: "The name or ID of the result of the action declaration,\
              \ such as a test or build artifact."
          title: outputArtifacts
        inputArtifacts:
          allOf:
          - $ref: '#/components/schemas/InputArtifactList'
          - description: "The name or ID of the artifact consumed by the action, such\
              \ as a test or build artifact."
          title: inputArtifacts
        roleArn:
          allOf:
          - $ref: '#/components/schemas/RoleArn'
          - description: The ARN of the IAM service role that performs the declared
              action. This is assumed through the roleArn for the pipeline.
          title: roleArn
        region:
          allOf:
          - $ref: '#/components/schemas/AWSRegionName'
          - description: "The action declaration's Amazon Web Services Region, such\
              \ as us-east-1."
          title: region
        namespace:
          allOf:
          - $ref: '#/components/schemas/ActionNamespace'
          - description: The variable namespace associated with the action. All variables
              produced as output by this action fall under this namespace.
          title: namespace
      required:
      - actionTypeId
      - name
      title: ActionDeclaration
      type: object
    ActionExecutionStatus:
      enum:
      - InProgress
      - Abandoned
      - Succeeded
      - Failed
      title: ActionExecutionStatus
      type: string
    ExecutionSummary:
      maxLength: 2048
      minLength: 1
      type: string
    Timestamp:
      format: date-time
      type: string
    ActionExecutionToken:
      type: string
    LastUpdatedBy:
      type: string
    ExecutionId:
      maxLength: 1500
      minLength: 1
      type: string
    Url:
      maxLength: 2048
      minLength: 1
      type: string
    Percentage:
      maximum: 100
      minimum: 0
      type: integer
    ErrorDetails:
      description: Represents information about an error in CodePipeline.
      properties:
        code:
          allOf:
          - $ref: '#/components/schemas/Code'
          - description: The system ID or number code of the error.
          title: code
        message:
          allOf:
          - $ref: '#/components/schemas/Message'
          - description: The text of the error message.
          title: message
      title: ErrorDetails
      type: object
    ActionExecution:
      description: Represents information about the run of an action.
      properties:
        actionExecutionId:
          allOf:
          - $ref: '#/components/schemas/ActionExecutionId'
          - description: "<p>ID of the workflow action execution in the current stage.\
              \ Use the <a>GetPipelineState</a> action to retrieve the current action\
              \ execution details of the current stage.</p> <note> <p>For older executions,\
              \ this field might be empty. The action execution ID is available for\
              \ executions run on or after March 2020.</p> </note>"
          title: actionExecutionId
        status:
          allOf:
          - $ref: '#/components/schemas/ActionExecutionStatus'
          - description: "The status of the action, or for a completed action, the\
              \ last status of the action."
          title: status
        summary:
          allOf:
          - $ref: '#/components/schemas/ExecutionSummary'
          - description: A summary of the run of the action.
          title: summary
        lastStatusChange:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          - description: The last status change of the action.
          title: lastStatusChange
        token:
          allOf:
          - $ref: '#/components/schemas/ActionExecutionToken'
          - description: The system-generated token used to identify a unique approval
              request. The token for each open approval request can be obtained using
              the <code>GetPipelineState</code> command. It is used to validate that
              the approval request corresponding to this token is still valid.
          title: token
        lastUpdatedBy:
          allOf:
          - $ref: '#/components/schemas/LastUpdatedBy'
          - description: The ARN of the user who last changed the pipeline.
          title: lastUpdatedBy
        externalExecutionId:
          allOf:
          - $ref: '#/components/schemas/ExecutionId'
          - description: The external ID of the run of the action.
          title: externalExecutionId
        externalExecutionUrl:
          allOf:
          - $ref: '#/components/schemas/Url'
          - description: "The URL of a resource external to Amazon Web Services that\
              \ is used when running the action (for example, an external repository\
              \ URL)."
          title: externalExecutionUrl
        percentComplete:
          allOf:
          - $ref: '#/components/schemas/Percentage'
          - description: A percentage of completeness of the action as it runs.
          title: percentComplete
        errorDetails:
          $ref: '#/components/schemas/ActionExecution_errorDetails'
      title: ActionExecution
      type: object
    PipelineExecutionId:
      pattern: "[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}"
      type: string
    PipelineVersion:
      minimum: 1
      type: integer
    StageName:
      maxLength: 100
      minLength: 1
      pattern: "[A-Za-z0-9.@\\-_]+"
      type: string
    ActionExecutionInput:
      description: Input information used for an action execution.
      properties:
        actionTypeId:
          $ref: '#/components/schemas/ActionTypeId'
        configuration:
          allOf:
          - $ref: '#/components/schemas/ActionConfigurationMap'
          - description: Configuration data for an action execution.
          title: configuration
        resolvedConfiguration:
          allOf:
          - $ref: '#/components/schemas/ResolvedActionConfigurationMap'
          - description: Configuration data for an action execution with all variable
              references replaced with their real values for the execution.
          title: resolvedConfiguration
        roleArn:
          allOf:
          - $ref: '#/components/schemas/RoleArn'
          - description: 'The ARN of the IAM service role that performs the declared
              action. This is assumed through the roleArn for the pipeline. '
          title: roleArn
        region:
          allOf:
          - $ref: '#/components/schemas/AWSRegionName'
          - description: "The Amazon Web Services Region for the action, such as us-east-1."
          title: region
        inputArtifacts:
          allOf:
          - $ref: '#/components/schemas/ArtifactDetailList'
          - description: Details of input artifacts of the action that correspond
              to the action execution.
          title: inputArtifacts
        namespace:
          allOf:
          - $ref: '#/components/schemas/ActionNamespace'
          - description: The variable namespace associated with the action. All variables
              produced as output by this action fall under this namespace.
          title: namespace
      title: ActionExecutionInput
      type: object
    ActionExecutionOutput:
      description: "Output details listed for an action execution, such as the action\
        \ execution result."
      properties:
        outputArtifacts:
          allOf:
          - $ref: '#/components/schemas/ArtifactDetailList'
          - description: Details of output artifacts of the action that correspond
              to the action execution.
          title: outputArtifacts
        executionResult:
          $ref: '#/components/schemas/ActionExecutionOutput_executionResult'
        outputVariables:
          allOf:
          - $ref: '#/components/schemas/OutputVariablesMap'
          - description: The outputVariables field shows the key-value pairs that
              were output as part of that execution.
          title: outputVariables
      title: ActionExecutionOutput
      type: object
    ActionExecutionDetail:
      description: "Returns information about an execution of an action, including\
        \ the action execution ID, and the name, version, and timing of the action. "
      properties:
        pipelineExecutionId:
          allOf:
          - $ref: '#/components/schemas/PipelineExecutionId'
          - description: The pipeline execution ID for the action execution.
          title: pipelineExecutionId
        actionExecutionId:
          allOf:
          - $ref: '#/components/schemas/ActionExecutionId'
          - description: The action execution ID.
          title: actionExecutionId
        pipelineVersion:
          allOf:
          - $ref: '#/components/schemas/PipelineVersion'
          - description: The version of the pipeline where the action was run.
          title: pipelineVersion
        stageName:
          allOf:
          - $ref: '#/components/schemas/StageName'
          - description: The name of the stage that contains the action.
          title: stageName
        actionName:
          allOf:
          - $ref: '#/components/schemas/ActionName'
          - description: The name of the action.
          title: actionName
        startTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          - description: The start time of the action execution.
          title: startTime
        lastUpdateTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          - description: The last update time of the action execution.
          title: lastUpdateTime
        status:
          allOf:
          - $ref: '#/components/schemas/ActionExecutionStatus'
          - description: " The status of the action execution. Status categories are\
              \ <code>InProgress</code>, <code>Succeeded</code>, and <code>Failed</code>."
          title: status
        input:
          $ref: '#/components/schemas/ActionExecutionDetail_input'
        output:
          $ref: '#/components/schemas/ActionExecutionDetail_output'
      title: ActionExecutionDetail
      type: object
    ActionExecutionDetailList:
      items:
        $ref: '#/components/schemas/ActionExecutionDetail'
      type: array
    ActionExecutionFilter:
      description: Filter values for the action execution.
      properties:
        pipelineExecutionId:
          allOf:
          - $ref: '#/components/schemas/PipelineExecutionId'
          - description: The pipeline execution ID used to filter action execution
              history.
          title: pipelineExecutionId
      title: ActionExecutionFilter
      type: object
    ResolvedActionConfigurationMap:
      additionalProperties:
        $ref: '#/components/schemas/String'
      type: object
    ArtifactDetailList:
      items:
        $ref: '#/components/schemas/ArtifactDetail'
      type: array
    ActionExecutionResult:
      description: "Execution result information, such as the external execution ID."
      properties:
        externalExecutionId:
          allOf:
          - $ref: '#/components/schemas/ExternalExecutionId'
          - description: The action provider's external ID for the action execution.
          title: externalExecutionId
        externalExecutionSummary:
          allOf:
          - $ref: '#/components/schemas/ExternalExecutionSummary'
          - description: The action provider's summary for the action execution.
          title: externalExecutionSummary
        externalExecutionUrl:
          allOf:
          - $ref: '#/components/schemas/Url'
          - description: "The deepest external link to the external resource (for\
              \ example, a repository URL or deployment endpoint) that is used when\
              \ running the action."
          title: externalExecutionUrl
      title: ActionExecutionResult
      type: object
    OutputVariablesMap:
      additionalProperties:
        $ref: '#/components/schemas/OutputVariablesValue'
      type: object
    ExternalExecutionId:
      type: string
    ExternalExecutionSummary:
      type: string
    ActionOwner:
      enum:
      - AWS
      - ThirdParty
      - Custom
      title: ActionOwner
      type: string
    ActionProvider:
      maxLength: 35
      minLength: 1
      pattern: "[0-9A-Za-z_-]+"
      type: string
    Revision:
      maxLength: 1500
      minLength: 1
      type: string
    RevisionChangeIdentifier:
      maxLength: 100
      minLength: 1
      type: string
    ActionRevision:
      description: Represents information about the version (or revision) of an action.
      properties:
        revisionId:
          allOf:
          - $ref: '#/components/schemas/Revision'
          - description: The system-generated unique ID that identifies the revision
              number of the action.
          title: revisionId
        revisionChangeId:
          allOf:
          - $ref: '#/components/schemas/RevisionChangeIdentifier'
          - description: "The unique identifier of the change that set the state to\
              \ this revision (for example, a deployment ID or timestamp)."
          title: revisionChangeId
        created:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          - description: "The date and time when the most recent version of the action\
              \ was created, in timestamp format."
          title: created
      required:
      - created
      - revisionChangeId
      - revisionId
      title: ActionRevision
      type: object
    ActionState:
      description: Represents information about the state of an action.
      properties:
        actionName:
          allOf:
          - $ref: '#/components/schemas/ActionName'
          - description: The name of the action.
          title: actionName
        currentRevision:
          $ref: '#/components/schemas/PutActionRevisionInput_actionRevision'
        latestExecution:
          $ref: '#/components/schemas/ActionState_latestExecution'
        entityUrl:
          allOf:
          - $ref: '#/components/schemas/Url'
          - description: "A URL link for more information about the state of the action,\
              \ such as a deployment group details page."
          title: entityUrl
        revisionUrl:
          allOf:
          - $ref: '#/components/schemas/Url'
          - description: "A URL link for more information about the revision, such\
              \ as a commit details page."
          title: revisionUrl
      title: ActionState
      type: object
    ActionStateList:
      items:
        $ref: '#/components/schemas/ActionState'
      type: array
    ActionTypeSettings:
      description: Returns information about the settings for an action type.
      properties:
        thirdPartyConfigurationUrl:
          allOf:
          - $ref: '#/components/schemas/Url'
          - description: The URL of a sign-up page where users can sign up for an
              external service and perform initial configuration of the action provided
              by that service.
          title: thirdPartyConfigurationUrl
        entityUrlTemplate:
          allOf:
          - $ref: '#/components/schemas/UrlTemplate'
          - description: "The URL returned to the CodePipeline console that provides\
              \ a deep link to the resources of the external system, such as the configuration\
              \ page for a CodeDeploy deployment group. This link is provided as part\
              \ of the action display in the pipeline."
          title: entityUrlTemplate
        executionUrlTemplate:
          allOf:
          - $ref: '#/components/schemas/UrlTemplate'
          - description: "The URL returned to the CodePipeline console that contains\
              \ a link to the top-level landing page for the external system, such\
              \ as the console page for CodeDeploy. This link is shown on the pipeline\
              \ view page in the CodePipeline console and provides a link to the execution\
              \ entity of the external action."
          title: executionUrlTemplate
        revisionUrlTemplate:
          allOf:
          - $ref: '#/components/schemas/UrlTemplate'
          - description: The URL returned to the CodePipeline console that contains
              a link to the page where customers can update or change the configuration
              of the external action.
          title: revisionUrlTemplate
      title: ActionTypeSettings
      type: object
    ArtifactDetails:
      description: Returns information about the details of an artifact.
      properties:
        minimumCount:
          allOf:
          - $ref: '#/components/schemas/MinimumArtifactCount'
          - description: The minimum number of artifacts allowed for the action type.
          title: minimumCount
        maximumCount:
          allOf:
          - $ref: '#/components/schemas/MaximumArtifactCount'
          - description: The maximum number of artifacts allowed for the action type.
          title: maximumCount
      required:
      - maximumCount
      - minimumCount
      title: ArtifactDetails
      type: object
    ActionType:
      description: Returns information about the details of an action type.
      properties:
        id:
          $ref: '#/components/schemas/PollForJobsInput_actionTypeId'
        settings:
          $ref: '#/components/schemas/ActionType_settings'
        actionConfigurationProperties:
          allOf:
          - $ref: '#/components/schemas/ActionConfigurationPropertyList'
          - description: The configuration properties for the action type.
          title: actionConfigurationProperties
        inputArtifactDetails:
          $ref: '#/components/schemas/CreateCustomActionTypeInput_inputArtifactDetails'
        outputArtifactDetails:
          $ref: '#/components/schemas/CreateCustomActionTypeInput_outputArtifactDetails'
      required:
      - id
      - inputArtifactDetails
      - outputArtifactDetails
      title: ActionType
      type: object
    MinimumActionTypeArtifactCount:
      maximum: 10
      minimum: 0
      type: integer
    MaximumActionTypeArtifactCount:
      maximum: 10
      minimum: 0
      type: integer
    ActionTypeArtifactDetails:
      description: "Information about parameters for artifacts associated with the\
        \ action type, such as the minimum and maximum artifacts allowed."
      properties:
        minimumCount:
          allOf:
          - $ref: '#/components/schemas/MinimumActionTypeArtifactCount'
          - description: "The minimum number of artifacts that can be used with the\
              \ action type. For example, you should specify a minimum and maximum\
              \ of zero input artifacts for an action type with a category of <code>source</code>."
          title: minimumCount
        maximumCount:
          allOf:
          - $ref: '#/components/schemas/MaximumActionTypeArtifactCount'
          - description: "The maximum number of artifacts that can be used with the\
              \ actiontype. For example, you should specify a minimum and maximum\
              \ of zero input artifacts for an action type with a category of <code>source</code>."
          title: maximumCount
      required:
      - maximumCount
      - minimumCount
      title: ActionTypeArtifactDetails
      type: object
    ActionTypeDescription:
      maxLength: 1024
      minLength: 1
      type: string
    ActionTypeExecutor:
      description: "The action engine, or executor, for an action type created for\
        \ a provider, where the action is to be used by customers of the provider.\
        \ The action engine is associated with the model used to create and update\
        \ the action, such as the Lambda integration model."
      properties:
        configuration:
          $ref: '#/components/schemas/ActionTypeExecutor_configuration'
        type:
          allOf:
          - $ref: '#/components/schemas/ExecutorType'
          - description: "The integration model used to create and update the action\
              \ type, <code>Lambda</code> or <code>JobWorker</code>. "
          title: type
        policyStatementsTemplate:
          allOf:
          - $ref: '#/components/schemas/PolicyStatementsTemplate'
          - description: "<p>The policy statement that specifies the permissions in\
              \ the CodePipeline customer account that are needed to successfully\
              \ run an action.</p> <p>To grant permission to another account, specify\
              \ the account ID as the Principal, a domain-style identifier defined\
              \ by the service, for example <code>codepipeline.amazonaws.com</code>.</p>\
              \ <note> <p>The size of the passed JSON policy document cannot exceed\
              \ 2048 characters.</p> </note>"
          title: policyStatementsTemplate
        jobTimeout:
          allOf:
          - $ref: '#/components/schemas/JobTimeout'
          - description: "The timeout in seconds for the job. An action execution\
              \ can have multiple jobs. This is the timeout for a single job, not\
              \ the entire action execution."
          title: jobTimeout
      required:
      - configuration
      - type
      title: ActionTypeExecutor
      type: object
    ActionTypeIdentifier:
      description: "Specifies the category, owner, provider, and version of the action\
        \ type."
      properties:
        category:
          allOf:
          - $ref: '#/components/schemas/ActionCategory'
          - description: "<p>Defines what kind of action can be taken in the stage,\
              \ one of the following:</p> <ul> <li> <p> <code>Source</code> </p> </li>\
              \ <li> <p> <code>Build</code> </p> </li> <li> <p> <code>Test</code>\
              \ </p> </li> <li> <p> <code>Deploy</code> </p> </li> <li> <p> <code>Approval</code>\
              \ </p> </li> <li> <p> <code>Invoke</code> </p> </li> </ul>"
          title: category
        owner:
          allOf:
          - $ref: '#/components/schemas/ActionTypeOwner'
          - description: "The creator of the action type being called: <code>AWS</code>\
              \ or <code>ThirdParty</code>."
          title: owner
        provider:
          allOf:
          - $ref: '#/components/schemas/ActionProvider'
          - description: The provider of the action type being called. The provider
              name is supplied when the action type is created.
          title: provider
        version:
          allOf:
          - $ref: '#/components/schemas/Version'
          - description: A string that describes the action type version.
          title: version
      required:
      - category
      - owner
      - provider
      - version
      title: ActionTypeIdentifier
      type: object
    ActionTypePermissions:
      description: Details identifying the users with permissions to use the action
        type.
      properties:
        allowedAccounts:
          allOf:
          - $ref: '#/components/schemas/AllowedAccounts'
          - description: A list of Amazon Web Services account IDs with access to
              use the action type in their pipelines.
          title: allowedAccounts
      required:
      - allowedAccounts
      title: ActionTypePermissions
      type: object
    ActionTypeUrls:
      description: "Returns information about URLs for web pages that display to customers\
        \ as links on the pipeline view, such as an external configuration page for\
        \ the action type."
      properties:
        configurationUrl:
          allOf:
          - $ref: '#/components/schemas/Url'
          - description: The URL returned to the CodePipeline console that contains
              a link to the page where customers can configure the external action.
          title: configurationUrl
        entityUrlTemplate:
          allOf:
          - $ref: '#/components/schemas/UrlTemplate'
          - description: "The URL returned to the CodePipeline console that provides\
              \ a deep link to the resources of the external system, such as a status\
              \ page. This link is provided as part of the action display in the pipeline."
          title: entityUrlTemplate
        executionUrlTemplate:
          allOf:
          - $ref: '#/components/schemas/UrlTemplate'
          - description: "The link to an execution page for the action type in progress.\
              \ For example, for a CodeDeploy action, this link is shown on the pipeline\
              \ view page in the CodePipeline console, and it links to a CodeDeploy\
              \ status page."
          title: executionUrlTemplate
        revisionUrlTemplate:
          allOf:
          - $ref: '#/components/schemas/UrlTemplate'
          - description: The URL returned to the CodePipeline console that contains
              a link to the page where customers can update or change the configuration
              of the external action.
          title: revisionUrlTemplate
      title: ActionTypeUrls
      type: object
    ActionTypeDeclaration:
      description: The parameters for the action type definition that are provided
        when the action type is created or updated.
      properties:
        description:
          allOf:
          - $ref: '#/components/schemas/ActionTypeDescription'
          - description: The description for the action type to be updated.
          title: description
        executor:
          $ref: '#/components/schemas/ActionTypeDeclaration_executor'
        id:
          $ref: '#/components/schemas/ActionTypeDeclaration_id'
        inputArtifactDetails:
          $ref: '#/components/schemas/ActionTypeDeclaration_inputArtifactDetails'
        outputArtifactDetails:
          $ref: '#/components/schemas/ActionTypeDeclaration_outputArtifactDetails'
        permissions:
          $ref: '#/components/schemas/ActionTypeDeclaration_permissions'
        properties:
          description: The properties of the action type to be updated.
          title: properties
        urls:
          $ref: '#/components/schemas/ActionTypeDeclaration_urls'
      required:
      - executor
      - id
      - inputArtifactDetails
      - outputArtifactDetails
      title: ActionTypeDeclaration
      type: object
    ExecutorConfiguration:
      description: "The action engine, or executor, related to the supported integration\
        \ model used to create and update the action type. The available executor\
        \ types are <code>Lambda</code> and <code>JobWorker</code>."
      properties:
        lambdaExecutorConfiguration:
          $ref: '#/components/schemas/ExecutorConfiguration_lambdaExecutorConfiguration'
        jobWorkerExecutorConfiguration:
          $ref: '#/components/schemas/ExecutorConfiguration_jobWorkerExecutorConfiguration'
      title: ExecutorConfiguration
      type: object
    ExecutorType:
      enum:
      - JobWorker
      - Lambda
      title: ExecutorType
      type: string
    PolicyStatementsTemplate:
      maxLength: 2048
      minLength: 1
      type: string
    JobTimeout:
      maximum: 43200
      minimum: 60
      type: integer
    Version:
      maxLength: 9
      minLength: 1
      pattern: "[0-9A-Za-z_-]+"
      type: string
    ActionTypeOwner:
      pattern: AWS|ThirdParty
      type: string
    ActionTypeList:
      items:
        $ref: '#/components/schemas/ActionType'
      type: array
    AllowedAccounts:
      items:
        $ref: '#/components/schemas/AllowedAccount'
      maxItems: 1000
      minItems: 1
      type: array
    ActionTypeProperty:
      description: "Represents information about each property specified in the action\
        \ configuration, such as the description and key name that display for the\
        \ customer using the action type."
      properties:
        name:
          allOf:
          - $ref: '#/components/schemas/ActionConfigurationKey'
          - description: The property name that is displayed to users.
        optional:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          - description: Whether the configuration property is an optional value.
        key:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          - description: Whether the configuration property is a key.
        noEcho:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          - description: "Whether to omit the field value entered by the customer\
              \ in the log. If <code>true</code>, the value is not saved in CloudTrail\
              \ logs for the action execution."
        queryable:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          - description: "Indicates that the property is used with polling. An action\
              \ type can have up to one queryable property. If it has one, that property\
              \ must be both required and not secret."
        description:
          allOf:
          - $ref: '#/components/schemas/PropertyDescription'
          - description: The description of the property that is displayed to users.
      required:
      - key
      - name
      - noEcho
      - optional
      type: object
    ActionTypeProperties:
      items:
        $ref: '#/components/schemas/ActionTypeProperty'
      maxItems: 10
      type: array
    PropertyDescription:
      maxLength: 250
      minLength: 1
      type: string
    UrlTemplate:
      maxLength: 2048
      minLength: 1
      type: string
    AllowedAccount:
      pattern: "[0-9]{12}|\\*"
      title: AllowedAccount
      type: string
    ApprovalSummary:
      maxLength: 512
      minLength: 0
      type: string
    ApprovalStatus:
      enum:
      - Approved
      - Rejected
      title: ApprovalStatus
      type: string
    ApprovalResult:
      description: Represents information about the result of an approval request.
      properties:
        summary:
          allOf:
          - $ref: '#/components/schemas/ApprovalSummary'
          - description: The summary of the current status of the approval request.
          title: summary
        status:
          allOf:
          - $ref: '#/components/schemas/ApprovalStatus'
          - description: The response submitted by a reviewer assigned to an approval
              action request.
          title: status
      required:
      - status
      - summary
      title: ApprovalResult
      type: object
    ApprovalToken:
      pattern: "[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}"
      type: string
    ArtifactName:
      maxLength: 100
      minLength: 1
      pattern: "[a-zA-Z0-9_\\-]+"
      type: string
    ArtifactLocation:
      description: Represents information about the location of an artifact.
      properties:
        type:
          allOf:
          - $ref: '#/components/schemas/ArtifactLocationType'
          - description: The type of artifact in the location.
          title: type
        s3Location:
          $ref: '#/components/schemas/ArtifactLocation_s3Location'
      title: ArtifactLocation
      type: object
    Artifact:
      description: "Artifacts are the files that are worked on by actions in the pipeline.\
        \ See the action configuration for each action for details about artifact\
        \ parameters. For example, the S3 source action artifact is a file name (or\
        \ file path), and the files are generally provided as a ZIP file. Example\
        \ artifact name: SampleApp_Windows.zip"
      properties:
        name:
          allOf:
          - $ref: '#/components/schemas/ArtifactName'
          - description: The artifact's name.
          title: name
        revision:
          allOf:
          - $ref: '#/components/schemas/Revision'
          - description: "The artifact's revision ID. Depending on the type of object,\
              \ this could be a commit ID (GitHub) or a revision ID (Amazon S3)."
          title: revision
        location:
          $ref: '#/components/schemas/Artifact_location'
      title: Artifact
      type: object
    S3Location:
      description: The Amazon S3 artifact location for an action's artifacts.
      properties:
        bucket:
          allOf:
          - $ref: '#/components/schemas/S3Bucket'
          - description: The Amazon S3 artifact bucket for an action's artifacts.
          title: bucket
        key:
          allOf:
          - $ref: '#/components/schemas/S3Key'
          - description: The artifact name.
          title: key
      title: S3Location
      type: object
    ArtifactDetail:
      description: "Artifact details for the action execution, such as the artifact\
        \ location."
      properties:
        name:
          allOf:
          - $ref: '#/components/schemas/ArtifactName'
          - description: The artifact object name for the action execution.
          title: name
        s3location:
          $ref: '#/components/schemas/ArtifactDetail_s3location'
      title: ArtifactDetail
      type: object
    MinimumArtifactCount:
      maximum: 5
      minimum: 0
      type: integer
    MaximumArtifactCount:
      maximum: 5
      minimum: 0
      type: integer
    ArtifactList:
      items:
        $ref: '#/components/schemas/Artifact'
      type: array
    ArtifactLocationType:
      enum:
      - S3
      title: ArtifactLocationType
      type: string
    S3ArtifactLocation:
      description: The location of the S3 bucket that contains a revision.
      properties:
        bucketName:
          allOf:
          - $ref: '#/components/schemas/S3BucketName'
          - description: The name of the S3 bucket.
          title: bucketName
        objectKey:
          allOf:
          - $ref: '#/components/schemas/S3ObjectKey'
          - description: "The key of the object in the S3 bucket, which uniquely identifies\
              \ the object in the bucket."
          title: objectKey
      required:
      - bucketName
      - objectKey
      title: S3ArtifactLocation
      type: object
    RevisionSummary:
      maxLength: 2048
      minLength: 1
      type: string
    ArtifactRevision:
      description: 'Represents revision details of an artifact. '
      properties:
        name:
          allOf:
          - $ref: '#/components/schemas/ArtifactName'
          - description: "The name of an artifact. This name might be system-generated,\
              \ such as \"MyApp\", or defined by the user when an action is created."
          title: name
        revisionId:
          allOf:
          - $ref: '#/components/schemas/Revision'
          - description: The revision ID of the artifact.
          title: revisionId
        revisionChangeIdentifier:
          allOf:
          - $ref: '#/components/schemas/RevisionChangeIdentifier'
          - description: "An additional identifier for a revision, such as a commit\
              \ date or, for artifacts stored in Amazon S3 buckets, the ETag value."
          title: revisionChangeIdentifier
        revisionSummary:
          allOf:
          - $ref: '#/components/schemas/RevisionSummary'
          - description: "Summary information about the most recent revision of the\
              \ artifact. For GitHub and CodeCommit repositories, the commit message.\
              \ For Amazon S3 buckets or actions, the user-provided content of a <code>codepipeline-artifact-revision-summary</code>\
              \ key specified in the object metadata."
          title: revisionSummary
        created:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          - description: "The date and time when the most recent revision of the artifact\
              \ was created, in timestamp format."
          title: created
        revisionUrl:
          allOf:
          - $ref: '#/components/schemas/Url'
          - description: "The commit ID for the artifact revision. For artifacts stored\
              \ in GitHub or CodeCommit repositories, the commit ID is linked to a\
              \ commit details page."
          title: revisionUrl
      title: ArtifactRevision
      type: object
    ArtifactRevisionList:
      items:
        $ref: '#/components/schemas/ArtifactRevision'
      type: array
    ArtifactStoreType:
      enum:
      - S3
      title: ArtifactStoreType
      type: string
    ArtifactStoreLocation:
      maxLength: 63
      minLength: 3
      pattern: "[a-zA-Z0-9\\-\\.]+"
      type: string
    EncryptionKey:
      description: "Represents information about the key used to encrypt data in the\
        \ artifact store, such as an Amazon Web Services Key Management Service (Key\
        \ Management Service) key."
      properties:
        id:
          allOf:
          - $ref: '#/components/schemas/EncryptionKeyId'
          - description: "<p>The ID used to identify the key. For an Amazon Web Services\
              \ KMS key, you can use the key ID, the key ARN, or the alias ARN.</p>\
              \ <note> <p>Aliases are recognized only in the account that created\
              \ the KMS key. For cross-account actions, you can only use the key ID\
              \ or key ARN to identify the key. Cross-account actions involve using\
              \ the role from the other account (AccountB), so specifying the key\
              \ ID will use the key from the other account (AccountB).</p> </note>"
          title: id
        type:
          allOf:
          - $ref: '#/components/schemas/EncryptionKeyType'
          - description: "The type of encryption key, such as an Amazon Web Services\
              \ KMS key. When creating or updating a pipeline, the value must be set\
              \ to 'KMS'."
          title: type
      required:
      - id
      - type
      title: EncryptionKey
      type: object
    ArtifactStore:
      description: "<p>The S3 bucket where artifacts for the pipeline are stored.</p>\
        \ <note> <p>You must include either <code>artifactStore</code> or <code>artifactStores</code>\
        \ in your pipeline, but you cannot use both. If you create a cross-region\
        \ action in your pipeline, you must use <code>artifactStores</code>.</p> </note>"
      properties:
        type:
          allOf:
          - $ref: '#/components/schemas/ArtifactStoreType'
          - description: "The type of the artifact store, such as S3."
          title: type
        location:
          allOf:
          - $ref: '#/components/schemas/ArtifactStoreLocation'
          - description: The S3 bucket used for storing the artifacts for a pipeline.
              You can specify the name of an S3 bucket but not a folder in the bucket.
              A folder to contain the pipeline artifacts is created for you based
              on the name of the pipeline. You can use any S3 bucket in the same Amazon
              Web Services Region as the pipeline to store your pipeline artifacts.
          title: location
        encryptionKey:
          $ref: '#/components/schemas/ArtifactStore_encryptionKey'
      required:
      - location
      - type
      title: ArtifactStore
      type: object
    ArtifactStoreMap:
      additionalProperties:
        $ref: '#/components/schemas/ArtifactStore'
      type: object
    BlockerName:
      maxLength: 100
      minLength: 1
      type: string
    BlockerType:
      enum:
      - Schedule
      title: BlockerType
      type: string
    BlockerDeclaration:
      description: Reserved for future use.
      properties:
        name:
          allOf:
          - $ref: '#/components/schemas/BlockerName'
          - description: Reserved for future use.
          title: name
        type:
          allOf:
          - $ref: '#/components/schemas/BlockerType'
          - description: Reserved for future use.
          title: type
      required:
      - name
      - type
      title: BlockerDeclaration
      type: object
    ClientId:
      pattern: "[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}"
      type: string
    ClientRequestToken:
      maxLength: 128
      minLength: 1
      pattern: "^[a-zA-Z0-9-]+$"
      type: string
    Code:
      type: string
    ContinuationToken:
      maxLength: 2048
      minLength: 1
      type: string
    TagList:
      items:
        $ref: '#/components/schemas/Tag'
      type: array
    PipelineDeclaration:
      description: Represents the structure of actions and stages to be performed
        in the pipeline.
      properties:
        name:
          allOf:
          - $ref: '#/components/schemas/PipelineName'
          - description: The name of the pipeline.
          title: name
        roleArn:
          allOf:
          - $ref: '#/components/schemas/RoleArn'
          - description: "The Amazon Resource Name (ARN) for CodePipeline to use to\
              \ either perform actions with no <code>actionRoleArn</code>, or to use\
              \ to assume roles for actions with an <code>actionRoleArn</code>."
          title: roleArn
        artifactStore:
          $ref: '#/components/schemas/PipelineDeclaration_artifactStore'
        artifactStores:
          allOf:
          - $ref: '#/components/schemas/ArtifactStoreMap'
          - description: "<p>A mapping of <code>artifactStore</code> objects and their\
              \ corresponding Amazon Web Services Regions. There must be an artifact\
              \ store for the pipeline Region and for each cross-region action in\
              \ the pipeline.</p> <note> <p>You must include either <code>artifactStore</code>\
              \ or <code>artifactStores</code> in your pipeline, but you cannot use\
              \ both. If you create a cross-region action in your pipeline, you must\
              \ use <code>artifactStores</code>.</p> </note>"
          title: artifactStores
        stages:
          allOf:
          - $ref: '#/components/schemas/PipelineStageDeclarationList'
          - description: The stage in which to perform the action.
          title: stages
        version:
          allOf:
          - $ref: '#/components/schemas/PipelineVersion'
          - description: The version number of the pipeline. A new pipeline always
              has a version number of 1. This number is incremented when a pipeline
              is updated.
          title: version
      required:
      - name
      - roleArn
      - stages
      title: PipelineDeclaration
      type: object
    Time:
      format: date-time
      type: string
    CurrentRevision:
      description: Represents information about a current revision.
      properties:
        revision:
          allOf:
          - $ref: '#/components/schemas/Revision'
          - description: The revision ID of the current version of an artifact.
          title: revision
        changeIdentifier:
          allOf:
          - $ref: '#/components/schemas/RevisionChangeIdentifier'
          - description: The change identifier for the current revision.
          title: changeIdentifier
        created:
          allOf:
          - $ref: '#/components/schemas/Time'
          - description: "The date and time when the most recent revision of the artifact\
              \ was created, in timestamp format."
          title: created
        revisionSummary:
          allOf:
          - $ref: '#/components/schemas/RevisionSummary'
          - description: The summary of the most recent revision of the artifact.
          title: revisionSummary
      required:
      - changeIdentifier
      - revision
      title: CurrentRevision
      type: object
    PipelineName:
      maxLength: 100
      minLength: 1
      pattern: "[A-Za-z0-9.@\\-_]+"
      type: string
    WebhookName:
      maxLength: 100
      minLength: 1
      pattern: "[A-Za-z0-9.@\\-_]+"
      type: string
    StageTransitionType:
      enum:
      - Inbound
      - Outbound
      title: StageTransitionType
      type: string
    DisabledReason:
      maxLength: 300
      minLength: 1
      pattern: "[a-zA-Z0-9!@ \\(\\)\\.\\*\\?\\-]+"
      type: string
    Enabled:
      type: boolean
    EncryptionKeyId:
      maxLength: 400
      minLength: 1
      type: string
    EncryptionKeyType:
      enum:
      - KMS
      title: EncryptionKeyType
      type: string
    Message:
      maxLength: 5000
      minLength: 1
      type: string
    ExecutionDetails:
      description: The details of the actions taken and results produced on an artifact
        as it passes through stages in the pipeline.
      properties:
        summary:
          allOf:
          - $ref: '#/components/schemas/ExecutionSummary'
          - description: The summary of the current status of the actions.
          title: summary
        externalExecutionId:
          allOf:
          - $ref: '#/components/schemas/ExecutionId'
          - description: "The system-generated unique ID of this action used to identify\
              \ this job worker in any external systems, such as CodeDeploy."
          title: externalExecutionId
        percentComplete:
          allOf:
          - $ref: '#/components/schemas/Percentage'
          - description: "The percentage of work completed on the action, represented\
              \ on a scale of 0 to 100 percent."
          title: percentComplete
      title: ExecutionDetails
      type: object
    TriggerType:
      enum:
      - CreatePipeline
      - StartPipelineExecution
      - PollForSourceChanges
      - Webhook
      - CloudWatchEvent
      - PutActionRevision
      title: TriggerType
      type: string
    TriggerDetail:
      maxLength: 1024
      minLength: 0
      type: string
    ExecutionTrigger:
      description: The interaction or event that started a pipeline execution.
      properties:
        triggerType:
          allOf:
          - $ref: '#/components/schemas/TriggerType'
          - description: "The type of change-detection method, command, or user interaction\
              \ that started a pipeline execution."
          title: triggerType
        triggerDetail:
          allOf:
          - $ref: '#/components/schemas/TriggerDetail'
          - description: "Detail related to the event that started a pipeline execution,\
              \ such as the webhook ARN of the webhook that triggered the pipeline\
              \ execution or the user ARN for a user-initiated <code>start-pipeline-execution</code>\
              \ CLI command."
          title: triggerDetail
      title: ExecutionTrigger
      type: object
    LambdaExecutorConfiguration:
      description: "Details about the configuration for the <code>Lambda</code> action\
        \ engine, or executor."
      properties:
        lambdaFunctionArn:
          allOf:
          - $ref: '#/components/schemas/LambdaFunctionArn'
          - description: The ARN of the Lambda function used by the action engine.
          title: lambdaFunctionArn
      required:
      - lambdaFunctionArn
      title: LambdaExecutorConfiguration
      type: object
    JobWorkerExecutorConfiguration:
      description: "Details about the polling configuration for the <code>JobWorker</code>\
        \ action engine, or executor."
      properties:
        pollingAccounts:
          allOf:
          - $ref: '#/components/schemas/PollingAccountList'
          - description: The accounts in which the job worker is configured and might
              poll for jobs as part of the action execution.
          title: pollingAccounts
        pollingServicePrincipals:
          allOf:
          - $ref: '#/components/schemas/PollingServicePrincipalList'
          - description: The service Principals in which the job worker is configured
              and might poll for jobs as part of the action execution.
          title: pollingServicePrincipals
      title: JobWorkerExecutorConfiguration
      type: object
    FailureType:
      enum:
      - JobFailed
      - ConfigurationError
      - PermissionError
      - RevisionOutOfSync
      - RevisionUnavailable
      - SystemUnavailable
      title: FailureType
      type: string
    FailureDetails:
      description: Represents information about failure details.
      properties:
        type:
          allOf:
          - $ref: '#/components/schemas/FailureType'
          - description: The type of the failure.
          title: type
        message:
          allOf:
          - $ref: '#/components/schemas/Message'
          - description: The message about the failure.
          title: message
        externalExecutionId:
          allOf:
          - $ref: '#/components/schemas/ExecutionId'
          - description: The external ID of the run of the action that failed.
          title: externalExecutionId
      required:
      - message
      - type
      title: FailureDetails
      type: object
    JobDetails:
      description: Represents information about the details of a job.
      properties:
        id:
          allOf:
          - $ref: '#/components/schemas/JobId'
          - description: The unique system-generated ID of the job.
          title: id
        data:
          $ref: '#/components/schemas/JobDetails_data'
        accountId:
          allOf:
          - $ref: '#/components/schemas/AccountId'
          - description: The Amazon Web Services account ID associated with the job.
          title: accountId
      title: JobDetails
      type: object
    PipelineExecution:
      description: Represents information about an execution of a pipeline.
      properties:
        pipelineName:
          allOf:
          - $ref: '#/components/schemas/PipelineName'
          - description: The name of the pipeline with the specified pipeline execution.
          title: pipelineName
        pipelineVersion:
          allOf:
          - $ref: '#/components/schemas/PipelineVersion'
          - description: The version number of the pipeline with the specified pipeline
              execution.
          title: pipelineVersion
        pipelineExecutionId:
          allOf:
          - $ref: '#/components/schemas/PipelineExecutionId'
          - description: The ID of the pipeline execution.
          title: pipelineExecutionId
        status:
          allOf:
          - $ref: '#/components/schemas/PipelineExecutionStatus'
          - description: "<p>The status of the pipeline execution.</p> <ul> <li> <p>Cancelled:\
              \ The pipeline’s definition was updated before the pipeline execution\
              \ could be completed.</p> </li> <li> <p>InProgress: The pipeline execution\
              \ is currently running.</p> </li> <li> <p>Stopped: The pipeline execution\
              \ was manually stopped. For more information, see <a href=\"https://docs.aws.amazon.com/codepipeline/latest/userguide/concepts.html#concepts-executions-stopped\"\
              >Stopped Executions</a>.</p> </li> <li> <p>Stopping: The pipeline execution\
              \ received a request to be manually stopped. Depending on the selected\
              \ stop mode, the execution is either completing or abandoning in-progress\
              \ actions. For more information, see <a href=\"https://docs.aws.amazon.com/codepipeline/latest/userguide/concepts.html#concepts-executions-stopped\"\
              >Stopped Executions</a>.</p> </li> <li> <p>Succeeded: The pipeline execution\
              \ was completed successfully. </p> </li> <li> <p>Superseded: While this\
              \ pipeline execution was waiting for the next stage to be completed,\
              \ a newer pipeline execution advanced and continued through the pipeline\
              \ instead. For more information, see <a href=\"https://docs.aws.amazon.com/codepipeline/latest/userguide/concepts.html#concepts-superseded\"\
              >Superseded Executions</a>.</p> </li> <li> <p>Failed: The pipeline execution\
              \ was not completed successfully.</p> </li> </ul>"
          title: status
        statusSummary:
          allOf:
          - $ref: '#/components/schemas/PipelineExecutionStatusSummary'
          - description: A summary that contains a description of the pipeline execution
              status.
          title: statusSummary
        artifactRevisions:
          allOf:
          - $ref: '#/components/schemas/ArtifactRevisionList'
          - description: A list of <code>ArtifactRevision</code> objects included
              in a pipeline execution.
          title: artifactRevisions
      title: PipelineExecution
      type: object
    PipelineMetadata:
      description: Information about a pipeline.
      properties:
        pipelineArn:
          allOf:
          - $ref: '#/components/schemas/PipelineArn'
          - description: The Amazon Resource Name (ARN) of the pipeline.
          title: pipelineArn
        created:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          - description: "The date and time the pipeline was created, in timestamp\
              \ format."
          title: created
        updated:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          - description: "The date and time the pipeline was last updated, in timestamp\
              \ format."
          title: updated
        pollingDisabledAt:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          - description: "The date and time that polling for source changes (periodic\
              \ checks) was stopped for the pipeline, in timestamp format. You can\
              \ migrate (update) a polling pipeline to use event-based change detection.\
              \ For example, for a pipeline with a CodeCommit source, we recommend\
              \ you migrate (update) your pipeline to use CloudWatch Events. To learn\
              \ more, see <a href=\"https://docs.aws.amazon.com/codepipeline/latest/userguide/update-change-detection.html\"\
              >Migrate polling pipelines to use event-based change detection</a> in\
              \ the CodePipeline User Guide."
          title: pollingDisabledAt
      title: PipelineMetadata
      type: object
    StageStateList:
      items:
        $ref: '#/components/schemas/StageState'
      type: array
    ThirdPartyJobDetails:
      description: The details of a job sent in response to a <code>GetThirdPartyJobDetails</code>
        request.
      properties:
        id:
          allOf:
          - $ref: '#/components/schemas/ThirdPartyJobId'
          - description: The identifier used to identify the job details in CodePipeline.
          title: id
        data:
          $ref: '#/components/schemas/ThirdPartyJobDetails_data'
        nonce:
          allOf:
          - $ref: '#/components/schemas/Nonce'
          - description: A system-generated random number that CodePipeline uses to
              ensure that the job is being worked on by only one job worker. Use this
              number in an <a>AcknowledgeThirdPartyJob</a> request.
          title: nonce
      title: ThirdPartyJobDetails
      type: object
    InputArtifact:
      description: "Represents information about an artifact to be worked on, such\
        \ as a test or build artifact."
      properties:
        name:
          allOf:
          - $ref: '#/components/schemas/ArtifactName'
          - description: "<p>The name of the artifact to be worked on (for example,\
              \ \"My App\").</p> <p>Artifacts are the files that are worked on by\
              \ actions in the pipeline. See the action configuration for each action\
              \ for details about artifact parameters. For example, the S3 source\
              \ action input artifact is a file name (or file path), and the files\
              \ are generally provided as a ZIP file. Example artifact name: SampleApp_Windows.zip</p>\
              \ <p>The input artifact of an action must exactly match the output artifact\
              \ declared in a preceding action, but the input artifact does not have\
              \ to be the next action in strict sequence from the action that provided\
              \ the output artifact. Actions in parallel can declare different output\
              \ artifacts, which are in turn consumed by different following actions.</p>"
          title: name
      required:
      - name
      title: InputArtifact
      type: object
    JobData:
      description: Represents other information about a job required for a job worker
        to complete the job.
      properties:
        actionTypeId:
          $ref: '#/components/schemas/PollForJobsInput_actionTypeId'
        actionConfiguration:
          $ref: '#/components/schemas/JobData_actionConfiguration'
        pipelineContext:
          $ref: '#/components/schemas/JobData_pipelineContext'
        inputArtifacts:
          allOf:
          - $ref: '#/components/schemas/ArtifactList'
          - description: The artifact supplied to the job.
          title: inputArtifacts
        outputArtifacts:
          allOf:
          - $ref: '#/components/schemas/ArtifactList'
          - description: The output of the job.
          title: outputArtifacts
        artifactCredentials:
          $ref: '#/components/schemas/JobData_artifactCredentials'
        continuationToken:
          allOf:
          - $ref: '#/components/schemas/ContinuationToken'
          - description: "A system-generated token, such as a deployment ID, required\
              \ by a job to continue the job asynchronously."
          title: continuationToken
        encryptionKey:
          $ref: '#/components/schemas/JobData_encryptionKey'
      title: JobData
      type: object
    Job:
      description: Represents information about a job.
      properties:
        id:
          allOf:
          - $ref: '#/components/schemas/JobId'
          - description: The unique system-generated ID of the job.
          title: id
        data:
          $ref: '#/components/schemas/Job_data'
        nonce:
          allOf:
          - $ref: '#/components/schemas/Nonce'
          - description: A system-generated random number that CodePipeline uses to
              ensure that the job is being worked on by only one job worker. Use this
              number in an <a>AcknowledgeJob</a> request.
          title: nonce
        accountId:
          allOf:
          - $ref: '#/components/schemas/AccountId'
          - description: The ID of the Amazon Web Services account to use when performing
              the job.
          title: accountId
      title: Job
      type: object
    PipelineContext:
      description: <p>Represents information about a pipeline to a job worker.</p>
        <note> <p>PipelineContext contains <code>pipelineArn</code> and <code>pipelineExecutionId</code>
        for custom action jobs. The <code>pipelineArn</code> and <code>pipelineExecutionId</code>
        fields are not populated for ThirdParty action jobs.</p> </note>
      properties:
        pipelineName:
          allOf:
          - $ref: '#/components/schemas/PipelineName'
          - description: The name of the pipeline. This is a user-specified value.
              Pipeline names must be unique across all pipeline names under an Amazon
              Web Services account.
          title: pipelineName
        stage:
          $ref: '#/components/schemas/PipelineContext_stage'
        action:
          $ref: '#/components/schemas/PipelineContext_action'
        pipelineArn:
          allOf:
          - $ref: '#/components/schemas/PipelineArn'
          - description: The Amazon Resource Name (ARN) of the pipeline.
          title: pipelineArn
        pipelineExecutionId:
          allOf:
          - $ref: '#/components/schemas/PipelineExecutionId'
          - description: The execution ID of the pipeline.
          title: pipelineExecutionId
      title: PipelineContext
      type: object
    JobList:
      items:
        $ref: '#/components/schemas/Job'
      type: array
    PollingAccountList:
      items:
        $ref: '#/components/schemas/AccountId'
      maxItems: 1000
      minItems: 1
      type: array
    PollingServicePrincipalList:
      items:
        $ref: '#/components/schemas/ServicePrincipal'
      maxItems: 10
      minItems: 1
      type: array
    JsonPath:
      maxLength: 150
      minLength: 1
      type: string
    LambdaFunctionArn:
      maxLength: 140
      minLength: 1
      pattern: "arn:aws(-[\\w]+)*:lambda:.+:[0-9]{12}:function:.+"
      type: string
    LastChangedAt:
      format: date-time
      type: string
    LastChangedBy:
      type: string
    MaxResults:
      maximum: 100
      minimum: 1
      type: integer
    NextToken:
      maxLength: 2048
      minLength: 1
      type: string
    PipelineExecutionSummaryList:
      items:
        $ref: '#/components/schemas/PipelineExecutionSummary'
      type: array
    MaxPipelines:
      maximum: 1000
      minimum: 1
      type: integer
    PipelineList:
      items:
        $ref: '#/components/schemas/PipelineSummary'
      type: array
    ResourceArn:
      pattern: "arn:aws(-[\\w]+)*:codepipeline:.+:[0-9]{12}:.+"
      type: string
    WebhookDefinition:
      description: Represents information about a webhook and its definition.
      properties:
        name:
          allOf:
          - $ref: '#/components/schemas/WebhookName'
          - description: The name of the webhook.
          title: name
        targetPipeline:
          allOf:
          - $ref: '#/components/schemas/PipelineName'
          - description: The name of the pipeline you want to connect to the webhook.
          title: targetPipeline
        targetAction:
          allOf:
          - $ref: '#/components/schemas/ActionName'
          - description: The name of the action in a pipeline you want to connect
              to the webhook. The action must be from the source (first) stage of
              the pipeline.
          title: targetAction
        filters:
          allOf:
          - $ref: '#/components/schemas/WebhookFilters'
          - description: A list of rules applied to the body/payload sent in the POST
              request to a webhook URL. All defined rules must pass for the request
              to be accepted and the pipeline started.
          title: filters
        authentication:
          allOf:
          - $ref: '#/components/schemas/WebhookAuthenticationType'
          - description: "<p>Supported options are GITHUB_HMAC, IP, and UNAUTHENTICATED.</p>\
              \ <ul> <li> <p>For information about the authentication scheme implemented\
              \ by GITHUB_HMAC, see <a href=\"https://developer.github.com/webhooks/securing/\"\
              >Securing your webhooks</a> on the GitHub Developer website.</p> </li>\
              \ <li> <p> IP rejects webhooks trigger requests unless they originate\
              \ from an IP address in the IP range whitelisted in the authentication\
              \ configuration.</p> </li> <li> <p> UNAUTHENTICATED accepts all webhook\
              \ trigger requests regardless of origin.</p> </li> </ul>"
          title: authentication
        authenticationConfiguration:
          $ref: '#/components/schemas/WebhookDefinition_authenticationConfiguration'
      required:
      - authentication
      - authenticationConfiguration
      - filters
      - name
      - targetAction
      - targetPipeline
      title: WebhookDefinition
      type: object
    WebhookUrl:
      maxLength: 1000
      minLength: 1
      type: string
    WebhookErrorMessage:
      type: string
    WebhookErrorCode:
      type: string
    WebhookLastTriggered:
      format: date-time
      type: string
    WebhookArn:
      type: string
    ListWebhookItem:
      description: "The detail returned for each webhook after listing webhooks, such\
        \ as the webhook URL, the webhook name, and the webhook ARN."
      properties:
        definition:
          $ref: '#/components/schemas/ListWebhookItem_definition'
        url:
          allOf:
          - $ref: '#/components/schemas/WebhookUrl'
          - description: "A unique URL generated by CodePipeline. When a POST request\
              \ is made to this URL, the defined pipeline is started as long as the\
              \ body of the post request satisfies the defined authentication and\
              \ filtering conditions. Deleting and re-creating a webhook makes the\
              \ old URL invalid and generates a new one."
          title: url
        errorMessage:
          allOf:
          - $ref: '#/components/schemas/WebhookErrorMessage'
          - description: The text of the error message about the webhook.
          title: errorMessage
        errorCode:
          allOf:
          - $ref: '#/components/schemas/WebhookErrorCode'
          - description: The number code of the error.
          title: errorCode
        lastTriggered:
          allOf:
          - $ref: '#/components/schemas/WebhookLastTriggered'
          - description: "The date and time a webhook was last successfully triggered,\
              \ in timestamp format."
          title: lastTriggered
        arn:
          allOf:
          - $ref: '#/components/schemas/WebhookArn'
          - description: The Amazon Resource Name (ARN) of the webhook.
          title: arn
        tags:
          allOf:
          - $ref: '#/components/schemas/TagList'
          - description: Specifies the tags applied to the webhook.
          title: tags
      required:
      - definition
      - url
      title: ListWebhookItem
      type: object
    WebhookList:
      items:
        $ref: '#/components/schemas/ListWebhookItem'
      type: array
    MatchEquals:
      maxLength: 150
      minLength: 1
      type: string
    MaxBatchSize:
      minimum: 1
      type: integer
    OutputArtifact:
      description: Represents information about the output of an action.
      properties:
        name:
          allOf:
          - $ref: '#/components/schemas/ArtifactName'
          - description: "<p>The name of the output of an artifact, such as \"My App\"\
              .</p> <p>The input artifact of an action must exactly match the output\
              \ artifact declared in a preceding action, but the input artifact does\
              \ not have to be the next action in strict sequence from the action\
              \ that provided the output artifact. Actions in parallel can declare\
              \ different output artifacts, which are in turn consumed by different\
              \ following actions.</p> <p>Output artifact names must be unique within\
              \ a pipeline.</p>"
          title: name
      required:
      - name
      title: OutputArtifact
      type: object
    OutputVariablesKey:
      pattern: "[A-Za-z0-9@\\-_]+"
      type: string
    OutputVariablesValue:
      title: OutputVariablesValue
      type: string
    PipelineArn:
      pattern: "arn:aws(-[\\w]+)*:codepipeline:.+:[0-9]{12}:.+"
      type: string
    StageContext:
      description: Represents information about a stage to a job worker.
      properties:
        name:
          allOf:
          - $ref: '#/components/schemas/StageName'
          - description: The name of the stage.
          title: name
      title: StageContext
      type: object
    PipelineStageDeclarationList:
      items:
        $ref: '#/components/schemas/StageDeclaration'
      type: array
    PipelineExecutionStatus:
      enum:
      - Cancelled
      - InProgress
      - Stopped
      - Stopping
      - Succeeded
      - Superseded
      - Failed
      title: PipelineExecutionStatus
      type: string
    PipelineExecutionStatusSummary:
      type: string
    SourceRevisionList:
      items:
        $ref: '#/components/schemas/SourceRevision'
      type: array
    StopExecutionTrigger:
      description: The interaction that stopped a pipeline execution.
      properties:
        reason:
          allOf:
          - $ref: '#/components/schemas/StopPipelineExecutionReason'
          - description: The user-specified reason the pipeline was stopped.
          title: reason
      title: StopExecutionTrigger
      type: object
    PipelineExecutionSummary:
      description: Summary information about a pipeline execution.
      properties:
        pipelineExecutionId:
          allOf:
          - $ref: '#/components/schemas/PipelineExecutionId'
          - description: The ID of the pipeline execution.
          title: pipelineExecutionId
        status:
          allOf:
          - $ref: '#/components/schemas/PipelineExecutionStatus'
          - description: "<p>The status of the pipeline execution.</p> <ul> <li> <p>InProgress:\
              \ The pipeline execution is currently running.</p> </li> <li> <p>Stopped:\
              \ The pipeline execution was manually stopped. For more information,\
              \ see <a href=\"https://docs.aws.amazon.com/codepipeline/latest/userguide/concepts.html#concepts-executions-stopped\"\
              >Stopped Executions</a>.</p> </li> <li> <p>Stopping: The pipeline execution\
              \ received a request to be manually stopped. Depending on the selected\
              \ stop mode, the execution is either completing or abandoning in-progress\
              \ actions. For more information, see <a href=\"https://docs.aws.amazon.com/codepipeline/latest/userguide/concepts.html#concepts-executions-stopped\"\
              >Stopped Executions</a>.</p> </li> <li> <p>Succeeded: The pipeline execution\
              \ was completed successfully. </p> </li> <li> <p>Superseded: While this\
              \ pipeline execution was waiting for the next stage to be completed,\
              \ a newer pipeline execution advanced and continued through the pipeline\
              \ instead. For more information, see <a href=\"https://docs.aws.amazon.com/codepipeline/latest/userguide/concepts.html#concepts-superseded\"\
              >Superseded Executions</a>.</p> </li> <li> <p>Failed: The pipeline execution\
              \ was not completed successfully.</p> </li> </ul>"
          title: status
        startTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          - description: "The date and time when the pipeline execution began, in\
              \ timestamp format."
          title: startTime
        lastUpdateTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          - description: "The date and time of the last change to the pipeline execution,\
              \ in timestamp format."
          title: lastUpdateTime
        sourceRevisions:
          allOf:
          - $ref: '#/components/schemas/SourceRevisionList'
          - description: A list of the source artifact revisions that initiated a
              pipeline execution.
          title: sourceRevisions
        trigger:
          $ref: '#/components/schemas/PipelineExecutionSummary_trigger'
        stopTrigger:
          $ref: '#/components/schemas/PipelineExecutionSummary_stopTrigger'
      title: PipelineExecutionSummary
      type: object
    PipelineSummary:
      description: Returns a summary of a pipeline.
      properties:
        name:
          allOf:
          - $ref: '#/components/schemas/PipelineName'
          - description: The name of the pipeline.
          title: name
        version:
          allOf:
          - $ref: '#/components/schemas/PipelineVersion'
          - description: The version number of the pipeline.
          title: version
        created:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          - description: "The date and time the pipeline was created, in timestamp\
              \ format."
          title: created
        updated:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          - description: "The date and time of the last update to the pipeline, in\
              \ timestamp format."
          title: updated
      title: PipelineSummary
      type: object
    StageDeclaration:
      description: Represents information about a stage and its definition.
      properties:
        name:
          allOf:
          - $ref: '#/components/schemas/StageName'
          - description: The name of the stage.
          title: name
        blockers:
          allOf:
          - $ref: '#/components/schemas/StageBlockerDeclarationList'
          - description: Reserved for future use.
          title: blockers
        actions:
          allOf:
          - $ref: '#/components/schemas/StageActionDeclarationList'
          - description: The actions included in a stage.
          title: actions
      required:
      - actions
      - name
      title: StageDeclaration
      type: object
    QueryParamMap:
      additionalProperties:
        $ref: '#/components/schemas/ActionConfigurationQueryableValue'
      maxProperties: 1
      minProperties: 0
      type: object
    ThirdPartyJobList:
      items:
        $ref: '#/components/schemas/ThirdPartyJob'
      type: array
    ServicePrincipal:
      maxLength: 128
      minLength: 1
      title: ServicePrincipal
      type: string
    String:
      title: String
      type: string
    StageRetryMode:
      enum:
      - FAILED_ACTIONS
      title: StageRetryMode
      type: string
    S3BucketName:
      type: string
    S3ObjectKey:
      type: string
    S3Bucket:
      maxLength: 63
      minLength: 3
      type: string
    S3Key:
      maxLength: 100
      minLength: 1
      type: string
    SourceRevision:
      description: Information about the version (or revision) of a source artifact
        that initiated a pipeline execution.
      properties:
        actionName:
          allOf:
          - $ref: '#/components/schemas/ActionName'
          - description: The name of the action that processed the revision to the
              source artifact.
          title: actionName
        revisionId:
          allOf:
          - $ref: '#/components/schemas/Revision'
          - description: The system-generated unique ID that identifies the revision
              number of the artifact.
          title: revisionId
        revisionSummary:
          allOf:
          - $ref: '#/components/schemas/RevisionSummary'
          - description: "Summary information about the most recent revision of the\
              \ artifact. For GitHub and CodeCommit repositories, the commit message.\
              \ For Amazon S3 buckets or actions, the user-provided content of a <code>codepipeline-artifact-revision-summary</code>\
              \ key specified in the object metadata."
          title: revisionSummary
        revisionUrl:
          allOf:
          - $ref: '#/components/schemas/Url'
          - description: "The commit ID for the artifact revision. For artifacts stored\
              \ in GitHub or CodeCommit repositories, the commit ID is linked to a\
              \ commit details page."
          title: revisionUrl
      required:
      - actionName
      title: SourceRevision
      type: object
    StageActionDeclarationList:
      items:
        $ref: '#/components/schemas/ActionDeclaration'
      type: array
    StageBlockerDeclarationList:
      items:
        $ref: '#/components/schemas/BlockerDeclaration'
      type: array
    StageExecutionStatus:
      enum:
      - Cancelled
      - InProgress
      - Failed
      - Stopped
      - Stopping
      - Succeeded
      title: StageExecutionStatus
      type: string
    StageExecution:
      description: Represents information about the run of a stage.
      properties:
        pipelineExecutionId:
          allOf:
          - $ref: '#/components/schemas/PipelineExecutionId'
          - description: The ID of the pipeline execution associated with the stage.
          title: pipelineExecutionId
        status:
          allOf:
          - $ref: '#/components/schemas/StageExecutionStatus'
          - description: "<p>The status of the stage, or for a completed stage, the\
              \ last status of the stage.</p> <note> <p>A status of cancelled means\
              \ that the pipeline’s definition was updated before the stage execution\
              \ could be completed.</p> </note>"
          title: status
      required:
      - pipelineExecutionId
      - status
      title: StageExecution
      type: object
    TransitionState:
      description: Represents information about the state of transitions between one
        stage and another stage.
      properties:
        enabled:
          allOf:
          - $ref: '#/components/schemas/Enabled'
          - description: Whether the transition between stages is enabled (true) or
              disabled (false).
          title: enabled
        lastChangedBy:
          allOf:
          - $ref: '#/components/schemas/LastChangedBy'
          - description: The ID of the user who last changed the transition state.
          title: lastChangedBy
        lastChangedAt:
          allOf:
          - $ref: '#/components/schemas/LastChangedAt'
          - description: The timestamp when the transition state was last changed.
          title: lastChangedAt
        disabledReason:
          allOf:
          - $ref: '#/components/schemas/DisabledReason'
          - description: The user-specified reason why the transition between two
              stages of a pipeline was disabled.
          title: disabledReason
      title: TransitionState
      type: object
    StageState:
      description: Represents information about the state of the stage.
      properties:
        stageName:
          allOf:
          - $ref: '#/components/schemas/StageName'
          - description: The name of the stage.
          title: stageName
        inboundExecution:
          $ref: '#/components/schemas/StageExecution'
        inboundTransitionState:
          $ref: '#/components/schemas/StageState_inboundTransitionState'
        actionStates:
          allOf:
          - $ref: '#/components/schemas/ActionStateList'
          - description: The state of the stage.
          title: actionStates
        latestExecution:
          $ref: '#/components/schemas/StageState_latestExecution'
      title: StageState
      type: object
    StopPipelineExecutionReason:
      maxLength: 200
      type: string
    TagKey:
      maxLength: 128
      minLength: 1
      title: TagKey
      type: string
    TagValue:
      maxLength: 256
      minLength: 0
      type: string
    Tag:
      description: A tag is a key-value pair that is used to manage the resource.
      properties:
        key:
          allOf:
          - $ref: '#/components/schemas/TagKey'
          - description: The tag's key.
          title: key
        value:
          allOf:
          - $ref: '#/components/schemas/TagValue'
          - description: The tag's value.
          title: value
      required:
      - key
      - value
      title: Tag
      type: object
    TagKeyList:
      items:
        $ref: '#/components/schemas/TagKey'
      type: array
    ThirdPartyJob:
      description: A response to a <code>PollForThirdPartyJobs</code> request returned
        by CodePipeline when there is a job to be worked on by a partner action.
      properties:
        clientId:
          allOf:
          - $ref: '#/components/schemas/ClientId'
          - description: The <code>clientToken</code> portion of the <code>clientId</code>
              and <code>clientToken</code> pair used to verify that the calling entity
              is allowed access to the job and its details.
          title: clientId
        jobId:
          allOf:
          - $ref: '#/components/schemas/JobId'
          - description: The identifier used to identify the job in CodePipeline.
          title: jobId
      title: ThirdPartyJob
      type: object
    ThirdPartyJobData:
      description: Represents information about the job data for a partner action.
      properties:
        actionTypeId:
          $ref: '#/components/schemas/PollForJobsInput_actionTypeId'
        actionConfiguration:
          $ref: '#/components/schemas/JobData_actionConfiguration'
        pipelineContext:
          $ref: '#/components/schemas/ThirdPartyJobData_pipelineContext'
        inputArtifacts:
          allOf:
          - $ref: '#/components/schemas/ArtifactList'
          - description: "The name of the artifact that is worked on by the action,\
              \ if any. This name might be system-generated, such as \"MyApp\", or\
              \ it might be defined by the user when the action is created. The input\
              \ artifact name must match the name of an output artifact generated\
              \ by an action in an earlier action or stage of the pipeline."
          title: inputArtifacts
        outputArtifacts:
          allOf:
          - $ref: '#/components/schemas/ArtifactList'
          - description: "The name of the artifact that is the result of the action,\
              \ if any. This name might be system-generated, such as \"MyBuiltApp\"\
              , or it might be defined by the user when the action is created."
          title: outputArtifacts
        artifactCredentials:
          $ref: '#/components/schemas/ThirdPartyJobData_artifactCredentials'
        continuationToken:
          allOf:
          - $ref: '#/components/schemas/ContinuationToken'
          - description: "A system-generated token, such as a CodeDeploy deployment\
              \ ID, that a job requires to continue the job asynchronously."
          title: continuationToken
        encryptionKey:
          $ref: '#/components/schemas/ThirdPartyJobData_encryptionKey'
      title: ThirdPartyJobData
      type: object
    WebhookAuthConfigurationAllowedIPRange:
      maxLength: 100
      minLength: 1
      type: string
    WebhookAuthConfigurationSecretToken:
      maxLength: 100
      minLength: 1
      type: string
    WebhookAuthConfiguration:
      description: The authentication applied to incoming webhook trigger requests.
      properties:
        AllowedIPRange:
          allOf:
          - $ref: '#/components/schemas/WebhookAuthConfigurationAllowedIPRange'
          - description: "The property used to configure acceptance of webhooks in\
              \ an IP address range. For IP, only the <code>AllowedIPRange</code>\
              \ property must be set. This property must be set to a valid CIDR range."
          title: AllowedIPRange
        SecretToken:
          allOf:
          - $ref: '#/components/schemas/WebhookAuthConfigurationSecretToken'
          - description: "The property used to configure GitHub authentication. For\
              \ GITHUB_HMAC, only the <code>SecretToken</code> property must be set."
          title: SecretToken
      title: WebhookAuthConfiguration
      type: object
    WebhookAuthenticationType:
      enum:
      - GITHUB_HMAC
      - IP
      - UNAUTHENTICATED
      title: WebhookAuthenticationType
      type: string
    WebhookFilters:
      items:
        $ref: '#/components/schemas/WebhookFilterRule'
      maxItems: 5
      type: array
    WebhookFilterRule:
      description: The event criteria that specify when a webhook notification is
        sent to your URL.
      properties:
        jsonPath:
          allOf:
          - $ref: '#/components/schemas/JsonPath'
          - description: "A JsonPath expression that is applied to the body/payload\
              \ of the webhook. The value selected by the JsonPath expression must\
              \ match the value specified in the <code>MatchEquals</code> field. Otherwise,\
              \ the request is ignored. For more information, see <a href=\"https://github.com/json-path/JsonPath\"\
              >Java JsonPath implementation</a> in GitHub."
          title: jsonPath
        matchEquals:
          allOf:
          - $ref: '#/components/schemas/MatchEquals'
          - description: "The value selected by the <code>JsonPath</code> expression\
              \ must match what is supplied in the <code>MatchEquals</code> field.\
              \ Otherwise, the request is ignored. Properties from the target action\
              \ configuration can be included as placeholders in this value by surrounding\
              \ the action configuration key with curly brackets. For example, if\
              \ the value supplied here is \"refs/heads/{Branch}\" and the target\
              \ action has an action configuration property called \"Branch\" with\
              \ a value of \"main\", the <code>MatchEquals</code> value is evaluated\
              \ as \"refs/heads/main\". For a list of action configuration properties\
              \ for built-in action types, see <a href=\"https://docs.aws.amazon.com/codepipeline/latest/userguide/reference-pipeline-structure.html#action-requirements\"\
              >Pipeline Structure Reference Action Requirements</a>."
          title: matchEquals
      required:
      - jsonPath
      title: WebhookFilterRule
      type: object
    CreateCustomActionTypeOutput_actionType:
      allOf:
      - $ref: '#/components/schemas/ActionType'
      - description: Returns information about the details of an action type.
      example:
        settings:
          executionUrlTemplate: ""
          entityUrlTemplate: ""
          thirdPartyConfigurationUrl: ""
          revisionUrlTemplate: ""
        inputArtifactDetails:
          maximumCount: ""
          minimumCount: ""
        actionConfigurationProperties: ""
        outputArtifactDetails:
          maximumCount: ""
          minimumCount: ""
        id:
          owner: ""
          provider: ""
          category: ""
          version: ""
      title: CreateCustomActionTypeOutput_actionType
    CreateCustomActionTypeInput_settings:
      allOf:
      - $ref: '#/components/schemas/ActionTypeSettings'
      - description: URLs that provide users information about this custom action.
      example:
        executionUrlTemplate: ""
        entityUrlTemplate: ""
        thirdPartyConfigurationUrl: ""
        revisionUrlTemplate: ""
      title: CreateCustomActionTypeInput_settings
    CreateCustomActionTypeInput_inputArtifactDetails:
      allOf:
      - $ref: '#/components/schemas/ArtifactDetails'
      - description: "The details of the input artifact for the action, such as its\
          \ commit ID."
      example:
        maximumCount: ""
        minimumCount: ""
      title: CreateCustomActionTypeInput_inputArtifactDetails
    CreateCustomActionTypeInput_outputArtifactDetails:
      allOf:
      - $ref: '#/components/schemas/ArtifactDetails'
      - description: "The details of the output artifact of the action, such as its\
          \ commit ID."
      example:
        maximumCount: ""
        minimumCount: ""
      title: CreateCustomActionTypeInput_outputArtifactDetails
    CreatePipelineOutput_pipeline:
      allOf:
      - $ref: '#/components/schemas/PipelineDeclaration'
      - description: 'Represents the structure of actions and stages to be performed
          in the pipeline. '
      example:
        artifactStore:
          location: ""
          encryptionKey:
            id: ""
            type: ""
          type: ""
        roleArn: ""
        name: ""
        stages: ""
        artifactStores: ""
        version: ""
      title: CreatePipelineOutput_pipeline
    GetActionTypeOutput_actionType:
      allOf:
      - $ref: '#/components/schemas/ActionTypeDeclaration'
      - description: "The action type information for the requested action type, such\
          \ as the action type ID."
      example:
        urls:
          configurationUrl: ""
          executionUrlTemplate: ""
          entityUrlTemplate: ""
          revisionUrlTemplate: ""
        executor:
          jobTimeout: ""
          configuration:
            lambdaExecutorConfiguration:
              lambdaFunctionArn: ""
            jobWorkerExecutorConfiguration:
              pollingServicePrincipals: ""
              pollingAccounts: ""
          policyStatementsTemplate: ""
          type: ""
        permissions:
          allowedAccounts: ""
        inputArtifactDetails:
          maximumCount: ""
          minimumCount: ""
        description: ""
        outputArtifactDetails:
          maximumCount: ""
          minimumCount: ""
        id:
          owner: ""
          provider: ""
          category: ""
          version: ""
        properties: ""
      title: GetActionTypeOutput_actionType
    GetJobDetailsOutput_jobDetails:
      allOf:
      - $ref: '#/components/schemas/JobDetails'
      - description: "<p>The details of the job.</p> <note> <p>If AWSSessionCredentials\
          \ is used, a long-running job can call <code>GetJobDetails</code> again\
          \ to obtain new credentials.</p> </note>"
      example:
        accountId: ""
        data:
          actionTypeId:
            owner: ""
            provider: ""
            category: ""
            version: ""
          pipelineContext:
            pipelineName: ""
            stage:
              name: ""
            pipelineArn: ""
            pipelineExecutionId: ""
            action:
              actionExecutionId: ""
              name: ""
          outputArtifacts: ""
          actionConfiguration:
            configuration: ""
          encryptionKey:
            id: ""
            type: ""
          inputArtifacts: ""
          artifactCredentials:
            accessKeyId: ""
            secretAccessKey: ""
            sessionToken: ""
          continuationToken: ""
        id: ""
      title: GetJobDetailsOutput_jobDetails
    GetPipelineOutput_metadata:
      allOf:
      - $ref: '#/components/schemas/PipelineMetadata'
      - description: Represents the pipeline metadata information returned as part
          of the output of a <code>GetPipeline</code> action.
      example:
        pipelineArn: ""
        created: ""
        updated: ""
        pollingDisabledAt: ""
      title: GetPipelineOutput_metadata
    GetPipelineExecutionOutput_pipelineExecution:
      allOf:
      - $ref: '#/components/schemas/PipelineExecution'
      - description: Represents information about the execution of a pipeline.
      example:
        pipelineName: ""
        pipelineVersion: ""
        artifactRevisions: ""
        statusSummary: ""
        pipelineExecutionId: ""
        status: ""
      title: GetPipelineExecutionOutput_pipelineExecution
    GetThirdPartyJobDetailsOutput_jobDetails:
      allOf:
      - $ref: '#/components/schemas/ThirdPartyJobDetails'
      - description: "The details of the job, including any protected values defined\
          \ for the job."
      example:
        data:
          actionTypeId:
            owner: ""
            provider: ""
            category: ""
            version: ""
          pipelineContext:
            pipelineName: ""
            stage:
              name: ""
            pipelineArn: ""
            pipelineExecutionId: ""
            action:
              actionExecutionId: ""
              name: ""
          outputArtifacts: ""
          actionConfiguration:
            configuration: ""
          encryptionKey:
            id: ""
            type: ""
          inputArtifacts: ""
          artifactCredentials:
            accessKeyId: ""
            secretAccessKey: ""
            sessionToken: ""
          continuationToken: ""
        id: ""
        nonce: ""
      title: GetThirdPartyJobDetailsOutput_jobDetails
    ListActionExecutionsInput_filter:
      allOf:
      - $ref: '#/components/schemas/ActionExecutionFilter'
      - description: Input information used to filter action execution history.
      example:
        pipelineExecutionId: ""
      title: ListActionExecutionsInput_filter
    PollForJobsInput_actionTypeId:
      allOf:
      - $ref: '#/components/schemas/ActionTypeId'
      - description: Represents information about an action type.
      example:
        owner: ""
        provider: ""
        category: ""
        version: ""
      title: PollForJobsInput_actionTypeId
    PutActionRevisionInput_actionRevision:
      allOf:
      - $ref: '#/components/schemas/ActionRevision'
      - description: Represents information about the version (or revision) of an
          action.
      example:
        revisionId: ""
        revisionChangeId: ""
        created: ""
      title: PutActionRevisionInput_actionRevision
    PutApprovalResultInput_result:
      allOf:
      - $ref: '#/components/schemas/ApprovalResult'
      - description: Represents information about the result of the approval request.
      example:
        summary: ""
        status: ""
      title: PutApprovalResultInput_result
    PutJobFailureResultInput_failureDetails:
      allOf:
      - $ref: '#/components/schemas/FailureDetails'
      - description: The details about the failure of a job.
      example:
        type: ""
        message: ""
        externalExecutionId: ""
      title: PutJobFailureResultInput_failureDetails
    PutJobSuccessResultInput_currentRevision:
      allOf:
      - $ref: '#/components/schemas/CurrentRevision'
      - description: The ID of the current revision of the artifact successfully worked
          on by the job.
      example:
        created: ""
        changeIdentifier: ""
        revisionSummary: ""
        revision: ""
      title: PutJobSuccessResultInput_currentRevision
    PutJobSuccessResultInput_executionDetails:
      allOf:
      - $ref: '#/components/schemas/ExecutionDetails'
      - description: "The execution details of the successful job, such as the actions\
          \ taken by the job worker."
      example:
        summary: ""
        percentComplete: ""
        externalExecutionId: ""
      title: PutJobSuccessResultInput_executionDetails
    PutThirdPartyJobFailureResultInput_failureDetails:
      allOf:
      - $ref: '#/components/schemas/FailureDetails'
      - description: Represents information about failure details.
      example:
        type: ""
        message: ""
        externalExecutionId: ""
      title: PutThirdPartyJobFailureResultInput_failureDetails
    PutThirdPartyJobSuccessResultInput_currentRevision:
      allOf:
      - $ref: '#/components/schemas/CurrentRevision'
      - description: Represents information about a current revision.
      example:
        created: ""
        changeIdentifier: ""
        revisionSummary: ""
        revision: ""
      title: PutThirdPartyJobSuccessResultInput_currentRevision
    PutThirdPartyJobSuccessResultInput_executionDetails:
      allOf:
      - $ref: '#/components/schemas/ExecutionDetails'
      - description: 'The details of the actions taken and results produced on an
          artifact as it passes through stages in the pipeline. '
      example:
        summary: ""
        percentComplete: ""
        externalExecutionId: ""
      title: PutThirdPartyJobSuccessResultInput_executionDetails
    PutWebhookOutput_webhook:
      allOf:
      - $ref: '#/components/schemas/ListWebhookItem'
      - description: "The detail returned from creating the webhook, such as the webhook\
          \ name, webhook URL, and webhook ARN."
      example:
        lastTriggered: ""
        errorMessage: ""
        errorCode: ""
        definition:
          targetAction: ""
          name: ""
          filters: ""
          targetPipeline: ""
          authenticationConfiguration:
            AllowedIPRange: ""
            SecretToken: ""
          authentication: ""
        arn: ""
        url: ""
        tags: ""
      title: PutWebhookOutput_webhook
    PutWebhookInput_webhook:
      allOf:
      - $ref: '#/components/schemas/WebhookDefinition'
      - description: "The detail provided in an input file to create the webhook,\
          \ such as the webhook name, the pipeline name, and the action name. Give\
          \ the webhook a unique name that helps you identify it. You might name the\
          \ webhook after the pipeline and action it targets so that you can easily\
          \ recognize what it's used for later."
      example:
        targetAction: ""
        name: ""
        filters: ""
        targetPipeline: ""
        authenticationConfiguration:
          AllowedIPRange: ""
          SecretToken: ""
        authentication: ""
      title: PutWebhookInput_webhook
    UpdateActionTypeInput_actionType:
      allOf:
      - $ref: '#/components/schemas/ActionTypeDeclaration'
      - description: The action type definition for the action type to be updated.
      example:
        urls:
          configurationUrl: ""
          executionUrlTemplate: ""
          entityUrlTemplate: ""
          revisionUrlTemplate: ""
        executor:
          jobTimeout: ""
          configuration:
            lambdaExecutorConfiguration:
              lambdaFunctionArn: ""
            jobWorkerExecutorConfiguration:
              pollingServicePrincipals: ""
              pollingAccounts: ""
          policyStatementsTemplate: ""
          type: ""
        permissions:
          allowedAccounts: ""
        inputArtifactDetails:
          maximumCount: ""
          minimumCount: ""
        description: ""
        outputArtifactDetails:
          maximumCount: ""
          minimumCount: ""
        id:
          owner: ""
          provider: ""
          category: ""
          version: ""
        properties: ""
      title: UpdateActionTypeInput_actionType
    UpdatePipelineOutput_pipeline:
      allOf:
      - $ref: '#/components/schemas/PipelineDeclaration'
      - description: The structure of the updated pipeline.
      example:
        artifactStore:
          location: ""
          encryptionKey:
            id: ""
            type: ""
          type: ""
        roleArn: ""
        name: ""
        stages: ""
        artifactStores: ""
        version: ""
      title: UpdatePipelineOutput_pipeline
    UpdatePipelineInput_pipeline:
      allOf:
      - $ref: '#/components/schemas/PipelineDeclaration'
      - description: The name of the pipeline to be updated.
      example:
        artifactStore:
          location: ""
          encryptionKey:
            id: ""
            type: ""
          type: ""
        roleArn: ""
        name: ""
        stages: ""
        artifactStores: ""
        version: ""
      title: UpdatePipelineInput_pipeline
    ActionDeclaration_actionTypeId:
      allOf:
      - $ref: '#/components/schemas/ActionTypeId'
      - description: Specifies the action type and the provider of the action.
      title: ActionDeclaration_actionTypeId
    ActionExecution_errorDetails:
      allOf:
      - $ref: '#/components/schemas/ErrorDetails'
      - description: The details of an error returned by a URL external to Amazon
          Web Services.
      title: ActionExecution_errorDetails
    ActionExecutionOutput_executionResult:
      allOf:
      - $ref: '#/components/schemas/ActionExecutionResult'
      - description: Execution result information listed in the output details for
          an action execution.
      title: ActionExecutionOutput_executionResult
    ActionExecutionDetail_input:
      allOf:
      - $ref: '#/components/schemas/ActionExecutionInput'
      - description: "Input details for the action execution, such as role ARN, Region,\
          \ and input artifacts."
      title: ActionExecutionDetail_input
    ActionExecutionDetail_output:
      allOf:
      - $ref: '#/components/schemas/ActionExecutionOutput'
      - description: "Output details for the action execution, such as the action\
          \ execution result."
      title: ActionExecutionDetail_output
    ActionState_latestExecution:
      allOf:
      - $ref: '#/components/schemas/ActionExecution'
      - description: Represents information about the run of an action.
      title: ActionState_latestExecution
    ActionType_settings:
      allOf:
      - $ref: '#/components/schemas/ActionTypeSettings'
      - description: The settings for the action type.
      example:
        executionUrlTemplate: ""
        entityUrlTemplate: ""
        thirdPartyConfigurationUrl: ""
        revisionUrlTemplate: ""
      title: ActionType_settings
    ActionTypeExecutor_configuration:
      allOf:
      - $ref: '#/components/schemas/ExecutorConfiguration'
      - description: The action configuration properties for the action type. These
          properties are specified in the action definition when the action type is
          created.
      example:
        lambdaExecutorConfiguration:
          lambdaFunctionArn: ""
        jobWorkerExecutorConfiguration:
          pollingServicePrincipals: ""
          pollingAccounts: ""
      title: ActionTypeExecutor_configuration
    ActionTypeDeclaration_executor:
      allOf:
      - $ref: '#/components/schemas/ActionTypeExecutor'
      - description: Information about the executor for an action type that was created
          with any supported integration model.
      example:
        jobTimeout: ""
        configuration:
          lambdaExecutorConfiguration:
            lambdaFunctionArn: ""
          jobWorkerExecutorConfiguration:
            pollingServicePrincipals: ""
            pollingAccounts: ""
        policyStatementsTemplate: ""
        type: ""
      title: ActionTypeDeclaration_executor
    ActionTypeDeclaration_id:
      allOf:
      - $ref: '#/components/schemas/ActionTypeIdentifier'
      - description: "The action category, owner, provider, and version of the action\
          \ type to be updated."
      example:
        owner: ""
        provider: ""
        category: ""
        version: ""
      title: ActionTypeDeclaration_id
    ActionTypeDeclaration_inputArtifactDetails:
      allOf:
      - $ref: '#/components/schemas/ActionTypeArtifactDetails'
      - description: "Details for the artifacts, such as application files, to be\
          \ worked on by the action. For example, the minimum and maximum number of\
          \ input artifacts allowed."
      example:
        maximumCount: ""
        minimumCount: ""
      title: ActionTypeDeclaration_inputArtifactDetails
    ActionTypeDeclaration_outputArtifactDetails:
      allOf:
      - $ref: '#/components/schemas/ActionTypeArtifactDetails'
      - description: "Details for the output artifacts, such as a built application,\
          \ that are the result of the action. For example, the minimum and maximum\
          \ number of output artifacts allowed."
      example:
        maximumCount: ""
        minimumCount: ""
      title: ActionTypeDeclaration_outputArtifactDetails
    ActionTypeDeclaration_permissions:
      allOf:
      - $ref: '#/components/schemas/ActionTypePermissions'
      - description: Details identifying the accounts with permissions to use the
          action type.
      example:
        allowedAccounts: ""
      title: ActionTypeDeclaration_permissions
    ActionTypeDeclaration_urls:
      allOf:
      - $ref: '#/components/schemas/ActionTypeUrls'
      - description: The links associated with the action type to be updated.
      example:
        configurationUrl: ""
        executionUrlTemplate: ""
        entityUrlTemplate: ""
        revisionUrlTemplate: ""
      title: ActionTypeDeclaration_urls
    ExecutorConfiguration_lambdaExecutorConfiguration:
      allOf:
      - $ref: '#/components/schemas/LambdaExecutorConfiguration'
      - description: Details about the <code>Lambda</code> executor of the action
          type.
      example:
        lambdaFunctionArn: ""
      title: ExecutorConfiguration_lambdaExecutorConfiguration
    ExecutorConfiguration_jobWorkerExecutorConfiguration:
      allOf:
      - $ref: '#/components/schemas/JobWorkerExecutorConfiguration'
      - description: Details about the <code>JobWorker</code> executor of the action
          type.
      example:
        pollingServicePrincipals: ""
        pollingAccounts: ""
      title: ExecutorConfiguration_jobWorkerExecutorConfiguration
    ArtifactLocation_s3Location:
      allOf:
      - $ref: '#/components/schemas/S3ArtifactLocation'
      - description: The S3 bucket that contains the artifact.
      title: ArtifactLocation_s3Location
    Artifact_location:
      allOf:
      - $ref: '#/components/schemas/ArtifactLocation'
      - description: The location of an artifact.
      title: Artifact_location
    ArtifactDetail_s3location:
      allOf:
      - $ref: '#/components/schemas/S3Location'
      - description: The Amazon S3 artifact location for the action execution.
      title: ArtifactDetail_s3location
    ArtifactStore_encryptionKey:
      allOf:
      - $ref: '#/components/schemas/EncryptionKey'
      - description: "The encryption key used to encrypt the data in the artifact\
          \ store, such as an Amazon Web Services Key Management Service key. If this\
          \ is undefined, the default key for Amazon S3 is used."
      example:
        id: ""
        type: ""
      title: ArtifactStore_encryptionKey
    PipelineDeclaration_artifactStore:
      allOf:
      - $ref: '#/components/schemas/ArtifactStore'
      - description: "<p>Represents information about the S3 bucket where artifacts\
          \ are stored for the pipeline.</p> <note> <p>You must include either <code>artifactStore</code>\
          \ or <code>artifactStores</code> in your pipeline, but you cannot use both.\
          \ If you create a cross-region action in your pipeline, you must use <code>artifactStores</code>.</p>\
          \ </note>"
      example:
        location: ""
        encryptionKey:
          id: ""
          type: ""
        type: ""
      title: PipelineDeclaration_artifactStore
    JobDetails_data:
      allOf:
      - $ref: '#/components/schemas/JobData'
      - description: 'Represents other information about a job required for a job
          worker to complete the job. '
      example:
        actionTypeId:
          owner: ""
          provider: ""
          category: ""
          version: ""
        pipelineContext:
          pipelineName: ""
          stage:
            name: ""
          pipelineArn: ""
          pipelineExecutionId: ""
          action:
            actionExecutionId: ""
            name: ""
        outputArtifacts: ""
        actionConfiguration:
          configuration: ""
        encryptionKey:
          id: ""
          type: ""
        inputArtifacts: ""
        artifactCredentials:
          accessKeyId: ""
          secretAccessKey: ""
          sessionToken: ""
        continuationToken: ""
      title: JobDetails_data
    ThirdPartyJobDetails_data:
      allOf:
      - $ref: '#/components/schemas/ThirdPartyJobData'
      - description: The data to be returned by the third party job worker.
      example:
        actionTypeId:
          owner: ""
          provider: ""
          category: ""
          version: ""
        pipelineContext:
          pipelineName: ""
          stage:
            name: ""
          pipelineArn: ""
          pipelineExecutionId: ""
          action:
            actionExecutionId: ""
            name: ""
        outputArtifacts: ""
        actionConfiguration:
          configuration: ""
        encryptionKey:
          id: ""
          type: ""
        inputArtifacts: ""
        artifactCredentials:
          accessKeyId: ""
          secretAccessKey: ""
          sessionToken: ""
        continuationToken: ""
      title: ThirdPartyJobDetails_data
    JobData_actionConfiguration:
      allOf:
      - $ref: '#/components/schemas/ActionConfiguration'
      - description: Represents information about an action configuration.
      example:
        configuration: ""
      title: JobData_actionConfiguration
    JobData_pipelineContext:
      allOf:
      - $ref: '#/components/schemas/PipelineContext'
      - description: <p>Represents information about a pipeline to a job worker.</p>
          <note> <p>Includes <code>pipelineArn</code> and <code>pipelineExecutionId</code>
          for custom jobs.</p> </note>
      example:
        pipelineName: ""
        stage:
          name: ""
        pipelineArn: ""
        pipelineExecutionId: ""
        action:
          actionExecutionId: ""
          name: ""
      title: JobData_pipelineContext
    JobData_artifactCredentials:
      allOf:
      - $ref: '#/components/schemas/AWSSessionCredentials'
      - description: Represents an Amazon Web Services session credentials object.
          These credentials are temporary credentials that are issued by Amazon Web
          Services Secure Token Service (STS). They can be used to access input and
          output artifacts in the S3 bucket used to store artifacts for the pipeline
          in CodePipeline.
      example:
        accessKeyId: ""
        secretAccessKey: ""
        sessionToken: ""
      title: JobData_artifactCredentials
    JobData_encryptionKey:
      allOf:
      - $ref: '#/components/schemas/EncryptionKey'
      - description: "Represents information about the key used to encrypt data in\
          \ the artifact store, such as an KMS key. "
      example:
        id: ""
        type: ""
      title: JobData_encryptionKey
    Job_data:
      allOf:
      - $ref: '#/components/schemas/JobData'
      - description: Other data about a job.
      title: Job_data
    PipelineContext_stage:
      allOf:
      - $ref: '#/components/schemas/StageContext'
      - description: The stage of the pipeline.
      example:
        name: ""
      title: PipelineContext_stage
    PipelineContext_action:
      allOf:
      - $ref: '#/components/schemas/ActionContext'
      - description: The context of an action to a job worker in the stage of a pipeline.
      example:
        actionExecutionId: ""
        name: ""
      title: PipelineContext_action
    WebhookDefinition_authenticationConfiguration:
      allOf:
      - $ref: '#/components/schemas/WebhookAuthConfiguration'
      - description: "Properties that configure the authentication applied to incoming\
          \ webhook trigger requests. The required properties depend on the authentication\
          \ type. For GITHUB_HMAC, only the <code>SecretToken </code>property must\
          \ be set. For IP, only the <code>AllowedIPRange </code>property must be\
          \ set to a valid CIDR range. For UNAUTHENTICATED, no properties can be set."
      example:
        AllowedIPRange: ""
        SecretToken: ""
      title: WebhookDefinition_authenticationConfiguration
    ListWebhookItem_definition:
      allOf:
      - $ref: '#/components/schemas/WebhookDefinition'
      - description: "The detail returned for each webhook, such as the webhook authentication\
          \ type and filter rules."
      example:
        targetAction: ""
        name: ""
        filters: ""
        targetPipeline: ""
        authenticationConfiguration:
          AllowedIPRange: ""
          SecretToken: ""
        authentication: ""
      title: ListWebhookItem_definition
    PipelineExecutionSummary_trigger:
      allOf:
      - $ref: '#/components/schemas/ExecutionTrigger'
      - description: "The interaction or event that started a pipeline execution,\
          \ such as automated change detection or a <code>StartPipelineExecution</code>\
          \ API call."
      title: PipelineExecutionSummary_trigger
    PipelineExecutionSummary_stopTrigger:
      allOf:
      - $ref: '#/components/schemas/StopExecutionTrigger'
      - description: The interaction that stopped a pipeline execution.
      title: PipelineExecutionSummary_stopTrigger
    StageState_inboundTransitionState:
      allOf:
      - $ref: '#/components/schemas/TransitionState'
      - description: "The state of the inbound transition, which is either enabled\
          \ or disabled."
      title: StageState_inboundTransitionState
    StageState_latestExecution:
      allOf:
      - $ref: '#/components/schemas/StageExecution'
      - description: "Information about the latest execution in the stage, including\
          \ its ID and status."
      title: StageState_latestExecution
    ThirdPartyJobData_pipelineContext:
      allOf:
      - $ref: '#/components/schemas/PipelineContext'
      - description: <p>Represents information about a pipeline to a job worker.</p>
          <note> <p>Does not include <code>pipelineArn</code> and <code>pipelineExecutionId</code>
          for ThirdParty jobs.</p> </note>
      example:
        pipelineName: ""
        stage:
          name: ""
        pipelineArn: ""
        pipelineExecutionId: ""
        action:
          actionExecutionId: ""
          name: ""
      title: ThirdPartyJobData_pipelineContext
    ThirdPartyJobData_artifactCredentials:
      allOf:
      - $ref: '#/components/schemas/AWSSessionCredentials'
      - description: 'Represents an Amazon Web Services session credentials object.
          These credentials are temporary credentials that are issued by Amazon Web
          Services Secure Token Service (STS). They can be used to access input and
          output artifacts in the S3 bucket used to store artifact for the pipeline
          in CodePipeline. '
      example:
        accessKeyId: ""
        secretAccessKey: ""
        sessionToken: ""
      title: ThirdPartyJobData_artifactCredentials
    ThirdPartyJobData_encryptionKey:
      allOf:
      - $ref: '#/components/schemas/EncryptionKey'
      - description: "The encryption key used to encrypt and decrypt data in the artifact\
          \ store for the pipeline, such as an Amazon Web Services Key Management\
          \ Service (Amazon Web Services KMS) key. This is optional and might not\
          \ be present."
      example:
        id: ""
        type: ""
      title: ThirdPartyJobData_encryptionKey
  securitySchemes:
    hmac:
      description: Amazon Signature authorization v4
      in: header
      name: Authorization
      type: apiKey
      x-amazon-apigateway-authtype: awsSigv4
      x-apikeyInfoFunc: openapi_server.controllers.security_controller.info_from_hmac
x-hasEquivalentPaths: true
