/**
 * Amazon DynamoDB Streams
 * <fullname>Amazon DynamoDB</fullname> <p>Amazon DynamoDB Streams provides API actions for accessing streams and processing stream records. To learn more about application development with Streams, see <a href=\"https://docs.aws.amazon.com/amazondynamodb/latest/developerguide/Streams.html\">Capturing Table Activity with DynamoDB Streams</a> in the Amazon DynamoDB Developer Guide.</p>
 *
 * The version of the OpenAPI document: 2012-08-10
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIRecord_dynamodb.h
 *
 * 
 */

#ifndef OAIRecord_dynamodb_H
#define OAIRecord_dynamodb_H

#include <QJsonObject>

#include "OAIStreamViewType.h"
#include <QDateTime>
#include <QMap>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIRecord_dynamodb : public OAIObject {
public:
    OAIRecord_dynamodb();
    OAIRecord_dynamodb(QString json);
    ~OAIRecord_dynamodb() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QDateTime getApproximateCreationDateTime() const;
    void setApproximateCreationDateTime(const QDateTime &approximate_creation_date_time);
    bool is_approximate_creation_date_time_Set() const;
    bool is_approximate_creation_date_time_Valid() const;

    QMap getKeys() const;
    void setKeys(const QMap &keys);
    bool is_keys_Set() const;
    bool is_keys_Valid() const;

    QMap getNewImage() const;
    void setNewImage(const QMap &new_image);
    bool is_new_image_Set() const;
    bool is_new_image_Valid() const;

    QMap getOldImage() const;
    void setOldImage(const QMap &old_image);
    bool is_old_image_Set() const;
    bool is_old_image_Valid() const;

    QString getSequenceNumber() const;
    void setSequenceNumber(const QString &sequence_number);
    bool is_sequence_number_Set() const;
    bool is_sequence_number_Valid() const;

    qint32 getSizeBytes() const;
    void setSizeBytes(const qint32 &size_bytes);
    bool is_size_bytes_Set() const;
    bool is_size_bytes_Valid() const;

    OAIStreamViewType getStreamViewType() const;
    void setStreamViewType(const OAIStreamViewType &stream_view_type);
    bool is_stream_view_type_Set() const;
    bool is_stream_view_type_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QDateTime m_approximate_creation_date_time;
    bool m_approximate_creation_date_time_isSet;
    bool m_approximate_creation_date_time_isValid;

    QMap m_keys;
    bool m_keys_isSet;
    bool m_keys_isValid;

    QMap m_new_image;
    bool m_new_image_isSet;
    bool m_new_image_isValid;

    QMap m_old_image;
    bool m_old_image_isSet;
    bool m_old_image_isValid;

    QString m_sequence_number;
    bool m_sequence_number_isSet;
    bool m_sequence_number_isValid;

    qint32 m_size_bytes;
    bool m_size_bytes_isSet;
    bool m_size_bytes_isValid;

    OAIStreamViewType m_stream_view_type;
    bool m_stream_view_type_isSet;
    bool m_stream_view_type_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIRecord_dynamodb)

#endif // OAIRecord_dynamodb_H
