/**
 * Amazon DynamoDB Streams
 * <fullname>Amazon DynamoDB</fullname> <p>Amazon DynamoDB Streams provides API actions for accessing streams and processing stream records. To learn more about application development with Streams, see <a href=\"https://docs.aws.amazon.com/amazondynamodb/latest/developerguide/Streams.html\">Capturing Table Activity with DynamoDB Streams</a> in the Amazon DynamoDB Developer Guide.</p>
 *
 * The version of the OpenAPI document: 2012-08-10
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIOperationType.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIOperationType::OAIOperationType(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIOperationType::OAIOperationType() {
    this->initializeModel();
}

OAIOperationType::~OAIOperationType() {}

void OAIOperationType::initializeModel() {

    m_value_isSet = false;
    m_value_isValid = false;
    m_value = eOAIOperationType::INVALID_VALUE_OPENAPI_GENERATED;
}

void OAIOperationType::fromJson(QString jsonString) {
    
    if ( jsonString.compare("INSERT", Qt::CaseInsensitive) == 0) {
        m_value = eOAIOperationType::INSERT;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("MODIFY", Qt::CaseInsensitive) == 0) {
        m_value = eOAIOperationType::MODIFY;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("REMOVE", Qt::CaseInsensitive) == 0) {
        m_value = eOAIOperationType::REMOVE;
        m_value_isSet = m_value_isValid = true;
    }
}

void OAIOperationType::fromJsonValue(QJsonValue json) {
fromJson(json.toString());
}

QString OAIOperationType::asJson() const {
    
    QString val;
    switch (m_value){
        case eOAIOperationType::INSERT:
            val = "INSERT";
            break;
        case eOAIOperationType::MODIFY:
            val = "MODIFY";
            break;
        case eOAIOperationType::REMOVE:
            val = "REMOVE";
            break;
        default:
            break;
    }
    return val;
}

QJsonValue OAIOperationType::asJsonValue() const {
    
    return QJsonValue(asJson());
}


OAIOperationType::eOAIOperationType OAIOperationType::getValue() const {
    return m_value;
}

void OAIOperationType::setValue(const OAIOperationType::eOAIOperationType& value){
    m_value = value;
    m_value_isSet = true;
}
bool OAIOperationType::isSet() const {
    
    return m_value_isSet;
}

bool OAIOperationType::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_value_isValid;
}

} // namespace OpenAPI
