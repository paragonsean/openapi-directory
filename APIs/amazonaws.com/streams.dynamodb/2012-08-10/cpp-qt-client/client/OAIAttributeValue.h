/**
 * Amazon DynamoDB Streams
 * <fullname>Amazon DynamoDB</fullname> <p>Amazon DynamoDB Streams provides API actions for accessing streams and processing stream records. To learn more about application development with Streams, see <a href=\"https://docs.aws.amazon.com/amazondynamodb/latest/developerguide/Streams.html\">Capturing Table Activity with DynamoDB Streams</a> in the Amazon DynamoDB Developer Guide.</p>
 *
 * The version of the OpenAPI document: 2012-08-10
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIAttributeValue.h
 *
 * &lt;p&gt;Represents the data for an attribute.&lt;/p&gt; &lt;p&gt;Each attribute value is described as a name-value pair. The name is the data type, and the value is the data itself.&lt;/p&gt; &lt;p&gt;For more information, see &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/amazondynamodb/latest/developerguide/HowItWorks.NamingRulesDataTypes.html#HowItWorks.DataTypes\&quot;&gt;Data Types&lt;/a&gt; in the &lt;i&gt;Amazon DynamoDB Developer Guide&lt;/i&gt;.&lt;/p&gt;
 */

#ifndef OAIAttributeValue_H
#define OAIAttributeValue_H

#include <QJsonObject>

#include <QList>
#include <QMap>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIAttributeValue : public OAIObject {
public:
    OAIAttributeValue();
    OAIAttributeValue(QString json);
    ~OAIAttributeValue() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getS() const;
    void setS(const QString &s);
    bool is_s_Set() const;
    bool is_s_Valid() const;

    QString getN() const;
    void setN(const QString &n);
    bool is_n_Set() const;
    bool is_n_Valid() const;

    QString getB() const;
    void setB(const QString &b);
    bool is_b_Set() const;
    bool is_b_Valid() const;

    QList getSs() const;
    void setSs(const QList &ss);
    bool is_ss_Set() const;
    bool is_ss_Valid() const;

    QList getNs() const;
    void setNs(const QList &ns);
    bool is_ns_Set() const;
    bool is_ns_Valid() const;

    QList getBs() const;
    void setBs(const QList &bs);
    bool is_bs_Set() const;
    bool is_bs_Valid() const;

    QMap getM() const;
    void setM(const QMap &m);
    bool is_m_Set() const;
    bool is_m_Valid() const;

    QList getL() const;
    void setL(const QList &l);
    bool is_l_Set() const;
    bool is_l_Valid() const;

    bool getNull() const;
    void setNull(const bool &null);
    bool is_null_Set() const;
    bool is_null_Valid() const;

    bool getRBool() const;
    void setRBool(const bool &r_bool);
    bool is_r_bool_Set() const;
    bool is_r_bool_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_s;
    bool m_s_isSet;
    bool m_s_isValid;

    QString m_n;
    bool m_n_isSet;
    bool m_n_isValid;

    QString m_b;
    bool m_b_isSet;
    bool m_b_isValid;

    QList m_ss;
    bool m_ss_isSet;
    bool m_ss_isValid;

    QList m_ns;
    bool m_ns_isSet;
    bool m_ns_isValid;

    QList m_bs;
    bool m_bs_isSet;
    bool m_bs_isValid;

    QMap m_m;
    bool m_m_isSet;
    bool m_m_isValid;

    QList m_l;
    bool m_l_isSet;
    bool m_l_isValid;

    bool m_null;
    bool m_null_isSet;
    bool m_null_isValid;

    bool m_r_bool;
    bool m_r_bool_isSet;
    bool m_r_bool_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIAttributeValue)

#endif // OAIAttributeValue_H
