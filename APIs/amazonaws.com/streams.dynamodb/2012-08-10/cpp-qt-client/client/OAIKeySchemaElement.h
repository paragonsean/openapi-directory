/**
 * Amazon DynamoDB Streams
 * <fullname>Amazon DynamoDB</fullname> <p>Amazon DynamoDB Streams provides API actions for accessing streams and processing stream records. To learn more about application development with Streams, see <a href=\"https://docs.aws.amazon.com/amazondynamodb/latest/developerguide/Streams.html\">Capturing Table Activity with DynamoDB Streams</a> in the Amazon DynamoDB Developer Guide.</p>
 *
 * The version of the OpenAPI document: 2012-08-10
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIKeySchemaElement.h
 *
 * &lt;p&gt;Represents &lt;i&gt;a single element&lt;/i&gt; of a key schema. A key schema specifies the attributes that make up the primary key of a table, or the key attributes of an index.&lt;/p&gt; &lt;p&gt;A &lt;code&gt;KeySchemaElement&lt;/code&gt; represents exactly one attribute of the primary key. For example, a simple primary key would be represented by one &lt;code&gt;KeySchemaElement&lt;/code&gt; (for the partition key). A composite primary key would require one &lt;code&gt;KeySchemaElement&lt;/code&gt; for the partition key, and another &lt;code&gt;KeySchemaElement&lt;/code&gt; for the sort key.&lt;/p&gt; &lt;p&gt;A &lt;code&gt;KeySchemaElement&lt;/code&gt; must be a scalar, top-level attribute (not a nested attribute). The data type must be one of String, Number, or Binary. The attribute cannot be nested within a List or a Map.&lt;/p&gt;
 */

#ifndef OAIKeySchemaElement_H
#define OAIKeySchemaElement_H

#include <QJsonObject>

#include "OAIKeyType.h"
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIKeySchemaElement : public OAIObject {
public:
    OAIKeySchemaElement();
    OAIKeySchemaElement(QString json);
    ~OAIKeySchemaElement() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getAttributeName() const;
    void setAttributeName(const QString &attribute_name);
    bool is_attribute_name_Set() const;
    bool is_attribute_name_Valid() const;

    OAIKeyType getKeyType() const;
    void setKeyType(const OAIKeyType &key_type);
    bool is_key_type_Set() const;
    bool is_key_type_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_attribute_name;
    bool m_attribute_name_isSet;
    bool m_attribute_name_isValid;

    OAIKeyType m_key_type;
    bool m_key_type_isSet;
    bool m_key_type_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIKeySchemaElement)

#endif // OAIKeySchemaElement_H
