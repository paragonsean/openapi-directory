/**
 * Amazon DynamoDB Streams
 * <fullname>Amazon DynamoDB</fullname> <p>Amazon DynamoDB Streams provides API actions for accessing streams and processing stream records. To learn more about application development with Streams, see <a href=\"https://docs.aws.amazon.com/amazondynamodb/latest/developerguide/Streams.html\">Capturing Table Activity with DynamoDB Streams</a> in the Amazon DynamoDB Developer Guide.</p>
 *
 * The version of the OpenAPI document: 2012-08-10
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import ShardIteratorType from './ShardIteratorType';

/**
 * The GetShardIteratorInput model module.
 * @module model/GetShardIteratorInput
 * @version 2012-08-10
 */
class GetShardIteratorInput {
    /**
     * Constructs a new <code>GetShardIteratorInput</code>.
     * Represents the input of a &lt;code&gt;GetShardIterator&lt;/code&gt; operation.
     * @alias module:model/GetShardIteratorInput
     * @param streamArn {String} 
     * @param shardId {String} 
     * @param shardIteratorType {module:model/ShardIteratorType} 
     */
    constructor(streamArn, shardId, shardIteratorType) { 
        
        GetShardIteratorInput.initialize(this, streamArn, shardId, shardIteratorType);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, streamArn, shardId, shardIteratorType) { 
        obj['StreamArn'] = streamArn;
        obj['ShardId'] = shardId;
        obj['ShardIteratorType'] = shardIteratorType;
    }

    /**
     * Constructs a <code>GetShardIteratorInput</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/GetShardIteratorInput} obj Optional instance to populate.
     * @return {module:model/GetShardIteratorInput} The populated <code>GetShardIteratorInput</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new GetShardIteratorInput();

            if (data.hasOwnProperty('StreamArn')) {
                obj['StreamArn'] = ApiClient.convertToType(data['StreamArn'], 'String');
            }
            if (data.hasOwnProperty('ShardId')) {
                obj['ShardId'] = ApiClient.convertToType(data['ShardId'], 'String');
            }
            if (data.hasOwnProperty('ShardIteratorType')) {
                obj['ShardIteratorType'] = ApiClient.convertToType(data['ShardIteratorType'], ShardIteratorType);
            }
            if (data.hasOwnProperty('SequenceNumber')) {
                obj['SequenceNumber'] = ApiClient.convertToType(data['SequenceNumber'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>GetShardIteratorInput</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>GetShardIteratorInput</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of GetShardIteratorInput.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // validate the optional field `StreamArn`
        if (data['StreamArn']) { // data not null
          String.validateJSON(data['StreamArn']);
        }
        // validate the optional field `ShardId`
        if (data['ShardId']) { // data not null
          String.validateJSON(data['ShardId']);
        }
        // validate the optional field `ShardIteratorType`
        if (data['ShardIteratorType']) { // data not null
          ShardIteratorType.validateJSON(data['ShardIteratorType']);
        }
        // validate the optional field `SequenceNumber`
        if (data['SequenceNumber']) { // data not null
          String.validateJSON(data['SequenceNumber']);
        }

        return true;
    }


}

GetShardIteratorInput.RequiredProperties = ["StreamArn", "ShardId", "ShardIteratorType"];

/**
 * @member {String} StreamArn
 */
GetShardIteratorInput.prototype['StreamArn'] = undefined;

/**
 * @member {String} ShardId
 */
GetShardIteratorInput.prototype['ShardId'] = undefined;

/**
 * @member {module:model/ShardIteratorType} ShardIteratorType
 */
GetShardIteratorInput.prototype['ShardIteratorType'] = undefined;

/**
 * @member {String} SequenceNumber
 */
GetShardIteratorInput.prototype['SequenceNumber'] = undefined;






export default GetShardIteratorInput;

