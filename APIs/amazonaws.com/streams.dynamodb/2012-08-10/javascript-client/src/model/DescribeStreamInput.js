/**
 * Amazon DynamoDB Streams
 * <fullname>Amazon DynamoDB</fullname> <p>Amazon DynamoDB Streams provides API actions for accessing streams and processing stream records. To learn more about application development with Streams, see <a href=\"https://docs.aws.amazon.com/amazondynamodb/latest/developerguide/Streams.html\">Capturing Table Activity with DynamoDB Streams</a> in the Amazon DynamoDB Developer Guide.</p>
 *
 * The version of the OpenAPI document: 2012-08-10
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The DescribeStreamInput model module.
 * @module model/DescribeStreamInput
 * @version 2012-08-10
 */
class DescribeStreamInput {
    /**
     * Constructs a new <code>DescribeStreamInput</code>.
     * Represents the input of a &lt;code&gt;DescribeStream&lt;/code&gt; operation.
     * @alias module:model/DescribeStreamInput
     * @param streamArn {String} 
     */
    constructor(streamArn) { 
        
        DescribeStreamInput.initialize(this, streamArn);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, streamArn) { 
        obj['StreamArn'] = streamArn;
    }

    /**
     * Constructs a <code>DescribeStreamInput</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/DescribeStreamInput} obj Optional instance to populate.
     * @return {module:model/DescribeStreamInput} The populated <code>DescribeStreamInput</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new DescribeStreamInput();

            if (data.hasOwnProperty('StreamArn')) {
                obj['StreamArn'] = ApiClient.convertToType(data['StreamArn'], 'String');
            }
            if (data.hasOwnProperty('Limit')) {
                obj['Limit'] = ApiClient.convertToType(data['Limit'], 'Number');
            }
            if (data.hasOwnProperty('ExclusiveStartShardId')) {
                obj['ExclusiveStartShardId'] = ApiClient.convertToType(data['ExclusiveStartShardId'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>DescribeStreamInput</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>DescribeStreamInput</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of DescribeStreamInput.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // validate the optional field `StreamArn`
        if (data['StreamArn']) { // data not null
          String.validateJSON(data['StreamArn']);
        }
        // validate the optional field `Limit`
        if (data['Limit']) { // data not null
          Number.validateJSON(data['Limit']);
        }
        // validate the optional field `ExclusiveStartShardId`
        if (data['ExclusiveStartShardId']) { // data not null
          String.validateJSON(data['ExclusiveStartShardId']);
        }

        return true;
    }


}

DescribeStreamInput.RequiredProperties = ["StreamArn"];

/**
 * @member {String} StreamArn
 */
DescribeStreamInput.prototype['StreamArn'] = undefined;

/**
 * @member {Number} Limit
 */
DescribeStreamInput.prototype['Limit'] = undefined;

/**
 * @member {String} ExclusiveStartShardId
 */
DescribeStreamInput.prototype['ExclusiveStartShardId'] = undefined;






export default DescribeStreamInput;

