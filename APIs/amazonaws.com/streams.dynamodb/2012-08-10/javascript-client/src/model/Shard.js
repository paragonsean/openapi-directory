/**
 * Amazon DynamoDB Streams
 * <fullname>Amazon DynamoDB</fullname> <p>Amazon DynamoDB Streams provides API actions for accessing streams and processing stream records. To learn more about application development with Streams, see <a href=\"https://docs.aws.amazon.com/amazondynamodb/latest/developerguide/Streams.html\">Capturing Table Activity with DynamoDB Streams</a> in the Amazon DynamoDB Developer Guide.</p>
 *
 * The version of the OpenAPI document: 2012-08-10
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import ShardSequenceNumberRange from './ShardSequenceNumberRange';

/**
 * The Shard model module.
 * @module model/Shard
 * @version 2012-08-10
 */
class Shard {
    /**
     * Constructs a new <code>Shard</code>.
     * A uniquely identified group of stream records within a stream.
     * @alias module:model/Shard
     */
    constructor() { 
        
        Shard.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>Shard</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/Shard} obj Optional instance to populate.
     * @return {module:model/Shard} The populated <code>Shard</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new Shard();

            if (data.hasOwnProperty('ShardId')) {
                obj['ShardId'] = ApiClient.convertToType(data['ShardId'], 'String');
            }
            if (data.hasOwnProperty('SequenceNumberRange')) {
                obj['SequenceNumberRange'] = ShardSequenceNumberRange.constructFromObject(data['SequenceNumberRange']);
            }
            if (data.hasOwnProperty('ParentShardId')) {
                obj['ParentShardId'] = ApiClient.convertToType(data['ParentShardId'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>Shard</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>Shard</code>.
     */
    static validateJSON(data) {
        // validate the optional field `ShardId`
        if (data['ShardId']) { // data not null
          String.validateJSON(data['ShardId']);
        }
        // validate the optional field `SequenceNumberRange`
        if (data['SequenceNumberRange']) { // data not null
          ShardSequenceNumberRange.validateJSON(data['SequenceNumberRange']);
        }
        // validate the optional field `ParentShardId`
        if (data['ParentShardId']) { // data not null
          String.validateJSON(data['ParentShardId']);
        }

        return true;
    }


}



/**
 * @member {String} ShardId
 */
Shard.prototype['ShardId'] = undefined;

/**
 * @member {module:model/ShardSequenceNumberRange} SequenceNumberRange
 */
Shard.prototype['SequenceNumberRange'] = undefined;

/**
 * @member {String} ParentShardId
 */
Shard.prototype['ParentShardId'] = undefined;






export default Shard;

