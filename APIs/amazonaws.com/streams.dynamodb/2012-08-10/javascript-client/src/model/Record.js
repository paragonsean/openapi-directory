/**
 * Amazon DynamoDB Streams
 * <fullname>Amazon DynamoDB</fullname> <p>Amazon DynamoDB Streams provides API actions for accessing streams and processing stream records. To learn more about application development with Streams, see <a href=\"https://docs.aws.amazon.com/amazondynamodb/latest/developerguide/Streams.html\">Capturing Table Activity with DynamoDB Streams</a> in the Amazon DynamoDB Developer Guide.</p>
 *
 * The version of the OpenAPI document: 2012-08-10
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import OperationType from './OperationType';
import RecordDynamodb from './RecordDynamodb';
import RecordUserIdentity from './RecordUserIdentity';

/**
 * The Record model module.
 * @module model/Record
 * @version 2012-08-10
 */
class Record {
    /**
     * Constructs a new <code>Record</code>.
     * A description of a unique event within a stream.
     * @alias module:model/Record
     */
    constructor() { 
        
        Record.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>Record</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/Record} obj Optional instance to populate.
     * @return {module:model/Record} The populated <code>Record</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new Record();

            if (data.hasOwnProperty('eventID')) {
                obj['eventID'] = ApiClient.convertToType(data['eventID'], 'String');
            }
            if (data.hasOwnProperty('eventName')) {
                obj['eventName'] = ApiClient.convertToType(data['eventName'], OperationType);
            }
            if (data.hasOwnProperty('eventVersion')) {
                obj['eventVersion'] = ApiClient.convertToType(data['eventVersion'], 'String');
            }
            if (data.hasOwnProperty('eventSource')) {
                obj['eventSource'] = ApiClient.convertToType(data['eventSource'], 'String');
            }
            if (data.hasOwnProperty('awsRegion')) {
                obj['awsRegion'] = ApiClient.convertToType(data['awsRegion'], 'String');
            }
            if (data.hasOwnProperty('dynamodb')) {
                obj['dynamodb'] = RecordDynamodb.constructFromObject(data['dynamodb']);
            }
            if (data.hasOwnProperty('userIdentity')) {
                obj['userIdentity'] = RecordUserIdentity.constructFromObject(data['userIdentity']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>Record</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>Record</code>.
     */
    static validateJSON(data) {
        // validate the optional field `eventID`
        if (data['eventID']) { // data not null
          String.validateJSON(data['eventID']);
        }
        // validate the optional field `eventName`
        if (data['eventName']) { // data not null
          OperationType.validateJSON(data['eventName']);
        }
        // validate the optional field `eventVersion`
        if (data['eventVersion']) { // data not null
          String.validateJSON(data['eventVersion']);
        }
        // validate the optional field `eventSource`
        if (data['eventSource']) { // data not null
          String.validateJSON(data['eventSource']);
        }
        // validate the optional field `awsRegion`
        if (data['awsRegion']) { // data not null
          String.validateJSON(data['awsRegion']);
        }
        // validate the optional field `dynamodb`
        if (data['dynamodb']) { // data not null
          RecordDynamodb.validateJSON(data['dynamodb']);
        }
        // validate the optional field `userIdentity`
        if (data['userIdentity']) { // data not null
          RecordUserIdentity.validateJSON(data['userIdentity']);
        }

        return true;
    }


}



/**
 * @member {String} eventID
 */
Record.prototype['eventID'] = undefined;

/**
 * @member {module:model/OperationType} eventName
 */
Record.prototype['eventName'] = undefined;

/**
 * @member {String} eventVersion
 */
Record.prototype['eventVersion'] = undefined;

/**
 * @member {String} eventSource
 */
Record.prototype['eventSource'] = undefined;

/**
 * @member {String} awsRegion
 */
Record.prototype['awsRegion'] = undefined;

/**
 * @member {module:model/RecordDynamodb} dynamodb
 */
Record.prototype['dynamodb'] = undefined;

/**
 * @member {module:model/RecordUserIdentity} userIdentity
 */
Record.prototype['userIdentity'] = undefined;






export default Record;

