# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class SequenceNumberRange(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, starting_sequence_number: str=None, ending_sequence_number: str=None):
        """SequenceNumberRange - a model defined in OpenAPI

        :param starting_sequence_number: The starting_sequence_number of this SequenceNumberRange.
        :param ending_sequence_number: The ending_sequence_number of this SequenceNumberRange.
        """
        self.openapi_types = {
            'starting_sequence_number': str,
            'ending_sequence_number': str
        }

        self.attribute_map = {
            'starting_sequence_number': 'StartingSequenceNumber',
            'ending_sequence_number': 'EndingSequenceNumber'
        }

        self._starting_sequence_number = starting_sequence_number
        self._ending_sequence_number = ending_sequence_number

    @classmethod
    def from_dict(cls, dikt: dict) -> 'SequenceNumberRange':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The SequenceNumberRange of this SequenceNumberRange.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def starting_sequence_number(self):
        """Gets the starting_sequence_number of this SequenceNumberRange.


        :return: The starting_sequence_number of this SequenceNumberRange.
        :rtype: str
        """
        return self._starting_sequence_number

    @starting_sequence_number.setter
    def starting_sequence_number(self, starting_sequence_number):
        """Sets the starting_sequence_number of this SequenceNumberRange.


        :param starting_sequence_number: The starting_sequence_number of this SequenceNumberRange.
        :type starting_sequence_number: str
        """

        self._starting_sequence_number = starting_sequence_number

    @property
    def ending_sequence_number(self):
        """Gets the ending_sequence_number of this SequenceNumberRange.


        :return: The ending_sequence_number of this SequenceNumberRange.
        :rtype: str
        """
        return self._ending_sequence_number

    @ending_sequence_number.setter
    def ending_sequence_number(self, ending_sequence_number):
        """Sets the ending_sequence_number of this SequenceNumberRange.


        :param ending_sequence_number: The ending_sequence_number of this SequenceNumberRange.
        :type ending_sequence_number: str
        """

        self._ending_sequence_number = ending_sequence_number
