# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.shard_iterator_type import ShardIteratorType
from openapi_server import util


class GetShardIteratorInput(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, stream_arn: str=None, shard_id: str=None, shard_iterator_type: ShardIteratorType=None, sequence_number: str=None):
        """GetShardIteratorInput - a model defined in OpenAPI

        :param stream_arn: The stream_arn of this GetShardIteratorInput.
        :param shard_id: The shard_id of this GetShardIteratorInput.
        :param shard_iterator_type: The shard_iterator_type of this GetShardIteratorInput.
        :param sequence_number: The sequence_number of this GetShardIteratorInput.
        """
        self.openapi_types = {
            'stream_arn': str,
            'shard_id': str,
            'shard_iterator_type': ShardIteratorType,
            'sequence_number': str
        }

        self.attribute_map = {
            'stream_arn': 'StreamArn',
            'shard_id': 'ShardId',
            'shard_iterator_type': 'ShardIteratorType',
            'sequence_number': 'SequenceNumber'
        }

        self._stream_arn = stream_arn
        self._shard_id = shard_id
        self._shard_iterator_type = shard_iterator_type
        self._sequence_number = sequence_number

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GetShardIteratorInput':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The GetShardIteratorInput of this GetShardIteratorInput.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def stream_arn(self):
        """Gets the stream_arn of this GetShardIteratorInput.


        :return: The stream_arn of this GetShardIteratorInput.
        :rtype: str
        """
        return self._stream_arn

    @stream_arn.setter
    def stream_arn(self, stream_arn):
        """Sets the stream_arn of this GetShardIteratorInput.


        :param stream_arn: The stream_arn of this GetShardIteratorInput.
        :type stream_arn: str
        """
        if stream_arn is None:
            raise ValueError("Invalid value for `stream_arn`, must not be `None`")

        self._stream_arn = stream_arn

    @property
    def shard_id(self):
        """Gets the shard_id of this GetShardIteratorInput.


        :return: The shard_id of this GetShardIteratorInput.
        :rtype: str
        """
        return self._shard_id

    @shard_id.setter
    def shard_id(self, shard_id):
        """Sets the shard_id of this GetShardIteratorInput.


        :param shard_id: The shard_id of this GetShardIteratorInput.
        :type shard_id: str
        """
        if shard_id is None:
            raise ValueError("Invalid value for `shard_id`, must not be `None`")

        self._shard_id = shard_id

    @property
    def shard_iterator_type(self):
        """Gets the shard_iterator_type of this GetShardIteratorInput.


        :return: The shard_iterator_type of this GetShardIteratorInput.
        :rtype: ShardIteratorType
        """
        return self._shard_iterator_type

    @shard_iterator_type.setter
    def shard_iterator_type(self, shard_iterator_type):
        """Sets the shard_iterator_type of this GetShardIteratorInput.


        :param shard_iterator_type: The shard_iterator_type of this GetShardIteratorInput.
        :type shard_iterator_type: ShardIteratorType
        """
        if shard_iterator_type is None:
            raise ValueError("Invalid value for `shard_iterator_type`, must not be `None`")

        self._shard_iterator_type = shard_iterator_type

    @property
    def sequence_number(self):
        """Gets the sequence_number of this GetShardIteratorInput.


        :return: The sequence_number of this GetShardIteratorInput.
        :rtype: str
        """
        return self._sequence_number

    @sequence_number.setter
    def sequence_number(self, sequence_number):
        """Sets the sequence_number of this GetShardIteratorInput.


        :param sequence_number: The sequence_number of this GetShardIteratorInput.
        :type sequence_number: str
        """

        self._sequence_number = sequence_number
