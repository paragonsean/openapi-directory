# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class ListStreamsInput(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, table_name: str=None, limit: int=None, exclusive_start_stream_arn: str=None):
        """ListStreamsInput - a model defined in OpenAPI

        :param table_name: The table_name of this ListStreamsInput.
        :param limit: The limit of this ListStreamsInput.
        :param exclusive_start_stream_arn: The exclusive_start_stream_arn of this ListStreamsInput.
        """
        self.openapi_types = {
            'table_name': str,
            'limit': int,
            'exclusive_start_stream_arn': str
        }

        self.attribute_map = {
            'table_name': 'TableName',
            'limit': 'Limit',
            'exclusive_start_stream_arn': 'ExclusiveStartStreamArn'
        }

        self._table_name = table_name
        self._limit = limit
        self._exclusive_start_stream_arn = exclusive_start_stream_arn

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ListStreamsInput':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ListStreamsInput of this ListStreamsInput.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def table_name(self):
        """Gets the table_name of this ListStreamsInput.


        :return: The table_name of this ListStreamsInput.
        :rtype: str
        """
        return self._table_name

    @table_name.setter
    def table_name(self, table_name):
        """Sets the table_name of this ListStreamsInput.


        :param table_name: The table_name of this ListStreamsInput.
        :type table_name: str
        """

        self._table_name = table_name

    @property
    def limit(self):
        """Gets the limit of this ListStreamsInput.


        :return: The limit of this ListStreamsInput.
        :rtype: int
        """
        return self._limit

    @limit.setter
    def limit(self, limit):
        """Sets the limit of this ListStreamsInput.


        :param limit: The limit of this ListStreamsInput.
        :type limit: int
        """

        self._limit = limit

    @property
    def exclusive_start_stream_arn(self):
        """Gets the exclusive_start_stream_arn of this ListStreamsInput.


        :return: The exclusive_start_stream_arn of this ListStreamsInput.
        :rtype: str
        """
        return self._exclusive_start_stream_arn

    @exclusive_start_stream_arn.setter
    def exclusive_start_stream_arn(self, exclusive_start_stream_arn):
        """Sets the exclusive_start_stream_arn of this ListStreamsInput.


        :param exclusive_start_stream_arn: The exclusive_start_stream_arn of this ListStreamsInput.
        :type exclusive_start_stream_arn: str
        """

        self._exclusive_start_stream_arn = exclusive_start_stream_arn
