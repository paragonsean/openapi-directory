# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.shard_sequence_number_range import ShardSequenceNumberRange
from openapi_server import util


class Shard(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, shard_id: str=None, sequence_number_range: ShardSequenceNumberRange=None, parent_shard_id: str=None):
        """Shard - a model defined in OpenAPI

        :param shard_id: The shard_id of this Shard.
        :param sequence_number_range: The sequence_number_range of this Shard.
        :param parent_shard_id: The parent_shard_id of this Shard.
        """
        self.openapi_types = {
            'shard_id': str,
            'sequence_number_range': ShardSequenceNumberRange,
            'parent_shard_id': str
        }

        self.attribute_map = {
            'shard_id': 'ShardId',
            'sequence_number_range': 'SequenceNumberRange',
            'parent_shard_id': 'ParentShardId'
        }

        self._shard_id = shard_id
        self._sequence_number_range = sequence_number_range
        self._parent_shard_id = parent_shard_id

    @classmethod
    def from_dict(cls, dikt: dict) -> 'Shard':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Shard of this Shard.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def shard_id(self):
        """Gets the shard_id of this Shard.


        :return: The shard_id of this Shard.
        :rtype: str
        """
        return self._shard_id

    @shard_id.setter
    def shard_id(self, shard_id):
        """Sets the shard_id of this Shard.


        :param shard_id: The shard_id of this Shard.
        :type shard_id: str
        """

        self._shard_id = shard_id

    @property
    def sequence_number_range(self):
        """Gets the sequence_number_range of this Shard.


        :return: The sequence_number_range of this Shard.
        :rtype: ShardSequenceNumberRange
        """
        return self._sequence_number_range

    @sequence_number_range.setter
    def sequence_number_range(self, sequence_number_range):
        """Sets the sequence_number_range of this Shard.


        :param sequence_number_range: The sequence_number_range of this Shard.
        :type sequence_number_range: ShardSequenceNumberRange
        """

        self._sequence_number_range = sequence_number_range

    @property
    def parent_shard_id(self):
        """Gets the parent_shard_id of this Shard.


        :return: The parent_shard_id of this Shard.
        :rtype: str
        """
        return self._parent_shard_id

    @parent_shard_id.setter
    def parent_shard_id(self, parent_shard_id):
        """Sets the parent_shard_id of this Shard.


        :param parent_shard_id: The parent_shard_id of this Shard.
        :type parent_shard_id: str
        """

        self._parent_shard_id = parent_shard_id
