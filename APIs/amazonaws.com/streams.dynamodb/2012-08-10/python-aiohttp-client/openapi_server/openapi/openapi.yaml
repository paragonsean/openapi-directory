openapi: 3.0.0
info:
  contact:
    email: mike.ralphson@gmail.com
    name: Mike Ralphson
    url: https://github.com/mermade/aws2openapi
    x-twitter: PermittedSoc
  description: "<fullname>Amazon DynamoDB</fullname> <p>Amazon DynamoDB Streams provides\
    \ API actions for accessing streams and processing stream records. To learn more\
    \ about application development with Streams, see <a href=\"https://docs.aws.amazon.com/amazondynamodb/latest/developerguide/Streams.html\"\
    >Capturing Table Activity with DynamoDB Streams</a> in the Amazon DynamoDB Developer\
    \ Guide.</p>"
  license:
    name: Apache 2.0 License
    url: http://www.apache.org/licenses/
  termsOfService: https://aws.amazon.com/service-terms/
  title: Amazon DynamoDB Streams
  version: 2012-08-10
  x-release: v4
  x-logo:
    url: https://twitter.com/awscloud/profile_image?size=original
    backgroundColor: '#FFFFFF'
  x-providerName: amazonaws.com
  x-serviceName: streams.dynamodb
  x-aws-signingName: dynamodb
  x-origin:
  - contentType: application/json
    url: https://raw.githubusercontent.com/aws/aws-sdk-js/master/apis/streams.dynamodb-2012-08-10.normal.json
    converter:
      url: https://github.com/mermade/aws2openapi
      version: 1.0.0
    x-apisguru-driver: external
  x-apiClientRegistration:
    url: https://portal.aws.amazon.com/gp/aws/developer/registration/index.html?nc2=h_ct
  x-apisguru-categories:
  - cloud
  x-preferred: true
externalDocs:
  description: Amazon Web Services documentation
  url: https://docs.aws.amazon.com/dynamodb/
servers:
- description: The Amazon DynamoDB Streams multi-region endpoint
  url: "http://streams.dynamodb.{region}.amazonaws.com"
  variables:
    region:
      default: us-east-1
      description: The AWS region
      enum:
      - us-east-1
      - us-east-2
      - us-west-1
      - us-west-2
      - us-gov-west-1
      - us-gov-east-1
      - ca-central-1
      - eu-north-1
      - eu-west-1
      - eu-west-2
      - eu-west-3
      - eu-central-1
      - eu-south-1
      - af-south-1
      - ap-northeast-1
      - ap-northeast-2
      - ap-northeast-3
      - ap-southeast-1
      - ap-southeast-2
      - ap-east-1
      - ap-south-1
      - sa-east-1
      - me-south-1
- description: The Amazon DynamoDB Streams multi-region endpoint
  url: "https://streams.dynamodb.{region}.amazonaws.com"
  variables:
    region:
      default: us-east-1
      description: The AWS region
      enum:
      - us-east-1
      - us-east-2
      - us-west-1
      - us-west-2
      - us-gov-west-1
      - us-gov-east-1
      - ca-central-1
      - eu-north-1
      - eu-west-1
      - eu-west-2
      - eu-west-3
      - eu-central-1
      - eu-south-1
      - af-south-1
      - ap-northeast-1
      - ap-northeast-2
      - ap-northeast-3
      - ap-southeast-1
      - ap-southeast-2
      - ap-east-1
      - ap-south-1
      - sa-east-1
      - me-south-1
- description: The Amazon DynamoDB Streams endpoint for China (Beijing) and China
    (Ningxia)
  url: "http://streams.dynamodb.{region}.amazonaws.com.cn"
  variables:
    region:
      default: cn-north-1
      description: The AWS region
      enum:
      - cn-north-1
      - cn-northwest-1
- description: The Amazon DynamoDB Streams endpoint for China (Beijing) and China
    (Ningxia)
  url: "https://streams.dynamodb.{region}.amazonaws.com.cn"
  variables:
    region:
      default: cn-north-1
      description: The AWS region
      enum:
      - cn-north-1
      - cn-northwest-1
security:
- hmac: []
paths:
  /#X-Amz-Target=DynamoDBStreams_20120810.DescribeStream:
    post:
      description: "<p>Returns information about a stream, including the current status\
        \ of the stream, its Amazon Resource Name (ARN), the composition of its shards,\
        \ and its corresponding DynamoDB table.</p> <note> <p>You can call <code>DescribeStream</code>\
        \ at a maximum rate of 10 times per second.</p> </note> <p>Each shard in the\
        \ stream has a <code>SequenceNumberRange</code> associated with it. If the\
        \ <code>SequenceNumberRange</code> has a <code>StartingSequenceNumber</code>\
        \ but no <code>EndingSequenceNumber</code>, then the shard is still open (able\
        \ to receive more stream records). If both <code>StartingSequenceNumber</code>\
        \ and <code>EndingSequenceNumber</code> are present, then that shard is closed\
        \ and can no longer receive more data.</p>"
      operationId: describe_stream
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - DynamoDBStreams_20120810.DescribeStream
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DescribeStreamInput'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DescribeStreamOutput'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerError'
          description: InternalServerError
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /#X-Amz-Target=DynamoDBStreams_20120810.GetRecords:
    post:
      description: "<p>Retrieves the stream records from a given shard.</p> <p>Specify\
        \ a shard iterator using the <code>ShardIterator</code> parameter. The shard\
        \ iterator specifies the position in the shard from which you want to start\
        \ reading stream records sequentially. If there are no stream records available\
        \ in the portion of the shard that the iterator points to, <code>GetRecords</code>\
        \ returns an empty list. Note that it might take multiple calls to get to\
        \ a portion of the shard that contains stream records.</p> <note> <p> <code>GetRecords</code>\
        \ can retrieve a maximum of 1 MB of data or 1000 stream records, whichever\
        \ comes first.</p> </note>"
      operationId: get_records
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - DynamoDBStreams_20120810.GetRecords
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetRecordsInput'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetRecordsOutput'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
          description: LimitExceededException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerError'
          description: InternalServerError
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExpiredIteratorException'
          description: ExpiredIteratorException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TrimmedDataAccessException'
          description: TrimmedDataAccessException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /#X-Amz-Target=DynamoDBStreams_20120810.GetShardIterator:
    post:
      description: <p>Returns a shard iterator. A shard iterator provides information
        about how to retrieve the stream records from within a shard. Use the shard
        iterator in a subsequent <code>GetRecords</code> request to read the stream
        records from the shard.</p> <note> <p>A shard iterator expires 15 minutes
        after it is returned to the requester.</p> </note>
      operationId: get_shard_iterator
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - DynamoDBStreams_20120810.GetShardIterator
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetShardIteratorInput'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetShardIteratorOutput'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerError'
          description: InternalServerError
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TrimmedDataAccessException'
          description: TrimmedDataAccessException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /#X-Amz-Target=DynamoDBStreams_20120810.ListStreams:
    post:
      description: "<p>Returns an array of stream ARNs associated with the current\
        \ account and endpoint. If the <code>TableName</code> parameter is present,\
        \ then <code>ListStreams</code> will return only the streams ARNs for that\
        \ table.</p> <note> <p>You can call <code>ListStreams</code> at a maximum\
        \ rate of 5 times per second.</p> </note>"
      operationId: list_streams
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - DynamoDBStreams_20120810.ListStreams
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ListStreamsInput'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListStreamsOutput'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerError'
          description: InternalServerError
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
components:
  parameters:
    X-Amz-Content-Sha256:
      explode: false
      in: header
      name: X-Amz-Content-Sha256
      required: false
      schema:
        type: string
      style: simple
    X-Amz-Date:
      explode: false
      in: header
      name: X-Amz-Date
      required: false
      schema:
        type: string
      style: simple
    X-Amz-Algorithm:
      explode: false
      in: header
      name: X-Amz-Algorithm
      required: false
      schema:
        type: string
      style: simple
    X-Amz-Credential:
      explode: false
      in: header
      name: X-Amz-Credential
      required: false
      schema:
        type: string
      style: simple
    X-Amz-Security-Token:
      explode: false
      in: header
      name: X-Amz-Security-Token
      required: false
      schema:
        type: string
      style: simple
    X-Amz-Signature:
      explode: false
      in: header
      name: X-Amz-Signature
      required: false
      schema:
        type: string
      style: simple
    X-Amz-SignedHeaders:
      explode: false
      in: header
      name: X-Amz-SignedHeaders
      required: false
      schema:
        type: string
      style: simple
  schemas:
    DescribeStreamOutput:
      description: Represents the output of a <code>DescribeStream</code> operation.
      example:
        StreamDescription:
          CreationRequestDateTime: Wed May 20 13:51:10 PDT 2015
          KeySchema:
          - AttributeName: ForumName
            KeyType: HASH
          - AttributeName: Subject
            KeyType: RANGE
          Shards:
          - SequenceNumberRange:
              EndingSequenceNumber: "20500000000000000910398"
              StartingSequenceNumber: "20500000000000000910398"
            ShardId: shardId-00000001414562045508-2bac9cd2
          - ParentShardId: shardId-00000001414562045508-2bac9cd2
            SequenceNumberRange:
              EndingSequenceNumber: "820400000000000001192334"
              StartingSequenceNumber: "820400000000000001192334"
            ShardId: shardId-00000001414576573621-f55eea83
          - ParentShardId: shardId-00000001414576573621-f55eea83
            SequenceNumberRange:
              EndingSequenceNumber: "1683700000000000001135967"
              StartingSequenceNumber: "1683700000000000001135967"
            ShardId: shardId-00000001414592258131-674fd923
          - ParentShardId: shardId-00000001414592258131-674fd923
            SequenceNumberRange:
              StartingSequenceNumber: "2574600000000000000935255"
            ShardId: shardId-00000001414608446368-3a1afbaf
          StreamArn: arn:aws:dynamodb:us-west-2:111122223333:table/Forum/stream/2015-05-20T20:51:10.252
          StreamLabel: 2015-05-20T20:51:10.252
          StreamStatus: ENABLED
          StreamViewType: NEW_AND_OLD_IMAGES
          TableName: Forum
      properties:
        StreamDescription:
          $ref: '#/components/schemas/DescribeStreamOutput_StreamDescription'
      title: DescribeStreamOutput
      type: object
    DescribeStreamInput:
      description: Represents the input of a <code>DescribeStream</code> operation.
      example:
        ExclusiveStartShardId: ""
        Limit: ""
        StreamArn: ""
      properties:
        StreamArn:
          allOf:
          - $ref: '#/components/schemas/StreamArn'
          - description: The Amazon Resource Name (ARN) for the stream.
          title: StreamArn
        Limit:
          allOf:
          - $ref: '#/components/schemas/PositiveIntegerObject'
          - description: The maximum number of shard objects to return. The upper
              limit is 100.
          title: Limit
        ExclusiveStartShardId:
          allOf:
          - $ref: '#/components/schemas/ShardId'
          - description: 'The shard ID of the first item that this operation will
              evaluate. Use the value that was returned for <code>LastEvaluatedShardId</code>
              in the previous operation. '
          title: ExclusiveStartShardId
      required:
      - StreamArn
      title: DescribeStreamInput
      type: object
    ResourceNotFoundException: {}
    InternalServerError: {}
    GetRecordsOutput:
      description: Represents the output of a <code>GetRecords</code> operation.
      example:
        NextShardIterator: arn:aws:dynamodb:us-west-2:111122223333:table/Forum/stream/2015-05-20T20:51:10.252|1|AAAAAAAAAAGQBYshYDEe
          ... <remaining characters omitted> ...
        Records:
        - awsRegion: us-west-2
          dynamodb:
            ApproximateCreationDateTime: 1.46480646E9
            Keys:
              ForumName:
                S: DynamoDB
              Subject:
                S: DynamoDB Thread 3
            SequenceNumber: "300000000000000499659"
            SizeBytes: 41
            StreamViewType: KEYS_ONLY
          eventID: e2fd9c34eff2d779b297b26f5fef4206
          eventName: INSERT
          eventSource: aws:dynamodb
          eventVersion: "1.0"
        - awsRegion: us-west-2
          dynamodb:
            ApproximateCreationDateTime: 1.46480527E9
            Keys:
              ForumName:
                S: DynamoDB
              Subject:
                S: DynamoDB Thread 1
            SequenceNumber: "400000000000000499660"
            SizeBytes: 41
            StreamViewType: KEYS_ONLY
          eventID: 4b25bd0da9a181a155114127e4837252
          eventName: MODIFY
          eventSource: aws:dynamodb
          eventVersion: "1.0"
        - awsRegion: us-west-2
          dynamodb:
            ApproximateCreationDateTime: 1.46480646E9
            Keys:
              ForumName:
                S: DynamoDB
              Subject:
                S: DynamoDB Thread 2
            SequenceNumber: "500000000000000499661"
            SizeBytes: 41
            StreamViewType: KEYS_ONLY
          eventID: 740280c73a3df7842edab3548a1b08ad
          eventName: REMOVE
          eventSource: aws:dynamodb
          eventVersion: "1.0"
      properties:
        Records:
          allOf:
          - $ref: '#/components/schemas/RecordList'
          - description: "The stream records from the shard, which were retrieved\
              \ using the shard iterator."
        NextShardIterator:
          allOf:
          - $ref: '#/components/schemas/ShardIterator'
          - description: "The next position in the shard from which to start sequentially\
              \ reading stream records. If set to <code>null</code>, the shard has\
              \ been closed and the requested iterator will not return any more data."
      title: GetRecordsOutput
      type: object
    GetRecordsInput:
      description: Represents the input of a <code>GetRecords</code> operation.
      example:
        ShardIterator: ""
        Limit: ""
      properties:
        ShardIterator:
          allOf:
          - $ref: '#/components/schemas/ShardIterator'
          - description: A shard iterator that was retrieved from a previous GetShardIterator
              operation. This iterator can be used to access the stream records in
              this shard.
          title: ShardIterator
        Limit:
          allOf:
          - $ref: '#/components/schemas/PositiveIntegerObject'
          - description: The maximum number of records to return from the shard. The
              upper limit is 1000.
          title: Limit
      required:
      - ShardIterator
      title: GetRecordsInput
      type: object
    LimitExceededException: {}
    ExpiredIteratorException: {}
    TrimmedDataAccessException: {}
    GetShardIteratorOutput:
      description: Represents the output of a <code>GetShardIterator</code> operation.
      example:
        ShardIterator: arn:aws:dynamodb:us-west-2:111122223333:table/Forum/stream/2015-05-20T20:51:10.252|1|AAAAAAAAAAEvJp6D+zaQ...  <remaining
          characters omitted> ...
      properties:
        ShardIterator:
          allOf:
          - $ref: '#/components/schemas/ShardIterator'
          - description: The position in the shard from which to start reading stream
              records sequentially. A shard iterator specifies this position using
              the sequence number of a stream record in a shard.
      title: GetShardIteratorOutput
      type: object
    GetShardIteratorInput:
      description: Represents the input of a <code>GetShardIterator</code> operation.
      example:
        ShardId: ""
        ShardIteratorType: ""
        SequenceNumber: ""
        StreamArn: ""
      properties:
        StreamArn:
          allOf:
          - $ref: '#/components/schemas/StreamArn'
          - description: The Amazon Resource Name (ARN) for the stream.
          title: StreamArn
        ShardId:
          allOf:
          - $ref: '#/components/schemas/ShardId'
          - description: The identifier of the shard. The iterator will be returned
              for this shard ID.
          title: ShardId
        ShardIteratorType:
          allOf:
          - $ref: '#/components/schemas/ShardIteratorType'
          - description: "<p>Determines how the shard iterator is used to start reading\
              \ stream records from the shard:</p> <ul> <li> <p> <code>AT_SEQUENCE_NUMBER</code>\
              \ - Start reading exactly from the position denoted by a specific sequence\
              \ number.</p> </li> <li> <p> <code>AFTER_SEQUENCE_NUMBER</code> - Start\
              \ reading right after the position denoted by a specific sequence number.</p>\
              \ </li> <li> <p> <code>TRIM_HORIZON</code> - Start reading at the last\
              \ (untrimmed) stream record, which is the oldest record in the shard.\
              \ In DynamoDB Streams, there is a 24 hour limit on data retention. Stream\
              \ records whose age exceeds this limit are subject to removal (trimming)\
              \ from the stream.</p> </li> <li> <p> <code>LATEST</code> - Start reading\
              \ just after the most recent stream record in the shard, so that you\
              \ always read the most recent data in the shard.</p> </li> </ul>"
          title: ShardIteratorType
        SequenceNumber:
          allOf:
          - $ref: '#/components/schemas/SequenceNumber'
          - description: The sequence number of a stream record in the shard from
              which to start reading.
          title: SequenceNumber
      required:
      - ShardId
      - ShardIteratorType
      - StreamArn
      title: GetShardIteratorInput
      type: object
    ListStreamsOutput:
      description: Represents the output of a <code>ListStreams</code> operation.
      example:
        Streams:
        - StreamArn: arn:aws:dynamodb:us-wesst-2:111122223333:table/Forum/stream/2015-05-20T20:51:10.252
          StreamLabel: 2015-05-20T20:51:10.252
          TableName: Forum
        - StreamArn: arn:aws:dynamodb:us-west-2:111122223333:table/Forum/stream/2015-05-20T20:50:02.714
          StreamLabel: 2015-05-20T20:50:02.714
          TableName: Forum
        - StreamArn: arn:aws:dynamodb:us-west-2:111122223333:table/Forum/stream/2015-05-19T23:03:50.641
          StreamLabel: 2015-05-19T23:03:50.641
          TableName: Forum
      properties:
        Streams:
          allOf:
          - $ref: '#/components/schemas/StreamList'
          - description: A list of stream descriptors associated with the current
              account and endpoint.
        LastEvaluatedStreamArn:
          allOf:
          - $ref: '#/components/schemas/StreamArn'
          - description: "<p>The stream ARN of the item where the operation stopped,\
              \ inclusive of the previous result set. Use this value to start a new\
              \ operation, excluding this value in the new request.</p> <p>If <code>LastEvaluatedStreamArn</code>\
              \ is empty, then the \"last page\" of results has been processed and\
              \ there is no more data to be retrieved.</p> <p>If <code>LastEvaluatedStreamArn</code>\
              \ is not empty, it does not necessarily mean that there is more data\
              \ in the result set. The only way to know when you have reached the\
              \ end of the result set is when <code>LastEvaluatedStreamArn</code>\
              \ is empty.</p>"
      title: ListStreamsOutput
      type: object
    ListStreamsInput:
      description: Represents the input of a <code>ListStreams</code> operation.
      example:
        TableName: ""
        ExclusiveStartStreamArn: ""
        Limit: ""
      properties:
        TableName:
          allOf:
          - $ref: '#/components/schemas/TableName'
          - description: "If this parameter is provided, then only the streams associated\
              \ with this table name are returned."
          title: TableName
        Limit:
          allOf:
          - $ref: '#/components/schemas/PositiveIntegerObject'
          - description: The maximum number of streams to return. The upper limit
              is 100.
          title: Limit
        ExclusiveStartStreamArn:
          allOf:
          - $ref: '#/components/schemas/StreamArn'
          - description: 'The ARN (Amazon Resource Name) of the first item that this
              operation will evaluate. Use the value that was returned for <code>LastEvaluatedStreamArn</code>
              in the previous operation. '
          title: ExclusiveStartStreamArn
      title: ListStreamsInput
      type: object
    AttributeValue:
      description: "<p>Represents the data for an attribute.</p> <p>Each attribute\
        \ value is described as a name-value pair. The name is the data type, and\
        \ the value is the data itself.</p> <p>For more information, see <a href=\"\
        https://docs.aws.amazon.com/amazondynamodb/latest/developerguide/HowItWorks.NamingRulesDataTypes.html#HowItWorks.DataTypes\"\
        >Data Types</a> in the <i>Amazon DynamoDB Developer Guide</i>.</p>"
      properties:
        S:
          allOf:
          - $ref: '#/components/schemas/StringAttributeValue'
          - description: "<p>An attribute of type String. For example:</p> <p> <code>\"\
              S\": \"Hello\"</code> </p>"
          title: S
        "N":
          allOf:
          - $ref: '#/components/schemas/NumberAttributeValue'
          - description: "<p>An attribute of type Number. For example:</p> <p> <code>\"\
              N\": \"123.45\"</code> </p> <p>Numbers are sent across the network to\
              \ DynamoDB as strings, to maximize compatibility across languages and\
              \ libraries. However, DynamoDB treats them as number type attributes\
              \ for mathematical operations.</p>"
          title: "N"
        B:
          allOf:
          - $ref: '#/components/schemas/BinaryAttributeValue'
          - description: "<p>An attribute of type Binary. For example:</p> <p> <code>\"\
              B\": \"dGhpcyB0ZXh0IGlzIGJhc2U2NC1lbmNvZGVk\"</code> </p>"
          title: B
        SS:
          allOf:
          - $ref: '#/components/schemas/StringSetAttributeValue'
          - description: "<p>An attribute of type String Set. For example:</p> <p>\
              \ <code>\"SS\": [\"Giraffe\", \"Hippo\" ,\"Zebra\"]</code> </p>"
          title: SS
        NS:
          allOf:
          - $ref: '#/components/schemas/NumberSetAttributeValue'
          - description: "<p>An attribute of type Number Set. For example:</p> <p>\
              \ <code>\"NS\": [\"42.2\", \"-19\", \"7.5\", \"3.14\"]</code> </p> <p>Numbers\
              \ are sent across the network to DynamoDB as strings, to maximize compatibility\
              \ across languages and libraries. However, DynamoDB treats them as number\
              \ type attributes for mathematical operations.</p>"
          title: NS
        BS:
          allOf:
          - $ref: '#/components/schemas/BinarySetAttributeValue'
          - description: "<p>An attribute of type Binary Set. For example:</p> <p>\
              \ <code>\"BS\": [\"U3Vubnk=\", \"UmFpbnk=\", \"U25vd3k=\"]</code> </p>"
          title: BS
        M:
          allOf:
          - $ref: '#/components/schemas/MapAttributeValue'
          - description: "<p>An attribute of type Map. For example:</p> <p> <code>\"\
              M\": {\"Name\": {\"S\": \"Joe\"}, \"Age\": {\"N\": \"35\"}}</code> </p>"
          title: M
        L:
          allOf:
          - $ref: '#/components/schemas/ListAttributeValue'
          - description: "<p>An attribute of type List. For example:</p> <p> <code>\"\
              L\": [ {\"S\": \"Cookies\"} , {\"S\": \"Coffee\"}, {\"N\": \"3.14159\"\
              }]</code> </p>"
          title: L
        "NULL":
          allOf:
          - $ref: '#/components/schemas/NullAttributeValue'
          - description: "<p>An attribute of type Null. For example:</p> <p> <code>\"\
              NULL\": true</code> </p>"
          title: "NULL"
        BOOL:
          allOf:
          - $ref: '#/components/schemas/BooleanAttributeValue'
          - description: "<p>An attribute of type Boolean. For example:</p> <p> <code>\"\
              BOOL\": true</code> </p>"
          title: BOOL
      title: AttributeValue
      type: object
    AttributeMap:
      additionalProperties:
        $ref: '#/components/schemas/AttributeValue'
      type: object
    AttributeName:
      maxLength: 65535
      type: string
    StringAttributeValue:
      title: StringAttributeValue
      type: string
    NumberAttributeValue:
      title: NumberAttributeValue
      type: string
    BinaryAttributeValue:
      title: BinaryAttributeValue
      type: string
    StringSetAttributeValue:
      items:
        $ref: '#/components/schemas/StringAttributeValue'
      type: array
    NumberSetAttributeValue:
      items:
        $ref: '#/components/schemas/NumberAttributeValue'
      type: array
    BinarySetAttributeValue:
      items:
        $ref: '#/components/schemas/BinaryAttributeValue'
      type: array
    MapAttributeValue:
      additionalProperties:
        $ref: '#/components/schemas/AttributeValue'
      type: object
    ListAttributeValue:
      items:
        $ref: '#/components/schemas/AttributeValue'
      type: array
    NullAttributeValue:
      type: boolean
    BooleanAttributeValue:
      type: boolean
    Date:
      format: date-time
      type: string
    StreamArn:
      maxLength: 1024
      minLength: 37
      type: string
    PositiveIntegerObject:
      minimum: 1
      type: integer
    ShardId:
      maxLength: 65
      minLength: 28
      type: string
    StreamDescription:
      description: Represents all of the data describing a particular stream.
      properties:
        StreamArn:
          allOf:
          - $ref: '#/components/schemas/StreamArn'
          - description: The Amazon Resource Name (ARN) for the stream.
          title: StreamArn
        StreamLabel:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: "<p>A timestamp, in ISO 8601 format, for this stream.</p>\
              \ <p>Note that <code>LatestStreamLabel</code> is not a unique identifier\
              \ for the stream, because it is possible that a stream from another\
              \ table might have the same timestamp. However, the combination of the\
              \ following three elements is guaranteed to be unique:</p> <ul> <li>\
              \ <p>the Amazon Web Services customer ID.</p> </li> <li> <p>the table\
              \ name</p> </li> <li> <p>the <code>StreamLabel</code> </p> </li> </ul>"
          title: StreamLabel
        StreamStatus:
          allOf:
          - $ref: '#/components/schemas/StreamStatus'
          - description: <p>Indicates the current status of the stream:</p> <ul> <li>
              <p> <code>ENABLING</code> - Streams is currently being enabled on the
              DynamoDB table.</p> </li> <li> <p> <code>ENABLED</code> - the stream
              is enabled.</p> </li> <li> <p> <code>DISABLING</code> - Streams is currently
              being disabled on the DynamoDB table.</p> </li> <li> <p> <code>DISABLED</code>
              - the stream is disabled.</p> </li> </ul>
          title: StreamStatus
        StreamViewType:
          allOf:
          - $ref: '#/components/schemas/StreamViewType'
          - description: "<p>Indicates the format of the records within this stream:</p>\
              \ <ul> <li> <p> <code>KEYS_ONLY</code> - only the key attributes of\
              \ items that were modified in the DynamoDB table.</p> </li> <li> <p>\
              \ <code>NEW_IMAGE</code> - entire items from the table, as they appeared\
              \ after they were modified.</p> </li> <li> <p> <code>OLD_IMAGE</code>\
              \ - entire items from the table, as they appeared before they were modified.</p>\
              \ </li> <li> <p> <code>NEW_AND_OLD_IMAGES</code> - both the new and\
              \ the old images of the items from the table.</p> </li> </ul>"
          title: StreamViewType
        CreationRequestDateTime:
          allOf:
          - $ref: '#/components/schemas/Date'
          - description: The date and time when the request to create this stream
              was issued.
          title: CreationRequestDateTime
        TableName:
          allOf:
          - $ref: '#/components/schemas/TableName'
          - description: The DynamoDB table with which the stream is associated.
          title: TableName
        KeySchema:
          allOf:
          - $ref: '#/components/schemas/KeySchema'
          - description: The key attribute(s) of the stream's DynamoDB table.
          title: KeySchema
        Shards:
          allOf:
          - $ref: '#/components/schemas/ShardDescriptionList'
          - description: The shards that comprise the stream.
          title: Shards
        LastEvaluatedShardId:
          allOf:
          - $ref: '#/components/schemas/ShardId'
          - description: "<p>The shard ID of the item where the operation stopped,\
              \ inclusive of the previous result set. Use this value to start a new\
              \ operation, excluding this value in the new request.</p> <p>If <code>LastEvaluatedShardId</code>\
              \ is empty, then the \"last page\" of results has been processed and\
              \ there is currently no more data to be retrieved.</p> <p>If <code>LastEvaluatedShardId</code>\
              \ is not empty, it does not necessarily mean that there is more data\
              \ in the result set. The only way to know when you have reached the\
              \ end of the result set is when <code>LastEvaluatedShardId</code> is\
              \ empty.</p>"
          title: LastEvaluatedShardId
      title: StreamDescription
      type: object
    ShardIterator:
      maxLength: 2048
      minLength: 1
      type: string
    RecordList:
      items:
        $ref: '#/components/schemas/Record'
      type: array
    ShardIteratorType:
      enum:
      - TRIM_HORIZON
      - LATEST
      - AT_SEQUENCE_NUMBER
      - AFTER_SEQUENCE_NUMBER
      title: ShardIteratorType
      type: string
    SequenceNumber:
      maxLength: 40
      minLength: 21
      type: string
    String:
      type: string
    Identity:
      description: Contains details about the type of identity that made the request.
      properties:
        PrincipalId:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: "A unique identifier for the entity that made the call. For\
              \ Time To Live, the principalId is \"dynamodb.amazonaws.com\"."
          title: PrincipalId
        Type:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: "The type of the identity. For Time To Live, the type is\
              \ \"Service\"."
          title: Type
      title: Identity
      type: object
    KeySchemaElement:
      description: "<p>Represents <i>a single element</i> of a key schema. A key schema\
        \ specifies the attributes that make up the primary key of a table, or the\
        \ key attributes of an index.</p> <p>A <code>KeySchemaElement</code> represents\
        \ exactly one attribute of the primary key. For example, a simple primary\
        \ key would be represented by one <code>KeySchemaElement</code> (for the partition\
        \ key). A composite primary key would require one <code>KeySchemaElement</code>\
        \ for the partition key, and another <code>KeySchemaElement</code> for the\
        \ sort key.</p> <p>A <code>KeySchemaElement</code> must be a scalar, top-level\
        \ attribute (not a nested attribute). The data type must be one of String,\
        \ Number, or Binary. The attribute cannot be nested within a List or a Map.</p>"
      properties:
        AttributeName:
          allOf:
          - $ref: '#/components/schemas/KeySchemaAttributeName'
          - description: The name of a key attribute.
          title: AttributeName
        KeyType:
          allOf:
          - $ref: '#/components/schemas/KeyType'
          - description: "<p>The role that this key attribute will assume:</p> <ul>\
              \ <li> <p> <code>HASH</code> - partition key</p> </li> <li> <p> <code>RANGE</code>\
              \ - sort key</p> </li> </ul> <note> <p>The partition key of an item\
              \ is also known as its <i>hash attribute</i>. The term \"hash attribute\"\
              \ derives from DynamoDB's usage of an internal hash function to evenly\
              \ distribute data items across partitions, based on their partition\
              \ key values.</p> <p>The sort key of an item is also known as its <i>range\
              \ attribute</i>. The term \"range attribute\" derives from the way DynamoDB\
              \ stores items with the same partition key physically close together,\
              \ in sorted order by the sort key value.</p> </note>"
          title: KeyType
      required:
      - AttributeName
      - KeyType
      title: KeySchemaElement
      type: object
    KeySchema:
      items:
        $ref: '#/components/schemas/KeySchemaElement'
      maxItems: 2
      minItems: 1
      type: array
    KeySchemaAttributeName:
      maxLength: 255
      minLength: 1
      type: string
    KeyType:
      enum:
      - HASH
      - RANGE
      title: KeyType
      type: string
    TableName:
      maxLength: 255
      minLength: 3
      pattern: "[a-zA-Z0-9_.-]+"
      type: string
    StreamList:
      items:
        $ref: '#/components/schemas/Stream'
      type: array
    OperationType:
      enum:
      - INSERT
      - MODIFY
      - REMOVE
      title: OperationType
      type: string
    PositiveLongObject:
      minimum: 1
      type: integer
    StreamRecord:
      description: A description of a single data modification that was performed
        on an item in a DynamoDB table.
      properties:
        ApproximateCreationDateTime:
          allOf:
          - $ref: '#/components/schemas/Date'
          - description: "The approximate date and time when the stream record was\
              \ created, in <a href=\"http://www.epochconverter.com/\">UNIX epoch\
              \ time</a> format and rounded down to the closest second."
          title: ApproximateCreationDateTime
        Keys:
          allOf:
          - $ref: '#/components/schemas/AttributeMap'
          - description: The primary key attribute(s) for the DynamoDB item that was
              modified.
          title: Keys
        NewImage:
          allOf:
          - $ref: '#/components/schemas/AttributeMap'
          - description: The item in the DynamoDB table as it appeared after it was
              modified.
          title: NewImage
        OldImage:
          allOf:
          - $ref: '#/components/schemas/AttributeMap'
          - description: The item in the DynamoDB table as it appeared before it was
              modified.
          title: OldImage
        SequenceNumber:
          allOf:
          - $ref: '#/components/schemas/SequenceNumber'
          - description: The sequence number of the stream record.
          title: SequenceNumber
        SizeBytes:
          allOf:
          - $ref: '#/components/schemas/PositiveLongObject'
          - description: "The size of the stream record, in bytes."
          title: SizeBytes
        StreamViewType:
          allOf:
          - $ref: '#/components/schemas/StreamViewType'
          - description: "<p>The type of data from the modified DynamoDB item that\
              \ was captured in this stream record:</p> <ul> <li> <p> <code>KEYS_ONLY</code>\
              \ - only the key attributes of the modified item.</p> </li> <li> <p>\
              \ <code>NEW_IMAGE</code> - the entire item, as it appeared after it\
              \ was modified.</p> </li> <li> <p> <code>OLD_IMAGE</code> - the entire\
              \ item, as it appeared before it was modified.</p> </li> <li> <p> <code>NEW_AND_OLD_IMAGES</code>\
              \ - both the new and the old item images of the item.</p> </li> </ul>"
          title: StreamViewType
      title: StreamRecord
      type: object
    Record:
      description: A description of a unique event within a stream.
      properties:
        eventID:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: A globally unique identifier for the event that was recorded
              in this stream record.
          title: eventID
        eventName:
          allOf:
          - $ref: '#/components/schemas/OperationType'
          - description: <p>The type of data modification that was performed on the
              DynamoDB table:</p> <ul> <li> <p> <code>INSERT</code> - a new item was
              added to the table.</p> </li> <li> <p> <code>MODIFY</code> - one or
              more of an existing item's attributes were modified.</p> </li> <li>
              <p> <code>REMOVE</code> - the item was deleted from the table</p> </li>
              </ul>
          title: eventName
        eventVersion:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: "<p>The version number of the stream record format. This\
              \ number is updated whenever the structure of <code>Record</code> is\
              \ modified.</p> <p>Client applications must not assume that <code>eventVersion</code>\
              \ will remain at a particular value, as this number is subject to change\
              \ at any time. In general, <code>eventVersion</code> will only increase\
              \ as the low-level DynamoDB Streams API evolves.</p>"
          title: eventVersion
        eventSource:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: "The Amazon Web Services service from which the stream record\
              \ originated. For DynamoDB Streams, this is <code>aws:dynamodb</code>."
          title: eventSource
        awsRegion:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The region in which the <code>GetRecords</code> request was
              received.
          title: awsRegion
        dynamodb:
          $ref: '#/components/schemas/Record_dynamodb'
        userIdentity:
          $ref: '#/components/schemas/Record_userIdentity'
      title: Record
      type: object
    SequenceNumberRange:
      description: The beginning and ending sequence numbers for the stream records
        contained within a shard.
      properties:
        StartingSequenceNumber:
          allOf:
          - $ref: '#/components/schemas/SequenceNumber'
          - description: The first sequence number for the stream records contained
              within a shard. String contains numeric characters only.
          title: StartingSequenceNumber
        EndingSequenceNumber:
          allOf:
          - $ref: '#/components/schemas/SequenceNumber'
          - description: The last sequence number for the stream records contained
              within a shard. String contains numeric characters only.
          title: EndingSequenceNumber
      title: SequenceNumberRange
      type: object
    Shard:
      description: A uniquely identified group of stream records within a stream.
      properties:
        ShardId:
          allOf:
          - $ref: '#/components/schemas/ShardId'
          - description: The system-generated identifier for this shard.
          title: ShardId
        SequenceNumberRange:
          $ref: '#/components/schemas/Shard_SequenceNumberRange'
        ParentShardId:
          allOf:
          - $ref: '#/components/schemas/ShardId'
          - description: The shard ID of the current shard's parent.
          title: ParentShardId
      title: Shard
      type: object
    ShardDescriptionList:
      items:
        $ref: '#/components/schemas/Shard'
      type: array
    Stream:
      description: Represents all of the data describing a particular stream.
      properties:
        StreamArn:
          allOf:
          - $ref: '#/components/schemas/StreamArn'
          - description: The Amazon Resource Name (ARN) for the stream.
          title: StreamArn
        TableName:
          allOf:
          - $ref: '#/components/schemas/TableName'
          - description: The DynamoDB table with which the stream is associated.
          title: TableName
        StreamLabel:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: "<p>A timestamp, in ISO 8601 format, for this stream.</p>\
              \ <p>Note that <code>LatestStreamLabel</code> is not a unique identifier\
              \ for the stream, because it is possible that a stream from another\
              \ table might have the same timestamp. However, the combination of the\
              \ following three elements is guaranteed to be unique:</p> <ul> <li>\
              \ <p>the Amazon Web Services customer ID.</p> </li> <li> <p>the table\
              \ name</p> </li> <li> <p>the <code>StreamLabel</code> </p> </li> </ul>"
          title: StreamLabel
      title: Stream
      type: object
    StreamStatus:
      enum:
      - ENABLING
      - ENABLED
      - DISABLING
      - DISABLED
      title: StreamStatus
      type: string
    StreamViewType:
      enum:
      - NEW_IMAGE
      - OLD_IMAGE
      - NEW_AND_OLD_IMAGES
      - KEYS_ONLY
      title: StreamViewType
      type: string
    DescribeStreamOutput_StreamDescription:
      allOf:
      - $ref: '#/components/schemas/StreamDescription'
      - description: "A complete description of the stream, including its creation\
          \ date and time, the DynamoDB table associated with the stream, the shard\
          \ IDs within the stream, and the beginning and ending sequence numbers of\
          \ stream records within the shards."
      title: DescribeStreamOutput_StreamDescription
    Record_dynamodb:
      allOf:
      - $ref: '#/components/schemas/StreamRecord'
      - description: "The main body of the stream record, containing all of the DynamoDB-specific\
          \ fields."
      title: Record_dynamodb
    Record_userIdentity:
      allOf:
      - $ref: '#/components/schemas/Identity'
      - description: "<p>Items that are deleted by the Time to Live process after\
          \ expiration have the following fields: </p> <ul> <li> <p>Records[].userIdentity.type</p>\
          \ <p>\"Service\"</p> </li> <li> <p>Records[].userIdentity.principalId</p>\
          \ <p>\"dynamodb.amazonaws.com\"</p> </li> </ul>"
      title: Record_userIdentity
    Shard_SequenceNumberRange:
      allOf:
      - $ref: '#/components/schemas/SequenceNumberRange'
      - description: The range of possible sequence numbers for the shard.
      title: Shard_SequenceNumberRange
  securitySchemes:
    hmac:
      description: Amazon Signature authorization v4
      in: header
      name: Authorization
      type: apiKey
      x-amazon-apigateway-authtype: awsSigv4
      x-apikeyInfoFunc: openapi_server.controllers.security_controller.info_from_hmac
x-hasEquivalentPaths: true
