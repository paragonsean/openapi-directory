# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class DescribeRepositoriesRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, registry_id: str=None, repository_names: List=None, next_token: str=None, max_results: int=None):
        """DescribeRepositoriesRequest - a model defined in OpenAPI

        :param registry_id: The registry_id of this DescribeRepositoriesRequest.
        :param repository_names: The repository_names of this DescribeRepositoriesRequest.
        :param next_token: The next_token of this DescribeRepositoriesRequest.
        :param max_results: The max_results of this DescribeRepositoriesRequest.
        """
        self.openapi_types = {
            'registry_id': str,
            'repository_names': List,
            'next_token': str,
            'max_results': int
        }

        self.attribute_map = {
            'registry_id': 'registryId',
            'repository_names': 'repositoryNames',
            'next_token': 'nextToken',
            'max_results': 'maxResults'
        }

        self._registry_id = registry_id
        self._repository_names = repository_names
        self._next_token = next_token
        self._max_results = max_results

    @classmethod
    def from_dict(cls, dikt: dict) -> 'DescribeRepositoriesRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The DescribeRepositoriesRequest of this DescribeRepositoriesRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def registry_id(self):
        """Gets the registry_id of this DescribeRepositoriesRequest.


        :return: The registry_id of this DescribeRepositoriesRequest.
        :rtype: str
        """
        return self._registry_id

    @registry_id.setter
    def registry_id(self, registry_id):
        """Sets the registry_id of this DescribeRepositoriesRequest.


        :param registry_id: The registry_id of this DescribeRepositoriesRequest.
        :type registry_id: str
        """

        self._registry_id = registry_id

    @property
    def repository_names(self):
        """Gets the repository_names of this DescribeRepositoriesRequest.


        :return: The repository_names of this DescribeRepositoriesRequest.
        :rtype: List
        """
        return self._repository_names

    @repository_names.setter
    def repository_names(self, repository_names):
        """Sets the repository_names of this DescribeRepositoriesRequest.


        :param repository_names: The repository_names of this DescribeRepositoriesRequest.
        :type repository_names: List
        """

        self._repository_names = repository_names

    @property
    def next_token(self):
        """Gets the next_token of this DescribeRepositoriesRequest.


        :return: The next_token of this DescribeRepositoriesRequest.
        :rtype: str
        """
        return self._next_token

    @next_token.setter
    def next_token(self, next_token):
        """Sets the next_token of this DescribeRepositoriesRequest.


        :param next_token: The next_token of this DescribeRepositoriesRequest.
        :type next_token: str
        """

        self._next_token = next_token

    @property
    def max_results(self):
        """Gets the max_results of this DescribeRepositoriesRequest.


        :return: The max_results of this DescribeRepositoriesRequest.
        :rtype: int
        """
        return self._max_results

    @max_results.setter
    def max_results(self, max_results):
        """Sets the max_results of this DescribeRepositoriesRequest.


        :param max_results: The max_results of this DescribeRepositoriesRequest.
        :type max_results: int
        """

        self._max_results = max_results
