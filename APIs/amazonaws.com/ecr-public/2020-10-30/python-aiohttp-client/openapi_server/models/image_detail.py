# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class ImageDetail(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, registry_id: str=None, repository_name: str=None, image_digest: str=None, image_tags: List=None, image_size_in_bytes: int=None, image_pushed_at: datetime=None, image_manifest_media_type: str=None, artifact_media_type: str=None):
        """ImageDetail - a model defined in OpenAPI

        :param registry_id: The registry_id of this ImageDetail.
        :param repository_name: The repository_name of this ImageDetail.
        :param image_digest: The image_digest of this ImageDetail.
        :param image_tags: The image_tags of this ImageDetail.
        :param image_size_in_bytes: The image_size_in_bytes of this ImageDetail.
        :param image_pushed_at: The image_pushed_at of this ImageDetail.
        :param image_manifest_media_type: The image_manifest_media_type of this ImageDetail.
        :param artifact_media_type: The artifact_media_type of this ImageDetail.
        """
        self.openapi_types = {
            'registry_id': str,
            'repository_name': str,
            'image_digest': str,
            'image_tags': List,
            'image_size_in_bytes': int,
            'image_pushed_at': datetime,
            'image_manifest_media_type': str,
            'artifact_media_type': str
        }

        self.attribute_map = {
            'registry_id': 'registryId',
            'repository_name': 'repositoryName',
            'image_digest': 'imageDigest',
            'image_tags': 'imageTags',
            'image_size_in_bytes': 'imageSizeInBytes',
            'image_pushed_at': 'imagePushedAt',
            'image_manifest_media_type': 'imageManifestMediaType',
            'artifact_media_type': 'artifactMediaType'
        }

        self._registry_id = registry_id
        self._repository_name = repository_name
        self._image_digest = image_digest
        self._image_tags = image_tags
        self._image_size_in_bytes = image_size_in_bytes
        self._image_pushed_at = image_pushed_at
        self._image_manifest_media_type = image_manifest_media_type
        self._artifact_media_type = artifact_media_type

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ImageDetail':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ImageDetail of this ImageDetail.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def registry_id(self):
        """Gets the registry_id of this ImageDetail.


        :return: The registry_id of this ImageDetail.
        :rtype: str
        """
        return self._registry_id

    @registry_id.setter
    def registry_id(self, registry_id):
        """Sets the registry_id of this ImageDetail.


        :param registry_id: The registry_id of this ImageDetail.
        :type registry_id: str
        """

        self._registry_id = registry_id

    @property
    def repository_name(self):
        """Gets the repository_name of this ImageDetail.


        :return: The repository_name of this ImageDetail.
        :rtype: str
        """
        return self._repository_name

    @repository_name.setter
    def repository_name(self, repository_name):
        """Sets the repository_name of this ImageDetail.


        :param repository_name: The repository_name of this ImageDetail.
        :type repository_name: str
        """

        self._repository_name = repository_name

    @property
    def image_digest(self):
        """Gets the image_digest of this ImageDetail.


        :return: The image_digest of this ImageDetail.
        :rtype: str
        """
        return self._image_digest

    @image_digest.setter
    def image_digest(self, image_digest):
        """Sets the image_digest of this ImageDetail.


        :param image_digest: The image_digest of this ImageDetail.
        :type image_digest: str
        """

        self._image_digest = image_digest

    @property
    def image_tags(self):
        """Gets the image_tags of this ImageDetail.


        :return: The image_tags of this ImageDetail.
        :rtype: List
        """
        return self._image_tags

    @image_tags.setter
    def image_tags(self, image_tags):
        """Sets the image_tags of this ImageDetail.


        :param image_tags: The image_tags of this ImageDetail.
        :type image_tags: List
        """

        self._image_tags = image_tags

    @property
    def image_size_in_bytes(self):
        """Gets the image_size_in_bytes of this ImageDetail.


        :return: The image_size_in_bytes of this ImageDetail.
        :rtype: int
        """
        return self._image_size_in_bytes

    @image_size_in_bytes.setter
    def image_size_in_bytes(self, image_size_in_bytes):
        """Sets the image_size_in_bytes of this ImageDetail.


        :param image_size_in_bytes: The image_size_in_bytes of this ImageDetail.
        :type image_size_in_bytes: int
        """

        self._image_size_in_bytes = image_size_in_bytes

    @property
    def image_pushed_at(self):
        """Gets the image_pushed_at of this ImageDetail.


        :return: The image_pushed_at of this ImageDetail.
        :rtype: datetime
        """
        return self._image_pushed_at

    @image_pushed_at.setter
    def image_pushed_at(self, image_pushed_at):
        """Sets the image_pushed_at of this ImageDetail.


        :param image_pushed_at: The image_pushed_at of this ImageDetail.
        :type image_pushed_at: datetime
        """

        self._image_pushed_at = image_pushed_at

    @property
    def image_manifest_media_type(self):
        """Gets the image_manifest_media_type of this ImageDetail.


        :return: The image_manifest_media_type of this ImageDetail.
        :rtype: str
        """
        return self._image_manifest_media_type

    @image_manifest_media_type.setter
    def image_manifest_media_type(self, image_manifest_media_type):
        """Sets the image_manifest_media_type of this ImageDetail.


        :param image_manifest_media_type: The image_manifest_media_type of this ImageDetail.
        :type image_manifest_media_type: str
        """

        self._image_manifest_media_type = image_manifest_media_type

    @property
    def artifact_media_type(self):
        """Gets the artifact_media_type of this ImageDetail.


        :return: The artifact_media_type of this ImageDetail.
        :rtype: str
        """
        return self._artifact_media_type

    @artifact_media_type.setter
    def artifact_media_type(self, artifact_media_type):
        """Sets the artifact_media_type of this ImageDetail.


        :param artifact_media_type: The artifact_media_type of this ImageDetail.
        :type artifact_media_type: str
        """

        self._artifact_media_type = artifact_media_type
