/**
 * Amazon Elastic Container Registry Public
 * <fullname>Amazon Elastic Container Registry Public</fullname> <p>Amazon Elastic Container Registry Public (Amazon ECR Public) is a managed container image registry service. Amazon ECR provides both public and private registries to host your container images. You can use the Docker CLI or your preferred client to push, pull, and manage images. Amazon ECR provides a secure, scalable, and reliable registry for your Docker or Open Container Initiative (OCI) images. Amazon ECR supports public repositories with this API. For information about the Amazon ECR API for private repositories, see <a href=\"https://docs.aws.amazon.com/AmazonECR/latest/APIReference/Welcome.html\">Amazon Elastic Container Registry API Reference</a>.</p>
 *
 * The version of the OpenAPI document: 2020-10-30
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIImage_imageId.h
 *
 * 
 */

#ifndef OAIImage_imageId_H
#define OAIImage_imageId_H

#include <QJsonObject>

#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIImage_imageId : public OAIObject {
public:
    OAIImage_imageId();
    OAIImage_imageId(QString json);
    ~OAIImage_imageId() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getImageDigest() const;
    void setImageDigest(const QString &image_digest);
    bool is_image_digest_Set() const;
    bool is_image_digest_Valid() const;

    QString getImageTag() const;
    void setImageTag(const QString &image_tag);
    bool is_image_tag_Set() const;
    bool is_image_tag_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_image_digest;
    bool m_image_digest_isSet;
    bool m_image_digest_isValid;

    QString m_image_tag;
    bool m_image_tag_isSet;
    bool m_image_tag_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIImage_imageId)

#endif // OAIImage_imageId_H
