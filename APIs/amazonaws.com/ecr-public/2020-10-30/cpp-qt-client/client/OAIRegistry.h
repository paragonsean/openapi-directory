/**
 * Amazon Elastic Container Registry Public
 * <fullname>Amazon Elastic Container Registry Public</fullname> <p>Amazon Elastic Container Registry Public (Amazon ECR Public) is a managed container image registry service. Amazon ECR provides both public and private registries to host your container images. You can use the Docker CLI or your preferred client to push, pull, and manage images. Amazon ECR provides a secure, scalable, and reliable registry for your Docker or Open Container Initiative (OCI) images. Amazon ECR supports public repositories with this API. For information about the Amazon ECR API for private repositories, see <a href=\"https://docs.aws.amazon.com/AmazonECR/latest/APIReference/Welcome.html\">Amazon Elastic Container Registry API Reference</a>.</p>
 *
 * The version of the OpenAPI document: 2020-10-30
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIRegistry.h
 *
 * The details of a public registry.
 */

#ifndef OAIRegistry_H
#define OAIRegistry_H

#include <QJsonObject>

#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIRegistry : public OAIObject {
public:
    OAIRegistry();
    OAIRegistry(QString json);
    ~OAIRegistry() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getRegistryId() const;
    void setRegistryId(const QString &registry_id);
    bool is_registry_id_Set() const;
    bool is_registry_id_Valid() const;

    QString getRegistryArn() const;
    void setRegistryArn(const QString &registry_arn);
    bool is_registry_arn_Set() const;
    bool is_registry_arn_Valid() const;

    QString getRegistryUri() const;
    void setRegistryUri(const QString &registry_uri);
    bool is_registry_uri_Set() const;
    bool is_registry_uri_Valid() const;

    bool getVerified() const;
    void setVerified(const bool &verified);
    bool is_verified_Set() const;
    bool is_verified_Valid() const;

    QList getAliases() const;
    void setAliases(const QList &aliases);
    bool is_aliases_Set() const;
    bool is_aliases_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_registry_id;
    bool m_registry_id_isSet;
    bool m_registry_id_isValid;

    QString m_registry_arn;
    bool m_registry_arn_isSet;
    bool m_registry_arn_isValid;

    QString m_registry_uri;
    bool m_registry_uri_isSet;
    bool m_registry_uri_isValid;

    bool m_verified;
    bool m_verified_isSet;
    bool m_verified_isValid;

    QList m_aliases;
    bool m_aliases_isSet;
    bool m_aliases_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIRegistry)

#endif // OAIRegistry_H
