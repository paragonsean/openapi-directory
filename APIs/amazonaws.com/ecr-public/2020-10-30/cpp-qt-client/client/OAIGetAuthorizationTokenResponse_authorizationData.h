/**
 * Amazon Elastic Container Registry Public
 * <fullname>Amazon Elastic Container Registry Public</fullname> <p>Amazon Elastic Container Registry Public (Amazon ECR Public) is a managed container image registry service. Amazon ECR provides both public and private registries to host your container images. You can use the Docker CLI or your preferred client to push, pull, and manage images. Amazon ECR provides a secure, scalable, and reliable registry for your Docker or Open Container Initiative (OCI) images. Amazon ECR supports public repositories with this API. For information about the Amazon ECR API for private repositories, see <a href=\"https://docs.aws.amazon.com/AmazonECR/latest/APIReference/Welcome.html\">Amazon Elastic Container Registry API Reference</a>.</p>
 *
 * The version of the OpenAPI document: 2020-10-30
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIGetAuthorizationTokenResponse_authorizationData.h
 *
 * 
 */

#ifndef OAIGetAuthorizationTokenResponse_authorizationData_H
#define OAIGetAuthorizationTokenResponse_authorizationData_H

#include <QJsonObject>

#include <QDateTime>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIGetAuthorizationTokenResponse_authorizationData : public OAIObject {
public:
    OAIGetAuthorizationTokenResponse_authorizationData();
    OAIGetAuthorizationTokenResponse_authorizationData(QString json);
    ~OAIGetAuthorizationTokenResponse_authorizationData() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getAuthorizationToken() const;
    void setAuthorizationToken(const QString &authorization_token);
    bool is_authorization_token_Set() const;
    bool is_authorization_token_Valid() const;

    QDateTime getExpiresAt() const;
    void setExpiresAt(const QDateTime &expires_at);
    bool is_expires_at_Set() const;
    bool is_expires_at_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_authorization_token;
    bool m_authorization_token_isSet;
    bool m_authorization_token_isValid;

    QDateTime m_expires_at;
    bool m_expires_at_isSet;
    bool m_expires_at_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIGetAuthorizationTokenResponse_authorizationData)

#endif // OAIGetAuthorizationTokenResponse_authorizationData_H
