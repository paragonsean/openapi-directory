/**
 * Amazon Elastic Container Registry Public
 * <fullname>Amazon Elastic Container Registry Public</fullname> <p>Amazon Elastic Container Registry Public (Amazon ECR Public) is a managed container image registry service. Amazon ECR provides both public and private registries to host your container images. You can use the Docker CLI or your preferred client to push, pull, and manage images. Amazon ECR provides a secure, scalable, and reliable registry for your Docker or Open Container Initiative (OCI) images. Amazon ECR supports public repositories with this API. For information about the Amazon ECR API for private repositories, see <a href=\"https://docs.aws.amazon.com/AmazonECR/latest/APIReference/Welcome.html\">Amazon Elastic Container Registry API Reference</a>.</p>
 *
 * The version of the OpenAPI document: 2020-10-30
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAICreateRepositoryResponse.h
 *
 * 
 */

#ifndef OAICreateRepositoryResponse_H
#define OAICreateRepositoryResponse_H

#include <QJsonObject>

#include "OAICreateRepositoryResponse_repository.h"
#include "OAIRepositoryCatalogData.h"

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAICreateRepositoryResponse_repository;
class OAIRepositoryCatalogData;

class OAICreateRepositoryResponse : public OAIObject {
public:
    OAICreateRepositoryResponse();
    OAICreateRepositoryResponse(QString json);
    ~OAICreateRepositoryResponse() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAICreateRepositoryResponse_repository getRepository() const;
    void setRepository(const OAICreateRepositoryResponse_repository &repository);
    bool is_repository_Set() const;
    bool is_repository_Valid() const;

    OAIRepositoryCatalogData getCatalogData() const;
    void setCatalogData(const OAIRepositoryCatalogData &catalog_data);
    bool is_catalog_data_Set() const;
    bool is_catalog_data_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAICreateRepositoryResponse_repository m_repository;
    bool m_repository_isSet;
    bool m_repository_isValid;

    OAIRepositoryCatalogData m_catalog_data;
    bool m_catalog_data_isSet;
    bool m_catalog_data_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAICreateRepositoryResponse)

#endif // OAICreateRepositoryResponse_H
