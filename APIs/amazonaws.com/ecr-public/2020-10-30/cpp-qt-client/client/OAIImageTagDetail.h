/**
 * Amazon Elastic Container Registry Public
 * <fullname>Amazon Elastic Container Registry Public</fullname> <p>Amazon Elastic Container Registry Public (Amazon ECR Public) is a managed container image registry service. Amazon ECR provides both public and private registries to host your container images. You can use the Docker CLI or your preferred client to push, pull, and manage images. Amazon ECR provides a secure, scalable, and reliable registry for your Docker or Open Container Initiative (OCI) images. Amazon ECR supports public repositories with this API. For information about the Amazon ECR API for private repositories, see <a href=\"https://docs.aws.amazon.com/AmazonECR/latest/APIReference/Welcome.html\">Amazon Elastic Container Registry API Reference</a>.</p>
 *
 * The version of the OpenAPI document: 2020-10-30
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIImageTagDetail.h
 *
 * An object that represents the image tag details for an image.
 */

#ifndef OAIImageTagDetail_H
#define OAIImageTagDetail_H

#include <QJsonObject>

#include "OAIImageTagDetail_imageDetail.h"
#include <QDateTime>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIImageTagDetail_imageDetail;

class OAIImageTagDetail : public OAIObject {
public:
    OAIImageTagDetail();
    OAIImageTagDetail(QString json);
    ~OAIImageTagDetail() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getImageTag() const;
    void setImageTag(const QString &image_tag);
    bool is_image_tag_Set() const;
    bool is_image_tag_Valid() const;

    QDateTime getCreatedAt() const;
    void setCreatedAt(const QDateTime &created_at);
    bool is_created_at_Set() const;
    bool is_created_at_Valid() const;

    OAIImageTagDetail_imageDetail getImageDetail() const;
    void setImageDetail(const OAIImageTagDetail_imageDetail &image_detail);
    bool is_image_detail_Set() const;
    bool is_image_detail_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_image_tag;
    bool m_image_tag_isSet;
    bool m_image_tag_isValid;

    QDateTime m_created_at;
    bool m_created_at_isSet;
    bool m_created_at_isValid;

    OAIImageTagDetail_imageDetail m_image_detail;
    bool m_image_detail_isSet;
    bool m_image_detail_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIImageTagDetail)

#endif // OAIImageTagDetail_H
