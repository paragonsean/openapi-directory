/**
 * Amazon Elastic Container Registry Public
 * <fullname>Amazon Elastic Container Registry Public</fullname> <p>Amazon Elastic Container Registry Public (Amazon ECR Public) is a managed container image registry service. Amazon ECR provides both public and private registries to host your container images. You can use the Docker CLI or your preferred client to push, pull, and manage images. Amazon ECR provides a secure, scalable, and reliable registry for your Docker or Open Container Initiative (OCI) images. Amazon ECR supports public repositories with this API. For information about the Amazon ECR API for private repositories, see <a href=\"https://docs.aws.amazon.com/AmazonECR/latest/APIReference/Welcome.html\">Amazon Elastic Container Registry API Reference</a>.</p>
 *
 * The version of the OpenAPI document: 2020-10-30
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import PutImageResponseImage from './PutImageResponseImage';

/**
 * The PutImageResponse model module.
 * @module model/PutImageResponse
 * @version 2020-10-30
 */
class PutImageResponse {
    /**
     * Constructs a new <code>PutImageResponse</code>.
     * @alias module:model/PutImageResponse
     */
    constructor() { 
        
        PutImageResponse.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>PutImageResponse</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/PutImageResponse} obj Optional instance to populate.
     * @return {module:model/PutImageResponse} The populated <code>PutImageResponse</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new PutImageResponse();

            if (data.hasOwnProperty('image')) {
                obj['image'] = PutImageResponseImage.constructFromObject(data['image']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>PutImageResponse</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>PutImageResponse</code>.
     */
    static validateJSON(data) {
        // validate the optional field `image`
        if (data['image']) { // data not null
          PutImageResponseImage.validateJSON(data['image']);
        }

        return true;
    }


}



/**
 * @member {module:model/PutImageResponseImage} image
 */
PutImageResponse.prototype['image'] = undefined;






export default PutImageResponse;

