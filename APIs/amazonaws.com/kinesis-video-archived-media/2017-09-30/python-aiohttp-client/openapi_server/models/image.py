# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.image_error import ImageError
from openapi_server import util


class Image(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, time_stamp: datetime=None, error: ImageError=None, image_content: str=None):
        """Image - a model defined in OpenAPI

        :param time_stamp: The time_stamp of this Image.
        :param error: The error of this Image.
        :param image_content: The image_content of this Image.
        """
        self.openapi_types = {
            'time_stamp': datetime,
            'error': ImageError,
            'image_content': str
        }

        self.attribute_map = {
            'time_stamp': 'TimeStamp',
            'error': 'Error',
            'image_content': 'ImageContent'
        }

        self._time_stamp = time_stamp
        self._error = error
        self._image_content = image_content

    @classmethod
    def from_dict(cls, dikt: dict) -> 'Image':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Image of this Image.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def time_stamp(self):
        """Gets the time_stamp of this Image.


        :return: The time_stamp of this Image.
        :rtype: datetime
        """
        return self._time_stamp

    @time_stamp.setter
    def time_stamp(self, time_stamp):
        """Sets the time_stamp of this Image.


        :param time_stamp: The time_stamp of this Image.
        :type time_stamp: datetime
        """

        self._time_stamp = time_stamp

    @property
    def error(self):
        """Gets the error of this Image.


        :return: The error of this Image.
        :rtype: ImageError
        """
        return self._error

    @error.setter
    def error(self, error):
        """Sets the error of this Image.


        :param error: The error of this Image.
        :type error: ImageError
        """

        self._error = error

    @property
    def image_content(self):
        """Gets the image_content of this Image.


        :return: The image_content of this Image.
        :rtype: str
        """
        return self._image_content

    @image_content.setter
    def image_content(self, image_content):
        """Sets the image_content of this Image.


        :param image_content: The image_content of this Image.
        :type image_content: str
        """

        self._image_content = image_content
