# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class GetMediaForFragmentListOutput(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, payload: str=None):
        """GetMediaForFragmentListOutput - a model defined in OpenAPI

        :param payload: The payload of this GetMediaForFragmentListOutput.
        """
        self.openapi_types = {
            'payload': str
        }

        self.attribute_map = {
            'payload': 'Payload'
        }

        self._payload = payload

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GetMediaForFragmentListOutput':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The GetMediaForFragmentListOutput of this GetMediaForFragmentListOutput.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def payload(self):
        """Gets the payload of this GetMediaForFragmentListOutput.


        :return: The payload of this GetMediaForFragmentListOutput.
        :rtype: str
        """
        return self._payload

    @payload.setter
    def payload(self, payload):
        """Sets the payload of this GetMediaForFragmentListOutput.


        :param payload: The payload of this GetMediaForFragmentListOutput.
        :type payload: str
        """

        self._payload = payload
