/**
 * Amazon Kinesis Video Streams Archived Media
 * <p/>
 *
 * The version of the OpenAPI document: 2017-09-30
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import ClipFragmentSelectorType from './ClipFragmentSelectorType';
import GetClipRequestClipFragmentSelectorTimestampRange from './GetClipRequestClipFragmentSelectorTimestampRange';

/**
 * The GetClipRequestClipFragmentSelector model module.
 * @module model/GetClipRequestClipFragmentSelector
 * @version 2017-09-30
 */
class GetClipRequestClipFragmentSelector {
    /**
     * Constructs a new <code>GetClipRequestClipFragmentSelector</code>.
     * &lt;p&gt;Describes the timestamp range and timestamp origin of a range of fragments.&lt;/p&gt; &lt;p&gt;Fragments that have duplicate producer timestamps are deduplicated. This means that if producers are producing a stream of fragments with producer timestamps that are approximately equal to the true clock time, the clip will contain all of the fragments within the requested timestamp range. If some fragments are ingested within the same time range and very different points in time, only the oldest ingested collection of fragments are returned.&lt;/p&gt;
     * @alias module:model/GetClipRequestClipFragmentSelector
     */
    constructor() { 
        
        GetClipRequestClipFragmentSelector.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>GetClipRequestClipFragmentSelector</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/GetClipRequestClipFragmentSelector} obj Optional instance to populate.
     * @return {module:model/GetClipRequestClipFragmentSelector} The populated <code>GetClipRequestClipFragmentSelector</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new GetClipRequestClipFragmentSelector();

            if (data.hasOwnProperty('FragmentSelectorType')) {
                obj['FragmentSelectorType'] = ApiClient.convertToType(data['FragmentSelectorType'], ClipFragmentSelectorType);
            }
            if (data.hasOwnProperty('TimestampRange')) {
                obj['TimestampRange'] = GetClipRequestClipFragmentSelectorTimestampRange.constructFromObject(data['TimestampRange']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>GetClipRequestClipFragmentSelector</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>GetClipRequestClipFragmentSelector</code>.
     */
    static validateJSON(data) {
        // validate the optional field `FragmentSelectorType`
        if (data['FragmentSelectorType']) { // data not null
          ClipFragmentSelectorType.validateJSON(data['FragmentSelectorType']);
        }
        // validate the optional field `TimestampRange`
        if (data['TimestampRange']) { // data not null
          GetClipRequestClipFragmentSelectorTimestampRange.validateJSON(data['TimestampRange']);
        }

        return true;
    }


}



/**
 * @member {module:model/ClipFragmentSelectorType} FragmentSelectorType
 */
GetClipRequestClipFragmentSelector.prototype['FragmentSelectorType'] = undefined;

/**
 * @member {module:model/GetClipRequestClipFragmentSelectorTimestampRange} TimestampRange
 */
GetClipRequestClipFragmentSelector.prototype['TimestampRange'] = undefined;






export default GetClipRequestClipFragmentSelector;

