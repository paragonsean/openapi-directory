/**
 * Amazon Kinesis Video Streams Archived Media
 * <p/>
 *
 * The version of the OpenAPI document: 2017-09-30
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import ContainerFormat from './ContainerFormat';
import GetHLSStreamingSessionURLInputHLSFragmentSelector from './GetHLSStreamingSessionURLInputHLSFragmentSelector';
import HLSDiscontinuityMode from './HLSDiscontinuityMode';
import HLSDisplayFragmentTimestamp from './HLSDisplayFragmentTimestamp';
import HLSPlaybackMode from './HLSPlaybackMode';

/**
 * The GetHLSStreamingSessionURLInput model module.
 * @module model/GetHLSStreamingSessionURLInput
 * @version 2017-09-30
 */
class GetHLSStreamingSessionURLInput {
    /**
     * Constructs a new <code>GetHLSStreamingSessionURLInput</code>.
     * @alias module:model/GetHLSStreamingSessionURLInput
     */
    constructor() { 
        
        GetHLSStreamingSessionURLInput.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>GetHLSStreamingSessionURLInput</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/GetHLSStreamingSessionURLInput} obj Optional instance to populate.
     * @return {module:model/GetHLSStreamingSessionURLInput} The populated <code>GetHLSStreamingSessionURLInput</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new GetHLSStreamingSessionURLInput();

            if (data.hasOwnProperty('StreamName')) {
                obj['StreamName'] = ApiClient.convertToType(data['StreamName'], 'String');
            }
            if (data.hasOwnProperty('StreamARN')) {
                obj['StreamARN'] = ApiClient.convertToType(data['StreamARN'], 'String');
            }
            if (data.hasOwnProperty('PlaybackMode')) {
                obj['PlaybackMode'] = ApiClient.convertToType(data['PlaybackMode'], HLSPlaybackMode);
            }
            if (data.hasOwnProperty('HLSFragmentSelector')) {
                obj['HLSFragmentSelector'] = GetHLSStreamingSessionURLInputHLSFragmentSelector.constructFromObject(data['HLSFragmentSelector']);
            }
            if (data.hasOwnProperty('ContainerFormat')) {
                obj['ContainerFormat'] = ApiClient.convertToType(data['ContainerFormat'], ContainerFormat);
            }
            if (data.hasOwnProperty('DiscontinuityMode')) {
                obj['DiscontinuityMode'] = ApiClient.convertToType(data['DiscontinuityMode'], HLSDiscontinuityMode);
            }
            if (data.hasOwnProperty('DisplayFragmentTimestamp')) {
                obj['DisplayFragmentTimestamp'] = ApiClient.convertToType(data['DisplayFragmentTimestamp'], HLSDisplayFragmentTimestamp);
            }
            if (data.hasOwnProperty('Expires')) {
                obj['Expires'] = ApiClient.convertToType(data['Expires'], 'Number');
            }
            if (data.hasOwnProperty('MaxMediaPlaylistFragmentResults')) {
                obj['MaxMediaPlaylistFragmentResults'] = ApiClient.convertToType(data['MaxMediaPlaylistFragmentResults'], 'Number');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>GetHLSStreamingSessionURLInput</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>GetHLSStreamingSessionURLInput</code>.
     */
    static validateJSON(data) {
        // validate the optional field `StreamName`
        if (data['StreamName']) { // data not null
          String.validateJSON(data['StreamName']);
        }
        // validate the optional field `StreamARN`
        if (data['StreamARN']) { // data not null
          String.validateJSON(data['StreamARN']);
        }
        // validate the optional field `PlaybackMode`
        if (data['PlaybackMode']) { // data not null
          HLSPlaybackMode.validateJSON(data['PlaybackMode']);
        }
        // validate the optional field `HLSFragmentSelector`
        if (data['HLSFragmentSelector']) { // data not null
          GetHLSStreamingSessionURLInputHLSFragmentSelector.validateJSON(data['HLSFragmentSelector']);
        }
        // validate the optional field `ContainerFormat`
        if (data['ContainerFormat']) { // data not null
          ContainerFormat.validateJSON(data['ContainerFormat']);
        }
        // validate the optional field `DiscontinuityMode`
        if (data['DiscontinuityMode']) { // data not null
          HLSDiscontinuityMode.validateJSON(data['DiscontinuityMode']);
        }
        // validate the optional field `DisplayFragmentTimestamp`
        if (data['DisplayFragmentTimestamp']) { // data not null
          HLSDisplayFragmentTimestamp.validateJSON(data['DisplayFragmentTimestamp']);
        }
        // validate the optional field `Expires`
        if (data['Expires']) { // data not null
          Number.validateJSON(data['Expires']);
        }
        // validate the optional field `MaxMediaPlaylistFragmentResults`
        if (data['MaxMediaPlaylistFragmentResults']) { // data not null
          Number.validateJSON(data['MaxMediaPlaylistFragmentResults']);
        }

        return true;
    }


}



/**
 * @member {String} StreamName
 */
GetHLSStreamingSessionURLInput.prototype['StreamName'] = undefined;

/**
 * @member {String} StreamARN
 */
GetHLSStreamingSessionURLInput.prototype['StreamARN'] = undefined;

/**
 * @member {module:model/HLSPlaybackMode} PlaybackMode
 */
GetHLSStreamingSessionURLInput.prototype['PlaybackMode'] = undefined;

/**
 * @member {module:model/GetHLSStreamingSessionURLInputHLSFragmentSelector} HLSFragmentSelector
 */
GetHLSStreamingSessionURLInput.prototype['HLSFragmentSelector'] = undefined;

/**
 * @member {module:model/ContainerFormat} ContainerFormat
 */
GetHLSStreamingSessionURLInput.prototype['ContainerFormat'] = undefined;

/**
 * @member {module:model/HLSDiscontinuityMode} DiscontinuityMode
 */
GetHLSStreamingSessionURLInput.prototype['DiscontinuityMode'] = undefined;

/**
 * @member {module:model/HLSDisplayFragmentTimestamp} DisplayFragmentTimestamp
 */
GetHLSStreamingSessionURLInput.prototype['DisplayFragmentTimestamp'] = undefined;

/**
 * @member {Number} Expires
 */
GetHLSStreamingSessionURLInput.prototype['Expires'] = undefined;

/**
 * @member {Number} MaxMediaPlaylistFragmentResults
 */
GetHLSStreamingSessionURLInput.prototype['MaxMediaPlaylistFragmentResults'] = undefined;






export default GetHLSStreamingSessionURLInput;

