/**
 * Amazon Kinesis Video Streams Archived Media
 * <p/>
 *
 * The version of the OpenAPI document: 2017-09-30
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The Fragment model module.
 * @module model/Fragment
 * @version 2017-09-30
 */
class Fragment {
    /**
     * Constructs a new <code>Fragment</code>.
     * Represents a segment of video or other time-delimited data.
     * @alias module:model/Fragment
     */
    constructor() { 
        
        Fragment.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>Fragment</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/Fragment} obj Optional instance to populate.
     * @return {module:model/Fragment} The populated <code>Fragment</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new Fragment();

            if (data.hasOwnProperty('FragmentNumber')) {
                obj['FragmentNumber'] = ApiClient.convertToType(data['FragmentNumber'], 'String');
            }
            if (data.hasOwnProperty('FragmentSizeInBytes')) {
                obj['FragmentSizeInBytes'] = ApiClient.convertToType(data['FragmentSizeInBytes'], 'Number');
            }
            if (data.hasOwnProperty('ProducerTimestamp')) {
                obj['ProducerTimestamp'] = ApiClient.convertToType(data['ProducerTimestamp'], 'Date');
            }
            if (data.hasOwnProperty('ServerTimestamp')) {
                obj['ServerTimestamp'] = ApiClient.convertToType(data['ServerTimestamp'], 'Date');
            }
            if (data.hasOwnProperty('FragmentLengthInMilliseconds')) {
                obj['FragmentLengthInMilliseconds'] = ApiClient.convertToType(data['FragmentLengthInMilliseconds'], 'Number');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>Fragment</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>Fragment</code>.
     */
    static validateJSON(data) {
        // validate the optional field `FragmentNumber`
        if (data['FragmentNumber']) { // data not null
          String.validateJSON(data['FragmentNumber']);
        }
        // validate the optional field `FragmentSizeInBytes`
        if (data['FragmentSizeInBytes']) { // data not null
          Number.validateJSON(data['FragmentSizeInBytes']);
        }
        // validate the optional field `ProducerTimestamp`
        if (data['ProducerTimestamp']) { // data not null
          Date.validateJSON(data['ProducerTimestamp']);
        }
        // validate the optional field `ServerTimestamp`
        if (data['ServerTimestamp']) { // data not null
          Date.validateJSON(data['ServerTimestamp']);
        }
        // validate the optional field `FragmentLengthInMilliseconds`
        if (data['FragmentLengthInMilliseconds']) { // data not null
          Number.validateJSON(data['FragmentLengthInMilliseconds']);
        }

        return true;
    }


}



/**
 * @member {String} FragmentNumber
 */
Fragment.prototype['FragmentNumber'] = undefined;

/**
 * @member {Number} FragmentSizeInBytes
 */
Fragment.prototype['FragmentSizeInBytes'] = undefined;

/**
 * @member {Date} ProducerTimestamp
 */
Fragment.prototype['ProducerTimestamp'] = undefined;

/**
 * @member {Date} ServerTimestamp
 */
Fragment.prototype['ServerTimestamp'] = undefined;

/**
 * @member {Number} FragmentLengthInMilliseconds
 */
Fragment.prototype['FragmentLengthInMilliseconds'] = undefined;






export default Fragment;

