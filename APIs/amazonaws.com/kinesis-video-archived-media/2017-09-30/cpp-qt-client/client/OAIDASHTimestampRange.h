/**
 * Amazon Kinesis Video Streams Archived Media
 * <p/>
 *
 * The version of the OpenAPI document: 2017-09-30
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIDASHTimestampRange.h
 *
 * &lt;p&gt;The start and end of the timestamp range for the requested media.&lt;/p&gt; &lt;p&gt;This value should not be present if &lt;code&gt;PlaybackType&lt;/code&gt; is &lt;code&gt;LIVE&lt;/code&gt;.&lt;/p&gt; &lt;p&gt;The values in &lt;code&gt;DASHimestampRange&lt;/code&gt; are inclusive. Fragments that start exactly at or after the start time are included in the session. Fragments that start before the start time and continue past it are not included in the session.&lt;/p&gt;
 */

#ifndef OAIDASHTimestampRange_H
#define OAIDASHTimestampRange_H

#include <QJsonObject>

#include <QDateTime>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIDASHTimestampRange : public OAIObject {
public:
    OAIDASHTimestampRange();
    OAIDASHTimestampRange(QString json);
    ~OAIDASHTimestampRange() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QDateTime getStartTimestamp() const;
    void setStartTimestamp(const QDateTime &start_timestamp);
    bool is_start_timestamp_Set() const;
    bool is_start_timestamp_Valid() const;

    QDateTime getEndTimestamp() const;
    void setEndTimestamp(const QDateTime &end_timestamp);
    bool is_end_timestamp_Set() const;
    bool is_end_timestamp_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QDateTime m_start_timestamp;
    bool m_start_timestamp_isSet;
    bool m_start_timestamp_isValid;

    QDateTime m_end_timestamp;
    bool m_end_timestamp_isSet;
    bool m_end_timestamp_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIDASHTimestampRange)

#endif // OAIDASHTimestampRange_H
