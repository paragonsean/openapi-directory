/**
 * Amazon Kinesis Video Streams Archived Media
 * <p/>
 *
 * The version of the OpenAPI document: 2017-09-30
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIFragment.h
 *
 * Represents a segment of video or other time-delimited data.
 */

#ifndef OAIFragment_H
#define OAIFragment_H

#include <QJsonObject>

#include <QDateTime>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIFragment : public OAIObject {
public:
    OAIFragment();
    OAIFragment(QString json);
    ~OAIFragment() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getFragmentNumber() const;
    void setFragmentNumber(const QString &fragment_number);
    bool is_fragment_number_Set() const;
    bool is_fragment_number_Valid() const;

    qint32 getFragmentSizeInBytes() const;
    void setFragmentSizeInBytes(const qint32 &fragment_size_in_bytes);
    bool is_fragment_size_in_bytes_Set() const;
    bool is_fragment_size_in_bytes_Valid() const;

    QDateTime getProducerTimestamp() const;
    void setProducerTimestamp(const QDateTime &producer_timestamp);
    bool is_producer_timestamp_Set() const;
    bool is_producer_timestamp_Valid() const;

    QDateTime getServerTimestamp() const;
    void setServerTimestamp(const QDateTime &server_timestamp);
    bool is_server_timestamp_Set() const;
    bool is_server_timestamp_Valid() const;

    qint32 getFragmentLengthInMilliseconds() const;
    void setFragmentLengthInMilliseconds(const qint32 &fragment_length_in_milliseconds);
    bool is_fragment_length_in_milliseconds_Set() const;
    bool is_fragment_length_in_milliseconds_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_fragment_number;
    bool m_fragment_number_isSet;
    bool m_fragment_number_isValid;

    qint32 m_fragment_size_in_bytes;
    bool m_fragment_size_in_bytes_isSet;
    bool m_fragment_size_in_bytes_isValid;

    QDateTime m_producer_timestamp;
    bool m_producer_timestamp_isSet;
    bool m_producer_timestamp_isValid;

    QDateTime m_server_timestamp;
    bool m_server_timestamp_isSet;
    bool m_server_timestamp_isValid;

    qint32 m_fragment_length_in_milliseconds;
    bool m_fragment_length_in_milliseconds_isSet;
    bool m_fragment_length_in_milliseconds_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIFragment)

#endif // OAIFragment_H
