/**
 * Amazon Kinesis Video Streams Archived Media
 * <p/>
 *
 * The version of the OpenAPI document: 2017-09-30
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIGetClip_request_ClipFragmentSelector.h
 *
 * &lt;p&gt;Describes the timestamp range and timestamp origin of a range of fragments.&lt;/p&gt; &lt;p&gt;Fragments that have duplicate producer timestamps are deduplicated. This means that if producers are producing a stream of fragments with producer timestamps that are approximately equal to the true clock time, the clip will contain all of the fragments within the requested timestamp range. If some fragments are ingested within the same time range and very different points in time, only the oldest ingested collection of fragments are returned.&lt;/p&gt;
 */

#ifndef OAIGetClip_request_ClipFragmentSelector_H
#define OAIGetClip_request_ClipFragmentSelector_H

#include <QJsonObject>

#include "OAIClipFragmentSelectorType.h"
#include "OAIGetClip_request_ClipFragmentSelector_TimestampRange.h"

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIGetClip_request_ClipFragmentSelector_TimestampRange;

class OAIGetClip_request_ClipFragmentSelector : public OAIObject {
public:
    OAIGetClip_request_ClipFragmentSelector();
    OAIGetClip_request_ClipFragmentSelector(QString json);
    ~OAIGetClip_request_ClipFragmentSelector() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAIClipFragmentSelectorType getFragmentSelectorType() const;
    void setFragmentSelectorType(const OAIClipFragmentSelectorType &fragment_selector_type);
    bool is_fragment_selector_type_Set() const;
    bool is_fragment_selector_type_Valid() const;

    OAIGetClip_request_ClipFragmentSelector_TimestampRange getTimestampRange() const;
    void setTimestampRange(const OAIGetClip_request_ClipFragmentSelector_TimestampRange &timestamp_range);
    bool is_timestamp_range_Set() const;
    bool is_timestamp_range_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAIClipFragmentSelectorType m_fragment_selector_type;
    bool m_fragment_selector_type_isSet;
    bool m_fragment_selector_type_isValid;

    OAIGetClip_request_ClipFragmentSelector_TimestampRange m_timestamp_range;
    bool m_timestamp_range_isSet;
    bool m_timestamp_range_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIGetClip_request_ClipFragmentSelector)

#endif // OAIGetClip_request_ClipFragmentSelector_H
