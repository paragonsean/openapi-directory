/**
 * Amazon Kinesis Video Streams Archived Media
 * <p/>
 *
 * The version of the OpenAPI document: 2017-09-30
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIGetHLSStreamingSessionURLInput.h
 *
 * 
 */

#ifndef OAIGetHLSStreamingSessionURLInput_H
#define OAIGetHLSStreamingSessionURLInput_H

#include <QJsonObject>

#include "OAIContainerFormat.h"
#include "OAIGetHLSStreamingSessionURLInput_HLSFragmentSelector.h"
#include "OAIHLSDiscontinuityMode.h"
#include "OAIHLSDisplayFragmentTimestamp.h"
#include "OAIHLSPlaybackMode.h"
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIGetHLSStreamingSessionURLInput_HLSFragmentSelector;

class OAIGetHLSStreamingSessionURLInput : public OAIObject {
public:
    OAIGetHLSStreamingSessionURLInput();
    OAIGetHLSStreamingSessionURLInput(QString json);
    ~OAIGetHLSStreamingSessionURLInput() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getStreamName() const;
    void setStreamName(const QString &stream_name);
    bool is_stream_name_Set() const;
    bool is_stream_name_Valid() const;

    QString getStreamArn() const;
    void setStreamArn(const QString &stream_arn);
    bool is_stream_arn_Set() const;
    bool is_stream_arn_Valid() const;

    OAIHLSPlaybackMode getPlaybackMode() const;
    void setPlaybackMode(const OAIHLSPlaybackMode &playback_mode);
    bool is_playback_mode_Set() const;
    bool is_playback_mode_Valid() const;

    OAIGetHLSStreamingSessionURLInput_HLSFragmentSelector getHlsFragmentSelector() const;
    void setHlsFragmentSelector(const OAIGetHLSStreamingSessionURLInput_HLSFragmentSelector &hls_fragment_selector);
    bool is_hls_fragment_selector_Set() const;
    bool is_hls_fragment_selector_Valid() const;

    OAIContainerFormat getContainerFormat() const;
    void setContainerFormat(const OAIContainerFormat &container_format);
    bool is_container_format_Set() const;
    bool is_container_format_Valid() const;

    OAIHLSDiscontinuityMode getDiscontinuityMode() const;
    void setDiscontinuityMode(const OAIHLSDiscontinuityMode &discontinuity_mode);
    bool is_discontinuity_mode_Set() const;
    bool is_discontinuity_mode_Valid() const;

    OAIHLSDisplayFragmentTimestamp getDisplayFragmentTimestamp() const;
    void setDisplayFragmentTimestamp(const OAIHLSDisplayFragmentTimestamp &display_fragment_timestamp);
    bool is_display_fragment_timestamp_Set() const;
    bool is_display_fragment_timestamp_Valid() const;

    qint32 getExpires() const;
    void setExpires(const qint32 &expires);
    bool is_expires_Set() const;
    bool is_expires_Valid() const;

    qint32 getMaxMediaPlaylistFragmentResults() const;
    void setMaxMediaPlaylistFragmentResults(const qint32 &max_media_playlist_fragment_results);
    bool is_max_media_playlist_fragment_results_Set() const;
    bool is_max_media_playlist_fragment_results_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_stream_name;
    bool m_stream_name_isSet;
    bool m_stream_name_isValid;

    QString m_stream_arn;
    bool m_stream_arn_isSet;
    bool m_stream_arn_isValid;

    OAIHLSPlaybackMode m_playback_mode;
    bool m_playback_mode_isSet;
    bool m_playback_mode_isValid;

    OAIGetHLSStreamingSessionURLInput_HLSFragmentSelector m_hls_fragment_selector;
    bool m_hls_fragment_selector_isSet;
    bool m_hls_fragment_selector_isValid;

    OAIContainerFormat m_container_format;
    bool m_container_format_isSet;
    bool m_container_format_isValid;

    OAIHLSDiscontinuityMode m_discontinuity_mode;
    bool m_discontinuity_mode_isSet;
    bool m_discontinuity_mode_isValid;

    OAIHLSDisplayFragmentTimestamp m_display_fragment_timestamp;
    bool m_display_fragment_timestamp_isSet;
    bool m_display_fragment_timestamp_isValid;

    qint32 m_expires;
    bool m_expires_isSet;
    bool m_expires_isValid;

    qint32 m_max_media_playlist_fragment_results;
    bool m_max_media_playlist_fragment_results_isSet;
    bool m_max_media_playlist_fragment_results_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIGetHLSStreamingSessionURLInput)

#endif // OAIGetHLSStreamingSessionURLInput_H
