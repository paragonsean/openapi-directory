/**
 * Amazon Kinesis Video Streams Archived Media
 * <p/>
 *
 * The version of the OpenAPI document: 2017-09-30
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIGetDASHStreamingSessionURL_request.h
 *
 * 
 */

#ifndef OAIGetDASHStreamingSessionURL_request_H
#define OAIGetDASHStreamingSessionURL_request_H

#include <QJsonObject>

#include "OAIGetDASHStreamingSessionURL_request_DASHFragmentSelector.h"
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIGetDASHStreamingSessionURL_request_DASHFragmentSelector;

class OAIGetDASHStreamingSessionURL_request : public OAIObject {
public:
    OAIGetDASHStreamingSessionURL_request();
    OAIGetDASHStreamingSessionURL_request(QString json);
    ~OAIGetDASHStreamingSessionURL_request() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getStreamName() const;
    void setStreamName(const QString &stream_name);
    bool is_stream_name_Set() const;
    bool is_stream_name_Valid() const;

    QString getStreamArn() const;
    void setStreamArn(const QString &stream_arn);
    bool is_stream_arn_Set() const;
    bool is_stream_arn_Valid() const;

    QString getPlaybackMode() const;
    void setPlaybackMode(const QString &playback_mode);
    bool is_playback_mode_Set() const;
    bool is_playback_mode_Valid() const;

    QString getDisplayFragmentTimestamp() const;
    void setDisplayFragmentTimestamp(const QString &display_fragment_timestamp);
    bool is_display_fragment_timestamp_Set() const;
    bool is_display_fragment_timestamp_Valid() const;

    QString getDisplayFragmentNumber() const;
    void setDisplayFragmentNumber(const QString &display_fragment_number);
    bool is_display_fragment_number_Set() const;
    bool is_display_fragment_number_Valid() const;

    OAIGetDASHStreamingSessionURL_request_DASHFragmentSelector getDashFragmentSelector() const;
    void setDashFragmentSelector(const OAIGetDASHStreamingSessionURL_request_DASHFragmentSelector &dash_fragment_selector);
    bool is_dash_fragment_selector_Set() const;
    bool is_dash_fragment_selector_Valid() const;

    qint32 getExpires() const;
    void setExpires(const qint32 &expires);
    bool is_expires_Set() const;
    bool is_expires_Valid() const;

    qint32 getMaxManifestFragmentResults() const;
    void setMaxManifestFragmentResults(const qint32 &max_manifest_fragment_results);
    bool is_max_manifest_fragment_results_Set() const;
    bool is_max_manifest_fragment_results_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_stream_name;
    bool m_stream_name_isSet;
    bool m_stream_name_isValid;

    QString m_stream_arn;
    bool m_stream_arn_isSet;
    bool m_stream_arn_isValid;

    QString m_playback_mode;
    bool m_playback_mode_isSet;
    bool m_playback_mode_isValid;

    QString m_display_fragment_timestamp;
    bool m_display_fragment_timestamp_isSet;
    bool m_display_fragment_timestamp_isValid;

    QString m_display_fragment_number;
    bool m_display_fragment_number_isSet;
    bool m_display_fragment_number_isValid;

    OAIGetDASHStreamingSessionURL_request_DASHFragmentSelector m_dash_fragment_selector;
    bool m_dash_fragment_selector_isSet;
    bool m_dash_fragment_selector_isValid;

    qint32 m_expires;
    bool m_expires_isSet;
    bool m_expires_isValid;

    qint32 m_max_manifest_fragment_results;
    bool m_max_manifest_fragment_results_isSet;
    bool m_max_manifest_fragment_results_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIGetDASHStreamingSessionURL_request)

#endif // OAIGetDASHStreamingSessionURL_request_H
