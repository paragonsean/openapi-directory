/**
 * Amazon Kinesis Video Streams Archived Media
 * <p/>
 *
 * The version of the OpenAPI document: 2017-09-30
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGetHLSStreamingSessionURLOutput.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGetHLSStreamingSessionURLOutput::OAIGetHLSStreamingSessionURLOutput(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGetHLSStreamingSessionURLOutput::OAIGetHLSStreamingSessionURLOutput() {
    this->initializeModel();
}

OAIGetHLSStreamingSessionURLOutput::~OAIGetHLSStreamingSessionURLOutput() {}

void OAIGetHLSStreamingSessionURLOutput::initializeModel() {

    m_hls_streaming_session_url_isSet = false;
    m_hls_streaming_session_url_isValid = false;
}

void OAIGetHLSStreamingSessionURLOutput::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGetHLSStreamingSessionURLOutput::fromJsonObject(QJsonObject json) {

    m_hls_streaming_session_url_isValid = ::OpenAPI::fromJsonValue(m_hls_streaming_session_url, json[QString("HLSStreamingSessionURL")]);
    m_hls_streaming_session_url_isSet = !json[QString("HLSStreamingSessionURL")].isNull() && m_hls_streaming_session_url_isValid;
}

QString OAIGetHLSStreamingSessionURLOutput::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGetHLSStreamingSessionURLOutput::asJsonObject() const {
    QJsonObject obj;
    if (m_hls_streaming_session_url_isSet) {
        obj.insert(QString("HLSStreamingSessionURL"), ::OpenAPI::toJsonValue(m_hls_streaming_session_url));
    }
    return obj;
}

QString OAIGetHLSStreamingSessionURLOutput::getHlsStreamingSessionUrl() const {
    return m_hls_streaming_session_url;
}
void OAIGetHLSStreamingSessionURLOutput::setHlsStreamingSessionUrl(const QString &hls_streaming_session_url) {
    m_hls_streaming_session_url = hls_streaming_session_url;
    m_hls_streaming_session_url_isSet = true;
}

bool OAIGetHLSStreamingSessionURLOutput::is_hls_streaming_session_url_Set() const{
    return m_hls_streaming_session_url_isSet;
}

bool OAIGetHLSStreamingSessionURLOutput::is_hls_streaming_session_url_Valid() const{
    return m_hls_streaming_session_url_isValid;
}

bool OAIGetHLSStreamingSessionURLOutput::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_hls_streaming_session_url_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGetHLSStreamingSessionURLOutput::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
