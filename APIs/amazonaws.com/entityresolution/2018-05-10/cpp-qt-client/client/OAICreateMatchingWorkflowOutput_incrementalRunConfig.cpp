/**
 * AWS EntityResolution
 * <p>Welcome to the <i>AWS Entity Resolution API Reference</i>.</p> <p>AWS Entity Resolution is an AWS service that provides pre-configured entity resolution capabilities that enable developers and analysts at advertising and marketing companies to build an accurate and complete view of their consumers.</p> <p> With AWS Entity Resolution, you have the ability to match source records containing consumer identifiers, such as name, email address, and phone number. This holds true even when these records have incomplete or conflicting identifiers. For example, AWS Entity Resolution can effectively match a source record from a customer relationship management (CRM) system, which includes account information like first name, last name, postal address, phone number, and email address, with a source record from a marketing system containing campaign information, such as username and email address.</p> <p>To learn more about AWS Entity Resolution concepts, procedures, and best practices, see the <a href=\"https://docs.aws.amazon.com/entityresolution/latest/userguide/what-is-service.html\">AWS Entity Resolution User Guide</a>.</p>
 *
 * The version of the OpenAPI document: 2018-05-10
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAICreateMatchingWorkflowOutput_incrementalRunConfig.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAICreateMatchingWorkflowOutput_incrementalRunConfig::OAICreateMatchingWorkflowOutput_incrementalRunConfig(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAICreateMatchingWorkflowOutput_incrementalRunConfig::OAICreateMatchingWorkflowOutput_incrementalRunConfig() {
    this->initializeModel();
}

OAICreateMatchingWorkflowOutput_incrementalRunConfig::~OAICreateMatchingWorkflowOutput_incrementalRunConfig() {}

void OAICreateMatchingWorkflowOutput_incrementalRunConfig::initializeModel() {

    m_incremental_run_type_isSet = false;
    m_incremental_run_type_isValid = false;
}

void OAICreateMatchingWorkflowOutput_incrementalRunConfig::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAICreateMatchingWorkflowOutput_incrementalRunConfig::fromJsonObject(QJsonObject json) {

    m_incremental_run_type_isValid = ::OpenAPI::fromJsonValue(m_incremental_run_type, json[QString("incrementalRunType")]);
    m_incremental_run_type_isSet = !json[QString("incrementalRunType")].isNull() && m_incremental_run_type_isValid;
}

QString OAICreateMatchingWorkflowOutput_incrementalRunConfig::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAICreateMatchingWorkflowOutput_incrementalRunConfig::asJsonObject() const {
    QJsonObject obj;
    if (m_incremental_run_type.isSet()) {
        obj.insert(QString("incrementalRunType"), ::OpenAPI::toJsonValue(m_incremental_run_type));
    }
    return obj;
}

OAIIncrementalRunType OAICreateMatchingWorkflowOutput_incrementalRunConfig::getIncrementalRunType() const {
    return m_incremental_run_type;
}
void OAICreateMatchingWorkflowOutput_incrementalRunConfig::setIncrementalRunType(const OAIIncrementalRunType &incremental_run_type) {
    m_incremental_run_type = incremental_run_type;
    m_incremental_run_type_isSet = true;
}

bool OAICreateMatchingWorkflowOutput_incrementalRunConfig::is_incremental_run_type_Set() const{
    return m_incremental_run_type_isSet;
}

bool OAICreateMatchingWorkflowOutput_incrementalRunConfig::is_incremental_run_type_Valid() const{
    return m_incremental_run_type_isValid;
}

bool OAICreateMatchingWorkflowOutput_incrementalRunConfig::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_incremental_run_type.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAICreateMatchingWorkflowOutput_incrementalRunConfig::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
