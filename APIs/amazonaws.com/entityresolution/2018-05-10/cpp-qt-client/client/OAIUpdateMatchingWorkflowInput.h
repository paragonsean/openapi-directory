/**
 * AWS EntityResolution
 * <p>Welcome to the <i>AWS Entity Resolution API Reference</i>.</p> <p>AWS Entity Resolution is an AWS service that provides pre-configured entity resolution capabilities that enable developers and analysts at advertising and marketing companies to build an accurate and complete view of their consumers.</p> <p> With AWS Entity Resolution, you have the ability to match source records containing consumer identifiers, such as name, email address, and phone number. This holds true even when these records have incomplete or conflicting identifiers. For example, AWS Entity Resolution can effectively match a source record from a customer relationship management (CRM) system, which includes account information like first name, last name, postal address, phone number, and email address, with a source record from a marketing system containing campaign information, such as username and email address.</p> <p>To learn more about AWS Entity Resolution concepts, procedures, and best practices, see the <a href=\"https://docs.aws.amazon.com/entityresolution/latest/userguide/what-is-service.html\">AWS Entity Resolution User Guide</a>.</p>
 *
 * The version of the OpenAPI document: 2018-05-10
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIUpdateMatchingWorkflowInput.h
 *
 * 
 */

#ifndef OAIUpdateMatchingWorkflowInput_H
#define OAIUpdateMatchingWorkflowInput_H

#include <QJsonObject>

#include "OAICreateMatchingWorkflowOutput_incrementalRunConfig.h"
#include "OAICreateMatchingWorkflowOutput_resolutionTechniques.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAICreateMatchingWorkflowOutput_incrementalRunConfig;
class OAICreateMatchingWorkflowOutput_resolutionTechniques;

class OAIUpdateMatchingWorkflowInput : public OAIObject {
public:
    OAIUpdateMatchingWorkflowInput();
    OAIUpdateMatchingWorkflowInput(QString json);
    ~OAIUpdateMatchingWorkflowInput() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getDescription() const;
    void setDescription(const QString &description);
    bool is_description_Set() const;
    bool is_description_Valid() const;

    OAICreateMatchingWorkflowOutput_incrementalRunConfig getIncrementalRunConfig() const;
    void setIncrementalRunConfig(const OAICreateMatchingWorkflowOutput_incrementalRunConfig &incremental_run_config);
    bool is_incremental_run_config_Set() const;
    bool is_incremental_run_config_Valid() const;

    QList getInputSourceConfig() const;
    void setInputSourceConfig(const QList &input_source_config);
    bool is_input_source_config_Set() const;
    bool is_input_source_config_Valid() const;

    QList getOutputSourceConfig() const;
    void setOutputSourceConfig(const QList &output_source_config);
    bool is_output_source_config_Set() const;
    bool is_output_source_config_Valid() const;

    OAICreateMatchingWorkflowOutput_resolutionTechniques getResolutionTechniques() const;
    void setResolutionTechniques(const OAICreateMatchingWorkflowOutput_resolutionTechniques &resolution_techniques);
    bool is_resolution_techniques_Set() const;
    bool is_resolution_techniques_Valid() const;

    QString getRoleArn() const;
    void setRoleArn(const QString &role_arn);
    bool is_role_arn_Set() const;
    bool is_role_arn_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_description;
    bool m_description_isSet;
    bool m_description_isValid;

    OAICreateMatchingWorkflowOutput_incrementalRunConfig m_incremental_run_config;
    bool m_incremental_run_config_isSet;
    bool m_incremental_run_config_isValid;

    QList m_input_source_config;
    bool m_input_source_config_isSet;
    bool m_input_source_config_isValid;

    QList m_output_source_config;
    bool m_output_source_config_isSet;
    bool m_output_source_config_isValid;

    OAICreateMatchingWorkflowOutput_resolutionTechniques m_resolution_techniques;
    bool m_resolution_techniques_isSet;
    bool m_resolution_techniques_isValid;

    QString m_role_arn;
    bool m_role_arn_isSet;
    bool m_role_arn_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIUpdateMatchingWorkflowInput)

#endif // OAIUpdateMatchingWorkflowInput_H
