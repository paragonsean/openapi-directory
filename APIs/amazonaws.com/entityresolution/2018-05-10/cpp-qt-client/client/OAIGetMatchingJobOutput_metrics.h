/**
 * AWS EntityResolution
 * <p>Welcome to the <i>AWS Entity Resolution API Reference</i>.</p> <p>AWS Entity Resolution is an AWS service that provides pre-configured entity resolution capabilities that enable developers and analysts at advertising and marketing companies to build an accurate and complete view of their consumers.</p> <p> With AWS Entity Resolution, you have the ability to match source records containing consumer identifiers, such as name, email address, and phone number. This holds true even when these records have incomplete or conflicting identifiers. For example, AWS Entity Resolution can effectively match a source record from a customer relationship management (CRM) system, which includes account information like first name, last name, postal address, phone number, and email address, with a source record from a marketing system containing campaign information, such as username and email address.</p> <p>To learn more about AWS Entity Resolution concepts, procedures, and best practices, see the <a href=\"https://docs.aws.amazon.com/entityresolution/latest/userguide/what-is-service.html\">AWS Entity Resolution User Guide</a>.</p>
 *
 * The version of the OpenAPI document: 2018-05-10
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIGetMatchingJobOutput_metrics.h
 *
 * 
 */

#ifndef OAIGetMatchingJobOutput_metrics_H
#define OAIGetMatchingJobOutput_metrics_H

#include <QJsonObject>


#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIGetMatchingJobOutput_metrics : public OAIObject {
public:
    OAIGetMatchingJobOutput_metrics();
    OAIGetMatchingJobOutput_metrics(QString json);
    ~OAIGetMatchingJobOutput_metrics() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    qint32 getInputRecords() const;
    void setInputRecords(const qint32 &input_records);
    bool is_input_records_Set() const;
    bool is_input_records_Valid() const;

    qint32 getMatchIds() const;
    void setMatchIds(const qint32 &match_ids);
    bool is_match_ids_Set() const;
    bool is_match_ids_Valid() const;

    qint32 getRecordsNotProcessed() const;
    void setRecordsNotProcessed(const qint32 &records_not_processed);
    bool is_records_not_processed_Set() const;
    bool is_records_not_processed_Valid() const;

    qint32 getTotalRecordsProcessed() const;
    void setTotalRecordsProcessed(const qint32 &total_records_processed);
    bool is_total_records_processed_Set() const;
    bool is_total_records_processed_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    qint32 m_input_records;
    bool m_input_records_isSet;
    bool m_input_records_isValid;

    qint32 m_match_ids;
    bool m_match_ids_isSet;
    bool m_match_ids_isValid;

    qint32 m_records_not_processed;
    bool m_records_not_processed_isSet;
    bool m_records_not_processed_isValid;

    qint32 m_total_records_processed;
    bool m_total_records_processed_isSet;
    bool m_total_records_processed_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIGetMatchingJobOutput_metrics)

#endif // OAIGetMatchingJobOutput_metrics_H
