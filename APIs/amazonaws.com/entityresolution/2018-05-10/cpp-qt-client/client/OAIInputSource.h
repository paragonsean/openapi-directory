/**
 * AWS EntityResolution
 * <p>Welcome to the <i>AWS Entity Resolution API Reference</i>.</p> <p>AWS Entity Resolution is an AWS service that provides pre-configured entity resolution capabilities that enable developers and analysts at advertising and marketing companies to build an accurate and complete view of their consumers.</p> <p> With AWS Entity Resolution, you have the ability to match source records containing consumer identifiers, such as name, email address, and phone number. This holds true even when these records have incomplete or conflicting identifiers. For example, AWS Entity Resolution can effectively match a source record from a customer relationship management (CRM) system, which includes account information like first name, last name, postal address, phone number, and email address, with a source record from a marketing system containing campaign information, such as username and email address.</p> <p>To learn more about AWS Entity Resolution concepts, procedures, and best practices, see the <a href=\"https://docs.aws.amazon.com/entityresolution/latest/userguide/what-is-service.html\">AWS Entity Resolution User Guide</a>.</p>
 *
 * The version of the OpenAPI document: 2018-05-10
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIInputSource.h
 *
 * An object containing &lt;code&gt;InputSourceARN&lt;/code&gt;, &lt;code&gt;SchemaName&lt;/code&gt;, and &lt;code&gt;ApplyNormalization&lt;/code&gt;.
 */

#ifndef OAIInputSource_H
#define OAIInputSource_H

#include <QJsonObject>

#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIInputSource : public OAIObject {
public:
    OAIInputSource();
    OAIInputSource(QString json);
    ~OAIInputSource() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    bool getApplyNormalization() const;
    void setApplyNormalization(const bool &apply_normalization);
    bool is_apply_normalization_Set() const;
    bool is_apply_normalization_Valid() const;

    QString getInputSourceArn() const;
    void setInputSourceArn(const QString &input_source_arn);
    bool is_input_source_arn_Set() const;
    bool is_input_source_arn_Valid() const;

    QString getSchemaName() const;
    void setSchemaName(const QString &schema_name);
    bool is_schema_name_Set() const;
    bool is_schema_name_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    bool m_apply_normalization;
    bool m_apply_normalization_isSet;
    bool m_apply_normalization_isValid;

    QString m_input_source_arn;
    bool m_input_source_arn_isSet;
    bool m_input_source_arn_isValid;

    QString m_schema_name;
    bool m_schema_name_isSet;
    bool m_schema_name_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIInputSource)

#endif // OAIInputSource_H
