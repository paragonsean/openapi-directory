openapi: 3.0.0
info:
  contact:
    email: mike.ralphson@gmail.com
    name: Mike Ralphson
    url: https://github.com/mermade/aws2openapi
    x-twitter: PermittedSoc
  description: "<p>Welcome to the <i>AWS Entity Resolution API Reference</i>.</p>\
    \ <p>AWS Entity Resolution is an AWS service that provides pre-configured entity\
    \ resolution capabilities that enable developers and analysts at advertising and\
    \ marketing companies to build an accurate and complete view of their consumers.</p>\
    \ <p> With AWS Entity Resolution, you have the ability to match source records\
    \ containing consumer identifiers, such as name, email address, and phone number.\
    \ This holds true even when these records have incomplete or conflicting identifiers.\
    \ For example, AWS Entity Resolution can effectively match a source record from\
    \ a customer relationship management (CRM) system, which includes account information\
    \ like first name, last name, postal address, phone number, and email address,\
    \ with a source record from a marketing system containing campaign information,\
    \ such as username and email address.</p> <p>To learn more about AWS Entity Resolution\
    \ concepts, procedures, and best practices, see the <a href=\"https://docs.aws.amazon.com/entityresolution/latest/userguide/what-is-service.html\"\
    >AWS Entity Resolution User Guide</a>.</p>"
  license:
    name: Apache 2.0 License
    url: http://www.apache.org/licenses/
  termsOfService: https://aws.amazon.com/service-terms/
  title: AWS EntityResolution
  version: 2018-05-10
  x-release: v4
  x-logo:
    url: https://twitter.com/awscloud/profile_image?size=original
    backgroundColor: '#FFFFFF'
  x-providerName: amazonaws.com
  x-serviceName: entityresolution
  x-aws-signingName: entityresolution
  x-origin:
  - contentType: application/json
    url: https://raw.githubusercontent.com/aws/aws-sdk-js/master/apis/entityresolution-2018-05-10.normal.json
    converter:
      url: https://github.com/mermade/aws2openapi
      version: 1.0.0
    x-apisguru-driver: external
  x-apiClientRegistration:
    url: https://portal.aws.amazon.com/gp/aws/developer/registration/index.html?nc2=h_ct
  x-apisguru-categories:
  - cloud
  x-preferred: true
externalDocs:
  description: Amazon Web Services documentation
  url: https://docs.aws.amazon.com/entityresolution/
servers:
- description: The AWSEntityResolution multi-region endpoint
  url: "http://entityresolution.{region}.amazonaws.com"
  variables:
    region:
      default: us-east-1
      description: The AWS region
      enum:
      - us-east-1
      - us-east-2
      - us-west-1
      - us-west-2
      - us-gov-west-1
      - us-gov-east-1
      - ca-central-1
      - eu-north-1
      - eu-west-1
      - eu-west-2
      - eu-west-3
      - eu-central-1
      - eu-south-1
      - af-south-1
      - ap-northeast-1
      - ap-northeast-2
      - ap-northeast-3
      - ap-southeast-1
      - ap-southeast-2
      - ap-east-1
      - ap-south-1
      - sa-east-1
      - me-south-1
- description: The AWSEntityResolution multi-region endpoint
  url: "https://entityresolution.{region}.amazonaws.com"
  variables:
    region:
      default: us-east-1
      description: The AWS region
      enum:
      - us-east-1
      - us-east-2
      - us-west-1
      - us-west-2
      - us-gov-west-1
      - us-gov-east-1
      - ca-central-1
      - eu-north-1
      - eu-west-1
      - eu-west-2
      - eu-west-3
      - eu-central-1
      - eu-south-1
      - af-south-1
      - ap-northeast-1
      - ap-northeast-2
      - ap-northeast-3
      - ap-southeast-1
      - ap-southeast-2
      - ap-east-1
      - ap-south-1
      - sa-east-1
      - me-south-1
- description: The AWSEntityResolution endpoint for China (Beijing) and China (Ningxia)
  url: "http://entityresolution.{region}.amazonaws.com.cn"
  variables:
    region:
      default: cn-north-1
      description: The AWS region
      enum:
      - cn-north-1
      - cn-northwest-1
- description: The AWSEntityResolution endpoint for China (Beijing) and China (Ningxia)
  url: "https://entityresolution.{region}.amazonaws.com.cn"
  variables:
    region:
      default: cn-north-1
      description: The AWS region
      enum:
      - cn-north-1
      - cn-northwest-1
security:
- hmac: []
paths:
  /matchingworkflows:
    get:
      description: Returns a list of all the <code>MatchingWorkflows</code> that have
        been created for an AWS account.
      operationId: list_matching_workflows
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The maximum number of objects returned per page.
        explode: true
        in: query
        name: maxResults
        required: false
        schema:
          maximum: 25
          type: integer
        style: form
      - description: The pagination token from the previous <code>ListSchemaMappings</code>
          API call.
        explode: true
        in: query
        name: nextToken
        required: false
        schema:
          maxLength: 1024
          minLength: 1
          pattern: "^[a-zA-Z_0-9-=+/]*$"
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListMatchingWorkflowsOutput'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
      x-openapi-router-controller: openapi_server.controllers.default_controller
    post:
      description: "Creates a <code>MatchingWorkflow</code> object which stores the\
        \ configuration of the data processing job to be run. It is important to note\
        \ that there should not be a pre-existing <code>MatchingWorkflow</code> with\
        \ the same name. To modify an existing workflow, utilize the <code>UpdateMatchingWorkflow</code>\
        \ API."
      operationId: create_matching_workflow
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateMatchingWorkflow_request'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateMatchingWorkflowOutput'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExceedsLimitException'
          description: ExceedsLimitException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
          description: ConflictException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /matchingworkflows/{workflowName}:
    delete:
      description: Deletes the <code>MatchingWorkflow</code> with a given name. This
        operation will succeed even if a workflow with the given name does not exist.
      operationId: delete_matching_workflow
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The name of the workflow to be retrieved.
        explode: false
        in: path
        name: workflowName
        required: true
        schema:
          maxLength: 255
          minLength: 0
          pattern: "^[a-zA-Z_0-9-]*$"
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteMatchingWorkflowOutput'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
      x-openapi-router-controller: openapi_server.controllers.default_controller
    get:
      description: "Returns the <code>MatchingWorkflow</code> with a given name, if\
        \ it exists."
      operationId: get_matching_workflow
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The name of the workflow.
        explode: false
        in: path
        name: workflowName
        required: true
        schema:
          maxLength: 255
          minLength: 0
          pattern: "^[a-zA-Z_0-9-]*$"
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetMatchingWorkflowOutput'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
      x-openapi-router-controller: openapi_server.controllers.default_controller
    put:
      description: "Updates an existing <code>MatchingWorkflow</code>. This method\
        \ is identical to <code>CreateMatchingWorkflow</code>, except it uses an HTTP\
        \ <code>PUT</code> request instead of a <code>POST</code> request, and the\
        \ <code>MatchingWorkflow</code> must already exist for the method to succeed."
      operationId: update_matching_workflow
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The name of the workflow to be retrieved.
        explode: false
        in: path
        name: workflowName
        required: true
        schema:
          maxLength: 255
          minLength: 0
          pattern: "^[a-zA-Z_0-9-]*$"
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateMatchingWorkflow_request'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateMatchingWorkflowOutput'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /matchingworkflows/{workflowName}/jobs:
    get:
      description: Lists all jobs for a given workflow.
      operationId: list_matching_jobs
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The maximum number of objects returned per page.
        explode: true
        in: query
        name: maxResults
        required: false
        schema:
          maximum: 25
          minimum: 1
          type: integer
        style: form
      - description: The pagination token from the previous <code>ListSchemaMappings</code>
          API call.
        explode: true
        in: query
        name: nextToken
        required: false
        schema:
          maxLength: 1024
          minLength: 1
          pattern: "^[a-zA-Z_0-9-=+/]*$"
          type: string
        style: form
      - description: The name of the workflow to be retrieved.
        explode: false
        in: path
        name: workflowName
        required: true
        schema:
          maxLength: 255
          minLength: 0
          pattern: "^[a-zA-Z_0-9-]*$"
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListMatchingJobsOutput'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
      x-openapi-router-controller: openapi_server.controllers.default_controller
    post:
      description: Starts the <code>MatchingJob</code> of a workflow. The workflow
        must have previously been created using the <code>CreateMatchingWorkflow</code>
        endpoint.
      operationId: start_matching_job
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The name of the matching job to be retrieved.
        explode: false
        in: path
        name: workflowName
        required: true
        schema:
          maxLength: 255
          minLength: 0
          pattern: "^[a-zA-Z_0-9-]*$"
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StartMatchingJobOutput'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExceedsLimitException'
          description: ExceedsLimitException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
          description: ConflictException
        "486":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
      x-openapi-router-controller: openapi_server.controllers.default_controller
  /matchingworkflows/{workflowName}/jobs/{jobId}:
    get:
      description: "Gets the status, metrics, and errors (if there are any) that are\
        \ associated with a job."
      operationId: get_matching_job
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The ID of the job.
        explode: false
        in: path
        name: jobId
        required: true
        schema:
          pattern: "^[a-f0-9]{32}$"
          type: string
        style: simple
      - description: The name of the workflow.
        explode: false
        in: path
        name: workflowName
        required: true
        schema:
          maxLength: 255
          minLength: 0
          pattern: "^[a-zA-Z_0-9-]*$"
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetMatchingJobOutput'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
      x-openapi-router-controller: openapi_server.controllers.default_controller
  /matchingworkflows/{workflowName}/matches:
    post:
      description: Returns the corresponding Match ID of a customer record if the
        record has been processed.
      operationId: get_match_id
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The name of the workflow.
        explode: false
        in: path
        name: workflowName
        required: true
        schema:
          maxLength: 255
          minLength: 0
          pattern: "^[a-zA-Z_0-9-]*$"
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetMatchId_request'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetMatchIdOutput'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /schemas:
    get:
      description: Returns a list of all the <code>SchemaMappings</code> that have
        been created for an AWS account.
      operationId: list_schema_mappings
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The maximum number of objects returned per page.
        explode: true
        in: query
        name: maxResults
        required: false
        schema:
          maximum: 25
          type: integer
        style: form
      - description: The pagination token from the previous <code>ListSchemaMappings</code>
          API call.
        explode: true
        in: query
        name: nextToken
        required: false
        schema:
          maxLength: 1024
          minLength: 1
          pattern: "^[a-zA-Z_0-9-=+/]*$"
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListSchemaMappingsOutput'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
      x-openapi-router-controller: openapi_server.controllers.default_controller
    post:
      description: "Creates a schema mapping, which defines the schema of the input\
        \ customer records table. The <code>SchemaMapping</code> also provides Entity\
        \ Resolution with some metadata about the table, such as the attribute types\
        \ of the columns and which columns to match on."
      operationId: create_schema_mapping
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateSchemaMapping_request'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateSchemaMappingOutput'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExceedsLimitException'
          description: ExceedsLimitException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
          description: ConflictException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /schemas/{schemaName}:
    delete:
      description: Deletes the <code>SchemaMapping</code> with a given name. This
        operation will succeed even if a schema with the given name does not exist.
        This operation will fail if there is a <code>DataIntegrationWorkflow</code>
        object that references the <code>SchemaMapping</code> in the workflow's <code>InputSourceConfig</code>.
      operationId: delete_schema_mapping
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The name of the schema to delete.
        explode: false
        in: path
        name: schemaName
        required: true
        schema:
          maxLength: 255
          minLength: 0
          pattern: "^[a-zA-Z_0-9-]*$"
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteSchemaMappingOutput'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
          description: ConflictException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
      x-openapi-router-controller: openapi_server.controllers.default_controller
    get:
      description: Returns the SchemaMapping of a given name.
      operationId: get_schema_mapping
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The name of the schema to be retrieved.
        explode: false
        in: path
        name: schemaName
        required: true
        schema:
          maxLength: 255
          minLength: 0
          pattern: "^[a-zA-Z_0-9-]*$"
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetSchemaMappingOutput'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
      x-openapi-router-controller: openapi_server.controllers.default_controller
  /tags/{resourceArn}:
    get:
      description: "Displays the tags associated with an AWS Entity Resolution resource.\
        \ In Entity Resolution, <code>SchemaMapping</code>, and <code>MatchingWorkflow</code>\
        \ can be tagged."
      operationId: list_tags_for_resource
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The ARN of the resource for which you want to view tags.
        explode: false
        in: path
        name: resourceArn
        required: true
        schema:
          pattern: "^arn:(aws|aws-us-gov|aws-cn):(entityresolution):.*:[0-9]+:((schemamapping|matchingworkflow)/[a-zA-Z0-9_-]+)$"
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListTagsForResourceOutput'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
      x-openapi-router-controller: openapi_server.controllers.default_controller
    post:
      description: "Assigns one or more tags (key-value pairs) to the specified AWS\
        \ Entity Resolution resource. Tags can help you organize and categorize your\
        \ resources. You can also use them to scope user permissions by granting a\
        \ user permission to access or change only resources with certain tag values.\
        \ In Entity Resolution, <code>SchemaMapping</code>, and <code>MatchingWorkflow</code>\
        \ can be tagged. Tags don't have any semantic meaning to AWS and are interpreted\
        \ strictly as strings of characters. You can use the <code>TagResource</code>\
        \ action with a resource that already has tags. If you specify a new tag key,\
        \ this tag is appended to the list of tags associated with the resource. If\
        \ you specify a tag key that is already associated with the resource, the\
        \ new tag value that you specify replaces the previous value for that tag."
      operationId: tag_resource
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The ARN of the resource for which you want to view tags.
        explode: false
        in: path
        name: resourceArn
        required: true
        schema:
          pattern: "^arn:(aws|aws-us-gov|aws-cn):(entityresolution):.*:[0-9]+:((schemamapping|matchingworkflow)/[a-zA-Z0-9_-]+)$"
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TagResource_request'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TagResourceOutput'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /tags/{resourceArn}#tagKeys:
    delete:
      description: "Removes one or more tags from the specified AWS Entity Resolution\
        \ resource. In Entity Resolution, <code>SchemaMapping</code>, and <code>MatchingWorkflow</code>\
        \ can be tagged."
      operationId: untag_resource
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The ARN of the resource for which you want to untag.
        explode: false
        in: path
        name: resourceArn
        required: true
        schema:
          pattern: "^arn:(aws|aws-us-gov|aws-cn):(entityresolution):.*:[0-9]+:((schemamapping|matchingworkflow)/[a-zA-Z0-9_-]+)$"
          type: string
        style: simple
      - description: The list of tag keys to remove from the resource.
        explode: true
        in: query
        name: tagKeys
        required: true
        schema:
          items:
            $ref: '#/components/schemas/TagKey'
          maxItems: 200
          minItems: 0
          type: array
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UntagResourceOutput'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
      x-openapi-router-controller: openapi_server.controllers.default_controller
components:
  parameters:
    X-Amz-Content-Sha256:
      explode: false
      in: header
      name: X-Amz-Content-Sha256
      required: false
      schema:
        type: string
      style: simple
    X-Amz-Date:
      explode: false
      in: header
      name: X-Amz-Date
      required: false
      schema:
        type: string
      style: simple
    X-Amz-Algorithm:
      explode: false
      in: header
      name: X-Amz-Algorithm
      required: false
      schema:
        type: string
      style: simple
    X-Amz-Credential:
      explode: false
      in: header
      name: X-Amz-Credential
      required: false
      schema:
        type: string
      style: simple
    X-Amz-Security-Token:
      explode: false
      in: header
      name: X-Amz-Security-Token
      required: false
      schema:
        type: string
      style: simple
    X-Amz-Signature:
      explode: false
      in: header
      name: X-Amz-Signature
      required: false
      schema:
        type: string
      style: simple
    X-Amz-SignedHeaders:
      explode: false
      in: header
      name: X-Amz-SignedHeaders
      required: false
      schema:
        type: string
      style: simple
  schemas:
    CreateMatchingWorkflowOutput:
      example:
        resolutionTechniques:
          resolutionType: ""
          ruleBasedProperties:
            rules: ""
            attributeMatchingModel: ""
        incrementalRunConfig:
          incrementalRunType: ""
        roleArn: ""
        workflowArn: ""
        description: ""
        inputSourceConfig: ""
        workflowName: ""
        outputSourceConfig: ""
      properties:
        description:
          allOf:
          - $ref: '#/components/schemas/Description'
          - description: A description of the workflow.
          title: description
        incrementalRunConfig:
          $ref: '#/components/schemas/CreateMatchingWorkflowOutput_incrementalRunConfig'
        inputSourceConfig:
          allOf:
          - $ref: '#/components/schemas/InputSourceConfig'
          - description: "A list of <code>InputSource</code> objects, which have the\
              \ fields <code>InputSourceARN</code> and <code>SchemaName</code>."
          title: inputSourceConfig
        outputSourceConfig:
          allOf:
          - $ref: '#/components/schemas/OutputSourceConfig'
          - description: "A list of <code>OutputSource</code> objects, each of which\
              \ contains fields <code>OutputS3Path</code>, <code>ApplyNormalization</code>,\
              \ and <code>Output</code>."
          title: outputSourceConfig
        resolutionTechniques:
          $ref: '#/components/schemas/CreateMatchingWorkflowOutput_resolutionTechniques'
        roleArn:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The Amazon Resource Name (ARN) of the IAM role. AWS Entity
              Resolution assumes this role to create resources on your behalf as part
              of workflow execution.
          title: roleArn
        workflowArn:
          allOf:
          - $ref: '#/components/schemas/MatchingWorkflowArn'
          - description: The ARN (Amazon Resource Name) that Entity Resolution generated
              for the <code>MatchingWorkflow</code>.
          title: workflowArn
        workflowName:
          allOf:
          - $ref: '#/components/schemas/EntityName'
          - description: The name of the workflow.
          title: workflowName
      required:
      - inputSourceConfig
      - outputSourceConfig
      - resolutionTechniques
      - roleArn
      - workflowArn
      - workflowName
      title: CreateMatchingWorkflowOutput
      type: object
    IncrementalRunType:
      enum:
      - IMMEDIATE
      title: IncrementalRunType
      type: string
    InputSource:
      description: "An object containing <code>InputSourceARN</code>, <code>SchemaName</code>,\
        \ and <code>ApplyNormalization</code>."
      properties:
        applyNormalization:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          - description: "Normalizes the attributes defined in the schema in the input\
              \ data. For example, if an attribute has an <code>AttributeType</code>\
              \ of <code>PHONE_NUMBER</code>, and the data in the input table is in\
              \ a format of 1234567890, Entity Resolution will normalize this field\
              \ in the output to (123)-456-7890."
          title: applyNormalization
        inputSourceARN:
          allOf:
          - $ref: '#/components/schemas/InputSourceInputSourceARNString'
          - description: An Glue table ARN for the input source table.
          title: inputSourceARN
        schemaName:
          allOf:
          - $ref: '#/components/schemas/EntityName'
          - description: The name of the schema to be retrieved.
          title: schemaName
      required:
      - inputSourceARN
      - schemaName
      title: InputSource
      type: object
    OutputSource:
      description: "A list of <code>OutputAttribute</code> objects, each of which\
        \ have the fields Name and Hashed. Each of these objects selects a column\
        \ to be included in the output table, and whether the values of the column\
        \ should be hashed."
      properties:
        KMSArn:
          allOf:
          - $ref: '#/components/schemas/KMSArn'
          - description: "Customer KMS ARN for encryption at rest. If not provided,\
              \ system will use an Entity Resolution managed KMS key."
          title: KMSArn
        applyNormalization:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          - description: "Normalizes the attributes defined in the schema in the input\
              \ data. For example, if an attribute has an <code>AttributeType</code>\
              \ of <code>PHONE_NUMBER</code>, and the data in the input table is in\
              \ a format of 1234567890, Entity Resolution will normalize this field\
              \ in the output to (123)-456-7890."
          title: applyNormalization
        output:
          allOf:
          - $ref: '#/components/schemas/OutputSourceOutputList'
          - description: "A list of <code>OutputAttribute</code> objects, each of\
              \ which have the fields Name and Hashed. Each of these objects selects\
              \ a column to be included in the output table, and whether the values\
              \ of the column should be hashed."
          title: output
        outputS3Path:
          allOf:
          - $ref: '#/components/schemas/OutputSourceOutputS3PathString'
          - description: The S3 path to which Entity Resolution will write the output
              table.
          title: outputS3Path
      required:
      - output
      - outputS3Path
      title: OutputSource
      type: object
    ResolutionType:
      enum:
      - RULE_MATCHING
      - ML_MATCHING
      title: ResolutionType
      type: string
    RuleBasedProperties:
      description: "An object which defines the list of matching rules to run and\
        \ has a field <code>Rules</code>, which is a list of rule objects."
      properties:
        attributeMatchingModel:
          allOf:
          - $ref: '#/components/schemas/AttributeMatchingModel'
          - description: "You can either choose <code>ONE_TO_ONE</code> or <code>MANY_TO_MANY</code>\
              \ as the AttributeMatchingModel. When choosing <code>MANY_TO_MANY</code>,\
              \ the system can match attribute across the sub-types of an attribute\
              \ type. For example, if the value of the Email field of Profile A and\
              \ the value of BusinessEmail field of Profile B matches, the two profiles\
              \ are matched on the Email type. When choosing <code>ONE_TO_ONE</code>\
              \ the system can only match if the sub-types are exact matches. For\
              \ example, only when the value of the Email field of Profile A and the\
              \ value of the Email field of Profile B matches, the two profiles are\
              \ matched on the Email type."
          title: attributeMatchingModel
        rules:
          allOf:
          - $ref: '#/components/schemas/RuleBasedPropertiesRulesList'
          - description: "A list of Rule objects, each of which have fields <code>RuleName</code>\
              \ and <code>MatchingKeys</code>."
          title: rules
      required:
      - attributeMatchingModel
      - rules
      title: RuleBasedProperties
      type: object
    TagValue:
      maxLength: 256
      minLength: 0
      title: TagValue
      type: string
    ThrottlingException: {}
    InternalServerException: {}
    AccessDeniedException: {}
    ExceedsLimitException: {}
    ConflictException: {}
    ValidationException: {}
    CreateSchemaMappingOutput:
      example:
        mappedInputFields: ""
        description: ""
        schemaArn: ""
        schemaName: ""
      properties:
        description:
          allOf:
          - $ref: '#/components/schemas/Description'
          - description: A description of the schema.
          title: description
        mappedInputFields:
          allOf:
          - $ref: '#/components/schemas/SchemaInputAttributes'
          - description: "A list of <code>MappedInputFields</code>. Each <code>MappedInputField</code>\
              \ corresponds to a column the source data table, and contains column\
              \ name plus additional information that Entity Resolution uses for matching."
          title: mappedInputFields
        schemaArn:
          allOf:
          - $ref: '#/components/schemas/SchemaMappingArn'
          - description: The ARN (Amazon Resource Name) that Entity Resolution generated
              for the <code>SchemaMapping</code>.
          title: schemaArn
        schemaName:
          allOf:
          - $ref: '#/components/schemas/EntityName'
          - description: The name of the schema.
          title: schemaName
      required:
      - description
      - mappedInputFields
      - schemaArn
      - schemaName
      title: CreateSchemaMappingOutput
      type: object
    SchemaInputAttribute:
      description: "An object containing <code>FieldField</code>, <code>Type</code>,\
        \ <code>GroupName</code>, and <code>MatchKey</code>."
      properties:
        fieldName:
          allOf:
          - $ref: '#/components/schemas/AttributeName'
          - description: A string containing the field name.
          title: fieldName
        groupName:
          allOf:
          - $ref: '#/components/schemas/AttributeName'
          - description: "Instruct Entity Resolution to combine several columns into\
              \ a unified column with the identical attribute type. For example, when\
              \ working with columns such as first_name, middle_name, and last_name,\
              \ assigning them a common <code>GroupName</code> will prompt Entity\
              \ Resolution to concatenate them into a single value."
          title: groupName
        matchKey:
          allOf:
          - $ref: '#/components/schemas/AttributeName'
          - description: "A key that allows grouping of multiple input attributes\
              \ into a unified matching group. For example, let's consider a scenario\
              \ where the source table contains various addresses, such as business_address\
              \ and shipping_address. By assigning the <code>MatchKey</code> <i>Address</i>'\
              \ to both attributes, Entity Resolution will match records across these\
              \ fields to create a consolidated matching group. If no <code>MatchKey</code>\
              \ is specified for a column, it won't be utilized for matching purposes\
              \ but will still be included in the output table."
          title: matchKey
        type:
          allOf:
          - $ref: '#/components/schemas/SchemaAttributeType'
          - description: "The type of the attribute, selected from a list of values."
          title: type
      required:
      - fieldName
      - type
      title: SchemaInputAttribute
      type: object
    DeleteMatchingWorkflowOutput:
      example:
        message: ""
      properties:
        message:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: A successful operation message.
          title: message
      required:
      - message
      title: DeleteMatchingWorkflowOutput
      type: object
    DeleteSchemaMappingOutput:
      example:
        message: ""
      properties:
        message:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: A successful operation message.
          title: message
      required:
      - message
      title: DeleteSchemaMappingOutput
      type: object
    GetMatchIdOutput:
      example:
        matchId: ""
      properties:
        matchId:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The unique identifiers for this group of match records.
          title: matchId
      title: GetMatchIdOutput
      type: object
    RecordAttributeMapValueString:
      maxLength: 255
      minLength: 0
      pattern: "^[a-zA-Z_0-9-.@ ()+\\t]*$"
      title: RecordAttributeMapValueString
      type: string
    ResourceNotFoundException: {}
    GetMatchingJobOutput:
      example:
        jobId: ""
        startTime: ""
        endTime: ""
        metrics:
          matchIDs: ""
          inputRecords: ""
          recordsNotProcessed: ""
          totalRecordsProcessed: ""
        errorDetails:
          errorMessage: ""
        status: ""
      properties:
        endTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          - description: The time at which the job has finished.
          title: endTime
        errorDetails:
          $ref: '#/components/schemas/GetMatchingJobOutput_errorDetails'
        jobId:
          allOf:
          - $ref: '#/components/schemas/JobId'
          - description: The ID of the job.
          title: jobId
        metrics:
          $ref: '#/components/schemas/GetMatchingJobOutput_metrics'
        startTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          - description: The time at which the job was started.
          title: startTime
        status:
          allOf:
          - $ref: '#/components/schemas/JobStatus'
          - description: "The current status of the job. Either <code>running</code>,\
              \ <code>succeeded</code>, <code>queued</code>, or <code>failed</code>."
          title: status
      required:
      - jobId
      - startTime
      - status
      title: GetMatchingJobOutput
      type: object
    GetMatchingWorkflowOutput:
      example:
        createdAt: ""
        resolutionTechniques:
          resolutionType: ""
          ruleBasedProperties:
            rules: ""
            attributeMatchingModel: ""
        incrementalRunConfig:
          incrementalRunType: ""
        roleArn: ""
        workflowArn: ""
        description: ""
        inputSourceConfig: ""
        workflowName: ""
        outputSourceConfig: ""
        tags: ""
        updatedAt: ""
      properties:
        createdAt:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          - description: The timestamp of when the workflow was created.
          title: createdAt
        description:
          allOf:
          - $ref: '#/components/schemas/Description'
          - description: A description of the workflow.
          title: description
        incrementalRunConfig:
          $ref: '#/components/schemas/CreateMatchingWorkflowOutput_incrementalRunConfig'
        inputSourceConfig:
          allOf:
          - $ref: '#/components/schemas/InputSourceConfig'
          - description: "A list of <code>InputSource</code> objects, which have the\
              \ fields <code>InputSourceARN</code> and <code>SchemaName</code>."
          title: inputSourceConfig
        outputSourceConfig:
          allOf:
          - $ref: '#/components/schemas/OutputSourceConfig'
          - description: "A list of <code>OutputSource</code> objects, each of which\
              \ contains fields <code>OutputS3Path</code>, <code>ApplyNormalization</code>,\
              \ and <code>Output</code>."
          title: outputSourceConfig
        resolutionTechniques:
          $ref: '#/components/schemas/CreateMatchingWorkflowOutput_resolutionTechniques'
        roleArn:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The Amazon Resource Name (ARN) of the IAM role. AWS Entity
              Resolution assumes this role to access resources on your behalf.
          title: roleArn
        tags:
          allOf:
          - $ref: '#/components/schemas/TagMap'
          - description: "The tags used to organize, track, or control access for\
              \ this resource."
          title: tags
        updatedAt:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          - description: The timestamp of when the workflow was last updated.
          title: updatedAt
        workflowArn:
          allOf:
          - $ref: '#/components/schemas/MatchingWorkflowArn'
          - description: The ARN (Amazon Resource Name) that Entity Resolution generated
              for the <code>MatchingWorkflow</code>.
          title: workflowArn
        workflowName:
          allOf:
          - $ref: '#/components/schemas/EntityName'
          - description: The name of the workflow.
          title: workflowName
      required:
      - createdAt
      - inputSourceConfig
      - outputSourceConfig
      - resolutionTechniques
      - roleArn
      - updatedAt
      - workflowArn
      - workflowName
      title: GetMatchingWorkflowOutput
      type: object
    GetSchemaMappingOutput:
      example:
        createdAt: ""
        mappedInputFields: ""
        description: ""
        schemaArn: ""
        schemaName: ""
        tags: ""
        updatedAt: ""
      properties:
        createdAt:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          - description: The timestamp of when the <code>SchemaMapping</code> was
              created.
          title: createdAt
        description:
          allOf:
          - $ref: '#/components/schemas/Description'
          - description: A description of the schema.
          title: description
        mappedInputFields:
          allOf:
          - $ref: '#/components/schemas/SchemaInputAttributes'
          - description: "A list of <code>MappedInputFields</code>. Each <code>MappedInputField</code>\
              \ corresponds to a column the source data table, and contains column\
              \ name plus additional information Venice uses for matching."
          title: mappedInputFields
        schemaArn:
          allOf:
          - $ref: '#/components/schemas/SchemaMappingArn'
          - description: The ARN (Amazon Resource Name) that Entity Resolution generated
              for the SchemaMapping.
          title: schemaArn
        schemaName:
          allOf:
          - $ref: '#/components/schemas/EntityName'
          - description: The name of the schema.
          title: schemaName
        tags:
          allOf:
          - $ref: '#/components/schemas/TagMap'
          - description: "The tags used to organize, track, or control access for\
              \ this resource."
          title: tags
        updatedAt:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          - description: The timestamp of when the <code>SchemaMapping</code> was
              last updated.
          title: updatedAt
      required:
      - createdAt
      - mappedInputFields
      - schemaArn
      - schemaName
      - updatedAt
      title: GetSchemaMappingOutput
      type: object
    ListMatchingJobsOutput:
      example:
        nextToken: ""
        jobs: ""
      properties:
        jobs:
          allOf:
          - $ref: '#/components/schemas/JobList'
          - description: "A list of JobSummary objects, each of which contain the\
              \ ID, status, start time, and end time of a job."
          title: jobs
        nextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          - description: The pagination token from the previous <code>ListSchemaMappings</code>
              API call.
          title: nextToken
      title: ListMatchingJobsOutput
      type: object
    ListMatchingWorkflowsOutput:
      example:
        nextToken: ""
        workflowSummaries: ""
      properties:
        nextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          - description: The pagination token from the previous <code>ListSchemaMappings</code>
              API call.
          title: nextToken
        workflowSummaries:
          allOf:
          - $ref: '#/components/schemas/MatchingWorkflowList'
          - description: "A list of <code>MatchingWorkflowSummary</code> objects,\
              \ each of which contain the fields <code>WorkflowName</code>, <code>WorkflowArn</code>,\
              \ <code>CreatedAt</code>, and <code>UpdatedAt</code>."
          title: workflowSummaries
      title: ListMatchingWorkflowsOutput
      type: object
    ListSchemaMappingsOutput:
      example:
        schemaList: ""
        nextToken: ""
      properties:
        nextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          - description: The pagination token from the previous <code>ListDomains</code>
              API call.
          title: nextToken
        schemaList:
          allOf:
          - $ref: '#/components/schemas/SchemaMappingList'
          - description: "A list of <code>SchemaMappingSummary</code> objects, each\
              \ of which contain the fields <code>SchemaName</code>, <code>SchemaArn</code>,\
              \ <code>CreatedAt</code>, <code>UpdatedAt</code>."
          title: schemaList
      title: ListSchemaMappingsOutput
      type: object
    ListTagsForResourceOutput:
      example:
        tags: ""
      properties:
        tags:
          allOf:
          - $ref: '#/components/schemas/TagMap'
          - description: "The tags used to organize, track, or control access for\
              \ this resource."
          title: tags
      required:
      - tags
      title: ListTagsForResourceOutput
      type: object
    StartMatchingJobOutput:
      example:
        jobId: ""
      properties:
        jobId:
          allOf:
          - $ref: '#/components/schemas/JobId'
          - description: The ID of the job.
          title: jobId
      required:
      - jobId
      title: StartMatchingJobOutput
      type: object
    TagResourceOutput:
      properties: {}
      type: object
    UntagResourceOutput:
      properties: {}
      type: object
    TagKey:
      maxLength: 128
      minLength: 1
      title: TagKey
      type: string
    UpdateMatchingWorkflowOutput:
      example:
        resolutionTechniques:
          resolutionType: ""
          ruleBasedProperties:
            rules: ""
            attributeMatchingModel: ""
        incrementalRunConfig:
          incrementalRunType: ""
        roleArn: ""
        description: ""
        inputSourceConfig: ""
        workflowName: ""
        outputSourceConfig: ""
      properties:
        description:
          allOf:
          - $ref: '#/components/schemas/Description'
          - description: A description of the workflow.
          title: description
        incrementalRunConfig:
          $ref: '#/components/schemas/CreateMatchingWorkflowOutput_incrementalRunConfig'
        inputSourceConfig:
          allOf:
          - $ref: '#/components/schemas/InputSourceConfig'
          - description: "A list of <code>InputSource</code> objects, which have the\
              \ fields <code>InputSourceARN</code> and <code>SchemaName</code>."
          title: inputSourceConfig
        outputSourceConfig:
          allOf:
          - $ref: '#/components/schemas/OutputSourceConfig'
          - description: "A list of <code>OutputSource</code> objects, each of which\
              \ contains fields <code>OutputS3Path</code>, <code>ApplyNormalization</code>,\
              \ and <code>Output</code>."
          title: outputSourceConfig
        resolutionTechniques:
          $ref: '#/components/schemas/CreateMatchingWorkflowOutput_resolutionTechniques'
        roleArn:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The Amazon Resource Name (ARN) of the IAM role. AWS Entity
              Resolution assumes this role to create resources on your behalf as part
              of workflow execution.
          title: roleArn
        workflowName:
          allOf:
          - $ref: '#/components/schemas/EntityName'
          - description: The name of the workflow.
          title: workflowName
      required:
      - inputSourceConfig
      - outputSourceConfig
      - resolutionTechniques
      - roleArn
      - workflowName
      title: UpdateMatchingWorkflowOutput
      type: object
    AttributeMatchingModel:
      enum:
      - ONE_TO_ONE
      - MANY_TO_MANY
      title: AttributeMatchingModel
      type: string
    AttributeName:
      maxLength: 255
      minLength: 0
      pattern: "^[a-zA-Z_0-9- \\t]*$"
      title: AttributeName
      type: string
    Boolean:
      type: boolean
    Description:
      maxLength: 255
      minLength: 0
      type: string
    IncrementalRunConfig:
      description: An object which defines an incremental run type and has only <code>incrementalRunType</code>
        as a field.
      properties:
        incrementalRunType:
          allOf:
          - $ref: '#/components/schemas/IncrementalRunType'
          - description: "The type of incremental run. It takes only one value: <code>IMMEDIATE</code>."
          title: incrementalRunType
      title: IncrementalRunConfig
      type: object
    InputSourceConfig:
      items:
        $ref: '#/components/schemas/InputSource'
      maxItems: 20
      minItems: 1
      type: array
    OutputSourceConfig:
      items:
        $ref: '#/components/schemas/OutputSource'
      maxItems: 1
      minItems: 1
      type: array
    ResolutionTechniques:
      description: 'An object which defines the <code>resolutionType</code> and the
        <code>ruleBasedProperties</code> '
      properties:
        resolutionType:
          allOf:
          - $ref: '#/components/schemas/ResolutionType'
          - description: "There are two types of matching, <code>RULE_MATCHING</code>\
              \ and <code>ML_MATCHING</code> "
          title: resolutionType
        ruleBasedProperties:
          $ref: '#/components/schemas/CreateMatchingWorkflow_request_resolutionTechniques_ruleBasedProperties'
      title: ResolutionTechniques
      type: object
    String:
      type: string
    TagMap:
      additionalProperties:
        $ref: '#/components/schemas/TagValue'
      maxProperties: 200
      minProperties: 0
      type: object
    EntityName:
      maxLength: 255
      minLength: 0
      pattern: "^[a-zA-Z_0-9-]*$"
      type: string
    CreateMatchingWorkflowInput:
      properties:
        description:
          allOf:
          - $ref: '#/components/schemas/Description'
          - description: A description of the workflow.
        incrementalRunConfig:
          $ref: '#/components/schemas/CreateMatchingWorkflowOutput_incrementalRunConfig'
        inputSourceConfig:
          allOf:
          - $ref: '#/components/schemas/InputSourceConfig'
          - description: "A list of <code>InputSource</code> objects, which have the\
              \ fields <code>InputSourceARN</code> and <code>SchemaName</code>."
        outputSourceConfig:
          allOf:
          - $ref: '#/components/schemas/OutputSourceConfig'
          - description: "A list of <code>OutputSource</code> objects, each of which\
              \ contains fields <code>OutputS3Path</code>, <code>ApplyNormalization</code>,\
              \ and <code>Output</code>."
        resolutionTechniques:
          $ref: '#/components/schemas/CreateMatchingWorkflowOutput_resolutionTechniques'
        roleArn:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The Amazon Resource Name (ARN) of the IAM role. AWS Entity
              Resolution assumes this role to create resources on your behalf as part
              of workflow execution.
        tags:
          allOf:
          - $ref: '#/components/schemas/TagMap'
          - description: "The tags used to organize, track, or control access for\
              \ this resource."
        workflowName:
          allOf:
          - $ref: '#/components/schemas/EntityName'
          - description: The name of the workflow. There cannot be multiple <code>DataIntegrationWorkflows</code>
              with the same name.
      required:
      - inputSourceConfig
      - outputSourceConfig
      - resolutionTechniques
      - roleArn
      - workflowName
      title: CreateMatchingWorkflowInput
      type: object
    MatchingWorkflowArn:
      pattern: "^arn:(aws|aws-us-gov|aws-cn):entityresolution:.*:[0-9]+:(matchingworkflow/.*)$"
      type: string
    SchemaInputAttributes:
      items:
        $ref: '#/components/schemas/SchemaInputAttribute'
      maxItems: 25
      minItems: 2
      type: array
    CreateSchemaMappingInput:
      properties:
        description:
          allOf:
          - $ref: '#/components/schemas/Description'
          - description: A description of the schema.
        mappedInputFields:
          allOf:
          - $ref: '#/components/schemas/SchemaInputAttributes'
          - description: "A list of <code>MappedInputFields</code>. Each <code>MappedInputField</code>\
              \ corresponds to a column the source data table, and contains column\
              \ name plus additional information that Entity Resolution uses for matching."
        schemaName:
          allOf:
          - $ref: '#/components/schemas/EntityName'
          - description: The name of the schema. There cannot be multiple <code>SchemaMappings</code>
              with the same name.
        tags:
          allOf:
          - $ref: '#/components/schemas/TagMap'
          - description: "The tags used to organize, track, or control access for\
              \ this resource."
      required:
      - schemaName
      title: CreateSchemaMappingInput
      type: object
    SchemaMappingArn:
      pattern: "^arn:(aws|aws-us-gov|aws-cn):entityresolution:.*:[0-9]+:(schemamapping/.*)$"
      type: string
    DeleteMatchingWorkflowInput:
      properties: {}
      title: DeleteMatchingWorkflowInput
      type: object
    DeleteSchemaMappingInput:
      properties: {}
      title: DeleteSchemaMappingInput
      type: object
    ErrorMessage:
      maxLength: 2048
      minLength: 1
      type: string
    ErrorDetails:
      description: "An object containing an error message, if there was an error."
      properties:
        errorMessage:
          allOf:
          - $ref: '#/components/schemas/ErrorMessage'
          - description: "The error message from the job, if there is one."
          title: errorMessage
      title: ErrorDetails
      type: object
    RecordAttributeMap:
      additionalProperties:
        $ref: '#/components/schemas/RecordAttributeMapValueString'
      type: object
    GetMatchIdInput:
      properties:
        record:
          allOf:
          - $ref: '#/components/schemas/RecordAttributeMap'
          - description: The record to fetch the Match ID for.
      required:
      - record
      title: GetMatchIdInput
      type: object
    JobId:
      pattern: "^[a-f0-9]{32}$"
      type: string
    GetMatchingJobInput:
      properties: {}
      title: GetMatchingJobInput
      type: object
    Timestamp:
      format: date-time
      type: string
    JobMetrics:
      description: "An object containing <code>InputRecords</code>, <code>TotalRecordsProcessed</code>,\
        \ <code>MatchIDs</code>, and <code>RecordsNotProcessed</code>."
      properties:
        inputRecords:
          allOf:
          - $ref: '#/components/schemas/Integer'
          - description: The total number of input records.
          title: inputRecords
        matchIDs:
          allOf:
          - $ref: '#/components/schemas/Integer'
          - description: The total number of <code>matchID</code>s generated.
          title: matchIDs
        recordsNotProcessed:
          allOf:
          - $ref: '#/components/schemas/Integer'
          - description: "The total number of records that did not get processed,"
          title: recordsNotProcessed
        totalRecordsProcessed:
          allOf:
          - $ref: '#/components/schemas/Integer'
          - description: The total number of records processed.
          title: totalRecordsProcessed
      title: JobMetrics
      type: object
    JobStatus:
      enum:
      - RUNNING
      - SUCCEEDED
      - FAILED
      - QUEUED
      title: JobStatus
      type: string
    GetMatchingWorkflowInput:
      properties: {}
      title: GetMatchingWorkflowInput
      type: object
    GetSchemaMappingInput:
      properties: {}
      title: GetSchemaMappingInput
      type: object
    InputSourceInputSourceARNString:
      pattern: "^arn:aws:.*:.*:[0-9]+:.*$"
      type: string
    Integer:
      type: integer
    JobSummary:
      description: "An object containing the <code>JobId</code>, <code>Status</code>,\
        \ <code>StartTime</code>, and <code>EndTime</code> of a job."
      properties:
        endTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          - description: The time at which the job has finished.
          title: endTime
        jobId:
          allOf:
          - $ref: '#/components/schemas/JobId'
          - description: The ID of the job.
          title: jobId
        startTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          - description: The time at which the job was started.
          title: startTime
        status:
          allOf:
          - $ref: '#/components/schemas/JobStatus'
          - description: "The current status of the job. Either <code>running</code>,\
              \ <code>succeeded</code>, <code>queued</code>, or <code>failed</code>."
          title: status
      required:
      - jobId
      - startTime
      - status
      title: JobSummary
      type: object
    JobList:
      items:
        $ref: '#/components/schemas/JobSummary'
      type: array
    KMSArn:
      pattern: "^arn:aws:kms:.*:[0-9]+:.*$"
      type: string
    ListMatchingJobsInputMaxResultsInteger:
      maximum: 25
      minimum: 1
      type: integer
    NextToken:
      maxLength: 1024
      minLength: 1
      pattern: "^[a-zA-Z_0-9-=+/]*$"
      type: string
    ListMatchingJobsInput:
      properties: {}
      title: ListMatchingJobsInput
      type: object
    ListMatchingWorkflowsInputMaxResultsInteger:
      maximum: 25
      type: integer
    ListMatchingWorkflowsInput:
      properties: {}
      title: ListMatchingWorkflowsInput
      type: object
    MatchingWorkflowList:
      items:
        $ref: '#/components/schemas/MatchingWorkflowSummary'
      type: array
    ListSchemaMappingsInputMaxResultsInteger:
      maximum: 25
      type: integer
    ListSchemaMappingsInput:
      properties: {}
      title: ListSchemaMappingsInput
      type: object
    SchemaMappingList:
      items:
        $ref: '#/components/schemas/SchemaMappingSummary'
      type: array
    VeniceGlobalArn:
      pattern: "^arn:(aws|aws-us-gov|aws-cn):(entityresolution):.*:[0-9]+:((schemamapping|matchingworkflow)/[a-zA-Z0-9_-]+)$"
      type: string
    ListTagsForResourceInput:
      properties: {}
      title: ListTagsForResourceInput
      type: object
    MatchingWorkflowSummary:
      description: "A list of <code>MatchingWorkflowSummary</code> objects, each of\
        \ which contain the fields <code>WorkflowName</code>, <code>WorkflowArn</code>,\
        \ <code>CreatedAt</code>, <code>UpdatedAt</code>."
      properties:
        createdAt:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          - description: The timestamp of when the workflow was created.
          title: createdAt
        updatedAt:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          - description: The timestamp of when the workflow was last updated.
          title: updatedAt
        workflowArn:
          allOf:
          - $ref: '#/components/schemas/MatchingWorkflowArn'
          - description: The ARN (Amazon Resource Name) that Entity Resolution generated
              for the <code>MatchingWorkflow</code>.
          title: workflowArn
        workflowName:
          allOf:
          - $ref: '#/components/schemas/EntityName'
          - description: The name of the workflow.
          title: workflowName
      required:
      - createdAt
      - updatedAt
      - workflowArn
      - workflowName
      title: MatchingWorkflowSummary
      type: object
    OutputAttribute:
      description: "A list of <code>OutputAttribute</code> objects, each of which\
        \ have the fields Name and Hashed. Each of these objects selects a column\
        \ to be included in the output table, and whether the values of the column\
        \ should be hashed."
      properties:
        hashed:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          - description: Enables the ability to hash the column values in the output.
          title: hashed
        name:
          allOf:
          - $ref: '#/components/schemas/AttributeName'
          - description: A name of a column to be written to the output. This must
              be an <code>InputField</code> name in the schema mapping.
          title: name
      required:
      - name
      title: OutputAttribute
      type: object
    OutputSourceOutputList:
      items:
        $ref: '#/components/schemas/OutputAttribute'
      maxItems: 750
      minItems: 0
      type: array
    OutputSourceOutputS3PathString:
      pattern: "^s3://([^/]+)/?(.*?([^/]+)/?)$"
      type: string
    RecordAttributeMapKeyString:
      maxLength: 255
      minLength: 0
      pattern: "^[a-zA-Z_0-9- \\t]*$"
      type: string
    RuleMatchingKeysList:
      items:
        $ref: '#/components/schemas/AttributeName'
      maxItems: 15
      minItems: 1
      type: array
    RuleRuleNameString:
      maxLength: 255
      minLength: 0
      pattern: "^[a-zA-Z_0-9- \\t]*$"
      type: string
    Rule:
      description: "An object containing <code>RuleName</code>, and <code>MatchingKeys</code>."
      properties:
        matchingKeys:
          allOf:
          - $ref: '#/components/schemas/RuleMatchingKeysList'
          - description: A list of <code>MatchingKeys</code>. The <code>MatchingKeys</code>
              must have been defined in the <code>SchemaMapping</code>. Two records
              are considered to match according to this rule if all of the <code>MatchingKeys</code>
              match.
          title: matchingKeys
        ruleName:
          allOf:
          - $ref: '#/components/schemas/RuleRuleNameString'
          - description: A name for the matching rule.
          title: ruleName
      required:
      - matchingKeys
      - ruleName
      title: Rule
      type: object
    RuleBasedPropertiesRulesList:
      items:
        $ref: '#/components/schemas/Rule'
      maxItems: 15
      minItems: 1
      type: array
    SchemaAttributeType:
      enum:
      - NAME
      - NAME_FIRST
      - NAME_MIDDLE
      - NAME_LAST
      - ADDRESS
      - ADDRESS_STREET1
      - ADDRESS_STREET2
      - ADDRESS_STREET3
      - ADDRESS_CITY
      - ADDRESS_STATE
      - ADDRESS_COUNTRY
      - ADDRESS_POSTALCODE
      - PHONE
      - PHONE_NUMBER
      - PHONE_COUNTRYCODE
      - EMAIL_ADDRESS
      - UNIQUE_ID
      - DATE
      - STRING
      title: SchemaAttributeType
      type: string
    SchemaMappingSummary:
      description: "An object containing <code>SchemaName</code>, <code>SchemaArn</code>,\
        \ <code>CreatedAt</code>, and<code>UpdatedAt</code>."
      properties:
        createdAt:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          - description: The timestamp of when the <code>SchemaMapping</code> was
              created.
          title: createdAt
        schemaArn:
          allOf:
          - $ref: '#/components/schemas/SchemaMappingArn'
          - description: The ARN (Amazon Resource Name) that Entity Resolution generated
              for the <code>SchemaMapping</code>.
          title: schemaArn
        schemaName:
          allOf:
          - $ref: '#/components/schemas/EntityName'
          - description: The name of the schema.
          title: schemaName
        updatedAt:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          - description: The timestamp of when the <code>SchemaMapping</code> was
              last updated.
          title: updatedAt
      required:
      - createdAt
      - schemaArn
      - schemaName
      - updatedAt
      title: SchemaMappingSummary
      type: object
    StartMatchingJobInput:
      properties: {}
      title: StartMatchingJobInput
      type: object
    TagKeyList:
      items:
        $ref: '#/components/schemas/TagKey'
      maxItems: 200
      minItems: 0
      type: array
    TagResourceInput:
      properties:
        tags:
          allOf:
          - $ref: '#/components/schemas/TagMap'
          - description: "The tags used to organize, track, or control access for\
              \ this resource."
      required:
      - tags
      title: TagResourceInput
      type: object
    UntagResourceInput:
      properties: {}
      title: UntagResourceInput
      type: object
    UpdateMatchingWorkflowInput:
      properties:
        description:
          allOf:
          - $ref: '#/components/schemas/Description'
          - description: A description of the workflow.
        incrementalRunConfig:
          $ref: '#/components/schemas/CreateMatchingWorkflowOutput_incrementalRunConfig'
        inputSourceConfig:
          allOf:
          - $ref: '#/components/schemas/InputSourceConfig'
          - description: "A list of <code>InputSource</code> objects, which have the\
              \ fields <code>InputSourceARN</code> and <code>SchemaName</code>."
        outputSourceConfig:
          allOf:
          - $ref: '#/components/schemas/OutputSourceConfig'
          - description: "A list of <code>OutputSource</code> objects, each of which\
              \ contains fields <code>OutputS3Path</code>, <code>ApplyNormalization</code>,\
              \ and <code>Output</code>."
        resolutionTechniques:
          $ref: '#/components/schemas/CreateMatchingWorkflowOutput_resolutionTechniques'
        roleArn:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The Amazon Resource Name (ARN) of the IAM role. AWS Entity
              Resolution assumes this role to create resources on your behalf as part
              of workflow execution.
      required:
      - inputSourceConfig
      - outputSourceConfig
      - resolutionTechniques
      - roleArn
      title: UpdateMatchingWorkflowInput
      type: object
    CreateMatchingWorkflow_request_incrementalRunConfig:
      description: An object which defines an incremental run type and has only <code>incrementalRunType</code>
        as a field.
      properties:
        incrementalRunType:
          allOf:
          - $ref: '#/components/schemas/IncrementalRunType'
          - description: "The type of incremental run. It takes only one value: <code>IMMEDIATE</code>."
          title: incrementalRunType
      title: CreateMatchingWorkflow_request_incrementalRunConfig
      type: object
    CreateMatchingWorkflow_request_resolutionTechniques_ruleBasedProperties:
      allOf:
      - $ref: '#/components/schemas/RuleBasedProperties'
      - description: "An object which defines the list of matching rules to run and\
          \ has a field <code>Rules</code>, which is a list of rule objects."
      example:
        rules: ""
        attributeMatchingModel: ""
      title: CreateMatchingWorkflow_request_resolutionTechniques_ruleBasedProperties
    CreateMatchingWorkflow_request_resolutionTechniques:
      description: 'An object which defines the <code>resolutionType</code> and the
        <code>ruleBasedProperties</code> '
      properties:
        resolutionType:
          allOf:
          - $ref: '#/components/schemas/ResolutionType'
          - description: "There are two types of matching, <code>RULE_MATCHING</code>\
              \ and <code>ML_MATCHING</code> "
          title: resolutionType
        ruleBasedProperties:
          $ref: '#/components/schemas/CreateMatchingWorkflow_request_resolutionTechniques_ruleBasedProperties'
      title: CreateMatchingWorkflow_request_resolutionTechniques
      type: object
    CreateMatchingWorkflow_request:
      properties:
        description:
          description: A description of the workflow.
          maxLength: 255
          minLength: 0
          title: description
          type: string
        incrementalRunConfig:
          $ref: '#/components/schemas/CreateMatchingWorkflow_request_incrementalRunConfig'
        inputSourceConfig:
          description: "A list of <code>InputSource</code> objects, which have the\
            \ fields <code>InputSourceARN</code> and <code>SchemaName</code>."
          items:
            $ref: '#/components/schemas/InputSource'
          maxItems: 20
          minItems: 1
          title: inputSourceConfig
          type: array
        outputSourceConfig:
          description: "A list of <code>OutputSource</code> objects, each of which\
            \ contains fields <code>OutputS3Path</code>, <code>ApplyNormalization</code>,\
            \ and <code>Output</code>."
          items:
            $ref: '#/components/schemas/OutputSource'
          maxItems: 1
          minItems: 1
          title: outputSourceConfig
          type: array
        resolutionTechniques:
          $ref: '#/components/schemas/CreateMatchingWorkflow_request_resolutionTechniques'
        roleArn:
          description: The Amazon Resource Name (ARN) of the IAM role. AWS Entity
            Resolution assumes this role to create resources on your behalf as part
            of workflow execution.
          title: roleArn
          type: string
        tags:
          additionalProperties:
            $ref: '#/components/schemas/TagValue'
          description: "The tags used to organize, track, or control access for this\
            \ resource."
          maxProperties: 200
          minProperties: 0
          title: tags
          type: object
        workflowName:
          description: The name of the workflow. There cannot be multiple <code>DataIntegrationWorkflows</code>
            with the same name.
          maxLength: 255
          minLength: 0
          pattern: "^[a-zA-Z_0-9-]*$"
          title: workflowName
          type: string
      required:
      - inputSourceConfig
      - outputSourceConfig
      - resolutionTechniques
      - roleArn
      - workflowName
      title: CreateMatchingWorkflow_request
      type: object
    CreateSchemaMapping_request:
      properties:
        description:
          description: A description of the schema.
          maxLength: 255
          minLength: 0
          title: description
          type: string
        mappedInputFields:
          description: "A list of <code>MappedInputFields</code>. Each <code>MappedInputField</code>\
            \ corresponds to a column the source data table, and contains column name\
            \ plus additional information that Entity Resolution uses for matching."
          items:
            $ref: '#/components/schemas/SchemaInputAttribute'
          maxItems: 25
          minItems: 2
          title: mappedInputFields
          type: array
        schemaName:
          description: The name of the schema. There cannot be multiple <code>SchemaMappings</code>
            with the same name.
          maxLength: 255
          minLength: 0
          pattern: "^[a-zA-Z_0-9-]*$"
          title: schemaName
          type: string
        tags:
          additionalProperties:
            $ref: '#/components/schemas/TagValue'
          description: "The tags used to organize, track, or control access for this\
            \ resource."
          maxProperties: 200
          minProperties: 0
          title: tags
          type: object
      required:
      - schemaName
      title: CreateSchemaMapping_request
      type: object
    UpdateMatchingWorkflow_request:
      properties:
        description:
          description: A description of the workflow.
          maxLength: 255
          minLength: 0
          title: description
          type: string
        incrementalRunConfig:
          $ref: '#/components/schemas/CreateMatchingWorkflow_request_incrementalRunConfig'
        inputSourceConfig:
          description: "A list of <code>InputSource</code> objects, which have the\
            \ fields <code>InputSourceARN</code> and <code>SchemaName</code>."
          items:
            $ref: '#/components/schemas/InputSource'
          maxItems: 20
          minItems: 1
          title: inputSourceConfig
          type: array
        outputSourceConfig:
          description: "A list of <code>OutputSource</code> objects, each of which\
            \ contains fields <code>OutputS3Path</code>, <code>ApplyNormalization</code>,\
            \ and <code>Output</code>."
          items:
            $ref: '#/components/schemas/OutputSource'
          maxItems: 1
          minItems: 1
          title: outputSourceConfig
          type: array
        resolutionTechniques:
          $ref: '#/components/schemas/CreateMatchingWorkflow_request_resolutionTechniques'
        roleArn:
          description: The Amazon Resource Name (ARN) of the IAM role. AWS Entity
            Resolution assumes this role to create resources on your behalf as part
            of workflow execution.
          title: roleArn
          type: string
      required:
      - inputSourceConfig
      - outputSourceConfig
      - resolutionTechniques
      - roleArn
      title: UpdateMatchingWorkflow_request
      type: object
    GetMatchId_request:
      properties:
        record:
          additionalProperties:
            $ref: '#/components/schemas/RecordAttributeMapValueString'
          description: The record to fetch the Match ID for.
          title: record
          type: object
      required:
      - record
      title: GetMatchId_request
      type: object
    TagResource_request:
      properties:
        tags:
          additionalProperties:
            $ref: '#/components/schemas/TagValue'
          description: "The tags used to organize, track, or control access for this\
            \ resource."
          maxProperties: 200
          minProperties: 0
          title: tags
          type: object
      required:
      - tags
      title: TagResource_request
      type: object
    CreateMatchingWorkflowOutput_incrementalRunConfig:
      allOf:
      - $ref: '#/components/schemas/IncrementalRunConfig'
      - description: An object which defines an incremental run type and has only
          <code>incrementalRunType</code> as a field.
      example:
        incrementalRunType: ""
      title: CreateMatchingWorkflowOutput_incrementalRunConfig
    CreateMatchingWorkflowOutput_resolutionTechniques:
      allOf:
      - $ref: '#/components/schemas/ResolutionTechniques'
      - description: 'An object which defines the <code>resolutionType</code> and
          the <code>ruleBasedProperties</code> '
      example:
        resolutionType: ""
        ruleBasedProperties:
          rules: ""
          attributeMatchingModel: ""
      title: CreateMatchingWorkflowOutput_resolutionTechniques
    GetMatchingJobOutput_errorDetails:
      allOf:
      - $ref: '#/components/schemas/ErrorDetails'
      - description: "An object containing an error message, if there was an error."
      example:
        errorMessage: ""
      title: GetMatchingJobOutput_errorDetails
    GetMatchingJobOutput_metrics:
      allOf:
      - $ref: '#/components/schemas/JobMetrics'
      - description: "Metrics associated with the execution, specifically total records\
          \ processed, unique IDs generated, and records the execution skipped."
      example:
        matchIDs: ""
        inputRecords: ""
        recordsNotProcessed: ""
        totalRecordsProcessed: ""
      title: GetMatchingJobOutput_metrics
  securitySchemes:
    hmac:
      description: Amazon Signature authorization v4
      in: header
      name: Authorization
      type: apiKey
      x-amazon-apigateway-authtype: awsSigv4
      x-apikeyInfoFunc: openapi_server.controllers.security_controller.info_from_hmac
x-hasEquivalentPaths: true
