# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class SchemaAttributeType(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    """
    allowed enum values
    """
    NAME = 'NAME'
    NAME_FIRST = 'NAME_FIRST'
    NAME_MIDDLE = 'NAME_MIDDLE'
    NAME_LAST = 'NAME_LAST'
    ADDRESS = 'ADDRESS'
    ADDRESS_STREET1 = 'ADDRESS_STREET1'
    ADDRESS_STREET2 = 'ADDRESS_STREET2'
    ADDRESS_STREET3 = 'ADDRESS_STREET3'
    ADDRESS_CITY = 'ADDRESS_CITY'
    ADDRESS_STATE = 'ADDRESS_STATE'
    ADDRESS_COUNTRY = 'ADDRESS_COUNTRY'
    ADDRESS_POSTALCODE = 'ADDRESS_POSTALCODE'
    PHONE = 'PHONE'
    PHONE_NUMBER = 'PHONE_NUMBER'
    PHONE_COUNTRYCODE = 'PHONE_COUNTRYCODE'
    EMAIL_ADDRESS = 'EMAIL_ADDRESS'
    UNIQUE_ID = 'UNIQUE_ID'
    DATE = 'DATE'
    STRING = 'STRING'

    def __init__(self):
        """SchemaAttributeType - a model defined in OpenAPI

        """
        self.openapi_types = {
        }

        self.attribute_map = {
        }

    @classmethod
    def from_dict(cls, dikt: dict) -> 'SchemaAttributeType':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The SchemaAttributeType of this SchemaAttributeType.
        """
        return util.deserialize_model(dikt, cls)
