# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class MatchingWorkflowSummary(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, created_at: datetime=None, updated_at: datetime=None, workflow_arn: str=None, workflow_name: str=None):
        """MatchingWorkflowSummary - a model defined in OpenAPI

        :param created_at: The created_at of this MatchingWorkflowSummary.
        :param updated_at: The updated_at of this MatchingWorkflowSummary.
        :param workflow_arn: The workflow_arn of this MatchingWorkflowSummary.
        :param workflow_name: The workflow_name of this MatchingWorkflowSummary.
        """
        self.openapi_types = {
            'created_at': datetime,
            'updated_at': datetime,
            'workflow_arn': str,
            'workflow_name': str
        }

        self.attribute_map = {
            'created_at': 'createdAt',
            'updated_at': 'updatedAt',
            'workflow_arn': 'workflowArn',
            'workflow_name': 'workflowName'
        }

        self._created_at = created_at
        self._updated_at = updated_at
        self._workflow_arn = workflow_arn
        self._workflow_name = workflow_name

    @classmethod
    def from_dict(cls, dikt: dict) -> 'MatchingWorkflowSummary':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The MatchingWorkflowSummary of this MatchingWorkflowSummary.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def created_at(self):
        """Gets the created_at of this MatchingWorkflowSummary.


        :return: The created_at of this MatchingWorkflowSummary.
        :rtype: datetime
        """
        return self._created_at

    @created_at.setter
    def created_at(self, created_at):
        """Sets the created_at of this MatchingWorkflowSummary.


        :param created_at: The created_at of this MatchingWorkflowSummary.
        :type created_at: datetime
        """
        if created_at is None:
            raise ValueError("Invalid value for `created_at`, must not be `None`")

        self._created_at = created_at

    @property
    def updated_at(self):
        """Gets the updated_at of this MatchingWorkflowSummary.


        :return: The updated_at of this MatchingWorkflowSummary.
        :rtype: datetime
        """
        return self._updated_at

    @updated_at.setter
    def updated_at(self, updated_at):
        """Sets the updated_at of this MatchingWorkflowSummary.


        :param updated_at: The updated_at of this MatchingWorkflowSummary.
        :type updated_at: datetime
        """
        if updated_at is None:
            raise ValueError("Invalid value for `updated_at`, must not be `None`")

        self._updated_at = updated_at

    @property
    def workflow_arn(self):
        """Gets the workflow_arn of this MatchingWorkflowSummary.


        :return: The workflow_arn of this MatchingWorkflowSummary.
        :rtype: str
        """
        return self._workflow_arn

    @workflow_arn.setter
    def workflow_arn(self, workflow_arn):
        """Sets the workflow_arn of this MatchingWorkflowSummary.


        :param workflow_arn: The workflow_arn of this MatchingWorkflowSummary.
        :type workflow_arn: str
        """
        if workflow_arn is None:
            raise ValueError("Invalid value for `workflow_arn`, must not be `None`")

        self._workflow_arn = workflow_arn

    @property
    def workflow_name(self):
        """Gets the workflow_name of this MatchingWorkflowSummary.


        :return: The workflow_name of this MatchingWorkflowSummary.
        :rtype: str
        """
        return self._workflow_name

    @workflow_name.setter
    def workflow_name(self, workflow_name):
        """Sets the workflow_name of this MatchingWorkflowSummary.


        :param workflow_name: The workflow_name of this MatchingWorkflowSummary.
        :type workflow_name: str
        """
        if workflow_name is None:
            raise ValueError("Invalid value for `workflow_name`, must not be `None`")

        self._workflow_name = workflow_name
