openapi: 3.0.0
info:
  contact:
    email: mike.ralphson@gmail.com
    name: Mike Ralphson
    url: https://github.com/mermade/aws2openapi
    x-twitter: PermittedSoc
  description: The frontend service for Cryo Storage.
  license:
    name: Apache 2.0 License
    url: http://www.apache.org/licenses/
  termsOfService: https://aws.amazon.com/service-terms/
  title: AWS Backup Storage
  version: 2018-04-10
  x-release: v4
  x-logo:
    url: https://twitter.com/awscloud/profile_image?size=original
    backgroundColor: '#FFFFFF'
  x-providerName: amazonaws.com
  x-serviceName: backupstorage
  x-aws-signingName: backup-storage
  x-origin:
  - contentType: application/json
    url: https://raw.githubusercontent.com/aws/aws-sdk-js/master/apis/backupstorage-2018-04-10.normal.json
    converter:
      url: https://github.com/mermade/aws2openapi
      version: 1.0.0
    x-apisguru-driver: external
  x-apiClientRegistration:
    url: https://portal.aws.amazon.com/gp/aws/developer/registration/index.html?nc2=h_ct
  x-apisguru-categories:
  - cloud
  x-preferred: true
externalDocs:
  description: Amazon Web Services documentation
  url: https://docs.aws.amazon.com/backupstorage/
servers:
- description: The AWS Backup Storage multi-region endpoint
  url: "http://backupstorage.{region}.amazonaws.com"
  variables:
    region:
      default: us-east-1
      description: The AWS region
      enum:
      - us-east-1
      - us-east-2
      - us-west-1
      - us-west-2
      - us-gov-west-1
      - us-gov-east-1
      - ca-central-1
      - eu-north-1
      - eu-west-1
      - eu-west-2
      - eu-west-3
      - eu-central-1
      - eu-south-1
      - af-south-1
      - ap-northeast-1
      - ap-northeast-2
      - ap-northeast-3
      - ap-southeast-1
      - ap-southeast-2
      - ap-east-1
      - ap-south-1
      - sa-east-1
      - me-south-1
- description: The AWS Backup Storage multi-region endpoint
  url: "https://backupstorage.{region}.amazonaws.com"
  variables:
    region:
      default: us-east-1
      description: The AWS region
      enum:
      - us-east-1
      - us-east-2
      - us-west-1
      - us-west-2
      - us-gov-west-1
      - us-gov-east-1
      - ca-central-1
      - eu-north-1
      - eu-west-1
      - eu-west-2
      - eu-west-3
      - eu-central-1
      - eu-south-1
      - af-south-1
      - ap-northeast-1
      - ap-northeast-2
      - ap-northeast-3
      - ap-southeast-1
      - ap-southeast-2
      - ap-east-1
      - ap-south-1
      - sa-east-1
      - me-south-1
- description: The AWS Backup Storage endpoint for China (Beijing) and China (Ningxia)
  url: "http://backupstorage.{region}.amazonaws.com.cn"
  variables:
    region:
      default: cn-north-1
      description: The AWS region
      enum:
      - cn-north-1
      - cn-northwest-1
- description: The AWS Backup Storage endpoint for China (Beijing) and China (Ningxia)
  url: "https://backupstorage.{region}.amazonaws.com.cn"
  variables:
    region:
      default: cn-north-1
      description: The AWS region
      enum:
      - cn-north-1
      - cn-northwest-1
security:
- hmac: []
paths:
  /backup-jobs/{jobId}/object/{objectName}:
    delete:
      description: Delete Object from the incremental base Backup.
      operationId: DeleteObject
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: Backup job Id for the in-progress backup.
        explode: false
        in: path
        name: jobId
        required: true
        schema:
          type: string
        style: simple
      - description: The name of the Object.
        explode: false
        in: path
        name: objectName
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
          description: ServiceUnavailableException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceInternalException'
          description: ServiceInternalException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RetryableException'
          description: RetryableException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IllegalArgumentException'
          description: IllegalArgumentException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
        "486":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
      x-accepts:
      - application/json
    put:
      description: Start upload containing one or many chunks.
      operationId: StartObject
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: Backup job Id for the in-progress backup
        explode: false
        in: path
        name: jobId
        required: true
        schema:
          type: string
        style: simple
      - description: Name for the object.
        explode: false
        in: path
        name: objectName
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StartObject_request'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StartObjectOutput'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
          description: ServiceUnavailableException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceInternalException'
          description: ServiceInternalException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RetryableException'
          description: RetryableException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IllegalArgumentException'
          description: IllegalArgumentException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DataAlreadyExistsException'
          description: DataAlreadyExistsException
        "486":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
        "487":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
      x-content-type: application/json
      x-accepts:
      - application/json
  /restore-jobs/{jobId}/chunk/{chunkToken}:
    get:
      description: Gets the specified object's chunk.
      operationId: GetChunk
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: Storage job id
        explode: false
        in: path
        name: jobId
        required: true
        schema:
          type: string
        style: simple
      - description: Chunk token
        explode: false
        in: path
        name: chunkToken
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetChunkOutput'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IllegalArgumentException'
          description: IllegalArgumentException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RetryableException'
          description: RetryableException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceInternalException'
          description: ServiceInternalException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/KMSInvalidKeyUsageException'
          description: KMSInvalidKeyUsageException
        "486":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
      x-accepts:
      - application/json
  /restore-jobs/{jobId}/object/{objectToken}/metadata:
    get:
      description: Get metadata associated with an Object.
      operationId: GetObjectMetadata
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: Backup job id for the in-progress backup.
        explode: false
        in: path
        name: jobId
        required: true
        schema:
          type: string
        style: simple
      - description: Object token.
        explode: false
        in: path
        name: objectToken
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetObjectMetadataOutput'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
          description: ServiceUnavailableException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceInternalException'
          description: ServiceInternalException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RetryableException'
          description: RetryableException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IllegalArgumentException'
          description: IllegalArgumentException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
        "486":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/KMSInvalidKeyUsageException'
          description: KMSInvalidKeyUsageException
        "487":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
      x-accepts:
      - application/json
  /restore-jobs/{jobId}/chunks/{objectToken}/list:
    get:
      description: List chunks in a given Object
      operationId: ListChunks
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: Storage job id
        explode: false
        in: path
        name: jobId
        required: true
        schema:
          type: string
        style: simple
      - description: Object token
        explode: false
        in: path
        name: objectToken
        required: true
        schema:
          type: string
        style: simple
      - description: Maximum number of chunks
        explode: true
        in: query
        name: max-results
        required: false
        schema:
          maximum: 100
          minimum: 1
          type: integer
        style: form
      - description: Pagination token
        explode: true
        in: query
        name: next-token
        required: false
        schema:
          type: string
        style: form
      - description: Pagination limit
        explode: true
        in: query
        name: MaxResults
        required: false
        schema:
          type: string
        style: form
      - description: Pagination token
        explode: true
        in: query
        name: NextToken
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListChunksOutput'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
          description: ServiceUnavailableException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceInternalException'
          description: ServiceInternalException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RetryableException'
          description: RetryableException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IllegalArgumentException'
          description: IllegalArgumentException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
      x-accepts:
      - application/json
  /restore-jobs/{jobId}/objects/list:
    get:
      description: List all Objects in a given Backup.
      operationId: ListObjects
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: Storage job id
        explode: false
        in: path
        name: jobId
        required: true
        schema:
          type: string
        style: simple
      - description: "Optional, specifies the starting Object name to list from. Ignored\
          \ if NextToken is not NULL"
        explode: true
        in: query
        name: starting-object-name
        required: false
        schema:
          type: string
        style: form
      - description: "Optional, specifies the starting Object prefix to list from.\
          \ Ignored if NextToken is not NULL"
        explode: true
        in: query
        name: starting-object-prefix
        required: false
        schema:
          type: string
        style: form
      - description: Maximum objects count
        explode: true
        in: query
        name: max-results
        required: false
        schema:
          maximum: 100
          minimum: 1
          type: integer
        style: form
      - description: Pagination token
        explode: true
        in: query
        name: next-token
        required: false
        schema:
          type: string
        style: form
      - description: (Optional) Created before filter
        explode: true
        in: query
        name: created-before
        required: false
        schema:
          format: date-time
          type: string
        style: form
      - description: (Optional) Created after filter
        explode: true
        in: query
        name: created-after
        required: false
        schema:
          format: date-time
          type: string
        style: form
      - description: Pagination limit
        explode: true
        in: query
        name: MaxResults
        required: false
        schema:
          type: string
        style: form
      - description: Pagination token
        explode: true
        in: query
        name: NextToken
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListObjectsOutput'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
          description: ServiceUnavailableException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceInternalException'
          description: ServiceInternalException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RetryableException'
          description: RetryableException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IllegalArgumentException'
          description: IllegalArgumentException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "486":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/KMSInvalidKeyUsageException'
          description: KMSInvalidKeyUsageException
        "487":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
      x-accepts:
      - application/json
  /backup-jobs/{jobId}/object/{uploadId}/complete#checksum&checksum-algorithm:
    put:
      description: Complete upload
      operationId: NotifyObjectComplete
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: Backup job Id for the in-progress backup
        explode: false
        in: path
        name: jobId
        required: true
        schema:
          type: string
        style: simple
      - description: Upload Id for the in-progress upload
        explode: false
        in: path
        name: uploadId
        required: true
        schema:
          type: string
        style: simple
      - description: Object checksum
        explode: true
        in: query
        name: checksum
        required: true
        schema:
          type: string
        style: form
      - description: Checksum algorithm
        explode: true
        in: query
        name: checksum-algorithm
        required: true
        schema:
          enum:
          - SUMMARY
          type: string
        style: form
      - description: Optional metadata associated with an Object. Maximum string length
          is 256 bytes.
        explode: true
        in: query
        name: metadata-string
        required: false
        schema:
          pattern: "^.{1,256}$"
          type: string
        style: form
      - description: The size of MetadataBlob.
        explode: true
        in: query
        name: metadata-blob-length
        required: false
        schema:
          type: integer
        style: form
      - description: Checksum of MetadataBlob.
        explode: true
        in: query
        name: metadata-checksum
        required: false
        schema:
          type: string
        style: form
      - description: Checksum algorithm.
        explode: true
        in: query
        name: metadata-checksum-algorithm
        required: false
        schema:
          enum:
          - SHA256
          type: string
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NotifyObjectComplete_request'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotifyObjectCompleteOutput'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
          description: ServiceUnavailableException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceInternalException'
          description: ServiceInternalException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotReadableInputStreamException'
          description: NotReadableInputStreamException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RetryableException'
          description: RetryableException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IllegalArgumentException'
          description: IllegalArgumentException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
        "486":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/KMSInvalidKeyUsageException'
          description: KMSInvalidKeyUsageException
        "487":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
      x-content-type: application/json
      x-accepts:
      - application/json
  /backup-jobs/{jobId}/chunk/{uploadId}/{chunkIndex}#length&checksum&checksum-algorithm:
    put:
      description: Upload chunk.
      operationId: PutChunk
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: Backup job Id for the in-progress backup.
        explode: false
        in: path
        name: jobId
        required: true
        schema:
          type: string
        style: simple
      - description: Upload Id for the in-progress upload.
        explode: false
        in: path
        name: uploadId
        required: true
        schema:
          type: string
        style: simple
      - description: Describes this chunk's position relative to the other chunks
        explode: false
        in: path
        name: chunkIndex
        required: true
        schema:
          type: integer
        style: simple
      - description: Data length
        explode: true
        in: query
        name: length
        required: true
        schema:
          type: integer
        style: form
      - description: Data checksum
        explode: true
        in: query
        name: checksum
        required: true
        schema:
          type: string
        style: form
      - description: Checksum algorithm
        explode: true
        in: query
        name: checksum-algorithm
        required: true
        schema:
          enum:
          - SHA256
          type: string
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PutChunk_request'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PutChunkOutput'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
          description: ServiceUnavailableException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceInternalException'
          description: ServiceInternalException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotReadableInputStreamException'
          description: NotReadableInputStreamException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RetryableException'
          description: RetryableException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IllegalArgumentException'
          description: IllegalArgumentException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
        "486":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/KMSInvalidKeyUsageException'
          description: KMSInvalidKeyUsageException
        "487":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
      x-content-type: application/json
      x-accepts:
      - application/json
  /backup-jobs/{jobId}/object/{objectName}/put-object:
    put:
      description: Upload object that can store object metadata String and data blob
        in single API call using inline chunk field.
      operationId: PutObject
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: Backup job Id for the in-progress backup.
        explode: false
        in: path
        name: jobId
        required: true
        schema:
          type: string
        style: simple
      - description: The name of the Object to be uploaded.
        explode: false
        in: path
        name: objectName
        required: true
        schema:
          type: string
        style: simple
      - description: "Store user defined metadata like backup checksum, disk ids,\
          \ restore metadata etc."
        explode: true
        in: query
        name: metadata-string
        required: false
        schema:
          type: string
        style: form
      - description: Length of the inline chunk data.
        explode: true
        in: query
        name: length
        required: false
        schema:
          type: integer
        style: form
      - description: Inline chunk checksum
        explode: true
        in: query
        name: checksum
        required: false
        schema:
          type: string
        style: form
      - description: Inline chunk checksum algorithm
        explode: true
        in: query
        name: checksum-algorithm
        required: false
        schema:
          type: string
        style: form
      - description: object checksum
        explode: true
        in: query
        name: object-checksum
        required: false
        schema:
          type: string
        style: form
      - description: object checksum algorithm
        explode: true
        in: query
        name: object-checksum-algorithm
        required: false
        schema:
          enum:
          - SUMMARY
          type: string
        style: form
      - description: Throw an exception if Object name is already exist.
        explode: true
        in: query
        name: throwOnDuplicate
        required: false
        schema:
          type: boolean
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PutObject_request'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PutObjectOutput'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
          description: ServiceUnavailableException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceInternalException'
          description: ServiceInternalException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotReadableInputStreamException'
          description: NotReadableInputStreamException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RetryableException'
          description: RetryableException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IllegalArgumentException'
          description: IllegalArgumentException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
        "486":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/KMSInvalidKeyUsageException'
          description: KMSInvalidKeyUsageException
        "487":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
      x-content-type: application/json
      x-accepts:
      - application/json
components:
  parameters:
    X-Amz-Content-Sha256:
      explode: false
      in: header
      name: X-Amz-Content-Sha256
      required: false
      schema:
        type: string
      style: simple
    X-Amz-Date:
      explode: false
      in: header
      name: X-Amz-Date
      required: false
      schema:
        type: string
      style: simple
    X-Amz-Algorithm:
      explode: false
      in: header
      name: X-Amz-Algorithm
      required: false
      schema:
        type: string
      style: simple
    X-Amz-Credential:
      explode: false
      in: header
      name: X-Amz-Credential
      required: false
      schema:
        type: string
      style: simple
    X-Amz-Security-Token:
      explode: false
      in: header
      name: X-Amz-Security-Token
      required: false
      schema:
        type: string
      style: simple
    X-Amz-Signature:
      explode: false
      in: header
      name: X-Amz-Signature
      required: false
      schema:
        type: string
      style: simple
    X-Amz-SignedHeaders:
      explode: false
      in: header
      name: X-Amz-SignedHeaders
      required: false
      schema:
        type: string
      style: simple
  schemas:
    ServiceUnavailableException: {}
    ServiceInternalException: {}
    RetryableException: {}
    IllegalArgumentException: {}
    ResourceNotFoundException: {}
    ThrottlingException: {}
    AccessDeniedException: {}
    GetChunkOutput:
      example:
        Data: ""
      properties:
        Data:
          allOf:
          - $ref: '#/components/schemas/PayloadBlob'
          - description: Chunk data
      required:
      - Data
      type: object
    KMSInvalidKeyUsageException: {}
    GetObjectMetadataOutput:
      example:
        MetadataBlob: ""
      properties:
        MetadataBlob:
          allOf:
          - $ref: '#/components/schemas/PayloadBlob'
          - description: Metadata blob.
      type: object
    ListChunksOutput:
      example:
        ChunkList: ""
        NextToken: ""
      properties:
        ChunkList:
          allOf:
          - $ref: '#/components/schemas/ChunkList'
          - description: List of chunks
        NextToken:
          allOf:
          - $ref: '#/components/schemas/string'
          - description: Pagination token
      required:
      - ChunkList
      type: object
    ListObjectsOutput:
      example:
        NextToken: ""
        ObjectList: ""
      properties:
        ObjectList:
          allOf:
          - $ref: '#/components/schemas/ObjectList'
          - description: Object list
        NextToken:
          allOf:
          - $ref: '#/components/schemas/string'
          - description: Pagination token
      required:
      - ObjectList
      type: object
    NotifyObjectCompleteOutput:
      example:
        ObjectChecksum: ""
        ObjectChecksumAlgorithm: ""
      properties:
        ObjectChecksum:
          allOf:
          - $ref: '#/components/schemas/string'
          - description: Object checksum
        ObjectChecksumAlgorithm:
          allOf:
          - $ref: '#/components/schemas/SummaryChecksumAlgorithm'
          - description: Checksum algorithm
      required:
      - ObjectChecksum
      - ObjectChecksumAlgorithm
      type: object
    NotReadableInputStreamException: {}
    PutChunkOutput:
      example:
        ChunkChecksum: ""
        ChunkChecksumAlgorithm: ""
      properties:
        ChunkChecksum:
          allOf:
          - $ref: '#/components/schemas/string'
          - description: Chunk checksum
        ChunkChecksumAlgorithm:
          allOf:
          - $ref: '#/components/schemas/DataChecksumAlgorithm'
          - description: Checksum algorithm
      required:
      - ChunkChecksum
      - ChunkChecksumAlgorithm
      type: object
    PutObjectOutput:
      example:
        InlineChunkChecksum: ""
        ObjectChecksum: ""
        ObjectChecksumAlgorithm: ""
        InlineChunkChecksumAlgorithm: ""
      properties:
        InlineChunkChecksum:
          allOf:
          - $ref: '#/components/schemas/string'
          - description: Inline chunk checksum
        InlineChunkChecksumAlgorithm:
          allOf:
          - $ref: '#/components/schemas/DataChecksumAlgorithm'
          - description: Inline chunk checksum algorithm
        ObjectChecksum:
          allOf:
          - $ref: '#/components/schemas/string'
          - description: object checksum
        ObjectChecksumAlgorithm:
          allOf:
          - $ref: '#/components/schemas/SummaryChecksumAlgorithm'
          - description: object checksum algorithm
      required:
      - InlineChunkChecksum
      - InlineChunkChecksumAlgorithm
      - ObjectChecksum
      - ObjectChecksumAlgorithm
      type: object
    StartObjectOutput:
      example:
        UploadId: ""
      properties:
        UploadId:
          allOf:
          - $ref: '#/components/schemas/string'
          - description: Upload Id for a given upload.
      required:
      - UploadId
      type: object
    DataAlreadyExistsException: {}
    string:
      type: string
    OptionalLong:
      type: integer
    SummaryChecksumAlgorithm:
      enum:
      - SUMMARY
      type: string
    BackupObject:
      description: Object
      properties:
        Name:
          allOf:
          - $ref: '#/components/schemas/string'
          - description: Object name
        ChunksCount:
          allOf:
          - $ref: '#/components/schemas/OptionalLong'
          - description: Number of chunks in object
        MetadataString:
          allOf:
          - $ref: '#/components/schemas/string'
          - description: Metadata string associated with the Object
        ObjectChecksum:
          allOf:
          - $ref: '#/components/schemas/string'
          - description: Object checksum
        ObjectChecksumAlgorithm:
          allOf:
          - $ref: '#/components/schemas/SummaryChecksumAlgorithm'
          - description: Checksum algorithm
        ObjectToken:
          allOf:
          - $ref: '#/components/schemas/string'
          - description: Object token
      required:
      - Name
      - ObjectChecksum
      - ObjectChecksumAlgorithm
      - ObjectToken
      type: object
    long:
      type: integer
    DataChecksumAlgorithm:
      enum:
      - SHA256
      type: string
    Chunk:
      description: Chunk
      properties:
        Index:
          allOf:
          - $ref: '#/components/schemas/long'
          - description: Chunk index
        Length:
          allOf:
          - $ref: '#/components/schemas/long'
          - description: Chunk length
        Checksum:
          allOf:
          - $ref: '#/components/schemas/string'
          - description: Chunk checksum
        ChecksumAlgorithm:
          allOf:
          - $ref: '#/components/schemas/DataChecksumAlgorithm'
          - description: Checksum algorithm
        ChunkToken:
          allOf:
          - $ref: '#/components/schemas/string'
          - description: Chunk token
      required:
      - Checksum
      - ChecksumAlgorithm
      - ChunkToken
      - Index
      - Length
      type: object
    ChunkList:
      items:
        $ref: '#/components/schemas/Chunk'
      type: array
    DeleteObjectInput:
      properties: {}
      title: DeleteObjectInput
      type: object
    GetChunkInput:
      properties: {}
      title: GetChunkInput
      type: object
    PayloadBlob:
      type: string
    GetObjectMetadataInput:
      properties: {}
      title: GetObjectMetadataInput
      type: object
    MaxResults:
      maximum: 100
      minimum: 1
      type: integer
    ListChunksInput:
      properties: {}
      title: ListChunksInput
      type: object
    timestamp:
      format: date-time
      type: string
    ListObjectsInput:
      properties: {}
      title: ListObjectsInput
      type: object
    ObjectList:
      items:
        $ref: '#/components/schemas/BackupObject'
      type: array
    MetadataString:
      pattern: "^.{1,256}$"
      type: string
    NotifyObjectCompleteInput:
      properties:
        MetadataBlob:
          allOf:
          - $ref: '#/components/schemas/PayloadBlob'
          - description: Optional metadata associated with an Object. Maximum length
              is 4MB.
      title: NotifyObjectCompleteInput
      type: object
    PutChunkInput:
      properties:
        Data:
          allOf:
          - $ref: '#/components/schemas/PayloadBlob'
          - description: Data to be uploaded
      required:
      - Data
      title: PutChunkInput
      type: object
    boolean:
      type: boolean
    PutObjectInput:
      properties:
        InlineChunk:
          allOf:
          - $ref: '#/components/schemas/PayloadBlob'
          - description: Inline chunk data to be uploaded.
      title: PutObjectInput
      type: object
    StartObjectInput:
      properties:
        ThrowOnDuplicate:
          allOf:
          - $ref: '#/components/schemas/boolean'
          - description: Throw an exception if Object name is already exist.
      title: StartObjectInput
      type: object
    StartObject_request:
      properties:
        ThrowOnDuplicate:
          description: Throw an exception if Object name is already exist.
          type: boolean
      type: object
    NotifyObjectComplete_request:
      properties:
        MetadataBlob:
          description: Optional metadata associated with an Object. Maximum length
            is 4MB.
          type: string
      type: object
    PutChunk_request:
      properties:
        Data:
          description: Data to be uploaded
          type: string
      required:
      - Data
      type: object
    PutObject_request:
      properties:
        InlineChunk:
          description: Inline chunk data to be uploaded.
          type: string
      type: object
  securitySchemes:
    hmac:
      description: Amazon Signature authorization v4
      in: header
      name: Authorization
      type: apiKey
      x-amazon-apigateway-authtype: awsSigv4

