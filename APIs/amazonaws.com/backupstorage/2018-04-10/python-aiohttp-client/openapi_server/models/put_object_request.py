# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class PutObjectRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, inline_chunk: str=None):
        """PutObjectRequest - a model defined in OpenAPI

        :param inline_chunk: The inline_chunk of this PutObjectRequest.
        """
        self.openapi_types = {
            'inline_chunk': str
        }

        self.attribute_map = {
            'inline_chunk': 'InlineChunk'
        }

        self._inline_chunk = inline_chunk

    @classmethod
    def from_dict(cls, dikt: dict) -> 'PutObjectRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The PutObject_request of this PutObjectRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def inline_chunk(self):
        """Gets the inline_chunk of this PutObjectRequest.

        Inline chunk data to be uploaded.

        :return: The inline_chunk of this PutObjectRequest.
        :rtype: str
        """
        return self._inline_chunk

    @inline_chunk.setter
    def inline_chunk(self, inline_chunk):
        """Sets the inline_chunk of this PutObjectRequest.

        Inline chunk data to be uploaded.

        :param inline_chunk: The inline_chunk of this PutObjectRequest.
        :type inline_chunk: str
        """

        self._inline_chunk = inline_chunk
