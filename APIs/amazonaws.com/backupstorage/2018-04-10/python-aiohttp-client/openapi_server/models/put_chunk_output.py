# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.data_checksum_algorithm import DataChecksumAlgorithm
from openapi_server import util


class PutChunkOutput(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, chunk_checksum: str=None, chunk_checksum_algorithm: DataChecksumAlgorithm=None):
        """PutChunkOutput - a model defined in OpenAPI

        :param chunk_checksum: The chunk_checksum of this PutChunkOutput.
        :param chunk_checksum_algorithm: The chunk_checksum_algorithm of this PutChunkOutput.
        """
        self.openapi_types = {
            'chunk_checksum': str,
            'chunk_checksum_algorithm': DataChecksumAlgorithm
        }

        self.attribute_map = {
            'chunk_checksum': 'ChunkChecksum',
            'chunk_checksum_algorithm': 'ChunkChecksumAlgorithm'
        }

        self._chunk_checksum = chunk_checksum
        self._chunk_checksum_algorithm = chunk_checksum_algorithm

    @classmethod
    def from_dict(cls, dikt: dict) -> 'PutChunkOutput':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The PutChunkOutput of this PutChunkOutput.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def chunk_checksum(self):
        """Gets the chunk_checksum of this PutChunkOutput.


        :return: The chunk_checksum of this PutChunkOutput.
        :rtype: str
        """
        return self._chunk_checksum

    @chunk_checksum.setter
    def chunk_checksum(self, chunk_checksum):
        """Sets the chunk_checksum of this PutChunkOutput.


        :param chunk_checksum: The chunk_checksum of this PutChunkOutput.
        :type chunk_checksum: str
        """
        if chunk_checksum is None:
            raise ValueError("Invalid value for `chunk_checksum`, must not be `None`")

        self._chunk_checksum = chunk_checksum

    @property
    def chunk_checksum_algorithm(self):
        """Gets the chunk_checksum_algorithm of this PutChunkOutput.


        :return: The chunk_checksum_algorithm of this PutChunkOutput.
        :rtype: DataChecksumAlgorithm
        """
        return self._chunk_checksum_algorithm

    @chunk_checksum_algorithm.setter
    def chunk_checksum_algorithm(self, chunk_checksum_algorithm):
        """Sets the chunk_checksum_algorithm of this PutChunkOutput.


        :param chunk_checksum_algorithm: The chunk_checksum_algorithm of this PutChunkOutput.
        :type chunk_checksum_algorithm: DataChecksumAlgorithm
        """
        if chunk_checksum_algorithm is None:
            raise ValueError("Invalid value for `chunk_checksum_algorithm`, must not be `None`")

        self._chunk_checksum_algorithm = chunk_checksum_algorithm
