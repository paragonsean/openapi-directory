# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class StartObjectRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, throw_on_duplicate: bool=None):
        """StartObjectRequest - a model defined in OpenAPI

        :param throw_on_duplicate: The throw_on_duplicate of this StartObjectRequest.
        """
        self.openapi_types = {
            'throw_on_duplicate': bool
        }

        self.attribute_map = {
            'throw_on_duplicate': 'ThrowOnDuplicate'
        }

        self._throw_on_duplicate = throw_on_duplicate

    @classmethod
    def from_dict(cls, dikt: dict) -> 'StartObjectRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The StartObject_request of this StartObjectRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def throw_on_duplicate(self):
        """Gets the throw_on_duplicate of this StartObjectRequest.

        Throw an exception if Object name is already exist.

        :return: The throw_on_duplicate of this StartObjectRequest.
        :rtype: bool
        """
        return self._throw_on_duplicate

    @throw_on_duplicate.setter
    def throw_on_duplicate(self, throw_on_duplicate):
        """Sets the throw_on_duplicate of this StartObjectRequest.

        Throw an exception if Object name is already exist.

        :param throw_on_duplicate: The throw_on_duplicate of this StartObjectRequest.
        :type throw_on_duplicate: bool
        """

        self._throw_on_duplicate = throw_on_duplicate
