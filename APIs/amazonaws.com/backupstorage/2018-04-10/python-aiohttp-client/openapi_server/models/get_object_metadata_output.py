# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class GetObjectMetadataOutput(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, metadata_blob: str=None):
        """GetObjectMetadataOutput - a model defined in OpenAPI

        :param metadata_blob: The metadata_blob of this GetObjectMetadataOutput.
        """
        self.openapi_types = {
            'metadata_blob': str
        }

        self.attribute_map = {
            'metadata_blob': 'MetadataBlob'
        }

        self._metadata_blob = metadata_blob

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GetObjectMetadataOutput':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The GetObjectMetadataOutput of this GetObjectMetadataOutput.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def metadata_blob(self):
        """Gets the metadata_blob of this GetObjectMetadataOutput.


        :return: The metadata_blob of this GetObjectMetadataOutput.
        :rtype: str
        """
        return self._metadata_blob

    @metadata_blob.setter
    def metadata_blob(self, metadata_blob):
        """Sets the metadata_blob of this GetObjectMetadataOutput.


        :param metadata_blob: The metadata_blob of this GetObjectMetadataOutput.
        :type metadata_blob: str
        """

        self._metadata_blob = metadata_blob
