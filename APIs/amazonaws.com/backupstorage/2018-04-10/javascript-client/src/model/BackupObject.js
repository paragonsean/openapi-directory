/**
 * AWS Backup Storage
 * The frontend service for Cryo Storage.
 *
 * The version of the OpenAPI document: 2018-04-10
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import SummaryChecksumAlgorithm from './SummaryChecksumAlgorithm';

/**
 * The BackupObject model module.
 * @module model/BackupObject
 * @version 2018-04-10
 */
class BackupObject {
    /**
     * Constructs a new <code>BackupObject</code>.
     * Object
     * @alias module:model/BackupObject
     * @param name {String} 
     * @param objectChecksum {String} 
     * @param objectChecksumAlgorithm {module:model/SummaryChecksumAlgorithm} 
     * @param objectToken {String} 
     */
    constructor(name, objectChecksum, objectChecksumAlgorithm, objectToken) { 
        
        BackupObject.initialize(this, name, objectChecksum, objectChecksumAlgorithm, objectToken);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, name, objectChecksum, objectChecksumAlgorithm, objectToken) { 
        obj['Name'] = name;
        obj['ObjectChecksum'] = objectChecksum;
        obj['ObjectChecksumAlgorithm'] = objectChecksumAlgorithm;
        obj['ObjectToken'] = objectToken;
    }

    /**
     * Constructs a <code>BackupObject</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/BackupObject} obj Optional instance to populate.
     * @return {module:model/BackupObject} The populated <code>BackupObject</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new BackupObject();

            if (data.hasOwnProperty('Name')) {
                obj['Name'] = ApiClient.convertToType(data['Name'], 'String');
            }
            if (data.hasOwnProperty('ChunksCount')) {
                obj['ChunksCount'] = ApiClient.convertToType(data['ChunksCount'], 'Number');
            }
            if (data.hasOwnProperty('MetadataString')) {
                obj['MetadataString'] = ApiClient.convertToType(data['MetadataString'], 'String');
            }
            if (data.hasOwnProperty('ObjectChecksum')) {
                obj['ObjectChecksum'] = ApiClient.convertToType(data['ObjectChecksum'], 'String');
            }
            if (data.hasOwnProperty('ObjectChecksumAlgorithm')) {
                obj['ObjectChecksumAlgorithm'] = ApiClient.convertToType(data['ObjectChecksumAlgorithm'], SummaryChecksumAlgorithm);
            }
            if (data.hasOwnProperty('ObjectToken')) {
                obj['ObjectToken'] = ApiClient.convertToType(data['ObjectToken'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>BackupObject</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>BackupObject</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of BackupObject.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // validate the optional field `Name`
        if (data['Name']) { // data not null
          String.validateJSON(data['Name']);
        }
        // validate the optional field `ChunksCount`
        if (data['ChunksCount']) { // data not null
          Number.validateJSON(data['ChunksCount']);
        }
        // validate the optional field `MetadataString`
        if (data['MetadataString']) { // data not null
          String.validateJSON(data['MetadataString']);
        }
        // validate the optional field `ObjectChecksum`
        if (data['ObjectChecksum']) { // data not null
          String.validateJSON(data['ObjectChecksum']);
        }
        // validate the optional field `ObjectChecksumAlgorithm`
        if (data['ObjectChecksumAlgorithm']) { // data not null
          SummaryChecksumAlgorithm.validateJSON(data['ObjectChecksumAlgorithm']);
        }
        // validate the optional field `ObjectToken`
        if (data['ObjectToken']) { // data not null
          String.validateJSON(data['ObjectToken']);
        }

        return true;
    }


}

BackupObject.RequiredProperties = ["Name", "ObjectChecksum", "ObjectChecksumAlgorithm", "ObjectToken"];

/**
 * @member {String} Name
 */
BackupObject.prototype['Name'] = undefined;

/**
 * @member {Number} ChunksCount
 */
BackupObject.prototype['ChunksCount'] = undefined;

/**
 * @member {String} MetadataString
 */
BackupObject.prototype['MetadataString'] = undefined;

/**
 * @member {String} ObjectChecksum
 */
BackupObject.prototype['ObjectChecksum'] = undefined;

/**
 * @member {module:model/SummaryChecksumAlgorithm} ObjectChecksumAlgorithm
 */
BackupObject.prototype['ObjectChecksumAlgorithm'] = undefined;

/**
 * @member {String} ObjectToken
 */
BackupObject.prototype['ObjectToken'] = undefined;






export default BackupObject;

