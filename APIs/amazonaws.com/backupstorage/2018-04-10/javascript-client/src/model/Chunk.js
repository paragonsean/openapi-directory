/**
 * AWS Backup Storage
 * The frontend service for Cryo Storage.
 *
 * The version of the OpenAPI document: 2018-04-10
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import DataChecksumAlgorithm from './DataChecksumAlgorithm';

/**
 * The Chunk model module.
 * @module model/Chunk
 * @version 2018-04-10
 */
class Chunk {
    /**
     * Constructs a new <code>Chunk</code>.
     * Chunk
     * @alias module:model/Chunk
     * @param index {Number} 
     * @param length {Number} 
     * @param checksum {String} 
     * @param checksumAlgorithm {module:model/DataChecksumAlgorithm} 
     * @param chunkToken {String} 
     */
    constructor(index, length, checksum, checksumAlgorithm, chunkToken) { 
        
        Chunk.initialize(this, index, length, checksum, checksumAlgorithm, chunkToken);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, index, length, checksum, checksumAlgorithm, chunkToken) { 
        obj['Index'] = index;
        obj['Length'] = length;
        obj['Checksum'] = checksum;
        obj['ChecksumAlgorithm'] = checksumAlgorithm;
        obj['ChunkToken'] = chunkToken;
    }

    /**
     * Constructs a <code>Chunk</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/Chunk} obj Optional instance to populate.
     * @return {module:model/Chunk} The populated <code>Chunk</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new Chunk();

            if (data.hasOwnProperty('Index')) {
                obj['Index'] = ApiClient.convertToType(data['Index'], 'Number');
            }
            if (data.hasOwnProperty('Length')) {
                obj['Length'] = ApiClient.convertToType(data['Length'], 'Number');
            }
            if (data.hasOwnProperty('Checksum')) {
                obj['Checksum'] = ApiClient.convertToType(data['Checksum'], 'String');
            }
            if (data.hasOwnProperty('ChecksumAlgorithm')) {
                obj['ChecksumAlgorithm'] = ApiClient.convertToType(data['ChecksumAlgorithm'], DataChecksumAlgorithm);
            }
            if (data.hasOwnProperty('ChunkToken')) {
                obj['ChunkToken'] = ApiClient.convertToType(data['ChunkToken'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>Chunk</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>Chunk</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of Chunk.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // validate the optional field `Index`
        if (data['Index']) { // data not null
          Number.validateJSON(data['Index']);
        }
        // validate the optional field `Length`
        if (data['Length']) { // data not null
          Number.validateJSON(data['Length']);
        }
        // validate the optional field `Checksum`
        if (data['Checksum']) { // data not null
          String.validateJSON(data['Checksum']);
        }
        // validate the optional field `ChecksumAlgorithm`
        if (data['ChecksumAlgorithm']) { // data not null
          DataChecksumAlgorithm.validateJSON(data['ChecksumAlgorithm']);
        }
        // validate the optional field `ChunkToken`
        if (data['ChunkToken']) { // data not null
          String.validateJSON(data['ChunkToken']);
        }

        return true;
    }


}

Chunk.RequiredProperties = ["Index", "Length", "Checksum", "ChecksumAlgorithm", "ChunkToken"];

/**
 * @member {Number} Index
 */
Chunk.prototype['Index'] = undefined;

/**
 * @member {Number} Length
 */
Chunk.prototype['Length'] = undefined;

/**
 * @member {String} Checksum
 */
Chunk.prototype['Checksum'] = undefined;

/**
 * @member {module:model/DataChecksumAlgorithm} ChecksumAlgorithm
 */
Chunk.prototype['ChecksumAlgorithm'] = undefined;

/**
 * @member {String} ChunkToken
 */
Chunk.prototype['ChunkToken'] = undefined;






export default Chunk;

