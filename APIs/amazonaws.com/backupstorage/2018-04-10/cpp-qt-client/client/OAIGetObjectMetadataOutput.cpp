/**
 * AWS Backup Storage
 * The frontend service for Cryo Storage.
 *
 * The version of the OpenAPI document: 2018-04-10
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGetObjectMetadataOutput.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGetObjectMetadataOutput::OAIGetObjectMetadataOutput(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGetObjectMetadataOutput::OAIGetObjectMetadataOutput() {
    this->initializeModel();
}

OAIGetObjectMetadataOutput::~OAIGetObjectMetadataOutput() {}

void OAIGetObjectMetadataOutput::initializeModel() {

    m_metadata_blob_isSet = false;
    m_metadata_blob_isValid = false;
}

void OAIGetObjectMetadataOutput::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGetObjectMetadataOutput::fromJsonObject(QJsonObject json) {

    m_metadata_blob_isValid = ::OpenAPI::fromJsonValue(m_metadata_blob, json[QString("MetadataBlob")]);
    m_metadata_blob_isSet = !json[QString("MetadataBlob")].isNull() && m_metadata_blob_isValid;
}

QString OAIGetObjectMetadataOutput::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGetObjectMetadataOutput::asJsonObject() const {
    QJsonObject obj;
    if (m_metadata_blob_isSet) {
        obj.insert(QString("MetadataBlob"), ::OpenAPI::toJsonValue(m_metadata_blob));
    }
    return obj;
}

QString OAIGetObjectMetadataOutput::getMetadataBlob() const {
    return m_metadata_blob;
}
void OAIGetObjectMetadataOutput::setMetadataBlob(const QString &metadata_blob) {
    m_metadata_blob = metadata_blob;
    m_metadata_blob_isSet = true;
}

bool OAIGetObjectMetadataOutput::is_metadata_blob_Set() const{
    return m_metadata_blob_isSet;
}

bool OAIGetObjectMetadataOutput::is_metadata_blob_Valid() const{
    return m_metadata_blob_isValid;
}

bool OAIGetObjectMetadataOutput::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_metadata_blob_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGetObjectMetadataOutput::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
