/**
 * AWS MediaTailor
 * <p>Use the AWS Elemental MediaTailor SDKs and CLI to configure scalable ad insertion and linear channels. With MediaTailor, you can assemble existing content into a linear stream and serve targeted ads to viewers while maintaining broadcast quality in over-the-top (OTT) video applications. For information about using the service, including detailed information about the settings covered in this guide, see the <a href=\"https://docs.aws.amazon.com/mediatailor/latest/ug/\">AWS Elemental MediaTailor User Guide</a>.</p> <p>Through the SDKs and the CLI you manage AWS Elemental MediaTailor configurations and channels the same as you do through the console. For example, you specify ad insertion behavior and mapping information for the origin server and the ad decision server (ADS).</p>
 *
 * The version of the OpenAPI document: 2018-04-23
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIPutPlaybackConfiguration_request_CdnConfiguration.h
 *
 * The configuration for using a content delivery network (CDN), like Amazon CloudFront, for content and ad segment management.
 */

#ifndef OAIPutPlaybackConfiguration_request_CdnConfiguration_H
#define OAIPutPlaybackConfiguration_request_CdnConfiguration_H

#include <QJsonObject>

#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIPutPlaybackConfiguration_request_CdnConfiguration : public OAIObject {
public:
    OAIPutPlaybackConfiguration_request_CdnConfiguration();
    OAIPutPlaybackConfiguration_request_CdnConfiguration(QString json);
    ~OAIPutPlaybackConfiguration_request_CdnConfiguration() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getAdSegmentUrlPrefix() const;
    void setAdSegmentUrlPrefix(const QString &ad_segment_url_prefix);
    bool is_ad_segment_url_prefix_Set() const;
    bool is_ad_segment_url_prefix_Valid() const;

    QString getContentSegmentUrlPrefix() const;
    void setContentSegmentUrlPrefix(const QString &content_segment_url_prefix);
    bool is_content_segment_url_prefix_Set() const;
    bool is_content_segment_url_prefix_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_ad_segment_url_prefix;
    bool m_ad_segment_url_prefix_isSet;
    bool m_ad_segment_url_prefix_isValid;

    QString m_content_segment_url_prefix;
    bool m_content_segment_url_prefix_isSet;
    bool m_content_segment_url_prefix_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIPutPlaybackConfiguration_request_CdnConfiguration)

#endif // OAIPutPlaybackConfiguration_request_CdnConfiguration_H
