/**
 * AWS MediaTailor
 * <p>Use the AWS Elemental MediaTailor SDKs and CLI to configure scalable ad insertion and linear channels. With MediaTailor, you can assemble existing content into a linear stream and serve targeted ads to viewers while maintaining broadcast quality in over-the-top (OTT) video applications. For information about using the service, including detailed information about the settings covered in this guide, see the <a href=\"https://docs.aws.amazon.com/mediatailor/latest/ug/\">AWS Elemental MediaTailor User Guide</a>.</p> <p>Through the SDKs and the CLI you manage AWS Elemental MediaTailor configurations and channels the same as you do through the console. For example, you specify ad insertion behavior and mapping information for the origin server and the ad decision server (ADS).</p>
 *
 * The version of the OpenAPI document: 2018-04-23
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIUpdateSourceLocation_request_AccessConfiguration.h
 *
 * Access configuration parameters.
 */

#ifndef OAIUpdateSourceLocation_request_AccessConfiguration_H
#define OAIUpdateSourceLocation_request_AccessConfiguration_H

#include <QJsonObject>

#include "OAIAccessType.h"
#include "OAIUpdateSourceLocation_request_AccessConfiguration_SecretsManagerAccessTokenConfiguration.h"

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIUpdateSourceLocation_request_AccessConfiguration_SecretsManagerAccessTokenConfiguration;

class OAIUpdateSourceLocation_request_AccessConfiguration : public OAIObject {
public:
    OAIUpdateSourceLocation_request_AccessConfiguration();
    OAIUpdateSourceLocation_request_AccessConfiguration(QString json);
    ~OAIUpdateSourceLocation_request_AccessConfiguration() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAIAccessType getAccessType() const;
    void setAccessType(const OAIAccessType &access_type);
    bool is_access_type_Set() const;
    bool is_access_type_Valid() const;

    OAIUpdateSourceLocation_request_AccessConfiguration_SecretsManagerAccessTokenConfiguration getSecretsManagerAccessTokenConfiguration() const;
    void setSecretsManagerAccessTokenConfiguration(const OAIUpdateSourceLocation_request_AccessConfiguration_SecretsManagerAccessTokenConfiguration &secrets_manager_access_token_configuration);
    bool is_secrets_manager_access_token_configuration_Set() const;
    bool is_secrets_manager_access_token_configuration_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAIAccessType m_access_type;
    bool m_access_type_isSet;
    bool m_access_type_isValid;

    OAIUpdateSourceLocation_request_AccessConfiguration_SecretsManagerAccessTokenConfiguration m_secrets_manager_access_token_configuration;
    bool m_secrets_manager_access_token_configuration_isSet;
    bool m_secrets_manager_access_token_configuration_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIUpdateSourceLocation_request_AccessConfiguration)

#endif // OAIUpdateSourceLocation_request_AccessConfiguration_H
