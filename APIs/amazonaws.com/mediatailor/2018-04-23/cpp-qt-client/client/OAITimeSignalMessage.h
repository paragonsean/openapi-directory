/**
 * AWS MediaTailor
 * <p>Use the AWS Elemental MediaTailor SDKs and CLI to configure scalable ad insertion and linear channels. With MediaTailor, you can assemble existing content into a linear stream and serve targeted ads to viewers while maintaining broadcast quality in over-the-top (OTT) video applications. For information about using the service, including detailed information about the settings covered in this guide, see the <a href=\"https://docs.aws.amazon.com/mediatailor/latest/ug/\">AWS Elemental MediaTailor User Guide</a>.</p> <p>Through the SDKs and the CLI you manage AWS Elemental MediaTailor configurations and channels the same as you do through the console. For example, you specify ad insertion behavior and mapping information for the origin server and the ad decision server (ADS).</p>
 *
 * The version of the OpenAPI document: 2018-04-23
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAITimeSignalMessage.h
 *
 * &lt;p&gt;The SCTE-35 &lt;code&gt;time_signal&lt;/code&gt; message can be sent with one or more &lt;code&gt;segmentation_descriptor&lt;/code&gt; messages. A &lt;code&gt;time_signal&lt;/code&gt; message can be sent only if a single &lt;code&gt;segmentation_descriptor&lt;/code&gt; message is sent.&lt;/p&gt; &lt;p&gt;The &lt;code&gt;time_signal&lt;/code&gt; message contains only the &lt;code&gt;splice_time&lt;/code&gt; field which is constructed using a given presentation timestamp. When sending a &lt;code&gt;time_signal&lt;/code&gt; message, the &lt;code&gt;splice_command_type&lt;/code&gt; field in the &lt;code&gt;splice_info_section&lt;/code&gt; message is set to 6 (0x06).&lt;/p&gt; &lt;p&gt;See the &lt;code&gt;time_signal()&lt;/code&gt; table of the 2022 SCTE-35 specification for more information.&lt;/p&gt;
 */

#ifndef OAITimeSignalMessage_H
#define OAITimeSignalMessage_H

#include <QJsonObject>

#include <QList>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAITimeSignalMessage : public OAIObject {
public:
    OAITimeSignalMessage();
    OAITimeSignalMessage(QString json);
    ~OAITimeSignalMessage() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QList getSegmentationDescriptors() const;
    void setSegmentationDescriptors(const QList &segmentation_descriptors);
    bool is_segmentation_descriptors_Set() const;
    bool is_segmentation_descriptors_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QList m_segmentation_descriptors;
    bool m_segmentation_descriptors_isSet;
    bool m_segmentation_descriptors_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAITimeSignalMessage)

#endif // OAITimeSignalMessage_H
