/**
 * AWS MediaTailor
 * <p>Use the AWS Elemental MediaTailor SDKs and CLI to configure scalable ad insertion and linear channels. With MediaTailor, you can assemble existing content into a linear stream and serve targeted ads to viewers while maintaining broadcast quality in over-the-top (OTT) video applications. For information about using the service, including detailed information about the settings covered in this guide, see the <a href=\"https://docs.aws.amazon.com/mediatailor/latest/ug/\">AWS Elemental MediaTailor User Guide</a>.</p> <p>Through the SDKs and the CLI you manage AWS Elemental MediaTailor configurations and channels the same as you do through the console. For example, you specify ad insertion behavior and mapping information for the origin server and the ad decision server (ADS).</p>
 *
 * The version of the OpenAPI document: 2018-04-23
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIRequestOutputItem.h
 *
 * The output configuration for this channel.
 */

#ifndef OAIRequestOutputItem_H
#define OAIRequestOutputItem_H

#include <QJsonObject>

#include "OAIRequestOutputItem_DashPlaylistSettings.h"
#include "OAIRequestOutputItem_HlsPlaylistSettings.h"
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIRequestOutputItem_DashPlaylistSettings;
class OAIRequestOutputItem_HlsPlaylistSettings;

class OAIRequestOutputItem : public OAIObject {
public:
    OAIRequestOutputItem();
    OAIRequestOutputItem(QString json);
    ~OAIRequestOutputItem() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAIRequestOutputItem_DashPlaylistSettings getDashPlaylistSettings() const;
    void setDashPlaylistSettings(const OAIRequestOutputItem_DashPlaylistSettings &dash_playlist_settings);
    bool is_dash_playlist_settings_Set() const;
    bool is_dash_playlist_settings_Valid() const;

    OAIRequestOutputItem_HlsPlaylistSettings getHlsPlaylistSettings() const;
    void setHlsPlaylistSettings(const OAIRequestOutputItem_HlsPlaylistSettings &hls_playlist_settings);
    bool is_hls_playlist_settings_Set() const;
    bool is_hls_playlist_settings_Valid() const;

    QString getManifestName() const;
    void setManifestName(const QString &manifest_name);
    bool is_manifest_name_Set() const;
    bool is_manifest_name_Valid() const;

    QString getSourceGroup() const;
    void setSourceGroup(const QString &source_group);
    bool is_source_group_Set() const;
    bool is_source_group_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAIRequestOutputItem_DashPlaylistSettings m_dash_playlist_settings;
    bool m_dash_playlist_settings_isSet;
    bool m_dash_playlist_settings_isValid;

    OAIRequestOutputItem_HlsPlaylistSettings m_hls_playlist_settings;
    bool m_hls_playlist_settings_isSet;
    bool m_hls_playlist_settings_isValid;

    QString m_manifest_name;
    bool m_manifest_name_isSet;
    bool m_manifest_name_isValid;

    QString m_source_group;
    bool m_source_group_isSet;
    bool m_source_group_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIRequestOutputItem)

#endif // OAIRequestOutputItem_H
