/**
 * AWS MediaTailor
 * <p>Use the AWS Elemental MediaTailor SDKs and CLI to configure scalable ad insertion and linear channels. With MediaTailor, you can assemble existing content into a linear stream and serve targeted ads to viewers while maintaining broadcast quality in over-the-top (OTT) video applications. For information about using the service, including detailed information about the settings covered in this guide, see the <a href=\"https://docs.aws.amazon.com/mediatailor/latest/ug/\">AWS Elemental MediaTailor User Guide</a>.</p> <p>Through the SDKs and the CLI you manage AWS Elemental MediaTailor configurations and channels the same as you do through the console. For example, you specify ad insertion behavior and mapping information for the origin server and the ad decision server (ADS).</p>
 *
 * The version of the OpenAPI document: 2018-04-23
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIAlert.h
 *
 * Alert configuration parameters.
 */

#ifndef OAIAlert_H
#define OAIAlert_H

#include <QJsonObject>

#include "OAIAlertCategory.h"
#include <QDateTime>
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIAlert : public OAIObject {
public:
    OAIAlert();
    OAIAlert(QString json);
    ~OAIAlert() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getAlertCode() const;
    void setAlertCode(const QString &alert_code);
    bool is_alert_code_Set() const;
    bool is_alert_code_Valid() const;

    QString getAlertMessage() const;
    void setAlertMessage(const QString &alert_message);
    bool is_alert_message_Set() const;
    bool is_alert_message_Valid() const;

    OAIAlertCategory getCategory() const;
    void setCategory(const OAIAlertCategory &category);
    bool is_category_Set() const;
    bool is_category_Valid() const;

    QDateTime getLastModifiedTime() const;
    void setLastModifiedTime(const QDateTime &last_modified_time);
    bool is_last_modified_time_Set() const;
    bool is_last_modified_time_Valid() const;

    QList getRelatedResourceArns() const;
    void setRelatedResourceArns(const QList &related_resource_arns);
    bool is_related_resource_arns_Set() const;
    bool is_related_resource_arns_Valid() const;

    QString getResourceArn() const;
    void setResourceArn(const QString &resource_arn);
    bool is_resource_arn_Set() const;
    bool is_resource_arn_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_alert_code;
    bool m_alert_code_isSet;
    bool m_alert_code_isValid;

    QString m_alert_message;
    bool m_alert_message_isSet;
    bool m_alert_message_isValid;

    OAIAlertCategory m_category;
    bool m_category_isSet;
    bool m_category_isValid;

    QDateTime m_last_modified_time;
    bool m_last_modified_time_isSet;
    bool m_last_modified_time_isValid;

    QList m_related_resource_arns;
    bool m_related_resource_arns_isSet;
    bool m_related_resource_arns_isValid;

    QString m_resource_arn;
    bool m_resource_arn_isSet;
    bool m_resource_arn_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIAlert)

#endif // OAIAlert_H
