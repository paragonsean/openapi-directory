/**
 * AWS MediaTailor
 * <p>Use the AWS Elemental MediaTailor SDKs and CLI to configure scalable ad insertion and linear channels. With MediaTailor, you can assemble existing content into a linear stream and serve targeted ads to viewers while maintaining broadcast quality in over-the-top (OTT) video applications. For information about using the service, including detailed information about the settings covered in this guide, see the <a href=\"https://docs.aws.amazon.com/mediatailor/latest/ug/\">AWS Elemental MediaTailor User Guide</a>.</p> <p>Through the SDKs and the CLI you manage AWS Elemental MediaTailor configurations and channels the same as you do through the console. For example, you specify ad insertion behavior and mapping information for the origin server and the ad decision server (ADS).</p>
 *
 * The version of the OpenAPI document: 2018-04-23
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIUpdateSourceLocationRequest.h
 *
 * 
 */

#ifndef OAIUpdateSourceLocationRequest_H
#define OAIUpdateSourceLocationRequest_H

#include <QJsonObject>

#include "OAICreateSourceLocationResponse_AccessConfiguration.h"
#include "OAIUpdateSourceLocationResponse_DefaultSegmentDeliveryConfiguration.h"
#include "OAIUpdateSourceLocationResponse_HttpConfiguration.h"
#include <QList>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAICreateSourceLocationResponse_AccessConfiguration;
class OAIUpdateSourceLocationResponse_DefaultSegmentDeliveryConfiguration;
class OAIUpdateSourceLocationResponse_HttpConfiguration;

class OAIUpdateSourceLocationRequest : public OAIObject {
public:
    OAIUpdateSourceLocationRequest();
    OAIUpdateSourceLocationRequest(QString json);
    ~OAIUpdateSourceLocationRequest() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAICreateSourceLocationResponse_AccessConfiguration getAccessConfiguration() const;
    void setAccessConfiguration(const OAICreateSourceLocationResponse_AccessConfiguration &access_configuration);
    bool is_access_configuration_Set() const;
    bool is_access_configuration_Valid() const;

    OAIUpdateSourceLocationResponse_DefaultSegmentDeliveryConfiguration getDefaultSegmentDeliveryConfiguration() const;
    void setDefaultSegmentDeliveryConfiguration(const OAIUpdateSourceLocationResponse_DefaultSegmentDeliveryConfiguration &default_segment_delivery_configuration);
    bool is_default_segment_delivery_configuration_Set() const;
    bool is_default_segment_delivery_configuration_Valid() const;

    OAIUpdateSourceLocationResponse_HttpConfiguration getHttpConfiguration() const;
    void setHttpConfiguration(const OAIUpdateSourceLocationResponse_HttpConfiguration &http_configuration);
    bool is_http_configuration_Set() const;
    bool is_http_configuration_Valid() const;

    QList getSegmentDeliveryConfigurations() const;
    void setSegmentDeliveryConfigurations(const QList &segment_delivery_configurations);
    bool is_segment_delivery_configurations_Set() const;
    bool is_segment_delivery_configurations_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAICreateSourceLocationResponse_AccessConfiguration m_access_configuration;
    bool m_access_configuration_isSet;
    bool m_access_configuration_isValid;

    OAIUpdateSourceLocationResponse_DefaultSegmentDeliveryConfiguration m_default_segment_delivery_configuration;
    bool m_default_segment_delivery_configuration_isSet;
    bool m_default_segment_delivery_configuration_isValid;

    OAIUpdateSourceLocationResponse_HttpConfiguration m_http_configuration;
    bool m_http_configuration_isSet;
    bool m_http_configuration_isValid;

    QList m_segment_delivery_configurations;
    bool m_segment_delivery_configurations_isSet;
    bool m_segment_delivery_configurations_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIUpdateSourceLocationRequest)

#endif // OAIUpdateSourceLocationRequest_H
