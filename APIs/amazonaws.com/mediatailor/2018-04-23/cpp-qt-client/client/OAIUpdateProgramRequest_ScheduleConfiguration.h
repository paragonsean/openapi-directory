/**
 * AWS MediaTailor
 * <p>Use the AWS Elemental MediaTailor SDKs and CLI to configure scalable ad insertion and linear channels. With MediaTailor, you can assemble existing content into a linear stream and serve targeted ads to viewers while maintaining broadcast quality in over-the-top (OTT) video applications. For information about using the service, including detailed information about the settings covered in this guide, see the <a href=\"https://docs.aws.amazon.com/mediatailor/latest/ug/\">AWS Elemental MediaTailor User Guide</a>.</p> <p>Through the SDKs and the CLI you manage AWS Elemental MediaTailor configurations and channels the same as you do through the console. For example, you specify ad insertion behavior and mapping information for the origin server and the ad decision server (ADS).</p>
 *
 * The version of the OpenAPI document: 2018-04-23
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIUpdateProgramRequest_ScheduleConfiguration.h
 *
 * 
 */

#ifndef OAIUpdateProgramRequest_ScheduleConfiguration_H
#define OAIUpdateProgramRequest_ScheduleConfiguration_H

#include <QJsonObject>

#include "OAIUpdateProgram_request_ScheduleConfiguration_ClipRange.h"
#include "OAIUpdateProgram_request_ScheduleConfiguration_Transition.h"

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIUpdateProgram_request_ScheduleConfiguration_ClipRange;
class OAIUpdateProgram_request_ScheduleConfiguration_Transition;

class OAIUpdateProgramRequest_ScheduleConfiguration : public OAIObject {
public:
    OAIUpdateProgramRequest_ScheduleConfiguration();
    OAIUpdateProgramRequest_ScheduleConfiguration(QString json);
    ~OAIUpdateProgramRequest_ScheduleConfiguration() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAIUpdateProgram_request_ScheduleConfiguration_ClipRange getClipRange() const;
    void setClipRange(const OAIUpdateProgram_request_ScheduleConfiguration_ClipRange &clip_range);
    bool is_clip_range_Set() const;
    bool is_clip_range_Valid() const;

    OAIUpdateProgram_request_ScheduleConfiguration_Transition getTransition() const;
    void setTransition(const OAIUpdateProgram_request_ScheduleConfiguration_Transition &transition);
    bool is_transition_Set() const;
    bool is_transition_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAIUpdateProgram_request_ScheduleConfiguration_ClipRange m_clip_range;
    bool m_clip_range_isSet;
    bool m_clip_range_isValid;

    OAIUpdateProgram_request_ScheduleConfiguration_Transition m_transition;
    bool m_transition_isSet;
    bool m_transition_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIUpdateProgramRequest_ScheduleConfiguration)

#endif // OAIUpdateProgramRequest_ScheduleConfiguration_H
