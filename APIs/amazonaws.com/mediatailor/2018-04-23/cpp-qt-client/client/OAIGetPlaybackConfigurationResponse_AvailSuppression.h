/**
 * AWS MediaTailor
 * <p>Use the AWS Elemental MediaTailor SDKs and CLI to configure scalable ad insertion and linear channels. With MediaTailor, you can assemble existing content into a linear stream and serve targeted ads to viewers while maintaining broadcast quality in over-the-top (OTT) video applications. For information about using the service, including detailed information about the settings covered in this guide, see the <a href=\"https://docs.aws.amazon.com/mediatailor/latest/ug/\">AWS Elemental MediaTailor User Guide</a>.</p> <p>Through the SDKs and the CLI you manage AWS Elemental MediaTailor configurations and channels the same as you do through the console. For example, you specify ad insertion behavior and mapping information for the origin server and the ad decision server (ADS).</p>
 *
 * The version of the OpenAPI document: 2018-04-23
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIGetPlaybackConfigurationResponse_AvailSuppression.h
 *
 * 
 */

#ifndef OAIGetPlaybackConfigurationResponse_AvailSuppression_H
#define OAIGetPlaybackConfigurationResponse_AvailSuppression_H

#include <QJsonObject>

#include "OAIFillPolicy.h"
#include "OAIMode.h"
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIGetPlaybackConfigurationResponse_AvailSuppression : public OAIObject {
public:
    OAIGetPlaybackConfigurationResponse_AvailSuppression();
    OAIGetPlaybackConfigurationResponse_AvailSuppression(QString json);
    ~OAIGetPlaybackConfigurationResponse_AvailSuppression() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAIFillPolicy getFillPolicy() const;
    void setFillPolicy(const OAIFillPolicy &fill_policy);
    bool is_fill_policy_Set() const;
    bool is_fill_policy_Valid() const;

    OAIMode getMode() const;
    void setMode(const OAIMode &mode);
    bool is_mode_Set() const;
    bool is_mode_Valid() const;

    QString getValue() const;
    void setValue(const QString &value);
    bool is_value_Set() const;
    bool is_value_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAIFillPolicy m_fill_policy;
    bool m_fill_policy_isSet;
    bool m_fill_policy_isValid;

    OAIMode m_mode;
    bool m_mode_isSet;
    bool m_mode_isValid;

    QString m_value;
    bool m_value_isSet;
    bool m_value_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIGetPlaybackConfigurationResponse_AvailSuppression)

#endif // OAIGetPlaybackConfigurationResponse_AvailSuppression_H
