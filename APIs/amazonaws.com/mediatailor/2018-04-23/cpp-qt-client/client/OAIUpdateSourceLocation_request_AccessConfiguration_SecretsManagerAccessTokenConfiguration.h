/**
 * AWS MediaTailor
 * <p>Use the AWS Elemental MediaTailor SDKs and CLI to configure scalable ad insertion and linear channels. With MediaTailor, you can assemble existing content into a linear stream and serve targeted ads to viewers while maintaining broadcast quality in over-the-top (OTT) video applications. For information about using the service, including detailed information about the settings covered in this guide, see the <a href=\"https://docs.aws.amazon.com/mediatailor/latest/ug/\">AWS Elemental MediaTailor User Guide</a>.</p> <p>Through the SDKs and the CLI you manage AWS Elemental MediaTailor configurations and channels the same as you do through the console. For example, you specify ad insertion behavior and mapping information for the origin server and the ad decision server (ADS).</p>
 *
 * The version of the OpenAPI document: 2018-04-23
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIUpdateSourceLocation_request_AccessConfiguration_SecretsManagerAccessTokenConfiguration.h
 *
 * 
 */

#ifndef OAIUpdateSourceLocation_request_AccessConfiguration_SecretsManagerAccessTokenConfiguration_H
#define OAIUpdateSourceLocation_request_AccessConfiguration_SecretsManagerAccessTokenConfiguration_H

#include <QJsonObject>

#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIUpdateSourceLocation_request_AccessConfiguration_SecretsManagerAccessTokenConfiguration : public OAIObject {
public:
    OAIUpdateSourceLocation_request_AccessConfiguration_SecretsManagerAccessTokenConfiguration();
    OAIUpdateSourceLocation_request_AccessConfiguration_SecretsManagerAccessTokenConfiguration(QString json);
    ~OAIUpdateSourceLocation_request_AccessConfiguration_SecretsManagerAccessTokenConfiguration() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getHeaderName() const;
    void setHeaderName(const QString &header_name);
    bool is_header_name_Set() const;
    bool is_header_name_Valid() const;

    QString getSecretArn() const;
    void setSecretArn(const QString &secret_arn);
    bool is_secret_arn_Set() const;
    bool is_secret_arn_Valid() const;

    QString getSecretStringKey() const;
    void setSecretStringKey(const QString &secret_string_key);
    bool is_secret_string_key_Set() const;
    bool is_secret_string_key_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_header_name;
    bool m_header_name_isSet;
    bool m_header_name_isValid;

    QString m_secret_arn;
    bool m_secret_arn_isSet;
    bool m_secret_arn_isValid;

    QString m_secret_string_key;
    bool m_secret_string_key_isSet;
    bool m_secret_string_key_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIUpdateSourceLocation_request_AccessConfiguration_SecretsManagerAccessTokenConfiguration)

#endif // OAIUpdateSourceLocation_request_AccessConfiguration_SecretsManagerAccessTokenConfiguration_H
