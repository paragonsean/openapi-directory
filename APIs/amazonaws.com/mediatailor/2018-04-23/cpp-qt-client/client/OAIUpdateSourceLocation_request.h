/**
 * AWS MediaTailor
 * <p>Use the AWS Elemental MediaTailor SDKs and CLI to configure scalable ad insertion and linear channels. With MediaTailor, you can assemble existing content into a linear stream and serve targeted ads to viewers while maintaining broadcast quality in over-the-top (OTT) video applications. For information about using the service, including detailed information about the settings covered in this guide, see the <a href=\"https://docs.aws.amazon.com/mediatailor/latest/ug/\">AWS Elemental MediaTailor User Guide</a>.</p> <p>Through the SDKs and the CLI you manage AWS Elemental MediaTailor configurations and channels the same as you do through the console. For example, you specify ad insertion behavior and mapping information for the origin server and the ad decision server (ADS).</p>
 *
 * The version of the OpenAPI document: 2018-04-23
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIUpdateSourceLocation_request.h
 *
 * 
 */

#ifndef OAIUpdateSourceLocation_request_H
#define OAIUpdateSourceLocation_request_H

#include <QJsonObject>

#include "OAISegmentDeliveryConfiguration.h"
#include "OAIUpdateSourceLocation_request_AccessConfiguration.h"
#include "OAIUpdateSourceLocation_request_DefaultSegmentDeliveryConfiguration.h"
#include "OAIUpdateSourceLocation_request_HttpConfiguration.h"
#include <QList>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIUpdateSourceLocation_request_AccessConfiguration;
class OAIUpdateSourceLocation_request_DefaultSegmentDeliveryConfiguration;
class OAIUpdateSourceLocation_request_HttpConfiguration;
class OAISegmentDeliveryConfiguration;

class OAIUpdateSourceLocation_request : public OAIObject {
public:
    OAIUpdateSourceLocation_request();
    OAIUpdateSourceLocation_request(QString json);
    ~OAIUpdateSourceLocation_request() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAIUpdateSourceLocation_request_AccessConfiguration getAccessConfiguration() const;
    void setAccessConfiguration(const OAIUpdateSourceLocation_request_AccessConfiguration &access_configuration);
    bool is_access_configuration_Set() const;
    bool is_access_configuration_Valid() const;

    OAIUpdateSourceLocation_request_DefaultSegmentDeliveryConfiguration getDefaultSegmentDeliveryConfiguration() const;
    void setDefaultSegmentDeliveryConfiguration(const OAIUpdateSourceLocation_request_DefaultSegmentDeliveryConfiguration &default_segment_delivery_configuration);
    bool is_default_segment_delivery_configuration_Set() const;
    bool is_default_segment_delivery_configuration_Valid() const;

    OAIUpdateSourceLocation_request_HttpConfiguration getHttpConfiguration() const;
    void setHttpConfiguration(const OAIUpdateSourceLocation_request_HttpConfiguration &http_configuration);
    bool is_http_configuration_Set() const;
    bool is_http_configuration_Valid() const;

    QList<OAISegmentDeliveryConfiguration> getSegmentDeliveryConfigurations() const;
    void setSegmentDeliveryConfigurations(const QList<OAISegmentDeliveryConfiguration> &segment_delivery_configurations);
    bool is_segment_delivery_configurations_Set() const;
    bool is_segment_delivery_configurations_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAIUpdateSourceLocation_request_AccessConfiguration m_access_configuration;
    bool m_access_configuration_isSet;
    bool m_access_configuration_isValid;

    OAIUpdateSourceLocation_request_DefaultSegmentDeliveryConfiguration m_default_segment_delivery_configuration;
    bool m_default_segment_delivery_configuration_isSet;
    bool m_default_segment_delivery_configuration_isValid;

    OAIUpdateSourceLocation_request_HttpConfiguration m_http_configuration;
    bool m_http_configuration_isSet;
    bool m_http_configuration_isValid;

    QList<OAISegmentDeliveryConfiguration> m_segment_delivery_configurations;
    bool m_segment_delivery_configurations_isSet;
    bool m_segment_delivery_configurations_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIUpdateSourceLocation_request)

#endif // OAIUpdateSourceLocation_request_H
