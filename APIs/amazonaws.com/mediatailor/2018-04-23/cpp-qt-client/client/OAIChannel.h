/**
 * AWS MediaTailor
 * <p>Use the AWS Elemental MediaTailor SDKs and CLI to configure scalable ad insertion and linear channels. With MediaTailor, you can assemble existing content into a linear stream and serve targeted ads to viewers while maintaining broadcast quality in over-the-top (OTT) video applications. For information about using the service, including detailed information about the settings covered in this guide, see the <a href=\"https://docs.aws.amazon.com/mediatailor/latest/ug/\">AWS Elemental MediaTailor User Guide</a>.</p> <p>Through the SDKs and the CLI you manage AWS Elemental MediaTailor configurations and channels the same as you do through the console. For example, you specify ad insertion behavior and mapping information for the origin server and the ad decision server (ADS).</p>
 *
 * The version of the OpenAPI document: 2018-04-23
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIChannel.h
 *
 * The configuration parameters for a channel. For information about MediaTailor channels, see &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/mediatailor/latest/ug/channel-assembly-channels.html\&quot;&gt;Working with channels&lt;/a&gt; in the &lt;i&gt;MediaTailor User Guide&lt;/i&gt;.
 */

#ifndef OAIChannel_H
#define OAIChannel_H

#include <QJsonObject>

#include "OAIChannel_LogConfiguration.h"
#include "OAIUpdateChannelResponse_FillerSlate.h"
#include <QDateTime>
#include <QList>
#include <QMap>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIUpdateChannelResponse_FillerSlate;
class OAIChannel_LogConfiguration;

class OAIChannel : public OAIObject {
public:
    OAIChannel();
    OAIChannel(QString json);
    ~OAIChannel() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getArn() const;
    void setArn(const QString &arn);
    bool is_arn_Set() const;
    bool is_arn_Valid() const;

    QString getChannelName() const;
    void setChannelName(const QString &channel_name);
    bool is_channel_name_Set() const;
    bool is_channel_name_Valid() const;

    QString getChannelState() const;
    void setChannelState(const QString &channel_state);
    bool is_channel_state_Set() const;
    bool is_channel_state_Valid() const;

    QDateTime getCreationTime() const;
    void setCreationTime(const QDateTime &creation_time);
    bool is_creation_time_Set() const;
    bool is_creation_time_Valid() const;

    OAIUpdateChannelResponse_FillerSlate getFillerSlate() const;
    void setFillerSlate(const OAIUpdateChannelResponse_FillerSlate &filler_slate);
    bool is_filler_slate_Set() const;
    bool is_filler_slate_Valid() const;

    QDateTime getLastModifiedTime() const;
    void setLastModifiedTime(const QDateTime &last_modified_time);
    bool is_last_modified_time_Set() const;
    bool is_last_modified_time_Valid() const;

    OAIChannel_LogConfiguration getLogConfiguration() const;
    void setLogConfiguration(const OAIChannel_LogConfiguration &log_configuration);
    bool is_log_configuration_Set() const;
    bool is_log_configuration_Valid() const;

    QList getOutputs() const;
    void setOutputs(const QList &outputs);
    bool is_outputs_Set() const;
    bool is_outputs_Valid() const;

    QString getPlaybackMode() const;
    void setPlaybackMode(const QString &playback_mode);
    bool is_playback_mode_Set() const;
    bool is_playback_mode_Valid() const;

    QMap getTags() const;
    void setTags(const QMap &tags);
    bool is_tags_Set() const;
    bool is_tags_Valid() const;

    QString getTier() const;
    void setTier(const QString &tier);
    bool is_tier_Set() const;
    bool is_tier_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_arn;
    bool m_arn_isSet;
    bool m_arn_isValid;

    QString m_channel_name;
    bool m_channel_name_isSet;
    bool m_channel_name_isValid;

    QString m_channel_state;
    bool m_channel_state_isSet;
    bool m_channel_state_isValid;

    QDateTime m_creation_time;
    bool m_creation_time_isSet;
    bool m_creation_time_isValid;

    OAIUpdateChannelResponse_FillerSlate m_filler_slate;
    bool m_filler_slate_isSet;
    bool m_filler_slate_isValid;

    QDateTime m_last_modified_time;
    bool m_last_modified_time_isSet;
    bool m_last_modified_time_isValid;

    OAIChannel_LogConfiguration m_log_configuration;
    bool m_log_configuration_isSet;
    bool m_log_configuration_isValid;

    QList m_outputs;
    bool m_outputs_isSet;
    bool m_outputs_isValid;

    QString m_playback_mode;
    bool m_playback_mode_isSet;
    bool m_playback_mode_isValid;

    QMap m_tags;
    bool m_tags_isSet;
    bool m_tags_isValid;

    QString m_tier;
    bool m_tier_isSet;
    bool m_tier_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIChannel)

#endif // OAIChannel_H
