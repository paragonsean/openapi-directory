/**
 * AWS MediaTailor
 * <p>Use the AWS Elemental MediaTailor SDKs and CLI to configure scalable ad insertion and linear channels. With MediaTailor, you can assemble existing content into a linear stream and serve targeted ads to viewers while maintaining broadcast quality in over-the-top (OTT) video applications. For information about using the service, including detailed information about the settings covered in this guide, see the <a href=\"https://docs.aws.amazon.com/mediatailor/latest/ug/\">AWS Elemental MediaTailor User Guide</a>.</p> <p>Through the SDKs and the CLI you manage AWS Elemental MediaTailor configurations and channels the same as you do through the console. For example, you specify ad insertion behavior and mapping information for the origin server and the ad decision server (ADS).</p>
 *
 * The version of the OpenAPI document: 2018-04-23
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIPutPlaybackConfiguration_request_DashConfiguration.h
 *
 * The configuration for DASH PUT operations.
 */

#ifndef OAIPutPlaybackConfiguration_request_DashConfiguration_H
#define OAIPutPlaybackConfiguration_request_DashConfiguration_H

#include <QJsonObject>

#include "OAIOriginManifestType.h"
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIPutPlaybackConfiguration_request_DashConfiguration : public OAIObject {
public:
    OAIPutPlaybackConfiguration_request_DashConfiguration();
    OAIPutPlaybackConfiguration_request_DashConfiguration(QString json);
    ~OAIPutPlaybackConfiguration_request_DashConfiguration() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getMpdLocation() const;
    void setMpdLocation(const QString &mpd_location);
    bool is_mpd_location_Set() const;
    bool is_mpd_location_Valid() const;

    OAIOriginManifestType getOriginManifestType() const;
    void setOriginManifestType(const OAIOriginManifestType &origin_manifest_type);
    bool is_origin_manifest_type_Set() const;
    bool is_origin_manifest_type_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_mpd_location;
    bool m_mpd_location_isSet;
    bool m_mpd_location_isValid;

    OAIOriginManifestType m_origin_manifest_type;
    bool m_origin_manifest_type_isSet;
    bool m_origin_manifest_type_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIPutPlaybackConfiguration_request_DashConfiguration)

#endif // OAIPutPlaybackConfiguration_request_DashConfiguration_H
