# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class ListPrefetchSchedulesRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, max_results: int=None, next_token: str=None, stream_id: str=None):
        """ListPrefetchSchedulesRequest - a model defined in OpenAPI

        :param max_results: The max_results of this ListPrefetchSchedulesRequest.
        :param next_token: The next_token of this ListPrefetchSchedulesRequest.
        :param stream_id: The stream_id of this ListPrefetchSchedulesRequest.
        """
        self.openapi_types = {
            'max_results': int,
            'next_token': str,
            'stream_id': str
        }

        self.attribute_map = {
            'max_results': 'MaxResults',
            'next_token': 'NextToken',
            'stream_id': 'StreamId'
        }

        self._max_results = max_results
        self._next_token = next_token
        self._stream_id = stream_id

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ListPrefetchSchedulesRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ListPrefetchSchedules_request of this ListPrefetchSchedulesRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def max_results(self):
        """Gets the max_results of this ListPrefetchSchedulesRequest.

        The maximum number of prefetch schedules that you want MediaTailor to return in response to the current request. If there are more than <code>MaxResults</code> prefetch schedules, use the value of <code>NextToken</code> in the response to get the next page of results.

        :return: The max_results of this ListPrefetchSchedulesRequest.
        :rtype: int
        """
        return self._max_results

    @max_results.setter
    def max_results(self, max_results):
        """Sets the max_results of this ListPrefetchSchedulesRequest.

        The maximum number of prefetch schedules that you want MediaTailor to return in response to the current request. If there are more than <code>MaxResults</code> prefetch schedules, use the value of <code>NextToken</code> in the response to get the next page of results.

        :param max_results: The max_results of this ListPrefetchSchedulesRequest.
        :type max_results: int
        """
        if max_results is not None and max_results > 100:
            raise ValueError("Invalid value for `max_results`, must be a value less than or equal to `100`")
        if max_results is not None and max_results < 1:
            raise ValueError("Invalid value for `max_results`, must be a value greater than or equal to `1`")

        self._max_results = max_results

    @property
    def next_token(self):
        """Gets the next_token of this ListPrefetchSchedulesRequest.

        <p>(Optional) If the playback configuration has more than <code>MaxResults</code> prefetch schedules, use <code>NextToken</code> to get the second and subsequent pages of results.</p> <p> For the first <code>ListPrefetchSchedulesRequest</code> request, omit this value.</p> <p> For the second and subsequent requests, get the value of <code>NextToken</code> from the previous response and specify that value for <code>NextToken</code> in the request.</p> <p> If the previous response didn't include a <code>NextToken</code> element, there are no more prefetch schedules to get.</p>

        :return: The next_token of this ListPrefetchSchedulesRequest.
        :rtype: str
        """
        return self._next_token

    @next_token.setter
    def next_token(self, next_token):
        """Sets the next_token of this ListPrefetchSchedulesRequest.

        <p>(Optional) If the playback configuration has more than <code>MaxResults</code> prefetch schedules, use <code>NextToken</code> to get the second and subsequent pages of results.</p> <p> For the first <code>ListPrefetchSchedulesRequest</code> request, omit this value.</p> <p> For the second and subsequent requests, get the value of <code>NextToken</code> from the previous response and specify that value for <code>NextToken</code> in the request.</p> <p> If the previous response didn't include a <code>NextToken</code> element, there are no more prefetch schedules to get.</p>

        :param next_token: The next_token of this ListPrefetchSchedulesRequest.
        :type next_token: str
        """

        self._next_token = next_token

    @property
    def stream_id(self):
        """Gets the stream_id of this ListPrefetchSchedulesRequest.

        An optional filtering parameter whereby MediaTailor filters the prefetch schedules to include only specific streams.

        :return: The stream_id of this ListPrefetchSchedulesRequest.
        :rtype: str
        """
        return self._stream_id

    @stream_id.setter
    def stream_id(self, stream_id):
        """Sets the stream_id of this ListPrefetchSchedulesRequest.

        An optional filtering parameter whereby MediaTailor filters the prefetch schedules to include only specific streams.

        :param stream_id: The stream_id of this ListPrefetchSchedulesRequest.
        :type stream_id: str
        """

        self._stream_id = stream_id
