# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class ConfigureLogsForPlaybackConfigurationRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, percent_enabled: int=None, playback_configuration_name: str=None):
        """ConfigureLogsForPlaybackConfigurationRequest - a model defined in OpenAPI

        :param percent_enabled: The percent_enabled of this ConfigureLogsForPlaybackConfigurationRequest.
        :param playback_configuration_name: The playback_configuration_name of this ConfigureLogsForPlaybackConfigurationRequest.
        """
        self.openapi_types = {
            'percent_enabled': int,
            'playback_configuration_name': str
        }

        self.attribute_map = {
            'percent_enabled': 'PercentEnabled',
            'playback_configuration_name': 'PlaybackConfigurationName'
        }

        self._percent_enabled = percent_enabled
        self._playback_configuration_name = playback_configuration_name

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ConfigureLogsForPlaybackConfigurationRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ConfigureLogsForPlaybackConfiguration_request of this ConfigureLogsForPlaybackConfigurationRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def percent_enabled(self):
        """Gets the percent_enabled of this ConfigureLogsForPlaybackConfigurationRequest.

        <p>The percentage of session logs that MediaTailor sends to your Cloudwatch Logs account. For example, if your playback configuration has 1000 sessions and percentEnabled is set to <code>60</code>, MediaTailor sends logs for 600 of the sessions to CloudWatch Logs. MediaTailor decides at random which of the playback configuration sessions to send logs for. If you want to view logs for a specific session, you can use the <a href=\"https://docs.aws.amazon.com/mediatailor/latest/ug/debug-log-mode.html\">debug log mode</a>.</p> <p>Valid values: <code>0</code> - <code>100</code> </p>

        :return: The percent_enabled of this ConfigureLogsForPlaybackConfigurationRequest.
        :rtype: int
        """
        return self._percent_enabled

    @percent_enabled.setter
    def percent_enabled(self, percent_enabled):
        """Sets the percent_enabled of this ConfigureLogsForPlaybackConfigurationRequest.

        <p>The percentage of session logs that MediaTailor sends to your Cloudwatch Logs account. For example, if your playback configuration has 1000 sessions and percentEnabled is set to <code>60</code>, MediaTailor sends logs for 600 of the sessions to CloudWatch Logs. MediaTailor decides at random which of the playback configuration sessions to send logs for. If you want to view logs for a specific session, you can use the <a href=\"https://docs.aws.amazon.com/mediatailor/latest/ug/debug-log-mode.html\">debug log mode</a>.</p> <p>Valid values: <code>0</code> - <code>100</code> </p>

        :param percent_enabled: The percent_enabled of this ConfigureLogsForPlaybackConfigurationRequest.
        :type percent_enabled: int
        """
        if percent_enabled is None:
            raise ValueError("Invalid value for `percent_enabled`, must not be `None`")

        self._percent_enabled = percent_enabled

    @property
    def playback_configuration_name(self):
        """Gets the playback_configuration_name of this ConfigureLogsForPlaybackConfigurationRequest.

        The name of the playback configuration.

        :return: The playback_configuration_name of this ConfigureLogsForPlaybackConfigurationRequest.
        :rtype: str
        """
        return self._playback_configuration_name

    @playback_configuration_name.setter
    def playback_configuration_name(self, playback_configuration_name):
        """Sets the playback_configuration_name of this ConfigureLogsForPlaybackConfigurationRequest.

        The name of the playback configuration.

        :param playback_configuration_name: The playback_configuration_name of this ConfigureLogsForPlaybackConfigurationRequest.
        :type playback_configuration_name: str
        """
        if playback_configuration_name is None:
            raise ValueError("Invalid value for `playback_configuration_name`, must not be `None`")

        self._playback_configuration_name = playback_configuration_name
