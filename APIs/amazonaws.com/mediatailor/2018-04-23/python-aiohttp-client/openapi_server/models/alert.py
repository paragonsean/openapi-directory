# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.alert_category import AlertCategory
from openapi_server import util


class Alert(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, alert_code: str=None, alert_message: str=None, category: AlertCategory=None, last_modified_time: datetime=None, related_resource_arns: List=None, resource_arn: str=None):
        """Alert - a model defined in OpenAPI

        :param alert_code: The alert_code of this Alert.
        :param alert_message: The alert_message of this Alert.
        :param category: The category of this Alert.
        :param last_modified_time: The last_modified_time of this Alert.
        :param related_resource_arns: The related_resource_arns of this Alert.
        :param resource_arn: The resource_arn of this Alert.
        """
        self.openapi_types = {
            'alert_code': str,
            'alert_message': str,
            'category': AlertCategory,
            'last_modified_time': datetime,
            'related_resource_arns': List,
            'resource_arn': str
        }

        self.attribute_map = {
            'alert_code': 'AlertCode',
            'alert_message': 'AlertMessage',
            'category': 'Category',
            'last_modified_time': 'LastModifiedTime',
            'related_resource_arns': 'RelatedResourceArns',
            'resource_arn': 'ResourceArn'
        }

        self._alert_code = alert_code
        self._alert_message = alert_message
        self._category = category
        self._last_modified_time = last_modified_time
        self._related_resource_arns = related_resource_arns
        self._resource_arn = resource_arn

    @classmethod
    def from_dict(cls, dikt: dict) -> 'Alert':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Alert of this Alert.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def alert_code(self):
        """Gets the alert_code of this Alert.


        :return: The alert_code of this Alert.
        :rtype: str
        """
        return self._alert_code

    @alert_code.setter
    def alert_code(self, alert_code):
        """Sets the alert_code of this Alert.


        :param alert_code: The alert_code of this Alert.
        :type alert_code: str
        """
        if alert_code is None:
            raise ValueError("Invalid value for `alert_code`, must not be `None`")

        self._alert_code = alert_code

    @property
    def alert_message(self):
        """Gets the alert_message of this Alert.


        :return: The alert_message of this Alert.
        :rtype: str
        """
        return self._alert_message

    @alert_message.setter
    def alert_message(self, alert_message):
        """Sets the alert_message of this Alert.


        :param alert_message: The alert_message of this Alert.
        :type alert_message: str
        """
        if alert_message is None:
            raise ValueError("Invalid value for `alert_message`, must not be `None`")

        self._alert_message = alert_message

    @property
    def category(self):
        """Gets the category of this Alert.


        :return: The category of this Alert.
        :rtype: AlertCategory
        """
        return self._category

    @category.setter
    def category(self, category):
        """Sets the category of this Alert.


        :param category: The category of this Alert.
        :type category: AlertCategory
        """

        self._category = category

    @property
    def last_modified_time(self):
        """Gets the last_modified_time of this Alert.


        :return: The last_modified_time of this Alert.
        :rtype: datetime
        """
        return self._last_modified_time

    @last_modified_time.setter
    def last_modified_time(self, last_modified_time):
        """Sets the last_modified_time of this Alert.


        :param last_modified_time: The last_modified_time of this Alert.
        :type last_modified_time: datetime
        """
        if last_modified_time is None:
            raise ValueError("Invalid value for `last_modified_time`, must not be `None`")

        self._last_modified_time = last_modified_time

    @property
    def related_resource_arns(self):
        """Gets the related_resource_arns of this Alert.


        :return: The related_resource_arns of this Alert.
        :rtype: List
        """
        return self._related_resource_arns

    @related_resource_arns.setter
    def related_resource_arns(self, related_resource_arns):
        """Sets the related_resource_arns of this Alert.


        :param related_resource_arns: The related_resource_arns of this Alert.
        :type related_resource_arns: List
        """
        if related_resource_arns is None:
            raise ValueError("Invalid value for `related_resource_arns`, must not be `None`")

        self._related_resource_arns = related_resource_arns

    @property
    def resource_arn(self):
        """Gets the resource_arn of this Alert.


        :return: The resource_arn of this Alert.
        :rtype: str
        """
        return self._resource_arn

    @resource_arn.setter
    def resource_arn(self, resource_arn):
        """Sets the resource_arn of this Alert.


        :param resource_arn: The resource_arn of this Alert.
        :type resource_arn: str
        """
        if resource_arn is None:
            raise ValueError("Invalid value for `resource_arn`, must not be `None`")

        self._resource_arn = resource_arn
