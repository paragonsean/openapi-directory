# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.describe_source_location_response_access_configuration import DescribeSourceLocationResponseAccessConfiguration
from openapi_server.models.source_location_default_segment_delivery_configuration import SourceLocationDefaultSegmentDeliveryConfiguration
from openapi_server.models.update_source_location_response_http_configuration import UpdateSourceLocationResponseHttpConfiguration
from openapi_server import util


class SourceLocation(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, access_configuration: DescribeSourceLocationResponseAccessConfiguration=None, arn: str=None, creation_time: datetime=None, default_segment_delivery_configuration: SourceLocationDefaultSegmentDeliveryConfiguration=None, http_configuration: UpdateSourceLocationResponseHttpConfiguration=None, last_modified_time: datetime=None, segment_delivery_configurations: List=None, source_location_name: str=None, tags: Dict=None):
        """SourceLocation - a model defined in OpenAPI

        :param access_configuration: The access_configuration of this SourceLocation.
        :param arn: The arn of this SourceLocation.
        :param creation_time: The creation_time of this SourceLocation.
        :param default_segment_delivery_configuration: The default_segment_delivery_configuration of this SourceLocation.
        :param http_configuration: The http_configuration of this SourceLocation.
        :param last_modified_time: The last_modified_time of this SourceLocation.
        :param segment_delivery_configurations: The segment_delivery_configurations of this SourceLocation.
        :param source_location_name: The source_location_name of this SourceLocation.
        :param tags: The tags of this SourceLocation.
        """
        self.openapi_types = {
            'access_configuration': DescribeSourceLocationResponseAccessConfiguration,
            'arn': str,
            'creation_time': datetime,
            'default_segment_delivery_configuration': SourceLocationDefaultSegmentDeliveryConfiguration,
            'http_configuration': UpdateSourceLocationResponseHttpConfiguration,
            'last_modified_time': datetime,
            'segment_delivery_configurations': List,
            'source_location_name': str,
            'tags': Dict
        }

        self.attribute_map = {
            'access_configuration': 'AccessConfiguration',
            'arn': 'Arn',
            'creation_time': 'CreationTime',
            'default_segment_delivery_configuration': 'DefaultSegmentDeliveryConfiguration',
            'http_configuration': 'HttpConfiguration',
            'last_modified_time': 'LastModifiedTime',
            'segment_delivery_configurations': 'SegmentDeliveryConfigurations',
            'source_location_name': 'SourceLocationName',
            'tags': 'Tags'
        }

        self._access_configuration = access_configuration
        self._arn = arn
        self._creation_time = creation_time
        self._default_segment_delivery_configuration = default_segment_delivery_configuration
        self._http_configuration = http_configuration
        self._last_modified_time = last_modified_time
        self._segment_delivery_configurations = segment_delivery_configurations
        self._source_location_name = source_location_name
        self._tags = tags

    @classmethod
    def from_dict(cls, dikt: dict) -> 'SourceLocation':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The SourceLocation of this SourceLocation.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def access_configuration(self):
        """Gets the access_configuration of this SourceLocation.


        :return: The access_configuration of this SourceLocation.
        :rtype: DescribeSourceLocationResponseAccessConfiguration
        """
        return self._access_configuration

    @access_configuration.setter
    def access_configuration(self, access_configuration):
        """Sets the access_configuration of this SourceLocation.


        :param access_configuration: The access_configuration of this SourceLocation.
        :type access_configuration: DescribeSourceLocationResponseAccessConfiguration
        """

        self._access_configuration = access_configuration

    @property
    def arn(self):
        """Gets the arn of this SourceLocation.


        :return: The arn of this SourceLocation.
        :rtype: str
        """
        return self._arn

    @arn.setter
    def arn(self, arn):
        """Sets the arn of this SourceLocation.


        :param arn: The arn of this SourceLocation.
        :type arn: str
        """
        if arn is None:
            raise ValueError("Invalid value for `arn`, must not be `None`")

        self._arn = arn

    @property
    def creation_time(self):
        """Gets the creation_time of this SourceLocation.


        :return: The creation_time of this SourceLocation.
        :rtype: datetime
        """
        return self._creation_time

    @creation_time.setter
    def creation_time(self, creation_time):
        """Sets the creation_time of this SourceLocation.


        :param creation_time: The creation_time of this SourceLocation.
        :type creation_time: datetime
        """

        self._creation_time = creation_time

    @property
    def default_segment_delivery_configuration(self):
        """Gets the default_segment_delivery_configuration of this SourceLocation.


        :return: The default_segment_delivery_configuration of this SourceLocation.
        :rtype: SourceLocationDefaultSegmentDeliveryConfiguration
        """
        return self._default_segment_delivery_configuration

    @default_segment_delivery_configuration.setter
    def default_segment_delivery_configuration(self, default_segment_delivery_configuration):
        """Sets the default_segment_delivery_configuration of this SourceLocation.


        :param default_segment_delivery_configuration: The default_segment_delivery_configuration of this SourceLocation.
        :type default_segment_delivery_configuration: SourceLocationDefaultSegmentDeliveryConfiguration
        """

        self._default_segment_delivery_configuration = default_segment_delivery_configuration

    @property
    def http_configuration(self):
        """Gets the http_configuration of this SourceLocation.


        :return: The http_configuration of this SourceLocation.
        :rtype: UpdateSourceLocationResponseHttpConfiguration
        """
        return self._http_configuration

    @http_configuration.setter
    def http_configuration(self, http_configuration):
        """Sets the http_configuration of this SourceLocation.


        :param http_configuration: The http_configuration of this SourceLocation.
        :type http_configuration: UpdateSourceLocationResponseHttpConfiguration
        """
        if http_configuration is None:
            raise ValueError("Invalid value for `http_configuration`, must not be `None`")

        self._http_configuration = http_configuration

    @property
    def last_modified_time(self):
        """Gets the last_modified_time of this SourceLocation.


        :return: The last_modified_time of this SourceLocation.
        :rtype: datetime
        """
        return self._last_modified_time

    @last_modified_time.setter
    def last_modified_time(self, last_modified_time):
        """Sets the last_modified_time of this SourceLocation.


        :param last_modified_time: The last_modified_time of this SourceLocation.
        :type last_modified_time: datetime
        """

        self._last_modified_time = last_modified_time

    @property
    def segment_delivery_configurations(self):
        """Gets the segment_delivery_configurations of this SourceLocation.


        :return: The segment_delivery_configurations of this SourceLocation.
        :rtype: List
        """
        return self._segment_delivery_configurations

    @segment_delivery_configurations.setter
    def segment_delivery_configurations(self, segment_delivery_configurations):
        """Sets the segment_delivery_configurations of this SourceLocation.


        :param segment_delivery_configurations: The segment_delivery_configurations of this SourceLocation.
        :type segment_delivery_configurations: List
        """

        self._segment_delivery_configurations = segment_delivery_configurations

    @property
    def source_location_name(self):
        """Gets the source_location_name of this SourceLocation.


        :return: The source_location_name of this SourceLocation.
        :rtype: str
        """
        return self._source_location_name

    @source_location_name.setter
    def source_location_name(self, source_location_name):
        """Sets the source_location_name of this SourceLocation.


        :param source_location_name: The source_location_name of this SourceLocation.
        :type source_location_name: str
        """
        if source_location_name is None:
            raise ValueError("Invalid value for `source_location_name`, must not be `None`")

        self._source_location_name = source_location_name

    @property
    def tags(self):
        """Gets the tags of this SourceLocation.


        :return: The tags of this SourceLocation.
        :rtype: Dict
        """
        return self._tags

    @tags.setter
    def tags(self, tags):
        """Sets the tags of this SourceLocation.


        :param tags: The tags of this SourceLocation.
        :type tags: Dict
        """

        self._tags = tags
