# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.ad_break import AdBreak
from openapi_server.models.create_program_request_schedule_configuration import CreateProgramRequestScheduleConfiguration
from openapi_server import util


class CreateProgramRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, ad_breaks: List[AdBreak]=None, live_source_name: str=None, schedule_configuration: CreateProgramRequestScheduleConfiguration=None, source_location_name: str=None, vod_source_name: str=None):
        """CreateProgramRequest - a model defined in OpenAPI

        :param ad_breaks: The ad_breaks of this CreateProgramRequest.
        :param live_source_name: The live_source_name of this CreateProgramRequest.
        :param schedule_configuration: The schedule_configuration of this CreateProgramRequest.
        :param source_location_name: The source_location_name of this CreateProgramRequest.
        :param vod_source_name: The vod_source_name of this CreateProgramRequest.
        """
        self.openapi_types = {
            'ad_breaks': List[AdBreak],
            'live_source_name': str,
            'schedule_configuration': CreateProgramRequestScheduleConfiguration,
            'source_location_name': str,
            'vod_source_name': str
        }

        self.attribute_map = {
            'ad_breaks': 'AdBreaks',
            'live_source_name': 'LiveSourceName',
            'schedule_configuration': 'ScheduleConfiguration',
            'source_location_name': 'SourceLocationName',
            'vod_source_name': 'VodSourceName'
        }

        self._ad_breaks = ad_breaks
        self._live_source_name = live_source_name
        self._schedule_configuration = schedule_configuration
        self._source_location_name = source_location_name
        self._vod_source_name = vod_source_name

    @classmethod
    def from_dict(cls, dikt: dict) -> 'CreateProgramRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The CreateProgram_request of this CreateProgramRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def ad_breaks(self):
        """Gets the ad_breaks of this CreateProgramRequest.

        The ad break configuration settings.

        :return: The ad_breaks of this CreateProgramRequest.
        :rtype: List[AdBreak]
        """
        return self._ad_breaks

    @ad_breaks.setter
    def ad_breaks(self, ad_breaks):
        """Sets the ad_breaks of this CreateProgramRequest.

        The ad break configuration settings.

        :param ad_breaks: The ad_breaks of this CreateProgramRequest.
        :type ad_breaks: List[AdBreak]
        """

        self._ad_breaks = ad_breaks

    @property
    def live_source_name(self):
        """Gets the live_source_name of this CreateProgramRequest.

        The name of the LiveSource for this Program.

        :return: The live_source_name of this CreateProgramRequest.
        :rtype: str
        """
        return self._live_source_name

    @live_source_name.setter
    def live_source_name(self, live_source_name):
        """Sets the live_source_name of this CreateProgramRequest.

        The name of the LiveSource for this Program.

        :param live_source_name: The live_source_name of this CreateProgramRequest.
        :type live_source_name: str
        """

        self._live_source_name = live_source_name

    @property
    def schedule_configuration(self):
        """Gets the schedule_configuration of this CreateProgramRequest.


        :return: The schedule_configuration of this CreateProgramRequest.
        :rtype: CreateProgramRequestScheduleConfiguration
        """
        return self._schedule_configuration

    @schedule_configuration.setter
    def schedule_configuration(self, schedule_configuration):
        """Sets the schedule_configuration of this CreateProgramRequest.


        :param schedule_configuration: The schedule_configuration of this CreateProgramRequest.
        :type schedule_configuration: CreateProgramRequestScheduleConfiguration
        """
        if schedule_configuration is None:
            raise ValueError("Invalid value for `schedule_configuration`, must not be `None`")

        self._schedule_configuration = schedule_configuration

    @property
    def source_location_name(self):
        """Gets the source_location_name of this CreateProgramRequest.

        The name of the source location.

        :return: The source_location_name of this CreateProgramRequest.
        :rtype: str
        """
        return self._source_location_name

    @source_location_name.setter
    def source_location_name(self, source_location_name):
        """Sets the source_location_name of this CreateProgramRequest.

        The name of the source location.

        :param source_location_name: The source_location_name of this CreateProgramRequest.
        :type source_location_name: str
        """
        if source_location_name is None:
            raise ValueError("Invalid value for `source_location_name`, must not be `None`")

        self._source_location_name = source_location_name

    @property
    def vod_source_name(self):
        """Gets the vod_source_name of this CreateProgramRequest.

        The name that's used to refer to a VOD source.

        :return: The vod_source_name of this CreateProgramRequest.
        :rtype: str
        """
        return self._vod_source_name

    @vod_source_name.setter
    def vod_source_name(self, vod_source_name):
        """Sets the vod_source_name of this CreateProgramRequest.

        The name that's used to refer to a VOD source.

        :param vod_source_name: The vod_source_name of this CreateProgramRequest.
        :type vod_source_name: str
        """

        self._vod_source_name = vod_source_name
