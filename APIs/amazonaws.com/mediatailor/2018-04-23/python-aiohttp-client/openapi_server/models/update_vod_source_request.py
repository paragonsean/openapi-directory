# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class UpdateVodSourceRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, http_package_configurations: List=None):
        """UpdateVodSourceRequest - a model defined in OpenAPI

        :param http_package_configurations: The http_package_configurations of this UpdateVodSourceRequest.
        """
        self.openapi_types = {
            'http_package_configurations': List
        }

        self.attribute_map = {
            'http_package_configurations': 'HttpPackageConfigurations'
        }

        self._http_package_configurations = http_package_configurations

    @classmethod
    def from_dict(cls, dikt: dict) -> 'UpdateVodSourceRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The UpdateVodSourceRequest of this UpdateVodSourceRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def http_package_configurations(self):
        """Gets the http_package_configurations of this UpdateVodSourceRequest.


        :return: The http_package_configurations of this UpdateVodSourceRequest.
        :rtype: List
        """
        return self._http_package_configurations

    @http_package_configurations.setter
    def http_package_configurations(self, http_package_configurations):
        """Sets the http_package_configurations of this UpdateVodSourceRequest.


        :param http_package_configurations: The http_package_configurations of this UpdateVodSourceRequest.
        :type http_package_configurations: List
        """
        if http_package_configurations is None:
            raise ValueError("Invalid value for `http_package_configurations`, must not be `None`")

        self._http_package_configurations = http_package_configurations
