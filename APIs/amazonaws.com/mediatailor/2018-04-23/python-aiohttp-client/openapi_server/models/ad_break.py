# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.ad_break_slate import AdBreakSlate
from openapi_server.models.ad_break_splice_insert_message import AdBreakSpliceInsertMessage
from openapi_server.models.ad_break_time_signal_message import AdBreakTimeSignalMessage
from openapi_server.models.message_type import MessageType
from openapi_server import util


class AdBreak(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, ad_break_metadata: List=None, message_type: MessageType=None, offset_millis: int=None, slate: AdBreakSlate=None, splice_insert_message: AdBreakSpliceInsertMessage=None, time_signal_message: AdBreakTimeSignalMessage=None):
        """AdBreak - a model defined in OpenAPI

        :param ad_break_metadata: The ad_break_metadata of this AdBreak.
        :param message_type: The message_type of this AdBreak.
        :param offset_millis: The offset_millis of this AdBreak.
        :param slate: The slate of this AdBreak.
        :param splice_insert_message: The splice_insert_message of this AdBreak.
        :param time_signal_message: The time_signal_message of this AdBreak.
        """
        self.openapi_types = {
            'ad_break_metadata': List,
            'message_type': MessageType,
            'offset_millis': int,
            'slate': AdBreakSlate,
            'splice_insert_message': AdBreakSpliceInsertMessage,
            'time_signal_message': AdBreakTimeSignalMessage
        }

        self.attribute_map = {
            'ad_break_metadata': 'AdBreakMetadata',
            'message_type': 'MessageType',
            'offset_millis': 'OffsetMillis',
            'slate': 'Slate',
            'splice_insert_message': 'SpliceInsertMessage',
            'time_signal_message': 'TimeSignalMessage'
        }

        self._ad_break_metadata = ad_break_metadata
        self._message_type = message_type
        self._offset_millis = offset_millis
        self._slate = slate
        self._splice_insert_message = splice_insert_message
        self._time_signal_message = time_signal_message

    @classmethod
    def from_dict(cls, dikt: dict) -> 'AdBreak':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The AdBreak of this AdBreak.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def ad_break_metadata(self):
        """Gets the ad_break_metadata of this AdBreak.


        :return: The ad_break_metadata of this AdBreak.
        :rtype: List
        """
        return self._ad_break_metadata

    @ad_break_metadata.setter
    def ad_break_metadata(self, ad_break_metadata):
        """Sets the ad_break_metadata of this AdBreak.


        :param ad_break_metadata: The ad_break_metadata of this AdBreak.
        :type ad_break_metadata: List
        """

        self._ad_break_metadata = ad_break_metadata

    @property
    def message_type(self):
        """Gets the message_type of this AdBreak.


        :return: The message_type of this AdBreak.
        :rtype: MessageType
        """
        return self._message_type

    @message_type.setter
    def message_type(self, message_type):
        """Sets the message_type of this AdBreak.


        :param message_type: The message_type of this AdBreak.
        :type message_type: MessageType
        """

        self._message_type = message_type

    @property
    def offset_millis(self):
        """Gets the offset_millis of this AdBreak.


        :return: The offset_millis of this AdBreak.
        :rtype: int
        """
        return self._offset_millis

    @offset_millis.setter
    def offset_millis(self, offset_millis):
        """Sets the offset_millis of this AdBreak.


        :param offset_millis: The offset_millis of this AdBreak.
        :type offset_millis: int
        """

        self._offset_millis = offset_millis

    @property
    def slate(self):
        """Gets the slate of this AdBreak.


        :return: The slate of this AdBreak.
        :rtype: AdBreakSlate
        """
        return self._slate

    @slate.setter
    def slate(self, slate):
        """Sets the slate of this AdBreak.


        :param slate: The slate of this AdBreak.
        :type slate: AdBreakSlate
        """

        self._slate = slate

    @property
    def splice_insert_message(self):
        """Gets the splice_insert_message of this AdBreak.


        :return: The splice_insert_message of this AdBreak.
        :rtype: AdBreakSpliceInsertMessage
        """
        return self._splice_insert_message

    @splice_insert_message.setter
    def splice_insert_message(self, splice_insert_message):
        """Sets the splice_insert_message of this AdBreak.


        :param splice_insert_message: The splice_insert_message of this AdBreak.
        :type splice_insert_message: AdBreakSpliceInsertMessage
        """

        self._splice_insert_message = splice_insert_message

    @property
    def time_signal_message(self):
        """Gets the time_signal_message of this AdBreak.


        :return: The time_signal_message of this AdBreak.
        :rtype: AdBreakTimeSignalMessage
        """
        return self._time_signal_message

    @time_signal_message.setter
    def time_signal_message(self, time_signal_message):
        """Sets the time_signal_message of this AdBreak.


        :param time_signal_message: The time_signal_message of this AdBreak.
        :type time_signal_message: AdBreakTimeSignalMessage
        """

        self._time_signal_message = time_signal_message
