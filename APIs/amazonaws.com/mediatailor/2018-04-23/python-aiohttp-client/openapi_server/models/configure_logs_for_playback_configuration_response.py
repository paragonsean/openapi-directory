# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class ConfigureLogsForPlaybackConfigurationResponse(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, percent_enabled: int=None, playback_configuration_name: str=None):
        """ConfigureLogsForPlaybackConfigurationResponse - a model defined in OpenAPI

        :param percent_enabled: The percent_enabled of this ConfigureLogsForPlaybackConfigurationResponse.
        :param playback_configuration_name: The playback_configuration_name of this ConfigureLogsForPlaybackConfigurationResponse.
        """
        self.openapi_types = {
            'percent_enabled': int,
            'playback_configuration_name': str
        }

        self.attribute_map = {
            'percent_enabled': 'PercentEnabled',
            'playback_configuration_name': 'PlaybackConfigurationName'
        }

        self._percent_enabled = percent_enabled
        self._playback_configuration_name = playback_configuration_name

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ConfigureLogsForPlaybackConfigurationResponse':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ConfigureLogsForPlaybackConfigurationResponse of this ConfigureLogsForPlaybackConfigurationResponse.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def percent_enabled(self):
        """Gets the percent_enabled of this ConfigureLogsForPlaybackConfigurationResponse.


        :return: The percent_enabled of this ConfigureLogsForPlaybackConfigurationResponse.
        :rtype: int
        """
        return self._percent_enabled

    @percent_enabled.setter
    def percent_enabled(self, percent_enabled):
        """Sets the percent_enabled of this ConfigureLogsForPlaybackConfigurationResponse.


        :param percent_enabled: The percent_enabled of this ConfigureLogsForPlaybackConfigurationResponse.
        :type percent_enabled: int
        """
        if percent_enabled is None:
            raise ValueError("Invalid value for `percent_enabled`, must not be `None`")

        self._percent_enabled = percent_enabled

    @property
    def playback_configuration_name(self):
        """Gets the playback_configuration_name of this ConfigureLogsForPlaybackConfigurationResponse.


        :return: The playback_configuration_name of this ConfigureLogsForPlaybackConfigurationResponse.
        :rtype: str
        """
        return self._playback_configuration_name

    @playback_configuration_name.setter
    def playback_configuration_name(self, playback_configuration_name):
        """Sets the playback_configuration_name of this ConfigureLogsForPlaybackConfigurationResponse.


        :param playback_configuration_name: The playback_configuration_name of this ConfigureLogsForPlaybackConfigurationResponse.
        :type playback_configuration_name: str
        """

        self._playback_configuration_name = playback_configuration_name
