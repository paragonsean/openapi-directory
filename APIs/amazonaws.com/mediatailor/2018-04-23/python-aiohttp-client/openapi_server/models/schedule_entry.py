# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.schedule_entry_type import ScheduleEntryType
from openapi_server import util


class ScheduleEntry(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, approximate_duration_seconds: int=None, approximate_start_time: datetime=None, arn: str=None, channel_name: str=None, live_source_name: str=None, program_name: str=None, schedule_ad_breaks: List=None, schedule_entry_type: ScheduleEntryType=None, source_location_name: str=None, vod_source_name: str=None):
        """ScheduleEntry - a model defined in OpenAPI

        :param approximate_duration_seconds: The approximate_duration_seconds of this ScheduleEntry.
        :param approximate_start_time: The approximate_start_time of this ScheduleEntry.
        :param arn: The arn of this ScheduleEntry.
        :param channel_name: The channel_name of this ScheduleEntry.
        :param live_source_name: The live_source_name of this ScheduleEntry.
        :param program_name: The program_name of this ScheduleEntry.
        :param schedule_ad_breaks: The schedule_ad_breaks of this ScheduleEntry.
        :param schedule_entry_type: The schedule_entry_type of this ScheduleEntry.
        :param source_location_name: The source_location_name of this ScheduleEntry.
        :param vod_source_name: The vod_source_name of this ScheduleEntry.
        """
        self.openapi_types = {
            'approximate_duration_seconds': int,
            'approximate_start_time': datetime,
            'arn': str,
            'channel_name': str,
            'live_source_name': str,
            'program_name': str,
            'schedule_ad_breaks': List,
            'schedule_entry_type': ScheduleEntryType,
            'source_location_name': str,
            'vod_source_name': str
        }

        self.attribute_map = {
            'approximate_duration_seconds': 'ApproximateDurationSeconds',
            'approximate_start_time': 'ApproximateStartTime',
            'arn': 'Arn',
            'channel_name': 'ChannelName',
            'live_source_name': 'LiveSourceName',
            'program_name': 'ProgramName',
            'schedule_ad_breaks': 'ScheduleAdBreaks',
            'schedule_entry_type': 'ScheduleEntryType',
            'source_location_name': 'SourceLocationName',
            'vod_source_name': 'VodSourceName'
        }

        self._approximate_duration_seconds = approximate_duration_seconds
        self._approximate_start_time = approximate_start_time
        self._arn = arn
        self._channel_name = channel_name
        self._live_source_name = live_source_name
        self._program_name = program_name
        self._schedule_ad_breaks = schedule_ad_breaks
        self._schedule_entry_type = schedule_entry_type
        self._source_location_name = source_location_name
        self._vod_source_name = vod_source_name

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ScheduleEntry':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ScheduleEntry of this ScheduleEntry.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def approximate_duration_seconds(self):
        """Gets the approximate_duration_seconds of this ScheduleEntry.


        :return: The approximate_duration_seconds of this ScheduleEntry.
        :rtype: int
        """
        return self._approximate_duration_seconds

    @approximate_duration_seconds.setter
    def approximate_duration_seconds(self, approximate_duration_seconds):
        """Sets the approximate_duration_seconds of this ScheduleEntry.


        :param approximate_duration_seconds: The approximate_duration_seconds of this ScheduleEntry.
        :type approximate_duration_seconds: int
        """

        self._approximate_duration_seconds = approximate_duration_seconds

    @property
    def approximate_start_time(self):
        """Gets the approximate_start_time of this ScheduleEntry.


        :return: The approximate_start_time of this ScheduleEntry.
        :rtype: datetime
        """
        return self._approximate_start_time

    @approximate_start_time.setter
    def approximate_start_time(self, approximate_start_time):
        """Sets the approximate_start_time of this ScheduleEntry.


        :param approximate_start_time: The approximate_start_time of this ScheduleEntry.
        :type approximate_start_time: datetime
        """

        self._approximate_start_time = approximate_start_time

    @property
    def arn(self):
        """Gets the arn of this ScheduleEntry.


        :return: The arn of this ScheduleEntry.
        :rtype: str
        """
        return self._arn

    @arn.setter
    def arn(self, arn):
        """Sets the arn of this ScheduleEntry.


        :param arn: The arn of this ScheduleEntry.
        :type arn: str
        """
        if arn is None:
            raise ValueError("Invalid value for `arn`, must not be `None`")

        self._arn = arn

    @property
    def channel_name(self):
        """Gets the channel_name of this ScheduleEntry.


        :return: The channel_name of this ScheduleEntry.
        :rtype: str
        """
        return self._channel_name

    @channel_name.setter
    def channel_name(self, channel_name):
        """Sets the channel_name of this ScheduleEntry.


        :param channel_name: The channel_name of this ScheduleEntry.
        :type channel_name: str
        """
        if channel_name is None:
            raise ValueError("Invalid value for `channel_name`, must not be `None`")

        self._channel_name = channel_name

    @property
    def live_source_name(self):
        """Gets the live_source_name of this ScheduleEntry.


        :return: The live_source_name of this ScheduleEntry.
        :rtype: str
        """
        return self._live_source_name

    @live_source_name.setter
    def live_source_name(self, live_source_name):
        """Sets the live_source_name of this ScheduleEntry.


        :param live_source_name: The live_source_name of this ScheduleEntry.
        :type live_source_name: str
        """

        self._live_source_name = live_source_name

    @property
    def program_name(self):
        """Gets the program_name of this ScheduleEntry.


        :return: The program_name of this ScheduleEntry.
        :rtype: str
        """
        return self._program_name

    @program_name.setter
    def program_name(self, program_name):
        """Sets the program_name of this ScheduleEntry.


        :param program_name: The program_name of this ScheduleEntry.
        :type program_name: str
        """
        if program_name is None:
            raise ValueError("Invalid value for `program_name`, must not be `None`")

        self._program_name = program_name

    @property
    def schedule_ad_breaks(self):
        """Gets the schedule_ad_breaks of this ScheduleEntry.


        :return: The schedule_ad_breaks of this ScheduleEntry.
        :rtype: List
        """
        return self._schedule_ad_breaks

    @schedule_ad_breaks.setter
    def schedule_ad_breaks(self, schedule_ad_breaks):
        """Sets the schedule_ad_breaks of this ScheduleEntry.


        :param schedule_ad_breaks: The schedule_ad_breaks of this ScheduleEntry.
        :type schedule_ad_breaks: List
        """

        self._schedule_ad_breaks = schedule_ad_breaks

    @property
    def schedule_entry_type(self):
        """Gets the schedule_entry_type of this ScheduleEntry.


        :return: The schedule_entry_type of this ScheduleEntry.
        :rtype: ScheduleEntryType
        """
        return self._schedule_entry_type

    @schedule_entry_type.setter
    def schedule_entry_type(self, schedule_entry_type):
        """Sets the schedule_entry_type of this ScheduleEntry.


        :param schedule_entry_type: The schedule_entry_type of this ScheduleEntry.
        :type schedule_entry_type: ScheduleEntryType
        """

        self._schedule_entry_type = schedule_entry_type

    @property
    def source_location_name(self):
        """Gets the source_location_name of this ScheduleEntry.


        :return: The source_location_name of this ScheduleEntry.
        :rtype: str
        """
        return self._source_location_name

    @source_location_name.setter
    def source_location_name(self, source_location_name):
        """Sets the source_location_name of this ScheduleEntry.


        :param source_location_name: The source_location_name of this ScheduleEntry.
        :type source_location_name: str
        """
        if source_location_name is None:
            raise ValueError("Invalid value for `source_location_name`, must not be `None`")

        self._source_location_name = source_location_name

    @property
    def vod_source_name(self):
        """Gets the vod_source_name of this ScheduleEntry.


        :return: The vod_source_name of this ScheduleEntry.
        :rtype: str
        """
        return self._vod_source_name

    @vod_source_name.setter
    def vod_source_name(self, vod_source_name):
        """Sets the vod_source_name of this ScheduleEntry.


        :param vod_source_name: The vod_source_name of this ScheduleEntry.
        :type vod_source_name: str
        """

        self._vod_source_name = vod_source_name
