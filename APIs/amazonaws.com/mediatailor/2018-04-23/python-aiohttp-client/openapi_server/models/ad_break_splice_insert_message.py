# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class AdBreakSpliceInsertMessage(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, avail_num: int=None, avails_expected: int=None, splice_event_id: int=None, unique_program_id: int=None):
        """AdBreakSpliceInsertMessage - a model defined in OpenAPI

        :param avail_num: The avail_num of this AdBreakSpliceInsertMessage.
        :param avails_expected: The avails_expected of this AdBreakSpliceInsertMessage.
        :param splice_event_id: The splice_event_id of this AdBreakSpliceInsertMessage.
        :param unique_program_id: The unique_program_id of this AdBreakSpliceInsertMessage.
        """
        self.openapi_types = {
            'avail_num': int,
            'avails_expected': int,
            'splice_event_id': int,
            'unique_program_id': int
        }

        self.attribute_map = {
            'avail_num': 'AvailNum',
            'avails_expected': 'AvailsExpected',
            'splice_event_id': 'SpliceEventId',
            'unique_program_id': 'UniqueProgramId'
        }

        self._avail_num = avail_num
        self._avails_expected = avails_expected
        self._splice_event_id = splice_event_id
        self._unique_program_id = unique_program_id

    @classmethod
    def from_dict(cls, dikt: dict) -> 'AdBreakSpliceInsertMessage':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The AdBreak_SpliceInsertMessage of this AdBreakSpliceInsertMessage.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def avail_num(self):
        """Gets the avail_num of this AdBreakSpliceInsertMessage.


        :return: The avail_num of this AdBreakSpliceInsertMessage.
        :rtype: int
        """
        return self._avail_num

    @avail_num.setter
    def avail_num(self, avail_num):
        """Sets the avail_num of this AdBreakSpliceInsertMessage.


        :param avail_num: The avail_num of this AdBreakSpliceInsertMessage.
        :type avail_num: int
        """

        self._avail_num = avail_num

    @property
    def avails_expected(self):
        """Gets the avails_expected of this AdBreakSpliceInsertMessage.


        :return: The avails_expected of this AdBreakSpliceInsertMessage.
        :rtype: int
        """
        return self._avails_expected

    @avails_expected.setter
    def avails_expected(self, avails_expected):
        """Sets the avails_expected of this AdBreakSpliceInsertMessage.


        :param avails_expected: The avails_expected of this AdBreakSpliceInsertMessage.
        :type avails_expected: int
        """

        self._avails_expected = avails_expected

    @property
    def splice_event_id(self):
        """Gets the splice_event_id of this AdBreakSpliceInsertMessage.


        :return: The splice_event_id of this AdBreakSpliceInsertMessage.
        :rtype: int
        """
        return self._splice_event_id

    @splice_event_id.setter
    def splice_event_id(self, splice_event_id):
        """Sets the splice_event_id of this AdBreakSpliceInsertMessage.


        :param splice_event_id: The splice_event_id of this AdBreakSpliceInsertMessage.
        :type splice_event_id: int
        """

        self._splice_event_id = splice_event_id

    @property
    def unique_program_id(self):
        """Gets the unique_program_id of this AdBreakSpliceInsertMessage.


        :return: The unique_program_id of this AdBreakSpliceInsertMessage.
        :rtype: int
        """
        return self._unique_program_id

    @unique_program_id.setter
    def unique_program_id(self, unique_program_id):
        """Sets the unique_program_id of this AdBreakSpliceInsertMessage.


        :param unique_program_id: The unique_program_id of this AdBreakSpliceInsertMessage.
        :type unique_program_id: int
        """

        self._unique_program_id = unique_program_id
