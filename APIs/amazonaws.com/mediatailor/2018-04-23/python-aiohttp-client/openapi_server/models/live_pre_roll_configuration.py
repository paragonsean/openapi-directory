# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class LivePreRollConfiguration(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, ad_decision_server_url: str=None, max_duration_seconds: int=None):
        """LivePreRollConfiguration - a model defined in OpenAPI

        :param ad_decision_server_url: The ad_decision_server_url of this LivePreRollConfiguration.
        :param max_duration_seconds: The max_duration_seconds of this LivePreRollConfiguration.
        """
        self.openapi_types = {
            'ad_decision_server_url': str,
            'max_duration_seconds': int
        }

        self.attribute_map = {
            'ad_decision_server_url': 'AdDecisionServerUrl',
            'max_duration_seconds': 'MaxDurationSeconds'
        }

        self._ad_decision_server_url = ad_decision_server_url
        self._max_duration_seconds = max_duration_seconds

    @classmethod
    def from_dict(cls, dikt: dict) -> 'LivePreRollConfiguration':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The LivePreRollConfiguration of this LivePreRollConfiguration.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def ad_decision_server_url(self):
        """Gets the ad_decision_server_url of this LivePreRollConfiguration.


        :return: The ad_decision_server_url of this LivePreRollConfiguration.
        :rtype: str
        """
        return self._ad_decision_server_url

    @ad_decision_server_url.setter
    def ad_decision_server_url(self, ad_decision_server_url):
        """Sets the ad_decision_server_url of this LivePreRollConfiguration.


        :param ad_decision_server_url: The ad_decision_server_url of this LivePreRollConfiguration.
        :type ad_decision_server_url: str
        """

        self._ad_decision_server_url = ad_decision_server_url

    @property
    def max_duration_seconds(self):
        """Gets the max_duration_seconds of this LivePreRollConfiguration.


        :return: The max_duration_seconds of this LivePreRollConfiguration.
        :rtype: int
        """
        return self._max_duration_seconds

    @max_duration_seconds.setter
    def max_duration_seconds(self, max_duration_seconds):
        """Sets the max_duration_seconds of this LivePreRollConfiguration.


        :param max_duration_seconds: The max_duration_seconds of this LivePreRollConfiguration.
        :type max_duration_seconds: int
        """

        self._max_duration_seconds = max_duration_seconds
