# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.fill_policy import FillPolicy
from openapi_server.models.mode import Mode
from openapi_server import util


class AvailSuppression(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, fill_policy: FillPolicy=None, mode: Mode=None, value: str=None):
        """AvailSuppression - a model defined in OpenAPI

        :param fill_policy: The fill_policy of this AvailSuppression.
        :param mode: The mode of this AvailSuppression.
        :param value: The value of this AvailSuppression.
        """
        self.openapi_types = {
            'fill_policy': FillPolicy,
            'mode': Mode,
            'value': str
        }

        self.attribute_map = {
            'fill_policy': 'FillPolicy',
            'mode': 'Mode',
            'value': 'Value'
        }

        self._fill_policy = fill_policy
        self._mode = mode
        self._value = value

    @classmethod
    def from_dict(cls, dikt: dict) -> 'AvailSuppression':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The AvailSuppression of this AvailSuppression.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def fill_policy(self):
        """Gets the fill_policy of this AvailSuppression.


        :return: The fill_policy of this AvailSuppression.
        :rtype: FillPolicy
        """
        return self._fill_policy

    @fill_policy.setter
    def fill_policy(self, fill_policy):
        """Sets the fill_policy of this AvailSuppression.


        :param fill_policy: The fill_policy of this AvailSuppression.
        :type fill_policy: FillPolicy
        """

        self._fill_policy = fill_policy

    @property
    def mode(self):
        """Gets the mode of this AvailSuppression.


        :return: The mode of this AvailSuppression.
        :rtype: Mode
        """
        return self._mode

    @mode.setter
    def mode(self, mode):
        """Sets the mode of this AvailSuppression.


        :param mode: The mode of this AvailSuppression.
        :type mode: Mode
        """

        self._mode = mode

    @property
    def value(self):
        """Gets the value of this AvailSuppression.


        :return: The value of this AvailSuppression.
        :rtype: str
        """
        return self._value

    @value.setter
    def value(self, value):
        """Sets the value of this AvailSuppression.


        :param value: The value of this AvailSuppression.
        :type value: str
        """

        self._value = value
