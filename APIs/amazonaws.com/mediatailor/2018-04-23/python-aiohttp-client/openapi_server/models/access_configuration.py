# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.access_type import AccessType
from openapi_server.models.update_source_location_request_access_configuration_secrets_manager_access_token_configuration import UpdateSourceLocationRequestAccessConfigurationSecretsManagerAccessTokenConfiguration
from openapi_server import util


class AccessConfiguration(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, access_type: AccessType=None, secrets_manager_access_token_configuration: UpdateSourceLocationRequestAccessConfigurationSecretsManagerAccessTokenConfiguration=None):
        """AccessConfiguration - a model defined in OpenAPI

        :param access_type: The access_type of this AccessConfiguration.
        :param secrets_manager_access_token_configuration: The secrets_manager_access_token_configuration of this AccessConfiguration.
        """
        self.openapi_types = {
            'access_type': AccessType,
            'secrets_manager_access_token_configuration': UpdateSourceLocationRequestAccessConfigurationSecretsManagerAccessTokenConfiguration
        }

        self.attribute_map = {
            'access_type': 'AccessType',
            'secrets_manager_access_token_configuration': 'SecretsManagerAccessTokenConfiguration'
        }

        self._access_type = access_type
        self._secrets_manager_access_token_configuration = secrets_manager_access_token_configuration

    @classmethod
    def from_dict(cls, dikt: dict) -> 'AccessConfiguration':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The AccessConfiguration of this AccessConfiguration.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def access_type(self):
        """Gets the access_type of this AccessConfiguration.


        :return: The access_type of this AccessConfiguration.
        :rtype: AccessType
        """
        return self._access_type

    @access_type.setter
    def access_type(self, access_type):
        """Sets the access_type of this AccessConfiguration.


        :param access_type: The access_type of this AccessConfiguration.
        :type access_type: AccessType
        """

        self._access_type = access_type

    @property
    def secrets_manager_access_token_configuration(self):
        """Gets the secrets_manager_access_token_configuration of this AccessConfiguration.


        :return: The secrets_manager_access_token_configuration of this AccessConfiguration.
        :rtype: UpdateSourceLocationRequestAccessConfigurationSecretsManagerAccessTokenConfiguration
        """
        return self._secrets_manager_access_token_configuration

    @secrets_manager_access_token_configuration.setter
    def secrets_manager_access_token_configuration(self, secrets_manager_access_token_configuration):
        """Sets the secrets_manager_access_token_configuration of this AccessConfiguration.


        :param secrets_manager_access_token_configuration: The secrets_manager_access_token_configuration of this AccessConfiguration.
        :type secrets_manager_access_token_configuration: UpdateSourceLocationRequestAccessConfigurationSecretsManagerAccessTokenConfiguration
        """

        self._secrets_manager_access_token_configuration = secrets_manager_access_token_configuration
