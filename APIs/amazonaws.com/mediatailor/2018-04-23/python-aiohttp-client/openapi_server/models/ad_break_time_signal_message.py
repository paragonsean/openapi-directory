# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class AdBreakTimeSignalMessage(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, segmentation_descriptors: List=None):
        """AdBreakTimeSignalMessage - a model defined in OpenAPI

        :param segmentation_descriptors: The segmentation_descriptors of this AdBreakTimeSignalMessage.
        """
        self.openapi_types = {
            'segmentation_descriptors': List
        }

        self.attribute_map = {
            'segmentation_descriptors': 'SegmentationDescriptors'
        }

        self._segmentation_descriptors = segmentation_descriptors

    @classmethod
    def from_dict(cls, dikt: dict) -> 'AdBreakTimeSignalMessage':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The AdBreak_TimeSignalMessage of this AdBreakTimeSignalMessage.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def segmentation_descriptors(self):
        """Gets the segmentation_descriptors of this AdBreakTimeSignalMessage.


        :return: The segmentation_descriptors of this AdBreakTimeSignalMessage.
        :rtype: List
        """
        return self._segmentation_descriptors

    @segmentation_descriptors.setter
    def segmentation_descriptors(self, segmentation_descriptors):
        """Sets the segmentation_descriptors of this AdBreakTimeSignalMessage.


        :param segmentation_descriptors: The segmentation_descriptors of this AdBreakTimeSignalMessage.
        :type segmentation_descriptors: List
        """

        self._segmentation_descriptors = segmentation_descriptors
