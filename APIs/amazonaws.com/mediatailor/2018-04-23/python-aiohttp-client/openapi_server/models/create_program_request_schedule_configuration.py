# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.create_program_request_schedule_configuration_transition import CreateProgramRequestScheduleConfigurationTransition
from openapi_server.models.update_program_request_schedule_configuration_clip_range import UpdateProgramRequestScheduleConfigurationClipRange
from openapi_server import util


class CreateProgramRequestScheduleConfiguration(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, clip_range: UpdateProgramRequestScheduleConfigurationClipRange=None, transition: CreateProgramRequestScheduleConfigurationTransition=None):
        """CreateProgramRequestScheduleConfiguration - a model defined in OpenAPI

        :param clip_range: The clip_range of this CreateProgramRequestScheduleConfiguration.
        :param transition: The transition of this CreateProgramRequestScheduleConfiguration.
        """
        self.openapi_types = {
            'clip_range': UpdateProgramRequestScheduleConfigurationClipRange,
            'transition': CreateProgramRequestScheduleConfigurationTransition
        }

        self.attribute_map = {
            'clip_range': 'ClipRange',
            'transition': 'Transition'
        }

        self._clip_range = clip_range
        self._transition = transition

    @classmethod
    def from_dict(cls, dikt: dict) -> 'CreateProgramRequestScheduleConfiguration':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The CreateProgramRequest_ScheduleConfiguration of this CreateProgramRequestScheduleConfiguration.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def clip_range(self):
        """Gets the clip_range of this CreateProgramRequestScheduleConfiguration.


        :return: The clip_range of this CreateProgramRequestScheduleConfiguration.
        :rtype: UpdateProgramRequestScheduleConfigurationClipRange
        """
        return self._clip_range

    @clip_range.setter
    def clip_range(self, clip_range):
        """Sets the clip_range of this CreateProgramRequestScheduleConfiguration.


        :param clip_range: The clip_range of this CreateProgramRequestScheduleConfiguration.
        :type clip_range: UpdateProgramRequestScheduleConfigurationClipRange
        """

        self._clip_range = clip_range

    @property
    def transition(self):
        """Gets the transition of this CreateProgramRequestScheduleConfiguration.


        :return: The transition of this CreateProgramRequestScheduleConfiguration.
        :rtype: CreateProgramRequestScheduleConfigurationTransition
        """
        return self._transition

    @transition.setter
    def transition(self, transition):
        """Sets the transition of this CreateProgramRequestScheduleConfiguration.


        :param transition: The transition of this CreateProgramRequestScheduleConfiguration.
        :type transition: CreateProgramRequestScheduleConfigurationTransition
        """
        if transition is None:
            raise ValueError("Invalid value for `transition`, must not be `None`")

        self._transition = transition
