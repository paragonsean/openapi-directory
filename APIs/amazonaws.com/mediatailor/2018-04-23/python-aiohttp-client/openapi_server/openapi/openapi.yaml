openapi: 3.0.0
info:
  contact:
    email: mike.ralphson@gmail.com
    name: Mike Ralphson
    url: https://github.com/mermade/aws2openapi
    x-twitter: PermittedSoc
  description: "<p>Use the AWS Elemental MediaTailor SDKs and CLI to configure scalable\
    \ ad insertion and linear channels. With MediaTailor, you can assemble existing\
    \ content into a linear stream and serve targeted ads to viewers while maintaining\
    \ broadcast quality in over-the-top (OTT) video applications. For information\
    \ about using the service, including detailed information about the settings covered\
    \ in this guide, see the <a href=\"https://docs.aws.amazon.com/mediatailor/latest/ug/\"\
    >AWS Elemental MediaTailor User Guide</a>.</p> <p>Through the SDKs and the CLI\
    \ you manage AWS Elemental MediaTailor configurations and channels the same as\
    \ you do through the console. For example, you specify ad insertion behavior and\
    \ mapping information for the origin server and the ad decision server (ADS).</p>"
  license:
    name: Apache 2.0 License
    url: http://www.apache.org/licenses/
  termsOfService: https://aws.amazon.com/service-terms/
  title: AWS MediaTailor
  version: 2018-04-23
  x-release: v4
  x-logo:
    url: https://twitter.com/awscloud/profile_image?size=original
    backgroundColor: '#FFFFFF'
  x-providerName: amazonaws.com
  x-serviceName: mediatailor
  x-aws-signingName: mediatailor
  x-origin:
  - contentType: application/json
    url: https://raw.githubusercontent.com/aws/aws-sdk-js/master/apis/mediatailor-2018-04-23.normal.json
    converter:
      url: https://github.com/mermade/aws2openapi
      version: 1.0.0
    x-apisguru-driver: external
  x-apiClientRegistration:
    url: https://portal.aws.amazon.com/gp/aws/developer/registration/index.html?nc2=h_ct
  x-apisguru-categories:
  - cloud
  x-preferred: true
externalDocs:
  description: Amazon Web Services documentation
  url: https://docs.aws.amazon.com/mediatailor/
servers:
- description: The MediaTailor multi-region endpoint
  url: "http://api.mediatailor.{region}.amazonaws.com"
  variables:
    region:
      default: us-east-1
      description: The AWS region
      enum:
      - us-east-1
      - us-east-2
      - us-west-1
      - us-west-2
      - us-gov-west-1
      - us-gov-east-1
      - ca-central-1
      - eu-north-1
      - eu-west-1
      - eu-west-2
      - eu-west-3
      - eu-central-1
      - eu-south-1
      - af-south-1
      - ap-northeast-1
      - ap-northeast-2
      - ap-northeast-3
      - ap-southeast-1
      - ap-southeast-2
      - ap-east-1
      - ap-south-1
      - sa-east-1
      - me-south-1
- description: The MediaTailor multi-region endpoint
  url: "https://api.mediatailor.{region}.amazonaws.com"
  variables:
    region:
      default: us-east-1
      description: The AWS region
      enum:
      - us-east-1
      - us-east-2
      - us-west-1
      - us-west-2
      - us-gov-west-1
      - us-gov-east-1
      - ca-central-1
      - eu-north-1
      - eu-west-1
      - eu-west-2
      - eu-west-3
      - eu-central-1
      - eu-south-1
      - af-south-1
      - ap-northeast-1
      - ap-northeast-2
      - ap-northeast-3
      - ap-southeast-1
      - ap-southeast-2
      - ap-east-1
      - ap-south-1
      - sa-east-1
      - me-south-1
- description: The MediaTailor endpoint for China (Beijing) and China (Ningxia)
  url: "http://api.mediatailor.{region}.amazonaws.com.cn"
  variables:
    region:
      default: cn-north-1
      description: The AWS region
      enum:
      - cn-north-1
      - cn-northwest-1
- description: The MediaTailor endpoint for China (Beijing) and China (Ningxia)
  url: "https://api.mediatailor.{region}.amazonaws.com.cn"
  variables:
    region:
      default: cn-north-1
      description: The AWS region
      enum:
      - cn-north-1
      - cn-northwest-1
security:
- hmac: []
paths:
  /alerts#resourceArn:
    get:
      description: Lists the alerts that are associated with a MediaTailor channel
        assembly resource.
      operationId: list_alerts
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: "The maximum number of alerts that you want MediaTailor to return\
          \ in response to the current request. If there are more than <code>MaxResults</code>\
          \ alerts, use the value of <code>NextToken</code> in the response to get\
          \ the next page of results."
        explode: true
        in: query
        name: maxResults
        required: false
        schema:
          maximum: 100
          minimum: 1
          type: integer
        style: form
      - description: Pagination token returned by the list request when results exceed
          the maximum allowed. Use the token to fetch the next page of results.
        explode: true
        in: query
        name: nextToken
        required: false
        schema:
          type: string
        style: form
      - description: The Amazon Resource Name (ARN) of the resource.
        explode: true
        in: query
        name: resourceArn
        required: true
        schema:
          type: string
        style: form
      - description: Pagination limit
        explode: true
        in: query
        name: MaxResults
        required: false
        schema:
          type: string
        style: form
      - description: Pagination token
        explode: true
        in: query
        name: NextToken
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListAlertsResponse'
          description: Success
      x-openapi-router-controller: openapi_server.controllers.default_controller
  /channel/{ChannelName}:
    delete:
      description: "Deletes a channel. For information about MediaTailor channels,\
        \ see <a href=\"https://docs.aws.amazon.com/mediatailor/latest/ug/channel-assembly-channels.html\"\
        >Working with channels</a> in the <i>MediaTailor User Guide</i>."
      operationId: delete_channel
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The name of the channel.
        explode: false
        in: path
        name: ChannelName
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteChannelResponse'
          description: Success
      x-openapi-router-controller: openapi_server.controllers.default_controller
    get:
      description: "Describes a channel. For information about MediaTailor channels,\
        \ see <a href=\"https://docs.aws.amazon.com/mediatailor/latest/ug/channel-assembly-channels.html\"\
        >Working with channels</a> in the <i>MediaTailor User Guide</i>."
      operationId: describe_channel
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The name of the channel.
        explode: false
        in: path
        name: ChannelName
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DescribeChannelResponse'
          description: Success
      x-openapi-router-controller: openapi_server.controllers.default_controller
    post:
      description: "Creates a channel. For information about MediaTailor channels,\
        \ see <a href=\"https://docs.aws.amazon.com/mediatailor/latest/ug/channel-assembly-channels.html\"\
        >Working with channels</a> in the <i>MediaTailor User Guide</i>."
      operationId: create_channel
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The name of the channel.
        explode: false
        in: path
        name: ChannelName
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateChannel_request'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateChannelResponse'
          description: Success
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
    put:
      description: "Updates a channel. For information about MediaTailor channels,\
        \ see <a href=\"https://docs.aws.amazon.com/mediatailor/latest/ug/channel-assembly-channels.html\"\
        >Working with channels</a> in the <i>MediaTailor User Guide</i>."
      operationId: update_channel
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The name of the channel.
        explode: false
        in: path
        name: ChannelName
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateChannel_request'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateChannelResponse'
          description: Success
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /channel/{ChannelName}/policy:
    delete:
      description: The channel policy to delete.
      operationId: delete_channel_policy
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The name of the channel associated with this channel policy.
        explode: false
        in: path
        name: ChannelName
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteChannelPolicyResponse'
          description: Success
      x-openapi-router-controller: openapi_server.controllers.default_controller
    get:
      description: Returns the channel's IAM policy. IAM policies are used to control
        access to your channel.
      operationId: get_channel_policy
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The name of the channel associated with this Channel Policy.
        explode: false
        in: path
        name: ChannelName
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetChannelPolicyResponse'
          description: Success
      x-openapi-router-controller: openapi_server.controllers.default_controller
    put:
      description: Creates an IAM policy for the channel. IAM policies are used to
        control access to your channel.
      operationId: put_channel_policy
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The channel name associated with this Channel Policy.
        explode: false
        in: path
        name: ChannelName
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PutChannelPolicy_request'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PutChannelPolicyResponse'
          description: Success
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /channel/{ChannelName}/program/{ProgramName}:
    delete:
      description: "Deletes a program within a channel. For information about programs,\
        \ see <a href=\"https://docs.aws.amazon.com/mediatailor/latest/ug/channel-assembly-programs.html\"\
        >Working with programs</a> in the <i>MediaTailor User Guide</i>."
      operationId: delete_program
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The name of the channel.
        explode: false
        in: path
        name: ChannelName
        required: true
        schema:
          type: string
        style: simple
      - description: The name of the program.
        explode: false
        in: path
        name: ProgramName
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteProgramResponse'
          description: Success
      x-openapi-router-controller: openapi_server.controllers.default_controller
    get:
      description: "Describes a program within a channel. For information about programs,\
        \ see <a href=\"https://docs.aws.amazon.com/mediatailor/latest/ug/channel-assembly-programs.html\"\
        >Working with programs</a> in the <i>MediaTailor User Guide</i>."
      operationId: describe_program
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The name of the channel associated with this Program.
        explode: false
        in: path
        name: ChannelName
        required: true
        schema:
          type: string
        style: simple
      - description: The name of the program.
        explode: false
        in: path
        name: ProgramName
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DescribeProgramResponse'
          description: Success
      x-openapi-router-controller: openapi_server.controllers.default_controller
    post:
      description: "Creates a program within a channel. For information about programs,\
        \ see <a href=\"https://docs.aws.amazon.com/mediatailor/latest/ug/channel-assembly-programs.html\"\
        >Working with programs</a> in the <i>MediaTailor User Guide</i>."
      operationId: create_program
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The name of the channel for this Program.
        explode: false
        in: path
        name: ChannelName
        required: true
        schema:
          type: string
        style: simple
      - description: The name of the Program.
        explode: false
        in: path
        name: ProgramName
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateProgram_request'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateProgramResponse'
          description: Success
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
    put:
      description: Updates a program within a channel.
      operationId: update_program
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The name of the channel for this Program.
        explode: false
        in: path
        name: ChannelName
        required: true
        schema:
          type: string
        style: simple
      - description: The name of the Program.
        explode: false
        in: path
        name: ProgramName
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateProgram_request'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateProgramResponse'
          description: Success
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /channel/{ChannelName}/schedule:
    get:
      description: Retrieves information about your channel's schedule.
      operationId: get_channel_schedule
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The name of the channel associated with this Channel Schedule.
        explode: false
        in: path
        name: ChannelName
        required: true
        schema:
          type: string
        style: simple
      - description: The duration in minutes of the channel schedule.
        explode: true
        in: query
        name: durationMinutes
        required: false
        schema:
          type: string
        style: form
      - description: "The maximum number of channel schedules that you want MediaTailor\
          \ to return in response to the current request. If there are more than <code>MaxResults</code>\
          \ channel schedules, use the value of <code>NextToken</code> in the response\
          \ to get the next page of results."
        explode: true
        in: query
        name: maxResults
        required: false
        schema:
          maximum: 100
          minimum: 1
          type: integer
        style: form
      - description: "<p>(Optional) If the playback configuration has more than <code>MaxResults</code>\
          \ channel schedules, use <code>NextToken</code> to get the second and subsequent\
          \ pages of results.</p> <p>For the first <code>GetChannelScheduleRequest</code>\
          \ request, omit this value.</p> <p>For the second and subsequent requests,\
          \ get the value of <code>NextToken</code> from the previous response and\
          \ specify that value for <code>NextToken</code> in the request.</p> <p>If\
          \ the previous response didn't include a <code>NextToken</code> element,\
          \ there are no more channel schedules to get.</p>"
        explode: true
        in: query
        name: nextToken
        required: false
        schema:
          type: string
        style: form
      - description: Pagination limit
        explode: true
        in: query
        name: MaxResults
        required: false
        schema:
          type: string
        style: form
      - description: Pagination token
        explode: true
        in: query
        name: NextToken
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetChannelScheduleResponse'
          description: Success
      x-openapi-router-controller: openapi_server.controllers.default_controller
  /channel/{ChannelName}/start:
    put:
      description: "Starts a channel. For information about MediaTailor channels,\
        \ see <a href=\"https://docs.aws.amazon.com/mediatailor/latest/ug/channel-assembly-channels.html\"\
        >Working with channels</a> in the <i>MediaTailor User Guide</i>."
      operationId: start_channel
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The name of the channel.
        explode: false
        in: path
        name: ChannelName
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StartChannelResponse'
          description: Success
      x-openapi-router-controller: openapi_server.controllers.default_controller
  /channel/{ChannelName}/stop:
    put:
      description: "Stops a channel. For information about MediaTailor channels, see\
        \ <a href=\"https://docs.aws.amazon.com/mediatailor/latest/ug/channel-assembly-channels.html\"\
        >Working with channels</a> in the <i>MediaTailor User Guide</i>."
      operationId: stop_channel
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The name of the channel.
        explode: false
        in: path
        name: ChannelName
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StopChannelResponse'
          description: Success
      x-openapi-router-controller: openapi_server.controllers.default_controller
  /channels:
    get:
      description: Retrieves information about the channels that are associated with
        the current AWS account.
      operationId: list_channels
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: "The maximum number of channels that you want MediaTailor to\
          \ return in response to the current request. If there are more than <code>MaxResults</code>\
          \ channels, use the value of <code>NextToken</code> in the response to get\
          \ the next page of results."
        explode: true
        in: query
        name: maxResults
        required: false
        schema:
          maximum: 100
          minimum: 1
          type: integer
        style: form
      - description: Pagination token returned by the list request when results exceed
          the maximum allowed. Use the token to fetch the next page of results.
        explode: true
        in: query
        name: nextToken
        required: false
        schema:
          type: string
        style: form
      - description: Pagination limit
        explode: true
        in: query
        name: MaxResults
        required: false
        schema:
          type: string
        style: form
      - description: Pagination token
        explode: true
        in: query
        name: NextToken
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListChannelsResponse'
          description: Success
      x-openapi-router-controller: openapi_server.controllers.default_controller
  /configureLogs/channel:
    put:
      description: Configures Amazon CloudWatch log settings for a channel.
      operationId: configure_logs_for_channel
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ConfigureLogsForChannel_request'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConfigureLogsForChannelResponse'
          description: Success
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /configureLogs/playbackConfiguration:
    put:
      description: Amazon CloudWatch log settings for a playback configuration.
      operationId: configure_logs_for_playback_configuration
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ConfigureLogsForPlaybackConfiguration_request'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConfigureLogsForPlaybackConfigurationResponse'
          description: Success
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /playbackConfiguration:
    put:
      description: "Creates a playback configuration. For information about MediaTailor\
        \ configurations, see <a href=\"https://docs.aws.amazon.com/mediatailor/latest/ug/configurations.html\"\
        >Working with configurations in AWS Elemental MediaTailor</a>."
      operationId: put_playback_configuration
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PutPlaybackConfiguration_request'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PutPlaybackConfigurationResponse'
          description: Success
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /playbackConfiguration/{Name}:
    delete:
      description: "Deletes a playback configuration. For information about MediaTailor\
        \ configurations, see <a href=\"https://docs.aws.amazon.com/mediatailor/latest/ug/configurations.html\"\
        >Working with configurations in AWS Elemental MediaTailor</a>."
      operationId: delete_playback_configuration
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The name of the playback configuration.
        explode: false
        in: path
        name: Name
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeletePlaybackConfigurationResponse'
          description: Success
      x-openapi-router-controller: openapi_server.controllers.default_controller
    get:
      description: "Retrieves a playback configuration. For information about MediaTailor\
        \ configurations, see <a href=\"https://docs.aws.amazon.com/mediatailor/latest/ug/configurations.html\"\
        >Working with configurations in AWS Elemental MediaTailor</a>."
      operationId: get_playback_configuration
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The identifier for the playback configuration.
        explode: false
        in: path
        name: Name
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetPlaybackConfigurationResponse'
          description: Success
      x-openapi-router-controller: openapi_server.controllers.default_controller
  /playbackConfigurations:
    get:
      description: "Retrieves existing playback configurations. For information about\
        \ MediaTailor configurations, see <a href=\"https://docs.aws.amazon.com/mediatailor/latest/ug/configurations.html\"\
        >Working with Configurations in AWS Elemental MediaTailor</a>."
      operationId: list_playback_configurations
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: "The maximum number of playback configurations that you want\
          \ MediaTailor to return in response to the current request. If there are\
          \ more than <code>MaxResults</code> playback configurations, use the value\
          \ of <code>NextToken</code> in the response to get the next page of results."
        explode: true
        in: query
        name: MaxResults
        required: false
        schema:
          maximum: 100
          minimum: 1
          type: integer
        style: form
      - description: Pagination token returned by the list request when results exceed
          the maximum allowed. Use the token to fetch the next page of results.
        explode: true
        in: query
        name: NextToken
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListPlaybackConfigurationsResponse'
          description: Success
      x-openapi-router-controller: openapi_server.controllers.default_controller
  /prefetchSchedule/{PlaybackConfigurationName}:
    post:
      description: Lists the prefetch schedules for a playback configuration.
      operationId: list_prefetch_schedules
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: Retrieves the prefetch schedule(s) for a specific playback configuration.
        explode: false
        in: path
        name: PlaybackConfigurationName
        required: true
        schema:
          type: string
        style: simple
      - description: Pagination limit
        explode: true
        in: query
        name: MaxResults
        required: false
        schema:
          type: string
        style: form
      - description: Pagination token
        explode: true
        in: query
        name: NextToken
        required: false
        schema:
          type: string
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ListPrefetchSchedules_request'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListPrefetchSchedulesResponse'
          description: Success
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /prefetchSchedule/{PlaybackConfigurationName}/{Name}:
    delete:
      description: "Deletes a prefetch schedule for a specific playback configuration.\
        \ If you call <code>DeletePrefetchSchedule</code> on an expired prefetch schedule,\
        \ MediaTailor returns an HTTP 404 status code. For more information about\
        \ ad prefetching, see <a href=\"https://docs.aws.amazon.com/mediatailor/latest/ug/prefetching-ads.html\"\
        >Using ad prefetching</a> in the <i>MediaTailor User Guide</i>."
      operationId: delete_prefetch_schedule
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: "The name of the prefetch schedule. If the action is successful,\
          \ the service sends back an HTTP 204 response with an empty HTTP body."
        explode: false
        in: path
        name: Name
        required: true
        schema:
          type: string
        style: simple
      - description: The name of the playback configuration for this prefetch schedule.
        explode: false
        in: path
        name: PlaybackConfigurationName
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeletePrefetchScheduleResponse'
          description: Success
      x-openapi-router-controller: openapi_server.controllers.default_controller
    get:
      description: "Retrieves a prefetch schedule for a playback configuration. A\
        \ prefetch schedule allows you to tell MediaTailor to fetch and prepare certain\
        \ ads before an ad break happens. For more information about ad prefetching,\
        \ see <a href=\"https://docs.aws.amazon.com/mediatailor/latest/ug/prefetching-ads.html\"\
        >Using ad prefetching</a> in the <i>MediaTailor User Guide</i>."
      operationId: get_prefetch_schedule
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The name of the prefetch schedule. The name must be unique among
          all prefetch schedules that are associated with the specified playback configuration.
        explode: false
        in: path
        name: Name
        required: true
        schema:
          type: string
        style: simple
      - description: "Returns information about the prefetch schedule for a specific\
          \ playback configuration. If you call <code>GetPrefetchSchedule</code> on\
          \ an expired prefetch schedule, MediaTailor returns an HTTP 404 status code."
        explode: false
        in: path
        name: PlaybackConfigurationName
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetPrefetchScheduleResponse'
          description: Success
      x-openapi-router-controller: openapi_server.controllers.default_controller
    post:
      description: "Creates a prefetch schedule for a playback configuration. A prefetch\
        \ schedule allows you to tell MediaTailor to fetch and prepare certain ads\
        \ before an ad break happens. For more information about ad prefetching, see\
        \ <a href=\"https://docs.aws.amazon.com/mediatailor/latest/ug/prefetching-ads.html\"\
        >Using ad prefetching</a> in the <i>MediaTailor User Guide</i>."
      operationId: create_prefetch_schedule
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The name to assign to the schedule request.
        explode: false
        in: path
        name: Name
        required: true
        schema:
          type: string
        style: simple
      - description: The name to assign to the playback configuration.
        explode: false
        in: path
        name: PlaybackConfigurationName
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreatePrefetchSchedule_request'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreatePrefetchScheduleResponse'
          description: Success
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /sourceLocation/{SourceLocationName}:
    delete:
      description: "Deletes a source location. A source location is a container for\
        \ sources. For more information about source locations, see <a href=\"https://docs.aws.amazon.com/mediatailor/latest/ug/channel-assembly-source-locations.html\"\
        >Working with source locations</a> in the <i>MediaTailor User Guide</i>."
      operationId: delete_source_location
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The name of the source location.
        explode: false
        in: path
        name: SourceLocationName
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteSourceLocationResponse'
          description: Success
      x-openapi-router-controller: openapi_server.controllers.default_controller
    get:
      description: "Describes a source location. A source location is a container\
        \ for sources. For more information about source locations, see <a href=\"\
        https://docs.aws.amazon.com/mediatailor/latest/ug/channel-assembly-source-locations.html\"\
        >Working with source locations</a> in the <i>MediaTailor User Guide</i>."
      operationId: describe_source_location
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The name of the source location.
        explode: false
        in: path
        name: SourceLocationName
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DescribeSourceLocationResponse'
          description: Success
      x-openapi-router-controller: openapi_server.controllers.default_controller
    post:
      description: "Creates a source location. A source location is a container for\
        \ sources. For more information about source locations, see <a href=\"https://docs.aws.amazon.com/mediatailor/latest/ug/channel-assembly-source-locations.html\"\
        >Working with source locations</a> in the <i>MediaTailor User Guide</i>."
      operationId: create_source_location
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The name associated with the source location.
        explode: false
        in: path
        name: SourceLocationName
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateSourceLocation_request'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateSourceLocationResponse'
          description: Success
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
    put:
      description: "Updates a source location. A source location is a container for\
        \ sources. For more information about source locations, see <a href=\"https://docs.aws.amazon.com/mediatailor/latest/ug/channel-assembly-source-locations.html\"\
        >Working with source locations</a> in the <i>MediaTailor User Guide</i>."
      operationId: update_source_location
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The name of the source location.
        explode: false
        in: path
        name: SourceLocationName
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateSourceLocation_request'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateSourceLocationResponse'
          description: Success
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /sourceLocation/{SourceLocationName}/liveSource/{LiveSourceName}:
    delete:
      description: The live source to delete.
      operationId: delete_live_source
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The name of the live source.
        explode: false
        in: path
        name: LiveSourceName
        required: true
        schema:
          type: string
        style: simple
      - description: The name of the source location associated with this Live Source.
        explode: false
        in: path
        name: SourceLocationName
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteLiveSourceResponse'
          description: Success
      x-openapi-router-controller: openapi_server.controllers.default_controller
    get:
      description: The live source to describe.
      operationId: describe_live_source
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The name of the live source.
        explode: false
        in: path
        name: LiveSourceName
        required: true
        schema:
          type: string
        style: simple
      - description: The name of the source location associated with this Live Source.
        explode: false
        in: path
        name: SourceLocationName
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DescribeLiveSourceResponse'
          description: Success
      x-openapi-router-controller: openapi_server.controllers.default_controller
    post:
      description: The live source configuration.
      operationId: create_live_source
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The name of the live source.
        explode: false
        in: path
        name: LiveSourceName
        required: true
        schema:
          type: string
        style: simple
      - description: The name of the source location.
        explode: false
        in: path
        name: SourceLocationName
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateLiveSource_request'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateLiveSourceResponse'
          description: Success
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
    put:
      description: Updates a live source's configuration.
      operationId: update_live_source
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The name of the live source.
        explode: false
        in: path
        name: LiveSourceName
        required: true
        schema:
          type: string
        style: simple
      - description: The name of the source location associated with this Live Source.
        explode: false
        in: path
        name: SourceLocationName
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateLiveSource_request'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateLiveSourceResponse'
          description: Success
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /sourceLocation/{SourceLocationName}/liveSources:
    get:
      description: Lists the live sources contained in a source location. A source
        represents a piece of content.
      operationId: list_live_sources
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: "The maximum number of live sources that you want MediaTailor\
          \ to return in response to the current request. If there are more than <code>MaxResults</code>\
          \ live sources, use the value of <code>NextToken</code> in the response\
          \ to get the next page of results."
        explode: true
        in: query
        name: maxResults
        required: false
        schema:
          maximum: 100
          minimum: 1
          type: integer
        style: form
      - description: Pagination token returned by the list request when results exceed
          the maximum allowed. Use the token to fetch the next page of results.
        explode: true
        in: query
        name: nextToken
        required: false
        schema:
          type: string
        style: form
      - description: The name of the source location associated with this Live Sources
          list.
        explode: false
        in: path
        name: SourceLocationName
        required: true
        schema:
          type: string
        style: simple
      - description: Pagination limit
        explode: true
        in: query
        name: MaxResults
        required: false
        schema:
          type: string
        style: form
      - description: Pagination token
        explode: true
        in: query
        name: NextToken
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListLiveSourcesResponse'
          description: Success
      x-openapi-router-controller: openapi_server.controllers.default_controller
  /sourceLocation/{SourceLocationName}/vodSource/{VodSourceName}:
    delete:
      description: The video on demand (VOD) source to delete.
      operationId: delete_vod_source
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The name of the source location associated with this VOD Source.
        explode: false
        in: path
        name: SourceLocationName
        required: true
        schema:
          type: string
        style: simple
      - description: The name of the VOD source.
        explode: false
        in: path
        name: VodSourceName
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteVodSourceResponse'
          description: Success
      x-openapi-router-controller: openapi_server.controllers.default_controller
    get:
      description: Provides details about a specific video on demand (VOD) source
        in a specific source location.
      operationId: describe_vod_source
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The name of the source location associated with this VOD Source.
        explode: false
        in: path
        name: SourceLocationName
        required: true
        schema:
          type: string
        style: simple
      - description: The name of the VOD Source.
        explode: false
        in: path
        name: VodSourceName
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DescribeVodSourceResponse'
          description: Success
      x-openapi-router-controller: openapi_server.controllers.default_controller
    post:
      description: The VOD source configuration parameters.
      operationId: create_vod_source
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The name of the source location for this VOD source.
        explode: false
        in: path
        name: SourceLocationName
        required: true
        schema:
          type: string
        style: simple
      - description: The name associated with the VOD source.&gt;
        explode: false
        in: path
        name: VodSourceName
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateVodSource_request'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateVodSourceResponse'
          description: Success
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
    put:
      description: Updates a VOD source's configuration.
      operationId: update_vod_source
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The name of the source location associated with this VOD Source.
        explode: false
        in: path
        name: SourceLocationName
        required: true
        schema:
          type: string
        style: simple
      - description: The name of the VOD source.
        explode: false
        in: path
        name: VodSourceName
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateLiveSource_request'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateVodSourceResponse'
          description: Success
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /sourceLocation/{SourceLocationName}/vodSources:
    get:
      description: Lists the VOD sources contained in a source location. A source
        represents a piece of content.
      operationId: list_vod_sources
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: " The maximum number of VOD sources that you want MediaTailor\
          \ to return in response to the current request. If there are more than <code>MaxResults</code>\
          \ VOD sources, use the value of <code>NextToken</code> in the response to\
          \ get the next page of results."
        explode: true
        in: query
        name: maxResults
        required: false
        schema:
          maximum: 100
          minimum: 1
          type: integer
        style: form
      - description: Pagination token returned by the list request when results exceed
          the maximum allowed. Use the token to fetch the next page of results.
        explode: true
        in: query
        name: nextToken
        required: false
        schema:
          type: string
        style: form
      - description: The name of the source location associated with this VOD Source
          list.
        explode: false
        in: path
        name: SourceLocationName
        required: true
        schema:
          type: string
        style: simple
      - description: Pagination limit
        explode: true
        in: query
        name: MaxResults
        required: false
        schema:
          type: string
        style: form
      - description: Pagination token
        explode: true
        in: query
        name: NextToken
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListVodSourcesResponse'
          description: Success
      x-openapi-router-controller: openapi_server.controllers.default_controller
  /sourceLocations:
    get:
      description: "Lists the source locations for a channel. A source location defines\
        \ the host server URL, and contains a list of sources."
      operationId: list_source_locations
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: " The maximum number of source locations that you want MediaTailor\
          \ to return in response to the current request. If there are more than <code>MaxResults</code>\
          \ source locations, use the value of <code>NextToken</code> in the response\
          \ to get the next page of results."
        explode: true
        in: query
        name: maxResults
        required: false
        schema:
          maximum: 100
          minimum: 1
          type: integer
        style: form
      - description: Pagination token returned by the list request when results exceed
          the maximum allowed. Use the token to fetch the next page of results.
        explode: true
        in: query
        name: nextToken
        required: false
        schema:
          type: string
        style: form
      - description: Pagination limit
        explode: true
        in: query
        name: MaxResults
        required: false
        schema:
          type: string
        style: form
      - description: Pagination token
        explode: true
        in: query
        name: NextToken
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListSourceLocationsResponse'
          description: Success
      x-openapi-router-controller: openapi_server.controllers.default_controller
  /tags/{ResourceArn}:
    get:
      description: "A list of tags that are associated with this resource. Tags are\
        \ key-value pairs that you can associate with Amazon resources to help with\
        \ organization, access control, and cost tracking. For more information, see\
        \ <a href=\"https://docs.aws.amazon.com/mediatailor/latest/ug/tagging.html\"\
        >Tagging AWS Elemental MediaTailor Resources</a>."
      operationId: list_tags_for_resource
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The Amazon Resource Name (ARN) associated with this resource.
        explode: false
        in: path
        name: ResourceArn
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListTagsForResourceResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
          description: BadRequestException
      x-openapi-router-controller: openapi_server.controllers.default_controller
    post:
      description: "The resource to tag. Tags are key-value pairs that you can associate\
        \ with Amazon resources to help with organization, access control, and cost\
        \ tracking. For more information, see <a href=\"https://docs.aws.amazon.com/mediatailor/latest/ug/tagging.html\"\
        >Tagging AWS Elemental MediaTailor Resources</a>."
      operationId: tag_resource
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The Amazon Resource Name (ARN) associated with the resource.
        explode: false
        in: path
        name: ResourceArn
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TagResource_request'
        required: true
        x-body-name: body
      responses:
        "204":
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
          description: BadRequestException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /tags/{ResourceArn}#tagKeys:
    delete:
      description: The resource to untag.
      operationId: untag_resource
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The Amazon Resource Name (ARN) of the resource to untag.
        explode: false
        in: path
        name: ResourceArn
        required: true
        schema:
          type: string
        style: simple
      - description: The tag keys associated with the resource.
        explode: true
        in: query
        name: tagKeys
        required: true
        schema:
          items:
            $ref: '#/components/schemas/__string'
          type: array
        style: form
      responses:
        "204":
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
          description: BadRequestException
      x-openapi-router-controller: openapi_server.controllers.default_controller
components:
  parameters:
    X-Amz-Content-Sha256:
      explode: false
      in: header
      name: X-Amz-Content-Sha256
      required: false
      schema:
        type: string
      style: simple
    X-Amz-Date:
      explode: false
      in: header
      name: X-Amz-Date
      required: false
      schema:
        type: string
      style: simple
    X-Amz-Algorithm:
      explode: false
      in: header
      name: X-Amz-Algorithm
      required: false
      schema:
        type: string
      style: simple
    X-Amz-Credential:
      explode: false
      in: header
      name: X-Amz-Credential
      required: false
      schema:
        type: string
      style: simple
    X-Amz-Security-Token:
      explode: false
      in: header
      name: X-Amz-Security-Token
      required: false
      schema:
        type: string
      style: simple
    X-Amz-Signature:
      explode: false
      in: header
      name: X-Amz-Signature
      required: false
      schema:
        type: string
      style: simple
    X-Amz-SignedHeaders:
      explode: false
      in: header
      name: X-Amz-SignedHeaders
      required: false
      schema:
        type: string
      style: simple
  schemas:
    ConfigureLogsForChannelResponse:
      example:
        ChannelName: ""
        LogTypes: ""
      properties:
        ChannelName:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The name of the channel.
          title: ChannelName
        LogTypes:
          allOf:
          - $ref: '#/components/schemas/LogTypes'
          - description: The types of logs collected.
          title: LogTypes
      title: ConfigureLogsForChannelResponse
      type: object
    LogType:
      enum:
      - AS_RUN
      title: LogType
      type: string
    ConfigureLogsForPlaybackConfigurationResponse:
      example:
        PercentEnabled: ""
        PlaybackConfigurationName: ""
      properties:
        PercentEnabled:
          allOf:
          - $ref: '#/components/schemas/__integer'
          - description: The percentage of session logs that MediaTailor sends to
              your Cloudwatch Logs account.
          title: PercentEnabled
        PlaybackConfigurationName:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The name of the playback configuration.
          title: PlaybackConfigurationName
      required:
      - PercentEnabled
      title: ConfigureLogsForPlaybackConfigurationResponse
      type: object
    CreateChannelResponse:
      example:
        FillerSlate:
          VodSourceName: ""
          SourceLocationName: ""
        ChannelState: ""
        ChannelName: ""
        Tier: ""
        CreationTime: ""
        LastModifiedTime: ""
        Outputs: ""
        Arn: ""
        PlaybackMode: ""
        Tags: ""
      properties:
        Arn:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The Amazon Resource Name (ARN) to assign to the channel.
          title: Arn
        ChannelName:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The name to assign to the channel.
          title: ChannelName
        ChannelState:
          allOf:
          - $ref: '#/components/schemas/ChannelState'
          - description: Indicates whether the channel is in a running state or not.
          title: ChannelState
        CreationTime:
          allOf:
          - $ref: '#/components/schemas/__timestampUnix'
          - description: The timestamp of when the channel was created.
          title: CreationTime
        FillerSlate:
          $ref: '#/components/schemas/CreateChannelResponse_FillerSlate'
        LastModifiedTime:
          allOf:
          - $ref: '#/components/schemas/__timestampUnix'
          - description: The timestamp of when the channel was last modified.
          title: LastModifiedTime
        Outputs:
          allOf:
          - $ref: '#/components/schemas/ResponseOutputs'
          - description: The output properties to assign to the channel.
          title: Outputs
        PlaybackMode:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The playback mode to assign to the channel.
          title: PlaybackMode
        Tags:
          allOf:
          - $ref: '#/components/schemas/__mapOf__string'
          - description: "The tags to assign to the channel. Tags are key-value pairs\
              \ that you can associate with Amazon resources to help with organization,\
              \ access control, and cost tracking. For more information, see <a href=\"\
              https://docs.aws.amazon.com/mediatailor/latest/ug/tagging.html\">Tagging\
              \ AWS Elemental MediaTailor Resources</a>."
            xml:
              name: tags
          title: Tags
        Tier:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The tier of the channel.
          title: Tier
      title: CreateChannelResponse
      type: object
    __string:
      title: __string
      type: string
    RequestOutputItem:
      description: The output configuration for this channel.
      properties:
        DashPlaylistSettings:
          $ref: '#/components/schemas/RequestOutputItem_DashPlaylistSettings'
        HlsPlaylistSettings:
          $ref: '#/components/schemas/RequestOutputItem_HlsPlaylistSettings'
        ManifestName:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The name of the manifest for the channel. The name appears
              in the <code>PlaybackUrl</code>.
          title: ManifestName
        SourceGroup:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: A string used to match which <code>HttpPackageConfiguration</code>
              is used for each <code>VodSource</code>.
          title: SourceGroup
      required:
      - ManifestName
      - SourceGroup
      title: RequestOutputItem
      type: object
    CreateLiveSourceResponse:
      example:
        LiveSourceName: ""
        SourceLocationName: ""
        CreationTime: ""
        LastModifiedTime: ""
        HttpPackageConfigurations: ""
        Arn: ""
        Tags: ""
      properties:
        Arn:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The ARN to assign to the live source.
          title: Arn
        CreationTime:
          allOf:
          - $ref: '#/components/schemas/__timestampUnix'
          - description: The time the live source was created.
          title: CreationTime
        HttpPackageConfigurations:
          allOf:
          - $ref: '#/components/schemas/HttpPackageConfigurations'
          - description: A list of HTTP package configuration parameters for this
              live source.
          title: HttpPackageConfigurations
        LastModifiedTime:
          allOf:
          - $ref: '#/components/schemas/__timestampUnix'
          - description: The time the live source was last modified.
          title: LastModifiedTime
        LiveSourceName:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The name to assign to the live source.
          title: LiveSourceName
        SourceLocationName:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The name to assign to the source location of the live source.
          title: SourceLocationName
        Tags:
          allOf:
          - $ref: '#/components/schemas/__mapOf__string'
          - description: "The tags to assign to the live source. Tags are key-value\
              \ pairs that you can associate with Amazon resources to help with organization,\
              \ access control, and cost tracking. For more information, see <a href=\"\
              https://docs.aws.amazon.com/mediatailor/latest/ug/tagging.html\">Tagging\
              \ AWS Elemental MediaTailor Resources</a>."
            xml:
              name: tags
          title: Tags
      title: CreateLiveSourceResponse
      type: object
    HttpPackageConfiguration:
      description: The HTTP package configuration properties for the requested VOD
        source.
      properties:
        Path:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The relative path to the URL for this VOD source. This is
              combined with <code>SourceLocation::HttpConfiguration::BaseUrl</code>
              to form a valid URL.
          title: Path
        SourceGroup:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The name of the source group. This has to match one of the
              <code>Channel::Outputs::SourceGroup</code>.
          title: SourceGroup
        Type:
          allOf:
          - $ref: '#/components/schemas/Type'
          - description: The streaming protocol for this package configuration. Supported
              values are <code>HLS</code> and <code>DASH</code>.
          title: Type
      required:
      - Path
      - SourceGroup
      - Type
      title: HttpPackageConfiguration
      type: object
    CreatePrefetchScheduleResponse:
      example:
        Consumption:
          AvailMatchingCriteria: ""
          EndTime: ""
          StartTime: ""
        Retrieval:
          EndTime: ""
          StartTime: ""
          DynamicVariables: ""
        StreamId: ""
        Arn: ""
        PlaybackConfigurationName: ""
        Name: ""
      properties:
        Arn:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The ARN to assign to the prefetch schedule.
          title: Arn
        Consumption:
          $ref: '#/components/schemas/CreatePrefetchScheduleResponse_Consumption'
        Name:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The name to assign to the prefetch schedule.
          title: Name
        PlaybackConfigurationName:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The name to assign to the playback configuration.
          title: PlaybackConfigurationName
        Retrieval:
          $ref: '#/components/schemas/CreatePrefetchScheduleResponse_Retrieval'
        StreamId:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: "An optional stream identifier that MediaTailor uses to prefetch\
              \ ads for multiple streams that use the same playback configuration.\
              \ If <code>StreamId</code> is specified, MediaTailor returns all of\
              \ the prefetch schedules with an exact match on <code>StreamId</code>.\
              \ If not specified, MediaTailor returns all of the prefetch schedules\
              \ for the playback configuration, regardless of <code>StreamId</code>."
          title: StreamId
      title: CreatePrefetchScheduleResponse
      type: object
    __listOfAvailMatchingCriteria:
      items:
        $ref: '#/components/schemas/AvailMatchingCriteria'
      type: array
    __timestampUnix:
      format: date-time
      type: string
    __mapOf__string:
      additionalProperties:
        $ref: '#/components/schemas/__string'
      title: __mapOf__string
      type: object
    CreateProgramResponse:
      example:
        VodSourceName: ""
        ChannelName: ""
        LiveSourceName: ""
        SourceLocationName: ""
        AdBreaks: ""
        CreationTime: ""
        ClipRange:
          EndOffsetMillis: ""
        ScheduledStartTime: ""
        Arn: ""
        DurationMillis: ""
        ProgramName: ""
      properties:
        AdBreaks:
          allOf:
          - $ref: '#/components/schemas/__listOfAdBreak'
          - description: The ad break configuration settings.
          title: AdBreaks
        Arn:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The ARN to assign to the program.
          title: Arn
        ChannelName:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The name to assign to the channel for this program.
          title: ChannelName
        ClipRange:
          $ref: '#/components/schemas/CreateProgramResponse_ClipRange'
        CreationTime:
          allOf:
          - $ref: '#/components/schemas/__timestampUnix'
          - description: The time the program was created.
          title: CreationTime
        DurationMillis:
          allOf:
          - $ref: '#/components/schemas/__long'
          - description: The duration of the live program in milliseconds.
          title: DurationMillis
        LiveSourceName:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The name of the LiveSource for this Program.
          title: LiveSourceName
        ProgramName:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The name to assign to this program.
          title: ProgramName
        ScheduledStartTime:
          allOf:
          - $ref: '#/components/schemas/__timestampUnix'
          - description: The scheduled start time for this Program.
          title: ScheduledStartTime
        SourceLocationName:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The name to assign to the source location for this program.
          title: SourceLocationName
        VodSourceName:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The name that's used to refer to a VOD source.
          title: VodSourceName
      title: CreateProgramResponse
      type: object
    AdBreak:
      description: Ad break configuration parameters.
      properties:
        AdBreakMetadata:
          allOf:
          - $ref: '#/components/schemas/AdBreakMetadataList'
          - description: Defines a list of key/value pairs that MediaTailor generates
              within the <code>EXT-X-ASSET</code>tag for <code>SCTE35_ENHANCED</code>
              output.
          title: AdBreakMetadata
        MessageType:
          allOf:
          - $ref: '#/components/schemas/MessageType'
          - description: "The SCTE-35 ad insertion type. Accepted value: <code>SPLICE_INSERT</code>,\
              \ <code>TIME_SIGNAL</code>."
          title: MessageType
        OffsetMillis:
          allOf:
          - $ref: '#/components/schemas/__long'
          - description: "How long (in milliseconds) after the beginning of the program\
              \ that an ad starts. This value must fall within 100ms of a segment\
              \ boundary, otherwise the ad break will be skipped."
          title: OffsetMillis
        Slate:
          $ref: '#/components/schemas/AdBreak_Slate'
        SpliceInsertMessage:
          $ref: '#/components/schemas/AdBreak_SpliceInsertMessage'
        TimeSignalMessage:
          $ref: '#/components/schemas/AdBreak_TimeSignalMessage'
      title: AdBreak
      type: object
    ClipRange:
      description: Clip range configuration for the VOD source associated with the
        program.
      properties:
        EndOffsetMillis:
          allOf:
          - $ref: '#/components/schemas/__long'
          - description: "The end offset of the clip range, in milliseconds, starting\
              \ from the beginning of the VOD source associated with the program."
          title: EndOffsetMillis
      required:
      - EndOffsetMillis
      title: ClipRange
      type: object
    Transition:
      description: Program transition configuration.
      properties:
        DurationMillis:
          allOf:
          - $ref: '#/components/schemas/__long'
          - description: The duration of the live program in seconds.
          title: DurationMillis
        RelativePosition:
          allOf:
          - $ref: '#/components/schemas/RelativePosition'
          - description: The position where this program will be inserted relative
              to the <code>RelativePosition</code>.
          title: RelativePosition
        RelativeProgram:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: "The name of the program that this program will be inserted\
              \ next to, as defined by <code>RelativePosition</code>."
          title: RelativeProgram
        ScheduledStartTimeMillis:
          allOf:
          - $ref: '#/components/schemas/__long'
          - description: "The date and time that the program is scheduled to start,\
              \ in epoch milliseconds."
          title: ScheduledStartTimeMillis
        Type:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: "<p>Defines when the program plays in the schedule. You can\
              \ set the value to <code>ABSOLUTE</code> or <code>RELATIVE</code>.</p>\
              \ <p> <code>ABSOLUTE</code> - The program plays at a specific wall clock\
              \ time. This setting can only be used for channels using the <code>LINEAR</code>\
              \ <code>PlaybackMode</code>.</p> <p>Note the following considerations\
              \ when using <code>ABSOLUTE</code> transitions:</p> <p>If the preceding\
              \ program in the schedule has a duration that extends past the wall\
              \ clock time, MediaTailor truncates the preceding program on a common\
              \ segment boundary.</p> <p>If there are gaps in playback, MediaTailor\
              \ plays the <code>FillerSlate</code> you configured for your linear\
              \ channel.</p> <p> <code>RELATIVE</code> - The program is inserted into\
              \ the schedule either before or after a program that you specify via\
              \ <code>RelativePosition</code>.</p>"
          title: Type
      required:
      - RelativePosition
      - Type
      title: Transition
      type: object
    CreateSourceLocationResponse:
      example:
        SourceLocationName: ""
        DefaultSegmentDeliveryConfiguration:
          BaseUrl: ""
        CreationTime: ""
        LastModifiedTime: ""
        SegmentDeliveryConfigurations: ""
        HttpConfiguration:
          BaseUrl: ""
        Arn: ""
        AccessConfiguration:
          SecretsManagerAccessTokenConfiguration:
            SecretArn: ""
            HeaderName: ""
            SecretStringKey: ""
          AccessType: ""
        Tags: ""
      properties:
        AccessConfiguration:
          $ref: '#/components/schemas/CreateSourceLocationResponse_AccessConfiguration'
        Arn:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The ARN to assign to the source location.
          title: Arn
        CreationTime:
          allOf:
          - $ref: '#/components/schemas/__timestampUnix'
          - description: The time the source location was created.
          title: CreationTime
        DefaultSegmentDeliveryConfiguration:
          $ref: '#/components/schemas/CreateSourceLocationResponse_DefaultSegmentDeliveryConfiguration'
        HttpConfiguration:
          $ref: '#/components/schemas/CreateSourceLocationResponse_HttpConfiguration'
        LastModifiedTime:
          allOf:
          - $ref: '#/components/schemas/__timestampUnix'
          - description: The time the source location was last modified.
          title: LastModifiedTime
        SegmentDeliveryConfigurations:
          allOf:
          - $ref: '#/components/schemas/__listOfSegmentDeliveryConfiguration'
          - description: "The segment delivery configurations for the source location.\
              \ For information about MediaTailor configurations, see <a href=\"https://docs.aws.amazon.com/mediatailor/latest/ug/configurations.html\"\
              >Working with configurations in AWS Elemental MediaTailor</a>."
          title: SegmentDeliveryConfigurations
        SourceLocationName:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The name to assign to the source location.
          title: SourceLocationName
        Tags:
          allOf:
          - $ref: '#/components/schemas/__mapOf__string'
          - description: "The tags to assign to the source location. Tags are key-value\
              \ pairs that you can associate with Amazon resources to help with organization,\
              \ access control, and cost tracking. For more information, see <a href=\"\
              https://docs.aws.amazon.com/mediatailor/latest/ug/tagging.html\">Tagging\
              \ AWS Elemental MediaTailor Resources</a>."
            xml:
              name: tags
          title: Tags
      title: CreateSourceLocationResponse
      type: object
    AccessType:
      enum:
      - S3_SIGV4
      - SECRETS_MANAGER_ACCESS_TOKEN
      title: AccessType
      type: string
    SecretsManagerAccessTokenConfiguration:
      description: "AWS Secrets Manager access token configuration parameters. For\
        \ information about Secrets Manager access token authentication, see <a href=\"\
        https://docs.aws.amazon.com/mediatailor/latest/ug/channel-assembly-access-configuration-access-token.html\"\
        >Working with AWS Secrets Manager access token authentication</a>."
      properties:
        HeaderName:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The name of the HTTP header used to supply the access token
              in requests to the source location.
          title: HeaderName
        SecretArn:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The Amazon Resource Name (ARN) of the AWS Secrets Manager
              secret that contains the access token.
          title: SecretArn
        SecretStringKey:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The AWS Secrets Manager <a href="https://docs.aws.amazon.com/secretsmanager/latest/apireference/API_CreateSecret.html#SecretsManager-CreateSecret-request-SecretString.html">SecretString</a>
              key associated with the access token. MediaTailor uses the key to look
              up SecretString key and value pair containing the access token.
          title: SecretStringKey
      title: SecretsManagerAccessTokenConfiguration
      type: object
    SegmentDeliveryConfiguration:
      description: The segment delivery configuration settings.
      properties:
        BaseUrl:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: "The base URL of the host or path of the segment delivery\
              \ server that you're using to serve segments. This is typically a content\
              \ delivery network (CDN). The URL can be absolute or relative. To use\
              \ an absolute URL include the protocol, such as <code>https://example.com/some/path</code>.\
              \ To use a relative URL specify the relative path, such as <code>/some/path*</code>."
          title: BaseUrl
        Name:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: A unique identifier used to distinguish between multiple
              segment delivery configurations in a source location.
          title: Name
      title: SegmentDeliveryConfiguration
      type: object
    CreateVodSourceResponse:
      example:
        VodSourceName: ""
        SourceLocationName: ""
        CreationTime: ""
        LastModifiedTime: ""
        HttpPackageConfigurations: ""
        Arn: ""
        Tags: ""
      properties:
        Arn:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The ARN to assign to this VOD source.
          title: Arn
        CreationTime:
          allOf:
          - $ref: '#/components/schemas/__timestampUnix'
          - description: The time the VOD source was created.
          title: CreationTime
        HttpPackageConfigurations:
          allOf:
          - $ref: '#/components/schemas/HttpPackageConfigurations'
          - description: A list of HTTP package configuration parameters for this
              VOD source.
          title: HttpPackageConfigurations
        LastModifiedTime:
          allOf:
          - $ref: '#/components/schemas/__timestampUnix'
          - description: The time the VOD source was last modified.
          title: LastModifiedTime
        SourceLocationName:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The name to assign to the source location for this VOD source.
          title: SourceLocationName
        Tags:
          allOf:
          - $ref: '#/components/schemas/__mapOf__string'
          - description: "The tags to assign to the VOD source. Tags are key-value\
              \ pairs that you can associate with Amazon resources to help with organization,\
              \ access control, and cost tracking. For more information, see <a href=\"\
              https://docs.aws.amazon.com/mediatailor/latest/ug/tagging.html\">Tagging\
              \ AWS Elemental MediaTailor Resources</a>."
            xml:
              name: tags
          title: Tags
        VodSourceName:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The name to assign to the VOD source.
          title: VodSourceName
      title: CreateVodSourceResponse
      type: object
    DeleteChannelResponse:
      properties: {}
      type: object
    DeleteChannelPolicyResponse:
      properties: {}
      type: object
    DeleteLiveSourceResponse:
      properties: {}
      type: object
    DeletePlaybackConfigurationResponse:
      properties: {}
      type: object
    DeletePrefetchScheduleResponse:
      properties: {}
      type: object
    DeleteProgramResponse:
      properties: {}
      type: object
    DeleteSourceLocationResponse:
      properties: {}
      type: object
    DeleteVodSourceResponse:
      properties: {}
      type: object
    DescribeChannelResponse:
      example:
        FillerSlate:
          VodSourceName: ""
          SourceLocationName: ""
        ChannelState: ""
        ChannelName: ""
        Tier: ""
        CreationTime: ""
        LastModifiedTime: ""
        Outputs: ""
        Arn: ""
        LogConfiguration:
          LogTypes: ""
        PlaybackMode: ""
        Tags: ""
      properties:
        Arn:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The ARN of the channel.
          title: Arn
        ChannelName:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The name of the channel.
          title: ChannelName
        ChannelState:
          allOf:
          - $ref: '#/components/schemas/ChannelState'
          - description: Indicates whether the channel is in a running state or not.
          title: ChannelState
        CreationTime:
          allOf:
          - $ref: '#/components/schemas/__timestampUnix'
          - description: The timestamp of when the channel was created.
          title: CreationTime
        FillerSlate:
          $ref: '#/components/schemas/CreateChannelResponse_FillerSlate'
        LastModifiedTime:
          allOf:
          - $ref: '#/components/schemas/__timestampUnix'
          - description: The timestamp of when the channel was last modified.
          title: LastModifiedTime
        LogConfiguration:
          $ref: '#/components/schemas/DescribeChannelResponse_LogConfiguration'
        Outputs:
          allOf:
          - $ref: '#/components/schemas/ResponseOutputs'
          - description: The channel's output properties.
          title: Outputs
        PlaybackMode:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The channel's playback mode.
          title: PlaybackMode
        Tags:
          allOf:
          - $ref: '#/components/schemas/__mapOf__string'
          - description: "The tags assigned to the channel. Tags are key-value pairs\
              \ that you can associate with Amazon resources to help with organization,\
              \ access control, and cost tracking. For more information, see <a href=\"\
              https://docs.aws.amazon.com/mediatailor/latest/ug/tagging.html\">Tagging\
              \ AWS Elemental MediaTailor Resources</a>."
            xml:
              name: tags
          title: Tags
        Tier:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The channel's tier.
          title: Tier
      required:
      - LogConfiguration
      title: DescribeChannelResponse
      type: object
    DescribeLiveSourceResponse:
      example:
        LiveSourceName: ""
        SourceLocationName: ""
        CreationTime: ""
        LastModifiedTime: ""
        HttpPackageConfigurations: ""
        Arn: ""
        Tags: ""
      properties:
        Arn:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The ARN of the live source.
          title: Arn
        CreationTime:
          allOf:
          - $ref: '#/components/schemas/__timestampUnix'
          - description: The timestamp that indicates when the live source was created.
          title: CreationTime
        HttpPackageConfigurations:
          allOf:
          - $ref: '#/components/schemas/HttpPackageConfigurations'
          - description: The HTTP package configurations.
          title: HttpPackageConfigurations
        LastModifiedTime:
          allOf:
          - $ref: '#/components/schemas/__timestampUnix'
          - description: The timestamp that indicates when the live source was modified.
          title: LastModifiedTime
        LiveSourceName:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The name of the live source.
          title: LiveSourceName
        SourceLocationName:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The name of the source location associated with the live
              source.
          title: SourceLocationName
        Tags:
          allOf:
          - $ref: '#/components/schemas/__mapOf__string'
          - description: "The tags assigned to the live source. Tags are key-value\
              \ pairs that you can associate with Amazon resources to help with organization,\
              \ access control, and cost tracking. For more information, see <a href=\"\
              https://docs.aws.amazon.com/mediatailor/latest/ug/tagging.html\">Tagging\
              \ AWS Elemental MediaTailor Resources</a>."
            xml:
              name: tags
          title: Tags
      title: DescribeLiveSourceResponse
      type: object
    DescribeProgramResponse:
      example:
        VodSourceName: ""
        ChannelName: ""
        LiveSourceName: ""
        SourceLocationName: ""
        AdBreaks: ""
        CreationTime: ""
        ClipRange:
          EndOffsetMillis: ""
        ScheduledStartTime: ""
        Arn: ""
        DurationMillis: ""
        ProgramName: ""
      properties:
        AdBreaks:
          allOf:
          - $ref: '#/components/schemas/__listOfAdBreak'
          - description: The ad break configuration settings.
          title: AdBreaks
        Arn:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The ARN of the program.
          title: Arn
        ChannelName:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The name of the channel that the program belongs to.
          title: ChannelName
        ClipRange:
          $ref: '#/components/schemas/CreateProgramResponse_ClipRange'
        CreationTime:
          allOf:
          - $ref: '#/components/schemas/__timestampUnix'
          - description: The timestamp of when the program was created.
          title: CreationTime
        DurationMillis:
          allOf:
          - $ref: '#/components/schemas/Long'
          - description: The duration of the live program in milliseconds.
          title: DurationMillis
        LiveSourceName:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The name of the LiveSource for this Program.
          title: LiveSourceName
        ProgramName:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The name of the program.
          title: ProgramName
        ScheduledStartTime:
          allOf:
          - $ref: '#/components/schemas/__timestampUnix'
          - description: "The date and time that the program is scheduled to start\
              \ in ISO 8601 format and Coordinated Universal Time (UTC). For example,\
              \ the value 2021-03-27T17:48:16.751Z represents March 27, 2021 at 17:48:16.751\
              \ UTC."
          title: ScheduledStartTime
        SourceLocationName:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The source location name.
          title: SourceLocationName
        VodSourceName:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The name that's used to refer to a VOD source.
          title: VodSourceName
      title: DescribeProgramResponse
      type: object
    DescribeSourceLocationResponse:
      example:
        SourceLocationName: ""
        DefaultSegmentDeliveryConfiguration:
          BaseUrl: ""
        CreationTime: ""
        LastModifiedTime: ""
        SegmentDeliveryConfigurations: ""
        HttpConfiguration:
          BaseUrl: ""
        Arn: ""
        AccessConfiguration:
          SecretsManagerAccessTokenConfiguration:
            SecretArn: ""
            HeaderName: ""
            SecretStringKey: ""
          AccessType: ""
        Tags: ""
      properties:
        AccessConfiguration:
          $ref: '#/components/schemas/DescribeSourceLocationResponse_AccessConfiguration'
        Arn:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The ARN of the source location.
          title: Arn
        CreationTime:
          allOf:
          - $ref: '#/components/schemas/__timestampUnix'
          - description: The timestamp that indicates when the source location was
              created.
          title: CreationTime
        DefaultSegmentDeliveryConfiguration:
          $ref: '#/components/schemas/DescribeSourceLocationResponse_DefaultSegmentDeliveryConfiguration'
        HttpConfiguration:
          $ref: '#/components/schemas/DescribeSourceLocationResponse_HttpConfiguration'
        LastModifiedTime:
          allOf:
          - $ref: '#/components/schemas/__timestampUnix'
          - description: The timestamp that indicates when the source location was
              last modified.
          title: LastModifiedTime
        SegmentDeliveryConfigurations:
          allOf:
          - $ref: '#/components/schemas/__listOfSegmentDeliveryConfiguration'
          - description: A list of the segment delivery configurations associated
              with this resource.
          title: SegmentDeliveryConfigurations
        SourceLocationName:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The name of the source location.
          title: SourceLocationName
        Tags:
          allOf:
          - $ref: '#/components/schemas/__mapOf__string'
          - description: "The tags assigned to the source location. Tags are key-value\
              \ pairs that you can associate with Amazon resources to help with organization,\
              \ access control, and cost tracking. For more information, see <a href=\"\
              https://docs.aws.amazon.com/mediatailor/latest/ug/tagging.html\">Tagging\
              \ AWS Elemental MediaTailor Resources</a>."
            xml:
              name: tags
          title: Tags
      title: DescribeSourceLocationResponse
      type: object
    DescribeVodSourceResponse:
      example:
        VodSourceName: ""
        SourceLocationName: ""
        CreationTime: ""
        LastModifiedTime: ""
        HttpPackageConfigurations: ""
        Arn: ""
        Tags: ""
      properties:
        Arn:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The ARN of the VOD source.
          title: Arn
        CreationTime:
          allOf:
          - $ref: '#/components/schemas/__timestampUnix'
          - description: The timestamp that indicates when the VOD source was created.
          title: CreationTime
        HttpPackageConfigurations:
          allOf:
          - $ref: '#/components/schemas/HttpPackageConfigurations'
          - description: The HTTP package configurations.
          title: HttpPackageConfigurations
        LastModifiedTime:
          allOf:
          - $ref: '#/components/schemas/__timestampUnix'
          - description: The last modified time of the VOD source.
          title: LastModifiedTime
        SourceLocationName:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The name of the source location associated with the VOD source.
          title: SourceLocationName
        Tags:
          allOf:
          - $ref: '#/components/schemas/__mapOf__string'
          - description: "The tags assigned to the VOD source. Tags are key-value\
              \ pairs that you can associate with Amazon resources to help with organization,\
              \ access control, and cost tracking. For more information, see <a href=\"\
              https://docs.aws.amazon.com/mediatailor/latest/ug/tagging.html\">Tagging\
              \ AWS Elemental MediaTailor Resources</a>."
            xml:
              name: tags
          title: Tags
        VodSourceName:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The name of the VOD source.
          title: VodSourceName
      title: DescribeVodSourceResponse
      type: object
    GetChannelPolicyResponse:
      example:
        Policy: ""
      properties:
        Policy:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The IAM policy for the channel. IAM policies are used to
              control access to your channel.
          title: Policy
      title: GetChannelPolicyResponse
      type: object
    GetChannelScheduleResponse:
      example:
        NextToken: ""
        Items: ""
      properties:
        Items:
          allOf:
          - $ref: '#/components/schemas/__listOfScheduleEntry'
          - description: A list of schedule entries for the channel.
          title: Items
        NextToken:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: Pagination token returned by the list request when results
              exceed the maximum allowed. Use the token to fetch the next page of
              results.
          title: NextToken
      title: GetChannelScheduleResponse
      type: object
    GetPlaybackConfigurationResponse:
      example:
        Bumper:
          StartUrl: ""
          EndUrl: ""
        DashConfiguration:
          ManifestEndpointPrefix: ""
          MpdLocation: ""
          OriginManifestType: ""
        SessionInitializationEndpointPrefix: ""
        CdnConfiguration:
          AdSegmentUrlPrefix: ""
          ContentSegmentUrlPrefix: ""
        ManifestProcessingRules:
          AdMarkerPassthrough:
            Enabled: ""
        PersonalizationThresholdSeconds: ""
        PlaybackConfigurationArn: ""
        LivePreRollConfiguration:
          AdDecisionServerUrl: ""
          MaxDurationSeconds: ""
        HlsConfiguration:
          ManifestEndpointPrefix: ""
        LogConfiguration:
          PercentEnabled: ""
        VideoContentSourceUrl: ""
        Name: ""
        TranscodeProfileName: ""
        ConfigurationAliases: ""
        AdDecisionServerUrl: ""
        PlaybackEndpointPrefix: ""
        SlateAdUrl: ""
        AvailSuppression:
          Mode: ""
          Value: ""
          FillPolicy: ""
        Tags: ""
      properties:
        AdDecisionServerUrl:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: "The URL for the ad decision server (ADS). This includes\
              \ the specification of static parameters and placeholders for dynamic\
              \ parameters. AWS Elemental MediaTailor substitutes player-specific\
              \ and session-specific parameters as needed when calling the ADS. Alternately,\
              \ for testing, you can provide a static VAST URL. The maximum length\
              \ is 25,000 characters."
          title: AdDecisionServerUrl
        AvailSuppression:
          $ref: '#/components/schemas/GetPlaybackConfigurationResponse_AvailSuppression'
        Bumper:
          $ref: '#/components/schemas/GetPlaybackConfigurationResponse_Bumper'
        CdnConfiguration:
          $ref: '#/components/schemas/GetPlaybackConfigurationResponse_CdnConfiguration'
        ConfigurationAliases:
          allOf:
          - $ref: '#/components/schemas/ConfigurationAliasesResponse'
          - description: "The player parameters and aliases used as dynamic variables\
              \ during session initialization. For more information, see <a href=\"\
              https://docs.aws.amazon.com/mediatailor/latest/ug/variables-domain.html\"\
              >Domain Variables</a>."
          title: ConfigurationAliases
        DashConfiguration:
          $ref: '#/components/schemas/GetPlaybackConfigurationResponse_DashConfiguration'
        HlsConfiguration:
          $ref: '#/components/schemas/GetPlaybackConfigurationResponse_HlsConfiguration'
        LivePreRollConfiguration:
          $ref: '#/components/schemas/GetPlaybackConfigurationResponse_LivePreRollConfiguration'
        LogConfiguration:
          $ref: '#/components/schemas/GetPlaybackConfigurationResponse_LogConfiguration'
        ManifestProcessingRules:
          $ref: '#/components/schemas/GetPlaybackConfigurationResponse_ManifestProcessingRules'
        Name:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The identifier for the playback configuration.
          title: Name
        PersonalizationThresholdSeconds:
          allOf:
          - $ref: '#/components/schemas/__integerMin1'
          - description: "Defines the maximum duration of underfilled ad time (in\
              \ seconds) allowed in an ad break. If the duration of underfilled ad\
              \ time exceeds the personalization threshold, then the personalization\
              \ of the ad break is abandoned and the underlying content is shown.\
              \ This feature applies to <i>ad replacement</i> in live and VOD streams,\
              \ rather than ad insertion, because it relies on an underlying content\
              \ stream. For more information about ad break behavior, including ad\
              \ replacement and insertion, see <a href=\"https://docs.aws.amazon.com/mediatailor/latest/ug/ad-behavior.html\"\
              >Ad Behavior in AWS Elemental MediaTailor</a>."
          title: PersonalizationThresholdSeconds
        PlaybackConfigurationArn:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The Amazon Resource Name (ARN) for the playback configuration.
          title: PlaybackConfigurationArn
        PlaybackEndpointPrefix:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The URL that the player accesses to get a manifest from AWS
              Elemental MediaTailor. This session will use server-side reporting.
          title: PlaybackEndpointPrefix
        SessionInitializationEndpointPrefix:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The URL that the player uses to initialize a session that
              uses client-side reporting.
          title: SessionInitializationEndpointPrefix
        SlateAdUrl:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: "The URL for a high-quality video asset to transcode and\
              \ use to fill in time that's not used by ads. AWS Elemental MediaTailor\
              \ shows the slate to fill in gaps in media content. Configuring the\
              \ slate is optional for non-VPAID playback configurations. For VPAID,\
              \ the slate is required because MediaTailor provides it in the slots\
              \ designated for dynamic ad content. The slate must be a high-quality\
              \ asset that contains both audio and video."
          title: SlateAdUrl
        Tags:
          allOf:
          - $ref: '#/components/schemas/__mapOf__string'
          - description: "The tags assigned to the playback configuration. Tags are\
              \ key-value pairs that you can associate with Amazon resources to help\
              \ with organization, access control, and cost tracking. For more information,\
              \ see <a href=\"https://docs.aws.amazon.com/mediatailor/latest/ug/tagging.html\"\
              >Tagging AWS Elemental MediaTailor Resources</a>."
            xml:
              name: tags
          title: Tags
        TranscodeProfileName:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The name that is used to associate this playback configuration
              with a custom transcode profile. This overrides the dynamic transcoding
              defaults of MediaTailor. Use this only if you have already set up custom
              profiles with the help of AWS Support.
          title: TranscodeProfileName
        VideoContentSourceUrl:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: "The URL prefix for the parent manifest for the stream, minus\
              \ the asset ID. The maximum length is 512 characters."
          title: VideoContentSourceUrl
      title: GetPlaybackConfigurationResponse
      type: object
    GetPrefetchScheduleResponse:
      example:
        Consumption:
          AvailMatchingCriteria: ""
          EndTime: ""
          StartTime: ""
        Retrieval:
          EndTime: ""
          StartTime: ""
          DynamicVariables: ""
        StreamId: ""
        Arn: ""
        PlaybackConfigurationName: ""
        Name: ""
      properties:
        Arn:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The Amazon Resource Name (ARN) of the prefetch schedule.
          title: Arn
        Consumption:
          $ref: '#/components/schemas/GetPrefetchScheduleResponse_Consumption'
        Name:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The name of the prefetch schedule. The name must be unique
              among all prefetch schedules that are associated with the specified
              playback configuration.
          title: Name
        PlaybackConfigurationName:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The name of the playback configuration to create the prefetch
              schedule for.
          title: PlaybackConfigurationName
        Retrieval:
          $ref: '#/components/schemas/GetPrefetchScheduleResponse_Retrieval'
        StreamId:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: An optional stream identifier that you can specify in order
              to prefetch for multiple streams that use the same playback configuration.
          title: StreamId
      title: GetPrefetchScheduleResponse
      type: object
    ListAlertsResponse:
      example:
        NextToken: ""
        Items: ""
      properties:
        Items:
          allOf:
          - $ref: '#/components/schemas/__listOfAlert'
          - description: A list of alerts that are associated with this resource.
          title: Items
        NextToken:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: Pagination token returned by the list request when results
              exceed the maximum allowed. Use the token to fetch the next page of
              results.
          title: NextToken
      title: ListAlertsResponse
      type: object
    ListChannelsResponse:
      example:
        NextToken: ""
        Items: ""
      properties:
        Items:
          allOf:
          - $ref: '#/components/schemas/__listOfChannel'
          - description: A list of channels that are associated with this account.
          title: Items
        NextToken:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: Pagination token returned by the list request when results
              exceed the maximum allowed. Use the token to fetch the next page of
              results.
          title: NextToken
      title: ListChannelsResponse
      type: object
    ListLiveSourcesResponse:
      example:
        NextToken: ""
        Items: ""
      properties:
        Items:
          allOf:
          - $ref: '#/components/schemas/__listOfLiveSource'
          - description: Lists the live sources.
          title: Items
        NextToken:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: Pagination token returned by the list request when results
              exceed the maximum allowed. Use the token to fetch the next page of
              results.
          title: NextToken
      title: ListLiveSourcesResponse
      type: object
    ListPlaybackConfigurationsResponse:
      example:
        NextToken: ""
        Items: ""
      properties:
        Items:
          allOf:
          - $ref: '#/components/schemas/__listOfPlaybackConfiguration'
          - description: "Array of playback configurations. This might be all the\
              \ available configurations or a subset, depending on the settings that\
              \ you provide and the total number of configurations stored."
          title: Items
        NextToken:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: Pagination token returned by the GET list request when results
              exceed the maximum allowed. Use the token to fetch the next page of
              results.
          title: NextToken
      title: ListPlaybackConfigurationsResponse
      type: object
    ListPrefetchSchedulesResponse:
      example:
        NextToken: ""
        Items: ""
      properties:
        Items:
          allOf:
          - $ref: '#/components/schemas/__listOfPrefetchSchedule'
          - description: "Lists the prefetch schedules. An empty <code>Items</code>\
              \ list doesn't mean there aren't more items to fetch, just that that\
              \ page was empty."
          title: Items
        NextToken:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: Pagination token returned by the list request when results
              exceed the maximum allowed. Use the token to fetch the next page of
              results.
          title: NextToken
      title: ListPrefetchSchedulesResponse
      type: object
    ListSourceLocationsResponse:
      example:
        NextToken: ""
        Items: ""
      properties:
        Items:
          allOf:
          - $ref: '#/components/schemas/__listOfSourceLocation'
          - description: A list of source locations.
          title: Items
        NextToken:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: Pagination token returned by the list request when results
              exceed the maximum allowed. Use the token to fetch the next page of
              results.
          title: NextToken
      title: ListSourceLocationsResponse
      type: object
    ListTagsForResourceResponse:
      example:
        Tags: ""
      properties:
        Tags:
          allOf:
          - $ref: '#/components/schemas/__mapOf__string'
          - description: "The tags associated with this resource. Tags are key-value\
              \ pairs that you can associate with Amazon resources to help with organization,\
              \ access control, and cost tracking. For more information, see <a href=\"\
              https://docs.aws.amazon.com/mediatailor/latest/ug/tagging.html\">Tagging\
              \ AWS Elemental MediaTailor Resources</a>."
            xml:
              name: tags
          title: Tags
      title: ListTagsForResourceResponse
      type: object
    BadRequestException: {}
    ListVodSourcesResponse:
      example:
        NextToken: ""
        Items: ""
      properties:
        Items:
          allOf:
          - $ref: '#/components/schemas/__listOfVodSource'
          - description: Lists the VOD sources.
          title: Items
        NextToken:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: Pagination token returned by the list request when results
              exceed the maximum allowed. Use the token to fetch the next page of
              results.
          title: NextToken
      title: ListVodSourcesResponse
      type: object
    PutChannelPolicyResponse:
      properties: {}
      type: object
    PutPlaybackConfigurationResponse:
      example:
        Bumper:
          StartUrl: ""
          EndUrl: ""
        DashConfiguration:
          ManifestEndpointPrefix: ""
          MpdLocation: ""
          OriginManifestType: ""
        SessionInitializationEndpointPrefix: ""
        CdnConfiguration:
          AdSegmentUrlPrefix: ""
          ContentSegmentUrlPrefix: ""
        ManifestProcessingRules:
          AdMarkerPassthrough:
            Enabled: ""
        PersonalizationThresholdSeconds: ""
        PlaybackConfigurationArn: ""
        LivePreRollConfiguration:
          AdDecisionServerUrl: ""
          MaxDurationSeconds: ""
        HlsConfiguration:
          ManifestEndpointPrefix: ""
        LogConfiguration:
          PercentEnabled: ""
        VideoContentSourceUrl: ""
        Name: ""
        TranscodeProfileName: ""
        ConfigurationAliases: ""
        AdDecisionServerUrl: ""
        PlaybackEndpointPrefix: ""
        SlateAdUrl: ""
        AvailSuppression:
          Mode: ""
          Value: ""
          FillPolicy: ""
        Tags: ""
      properties:
        AdDecisionServerUrl:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: "The URL for the ad decision server (ADS). This includes\
              \ the specification of static parameters and placeholders for dynamic\
              \ parameters. AWS Elemental MediaTailor substitutes player-specific\
              \ and session-specific parameters as needed when calling the ADS. Alternately,\
              \ for testing you can provide a static VAST URL. The maximum length\
              \ is 25,000 characters."
          title: AdDecisionServerUrl
        AvailSuppression:
          $ref: '#/components/schemas/GetPlaybackConfigurationResponse_AvailSuppression'
        Bumper:
          $ref: '#/components/schemas/GetPlaybackConfigurationResponse_Bumper'
        CdnConfiguration:
          $ref: '#/components/schemas/GetPlaybackConfigurationResponse_CdnConfiguration'
        ConfigurationAliases:
          allOf:
          - $ref: '#/components/schemas/ConfigurationAliasesResponse'
          - description: "The player parameters and aliases used as dynamic variables\
              \ during session initialization. For more information, see <a href=\"\
              https://docs.aws.amazon.com/mediatailor/latest/ug/variables-domain.html\"\
              >Domain Variables</a>."
          title: ConfigurationAliases
        DashConfiguration:
          $ref: '#/components/schemas/GetPlaybackConfigurationResponse_DashConfiguration'
        HlsConfiguration:
          $ref: '#/components/schemas/GetPlaybackConfigurationResponse_HlsConfiguration'
        LivePreRollConfiguration:
          $ref: '#/components/schemas/GetPlaybackConfigurationResponse_LivePreRollConfiguration'
        LogConfiguration:
          $ref: '#/components/schemas/GetPlaybackConfigurationResponse_LogConfiguration'
        ManifestProcessingRules:
          $ref: '#/components/schemas/GetPlaybackConfigurationResponse_ManifestProcessingRules'
        Name:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The identifier for the playback configuration.
          title: Name
        PersonalizationThresholdSeconds:
          allOf:
          - $ref: '#/components/schemas/__integerMin1'
          - description: "Defines the maximum duration of underfilled ad time (in\
              \ seconds) allowed in an ad break. If the duration of underfilled ad\
              \ time exceeds the personalization threshold, then the personalization\
              \ of the ad break is abandoned and the underlying content is shown.\
              \ This feature applies to <i>ad replacement</i> in live and VOD streams,\
              \ rather than ad insertion, because it relies on an underlying content\
              \ stream. For more information about ad break behavior, including ad\
              \ replacement and insertion, see <a href=\"https://docs.aws.amazon.com/mediatailor/latest/ug/ad-behavior.html\"\
              >Ad Behavior in AWS Elemental MediaTailor</a>."
          title: PersonalizationThresholdSeconds
        PlaybackConfigurationArn:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The Amazon Resource Name (ARN) associated with the playback
              configuration.
          title: PlaybackConfigurationArn
        PlaybackEndpointPrefix:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The playback endpoint prefix associated with the playback
              configuration.
          title: PlaybackEndpointPrefix
        SessionInitializationEndpointPrefix:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The session initialization endpoint prefix associated with
              the playback configuration.
          title: SessionInitializationEndpointPrefix
        SlateAdUrl:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: "The URL for a high-quality video asset to transcode and\
              \ use to fill in time that's not used by ads. AWS Elemental MediaTailor\
              \ shows the slate to fill in gaps in media content. Configuring the\
              \ slate is optional for non-VPAID configurations. For VPAID, the slate\
              \ is required because MediaTailor provides it in the slots that are\
              \ designated for dynamic ad content. The slate must be a high-quality\
              \ asset that contains both audio and video."
          title: SlateAdUrl
        Tags:
          allOf:
          - $ref: '#/components/schemas/__mapOf__string'
          - description: "The tags to assign to the playback configuration. Tags are\
              \ key-value pairs that you can associate with Amazon resources to help\
              \ with organization, access control, and cost tracking. For more information,\
              \ see <a href=\"https://docs.aws.amazon.com/mediatailor/latest/ug/tagging.html\"\
              >Tagging AWS Elemental MediaTailor Resources</a>."
            xml:
              name: tags
          title: Tags
        TranscodeProfileName:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The name that is used to associate this playback configuration
              with a custom transcode profile. This overrides the dynamic transcoding
              defaults of MediaTailor. Use this only if you have already set up custom
              profiles with the help of AWS Support.
          title: TranscodeProfileName
        VideoContentSourceUrl:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: "The URL prefix for the parent manifest for the stream, minus\
              \ the asset ID. The maximum length is 512 characters."
          title: VideoContentSourceUrl
      title: PutPlaybackConfigurationResponse
      type: object
    FillPolicy:
      enum:
      - FULL_AVAIL_ONLY
      - PARTIAL_AVAIL
      title: FillPolicy
      type: string
    Mode:
      enum:
      - "OFF"
      - BEHIND_LIVE_EDGE
      - AFTER_LIVE_EDGE
      title: Mode
      type: string
    OriginManifestType:
      enum:
      - SINGLE_PERIOD
      - MULTI_PERIOD
      title: OriginManifestType
      type: string
    __integer:
      type: integer
    AdMarkerPassthrough:
      description: "<p>For HLS, when set to <code>true</code>, MediaTailor passes\
        \ through <code>EXT-X-CUE-IN</code>, <code>EXT-X-CUE-OUT</code>, and <code>EXT-X-SPLICEPOINT-SCTE35</code>\
        \ ad markers from the origin manifest to the MediaTailor personalized manifest.</p>\
        \ <p>No logic is applied to these ad markers. For example, if <code>EXT-X-CUE-OUT</code>\
        \ has a value of <code>60</code>, but no ads are filled for that ad break,\
        \ MediaTailor will not set the value to <code>0</code>.</p>"
      properties:
        Enabled:
          allOf:
          - $ref: '#/components/schemas/__boolean'
          - description: Enables ad marker passthrough for your configuration.
          title: Enabled
      title: AdMarkerPassthrough
      type: object
    StartChannelResponse:
      properties: {}
      type: object
    StopChannelResponse:
      properties: {}
      type: object
    UpdateChannelResponse:
      example:
        FillerSlate:
          VodSourceName: ""
          SourceLocationName: ""
        ChannelState: ""
        ChannelName: ""
        Tier: ""
        CreationTime: ""
        LastModifiedTime: ""
        Outputs: ""
        Arn: ""
        PlaybackMode: ""
        Tags: ""
      properties:
        Arn:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The Amazon Resource Name (ARN) associated with the channel.
          title: Arn
        ChannelName:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The name of the channel.
          title: ChannelName
        ChannelState:
          allOf:
          - $ref: '#/components/schemas/ChannelState'
          - description: Returns the state whether the channel is running or not.
          title: ChannelState
        CreationTime:
          allOf:
          - $ref: '#/components/schemas/__timestampUnix'
          - description: The timestamp of when the channel was created.
          title: CreationTime
        FillerSlate:
          $ref: '#/components/schemas/UpdateChannelResponse_FillerSlate'
        LastModifiedTime:
          allOf:
          - $ref: '#/components/schemas/__timestampUnix'
          - description: The timestamp that indicates when the channel was last modified.
          title: LastModifiedTime
        Outputs:
          allOf:
          - $ref: '#/components/schemas/ResponseOutputs'
          - description: The channel's output properties.
          title: Outputs
        PlaybackMode:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: "<p>The type of playback mode for this channel.</p> <p> <code>LINEAR</code>\
              \ - Programs play back-to-back only once.</p> <p> <code>LOOP</code>\
              \ - Programs play back-to-back in an endless loop. When the last program\
              \ in the schedule plays, playback loops back to the first program in\
              \ the schedule.</p>"
          title: PlaybackMode
        Tags:
          allOf:
          - $ref: '#/components/schemas/__mapOf__string'
          - description: "The tags to assign to the channel. Tags are key-value pairs\
              \ that you can associate with Amazon resources to help with organization,\
              \ access control, and cost tracking. For more information, see <a href=\"\
              https://docs.aws.amazon.com/mediatailor/latest/ug/tagging.html\">Tagging\
              \ AWS Elemental MediaTailor Resources</a>."
            xml:
              name: tags
          title: Tags
        Tier:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The tier associated with this Channel.
          title: Tier
      title: UpdateChannelResponse
      type: object
    UpdateLiveSourceResponse:
      example:
        LiveSourceName: ""
        SourceLocationName: ""
        CreationTime: ""
        LastModifiedTime: ""
        HttpPackageConfigurations: ""
        Arn: ""
        Tags: ""
      properties:
        Arn:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The Amazon Resource Name (ARN) associated with this live
              source.
          title: Arn
        CreationTime:
          allOf:
          - $ref: '#/components/schemas/__timestampUnix'
          - description: The timestamp that indicates when the live source was created.
          title: CreationTime
        HttpPackageConfigurations:
          allOf:
          - $ref: '#/components/schemas/HttpPackageConfigurations'
          - description: A list of HTTP package configurations for the live source
              on this account.
          title: HttpPackageConfigurations
        LastModifiedTime:
          allOf:
          - $ref: '#/components/schemas/__timestampUnix'
          - description: The timestamp that indicates when the live source was last
              modified.
          title: LastModifiedTime
        LiveSourceName:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The name of the live source.
          title: LiveSourceName
        SourceLocationName:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The name of the source location associated with the live
              source.
          title: SourceLocationName
        Tags:
          allOf:
          - $ref: '#/components/schemas/__mapOf__string'
          - description: "The tags to assign to the live source. Tags are key-value\
              \ pairs that you can associate with Amazon resources to help with organization,\
              \ access control, and cost tracking. For more information, see <a href=\"\
              https://docs.aws.amazon.com/mediatailor/latest/ug/tagging.html\">Tagging\
              \ AWS Elemental MediaTailor Resources</a>."
            xml:
              name: tags
          title: Tags
      title: UpdateLiveSourceResponse
      type: object
    UpdateProgramResponse:
      example:
        VodSourceName: ""
        ChannelName: ""
        LiveSourceName: ""
        SourceLocationName: ""
        AdBreaks: ""
        CreationTime: ""
        ClipRange:
          EndOffsetMillis: ""
        ScheduledStartTime: ""
        Arn: ""
        DurationMillis: ""
        ProgramName: ""
      properties:
        AdBreaks:
          allOf:
          - $ref: '#/components/schemas/__listOfAdBreak'
          - description: The ad break configuration settings.
          title: AdBreaks
        Arn:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The ARN to assign to the program.
          title: Arn
        ChannelName:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The name to assign to the channel for this program.
          title: ChannelName
        ClipRange:
          $ref: '#/components/schemas/CreateProgramResponse_ClipRange'
        CreationTime:
          allOf:
          - $ref: '#/components/schemas/__timestampUnix'
          - description: The time the program was created.
          title: CreationTime
        DurationMillis:
          allOf:
          - $ref: '#/components/schemas/__long'
          - description: The duration of the live program in milliseconds.
          title: DurationMillis
        LiveSourceName:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The name of the LiveSource for this Program.
          title: LiveSourceName
        ProgramName:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The name to assign to this program.
          title: ProgramName
        ScheduledStartTime:
          allOf:
          - $ref: '#/components/schemas/__timestampUnix'
          - description: The scheduled start time for this Program.
          title: ScheduledStartTime
        SourceLocationName:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The name to assign to the source location for this program.
          title: SourceLocationName
        VodSourceName:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The name that's used to refer to a VOD source.
          title: VodSourceName
      title: UpdateProgramResponse
      type: object
    UpdateProgramTransition:
      description: Program transition configuration.
      properties:
        DurationMillis:
          allOf:
          - $ref: '#/components/schemas/__long'
          - description: The duration of the live program in seconds.
          title: DurationMillis
        ScheduledStartTimeMillis:
          allOf:
          - $ref: '#/components/schemas/__long'
          - description: "The date and time that the program is scheduled to start,\
              \ in epoch milliseconds."
          title: ScheduledStartTimeMillis
      title: UpdateProgramTransition
      type: object
    UpdateSourceLocationResponse:
      example:
        SourceLocationName: ""
        DefaultSegmentDeliveryConfiguration:
          BaseUrl: ""
        CreationTime: ""
        LastModifiedTime: ""
        SegmentDeliveryConfigurations: ""
        HttpConfiguration:
          BaseUrl: ""
        Arn: ""
        AccessConfiguration:
          SecretsManagerAccessTokenConfiguration:
            SecretArn: ""
            HeaderName: ""
            SecretStringKey: ""
          AccessType: ""
        Tags: ""
      properties:
        AccessConfiguration:
          $ref: '#/components/schemas/CreateSourceLocationResponse_AccessConfiguration'
        Arn:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The Amazon Resource Name (ARN) associated with the source
              location.
          title: Arn
        CreationTime:
          allOf:
          - $ref: '#/components/schemas/__timestampUnix'
          - description: The timestamp that indicates when the source location was
              created.
          title: CreationTime
        DefaultSegmentDeliveryConfiguration:
          $ref: '#/components/schemas/UpdateSourceLocationResponse_DefaultSegmentDeliveryConfiguration'
        HttpConfiguration:
          $ref: '#/components/schemas/UpdateSourceLocationResponse_HttpConfiguration'
        LastModifiedTime:
          allOf:
          - $ref: '#/components/schemas/__timestampUnix'
          - description: The timestamp that indicates when the source location was
              last modified.
          title: LastModifiedTime
        SegmentDeliveryConfigurations:
          allOf:
          - $ref: '#/components/schemas/__listOfSegmentDeliveryConfiguration'
          - description: "The segment delivery configurations for the source location.\
              \ For information about MediaTailor configurations, see <a href=\"https://docs.aws.amazon.com/mediatailor/latest/ug/configurations.html\"\
              >Working with configurations in AWS Elemental MediaTailor</a>."
          title: SegmentDeliveryConfigurations
        SourceLocationName:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The name of the source location.
          title: SourceLocationName
        Tags:
          allOf:
          - $ref: '#/components/schemas/__mapOf__string'
          - description: "The tags to assign to the source location. Tags are key-value\
              \ pairs that you can associate with Amazon resources to help with organization,\
              \ access control, and cost tracking. For more information, see <a href=\"\
              https://docs.aws.amazon.com/mediatailor/latest/ug/tagging.html\">Tagging\
              \ AWS Elemental MediaTailor Resources</a>."
            xml:
              name: tags
          title: Tags
      title: UpdateSourceLocationResponse
      type: object
    UpdateVodSourceResponse:
      example:
        VodSourceName: ""
        SourceLocationName: ""
        CreationTime: ""
        LastModifiedTime: ""
        HttpPackageConfigurations: ""
        Arn: ""
        Tags: ""
      properties:
        Arn:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The Amazon Resource Name (ARN) associated with the VOD source.
          title: Arn
        CreationTime:
          allOf:
          - $ref: '#/components/schemas/__timestampUnix'
          - description: The timestamp that indicates when the VOD source was created.
          title: CreationTime
        HttpPackageConfigurations:
          allOf:
          - $ref: '#/components/schemas/HttpPackageConfigurations'
          - description: A list of HTTP package configurations for the VOD source
              on this account.
          title: HttpPackageConfigurations
        LastModifiedTime:
          allOf:
          - $ref: '#/components/schemas/__timestampUnix'
          - description: The timestamp that indicates when the VOD source was last
              modified.
          title: LastModifiedTime
        SourceLocationName:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The name of the source location associated with the VOD source.
          title: SourceLocationName
        Tags:
          allOf:
          - $ref: '#/components/schemas/__mapOf__string'
          - description: "The tags to assign to the VOD source. Tags are key-value\
              \ pairs that you can associate with Amazon resources to help with organization,\
              \ access control, and cost tracking. For more information, see <a href=\"\
              https://docs.aws.amazon.com/mediatailor/latest/ug/tagging.html\">Tagging\
              \ AWS Elemental MediaTailor Resources</a>."
            xml:
              name: tags
          title: Tags
        VodSourceName:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The name of the VOD source.
          title: VodSourceName
      title: UpdateVodSourceResponse
      type: object
    AccessConfiguration:
      description: Access configuration parameters.
      properties:
        AccessType:
          allOf:
          - $ref: '#/components/schemas/AccessType'
          - description: "<p>The type of authentication used to access content from\
              \ <code>HttpConfiguration::BaseUrl</code> on your source location. Accepted\
              \ value: <code>S3_SIGV4</code>.</p> <p> <code>S3_SIGV4</code> - AWS\
              \ Signature Version 4 authentication for Amazon S3 hosted virtual-style\
              \ access. If your source location base URL is an Amazon S3 bucket, MediaTailor\
              \ can use AWS Signature Version 4 (SigV4) authentication to access the\
              \ bucket where your source content is stored. Your MediaTailor source\
              \ location baseURL must follow the S3 virtual hosted-style request URL\
              \ format. For example, https://bucket-name.s3.Region.amazonaws.com/key-name.</p>\
              \ <p>Before you can use <code>S3_SIGV4</code>, you must meet these requirements:</p>\
              \ <p>• You must allow MediaTailor to access your S3 bucket by granting\
              \ mediatailor.amazonaws.com principal access in IAM. For information\
              \ about configuring access in IAM, see Access management in the IAM\
              \ User Guide.</p> <p>• The mediatailor.amazonaws.com service principal\
              \ must have permissions to read all top level manifests referenced by\
              \ the VodSource packaging configurations.</p> <p>• The caller of the\
              \ API must have s3:GetObject IAM permissions to read all top level manifests\
              \ referenced by your MediaTailor VodSource packaging configurations.</p>"
          title: AccessType
        SecretsManagerAccessTokenConfiguration:
          $ref: '#/components/schemas/UpdateSourceLocation_request_AccessConfiguration_SecretsManagerAccessTokenConfiguration'
      title: AccessConfiguration
      type: object
    AdBreakMetadataList:
      items:
        $ref: '#/components/schemas/KeyValuePair'
      type: array
    MessageType:
      enum:
      - SPLICE_INSERT
      - TIME_SIGNAL
      title: MessageType
      type: string
    __long:
      type: integer
    SlateSource:
      description: Slate VOD source configuration.
      properties:
        SourceLocationName:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The name of the source location where the slate VOD source
              is stored.
          title: SourceLocationName
        VodSourceName:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The slate VOD source name. The VOD source must already exist
              in a source location before it can be used for slate.
          title: VodSourceName
      title: SlateSource
      type: object
    SpliceInsertMessage:
      description: Splice insert message configuration.
      properties:
        AvailNum:
          allOf:
          - $ref: '#/components/schemas/__integer'
          - description: "This is written to <code>splice_insert.avail_num</code>,\
              \ as defined in section 9.7.3.1 of the SCTE-35 specification. The default\
              \ value is <code>0</code>. Values must be between <code>0</code> and\
              \ <code>256</code>, inclusive."
          title: AvailNum
        AvailsExpected:
          allOf:
          - $ref: '#/components/schemas/__integer'
          - description: "This is written to <code>splice_insert.avails_expected</code>,\
              \ as defined in section 9.7.3.1 of the SCTE-35 specification. The default\
              \ value is <code>0</code>. Values must be between <code>0</code> and\
              \ <code>256</code>, inclusive."
          title: AvailsExpected
        SpliceEventId:
          allOf:
          - $ref: '#/components/schemas/__integer'
          - description: "This is written to <code>splice_insert.splice_event_id</code>,\
              \ as defined in section 9.7.3.1 of the SCTE-35 specification. The default\
              \ value is <code>1</code>."
          title: SpliceEventId
        UniqueProgramId:
          allOf:
          - $ref: '#/components/schemas/__integer'
          - description: "This is written to <code>splice_insert.unique_program_id</code>,\
              \ as defined in section 9.7.3.1 of the SCTE-35 specification. The default\
              \ value is <code>0</code>. Values must be between <code>0</code> and\
              \ <code>256</code>, inclusive."
          title: UniqueProgramId
      title: SpliceInsertMessage
      type: object
    TimeSignalMessage:
      description: "<p>The SCTE-35 <code>time_signal</code> message can be sent with\
        \ one or more <code>segmentation_descriptor</code> messages. A <code>time_signal</code>\
        \ message can be sent only if a single <code>segmentation_descriptor</code>\
        \ message is sent.</p> <p>The <code>time_signal</code> message contains only\
        \ the <code>splice_time</code> field which is constructed using a given presentation\
        \ timestamp. When sending a <code>time_signal</code> message, the <code>splice_command_type</code>\
        \ field in the <code>splice_info_section</code> message is set to 6 (0x06).</p>\
        \ <p>See the <code>time_signal()</code> table of the 2022 SCTE-35 specification\
        \ for more information.</p>"
      properties:
        SegmentationDescriptors:
          allOf:
          - $ref: '#/components/schemas/SegmentationDescriptorList'
          - description: The configurations for the SCTE-35 <code>segmentation_descriptor</code>
              message(s) sent with the <code>time_signal</code> message.
          title: SegmentationDescriptors
      title: TimeSignalMessage
      type: object
    KeyValuePair:
      description: "For <code>SCTE35_ENHANCED</code> output, defines a key and corresponding\
        \ value. MediaTailor generates these pairs within the <code>EXT-X-ASSET</code>tag."
      properties:
        Key:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: "For <code>SCTE35_ENHANCED</code> output, defines a key.\
              \ MediaTailor takes this key, and its associated value, and generates\
              \ the key/value pair within the <code>EXT-X-ASSET</code>tag. If you\
              \ specify a key, you must also specify a corresponding value."
          title: Key
        Value:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: "For <code>SCTE35_ENHANCED</code> output, defines a value.\
              \ MediaTailor; takes this value, and its associated key, and generates\
              \ the key/value pair within the <code>EXT-X-ASSET</code>tag. If you\
              \ specify a value, you must also specify a corresponding key."
          title: Value
      required:
      - Key
      - Value
      title: KeyValuePair
      type: object
    __boolean:
      type: boolean
    AdMarkupType:
      enum:
      - DATERANGE
      - SCTE35_ENHANCED
      title: AdMarkupType
      type: string
    AlertCategory:
      enum:
      - SCHEDULING_ERROR
      - PLAYBACK_WARNING
      - INFO
      title: AlertCategory
      type: string
    __listOf__string:
      items:
        $ref: '#/components/schemas/__string'
      type: array
    Alert:
      description: Alert configuration parameters.
      properties:
        AlertCode:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: "The code for the alert. For example, <code>NOT_PROCESSED</code>."
          title: AlertCode
        AlertMessage:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: "If an alert is generated for a resource, an explanation\
              \ of the reason for the alert."
          title: AlertMessage
        Category:
          allOf:
          - $ref: '#/components/schemas/AlertCategory'
          - description: The category that MediaTailor assigns to the alert.
          title: Category
        LastModifiedTime:
          allOf:
          - $ref: '#/components/schemas/__timestampUnix'
          - description: The timestamp when the alert was last modified.
          title: LastModifiedTime
        RelatedResourceArns:
          allOf:
          - $ref: '#/components/schemas/__listOf__string'
          - description: The Amazon Resource Names (ARNs) related to this alert.
          title: RelatedResourceArns
        ResourceArn:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The Amazon Resource Name (ARN) of the resource.
          title: ResourceArn
      required:
      - AlertCode
      - AlertMessage
      - LastModifiedTime
      - RelatedResourceArns
      - ResourceArn
      title: Alert
      type: object
    Operator:
      enum:
      - EQUALS
      title: Operator
      type: string
    AvailMatchingCriteria:
      description: "<p>MediaTailor only places (consumes) prefetched ads if the ad\
        \ break meets the criteria defined by the dynamic variables. This gives you\
        \ granular control over which ad break to place the prefetched ads into.</p>\
        \ <p>As an example, let's say that you set <code>DynamicVariable</code> to\
        \ <code>scte.event_id</code> and <code>Operator</code> to <code>EQUALS</code>,\
        \ and your playback configuration has an ADS URL of <code>https://my.ads.server.com/path?&amp;podId=[scte.avail_num]&amp;event=[scte.event_id]&amp;duration=[session.avail_duration_secs]</code>.\
        \ And the prefetch request to the ADS contains these values <code>https://my.ads.server.com/path?&amp;podId=3&amp;event=my-awesome-event&amp;duration=30</code>.\
        \ MediaTailor will only insert the prefetched ads into the ad break if has\
        \ a SCTE marker with an event id of <code>my-awesome-event</code>, since it\
        \ must match the event id that MediaTailor uses to query the ADS.</p> <p>You\
        \ can specify up to five <code>AvailMatchingCriteria</code>. If you specify\
        \ multiple <code>AvailMatchingCriteria</code>, MediaTailor combines them to\
        \ match using a logical <code>AND</code>. You can model logical <code>OR</code>\
        \ combinations by creating multiple prefetch schedules.</p>"
      properties:
        DynamicVariable:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: "<p>The dynamic variable(s) that MediaTailor should use as\
              \ avail matching criteria. MediaTailor only places the prefetched ads\
              \ into the avail if the avail matches the criteria defined by the dynamic\
              \ variable. For information about dynamic variables, see <a href=\"\
              https://docs.aws.amazon.com/mediatailor/latest/ug/variables.html\">Using\
              \ dynamic ad variables</a> in the <i>MediaTailor User Guide</i>.</p>\
              \ <p>You can include up to 100 dynamic variables.</p>"
          title: DynamicVariable
        Operator:
          allOf:
          - $ref: '#/components/schemas/Operator'
          - description: "For the <code>DynamicVariable</code> specified in <code>AvailMatchingCriteria</code>,\
              \ the Operator that is used for the comparison."
          title: Operator
      required:
      - DynamicVariable
      - Operator
      title: AvailMatchingCriteria
      type: object
    AvailSuppression:
      description: "The configuration for avail suppression, also known as ad suppression.\
        \ For more information about ad suppression, see <a href=\"https://docs.aws.amazon.com/mediatailor/latest/ug/ad-behavior.html\"\
        >Ad Suppression</a>."
      properties:
        FillPolicy:
          allOf:
          - $ref: '#/components/schemas/FillPolicy'
          - description: Defines the policy to apply to the avail suppression mode.
              <code>BEHIND_LIVE_EDGE</code> will always use the full avail suppression
              policy. <code>AFTER_LIVE_EDGE</code> mode can be used to invoke partial
              ad break fills when a session starts mid-break.
          title: FillPolicy
        Mode:
          allOf:
          - $ref: '#/components/schemas/Mode'
          - description: "Sets the ad suppression mode. By default, ad suppression\
              \ is off and all ad breaks are filled with ads or slate. When Mode is\
              \ set to <code>BEHIND_LIVE_EDGE</code>, ad suppression is active and\
              \ MediaTailor won't fill ad breaks on or behind the ad suppression Value\
              \ time in the manifest lookback window. When Mode is set to <code>AFTER_LIVE_EDGE</code>,\
              \ ad suppression is active and MediaTailor won't fill ad breaks that\
              \ are within the live edge plus the avail suppression value."
          title: Mode
        Value:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: "A live edge offset time in HH:MM:SS. MediaTailor won't fill\
              \ ad breaks on or behind this time in the manifest lookback window.\
              \ If Value is set to 00:00:00, it is in sync with the live edge, and\
              \ MediaTailor won't fill any ad breaks on or behind the live edge. If\
              \ you set a Value time, MediaTailor won't fill any ad breaks on or behind\
              \ this time in the manifest lookback window. For example, if you set\
              \ 00:45:00, then MediaTailor will fill ad breaks that occur within 45\
              \ minutes behind the live edge, but won't fill ad breaks on or behind\
              \ 45 minutes behind the live edge."
          title: Value
      title: AvailSuppression
      type: object
    Bumper:
      description: "The configuration for bumpers. Bumpers are short audio or video\
        \ clips that play at the start or before the end of an ad break. To learn\
        \ more about bumpers, see <a href=\"https://docs.aws.amazon.com/mediatailor/latest/ug/bumpers.html\"\
        >Bumpers</a>."
      properties:
        EndUrl:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The URL for the end bumper asset.
          title: EndUrl
        StartUrl:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The URL for the start bumper asset.
          title: StartUrl
      title: Bumper
      type: object
    CdnConfiguration:
      description: "The configuration for using a content delivery network (CDN),\
        \ like Amazon CloudFront, for content and ad segment management."
      properties:
        AdSegmentUrlPrefix:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: "A non-default content delivery network (CDN) to serve ad\
              \ segments. By default, AWS Elemental MediaTailor uses Amazon CloudFront\
              \ with default cache settings as its CDN for ad segments. To set up\
              \ an alternate CDN, create a rule in your CDN for the origin ads.mediatailor.<i>&lt;region&gt;</i>.amazonaws.com.\
              \ Then specify the rule's name in this <code>AdSegmentUrlPrefix</code>.\
              \ When AWS Elemental MediaTailor serves a manifest, it reports your\
              \ CDN as the source for ad segments."
          title: AdSegmentUrlPrefix
        ContentSegmentUrlPrefix:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: "A content delivery network (CDN) to cache content segments,\
              \ so that content requests don’t always have to go to the origin server.\
              \ First, create a rule in your CDN for the content segment origin server.\
              \ Then specify the rule's name in this <code>ContentSegmentUrlPrefix</code>.\
              \ When AWS Elemental MediaTailor serves a manifest, it reports your\
              \ CDN as the source for content segments."
          title: ContentSegmentUrlPrefix
      title: CdnConfiguration
      type: object
    LogConfigurationForChannel:
      description: The log configuration for the channel.
      properties:
        LogTypes:
          allOf:
          - $ref: '#/components/schemas/LogTypes'
          - description: The log types.
          title: LogTypes
      title: LogConfigurationForChannel
      type: object
    ResponseOutputs:
      items:
        $ref: '#/components/schemas/ResponseOutputItem'
      type: array
    Channel:
      description: "The configuration parameters for a channel. For information about\
        \ MediaTailor channels, see <a href=\"https://docs.aws.amazon.com/mediatailor/latest/ug/channel-assembly-channels.html\"\
        >Working with channels</a> in the <i>MediaTailor User Guide</i>."
      properties:
        Arn:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The ARN of the channel.
          title: Arn
        ChannelName:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The name of the channel.
          title: ChannelName
        ChannelState:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: Returns the state whether the channel is running or not.
          title: ChannelState
        CreationTime:
          allOf:
          - $ref: '#/components/schemas/__timestampUnix'
          - description: The timestamp of when the channel was created.
          title: CreationTime
        FillerSlate:
          $ref: '#/components/schemas/UpdateChannelResponse_FillerSlate'
        LastModifiedTime:
          allOf:
          - $ref: '#/components/schemas/__timestampUnix'
          - description: The timestamp of when the channel was last modified.
          title: LastModifiedTime
        LogConfiguration:
          $ref: '#/components/schemas/Channel_LogConfiguration'
        Outputs:
          allOf:
          - $ref: '#/components/schemas/ResponseOutputs'
          - description: The channel's output properties.
          title: Outputs
        PlaybackMode:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: "<p>The type of playback mode for this channel.</p> <p> <code>LINEAR</code>\
              \ - Programs play back-to-back only once.</p> <p> <code>LOOP</code>\
              \ - Programs play back-to-back in an endless loop. When the last program\
              \ in the schedule plays, playback loops back to the first program in\
              \ the schedule.</p>"
          title: PlaybackMode
        Tags:
          allOf:
          - $ref: '#/components/schemas/__mapOf__string'
          - description: "The tags to assign to the channel. Tags are key-value pairs\
              \ that you can associate with Amazon resources to help with organization,\
              \ access control, and cost tracking. For more information, see <a href=\"\
              https://docs.aws.amazon.com/mediatailor/latest/ug/tagging.html\">Tagging\
              \ AWS Elemental MediaTailor Resources</a>."
            xml:
              name: tags
          title: Tags
        Tier:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The tier for this channel. STANDARD tier channels can contain
              live programs.
          title: Tier
      required:
      - Arn
      - ChannelName
      - ChannelState
      - LogConfiguration
      - Outputs
      - PlaybackMode
      - Tier
      title: Channel
      type: object
    ChannelState:
      enum:
      - RUNNING
      - STOPPED
      title: ChannelState
      type: string
    ConfigurationAliasesRequest:
      additionalProperties:
        $ref: '#/components/schemas/__mapOf__string'
      description: The predefined aliases for dynamic variables.
      type: object
    ConfigurationAliasesResponse:
      additionalProperties:
        $ref: '#/components/schemas/__mapOf__string'
      description: The predefined aliases for dynamic variables.
      type: object
    LogTypes:
      items:
        $ref: '#/components/schemas/LogType'
      type: array
    ConfigureLogsForChannelRequest:
      example:
        ChannelName: ""
        LogTypes: ""
      properties:
        ChannelName:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The name of the channel.
        LogTypes:
          allOf:
          - $ref: '#/components/schemas/LogTypes'
          - description: The types of logs to collect.
      required:
      - ChannelName
      - LogTypes
      title: ConfigureLogsForChannelRequest
      type: object
    ConfigureLogsForPlaybackConfigurationRequest:
      description: Configures Amazon CloudWatch log settings for a playback configuration.
      example:
        PercentEnabled: ""
        PlaybackConfigurationName: ""
      properties:
        PercentEnabled:
          allOf:
          - $ref: '#/components/schemas/__integer'
          - description: "<p>The percentage of session logs that MediaTailor sends\
              \ to your Cloudwatch Logs account. For example, if your playback configuration\
              \ has 1000 sessions and percentEnabled is set to <code>60</code>, MediaTailor\
              \ sends logs for 600 of the sessions to CloudWatch Logs. MediaTailor\
              \ decides at random which of the playback configuration sessions to\
              \ send logs for. If you want to view logs for a specific session, you\
              \ can use the <a href=\"https://docs.aws.amazon.com/mediatailor/latest/ug/debug-log-mode.html\"\
              >debug log mode</a>.</p> <p>Valid values: <code>0</code> - <code>100</code>\
              \ </p>"
        PlaybackConfigurationName:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The name of the playback configuration.
      required:
      - PercentEnabled
      - PlaybackConfigurationName
      title: ConfigureLogsForPlaybackConfigurationRequest
      type: object
    RequestOutputs:
      description: An object that represents an object in the CreateChannel request.
      items:
        $ref: '#/components/schemas/RequestOutputItem'
      type: array
    PlaybackMode:
      enum:
      - LOOP
      - LINEAR
      title: PlaybackMode
      type: string
    Tier:
      enum:
      - BASIC
      - STANDARD
      title: Tier
      type: string
    CreateChannelRequest:
      example:
        FillerSlate:
          VodSourceName: ""
          SourceLocationName: ""
        Tier: ""
        Outputs: ""
        PlaybackMode: ""
        Tags: ""
      properties:
        FillerSlate:
          $ref: '#/components/schemas/UpdateChannelResponse_FillerSlate'
        Outputs:
          allOf:
          - $ref: '#/components/schemas/RequestOutputs'
          - description: The channel's output properties.
        PlaybackMode:
          allOf:
          - $ref: '#/components/schemas/PlaybackMode'
          - description: "<p>The type of playback mode to use for this channel.</p>\
              \ <p> <code>LINEAR</code> - The programs in the schedule play once back-to-back\
              \ in the schedule.</p> <p> <code>LOOP</code> - The programs in the schedule\
              \ play back-to-back in an endless loop. When the last program in the\
              \ schedule stops playing, playback loops back to the first program in\
              \ the schedule.</p>"
        Tags:
          allOf:
          - $ref: '#/components/schemas/__mapOf__string'
          - description: "The tags to assign to the channel. Tags are key-value pairs\
              \ that you can associate with Amazon resources to help with organization,\
              \ access control, and cost tracking. For more information, see <a href=\"\
              https://docs.aws.amazon.com/mediatailor/latest/ug/tagging.html\">Tagging\
              \ AWS Elemental MediaTailor Resources</a>."
            xml:
              name: tags
        Tier:
          allOf:
          - $ref: '#/components/schemas/Tier'
          - description: The tier of the channel.
      required:
      - Outputs
      - PlaybackMode
      title: CreateChannelRequest
      type: object
    HttpPackageConfigurations:
      description: The VOD source's HTTP package configuration settings.
      items:
        $ref: '#/components/schemas/HttpPackageConfiguration'
      type: array
    CreateLiveSourceRequest:
      example:
        HttpPackageConfigurations: ""
        Tags: ""
      properties:
        HttpPackageConfigurations:
          allOf:
          - $ref: '#/components/schemas/HttpPackageConfigurations'
          - description: A list of HTTP package configuration parameters for this
              live source.
        Tags:
          allOf:
          - $ref: '#/components/schemas/__mapOf__string'
          - description: "The tags to assign to the live source. Tags are key-value\
              \ pairs that you can associate with Amazon resources to help with organization,\
              \ access control, and cost tracking. For more information, see <a href=\"\
              https://docs.aws.amazon.com/mediatailor/latest/ug/tagging.html\">Tagging\
              \ AWS Elemental MediaTailor Resources</a>."
            xml:
              name: tags
      required:
      - HttpPackageConfigurations
      title: CreateLiveSourceRequest
      type: object
    PrefetchConsumption:
      description: A complex type that contains settings that determine how and when
        that MediaTailor places prefetched ads into upcoming ad breaks.
      properties:
        AvailMatchingCriteria:
          allOf:
          - $ref: '#/components/schemas/__listOfAvailMatchingCriteria'
          - description: "If you only want MediaTailor to insert prefetched ads into\
              \ avails (ad breaks) that match specific dynamic variables, such as\
              \ <code>scte.event_id</code>, set the avail matching criteria."
          title: AvailMatchingCriteria
        EndTime:
          allOf:
          - $ref: '#/components/schemas/__timestampUnix'
          - description: "The time when MediaTailor no longer considers the prefetched\
              \ ads for use in an ad break. MediaTailor automatically deletes prefetch\
              \ schedules no less than seven days after the end time. If you'd like\
              \ to manually delete the prefetch schedule, you can call <code>DeletePrefetchSchedule</code>."
          title: EndTime
        StartTime:
          allOf:
          - $ref: '#/components/schemas/__timestampUnix'
          - description: "The time when prefetched ads are considered for use in an\
              \ ad break. If you don't specify <code>StartTime</code>, the prefetched\
              \ ads are available after MediaTailor retrives them from the ad decision\
              \ server."
          title: StartTime
      required:
      - EndTime
      title: PrefetchConsumption
      type: object
    PrefetchRetrieval:
      description: "A complex type that contains settings governing when MediaTailor\
        \ prefetches ads, and which dynamic variables that MediaTailor includes in\
        \ the request to the ad decision server."
      properties:
        DynamicVariables:
          allOf:
          - $ref: '#/components/schemas/__mapOf__string'
          - description: "<p>The dynamic variables to use for substitution during\
              \ prefetch requests to the ad decision server (ADS).</p> <p>You initially\
              \ configure <a href=\"https://docs.aws.amazon.com/mediatailor/latest/ug/variables.html\"\
              >dynamic variables</a> for the ADS URL when you set up your playback\
              \ configuration. When you specify <code>DynamicVariables</code> for\
              \ prefetch retrieval, MediaTailor includes the dynamic variables in\
              \ the request to the ADS.</p>"
          title: DynamicVariables
        EndTime:
          allOf:
          - $ref: '#/components/schemas/__timestampUnix'
          - description: The time when prefetch retrieval ends for the ad break. Prefetching
              will be attempted for manifest requests that occur at or before this
              time.
          title: EndTime
        StartTime:
          allOf:
          - $ref: '#/components/schemas/__timestampUnix'
          - description: "The time when prefetch retrievals can start for this break.\
              \ Ad prefetching will be attempted for manifest requests that occur\
              \ at or after this time. Defaults to the current time. If not specified,\
              \ the prefetch retrieval starts as soon as possible."
          title: StartTime
      required:
      - EndTime
      title: PrefetchRetrieval
      type: object
    CreatePrefetchScheduleRequest:
      example:
        Consumption:
          AvailMatchingCriteria: ""
          EndTime: ""
          StartTime: ""
        Retrieval:
          EndTime: ""
          StartTime: ""
          DynamicVariables: ""
        StreamId: ""
      properties:
        Consumption:
          $ref: '#/components/schemas/CreatePrefetchScheduleResponse_Consumption'
        Retrieval:
          $ref: '#/components/schemas/CreatePrefetchScheduleResponse_Retrieval'
        StreamId:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: "An optional stream identifier that MediaTailor uses to prefetch\
              \ ads for multiple streams that use the same playback configuration.\
              \ If <code>StreamId</code> is specified, MediaTailor returns all of\
              \ the prefetch schedules with an exact match on <code>StreamId</code>.\
              \ If not specified, MediaTailor returns all of the prefetch schedules\
              \ for the playback configuration, regardless of <code>StreamId</code>."
      required:
      - Consumption
      - Retrieval
      title: CreatePrefetchScheduleRequest
      type: object
    __listOfAdBreak:
      items:
        $ref: '#/components/schemas/AdBreak'
      type: array
    ScheduleConfiguration:
      description: Schedule configuration parameters. A channel must be stopped before
        changes can be made to the schedule.
      properties:
        ClipRange:
          $ref: '#/components/schemas/UpdateProgram_request_ScheduleConfiguration_ClipRange'
        Transition:
          $ref: '#/components/schemas/CreateProgram_request_ScheduleConfiguration_Transition'
      required:
      - Transition
      title: ScheduleConfiguration
      type: object
    CreateProgramRequest:
      example:
        VodSourceName: ""
        LiveSourceName: ""
        ScheduleConfiguration:
          Transition:
            RelativeProgram: ""
            Type: ""
            RelativePosition: ""
            ScheduledStartTimeMillis: ""
            DurationMillis: ""
          ClipRange:
            EndOffsetMillis: ""
        SourceLocationName: ""
        AdBreaks: ""
      properties:
        AdBreaks:
          allOf:
          - $ref: '#/components/schemas/__listOfAdBreak'
          - description: The ad break configuration settings.
        LiveSourceName:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The name of the LiveSource for this Program.
        ScheduleConfiguration:
          $ref: '#/components/schemas/CreateProgramRequest_ScheduleConfiguration'
        SourceLocationName:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The name of the source location.
        VodSourceName:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The name that's used to refer to a VOD source.
      required:
      - ScheduleConfiguration
      - SourceLocationName
      title: CreateProgramRequest
      type: object
    DefaultSegmentDeliveryConfiguration:
      description: "The optional configuration for a server that serves segments.\
        \ Use this if you want the segment delivery server to be different from the\
        \ source location server. For example, you can configure your source location\
        \ server to be an origination server, such as MediaPackage, and the segment\
        \ delivery server to be a content delivery network (CDN), such as CloudFront.\
        \ If you don't specify a segment delivery server, then the source location\
        \ server is used."
      properties:
        BaseUrl:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: "The hostname of the server that will be used to serve segments.\
              \ This string must include the protocol, such as <b>https://</b>."
          title: BaseUrl
      title: DefaultSegmentDeliveryConfiguration
      type: object
    HttpConfiguration:
      description: The HTTP configuration for the source location.
      properties:
        BaseUrl:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: "The base URL for the source location host server. This string\
              \ must include the protocol, such as <b>https://</b>."
          title: BaseUrl
      required:
      - BaseUrl
      title: HttpConfiguration
      type: object
    __listOfSegmentDeliveryConfiguration:
      items:
        $ref: '#/components/schemas/SegmentDeliveryConfiguration'
      type: array
    CreateSourceLocationRequest:
      example:
        DefaultSegmentDeliveryConfiguration:
          BaseUrl: ""
        SegmentDeliveryConfigurations: ""
        HttpConfiguration:
          BaseUrl: ""
        AccessConfiguration:
          SecretsManagerAccessTokenConfiguration:
            SecretArn: ""
            HeaderName: ""
            SecretStringKey: ""
          AccessType: ""
        Tags: ""
      properties:
        AccessConfiguration:
          $ref: '#/components/schemas/CreateSourceLocationResponse_AccessConfiguration'
        DefaultSegmentDeliveryConfiguration:
          $ref: '#/components/schemas/CreateSourceLocationResponse_DefaultSegmentDeliveryConfiguration'
        HttpConfiguration:
          $ref: '#/components/schemas/CreateSourceLocationResponse_HttpConfiguration'
        SegmentDeliveryConfigurations:
          allOf:
          - $ref: '#/components/schemas/__listOfSegmentDeliveryConfiguration'
          - description: A list of the segment delivery configurations associated
              with this resource.
        Tags:
          allOf:
          - $ref: '#/components/schemas/__mapOf__string'
          - description: "The tags to assign to the source location. Tags are key-value\
              \ pairs that you can associate with Amazon resources to help with organization,\
              \ access control, and cost tracking. For more information, see <a href=\"\
              https://docs.aws.amazon.com/mediatailor/latest/ug/tagging.html\">Tagging\
              \ AWS Elemental MediaTailor Resources</a>."
            xml:
              name: tags
      required:
      - HttpConfiguration
      title: CreateSourceLocationRequest
      type: object
    CreateVodSourceRequest:
      example:
        HttpPackageConfigurations: ""
        Tags: ""
      properties:
        HttpPackageConfigurations:
          allOf:
          - $ref: '#/components/schemas/HttpPackageConfigurations'
          - description: A list of HTTP package configuration parameters for this
              VOD source.
        Tags:
          allOf:
          - $ref: '#/components/schemas/__mapOf__string'
          - description: "The tags to assign to the VOD source. Tags are key-value\
              \ pairs that you can associate with Amazon resources to help with organization,\
              \ access control, and cost tracking. For more information, see <a href=\"\
              https://docs.aws.amazon.com/mediatailor/latest/ug/tagging.html\">Tagging\
              \ AWS Elemental MediaTailor Resources</a>."
            xml:
              name: tags
      required:
      - HttpPackageConfigurations
      title: CreateVodSourceRequest
      type: object
    DashConfiguration:
      description: The configuration for DASH content.
      properties:
        ManifestEndpointPrefix:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The URL generated by MediaTailor to initiate a playback session.
              The session uses server-side reporting. This setting is ignored in PUT
              operations.
          title: ManifestEndpointPrefix
        MpdLocation:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: "The setting that controls whether MediaTailor includes the\
              \ Location tag in DASH manifests. MediaTailor populates the Location\
              \ tag with the URL for manifest update requests, to be used by players\
              \ that don't support sticky redirects. Disable this if you have CDN\
              \ routing rules set up for accessing MediaTailor manifests, and you\
              \ are either using client-side reporting or your players support sticky\
              \ HTTP redirects. Valid values are <code>DISABLED</code> and <code>EMT_DEFAULT</code>.\
              \ The <code>EMT_DEFAULT</code> setting enables the inclusion of the\
              \ tag and is the default value."
          title: MpdLocation
        OriginManifestType:
          allOf:
          - $ref: '#/components/schemas/OriginManifestType'
          - description: "The setting that controls whether MediaTailor handles manifests\
              \ from the origin server as multi-period manifests or single-period\
              \ manifests. If your origin server produces single-period manifests,\
              \ set this to <code>SINGLE_PERIOD</code>. The default setting is <code>MULTI_PERIOD</code>.\
              \ For multi-period manifests, omit this setting or set it to <code>MULTI_PERIOD</code>."
          title: OriginManifestType
      title: DashConfiguration
      type: object
    DashConfigurationForPut:
      description: The configuration for DASH PUT operations.
      properties:
        MpdLocation:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: "The setting that controls whether MediaTailor includes the\
              \ Location tag in DASH manifests. MediaTailor populates the Location\
              \ tag with the URL for manifest update requests, to be used by players\
              \ that don't support sticky redirects. Disable this if you have CDN\
              \ routing rules set up for accessing MediaTailor manifests, and you\
              \ are either using client-side reporting or your players support sticky\
              \ HTTP redirects. Valid values are <code>DISABLED</code> and <code>EMT_DEFAULT</code>.\
              \ The <code>EMT_DEFAULT</code> setting enables the inclusion of the\
              \ tag and is the default value."
          title: MpdLocation
        OriginManifestType:
          allOf:
          - $ref: '#/components/schemas/OriginManifestType'
          - description: "The setting that controls whether MediaTailor handles manifests\
              \ from the origin server as multi-period manifests or single-period\
              \ manifests. If your origin server produces single-period manifests,\
              \ set this to <code>SINGLE_PERIOD</code>. The default setting is <code>MULTI_PERIOD</code>.\
              \ For multi-period manifests, omit this setting or set it to <code>MULTI_PERIOD</code>."
          title: OriginManifestType
      title: DashConfigurationForPut
      type: object
    DashPlaylistSettings:
      description: Dash manifest configuration parameters.
      properties:
        ManifestWindowSeconds:
          allOf:
          - $ref: '#/components/schemas/__integer'
          - description: "The total duration (in seconds) of each manifest. Minimum\
              \ value: <code>30</code> seconds. Maximum value: <code>3600</code> seconds."
          title: ManifestWindowSeconds
        MinBufferTimeSeconds:
          allOf:
          - $ref: '#/components/schemas/__integer'
          - description: "Minimum amount of content (measured in seconds) that a player\
              \ must keep available in the buffer. Minimum value: <code>2</code> seconds.\
              \ Maximum value: <code>60</code> seconds."
          title: MinBufferTimeSeconds
        MinUpdatePeriodSeconds:
          allOf:
          - $ref: '#/components/schemas/__integer'
          - description: "Minimum amount of time (in seconds) that the player should\
              \ wait before requesting updates to the manifest. Minimum value: <code>2</code>\
              \ seconds. Maximum value: <code>60</code> seconds."
          title: MinUpdatePeriodSeconds
        SuggestedPresentationDelaySeconds:
          allOf:
          - $ref: '#/components/schemas/__integer'
          - description: "Amount of time (in seconds) that the player should be from\
              \ the live point at the end of the manifest. Minimum value: <code>2</code>\
              \ seconds. Maximum value: <code>60</code> seconds."
          title: SuggestedPresentationDelaySeconds
      title: DashPlaylistSettings
      type: object
    DeleteChannelPolicyRequest:
      properties: {}
      title: DeleteChannelPolicyRequest
      type: object
    DeleteChannelRequest:
      properties: {}
      title: DeleteChannelRequest
      type: object
    DeleteLiveSourceRequest:
      properties: {}
      title: DeleteLiveSourceRequest
      type: object
    DeletePlaybackConfigurationRequest:
      properties: {}
      title: DeletePlaybackConfigurationRequest
      type: object
    DeletePrefetchScheduleRequest:
      properties: {}
      title: DeletePrefetchScheduleRequest
      type: object
    DeleteProgramRequest:
      properties: {}
      title: DeleteProgramRequest
      type: object
    DeleteSourceLocationRequest:
      properties: {}
      title: DeleteSourceLocationRequest
      type: object
    DeleteVodSourceRequest:
      properties: {}
      title: DeleteVodSourceRequest
      type: object
    DescribeChannelRequest:
      properties: {}
      title: DescribeChannelRequest
      type: object
    DescribeLiveSourceRequest:
      properties: {}
      title: DescribeLiveSourceRequest
      type: object
    DescribeProgramRequest:
      properties: {}
      title: DescribeProgramRequest
      type: object
    Long:
      type: integer
    DescribeSourceLocationRequest:
      properties: {}
      title: DescribeSourceLocationRequest
      type: object
    DescribeVodSourceRequest:
      properties: {}
      title: DescribeVodSourceRequest
      type: object
    GetChannelPolicyRequest:
      properties: {}
      title: GetChannelPolicyRequest
      type: object
    MaxResults:
      maximum: 100
      minimum: 1
      type: integer
    GetChannelScheduleRequest:
      properties: {}
      title: GetChannelScheduleRequest
      type: object
    __listOfScheduleEntry:
      items:
        $ref: '#/components/schemas/ScheduleEntry'
      type: array
    GetPlaybackConfigurationRequest:
      properties: {}
      title: GetPlaybackConfigurationRequest
      type: object
    HlsConfiguration:
      description: The configuration for HLS content.
      properties:
        ManifestEndpointPrefix:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The URL that is used to initiate a playback session for devices
              that support Apple HLS. The session uses server-side reporting.
          title: ManifestEndpointPrefix
      title: HlsConfiguration
      type: object
    LivePreRollConfiguration:
      description: The configuration for pre-roll ad insertion.
      properties:
        AdDecisionServerUrl:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: "The URL for the ad decision server (ADS) for pre-roll ads.\
              \ This includes the specification of static parameters and placeholders\
              \ for dynamic parameters. AWS Elemental MediaTailor substitutes player-specific\
              \ and session-specific parameters as needed when calling the ADS. Alternately,\
              \ for testing, you can provide a static VAST URL. The maximum length\
              \ is 25,000 characters."
          title: AdDecisionServerUrl
        MaxDurationSeconds:
          allOf:
          - $ref: '#/components/schemas/__integer'
          - description: "The maximum allowed duration for the pre-roll ad avail.\
              \ AWS Elemental MediaTailor won't play pre-roll ads to exceed this duration,\
              \ regardless of the total duration of ads that the ADS returns."
          title: MaxDurationSeconds
      title: LivePreRollConfiguration
      type: object
    LogConfiguration:
      description: Returns Amazon CloudWatch log settings for a playback configuration.
      properties:
        PercentEnabled:
          allOf:
          - $ref: '#/components/schemas/__integer'
          - description: "<p>The percentage of session logs that MediaTailor sends\
              \ to your Cloudwatch Logs account. For example, if your playback configuration\
              \ has 1000 sessions and <code>percentEnabled</code> is set to <code>60</code>,\
              \ MediaTailor sends logs for 600 of the sessions to CloudWatch Logs.\
              \ MediaTailor decides at random which of the playback configuration\
              \ sessions to send logs for. If you want to view logs for a specific\
              \ session, you can use the <a href=\"https://docs.aws.amazon.com/mediatailor/latest/ug/debug-log-mode.html\"\
              >debug log mode</a>.</p> <p>Valid values: <code>0</code> - <code>100</code>\
              \ </p>"
          title: PercentEnabled
      required:
      - PercentEnabled
      title: LogConfiguration
      type: object
    ManifestProcessingRules:
      description: The configuration for manifest processing rules. Manifest processing
        rules enable customization of the personalized manifests created by MediaTailor.
      properties:
        AdMarkerPassthrough:
          $ref: '#/components/schemas/PutPlaybackConfiguration_request_ManifestProcessingRules_AdMarkerPassthrough'
      title: ManifestProcessingRules
      type: object
    __integerMin1:
      minimum: 1
      type: integer
    GetPrefetchScheduleRequest:
      properties: {}
      title: GetPrefetchScheduleRequest
      type: object
    adMarkupTypes:
      items:
        $ref: '#/components/schemas/AdMarkupType'
      type: array
    HlsPlaylistSettings:
      description: HLS playlist configuration parameters.
      properties:
        AdMarkupType:
          allOf:
          - $ref: '#/components/schemas/adMarkupTypes'
          - description: Determines the type of SCTE 35 tags to use in ad markup.
              Specify <code>DATERANGE</code> to use <code>DATERANGE</code> tags (for
              live or VOD content). Specify <code>SCTE35_ENHANCED</code> to use <code>EXT-X-CUE-OUT</code>
              and <code>EXT-X-CUE-IN</code> tags (for VOD content only).
          title: AdMarkupType
        ManifestWindowSeconds:
          allOf:
          - $ref: '#/components/schemas/__integer'
          - description: "The total duration (in seconds) of each manifest. Minimum\
              \ value: <code>30</code> seconds. Maximum value: <code>3600</code> seconds."
          title: ManifestWindowSeconds
      title: HlsPlaylistSettings
      type: object
    Type:
      enum:
      - DASH
      - HLS
      title: Type
      type: string
    Integer:
      type: integer
    String:
      type: string
    ListAlertsRequest:
      properties: {}
      title: ListAlertsRequest
      type: object
    __listOfAlert:
      items:
        $ref: '#/components/schemas/Alert'
      type: array
    ListChannelsRequest:
      properties: {}
      title: ListChannelsRequest
      type: object
    __listOfChannel:
      items:
        $ref: '#/components/schemas/Channel'
      type: array
    ListLiveSourcesRequest:
      properties: {}
      title: ListLiveSourcesRequest
      type: object
    __listOfLiveSource:
      items:
        $ref: '#/components/schemas/LiveSource'
      type: array
    ListPlaybackConfigurationsRequest:
      properties: {}
      title: ListPlaybackConfigurationsRequest
      type: object
    __listOfPlaybackConfiguration:
      items:
        $ref: '#/components/schemas/PlaybackConfiguration'
      type: array
    __integerMin1Max100:
      maximum: 100
      minimum: 1
      type: integer
    ListPrefetchSchedulesRequest:
      example:
        StreamId: ""
        NextToken: ""
        MaxResults: ""
      properties:
        MaxResults:
          allOf:
          - $ref: '#/components/schemas/__integerMin1Max100'
          - description: "The maximum number of prefetch schedules that you want MediaTailor\
              \ to return in response to the current request. If there are more than\
              \ <code>MaxResults</code> prefetch schedules, use the value of <code>NextToken</code>\
              \ in the response to get the next page of results."
        NextToken:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: "<p>(Optional) If the playback configuration has more than\
              \ <code>MaxResults</code> prefetch schedules, use <code>NextToken</code>\
              \ to get the second and subsequent pages of results.</p> <p> For the\
              \ first <code>ListPrefetchSchedulesRequest</code> request, omit this\
              \ value.</p> <p> For the second and subsequent requests, get the value\
              \ of <code>NextToken</code> from the previous response and specify that\
              \ value for <code>NextToken</code> in the request.</p> <p> If the previous\
              \ response didn't include a <code>NextToken</code> element, there are\
              \ no more prefetch schedules to get.</p>"
        StreamId:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: An optional filtering parameter whereby MediaTailor filters
              the prefetch schedules to include only specific streams.
      title: ListPrefetchSchedulesRequest
      type: object
    __listOfPrefetchSchedule:
      items:
        $ref: '#/components/schemas/PrefetchSchedule'
      type: array
    ListSourceLocationsRequest:
      properties: {}
      title: ListSourceLocationsRequest
      type: object
    __listOfSourceLocation:
      items:
        $ref: '#/components/schemas/SourceLocation'
      type: array
    ListTagsForResourceRequest:
      properties: {}
      title: ListTagsForResourceRequest
      type: object
    ListVodSourcesRequest:
      properties: {}
      title: ListVodSourcesRequest
      type: object
    __listOfVodSource:
      items:
        $ref: '#/components/schemas/VodSource'
      type: array
    LiveSource:
      description: Live source configuration parameters.
      properties:
        Arn:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The ARN for the live source.
          title: Arn
        CreationTime:
          allOf:
          - $ref: '#/components/schemas/__timestampUnix'
          - description: The timestamp that indicates when the live source was created.
          title: CreationTime
        HttpPackageConfigurations:
          allOf:
          - $ref: '#/components/schemas/HttpPackageConfigurations'
          - description: The HTTP package configurations for the live source.
          title: HttpPackageConfigurations
        LastModifiedTime:
          allOf:
          - $ref: '#/components/schemas/__timestampUnix'
          - description: The timestamp that indicates when the live source was last
              modified.
          title: LastModifiedTime
        LiveSourceName:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The name that's used to refer to a live source.
          title: LiveSourceName
        SourceLocationName:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The name of the source location.
          title: SourceLocationName
        Tags:
          allOf:
          - $ref: '#/components/schemas/__mapOf__string'
          - description: "The tags assigned to the live source. Tags are key-value\
              \ pairs that you can associate with Amazon resources to help with organization,\
              \ access control, and cost tracking. For more information, see <a href=\"\
              https://docs.aws.amazon.com/mediatailor/latest/ug/tagging.html\">Tagging\
              \ AWS Elemental MediaTailor Resources</a>."
            xml:
              name: tags
          title: Tags
      required:
      - Arn
      - HttpPackageConfigurations
      - LiveSourceName
      - SourceLocationName
      title: LiveSource
      type: object
    PlaybackConfiguration:
      description: "A playback configuration. For information about MediaTailor configurations,\
        \ see <a href=\"https://docs.aws.amazon.com/mediatailor/latest/ug/configurations.html\"\
        >Working with configurations in AWS Elemental MediaTailor</a>."
      properties:
        AdDecisionServerUrl:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: "The URL for the ad decision server (ADS). This includes\
              \ the specification of static parameters and placeholders for dynamic\
              \ parameters. AWS Elemental MediaTailor substitutes player-specific\
              \ and session-specific parameters as needed when calling the ADS. Alternately,\
              \ for testing you can provide a static VAST URL. The maximum length\
              \ is 25,000 characters."
          title: AdDecisionServerUrl
        AvailSuppression:
          $ref: '#/components/schemas/GetPlaybackConfigurationResponse_AvailSuppression'
        Bumper:
          $ref: '#/components/schemas/GetPlaybackConfigurationResponse_Bumper'
        CdnConfiguration:
          $ref: '#/components/schemas/GetPlaybackConfigurationResponse_CdnConfiguration'
        ConfigurationAliases:
          allOf:
          - $ref: '#/components/schemas/ConfigurationAliasesResponse'
          - description: "The player parameters and aliases used as dynamic variables\
              \ during session initialization. For more information, see <a href=\"\
              https://docs.aws.amazon.com/mediatailor/latest/ug/variables-domain.html\"\
              >Domain Variables</a>."
          title: ConfigurationAliases
        DashConfiguration:
          $ref: '#/components/schemas/PlaybackConfiguration_DashConfiguration'
        HlsConfiguration:
          $ref: '#/components/schemas/GetPlaybackConfigurationResponse_HlsConfiguration'
        LivePreRollConfiguration:
          $ref: '#/components/schemas/GetPlaybackConfigurationResponse_LivePreRollConfiguration'
        LogConfiguration:
          $ref: '#/components/schemas/GetPlaybackConfigurationResponse_LogConfiguration'
        ManifestProcessingRules:
          $ref: '#/components/schemas/GetPlaybackConfigurationResponse_ManifestProcessingRules'
        Name:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The identifier for the playback configuration.
          title: Name
        PersonalizationThresholdSeconds:
          allOf:
          - $ref: '#/components/schemas/__integerMin1'
          - description: "Defines the maximum duration of underfilled ad time (in\
              \ seconds) allowed in an ad break. If the duration of underfilled ad\
              \ time exceeds the personalization threshold, then the personalization\
              \ of the ad break is abandoned and the underlying content is shown.\
              \ This feature applies to <i>ad replacement</i> in live and VOD streams,\
              \ rather than ad insertion, because it relies on an underlying content\
              \ stream. For more information about ad break behavior, including ad\
              \ replacement and insertion, see <a href=\"https://docs.aws.amazon.com/mediatailor/latest/ug/ad-behavior.html\"\
              >Ad Behavior in AWS Elemental MediaTailor</a>."
          title: PersonalizationThresholdSeconds
        PlaybackConfigurationArn:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The Amazon Resource Name (ARN) for the playback configuration.
          title: PlaybackConfigurationArn
        PlaybackEndpointPrefix:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The URL that the player accesses to get a manifest from AWS
              Elemental MediaTailor.
          title: PlaybackEndpointPrefix
        SessionInitializationEndpointPrefix:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The URL that the player uses to initialize a session that
              uses client-side reporting.
          title: SessionInitializationEndpointPrefix
        SlateAdUrl:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: "The URL for a video asset to transcode and use to fill in\
              \ time that's not used by ads. AWS Elemental MediaTailor shows the slate\
              \ to fill in gaps in media content. Configuring the slate is optional\
              \ for non-VPAID playback configurations. For VPAID, the slate is required\
              \ because MediaTailor provides it in the slots designated for dynamic\
              \ ad content. The slate must be a high-quality asset that contains both\
              \ audio and video."
          title: SlateAdUrl
        Tags:
          allOf:
          - $ref: '#/components/schemas/__mapOf__string'
          - description: "The tags to assign to the playback configuration. Tags are\
              \ key-value pairs that you can associate with Amazon resources to help\
              \ with organization, access control, and cost tracking. For more information,\
              \ see <a href=\"https://docs.aws.amazon.com/mediatailor/latest/ug/tagging.html\"\
              >Tagging AWS Elemental MediaTailor Resources</a>."
            xml:
              name: tags
          title: Tags
        TranscodeProfileName:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The name that is used to associate this playback configuration
              with a custom transcode profile. This overrides the dynamic transcoding
              defaults of MediaTailor. Use this only if you have already set up custom
              profiles with the help of AWS Support.
          title: TranscodeProfileName
        VideoContentSourceUrl:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: "The URL prefix for the parent manifest for the stream, minus\
              \ the asset ID. The maximum length is 512 characters."
          title: VideoContentSourceUrl
      title: PlaybackConfiguration
      type: object
    PrefetchSchedule:
      description: "A prefetch schedule allows you to tell MediaTailor to fetch and\
        \ prepare certain ads before an ad break happens. For more information about\
        \ ad prefetching, see <a href=\"https://docs.aws.amazon.com/mediatailor/latest/ug/prefetching-ads.html\"\
        >Using ad prefetching</a> in the <i>MediaTailor User Guide</i>."
      properties:
        Arn:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The Amazon Resource Name (ARN) of the prefetch schedule.
          title: Arn
        Consumption:
          $ref: '#/components/schemas/GetPrefetchScheduleResponse_Consumption'
        Name:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The name of the prefetch schedule. The name must be unique
              among all prefetch schedules that are associated with the specified
              playback configuration.
          title: Name
        PlaybackConfigurationName:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The name of the playback configuration to create the prefetch
              schedule for.
          title: PlaybackConfigurationName
        Retrieval:
          $ref: '#/components/schemas/GetPrefetchScheduleResponse_Retrieval'
        StreamId:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: An optional stream identifier that you can specify in order
              to prefetch for multiple streams that use the same playback configuration.
          title: StreamId
      required:
      - Arn
      - Consumption
      - Name
      - PlaybackConfigurationName
      - Retrieval
      title: PrefetchSchedule
      type: object
    PutChannelPolicyRequest:
      example:
        Policy: ""
      properties:
        Policy:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: Adds an IAM role that determines the permissions of your
              channel.
      required:
      - Policy
      title: PutChannelPolicyRequest
      type: object
    PutPlaybackConfigurationRequest:
      example:
        Bumper:
          StartUrl: ""
          EndUrl: ""
        DashConfiguration:
          MpdLocation: ""
          OriginManifestType: ""
        CdnConfiguration:
          AdSegmentUrlPrefix: ""
          ContentSegmentUrlPrefix: ""
        ManifestProcessingRules:
          AdMarkerPassthrough:
            Enabled: ""
        PersonalizationThresholdSeconds: ""
        LivePreRollConfiguration:
          AdDecisionServerUrl: ""
          MaxDurationSeconds: ""
        VideoContentSourceUrl: ""
        Name: ""
        TranscodeProfileName: ""
        ConfigurationAliases: ""
        AdDecisionServerUrl: ""
        SlateAdUrl: ""
        AvailSuppression:
          Mode: ""
          Value: ""
          FillPolicy: ""
        Tags: ""
      properties:
        AdDecisionServerUrl:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: "The URL for the ad decision server (ADS). This includes\
              \ the specification of static parameters and placeholders for dynamic\
              \ parameters. AWS Elemental MediaTailor substitutes player-specific\
              \ and session-specific parameters as needed when calling the ADS. Alternately,\
              \ for testing you can provide a static VAST URL. The maximum length\
              \ is 25,000 characters."
        AvailSuppression:
          $ref: '#/components/schemas/GetPlaybackConfigurationResponse_AvailSuppression'
        Bumper:
          $ref: '#/components/schemas/GetPlaybackConfigurationResponse_Bumper'
        CdnConfiguration:
          $ref: '#/components/schemas/GetPlaybackConfigurationResponse_CdnConfiguration'
        ConfigurationAliases:
          allOf:
          - $ref: '#/components/schemas/ConfigurationAliasesRequest'
          - description: "The player parameters and aliases used as dynamic variables\
              \ during session initialization. For more information, see <a href=\"\
              https://docs.aws.amazon.com/mediatailor/latest/ug/variables-domain.html\"\
              >Domain Variables</a>."
        DashConfiguration:
          $ref: '#/components/schemas/PutPlaybackConfigurationRequest_DashConfiguration'
        LivePreRollConfiguration:
          $ref: '#/components/schemas/GetPlaybackConfigurationResponse_LivePreRollConfiguration'
        ManifestProcessingRules:
          $ref: '#/components/schemas/GetPlaybackConfigurationResponse_ManifestProcessingRules'
        Name:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The identifier for the playback configuration.
        PersonalizationThresholdSeconds:
          allOf:
          - $ref: '#/components/schemas/__integerMin1'
          - description: "Defines the maximum duration of underfilled ad time (in\
              \ seconds) allowed in an ad break. If the duration of underfilled ad\
              \ time exceeds the personalization threshold, then the personalization\
              \ of the ad break is abandoned and the underlying content is shown.\
              \ This feature applies to <i>ad replacement</i> in live and VOD streams,\
              \ rather than ad insertion, because it relies on an underlying content\
              \ stream. For more information about ad break behavior, including ad\
              \ replacement and insertion, see <a href=\"https://docs.aws.amazon.com/mediatailor/latest/ug/ad-behavior.html\"\
              >Ad Behavior in AWS Elemental MediaTailor</a>."
        SlateAdUrl:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: "The URL for a high-quality video asset to transcode and\
              \ use to fill in time that's not used by ads. AWS Elemental MediaTailor\
              \ shows the slate to fill in gaps in media content. Configuring the\
              \ slate is optional for non-VPAID configurations. For VPAID, the slate\
              \ is required because MediaTailor provides it in the slots that are\
              \ designated for dynamic ad content. The slate must be a high-quality\
              \ asset that contains both audio and video."
        Tags:
          allOf:
          - $ref: '#/components/schemas/__mapOf__string'
          - description: "The tags to assign to the playback configuration. Tags are\
              \ key-value pairs that you can associate with Amazon resources to help\
              \ with organization, access control, and cost tracking. For more information,\
              \ see <a href=\"https://docs.aws.amazon.com/mediatailor/latest/ug/tagging.html\"\
              >Tagging AWS Elemental MediaTailor Resources</a>."
            xml:
              name: tags
        TranscodeProfileName:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The name that is used to associate this playback configuration
              with a custom transcode profile. This overrides the dynamic transcoding
              defaults of MediaTailor. Use this only if you have already set up custom
              profiles with the help of AWS Support.
        VideoContentSourceUrl:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: "The URL prefix for the parent manifest for the stream, minus\
              \ the asset ID. The maximum length is 512 characters."
      required:
      - Name
      title: PutPlaybackConfigurationRequest
      type: object
    RelativePosition:
      enum:
      - BEFORE_PROGRAM
      - AFTER_PROGRAM
      title: RelativePosition
      type: string
    ResponseOutputItem:
      description: The output item response.
      properties:
        DashPlaylistSettings:
          $ref: '#/components/schemas/ResponseOutputItem_DashPlaylistSettings'
        HlsPlaylistSettings:
          $ref: '#/components/schemas/ResponseOutputItem_HlsPlaylistSettings'
        ManifestName:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The name of the manifest for the channel that will appear
              in the channel output's playback URL.
          title: ManifestName
        PlaybackUrl:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The URL used for playback by content players.
          title: PlaybackUrl
        SourceGroup:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: A string used to associate a package configuration source
              group with a channel output.
          title: SourceGroup
      required:
      - ManifestName
      - PlaybackUrl
      - SourceGroup
      title: ResponseOutputItem
      type: object
    ScheduleAdBreak:
      description: The schedule's ad break properties.
      properties:
        ApproximateDurationSeconds:
          allOf:
          - $ref: '#/components/schemas/__long'
          - description: "The approximate duration of the ad break, in seconds."
          title: ApproximateDurationSeconds
        ApproximateStartTime:
          allOf:
          - $ref: '#/components/schemas/__timestampUnix'
          - description: The approximate time that the ad will start playing.
          title: ApproximateStartTime
        SourceLocationName:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The name of the source location containing the VOD source
              used for the ad break.
          title: SourceLocationName
        VodSourceName:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The name of the VOD source used for the ad break.
          title: VodSourceName
      title: ScheduleAdBreak
      type: object
    __listOfScheduleAdBreak:
      items:
        $ref: '#/components/schemas/ScheduleAdBreak'
      type: array
    ScheduleEntryType:
      enum:
      - PROGRAM
      - FILLER_SLATE
      title: ScheduleEntryType
      type: string
    ScheduleEntry:
      description: The properties for a schedule.
      properties:
        ApproximateDurationSeconds:
          allOf:
          - $ref: '#/components/schemas/__long'
          - description: "The approximate duration of this program, in seconds."
          title: ApproximateDurationSeconds
        ApproximateStartTime:
          allOf:
          - $ref: '#/components/schemas/__timestampUnix'
          - description: The approximate time that the program will start playing.
          title: ApproximateStartTime
        Arn:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The ARN of the program.
          title: Arn
        ChannelName:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The name of the channel that uses this schedule.
          title: ChannelName
        LiveSourceName:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The name of the live source used for the program.
          title: LiveSourceName
        ProgramName:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The name of the program.
          title: ProgramName
        ScheduleAdBreaks:
          allOf:
          - $ref: '#/components/schemas/__listOfScheduleAdBreak'
          - description: The schedule's ad break properties.
          title: ScheduleAdBreaks
        ScheduleEntryType:
          allOf:
          - $ref: '#/components/schemas/ScheduleEntryType'
          - description: The type of schedule entry.
          title: ScheduleEntryType
        SourceLocationName:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The name of the source location.
          title: SourceLocationName
        VodSourceName:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The name of the VOD source.
          title: VodSourceName
      required:
      - Arn
      - ChannelName
      - ProgramName
      - SourceLocationName
      title: ScheduleEntry
      type: object
    SegmentationDescriptor:
      description: "<p>The <code>segmentation_descriptor</code> message can contain\
        \ advanced metadata fields, like content identifiers, to convey a wide range\
        \ of information about the ad break. MediaTailor writes the ad metadata in\
        \ the egress manifest as part of the <code>EXT-X-DATERANGE</code> or <code>EventStream</code>\
        \ ad marker's SCTE-35 data.</p> <p> <code>segmentation_descriptor</code> messages\
        \ must be sent with the <code>time_signal</code> message type.</p> <p>See\
        \ the <code>segmentation_descriptor()</code> table of the 2022 SCTE-35 specification\
        \ for more information.</p>"
      properties:
        SegmentNum:
          allOf:
          - $ref: '#/components/schemas/Integer'
          - description: "The segment number to assign to the <code>segmentation_descriptor.segment_num</code>\
              \ message, as defined in section 10.3.3.1 of the 2022 SCTE-35 specification\
              \ Values must be between 0 and 256, inclusive. The default value is\
              \ 0."
          title: SegmentNum
        SegmentationEventId:
          allOf:
          - $ref: '#/components/schemas/Integer'
          - description: "The Event Identifier to assign to the <code>segmentation_descriptor.segmentation_event_id</code>\
              \ message, as defined in section 10.3.3.1 of the 2022 SCTE-35 specification.\
              \ The default value is 1."
          title: SegmentationEventId
        SegmentationTypeId:
          allOf:
          - $ref: '#/components/schemas/Integer'
          - description: "The Type Identifier to assign to the <code>segmentation_descriptor.segmentation_type_id</code>\
              \ message, as defined in section 10.3.3.1 of the 2022 SCTE-35 specification.\
              \ Values must be between 0 and 256, inclusive. The default value is\
              \ 48."
          title: SegmentationTypeId
        SegmentationUpid:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: "The Upid to assign to the <code>segmentation_descriptor.segmentation_upid</code>\
              \ message, as defined in section 10.3.3.1 of the 2022 SCTE-35 specification.\
              \ The value must be a hexadecimal string containing only the characters\
              \ 0 though 9 and A through F. The default value is \"\" (an empty string)."
          title: SegmentationUpid
        SegmentationUpidType:
          allOf:
          - $ref: '#/components/schemas/Integer'
          - description: "The Upid Type to assign to the <code>segmentation_descriptor.segmentation_upid_type</code>\
              \ message, as defined in section 10.3.3.1 of the 2022 SCTE-35 specification.\
              \ Values must be between 0 and 256, inclusive. The default value is\
              \ 14."
          title: SegmentationUpidType
        SegmentsExpected:
          allOf:
          - $ref: '#/components/schemas/Integer'
          - description: "The number of segments expected, which is assigned to the\
              \ <code>segmentation_descriptor.segments_expectedS</code> message, as\
              \ defined in section 10.3.3.1 of the 2022 SCTE-35 specification Values\
              \ must be between 0 and 256, inclusive. The default value is 0."
          title: SegmentsExpected
        SubSegmentNum:
          allOf:
          - $ref: '#/components/schemas/Integer'
          - description: "The sub-segment number to assign to the <code>segmentation_descriptor.sub_segment_num</code>\
              \ message, as defined in section 10.3.3.1 of the 2022 SCTE-35 specification.\
              \ Values must be between 0 and 256, inclusive. The defualt value is\
              \ null."
          title: SubSegmentNum
        SubSegmentsExpected:
          allOf:
          - $ref: '#/components/schemas/Integer'
          - description: "The number of sub-segments expected, which is assigned to\
              \ the <code>segmentation_descriptor.sub_segments_expected</code> message,\
              \ as defined in section 10.3.3.1 of the 2022 SCTE-35 specification.\
              \ Values must be between 0 and 256, inclusive. The default value is\
              \ null."
          title: SubSegmentsExpected
      title: SegmentationDescriptor
      type: object
    SegmentationDescriptorList:
      items:
        $ref: '#/components/schemas/SegmentationDescriptor'
      type: array
    SourceLocation:
      description: "A source location is a container for sources. For more information\
        \ about source locations, see <a href=\"https://docs.aws.amazon.com/mediatailor/latest/ug/channel-assembly-source-locations.html\"\
        >Working with source locations</a> in the <i>MediaTailor User Guide</i>."
      properties:
        AccessConfiguration:
          $ref: '#/components/schemas/DescribeSourceLocationResponse_AccessConfiguration'
        Arn:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The ARN of the SourceLocation.
          title: Arn
        CreationTime:
          allOf:
          - $ref: '#/components/schemas/__timestampUnix'
          - description: The timestamp that indicates when the source location was
              created.
          title: CreationTime
        DefaultSegmentDeliveryConfiguration:
          $ref: '#/components/schemas/SourceLocation_DefaultSegmentDeliveryConfiguration'
        HttpConfiguration:
          $ref: '#/components/schemas/UpdateSourceLocationResponse_HttpConfiguration'
        LastModifiedTime:
          allOf:
          - $ref: '#/components/schemas/__timestampUnix'
          - description: The timestamp that indicates when the source location was
              last modified.
          title: LastModifiedTime
        SegmentDeliveryConfigurations:
          allOf:
          - $ref: '#/components/schemas/__listOfSegmentDeliveryConfiguration'
          - description: The segment delivery configurations for the source location.
          title: SegmentDeliveryConfigurations
        SourceLocationName:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The name of the source location.
          title: SourceLocationName
        Tags:
          allOf:
          - $ref: '#/components/schemas/__mapOf__string'
          - description: "The tags assigned to the source location. Tags are key-value\
              \ pairs that you can associate with Amazon resources to help with organization,\
              \ access control, and cost tracking. For more information, see <a href=\"\
              https://docs.aws.amazon.com/mediatailor/latest/ug/tagging.html\">Tagging\
              \ AWS Elemental MediaTailor Resources</a>."
            xml:
              name: tags
          title: Tags
      required:
      - Arn
      - HttpConfiguration
      - SourceLocationName
      title: SourceLocation
      type: object
    StartChannelRequest:
      properties: {}
      title: StartChannelRequest
      type: object
    StopChannelRequest:
      properties: {}
      title: StopChannelRequest
      type: object
    TagResourceRequest:
      example:
        Tags: ""
      properties:
        Tags:
          allOf:
          - $ref: '#/components/schemas/__mapOf__string'
          - description: "The tags to assign to the resource. Tags are key-value pairs\
              \ that you can associate with Amazon resources to help with organization,\
              \ access control, and cost tracking. For more information, see <a href=\"\
              https://docs.aws.amazon.com/mediatailor/latest/ug/tagging.html\">Tagging\
              \ AWS Elemental MediaTailor Resources</a>."
            xml:
              name: tags
      required:
      - Tags
      title: TagResourceRequest
      type: object
    UntagResourceRequest:
      properties: {}
      title: UntagResourceRequest
      type: object
    UpdateChannelRequest:
      example:
        FillerSlate:
          VodSourceName: ""
          SourceLocationName: ""
        Outputs: ""
      properties:
        FillerSlate:
          $ref: '#/components/schemas/UpdateChannelResponse_FillerSlate'
        Outputs:
          allOf:
          - $ref: '#/components/schemas/RequestOutputs'
          - description: The channel's output properties.
      required:
      - Outputs
      title: UpdateChannelRequest
      type: object
    UpdateLiveSourceRequest:
      example:
        HttpPackageConfigurations: ""
      properties:
        HttpPackageConfigurations:
          allOf:
          - $ref: '#/components/schemas/HttpPackageConfigurations'
          - description: A list of HTTP package configurations for the live source
              on this account.
      required:
      - HttpPackageConfigurations
      title: UpdateLiveSourceRequest
      type: object
    UpdateProgramScheduleConfiguration:
      description: Schedule configuration parameters.
      properties:
        ClipRange:
          $ref: '#/components/schemas/UpdateProgram_request_ScheduleConfiguration_ClipRange'
        Transition:
          $ref: '#/components/schemas/UpdateProgram_request_ScheduleConfiguration_Transition'
      title: UpdateProgramScheduleConfiguration
      type: object
    UpdateProgramRequest:
      example:
        ScheduleConfiguration:
          Transition:
            ScheduledStartTimeMillis: ""
            DurationMillis: ""
          ClipRange:
            EndOffsetMillis: ""
        AdBreaks: ""
      properties:
        AdBreaks:
          allOf:
          - $ref: '#/components/schemas/__listOfAdBreak'
          - description: The ad break configuration settings.
        ScheduleConfiguration:
          $ref: '#/components/schemas/UpdateProgramRequest_ScheduleConfiguration'
      required:
      - ScheduleConfiguration
      title: UpdateProgramRequest
      type: object
    UpdateSourceLocationRequest:
      example:
        DefaultSegmentDeliveryConfiguration:
          BaseUrl: ""
        SegmentDeliveryConfigurations: ""
        HttpConfiguration:
          BaseUrl: ""
        AccessConfiguration:
          SecretsManagerAccessTokenConfiguration:
            SecretArn: ""
            HeaderName: ""
            SecretStringKey: ""
          AccessType: ""
      properties:
        AccessConfiguration:
          $ref: '#/components/schemas/CreateSourceLocationResponse_AccessConfiguration'
        DefaultSegmentDeliveryConfiguration:
          $ref: '#/components/schemas/UpdateSourceLocationResponse_DefaultSegmentDeliveryConfiguration'
        HttpConfiguration:
          $ref: '#/components/schemas/UpdateSourceLocationResponse_HttpConfiguration'
        SegmentDeliveryConfigurations:
          allOf:
          - $ref: '#/components/schemas/__listOfSegmentDeliveryConfiguration'
          - description: A list of the segment delivery configurations associated
              with this resource.
      required:
      - HttpConfiguration
      title: UpdateSourceLocationRequest
      type: object
    UpdateVodSourceRequest:
      properties:
        HttpPackageConfigurations:
          allOf:
          - $ref: '#/components/schemas/HttpPackageConfigurations'
          - description: A list of HTTP package configurations for the VOD source
              on this account.
      required:
      - HttpPackageConfigurations
      title: UpdateVodSourceRequest
      type: object
    VodSource:
      description: VOD source configuration parameters.
      properties:
        Arn:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The ARN for the VOD source.
          title: Arn
        CreationTime:
          allOf:
          - $ref: '#/components/schemas/__timestampUnix'
          - description: The timestamp that indicates when the VOD source was created.
          title: CreationTime
        HttpPackageConfigurations:
          allOf:
          - $ref: '#/components/schemas/HttpPackageConfigurations'
          - description: The HTTP package configurations for the VOD source.
          title: HttpPackageConfigurations
        LastModifiedTime:
          allOf:
          - $ref: '#/components/schemas/__timestampUnix'
          - description: The timestamp that indicates when the VOD source was last
              modified.
          title: LastModifiedTime
        SourceLocationName:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The name of the source location that the VOD source is associated
              with.
          title: SourceLocationName
        Tags:
          allOf:
          - $ref: '#/components/schemas/__mapOf__string'
          - description: "The tags assigned to the VOD source. Tags are key-value\
              \ pairs that you can associate with Amazon resources to help with organization,\
              \ access control, and cost tracking. For more information, see <a href=\"\
              https://docs.aws.amazon.com/mediatailor/latest/ug/tagging.html\">Tagging\
              \ AWS Elemental MediaTailor Resources</a>."
            xml:
              name: tags
          title: Tags
        VodSourceName:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The name of the VOD source.
          title: VodSourceName
      required:
      - Arn
      - HttpPackageConfigurations
      - SourceLocationName
      - VodSourceName
      title: VodSource
      type: object
    ConfigureLogsForChannel_request:
      properties:
        ChannelName:
          description: The name of the channel.
          title: ChannelName
          type: string
        LogTypes:
          description: The types of logs to collect.
          items:
            $ref: '#/components/schemas/LogType'
          title: LogTypes
          type: array
      required:
      - ChannelName
      - LogTypes
      title: ConfigureLogsForChannel_request
      type: object
    ConfigureLogsForPlaybackConfiguration_request:
      properties:
        PercentEnabled:
          description: "<p>The percentage of session logs that MediaTailor sends to\
            \ your Cloudwatch Logs account. For example, if your playback configuration\
            \ has 1000 sessions and percentEnabled is set to <code>60</code>, MediaTailor\
            \ sends logs for 600 of the sessions to CloudWatch Logs. MediaTailor decides\
            \ at random which of the playback configuration sessions to send logs\
            \ for. If you want to view logs for a specific session, you can use the\
            \ <a href=\"https://docs.aws.amazon.com/mediatailor/latest/ug/debug-log-mode.html\"\
            >debug log mode</a>.</p> <p>Valid values: <code>0</code> - <code>100</code>\
            \ </p>"
          title: PercentEnabled
          type: integer
        PlaybackConfigurationName:
          description: The name of the playback configuration.
          title: PlaybackConfigurationName
          type: string
      required:
      - PercentEnabled
      - PlaybackConfigurationName
      title: ConfigureLogsForPlaybackConfiguration_request
      type: object
    UpdateChannel_request_FillerSlate:
      description: Slate VOD source configuration.
      properties:
        SourceLocationName:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The name of the source location where the slate VOD source
              is stored.
          title: SourceLocationName
        VodSourceName:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The slate VOD source name. The VOD source must already exist
              in a source location before it can be used for slate.
          title: VodSourceName
      title: UpdateChannel_request_FillerSlate
      type: object
    UpdateChannel_request:
      properties:
        FillerSlate:
          $ref: '#/components/schemas/UpdateChannel_request_FillerSlate'
        Outputs:
          description: An object that represents an object in the CreateChannel request.
          items:
            $ref: '#/components/schemas/RequestOutputItem'
          title: Outputs
          type: array
      required:
      - Outputs
      title: UpdateChannel_request
      type: object
    CreateChannel_request:
      properties:
        FillerSlate:
          $ref: '#/components/schemas/UpdateChannel_request_FillerSlate'
        Outputs:
          description: An object that represents an object in the CreateChannel request.
          items:
            $ref: '#/components/schemas/RequestOutputItem'
          title: Outputs
          type: array
        PlaybackMode:
          description: "<p>The type of playback mode to use for this channel.</p>\
            \ <p> <code>LINEAR</code> - The programs in the schedule play once back-to-back\
            \ in the schedule.</p> <p> <code>LOOP</code> - The programs in the schedule\
            \ play back-to-back in an endless loop. When the last program in the schedule\
            \ stops playing, playback loops back to the first program in the schedule.</p>"
          enum:
          - LOOP
          - LINEAR
          title: PlaybackMode
          type: string
        tags:
          additionalProperties:
            $ref: '#/components/schemas/__string'
          description: "The tags to assign to the channel. Tags are key-value pairs\
            \ that you can associate with Amazon resources to help with organization,\
            \ access control, and cost tracking. For more information, see <a href=\"\
            https://docs.aws.amazon.com/mediatailor/latest/ug/tagging.html\">Tagging\
            \ AWS Elemental MediaTailor Resources</a>."
          title: tags
          type: object
        Tier:
          description: The tier of the channel.
          enum:
          - BASIC
          - STANDARD
          title: Tier
          type: string
      required:
      - Outputs
      - PlaybackMode
      title: CreateChannel_request
      type: object
    UpdateLiveSource_request:
      properties:
        HttpPackageConfigurations:
          description: The VOD source's HTTP package configuration settings.
          items:
            $ref: '#/components/schemas/HttpPackageConfiguration'
          title: HttpPackageConfigurations
          type: array
      required:
      - HttpPackageConfigurations
      title: UpdateLiveSource_request
      type: object
    CreateLiveSource_request:
      properties:
        HttpPackageConfigurations:
          description: The VOD source's HTTP package configuration settings.
          items:
            $ref: '#/components/schemas/HttpPackageConfiguration'
          title: HttpPackageConfigurations
          type: array
        tags:
          additionalProperties:
            $ref: '#/components/schemas/__string'
          description: "The tags to assign to the live source. Tags are key-value\
            \ pairs that you can associate with Amazon resources to help with organization,\
            \ access control, and cost tracking. For more information, see <a href=\"\
            https://docs.aws.amazon.com/mediatailor/latest/ug/tagging.html\">Tagging\
            \ AWS Elemental MediaTailor Resources</a>."
          title: tags
          type: object
      required:
      - HttpPackageConfigurations
      title: CreateLiveSource_request
      type: object
    CreatePrefetchSchedule_request_Consumption:
      description: A complex type that contains settings that determine how and when
        that MediaTailor places prefetched ads into upcoming ad breaks.
      properties:
        AvailMatchingCriteria:
          allOf:
          - $ref: '#/components/schemas/__listOfAvailMatchingCriteria'
          - description: "If you only want MediaTailor to insert prefetched ads into\
              \ avails (ad breaks) that match specific dynamic variables, such as\
              \ <code>scte.event_id</code>, set the avail matching criteria."
          title: AvailMatchingCriteria
        EndTime:
          allOf:
          - $ref: '#/components/schemas/__timestampUnix'
          - description: "The time when MediaTailor no longer considers the prefetched\
              \ ads for use in an ad break. MediaTailor automatically deletes prefetch\
              \ schedules no less than seven days after the end time. If you'd like\
              \ to manually delete the prefetch schedule, you can call <code>DeletePrefetchSchedule</code>."
          title: EndTime
        StartTime:
          allOf:
          - $ref: '#/components/schemas/__timestampUnix'
          - description: "The time when prefetched ads are considered for use in an\
              \ ad break. If you don't specify <code>StartTime</code>, the prefetched\
              \ ads are available after MediaTailor retrives them from the ad decision\
              \ server."
          title: StartTime
      title: CreatePrefetchSchedule_request_Consumption
      type: object
    CreatePrefetchSchedule_request_Retrieval:
      description: "A complex type that contains settings governing when MediaTailor\
        \ prefetches ads, and which dynamic variables that MediaTailor includes in\
        \ the request to the ad decision server."
      properties:
        DynamicVariables:
          allOf:
          - $ref: '#/components/schemas/__mapOf__string'
          - description: "<p>The dynamic variables to use for substitution during\
              \ prefetch requests to the ad decision server (ADS).</p> <p>You initially\
              \ configure <a href=\"https://docs.aws.amazon.com/mediatailor/latest/ug/variables.html\"\
              >dynamic variables</a> for the ADS URL when you set up your playback\
              \ configuration. When you specify <code>DynamicVariables</code> for\
              \ prefetch retrieval, MediaTailor includes the dynamic variables in\
              \ the request to the ADS.</p>"
          title: DynamicVariables
        EndTime:
          allOf:
          - $ref: '#/components/schemas/__timestampUnix'
          - description: The time when prefetch retrieval ends for the ad break. Prefetching
              will be attempted for manifest requests that occur at or before this
              time.
          title: EndTime
        StartTime:
          allOf:
          - $ref: '#/components/schemas/__timestampUnix'
          - description: "The time when prefetch retrievals can start for this break.\
              \ Ad prefetching will be attempted for manifest requests that occur\
              \ at or after this time. Defaults to the current time. If not specified,\
              \ the prefetch retrieval starts as soon as possible."
          title: StartTime
      title: CreatePrefetchSchedule_request_Retrieval
      type: object
    CreatePrefetchSchedule_request:
      properties:
        Consumption:
          $ref: '#/components/schemas/CreatePrefetchSchedule_request_Consumption'
        Retrieval:
          $ref: '#/components/schemas/CreatePrefetchSchedule_request_Retrieval'
        StreamId:
          description: "An optional stream identifier that MediaTailor uses to prefetch\
            \ ads for multiple streams that use the same playback configuration. If\
            \ <code>StreamId</code> is specified, MediaTailor returns all of the prefetch\
            \ schedules with an exact match on <code>StreamId</code>. If not specified,\
            \ MediaTailor returns all of the prefetch schedules for the playback configuration,\
            \ regardless of <code>StreamId</code>."
          title: StreamId
          type: string
      required:
      - Consumption
      - Retrieval
      title: CreatePrefetchSchedule_request
      type: object
    UpdateProgram_request_ScheduleConfiguration_ClipRange:
      allOf:
      - $ref: '#/components/schemas/ClipRange'
      - description: Program clip range configuration.
      example:
        EndOffsetMillis: ""
      title: UpdateProgram_request_ScheduleConfiguration_ClipRange
    UpdateProgram_request_ScheduleConfiguration_Transition:
      allOf:
      - $ref: '#/components/schemas/UpdateProgramTransition'
      - description: Program transition configuration.
      example:
        ScheduledStartTimeMillis: ""
        DurationMillis: ""
      title: UpdateProgram_request_ScheduleConfiguration_Transition
    UpdateProgram_request_ScheduleConfiguration:
      description: Schedule configuration parameters.
      properties:
        ClipRange:
          $ref: '#/components/schemas/UpdateProgram_request_ScheduleConfiguration_ClipRange'
        Transition:
          $ref: '#/components/schemas/UpdateProgram_request_ScheduleConfiguration_Transition'
      title: UpdateProgram_request_ScheduleConfiguration
      type: object
    UpdateProgram_request:
      properties:
        AdBreaks:
          description: The ad break configuration settings.
          items:
            $ref: '#/components/schemas/AdBreak'
          title: AdBreaks
          type: array
        ScheduleConfiguration:
          $ref: '#/components/schemas/UpdateProgram_request_ScheduleConfiguration'
      required:
      - ScheduleConfiguration
      title: UpdateProgram_request
      type: object
    CreateProgram_request_ScheduleConfiguration_Transition:
      allOf:
      - $ref: '#/components/schemas/Transition'
      - description: Program transition configurations.
      example:
        RelativeProgram: ""
        Type: ""
        RelativePosition: ""
        ScheduledStartTimeMillis: ""
        DurationMillis: ""
      title: CreateProgram_request_ScheduleConfiguration_Transition
    CreateProgram_request_ScheduleConfiguration:
      description: Schedule configuration parameters. A channel must be stopped before
        changes can be made to the schedule.
      properties:
        ClipRange:
          $ref: '#/components/schemas/UpdateProgram_request_ScheduleConfiguration_ClipRange'
        Transition:
          $ref: '#/components/schemas/CreateProgram_request_ScheduleConfiguration_Transition'
      title: CreateProgram_request_ScheduleConfiguration
      type: object
    CreateProgram_request:
      properties:
        AdBreaks:
          description: The ad break configuration settings.
          items:
            $ref: '#/components/schemas/AdBreak'
          title: AdBreaks
          type: array
        LiveSourceName:
          description: The name of the LiveSource for this Program.
          title: LiveSourceName
          type: string
        ScheduleConfiguration:
          $ref: '#/components/schemas/CreateProgram_request_ScheduleConfiguration'
        SourceLocationName:
          description: The name of the source location.
          title: SourceLocationName
          type: string
        VodSourceName:
          description: The name that's used to refer to a VOD source.
          title: VodSourceName
          type: string
      required:
      - ScheduleConfiguration
      - SourceLocationName
      title: CreateProgram_request
      type: object
    UpdateSourceLocation_request_AccessConfiguration_SecretsManagerAccessTokenConfiguration:
      allOf:
      - $ref: '#/components/schemas/SecretsManagerAccessTokenConfiguration'
      - description: AWS Secrets Manager access token configuration parameters.
      example:
        SecretArn: ""
        HeaderName: ""
        SecretStringKey: ""
      title: UpdateSourceLocation_request_AccessConfiguration_SecretsManagerAccessTokenConfiguration
    UpdateSourceLocation_request_AccessConfiguration:
      description: Access configuration parameters.
      properties:
        AccessType:
          allOf:
          - $ref: '#/components/schemas/AccessType'
          - description: "<p>The type of authentication used to access content from\
              \ <code>HttpConfiguration::BaseUrl</code> on your source location. Accepted\
              \ value: <code>S3_SIGV4</code>.</p> <p> <code>S3_SIGV4</code> - AWS\
              \ Signature Version 4 authentication for Amazon S3 hosted virtual-style\
              \ access. If your source location base URL is an Amazon S3 bucket, MediaTailor\
              \ can use AWS Signature Version 4 (SigV4) authentication to access the\
              \ bucket where your source content is stored. Your MediaTailor source\
              \ location baseURL must follow the S3 virtual hosted-style request URL\
              \ format. For example, https://bucket-name.s3.Region.amazonaws.com/key-name.</p>\
              \ <p>Before you can use <code>S3_SIGV4</code>, you must meet these requirements:</p>\
              \ <p>• You must allow MediaTailor to access your S3 bucket by granting\
              \ mediatailor.amazonaws.com principal access in IAM. For information\
              \ about configuring access in IAM, see Access management in the IAM\
              \ User Guide.</p> <p>• The mediatailor.amazonaws.com service principal\
              \ must have permissions to read all top level manifests referenced by\
              \ the VodSource packaging configurations.</p> <p>• The caller of the\
              \ API must have s3:GetObject IAM permissions to read all top level manifests\
              \ referenced by your MediaTailor VodSource packaging configurations.</p>"
          title: AccessType
        SecretsManagerAccessTokenConfiguration:
          $ref: '#/components/schemas/UpdateSourceLocation_request_AccessConfiguration_SecretsManagerAccessTokenConfiguration'
      title: UpdateSourceLocation_request_AccessConfiguration
      type: object
    UpdateSourceLocation_request_DefaultSegmentDeliveryConfiguration:
      description: "The optional configuration for a server that serves segments.\
        \ Use this if you want the segment delivery server to be different from the\
        \ source location server. For example, you can configure your source location\
        \ server to be an origination server, such as MediaPackage, and the segment\
        \ delivery server to be a content delivery network (CDN), such as CloudFront.\
        \ If you don't specify a segment delivery server, then the source location\
        \ server is used."
      properties:
        BaseUrl:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: "The hostname of the server that will be used to serve segments.\
              \ This string must include the protocol, such as <b>https://</b>."
          title: BaseUrl
      title: UpdateSourceLocation_request_DefaultSegmentDeliveryConfiguration
      type: object
    UpdateSourceLocation_request_HttpConfiguration:
      description: The HTTP configuration for the source location.
      properties:
        BaseUrl:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: "The base URL for the source location host server. This string\
              \ must include the protocol, such as <b>https://</b>."
          title: BaseUrl
      title: UpdateSourceLocation_request_HttpConfiguration
      type: object
    UpdateSourceLocation_request:
      properties:
        AccessConfiguration:
          $ref: '#/components/schemas/UpdateSourceLocation_request_AccessConfiguration'
        DefaultSegmentDeliveryConfiguration:
          $ref: '#/components/schemas/UpdateSourceLocation_request_DefaultSegmentDeliveryConfiguration'
        HttpConfiguration:
          $ref: '#/components/schemas/UpdateSourceLocation_request_HttpConfiguration'
        SegmentDeliveryConfigurations:
          description: A list of the segment delivery configurations associated with
            this resource.
          items:
            $ref: '#/components/schemas/SegmentDeliveryConfiguration'
          title: SegmentDeliveryConfigurations
          type: array
      required:
      - HttpConfiguration
      title: UpdateSourceLocation_request
      type: object
    CreateSourceLocation_request:
      properties:
        AccessConfiguration:
          $ref: '#/components/schemas/UpdateSourceLocation_request_AccessConfiguration'
        DefaultSegmentDeliveryConfiguration:
          $ref: '#/components/schemas/UpdateSourceLocation_request_DefaultSegmentDeliveryConfiguration'
        HttpConfiguration:
          $ref: '#/components/schemas/UpdateSourceLocation_request_HttpConfiguration'
        SegmentDeliveryConfigurations:
          description: A list of the segment delivery configurations associated with
            this resource.
          items:
            $ref: '#/components/schemas/SegmentDeliveryConfiguration'
          title: SegmentDeliveryConfigurations
          type: array
        tags:
          additionalProperties:
            $ref: '#/components/schemas/__string'
          description: "The tags to assign to the source location. Tags are key-value\
            \ pairs that you can associate with Amazon resources to help with organization,\
            \ access control, and cost tracking. For more information, see <a href=\"\
            https://docs.aws.amazon.com/mediatailor/latest/ug/tagging.html\">Tagging\
            \ AWS Elemental MediaTailor Resources</a>."
          title: tags
          type: object
      required:
      - HttpConfiguration
      title: CreateSourceLocation_request
      type: object
    CreateVodSource_request:
      properties:
        HttpPackageConfigurations:
          description: The VOD source's HTTP package configuration settings.
          items:
            $ref: '#/components/schemas/HttpPackageConfiguration'
          title: HttpPackageConfigurations
          type: array
        tags:
          additionalProperties:
            $ref: '#/components/schemas/__string'
          description: "The tags to assign to the VOD source. Tags are key-value pairs\
            \ that you can associate with Amazon resources to help with organization,\
            \ access control, and cost tracking. For more information, see <a href=\"\
            https://docs.aws.amazon.com/mediatailor/latest/ug/tagging.html\">Tagging\
            \ AWS Elemental MediaTailor Resources</a>."
          title: tags
          type: object
      required:
      - HttpPackageConfigurations
      title: CreateVodSource_request
      type: object
    PutChannelPolicy_request:
      properties:
        Policy:
          description: Adds an IAM role that determines the permissions of your channel.
          title: Policy
          type: string
      required:
      - Policy
      title: PutChannelPolicy_request
      type: object
    ListPrefetchSchedules_request:
      properties:
        MaxResults:
          description: "The maximum number of prefetch schedules that you want MediaTailor\
            \ to return in response to the current request. If there are more than\
            \ <code>MaxResults</code> prefetch schedules, use the value of <code>NextToken</code>\
            \ in the response to get the next page of results."
          maximum: 100
          minimum: 1
          title: MaxResults
          type: integer
        NextToken:
          description: "<p>(Optional) If the playback configuration has more than\
            \ <code>MaxResults</code> prefetch schedules, use <code>NextToken</code>\
            \ to get the second and subsequent pages of results.</p> <p> For the first\
            \ <code>ListPrefetchSchedulesRequest</code> request, omit this value.</p>\
            \ <p> For the second and subsequent requests, get the value of <code>NextToken</code>\
            \ from the previous response and specify that value for <code>NextToken</code>\
            \ in the request.</p> <p> If the previous response didn't include a <code>NextToken</code>\
            \ element, there are no more prefetch schedules to get.</p>"
          title: NextToken
          type: string
        StreamId:
          description: An optional filtering parameter whereby MediaTailor filters
            the prefetch schedules to include only specific streams.
          title: StreamId
          type: string
      title: ListPrefetchSchedules_request
      type: object
    TagResource_request:
      properties:
        tags:
          additionalProperties:
            $ref: '#/components/schemas/__string'
          description: "The tags to assign to the resource. Tags are key-value pairs\
            \ that you can associate with Amazon resources to help with organization,\
            \ access control, and cost tracking. For more information, see <a href=\"\
            https://docs.aws.amazon.com/mediatailor/latest/ug/tagging.html\">Tagging\
            \ AWS Elemental MediaTailor Resources</a>."
          title: tags
          type: object
      required:
      - tags
      title: TagResource_request
      type: object
    PutPlaybackConfiguration_request_AvailSuppression:
      description: "The configuration for avail suppression, also known as ad suppression.\
        \ For more information about ad suppression, see <a href=\"https://docs.aws.amazon.com/mediatailor/latest/ug/ad-behavior.html\"\
        >Ad Suppression</a>."
      properties:
        FillPolicy:
          allOf:
          - $ref: '#/components/schemas/FillPolicy'
          - description: Defines the policy to apply to the avail suppression mode.
              <code>BEHIND_LIVE_EDGE</code> will always use the full avail suppression
              policy. <code>AFTER_LIVE_EDGE</code> mode can be used to invoke partial
              ad break fills when a session starts mid-break.
          title: FillPolicy
        Mode:
          allOf:
          - $ref: '#/components/schemas/Mode'
          - description: "Sets the ad suppression mode. By default, ad suppression\
              \ is off and all ad breaks are filled with ads or slate. When Mode is\
              \ set to <code>BEHIND_LIVE_EDGE</code>, ad suppression is active and\
              \ MediaTailor won't fill ad breaks on or behind the ad suppression Value\
              \ time in the manifest lookback window. When Mode is set to <code>AFTER_LIVE_EDGE</code>,\
              \ ad suppression is active and MediaTailor won't fill ad breaks that\
              \ are within the live edge plus the avail suppression value."
          title: Mode
        Value:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: "A live edge offset time in HH:MM:SS. MediaTailor won't fill\
              \ ad breaks on or behind this time in the manifest lookback window.\
              \ If Value is set to 00:00:00, it is in sync with the live edge, and\
              \ MediaTailor won't fill any ad breaks on or behind the live edge. If\
              \ you set a Value time, MediaTailor won't fill any ad breaks on or behind\
              \ this time in the manifest lookback window. For example, if you set\
              \ 00:45:00, then MediaTailor will fill ad breaks that occur within 45\
              \ minutes behind the live edge, but won't fill ad breaks on or behind\
              \ 45 minutes behind the live edge."
          title: Value
      title: PutPlaybackConfiguration_request_AvailSuppression
      type: object
    PutPlaybackConfiguration_request_Bumper:
      description: "The configuration for bumpers. Bumpers are short audio or video\
        \ clips that play at the start or before the end of an ad break. To learn\
        \ more about bumpers, see <a href=\"https://docs.aws.amazon.com/mediatailor/latest/ug/bumpers.html\"\
        >Bumpers</a>."
      properties:
        EndUrl:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The URL for the end bumper asset.
          title: EndUrl
        StartUrl:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: The URL for the start bumper asset.
          title: StartUrl
      title: PutPlaybackConfiguration_request_Bumper
      type: object
    PutPlaybackConfiguration_request_CdnConfiguration:
      description: "The configuration for using a content delivery network (CDN),\
        \ like Amazon CloudFront, for content and ad segment management."
      properties:
        AdSegmentUrlPrefix:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: "A non-default content delivery network (CDN) to serve ad\
              \ segments. By default, AWS Elemental MediaTailor uses Amazon CloudFront\
              \ with default cache settings as its CDN for ad segments. To set up\
              \ an alternate CDN, create a rule in your CDN for the origin ads.mediatailor.<i>&lt;region&gt;</i>.amazonaws.com.\
              \ Then specify the rule's name in this <code>AdSegmentUrlPrefix</code>.\
              \ When AWS Elemental MediaTailor serves a manifest, it reports your\
              \ CDN as the source for ad segments."
          title: AdSegmentUrlPrefix
        ContentSegmentUrlPrefix:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: "A content delivery network (CDN) to cache content segments,\
              \ so that content requests don’t always have to go to the origin server.\
              \ First, create a rule in your CDN for the content segment origin server.\
              \ Then specify the rule's name in this <code>ContentSegmentUrlPrefix</code>.\
              \ When AWS Elemental MediaTailor serves a manifest, it reports your\
              \ CDN as the source for content segments."
          title: ContentSegmentUrlPrefix
      title: PutPlaybackConfiguration_request_CdnConfiguration
      type: object
    PutPlaybackConfiguration_request_DashConfiguration:
      description: The configuration for DASH PUT operations.
      properties:
        MpdLocation:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: "The setting that controls whether MediaTailor includes the\
              \ Location tag in DASH manifests. MediaTailor populates the Location\
              \ tag with the URL for manifest update requests, to be used by players\
              \ that don't support sticky redirects. Disable this if you have CDN\
              \ routing rules set up for accessing MediaTailor manifests, and you\
              \ are either using client-side reporting or your players support sticky\
              \ HTTP redirects. Valid values are <code>DISABLED</code> and <code>EMT_DEFAULT</code>.\
              \ The <code>EMT_DEFAULT</code> setting enables the inclusion of the\
              \ tag and is the default value."
          title: MpdLocation
        OriginManifestType:
          allOf:
          - $ref: '#/components/schemas/OriginManifestType'
          - description: "The setting that controls whether MediaTailor handles manifests\
              \ from the origin server as multi-period manifests or single-period\
              \ manifests. If your origin server produces single-period manifests,\
              \ set this to <code>SINGLE_PERIOD</code>. The default setting is <code>MULTI_PERIOD</code>.\
              \ For multi-period manifests, omit this setting or set it to <code>MULTI_PERIOD</code>."
          title: OriginManifestType
      title: PutPlaybackConfiguration_request_DashConfiguration
      type: object
    PutPlaybackConfiguration_request_LivePreRollConfiguration:
      description: The configuration for pre-roll ad insertion.
      properties:
        AdDecisionServerUrl:
          allOf:
          - $ref: '#/components/schemas/__string'
          - description: "The URL for the ad decision server (ADS) for pre-roll ads.\
              \ This includes the specification of static parameters and placeholders\
              \ for dynamic parameters. AWS Elemental MediaTailor substitutes player-specific\
              \ and session-specific parameters as needed when calling the ADS. Alternately,\
              \ for testing, you can provide a static VAST URL. The maximum length\
              \ is 25,000 characters."
          title: AdDecisionServerUrl
        MaxDurationSeconds:
          allOf:
          - $ref: '#/components/schemas/__integer'
          - description: "The maximum allowed duration for the pre-roll ad avail.\
              \ AWS Elemental MediaTailor won't play pre-roll ads to exceed this duration,\
              \ regardless of the total duration of ads that the ADS returns."
          title: MaxDurationSeconds
      title: PutPlaybackConfiguration_request_LivePreRollConfiguration
      type: object
    PutPlaybackConfiguration_request_ManifestProcessingRules_AdMarkerPassthrough:
      allOf:
      - $ref: '#/components/schemas/AdMarkerPassthrough'
      - description: "<p>For HLS, when set to <code>true</code>, MediaTailor passes\
          \ through <code>EXT-X-CUE-IN</code>, <code>EXT-X-CUE-OUT</code>, and <code>EXT-X-SPLICEPOINT-SCTE35</code>\
          \ ad markers from the origin manifest to the MediaTailor personalized manifest.</p>\
          \ <p>No logic is applied to these ad markers. For example, if <code>EXT-X-CUE-OUT</code>\
          \ has a value of <code>60</code>, but no ads are filled for that ad break,\
          \ MediaTailor will not set the value to <code>0</code>.</p>"
      example:
        Enabled: ""
      title: PutPlaybackConfiguration_request_ManifestProcessingRules_AdMarkerPassthrough
    PutPlaybackConfiguration_request_ManifestProcessingRules:
      description: The configuration for manifest processing rules. Manifest processing
        rules enable customization of the personalized manifests created by MediaTailor.
      properties:
        AdMarkerPassthrough:
          $ref: '#/components/schemas/PutPlaybackConfiguration_request_ManifestProcessingRules_AdMarkerPassthrough'
      title: PutPlaybackConfiguration_request_ManifestProcessingRules
      type: object
    PutPlaybackConfiguration_request:
      properties:
        AdDecisionServerUrl:
          description: "The URL for the ad decision server (ADS). This includes the\
            \ specification of static parameters and placeholders for dynamic parameters.\
            \ AWS Elemental MediaTailor substitutes player-specific and session-specific\
            \ parameters as needed when calling the ADS. Alternately, for testing\
            \ you can provide a static VAST URL. The maximum length is 25,000 characters."
          title: AdDecisionServerUrl
          type: string
        AvailSuppression:
          $ref: '#/components/schemas/PutPlaybackConfiguration_request_AvailSuppression'
        Bumper:
          $ref: '#/components/schemas/PutPlaybackConfiguration_request_Bumper'
        CdnConfiguration:
          $ref: '#/components/schemas/PutPlaybackConfiguration_request_CdnConfiguration'
        ConfigurationAliases:
          additionalProperties:
            $ref: '#/components/schemas/__mapOf__string'
          description: The predefined aliases for dynamic variables.
          title: ConfigurationAliases
          type: object
        DashConfiguration:
          $ref: '#/components/schemas/PutPlaybackConfiguration_request_DashConfiguration'
        LivePreRollConfiguration:
          $ref: '#/components/schemas/PutPlaybackConfiguration_request_LivePreRollConfiguration'
        ManifestProcessingRules:
          $ref: '#/components/schemas/PutPlaybackConfiguration_request_ManifestProcessingRules'
        Name:
          description: The identifier for the playback configuration.
          title: Name
          type: string
        PersonalizationThresholdSeconds:
          description: "Defines the maximum duration of underfilled ad time (in seconds)\
            \ allowed in an ad break. If the duration of underfilled ad time exceeds\
            \ the personalization threshold, then the personalization of the ad break\
            \ is abandoned and the underlying content is shown. This feature applies\
            \ to <i>ad replacement</i> in live and VOD streams, rather than ad insertion,\
            \ because it relies on an underlying content stream. For more information\
            \ about ad break behavior, including ad replacement and insertion, see\
            \ <a href=\"https://docs.aws.amazon.com/mediatailor/latest/ug/ad-behavior.html\"\
            >Ad Behavior in AWS Elemental MediaTailor</a>."
          minimum: 1
          title: PersonalizationThresholdSeconds
          type: integer
        SlateAdUrl:
          description: "The URL for a high-quality video asset to transcode and use\
            \ to fill in time that's not used by ads. AWS Elemental MediaTailor shows\
            \ the slate to fill in gaps in media content. Configuring the slate is\
            \ optional for non-VPAID configurations. For VPAID, the slate is required\
            \ because MediaTailor provides it in the slots that are designated for\
            \ dynamic ad content. The slate must be a high-quality asset that contains\
            \ both audio and video."
          title: SlateAdUrl
          type: string
        tags:
          additionalProperties:
            $ref: '#/components/schemas/__string'
          description: "The tags to assign to the playback configuration. Tags are\
            \ key-value pairs that you can associate with Amazon resources to help\
            \ with organization, access control, and cost tracking. For more information,\
            \ see <a href=\"https://docs.aws.amazon.com/mediatailor/latest/ug/tagging.html\"\
            >Tagging AWS Elemental MediaTailor Resources</a>."
          title: tags
          type: object
        TranscodeProfileName:
          description: The name that is used to associate this playback configuration
            with a custom transcode profile. This overrides the dynamic transcoding
            defaults of MediaTailor. Use this only if you have already set up custom
            profiles with the help of AWS Support.
          title: TranscodeProfileName
          type: string
        VideoContentSourceUrl:
          description: "The URL prefix for the parent manifest for the stream, minus\
            \ the asset ID. The maximum length is 512 characters."
          title: VideoContentSourceUrl
          type: string
      required:
      - Name
      title: PutPlaybackConfiguration_request
      type: object
    CreateChannelResponse_FillerSlate:
      allOf:
      - $ref: '#/components/schemas/SlateSource'
      - description: Contains information about the slate used to fill gaps between
          programs in the schedule.
      example:
        VodSourceName: ""
        SourceLocationName: ""
      title: CreateChannelResponse_FillerSlate
    RequestOutputItem_DashPlaylistSettings:
      allOf:
      - $ref: '#/components/schemas/DashPlaylistSettings'
      - description: DASH manifest configuration parameters.
      title: RequestOutputItem_DashPlaylistSettings
    RequestOutputItem_HlsPlaylistSettings:
      allOf:
      - $ref: '#/components/schemas/HlsPlaylistSettings'
      - description: HLS playlist configuration parameters.
      title: RequestOutputItem_HlsPlaylistSettings
    CreatePrefetchScheduleResponse_Consumption:
      allOf:
      - $ref: '#/components/schemas/PrefetchConsumption'
      - description: The configuration settings for MediaTailor's <i>consumption</i>
          of the prefetched ads from the ad decision server. Each consumption configuration
          contains an end time and an optional start time that define the <i>consumption
          window</i>. Prefetch schedules automatically expire no earlier than seven
          days after the end time.
      example:
        AvailMatchingCriteria: ""
        EndTime: ""
        StartTime: ""
      title: CreatePrefetchScheduleResponse_Consumption
    CreatePrefetchScheduleResponse_Retrieval:
      allOf:
      - $ref: '#/components/schemas/PrefetchRetrieval'
      - description: The configuration settings for retrieval of prefetched ads from
          the ad decision server. Only one set of prefetched ads will be retrieved
          and subsequently consumed for each ad break.
      example:
        EndTime: ""
        StartTime: ""
        DynamicVariables: ""
      title: CreatePrefetchScheduleResponse_Retrieval
    CreateProgramResponse_ClipRange:
      allOf:
      - $ref: '#/components/schemas/ClipRange'
      - description: The clip range configuration settings.
      example:
        EndOffsetMillis: ""
      title: CreateProgramResponse_ClipRange
    AdBreak_Slate:
      allOf:
      - $ref: '#/components/schemas/SlateSource'
      - description: Ad break slate configuration.
      title: AdBreak_Slate
    AdBreak_SpliceInsertMessage:
      allOf:
      - $ref: '#/components/schemas/SpliceInsertMessage'
      - description: "This defines the SCTE-35 <code>splice_insert()</code> message\
          \ inserted around the ad. For information about using <code>splice_insert()</code>,\
          \ see the SCTE-35 specficiaiton, section 9.7.3.1."
      title: AdBreak_SpliceInsertMessage
    AdBreak_TimeSignalMessage:
      allOf:
      - $ref: '#/components/schemas/TimeSignalMessage'
      - description: <p>Defines the SCTE-35 <code>time_signal</code> message inserted
          around the ad.</p> <p>Programs on a channel's schedule can be configured
          with one or more ad breaks. You can attach a <code>splice_insert</code>
          SCTE-35 message to the ad break. This message provides basic metadata about
          the ad break.</p> <p>See section 9.7.4 of the 2022 SCTE-35 specification
          for more information.</p>
      title: AdBreak_TimeSignalMessage
    CreateSourceLocationResponse_AccessConfiguration:
      allOf:
      - $ref: '#/components/schemas/AccessConfiguration'
      - description: Access configuration parameters. Configures the type of authentication
          used to access content from your source location.
      example:
        SecretsManagerAccessTokenConfiguration:
          SecretArn: ""
          HeaderName: ""
          SecretStringKey: ""
        AccessType: ""
      title: CreateSourceLocationResponse_AccessConfiguration
    CreateSourceLocationResponse_DefaultSegmentDeliveryConfiguration:
      allOf:
      - $ref: '#/components/schemas/DefaultSegmentDeliveryConfiguration'
      - description: The optional configuration for the server that serves segments.
      example:
        BaseUrl: ""
      title: CreateSourceLocationResponse_DefaultSegmentDeliveryConfiguration
    CreateSourceLocationResponse_HttpConfiguration:
      allOf:
      - $ref: '#/components/schemas/HttpConfiguration'
      - description: The source's HTTP package configurations.
      example:
        BaseUrl: ""
      title: CreateSourceLocationResponse_HttpConfiguration
    DescribeChannelResponse_LogConfiguration:
      allOf:
      - $ref: '#/components/schemas/LogConfigurationForChannel'
      - description: The log configuration for the channel.
      example:
        LogTypes: ""
      title: DescribeChannelResponse_LogConfiguration
    DescribeSourceLocationResponse_AccessConfiguration:
      allOf:
      - $ref: '#/components/schemas/AccessConfiguration'
      - description: The access configuration for the source location.
      example:
        SecretsManagerAccessTokenConfiguration:
          SecretArn: ""
          HeaderName: ""
          SecretStringKey: ""
        AccessType: ""
      title: DescribeSourceLocationResponse_AccessConfiguration
    DescribeSourceLocationResponse_DefaultSegmentDeliveryConfiguration:
      allOf:
      - $ref: '#/components/schemas/DefaultSegmentDeliveryConfiguration'
      - description: The default segment delivery configuration settings.
      example:
        BaseUrl: ""
      title: DescribeSourceLocationResponse_DefaultSegmentDeliveryConfiguration
    DescribeSourceLocationResponse_HttpConfiguration:
      allOf:
      - $ref: '#/components/schemas/HttpConfiguration'
      - description: The HTTP package configuration settings for the source location.
      example:
        BaseUrl: ""
      title: DescribeSourceLocationResponse_HttpConfiguration
    GetPlaybackConfigurationResponse_AvailSuppression:
      allOf:
      - $ref: '#/components/schemas/AvailSuppression'
      - description: "The configuration for avail suppression, also known as ad suppression.\
          \ For more information about ad suppression, see <a href=\"https://docs.aws.amazon.com/mediatailor/latest/ug/ad-behavior.html\"\
          >Ad Suppression</a>."
      example:
        Mode: ""
        Value: ""
        FillPolicy: ""
      title: GetPlaybackConfigurationResponse_AvailSuppression
    GetPlaybackConfigurationResponse_Bumper:
      allOf:
      - $ref: '#/components/schemas/Bumper'
      - description: "The configuration for bumpers. Bumpers are short audio or video\
          \ clips that play at the start or before the end of an ad break. To learn\
          \ more about bumpers, see <a href=\"https://docs.aws.amazon.com/mediatailor/latest/ug/bumpers.html\"\
          >Bumpers</a>."
      example:
        StartUrl: ""
        EndUrl: ""
      title: GetPlaybackConfigurationResponse_Bumper
    GetPlaybackConfigurationResponse_CdnConfiguration:
      allOf:
      - $ref: '#/components/schemas/CdnConfiguration'
      - description: "The configuration for using a content delivery network (CDN),\
          \ like Amazon CloudFront, for content and ad segment management."
      example:
        AdSegmentUrlPrefix: ""
        ContentSegmentUrlPrefix: ""
      title: GetPlaybackConfigurationResponse_CdnConfiguration
    GetPlaybackConfigurationResponse_DashConfiguration:
      allOf:
      - $ref: '#/components/schemas/DashConfiguration'
      - description: The configuration for DASH content.
      example:
        ManifestEndpointPrefix: ""
        MpdLocation: ""
        OriginManifestType: ""
      title: GetPlaybackConfigurationResponse_DashConfiguration
    GetPlaybackConfigurationResponse_HlsConfiguration:
      allOf:
      - $ref: '#/components/schemas/HlsConfiguration'
      - description: The configuration for HLS content.
      example:
        ManifestEndpointPrefix: ""
      title: GetPlaybackConfigurationResponse_HlsConfiguration
    GetPlaybackConfigurationResponse_LivePreRollConfiguration:
      allOf:
      - $ref: '#/components/schemas/LivePreRollConfiguration'
      - description: The configuration for pre-roll ad insertion.
      example:
        AdDecisionServerUrl: ""
        MaxDurationSeconds: ""
      title: GetPlaybackConfigurationResponse_LivePreRollConfiguration
    GetPlaybackConfigurationResponse_LogConfiguration:
      allOf:
      - $ref: '#/components/schemas/LogConfiguration'
      - description: The Amazon CloudWatch log settings for a playback configuration.
      example:
        PercentEnabled: ""
      title: GetPlaybackConfigurationResponse_LogConfiguration
    GetPlaybackConfigurationResponse_ManifestProcessingRules:
      allOf:
      - $ref: '#/components/schemas/ManifestProcessingRules'
      - description: The configuration for manifest processing rules. Manifest processing
          rules enable customization of the personalized manifests created by MediaTailor.
      example:
        AdMarkerPassthrough:
          Enabled: ""
      title: GetPlaybackConfigurationResponse_ManifestProcessingRules
    GetPrefetchScheduleResponse_Consumption:
      allOf:
      - $ref: '#/components/schemas/PrefetchConsumption'
      - description: "Consumption settings determine how, and when, MediaTailor places\
          \ the prefetched ads into ad breaks. Ad consumption occurs within a span\
          \ of time that you define, called a <i>consumption window</i>. You can designate\
          \ which ad breaks that MediaTailor fills with prefetch ads by setting avail\
          \ matching criteria."
      example:
        AvailMatchingCriteria: ""
        EndTime: ""
        StartTime: ""
      title: GetPrefetchScheduleResponse_Consumption
    GetPrefetchScheduleResponse_Retrieval:
      allOf:
      - $ref: '#/components/schemas/PrefetchRetrieval'
      - description: A complex type that contains settings for prefetch retrieval
          from the ad decision server (ADS).
      example:
        EndTime: ""
        StartTime: ""
        DynamicVariables: ""
      title: GetPrefetchScheduleResponse_Retrieval
    UpdateChannelResponse_FillerSlate:
      allOf:
      - $ref: '#/components/schemas/SlateSource'
      - description: The slate used to fill gaps between programs in the schedule.
          You must configure filler slate if your channel uses the <code>LINEAR</code>
          <code>PlaybackMode</code>. MediaTailor doesn't support filler slate for
          channels using the <code>LOOP</code> <code>PlaybackMode</code>.
      example:
        VodSourceName: ""
        SourceLocationName: ""
      title: UpdateChannelResponse_FillerSlate
    UpdateSourceLocationResponse_DefaultSegmentDeliveryConfiguration:
      allOf:
      - $ref: '#/components/schemas/DefaultSegmentDeliveryConfiguration'
      - description: The optional configuration for the host server that serves segments.
      example:
        BaseUrl: ""
      title: UpdateSourceLocationResponse_DefaultSegmentDeliveryConfiguration
    UpdateSourceLocationResponse_HttpConfiguration:
      allOf:
      - $ref: '#/components/schemas/HttpConfiguration'
      - description: The HTTP configuration for the source location.
      example:
        BaseUrl: ""
      title: UpdateSourceLocationResponse_HttpConfiguration
    Channel_LogConfiguration:
      allOf:
      - $ref: '#/components/schemas/LogConfigurationForChannel'
      - description: The log configuration.
      title: Channel_LogConfiguration
    CreateProgramRequest_ScheduleConfiguration:
      allOf:
      - $ref: '#/components/schemas/ScheduleConfiguration'
      - description: The schedule configuration settings.
      example:
        Transition:
          RelativeProgram: ""
          Type: ""
          RelativePosition: ""
          ScheduledStartTimeMillis: ""
          DurationMillis: ""
        ClipRange:
          EndOffsetMillis: ""
      title: CreateProgramRequest_ScheduleConfiguration
    PlaybackConfiguration_DashConfiguration:
      allOf:
      - $ref: '#/components/schemas/DashConfiguration'
      - description: The configuration for a DASH source.
      title: PlaybackConfiguration_DashConfiguration
    PutPlaybackConfigurationRequest_DashConfiguration:
      allOf:
      - $ref: '#/components/schemas/DashConfigurationForPut'
      - description: The configuration for DASH content.
      example:
        MpdLocation: ""
        OriginManifestType: ""
      title: PutPlaybackConfigurationRequest_DashConfiguration
    ResponseOutputItem_DashPlaylistSettings:
      allOf:
      - $ref: '#/components/schemas/DashPlaylistSettings'
      - description: DASH manifest configuration settings.
      title: ResponseOutputItem_DashPlaylistSettings
    ResponseOutputItem_HlsPlaylistSettings:
      allOf:
      - $ref: '#/components/schemas/HlsPlaylistSettings'
      - description: HLS manifest configuration settings.
      title: ResponseOutputItem_HlsPlaylistSettings
    SourceLocation_DefaultSegmentDeliveryConfiguration:
      allOf:
      - $ref: '#/components/schemas/DefaultSegmentDeliveryConfiguration'
      - description: The default segment delivery configuration.
      title: SourceLocation_DefaultSegmentDeliveryConfiguration
    UpdateProgramRequest_ScheduleConfiguration:
      allOf:
      - $ref: '#/components/schemas/UpdateProgramScheduleConfiguration'
      - description: The schedule configuration settings.
      example:
        Transition:
          ScheduledStartTimeMillis: ""
          DurationMillis: ""
        ClipRange:
          EndOffsetMillis: ""
      title: UpdateProgramRequest_ScheduleConfiguration
  securitySchemes:
    hmac:
      description: Amazon Signature authorization v4
      in: header
      name: Authorization
      type: apiKey
      x-amazon-apigateway-authtype: awsSigv4
      x-apikeyInfoFunc: openapi_server.controllers.security_controller.info_from_hmac
x-hasEquivalentPaths: true
