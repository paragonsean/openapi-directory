/**
 * AWS MediaTailor
 * <p>Use the AWS Elemental MediaTailor SDKs and CLI to configure scalable ad insertion and linear channels. With MediaTailor, you can assemble existing content into a linear stream and serve targeted ads to viewers while maintaining broadcast quality in over-the-top (OTT) video applications. For information about using the service, including detailed information about the settings covered in this guide, see the <a href=\"https://docs.aws.amazon.com/mediatailor/latest/ug/\">AWS Elemental MediaTailor User Guide</a>.</p> <p>Through the SDKs and the CLI you manage AWS Elemental MediaTailor configurations and channels the same as you do through the console. For example, you specify ad insertion behavior and mapping information for the origin server and the ad decision server (ADS).</p>
 *
 * The version of the OpenAPI document: 2018-04-23
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import RequestOutputItemDashPlaylistSettings from './RequestOutputItemDashPlaylistSettings';
import RequestOutputItemHlsPlaylistSettings from './RequestOutputItemHlsPlaylistSettings';

/**
 * The RequestOutputItem model module.
 * @module model/RequestOutputItem
 * @version 2018-04-23
 */
class RequestOutputItem {
    /**
     * Constructs a new <code>RequestOutputItem</code>.
     * The output configuration for this channel.
     * @alias module:model/RequestOutputItem
     * @param manifestName {String} 
     * @param sourceGroup {String} 
     */
    constructor(manifestName, sourceGroup) { 
        
        RequestOutputItem.initialize(this, manifestName, sourceGroup);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, manifestName, sourceGroup) { 
        obj['ManifestName'] = manifestName;
        obj['SourceGroup'] = sourceGroup;
    }

    /**
     * Constructs a <code>RequestOutputItem</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/RequestOutputItem} obj Optional instance to populate.
     * @return {module:model/RequestOutputItem} The populated <code>RequestOutputItem</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new RequestOutputItem();

            if (data.hasOwnProperty('DashPlaylistSettings')) {
                obj['DashPlaylistSettings'] = RequestOutputItemDashPlaylistSettings.constructFromObject(data['DashPlaylistSettings']);
            }
            if (data.hasOwnProperty('HlsPlaylistSettings')) {
                obj['HlsPlaylistSettings'] = RequestOutputItemHlsPlaylistSettings.constructFromObject(data['HlsPlaylistSettings']);
            }
            if (data.hasOwnProperty('ManifestName')) {
                obj['ManifestName'] = ApiClient.convertToType(data['ManifestName'], 'String');
            }
            if (data.hasOwnProperty('SourceGroup')) {
                obj['SourceGroup'] = ApiClient.convertToType(data['SourceGroup'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>RequestOutputItem</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>RequestOutputItem</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of RequestOutputItem.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // validate the optional field `DashPlaylistSettings`
        if (data['DashPlaylistSettings']) { // data not null
          RequestOutputItemDashPlaylistSettings.validateJSON(data['DashPlaylistSettings']);
        }
        // validate the optional field `HlsPlaylistSettings`
        if (data['HlsPlaylistSettings']) { // data not null
          RequestOutputItemHlsPlaylistSettings.validateJSON(data['HlsPlaylistSettings']);
        }
        // validate the optional field `ManifestName`
        if (data['ManifestName']) { // data not null
          String.validateJSON(data['ManifestName']);
        }
        // validate the optional field `SourceGroup`
        if (data['SourceGroup']) { // data not null
          String.validateJSON(data['SourceGroup']);
        }

        return true;
    }


}

RequestOutputItem.RequiredProperties = ["ManifestName", "SourceGroup"];

/**
 * @member {module:model/RequestOutputItemDashPlaylistSettings} DashPlaylistSettings
 */
RequestOutputItem.prototype['DashPlaylistSettings'] = undefined;

/**
 * @member {module:model/RequestOutputItemHlsPlaylistSettings} HlsPlaylistSettings
 */
RequestOutputItem.prototype['HlsPlaylistSettings'] = undefined;

/**
 * @member {String} ManifestName
 */
RequestOutputItem.prototype['ManifestName'] = undefined;

/**
 * @member {String} SourceGroup
 */
RequestOutputItem.prototype['SourceGroup'] = undefined;






export default RequestOutputItem;

