/**
 * AWS MediaTailor
 * <p>Use the AWS Elemental MediaTailor SDKs and CLI to configure scalable ad insertion and linear channels. With MediaTailor, you can assemble existing content into a linear stream and serve targeted ads to viewers while maintaining broadcast quality in over-the-top (OTT) video applications. For information about using the service, including detailed information about the settings covered in this guide, see the <a href=\"https://docs.aws.amazon.com/mediatailor/latest/ug/\">AWS Elemental MediaTailor User Guide</a>.</p> <p>Through the SDKs and the CLI you manage AWS Elemental MediaTailor configurations and channels the same as you do through the console. For example, you specify ad insertion behavior and mapping information for the origin server and the ad decision server (ADS).</p>
 *
 * The version of the OpenAPI document: 2018-04-23
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import RequestOutputItem from './RequestOutputItem';
import UpdateChannelRequestFillerSlate from './UpdateChannelRequestFillerSlate';

/**
 * The CreateChannelRequest model module.
 * @module model/CreateChannelRequest
 * @version 2018-04-23
 */
class CreateChannelRequest {
    /**
     * Constructs a new <code>CreateChannelRequest</code>.
     * @alias module:model/CreateChannelRequest
     * @param outputs {Array.<module:model/RequestOutputItem>} An object that represents an object in the CreateChannel request.
     * @param playbackMode {module:model/CreateChannelRequest.PlaybackModeEnum} <p>The type of playback mode to use for this channel.</p> <p> <code>LINEAR</code> - The programs in the schedule play once back-to-back in the schedule.</p> <p> <code>LOOP</code> - The programs in the schedule play back-to-back in an endless loop. When the last program in the schedule stops playing, playback loops back to the first program in the schedule.</p>
     */
    constructor(outputs, playbackMode) { 
        
        CreateChannelRequest.initialize(this, outputs, playbackMode);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, outputs, playbackMode) { 
        obj['Outputs'] = outputs;
        obj['PlaybackMode'] = playbackMode;
    }

    /**
     * Constructs a <code>CreateChannelRequest</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/CreateChannelRequest} obj Optional instance to populate.
     * @return {module:model/CreateChannelRequest} The populated <code>CreateChannelRequest</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new CreateChannelRequest();

            if (data.hasOwnProperty('FillerSlate')) {
                obj['FillerSlate'] = UpdateChannelRequestFillerSlate.constructFromObject(data['FillerSlate']);
            }
            if (data.hasOwnProperty('Outputs')) {
                obj['Outputs'] = ApiClient.convertToType(data['Outputs'], [RequestOutputItem]);
            }
            if (data.hasOwnProperty('PlaybackMode')) {
                obj['PlaybackMode'] = ApiClient.convertToType(data['PlaybackMode'], 'String');
            }
            if (data.hasOwnProperty('tags')) {
                obj['tags'] = ApiClient.convertToType(data['tags'], {'String': 'String'});
            }
            if (data.hasOwnProperty('Tier')) {
                obj['Tier'] = ApiClient.convertToType(data['Tier'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>CreateChannelRequest</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>CreateChannelRequest</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of CreateChannelRequest.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // validate the optional field `FillerSlate`
        if (data['FillerSlate']) { // data not null
          UpdateChannelRequestFillerSlate.validateJSON(data['FillerSlate']);
        }
        if (data['Outputs']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['Outputs'])) {
                throw new Error("Expected the field `Outputs` to be an array in the JSON data but got " + data['Outputs']);
            }
            // validate the optional field `Outputs` (array)
            for (const item of data['Outputs']) {
                RequestOutputItem.validateJSON(item);
            };
        }
        // ensure the json data is a string
        if (data['PlaybackMode'] && !(typeof data['PlaybackMode'] === 'string' || data['PlaybackMode'] instanceof String)) {
            throw new Error("Expected the field `PlaybackMode` to be a primitive type in the JSON string but got " + data['PlaybackMode']);
        }
        // ensure the json data is a string
        if (data['Tier'] && !(typeof data['Tier'] === 'string' || data['Tier'] instanceof String)) {
            throw new Error("Expected the field `Tier` to be a primitive type in the JSON string but got " + data['Tier']);
        }

        return true;
    }


}

CreateChannelRequest.RequiredProperties = ["Outputs", "PlaybackMode"];

/**
 * @member {module:model/UpdateChannelRequestFillerSlate} FillerSlate
 */
CreateChannelRequest.prototype['FillerSlate'] = undefined;

/**
 * An object that represents an object in the CreateChannel request.
 * @member {Array.<module:model/RequestOutputItem>} Outputs
 */
CreateChannelRequest.prototype['Outputs'] = undefined;

/**
 * <p>The type of playback mode to use for this channel.</p> <p> <code>LINEAR</code> - The programs in the schedule play once back-to-back in the schedule.</p> <p> <code>LOOP</code> - The programs in the schedule play back-to-back in an endless loop. When the last program in the schedule stops playing, playback loops back to the first program in the schedule.</p>
 * @member {module:model/CreateChannelRequest.PlaybackModeEnum} PlaybackMode
 */
CreateChannelRequest.prototype['PlaybackMode'] = undefined;

/**
 * The tags to assign to the channel. Tags are key-value pairs that you can associate with Amazon resources to help with organization, access control, and cost tracking. For more information, see <a href=\"https://docs.aws.amazon.com/mediatailor/latest/ug/tagging.html\">Tagging AWS Elemental MediaTailor Resources</a>.
 * @member {Object.<String, String>} tags
 */
CreateChannelRequest.prototype['tags'] = undefined;

/**
 * The tier of the channel.
 * @member {module:model/CreateChannelRequest.TierEnum} Tier
 */
CreateChannelRequest.prototype['Tier'] = undefined;





/**
 * Allowed values for the <code>PlaybackMode</code> property.
 * @enum {String}
 * @readonly
 */
CreateChannelRequest['PlaybackModeEnum'] = {

    /**
     * value: "LOOP"
     * @const
     */
    "LOOP": "LOOP",

    /**
     * value: "LINEAR"
     * @const
     */
    "LINEAR": "LINEAR"
};


/**
 * Allowed values for the <code>Tier</code> property.
 * @enum {String}
 * @readonly
 */
CreateChannelRequest['TierEnum'] = {

    /**
     * value: "BASIC"
     * @const
     */
    "BASIC": "BASIC",

    /**
     * value: "STANDARD"
     * @const
     */
    "STANDARD": "STANDARD"
};



export default CreateChannelRequest;

