/*
 * AWS MediaTailor
 * <p>Use the AWS Elemental MediaTailor SDKs and CLI to configure scalable ad insertion and linear channels. With MediaTailor, you can assemble existing content into a linear stream and serve targeted ads to viewers while maintaining broadcast quality in over-the-top (OTT) video applications. For information about using the service, including detailed information about the settings covered in this guide, see the <a href=\"https://docs.aws.amazon.com/mediatailor/latest/ug/\">AWS Elemental MediaTailor User Guide</a>.</p> <p>Through the SDKs and the CLI you manage AWS Elemental MediaTailor configurations and channels the same as you do through the console. For example, you specify ad insertion behavior and mapping information for the origin server and the ad decision server (ADS).</p>
 *
 * The version of the OpenAPI document: 2018-04-23
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;
import org.openapitools.client.model.RelativePosition;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * CreateProgramRequestScheduleConfigurationTransition
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T12:02:49.240114-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class CreateProgramRequestScheduleConfigurationTransition {
  public static final String SERIALIZED_NAME_DURATION_MILLIS = "DurationMillis";
  @SerializedName(SERIALIZED_NAME_DURATION_MILLIS)
  private Integer durationMillis;

  public static final String SERIALIZED_NAME_RELATIVE_POSITION = "RelativePosition";
  @SerializedName(SERIALIZED_NAME_RELATIVE_POSITION)
  private RelativePosition relativePosition;

  public static final String SERIALIZED_NAME_RELATIVE_PROGRAM = "RelativeProgram";
  @SerializedName(SERIALIZED_NAME_RELATIVE_PROGRAM)
  private String relativeProgram;

  public static final String SERIALIZED_NAME_SCHEDULED_START_TIME_MILLIS = "ScheduledStartTimeMillis";
  @SerializedName(SERIALIZED_NAME_SCHEDULED_START_TIME_MILLIS)
  private Integer scheduledStartTimeMillis;

  public static final String SERIALIZED_NAME_TYPE = "Type";
  @SerializedName(SERIALIZED_NAME_TYPE)
  private String type;

  public CreateProgramRequestScheduleConfigurationTransition() {
  }

  public CreateProgramRequestScheduleConfigurationTransition durationMillis(Integer durationMillis) {
    this.durationMillis = durationMillis;
    return this;
  }

  /**
   * Get durationMillis
   * @return durationMillis
   */
  @javax.annotation.Nullable
  public Integer getDurationMillis() {
    return durationMillis;
  }

  public void setDurationMillis(Integer durationMillis) {
    this.durationMillis = durationMillis;
  }


  public CreateProgramRequestScheduleConfigurationTransition relativePosition(RelativePosition relativePosition) {
    this.relativePosition = relativePosition;
    return this;
  }

  /**
   * Get relativePosition
   * @return relativePosition
   */
  @javax.annotation.Nonnull
  public RelativePosition getRelativePosition() {
    return relativePosition;
  }

  public void setRelativePosition(RelativePosition relativePosition) {
    this.relativePosition = relativePosition;
  }


  public CreateProgramRequestScheduleConfigurationTransition relativeProgram(String relativeProgram) {
    this.relativeProgram = relativeProgram;
    return this;
  }

  /**
   * Get relativeProgram
   * @return relativeProgram
   */
  @javax.annotation.Nullable
  public String getRelativeProgram() {
    return relativeProgram;
  }

  public void setRelativeProgram(String relativeProgram) {
    this.relativeProgram = relativeProgram;
  }


  public CreateProgramRequestScheduleConfigurationTransition scheduledStartTimeMillis(Integer scheduledStartTimeMillis) {
    this.scheduledStartTimeMillis = scheduledStartTimeMillis;
    return this;
  }

  /**
   * Get scheduledStartTimeMillis
   * @return scheduledStartTimeMillis
   */
  @javax.annotation.Nullable
  public Integer getScheduledStartTimeMillis() {
    return scheduledStartTimeMillis;
  }

  public void setScheduledStartTimeMillis(Integer scheduledStartTimeMillis) {
    this.scheduledStartTimeMillis = scheduledStartTimeMillis;
  }


  public CreateProgramRequestScheduleConfigurationTransition type(String type) {
    this.type = type;
    return this;
  }

  /**
   * Get type
   * @return type
   */
  @javax.annotation.Nonnull
  public String getType() {
    return type;
  }

  public void setType(String type) {
    this.type = type;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CreateProgramRequestScheduleConfigurationTransition createProgramRequestScheduleConfigurationTransition = (CreateProgramRequestScheduleConfigurationTransition) o;
    return Objects.equals(this.durationMillis, createProgramRequestScheduleConfigurationTransition.durationMillis) &&
        Objects.equals(this.relativePosition, createProgramRequestScheduleConfigurationTransition.relativePosition) &&
        Objects.equals(this.relativeProgram, createProgramRequestScheduleConfigurationTransition.relativeProgram) &&
        Objects.equals(this.scheduledStartTimeMillis, createProgramRequestScheduleConfigurationTransition.scheduledStartTimeMillis) &&
        Objects.equals(this.type, createProgramRequestScheduleConfigurationTransition.type);
  }

  @Override
  public int hashCode() {
    return Objects.hash(durationMillis, relativePosition, relativeProgram, scheduledStartTimeMillis, type);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CreateProgramRequestScheduleConfigurationTransition {\n");
    sb.append("    durationMillis: ").append(toIndentedString(durationMillis)).append("\n");
    sb.append("    relativePosition: ").append(toIndentedString(relativePosition)).append("\n");
    sb.append("    relativeProgram: ").append(toIndentedString(relativeProgram)).append("\n");
    sb.append("    scheduledStartTimeMillis: ").append(toIndentedString(scheduledStartTimeMillis)).append("\n");
    sb.append("    type: ").append(toIndentedString(type)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("DurationMillis");
    openapiFields.add("RelativePosition");
    openapiFields.add("RelativeProgram");
    openapiFields.add("ScheduledStartTimeMillis");
    openapiFields.add("Type");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
    openapiRequiredFields.add("RelativePosition");
    openapiRequiredFields.add("Type");
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to CreateProgramRequestScheduleConfigurationTransition
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!CreateProgramRequestScheduleConfigurationTransition.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in CreateProgramRequestScheduleConfigurationTransition is not found in the empty JSON string", CreateProgramRequestScheduleConfigurationTransition.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!CreateProgramRequestScheduleConfigurationTransition.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `CreateProgramRequestScheduleConfigurationTransition` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }

      // check to make sure all required properties/fields are present in the JSON string
      for (String requiredField : CreateProgramRequestScheduleConfigurationTransition.openapiRequiredFields) {
        if (jsonElement.getAsJsonObject().get(requiredField) == null) {
          throw new IllegalArgumentException(String.format("The required field `%s` is not found in the JSON string: %s", requiredField, jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // validate the optional field `DurationMillis`
      if (jsonObj.get("DurationMillis") != null && !jsonObj.get("DurationMillis").isJsonNull()) {
        Integer.validateJsonElement(jsonObj.get("DurationMillis"));
      }
      // validate the required field `RelativePosition`
      RelativePosition.validateJsonElement(jsonObj.get("RelativePosition"));
      // validate the optional field `RelativeProgram`
      if (jsonObj.get("RelativeProgram") != null && !jsonObj.get("RelativeProgram").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("RelativeProgram"));
      }
      // validate the optional field `ScheduledStartTimeMillis`
      if (jsonObj.get("ScheduledStartTimeMillis") != null && !jsonObj.get("ScheduledStartTimeMillis").isJsonNull()) {
        Integer.validateJsonElement(jsonObj.get("ScheduledStartTimeMillis"));
      }
      // validate the required field `Type`
      String.validateJsonElement(jsonObj.get("Type"));
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!CreateProgramRequestScheduleConfigurationTransition.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'CreateProgramRequestScheduleConfigurationTransition' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<CreateProgramRequestScheduleConfigurationTransition> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(CreateProgramRequestScheduleConfigurationTransition.class));

       return (TypeAdapter<T>) new TypeAdapter<CreateProgramRequestScheduleConfigurationTransition>() {
           @Override
           public void write(JsonWriter out, CreateProgramRequestScheduleConfigurationTransition value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public CreateProgramRequestScheduleConfigurationTransition read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of CreateProgramRequestScheduleConfigurationTransition given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of CreateProgramRequestScheduleConfigurationTransition
   * @throws IOException if the JSON string is invalid with respect to CreateProgramRequestScheduleConfigurationTransition
   */
  public static CreateProgramRequestScheduleConfigurationTransition fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, CreateProgramRequestScheduleConfigurationTransition.class);
  }

  /**
   * Convert an instance of CreateProgramRequestScheduleConfigurationTransition to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

