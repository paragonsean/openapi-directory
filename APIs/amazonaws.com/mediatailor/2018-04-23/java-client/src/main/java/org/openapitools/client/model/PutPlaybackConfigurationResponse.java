/*
 * AWS MediaTailor
 * <p>Use the AWS Elemental MediaTailor SDKs and CLI to configure scalable ad insertion and linear channels. With MediaTailor, you can assemble existing content into a linear stream and serve targeted ads to viewers while maintaining broadcast quality in over-the-top (OTT) video applications. For information about using the service, including detailed information about the settings covered in this guide, see the <a href=\"https://docs.aws.amazon.com/mediatailor/latest/ug/\">AWS Elemental MediaTailor User Guide</a>.</p> <p>Through the SDKs and the CLI you manage AWS Elemental MediaTailor configurations and channels the same as you do through the console. For example, you specify ad insertion behavior and mapping information for the origin server and the ad decision server (ADS).</p>
 *
 * The version of the OpenAPI document: 2018-04-23
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;
import java.util.Map;
import org.openapitools.client.model.GetPlaybackConfigurationResponseAvailSuppression;
import org.openapitools.client.model.GetPlaybackConfigurationResponseBumper;
import org.openapitools.client.model.GetPlaybackConfigurationResponseCdnConfiguration;
import org.openapitools.client.model.GetPlaybackConfigurationResponseDashConfiguration;
import org.openapitools.client.model.GetPlaybackConfigurationResponseHlsConfiguration;
import org.openapitools.client.model.GetPlaybackConfigurationResponseLivePreRollConfiguration;
import org.openapitools.client.model.GetPlaybackConfigurationResponseLogConfiguration;
import org.openapitools.client.model.GetPlaybackConfigurationResponseManifestProcessingRules;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * PutPlaybackConfigurationResponse
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T12:02:49.240114-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class PutPlaybackConfigurationResponse {
  public static final String SERIALIZED_NAME_AD_DECISION_SERVER_URL = "AdDecisionServerUrl";
  @SerializedName(SERIALIZED_NAME_AD_DECISION_SERVER_URL)
  private String adDecisionServerUrl;

  public static final String SERIALIZED_NAME_AVAIL_SUPPRESSION = "AvailSuppression";
  @SerializedName(SERIALIZED_NAME_AVAIL_SUPPRESSION)
  private GetPlaybackConfigurationResponseAvailSuppression availSuppression;

  public static final String SERIALIZED_NAME_BUMPER = "Bumper";
  @SerializedName(SERIALIZED_NAME_BUMPER)
  private GetPlaybackConfigurationResponseBumper bumper;

  public static final String SERIALIZED_NAME_CDN_CONFIGURATION = "CdnConfiguration";
  @SerializedName(SERIALIZED_NAME_CDN_CONFIGURATION)
  private GetPlaybackConfigurationResponseCdnConfiguration cdnConfiguration;

  public static final String SERIALIZED_NAME_CONFIGURATION_ALIASES = "ConfigurationAliases";
  @SerializedName(SERIALIZED_NAME_CONFIGURATION_ALIASES)
  private Map configurationAliases;

  public static final String SERIALIZED_NAME_DASH_CONFIGURATION = "DashConfiguration";
  @SerializedName(SERIALIZED_NAME_DASH_CONFIGURATION)
  private GetPlaybackConfigurationResponseDashConfiguration dashConfiguration;

  public static final String SERIALIZED_NAME_HLS_CONFIGURATION = "HlsConfiguration";
  @SerializedName(SERIALIZED_NAME_HLS_CONFIGURATION)
  private GetPlaybackConfigurationResponseHlsConfiguration hlsConfiguration;

  public static final String SERIALIZED_NAME_LIVE_PRE_ROLL_CONFIGURATION = "LivePreRollConfiguration";
  @SerializedName(SERIALIZED_NAME_LIVE_PRE_ROLL_CONFIGURATION)
  private GetPlaybackConfigurationResponseLivePreRollConfiguration livePreRollConfiguration;

  public static final String SERIALIZED_NAME_LOG_CONFIGURATION = "LogConfiguration";
  @SerializedName(SERIALIZED_NAME_LOG_CONFIGURATION)
  private GetPlaybackConfigurationResponseLogConfiguration logConfiguration;

  public static final String SERIALIZED_NAME_MANIFEST_PROCESSING_RULES = "ManifestProcessingRules";
  @SerializedName(SERIALIZED_NAME_MANIFEST_PROCESSING_RULES)
  private GetPlaybackConfigurationResponseManifestProcessingRules manifestProcessingRules;

  public static final String SERIALIZED_NAME_NAME = "Name";
  @SerializedName(SERIALIZED_NAME_NAME)
  private String name;

  public static final String SERIALIZED_NAME_PERSONALIZATION_THRESHOLD_SECONDS = "PersonalizationThresholdSeconds";
  @SerializedName(SERIALIZED_NAME_PERSONALIZATION_THRESHOLD_SECONDS)
  private Integer personalizationThresholdSeconds;

  public static final String SERIALIZED_NAME_PLAYBACK_CONFIGURATION_ARN = "PlaybackConfigurationArn";
  @SerializedName(SERIALIZED_NAME_PLAYBACK_CONFIGURATION_ARN)
  private String playbackConfigurationArn;

  public static final String SERIALIZED_NAME_PLAYBACK_ENDPOINT_PREFIX = "PlaybackEndpointPrefix";
  @SerializedName(SERIALIZED_NAME_PLAYBACK_ENDPOINT_PREFIX)
  private String playbackEndpointPrefix;

  public static final String SERIALIZED_NAME_SESSION_INITIALIZATION_ENDPOINT_PREFIX = "SessionInitializationEndpointPrefix";
  @SerializedName(SERIALIZED_NAME_SESSION_INITIALIZATION_ENDPOINT_PREFIX)
  private String sessionInitializationEndpointPrefix;

  public static final String SERIALIZED_NAME_SLATE_AD_URL = "SlateAdUrl";
  @SerializedName(SERIALIZED_NAME_SLATE_AD_URL)
  private String slateAdUrl;

  public static final String SERIALIZED_NAME_TAGS = "Tags";
  @SerializedName(SERIALIZED_NAME_TAGS)
  private Map tags;

  public static final String SERIALIZED_NAME_TRANSCODE_PROFILE_NAME = "TranscodeProfileName";
  @SerializedName(SERIALIZED_NAME_TRANSCODE_PROFILE_NAME)
  private String transcodeProfileName;

  public static final String SERIALIZED_NAME_VIDEO_CONTENT_SOURCE_URL = "VideoContentSourceUrl";
  @SerializedName(SERIALIZED_NAME_VIDEO_CONTENT_SOURCE_URL)
  private String videoContentSourceUrl;

  public PutPlaybackConfigurationResponse() {
  }

  public PutPlaybackConfigurationResponse adDecisionServerUrl(String adDecisionServerUrl) {
    this.adDecisionServerUrl = adDecisionServerUrl;
    return this;
  }

  /**
   * Get adDecisionServerUrl
   * @return adDecisionServerUrl
   */
  @javax.annotation.Nullable
  public String getAdDecisionServerUrl() {
    return adDecisionServerUrl;
  }

  public void setAdDecisionServerUrl(String adDecisionServerUrl) {
    this.adDecisionServerUrl = adDecisionServerUrl;
  }


  public PutPlaybackConfigurationResponse availSuppression(GetPlaybackConfigurationResponseAvailSuppression availSuppression) {
    this.availSuppression = availSuppression;
    return this;
  }

  /**
   * Get availSuppression
   * @return availSuppression
   */
  @javax.annotation.Nullable
  public GetPlaybackConfigurationResponseAvailSuppression getAvailSuppression() {
    return availSuppression;
  }

  public void setAvailSuppression(GetPlaybackConfigurationResponseAvailSuppression availSuppression) {
    this.availSuppression = availSuppression;
  }


  public PutPlaybackConfigurationResponse bumper(GetPlaybackConfigurationResponseBumper bumper) {
    this.bumper = bumper;
    return this;
  }

  /**
   * Get bumper
   * @return bumper
   */
  @javax.annotation.Nullable
  public GetPlaybackConfigurationResponseBumper getBumper() {
    return bumper;
  }

  public void setBumper(GetPlaybackConfigurationResponseBumper bumper) {
    this.bumper = bumper;
  }


  public PutPlaybackConfigurationResponse cdnConfiguration(GetPlaybackConfigurationResponseCdnConfiguration cdnConfiguration) {
    this.cdnConfiguration = cdnConfiguration;
    return this;
  }

  /**
   * Get cdnConfiguration
   * @return cdnConfiguration
   */
  @javax.annotation.Nullable
  public GetPlaybackConfigurationResponseCdnConfiguration getCdnConfiguration() {
    return cdnConfiguration;
  }

  public void setCdnConfiguration(GetPlaybackConfigurationResponseCdnConfiguration cdnConfiguration) {
    this.cdnConfiguration = cdnConfiguration;
  }


  public PutPlaybackConfigurationResponse configurationAliases(Map configurationAliases) {
    this.configurationAliases = configurationAliases;
    return this;
  }

  /**
   * Get configurationAliases
   * @return configurationAliases
   */
  @javax.annotation.Nullable
  public Map getConfigurationAliases() {
    return configurationAliases;
  }

  public void setConfigurationAliases(Map configurationAliases) {
    this.configurationAliases = configurationAliases;
  }


  public PutPlaybackConfigurationResponse dashConfiguration(GetPlaybackConfigurationResponseDashConfiguration dashConfiguration) {
    this.dashConfiguration = dashConfiguration;
    return this;
  }

  /**
   * Get dashConfiguration
   * @return dashConfiguration
   */
  @javax.annotation.Nullable
  public GetPlaybackConfigurationResponseDashConfiguration getDashConfiguration() {
    return dashConfiguration;
  }

  public void setDashConfiguration(GetPlaybackConfigurationResponseDashConfiguration dashConfiguration) {
    this.dashConfiguration = dashConfiguration;
  }


  public PutPlaybackConfigurationResponse hlsConfiguration(GetPlaybackConfigurationResponseHlsConfiguration hlsConfiguration) {
    this.hlsConfiguration = hlsConfiguration;
    return this;
  }

  /**
   * Get hlsConfiguration
   * @return hlsConfiguration
   */
  @javax.annotation.Nullable
  public GetPlaybackConfigurationResponseHlsConfiguration getHlsConfiguration() {
    return hlsConfiguration;
  }

  public void setHlsConfiguration(GetPlaybackConfigurationResponseHlsConfiguration hlsConfiguration) {
    this.hlsConfiguration = hlsConfiguration;
  }


  public PutPlaybackConfigurationResponse livePreRollConfiguration(GetPlaybackConfigurationResponseLivePreRollConfiguration livePreRollConfiguration) {
    this.livePreRollConfiguration = livePreRollConfiguration;
    return this;
  }

  /**
   * Get livePreRollConfiguration
   * @return livePreRollConfiguration
   */
  @javax.annotation.Nullable
  public GetPlaybackConfigurationResponseLivePreRollConfiguration getLivePreRollConfiguration() {
    return livePreRollConfiguration;
  }

  public void setLivePreRollConfiguration(GetPlaybackConfigurationResponseLivePreRollConfiguration livePreRollConfiguration) {
    this.livePreRollConfiguration = livePreRollConfiguration;
  }


  public PutPlaybackConfigurationResponse logConfiguration(GetPlaybackConfigurationResponseLogConfiguration logConfiguration) {
    this.logConfiguration = logConfiguration;
    return this;
  }

  /**
   * Get logConfiguration
   * @return logConfiguration
   */
  @javax.annotation.Nullable
  public GetPlaybackConfigurationResponseLogConfiguration getLogConfiguration() {
    return logConfiguration;
  }

  public void setLogConfiguration(GetPlaybackConfigurationResponseLogConfiguration logConfiguration) {
    this.logConfiguration = logConfiguration;
  }


  public PutPlaybackConfigurationResponse manifestProcessingRules(GetPlaybackConfigurationResponseManifestProcessingRules manifestProcessingRules) {
    this.manifestProcessingRules = manifestProcessingRules;
    return this;
  }

  /**
   * Get manifestProcessingRules
   * @return manifestProcessingRules
   */
  @javax.annotation.Nullable
  public GetPlaybackConfigurationResponseManifestProcessingRules getManifestProcessingRules() {
    return manifestProcessingRules;
  }

  public void setManifestProcessingRules(GetPlaybackConfigurationResponseManifestProcessingRules manifestProcessingRules) {
    this.manifestProcessingRules = manifestProcessingRules;
  }


  public PutPlaybackConfigurationResponse name(String name) {
    this.name = name;
    return this;
  }

  /**
   * Get name
   * @return name
   */
  @javax.annotation.Nullable
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }


  public PutPlaybackConfigurationResponse personalizationThresholdSeconds(Integer personalizationThresholdSeconds) {
    this.personalizationThresholdSeconds = personalizationThresholdSeconds;
    return this;
  }

  /**
   * Get personalizationThresholdSeconds
   * @return personalizationThresholdSeconds
   */
  @javax.annotation.Nullable
  public Integer getPersonalizationThresholdSeconds() {
    return personalizationThresholdSeconds;
  }

  public void setPersonalizationThresholdSeconds(Integer personalizationThresholdSeconds) {
    this.personalizationThresholdSeconds = personalizationThresholdSeconds;
  }


  public PutPlaybackConfigurationResponse playbackConfigurationArn(String playbackConfigurationArn) {
    this.playbackConfigurationArn = playbackConfigurationArn;
    return this;
  }

  /**
   * Get playbackConfigurationArn
   * @return playbackConfigurationArn
   */
  @javax.annotation.Nullable
  public String getPlaybackConfigurationArn() {
    return playbackConfigurationArn;
  }

  public void setPlaybackConfigurationArn(String playbackConfigurationArn) {
    this.playbackConfigurationArn = playbackConfigurationArn;
  }


  public PutPlaybackConfigurationResponse playbackEndpointPrefix(String playbackEndpointPrefix) {
    this.playbackEndpointPrefix = playbackEndpointPrefix;
    return this;
  }

  /**
   * Get playbackEndpointPrefix
   * @return playbackEndpointPrefix
   */
  @javax.annotation.Nullable
  public String getPlaybackEndpointPrefix() {
    return playbackEndpointPrefix;
  }

  public void setPlaybackEndpointPrefix(String playbackEndpointPrefix) {
    this.playbackEndpointPrefix = playbackEndpointPrefix;
  }


  public PutPlaybackConfigurationResponse sessionInitializationEndpointPrefix(String sessionInitializationEndpointPrefix) {
    this.sessionInitializationEndpointPrefix = sessionInitializationEndpointPrefix;
    return this;
  }

  /**
   * Get sessionInitializationEndpointPrefix
   * @return sessionInitializationEndpointPrefix
   */
  @javax.annotation.Nullable
  public String getSessionInitializationEndpointPrefix() {
    return sessionInitializationEndpointPrefix;
  }

  public void setSessionInitializationEndpointPrefix(String sessionInitializationEndpointPrefix) {
    this.sessionInitializationEndpointPrefix = sessionInitializationEndpointPrefix;
  }


  public PutPlaybackConfigurationResponse slateAdUrl(String slateAdUrl) {
    this.slateAdUrl = slateAdUrl;
    return this;
  }

  /**
   * Get slateAdUrl
   * @return slateAdUrl
   */
  @javax.annotation.Nullable
  public String getSlateAdUrl() {
    return slateAdUrl;
  }

  public void setSlateAdUrl(String slateAdUrl) {
    this.slateAdUrl = slateAdUrl;
  }


  public PutPlaybackConfigurationResponse tags(Map tags) {
    this.tags = tags;
    return this;
  }

  /**
   * Get tags
   * @return tags
   */
  @javax.annotation.Nullable
  public Map getTags() {
    return tags;
  }

  public void setTags(Map tags) {
    this.tags = tags;
  }


  public PutPlaybackConfigurationResponse transcodeProfileName(String transcodeProfileName) {
    this.transcodeProfileName = transcodeProfileName;
    return this;
  }

  /**
   * Get transcodeProfileName
   * @return transcodeProfileName
   */
  @javax.annotation.Nullable
  public String getTranscodeProfileName() {
    return transcodeProfileName;
  }

  public void setTranscodeProfileName(String transcodeProfileName) {
    this.transcodeProfileName = transcodeProfileName;
  }


  public PutPlaybackConfigurationResponse videoContentSourceUrl(String videoContentSourceUrl) {
    this.videoContentSourceUrl = videoContentSourceUrl;
    return this;
  }

  /**
   * Get videoContentSourceUrl
   * @return videoContentSourceUrl
   */
  @javax.annotation.Nullable
  public String getVideoContentSourceUrl() {
    return videoContentSourceUrl;
  }

  public void setVideoContentSourceUrl(String videoContentSourceUrl) {
    this.videoContentSourceUrl = videoContentSourceUrl;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    PutPlaybackConfigurationResponse putPlaybackConfigurationResponse = (PutPlaybackConfigurationResponse) o;
    return Objects.equals(this.adDecisionServerUrl, putPlaybackConfigurationResponse.adDecisionServerUrl) &&
        Objects.equals(this.availSuppression, putPlaybackConfigurationResponse.availSuppression) &&
        Objects.equals(this.bumper, putPlaybackConfigurationResponse.bumper) &&
        Objects.equals(this.cdnConfiguration, putPlaybackConfigurationResponse.cdnConfiguration) &&
        Objects.equals(this.configurationAliases, putPlaybackConfigurationResponse.configurationAliases) &&
        Objects.equals(this.dashConfiguration, putPlaybackConfigurationResponse.dashConfiguration) &&
        Objects.equals(this.hlsConfiguration, putPlaybackConfigurationResponse.hlsConfiguration) &&
        Objects.equals(this.livePreRollConfiguration, putPlaybackConfigurationResponse.livePreRollConfiguration) &&
        Objects.equals(this.logConfiguration, putPlaybackConfigurationResponse.logConfiguration) &&
        Objects.equals(this.manifestProcessingRules, putPlaybackConfigurationResponse.manifestProcessingRules) &&
        Objects.equals(this.name, putPlaybackConfigurationResponse.name) &&
        Objects.equals(this.personalizationThresholdSeconds, putPlaybackConfigurationResponse.personalizationThresholdSeconds) &&
        Objects.equals(this.playbackConfigurationArn, putPlaybackConfigurationResponse.playbackConfigurationArn) &&
        Objects.equals(this.playbackEndpointPrefix, putPlaybackConfigurationResponse.playbackEndpointPrefix) &&
        Objects.equals(this.sessionInitializationEndpointPrefix, putPlaybackConfigurationResponse.sessionInitializationEndpointPrefix) &&
        Objects.equals(this.slateAdUrl, putPlaybackConfigurationResponse.slateAdUrl) &&
        Objects.equals(this.tags, putPlaybackConfigurationResponse.tags) &&
        Objects.equals(this.transcodeProfileName, putPlaybackConfigurationResponse.transcodeProfileName) &&
        Objects.equals(this.videoContentSourceUrl, putPlaybackConfigurationResponse.videoContentSourceUrl);
  }

  @Override
  public int hashCode() {
    return Objects.hash(adDecisionServerUrl, availSuppression, bumper, cdnConfiguration, configurationAliases, dashConfiguration, hlsConfiguration, livePreRollConfiguration, logConfiguration, manifestProcessingRules, name, personalizationThresholdSeconds, playbackConfigurationArn, playbackEndpointPrefix, sessionInitializationEndpointPrefix, slateAdUrl, tags, transcodeProfileName, videoContentSourceUrl);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class PutPlaybackConfigurationResponse {\n");
    sb.append("    adDecisionServerUrl: ").append(toIndentedString(adDecisionServerUrl)).append("\n");
    sb.append("    availSuppression: ").append(toIndentedString(availSuppression)).append("\n");
    sb.append("    bumper: ").append(toIndentedString(bumper)).append("\n");
    sb.append("    cdnConfiguration: ").append(toIndentedString(cdnConfiguration)).append("\n");
    sb.append("    configurationAliases: ").append(toIndentedString(configurationAliases)).append("\n");
    sb.append("    dashConfiguration: ").append(toIndentedString(dashConfiguration)).append("\n");
    sb.append("    hlsConfiguration: ").append(toIndentedString(hlsConfiguration)).append("\n");
    sb.append("    livePreRollConfiguration: ").append(toIndentedString(livePreRollConfiguration)).append("\n");
    sb.append("    logConfiguration: ").append(toIndentedString(logConfiguration)).append("\n");
    sb.append("    manifestProcessingRules: ").append(toIndentedString(manifestProcessingRules)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    personalizationThresholdSeconds: ").append(toIndentedString(personalizationThresholdSeconds)).append("\n");
    sb.append("    playbackConfigurationArn: ").append(toIndentedString(playbackConfigurationArn)).append("\n");
    sb.append("    playbackEndpointPrefix: ").append(toIndentedString(playbackEndpointPrefix)).append("\n");
    sb.append("    sessionInitializationEndpointPrefix: ").append(toIndentedString(sessionInitializationEndpointPrefix)).append("\n");
    sb.append("    slateAdUrl: ").append(toIndentedString(slateAdUrl)).append("\n");
    sb.append("    tags: ").append(toIndentedString(tags)).append("\n");
    sb.append("    transcodeProfileName: ").append(toIndentedString(transcodeProfileName)).append("\n");
    sb.append("    videoContentSourceUrl: ").append(toIndentedString(videoContentSourceUrl)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("AdDecisionServerUrl");
    openapiFields.add("AvailSuppression");
    openapiFields.add("Bumper");
    openapiFields.add("CdnConfiguration");
    openapiFields.add("ConfigurationAliases");
    openapiFields.add("DashConfiguration");
    openapiFields.add("HlsConfiguration");
    openapiFields.add("LivePreRollConfiguration");
    openapiFields.add("LogConfiguration");
    openapiFields.add("ManifestProcessingRules");
    openapiFields.add("Name");
    openapiFields.add("PersonalizationThresholdSeconds");
    openapiFields.add("PlaybackConfigurationArn");
    openapiFields.add("PlaybackEndpointPrefix");
    openapiFields.add("SessionInitializationEndpointPrefix");
    openapiFields.add("SlateAdUrl");
    openapiFields.add("Tags");
    openapiFields.add("TranscodeProfileName");
    openapiFields.add("VideoContentSourceUrl");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to PutPlaybackConfigurationResponse
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!PutPlaybackConfigurationResponse.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in PutPlaybackConfigurationResponse is not found in the empty JSON string", PutPlaybackConfigurationResponse.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!PutPlaybackConfigurationResponse.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `PutPlaybackConfigurationResponse` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // validate the optional field `AdDecisionServerUrl`
      if (jsonObj.get("AdDecisionServerUrl") != null && !jsonObj.get("AdDecisionServerUrl").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("AdDecisionServerUrl"));
      }
      // validate the optional field `AvailSuppression`
      if (jsonObj.get("AvailSuppression") != null && !jsonObj.get("AvailSuppression").isJsonNull()) {
        GetPlaybackConfigurationResponseAvailSuppression.validateJsonElement(jsonObj.get("AvailSuppression"));
      }
      // validate the optional field `Bumper`
      if (jsonObj.get("Bumper") != null && !jsonObj.get("Bumper").isJsonNull()) {
        GetPlaybackConfigurationResponseBumper.validateJsonElement(jsonObj.get("Bumper"));
      }
      // validate the optional field `CdnConfiguration`
      if (jsonObj.get("CdnConfiguration") != null && !jsonObj.get("CdnConfiguration").isJsonNull()) {
        GetPlaybackConfigurationResponseCdnConfiguration.validateJsonElement(jsonObj.get("CdnConfiguration"));
      }
      // validate the optional field `ConfigurationAliases`
      if (jsonObj.get("ConfigurationAliases") != null && !jsonObj.get("ConfigurationAliases").isJsonNull()) {
        Map.validateJsonElement(jsonObj.get("ConfigurationAliases"));
      }
      // validate the optional field `DashConfiguration`
      if (jsonObj.get("DashConfiguration") != null && !jsonObj.get("DashConfiguration").isJsonNull()) {
        GetPlaybackConfigurationResponseDashConfiguration.validateJsonElement(jsonObj.get("DashConfiguration"));
      }
      // validate the optional field `HlsConfiguration`
      if (jsonObj.get("HlsConfiguration") != null && !jsonObj.get("HlsConfiguration").isJsonNull()) {
        GetPlaybackConfigurationResponseHlsConfiguration.validateJsonElement(jsonObj.get("HlsConfiguration"));
      }
      // validate the optional field `LivePreRollConfiguration`
      if (jsonObj.get("LivePreRollConfiguration") != null && !jsonObj.get("LivePreRollConfiguration").isJsonNull()) {
        GetPlaybackConfigurationResponseLivePreRollConfiguration.validateJsonElement(jsonObj.get("LivePreRollConfiguration"));
      }
      // validate the optional field `LogConfiguration`
      if (jsonObj.get("LogConfiguration") != null && !jsonObj.get("LogConfiguration").isJsonNull()) {
        GetPlaybackConfigurationResponseLogConfiguration.validateJsonElement(jsonObj.get("LogConfiguration"));
      }
      // validate the optional field `ManifestProcessingRules`
      if (jsonObj.get("ManifestProcessingRules") != null && !jsonObj.get("ManifestProcessingRules").isJsonNull()) {
        GetPlaybackConfigurationResponseManifestProcessingRules.validateJsonElement(jsonObj.get("ManifestProcessingRules"));
      }
      // validate the optional field `Name`
      if (jsonObj.get("Name") != null && !jsonObj.get("Name").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("Name"));
      }
      // validate the optional field `PersonalizationThresholdSeconds`
      if (jsonObj.get("PersonalizationThresholdSeconds") != null && !jsonObj.get("PersonalizationThresholdSeconds").isJsonNull()) {
        Integer.validateJsonElement(jsonObj.get("PersonalizationThresholdSeconds"));
      }
      // validate the optional field `PlaybackConfigurationArn`
      if (jsonObj.get("PlaybackConfigurationArn") != null && !jsonObj.get("PlaybackConfigurationArn").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("PlaybackConfigurationArn"));
      }
      // validate the optional field `PlaybackEndpointPrefix`
      if (jsonObj.get("PlaybackEndpointPrefix") != null && !jsonObj.get("PlaybackEndpointPrefix").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("PlaybackEndpointPrefix"));
      }
      // validate the optional field `SessionInitializationEndpointPrefix`
      if (jsonObj.get("SessionInitializationEndpointPrefix") != null && !jsonObj.get("SessionInitializationEndpointPrefix").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("SessionInitializationEndpointPrefix"));
      }
      // validate the optional field `SlateAdUrl`
      if (jsonObj.get("SlateAdUrl") != null && !jsonObj.get("SlateAdUrl").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("SlateAdUrl"));
      }
      // validate the optional field `Tags`
      if (jsonObj.get("Tags") != null && !jsonObj.get("Tags").isJsonNull()) {
        Map.validateJsonElement(jsonObj.get("Tags"));
      }
      // validate the optional field `TranscodeProfileName`
      if (jsonObj.get("TranscodeProfileName") != null && !jsonObj.get("TranscodeProfileName").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("TranscodeProfileName"));
      }
      // validate the optional field `VideoContentSourceUrl`
      if (jsonObj.get("VideoContentSourceUrl") != null && !jsonObj.get("VideoContentSourceUrl").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("VideoContentSourceUrl"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!PutPlaybackConfigurationResponse.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'PutPlaybackConfigurationResponse' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<PutPlaybackConfigurationResponse> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(PutPlaybackConfigurationResponse.class));

       return (TypeAdapter<T>) new TypeAdapter<PutPlaybackConfigurationResponse>() {
           @Override
           public void write(JsonWriter out, PutPlaybackConfigurationResponse value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public PutPlaybackConfigurationResponse read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of PutPlaybackConfigurationResponse given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of PutPlaybackConfigurationResponse
   * @throws IOException if the JSON string is invalid with respect to PutPlaybackConfigurationResponse
   */
  public static PutPlaybackConfigurationResponse fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, PutPlaybackConfigurationResponse.class);
  }

  /**
   * Convert an instance of PutPlaybackConfigurationResponse to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

