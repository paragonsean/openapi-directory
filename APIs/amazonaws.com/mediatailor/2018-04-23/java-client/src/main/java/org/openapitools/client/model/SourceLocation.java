/*
 * AWS MediaTailor
 * <p>Use the AWS Elemental MediaTailor SDKs and CLI to configure scalable ad insertion and linear channels. With MediaTailor, you can assemble existing content into a linear stream and serve targeted ads to viewers while maintaining broadcast quality in over-the-top (OTT) video applications. For information about using the service, including detailed information about the settings covered in this guide, see the <a href=\"https://docs.aws.amazon.com/mediatailor/latest/ug/\">AWS Elemental MediaTailor User Guide</a>.</p> <p>Through the SDKs and the CLI you manage AWS Elemental MediaTailor configurations and channels the same as you do through the console. For example, you specify ad insertion behavior and mapping information for the origin server and the ad decision server (ADS).</p>
 *
 * The version of the OpenAPI document: 2018-04-23
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.time.OffsetDateTime;
import java.util.Arrays;
import java.util.List;
import java.util.Map;
import org.openapitools.client.model.DescribeSourceLocationResponseAccessConfiguration;
import org.openapitools.client.model.SourceLocationDefaultSegmentDeliveryConfiguration;
import org.openapitools.client.model.UpdateSourceLocationResponseHttpConfiguration;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * A source location is a container for sources. For more information about source locations, see &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/mediatailor/latest/ug/channel-assembly-source-locations.html\&quot;&gt;Working with source locations&lt;/a&gt; in the &lt;i&gt;MediaTailor User Guide&lt;/i&gt;.
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T12:02:49.240114-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class SourceLocation {
  public static final String SERIALIZED_NAME_ACCESS_CONFIGURATION = "AccessConfiguration";
  @SerializedName(SERIALIZED_NAME_ACCESS_CONFIGURATION)
  private DescribeSourceLocationResponseAccessConfiguration accessConfiguration;

  public static final String SERIALIZED_NAME_ARN = "Arn";
  @SerializedName(SERIALIZED_NAME_ARN)
  private String arn;

  public static final String SERIALIZED_NAME_CREATION_TIME = "CreationTime";
  @SerializedName(SERIALIZED_NAME_CREATION_TIME)
  private OffsetDateTime creationTime;

  public static final String SERIALIZED_NAME_DEFAULT_SEGMENT_DELIVERY_CONFIGURATION = "DefaultSegmentDeliveryConfiguration";
  @SerializedName(SERIALIZED_NAME_DEFAULT_SEGMENT_DELIVERY_CONFIGURATION)
  private SourceLocationDefaultSegmentDeliveryConfiguration defaultSegmentDeliveryConfiguration;

  public static final String SERIALIZED_NAME_HTTP_CONFIGURATION = "HttpConfiguration";
  @SerializedName(SERIALIZED_NAME_HTTP_CONFIGURATION)
  private UpdateSourceLocationResponseHttpConfiguration httpConfiguration;

  public static final String SERIALIZED_NAME_LAST_MODIFIED_TIME = "LastModifiedTime";
  @SerializedName(SERIALIZED_NAME_LAST_MODIFIED_TIME)
  private OffsetDateTime lastModifiedTime;

  public static final String SERIALIZED_NAME_SEGMENT_DELIVERY_CONFIGURATIONS = "SegmentDeliveryConfigurations";
  @SerializedName(SERIALIZED_NAME_SEGMENT_DELIVERY_CONFIGURATIONS)
  private List segmentDeliveryConfigurations;

  public static final String SERIALIZED_NAME_SOURCE_LOCATION_NAME = "SourceLocationName";
  @SerializedName(SERIALIZED_NAME_SOURCE_LOCATION_NAME)
  private String sourceLocationName;

  public static final String SERIALIZED_NAME_TAGS = "Tags";
  @SerializedName(SERIALIZED_NAME_TAGS)
  private Map tags;

  public SourceLocation() {
  }

  public SourceLocation accessConfiguration(DescribeSourceLocationResponseAccessConfiguration accessConfiguration) {
    this.accessConfiguration = accessConfiguration;
    return this;
  }

  /**
   * Get accessConfiguration
   * @return accessConfiguration
   */
  @javax.annotation.Nullable
  public DescribeSourceLocationResponseAccessConfiguration getAccessConfiguration() {
    return accessConfiguration;
  }

  public void setAccessConfiguration(DescribeSourceLocationResponseAccessConfiguration accessConfiguration) {
    this.accessConfiguration = accessConfiguration;
  }


  public SourceLocation arn(String arn) {
    this.arn = arn;
    return this;
  }

  /**
   * Get arn
   * @return arn
   */
  @javax.annotation.Nonnull
  public String getArn() {
    return arn;
  }

  public void setArn(String arn) {
    this.arn = arn;
  }


  public SourceLocation creationTime(OffsetDateTime creationTime) {
    this.creationTime = creationTime;
    return this;
  }

  /**
   * Get creationTime
   * @return creationTime
   */
  @javax.annotation.Nullable
  public OffsetDateTime getCreationTime() {
    return creationTime;
  }

  public void setCreationTime(OffsetDateTime creationTime) {
    this.creationTime = creationTime;
  }


  public SourceLocation defaultSegmentDeliveryConfiguration(SourceLocationDefaultSegmentDeliveryConfiguration defaultSegmentDeliveryConfiguration) {
    this.defaultSegmentDeliveryConfiguration = defaultSegmentDeliveryConfiguration;
    return this;
  }

  /**
   * Get defaultSegmentDeliveryConfiguration
   * @return defaultSegmentDeliveryConfiguration
   */
  @javax.annotation.Nullable
  public SourceLocationDefaultSegmentDeliveryConfiguration getDefaultSegmentDeliveryConfiguration() {
    return defaultSegmentDeliveryConfiguration;
  }

  public void setDefaultSegmentDeliveryConfiguration(SourceLocationDefaultSegmentDeliveryConfiguration defaultSegmentDeliveryConfiguration) {
    this.defaultSegmentDeliveryConfiguration = defaultSegmentDeliveryConfiguration;
  }


  public SourceLocation httpConfiguration(UpdateSourceLocationResponseHttpConfiguration httpConfiguration) {
    this.httpConfiguration = httpConfiguration;
    return this;
  }

  /**
   * Get httpConfiguration
   * @return httpConfiguration
   */
  @javax.annotation.Nonnull
  public UpdateSourceLocationResponseHttpConfiguration getHttpConfiguration() {
    return httpConfiguration;
  }

  public void setHttpConfiguration(UpdateSourceLocationResponseHttpConfiguration httpConfiguration) {
    this.httpConfiguration = httpConfiguration;
  }


  public SourceLocation lastModifiedTime(OffsetDateTime lastModifiedTime) {
    this.lastModifiedTime = lastModifiedTime;
    return this;
  }

  /**
   * Get lastModifiedTime
   * @return lastModifiedTime
   */
  @javax.annotation.Nullable
  public OffsetDateTime getLastModifiedTime() {
    return lastModifiedTime;
  }

  public void setLastModifiedTime(OffsetDateTime lastModifiedTime) {
    this.lastModifiedTime = lastModifiedTime;
  }


  public SourceLocation segmentDeliveryConfigurations(List segmentDeliveryConfigurations) {
    this.segmentDeliveryConfigurations = segmentDeliveryConfigurations;
    return this;
  }

  /**
   * Get segmentDeliveryConfigurations
   * @return segmentDeliveryConfigurations
   */
  @javax.annotation.Nullable
  public List getSegmentDeliveryConfigurations() {
    return segmentDeliveryConfigurations;
  }

  public void setSegmentDeliveryConfigurations(List segmentDeliveryConfigurations) {
    this.segmentDeliveryConfigurations = segmentDeliveryConfigurations;
  }


  public SourceLocation sourceLocationName(String sourceLocationName) {
    this.sourceLocationName = sourceLocationName;
    return this;
  }

  /**
   * Get sourceLocationName
   * @return sourceLocationName
   */
  @javax.annotation.Nonnull
  public String getSourceLocationName() {
    return sourceLocationName;
  }

  public void setSourceLocationName(String sourceLocationName) {
    this.sourceLocationName = sourceLocationName;
  }


  public SourceLocation tags(Map tags) {
    this.tags = tags;
    return this;
  }

  /**
   * Get tags
   * @return tags
   */
  @javax.annotation.Nullable
  public Map getTags() {
    return tags;
  }

  public void setTags(Map tags) {
    this.tags = tags;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    SourceLocation sourceLocation = (SourceLocation) o;
    return Objects.equals(this.accessConfiguration, sourceLocation.accessConfiguration) &&
        Objects.equals(this.arn, sourceLocation.arn) &&
        Objects.equals(this.creationTime, sourceLocation.creationTime) &&
        Objects.equals(this.defaultSegmentDeliveryConfiguration, sourceLocation.defaultSegmentDeliveryConfiguration) &&
        Objects.equals(this.httpConfiguration, sourceLocation.httpConfiguration) &&
        Objects.equals(this.lastModifiedTime, sourceLocation.lastModifiedTime) &&
        Objects.equals(this.segmentDeliveryConfigurations, sourceLocation.segmentDeliveryConfigurations) &&
        Objects.equals(this.sourceLocationName, sourceLocation.sourceLocationName) &&
        Objects.equals(this.tags, sourceLocation.tags);
  }

  @Override
  public int hashCode() {
    return Objects.hash(accessConfiguration, arn, creationTime, defaultSegmentDeliveryConfiguration, httpConfiguration, lastModifiedTime, segmentDeliveryConfigurations, sourceLocationName, tags);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class SourceLocation {\n");
    sb.append("    accessConfiguration: ").append(toIndentedString(accessConfiguration)).append("\n");
    sb.append("    arn: ").append(toIndentedString(arn)).append("\n");
    sb.append("    creationTime: ").append(toIndentedString(creationTime)).append("\n");
    sb.append("    defaultSegmentDeliveryConfiguration: ").append(toIndentedString(defaultSegmentDeliveryConfiguration)).append("\n");
    sb.append("    httpConfiguration: ").append(toIndentedString(httpConfiguration)).append("\n");
    sb.append("    lastModifiedTime: ").append(toIndentedString(lastModifiedTime)).append("\n");
    sb.append("    segmentDeliveryConfigurations: ").append(toIndentedString(segmentDeliveryConfigurations)).append("\n");
    sb.append("    sourceLocationName: ").append(toIndentedString(sourceLocationName)).append("\n");
    sb.append("    tags: ").append(toIndentedString(tags)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("AccessConfiguration");
    openapiFields.add("Arn");
    openapiFields.add("CreationTime");
    openapiFields.add("DefaultSegmentDeliveryConfiguration");
    openapiFields.add("HttpConfiguration");
    openapiFields.add("LastModifiedTime");
    openapiFields.add("SegmentDeliveryConfigurations");
    openapiFields.add("SourceLocationName");
    openapiFields.add("Tags");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
    openapiRequiredFields.add("Arn");
    openapiRequiredFields.add("HttpConfiguration");
    openapiRequiredFields.add("SourceLocationName");
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to SourceLocation
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!SourceLocation.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in SourceLocation is not found in the empty JSON string", SourceLocation.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!SourceLocation.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `SourceLocation` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }

      // check to make sure all required properties/fields are present in the JSON string
      for (String requiredField : SourceLocation.openapiRequiredFields) {
        if (jsonElement.getAsJsonObject().get(requiredField) == null) {
          throw new IllegalArgumentException(String.format("The required field `%s` is not found in the JSON string: %s", requiredField, jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // validate the optional field `AccessConfiguration`
      if (jsonObj.get("AccessConfiguration") != null && !jsonObj.get("AccessConfiguration").isJsonNull()) {
        DescribeSourceLocationResponseAccessConfiguration.validateJsonElement(jsonObj.get("AccessConfiguration"));
      }
      // validate the required field `Arn`
      String.validateJsonElement(jsonObj.get("Arn"));
      // validate the optional field `CreationTime`
      if (jsonObj.get("CreationTime") != null && !jsonObj.get("CreationTime").isJsonNull()) {
        OffsetDateTime.validateJsonElement(jsonObj.get("CreationTime"));
      }
      // validate the optional field `DefaultSegmentDeliveryConfiguration`
      if (jsonObj.get("DefaultSegmentDeliveryConfiguration") != null && !jsonObj.get("DefaultSegmentDeliveryConfiguration").isJsonNull()) {
        SourceLocationDefaultSegmentDeliveryConfiguration.validateJsonElement(jsonObj.get("DefaultSegmentDeliveryConfiguration"));
      }
      // validate the required field `HttpConfiguration`
      UpdateSourceLocationResponseHttpConfiguration.validateJsonElement(jsonObj.get("HttpConfiguration"));
      // validate the optional field `LastModifiedTime`
      if (jsonObj.get("LastModifiedTime") != null && !jsonObj.get("LastModifiedTime").isJsonNull()) {
        OffsetDateTime.validateJsonElement(jsonObj.get("LastModifiedTime"));
      }
      // validate the optional field `SegmentDeliveryConfigurations`
      if (jsonObj.get("SegmentDeliveryConfigurations") != null && !jsonObj.get("SegmentDeliveryConfigurations").isJsonNull()) {
        List.validateJsonElement(jsonObj.get("SegmentDeliveryConfigurations"));
      }
      // validate the required field `SourceLocationName`
      String.validateJsonElement(jsonObj.get("SourceLocationName"));
      // validate the optional field `Tags`
      if (jsonObj.get("Tags") != null && !jsonObj.get("Tags").isJsonNull()) {
        Map.validateJsonElement(jsonObj.get("Tags"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!SourceLocation.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'SourceLocation' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<SourceLocation> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(SourceLocation.class));

       return (TypeAdapter<T>) new TypeAdapter<SourceLocation>() {
           @Override
           public void write(JsonWriter out, SourceLocation value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public SourceLocation read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of SourceLocation given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of SourceLocation
   * @throws IOException if the JSON string is invalid with respect to SourceLocation
   */
  public static SourceLocation fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, SourceLocation.class);
  }

  /**
   * Convert an instance of SourceLocation to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

