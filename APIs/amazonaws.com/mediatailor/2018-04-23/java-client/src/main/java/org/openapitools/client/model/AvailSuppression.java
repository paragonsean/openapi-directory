/*
 * AWS MediaTailor
 * <p>Use the AWS Elemental MediaTailor SDKs and CLI to configure scalable ad insertion and linear channels. With MediaTailor, you can assemble existing content into a linear stream and serve targeted ads to viewers while maintaining broadcast quality in over-the-top (OTT) video applications. For information about using the service, including detailed information about the settings covered in this guide, see the <a href=\"https://docs.aws.amazon.com/mediatailor/latest/ug/\">AWS Elemental MediaTailor User Guide</a>.</p> <p>Through the SDKs and the CLI you manage AWS Elemental MediaTailor configurations and channels the same as you do through the console. For example, you specify ad insertion behavior and mapping information for the origin server and the ad decision server (ADS).</p>
 *
 * The version of the OpenAPI document: 2018-04-23
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;
import org.openapitools.client.model.FillPolicy;
import org.openapitools.client.model.Mode;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * The configuration for avail suppression, also known as ad suppression. For more information about ad suppression, see &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/mediatailor/latest/ug/ad-behavior.html\&quot;&gt;Ad Suppression&lt;/a&gt;.
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T12:02:49.240114-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class AvailSuppression {
  public static final String SERIALIZED_NAME_FILL_POLICY = "FillPolicy";
  @SerializedName(SERIALIZED_NAME_FILL_POLICY)
  private FillPolicy fillPolicy;

  public static final String SERIALIZED_NAME_MODE = "Mode";
  @SerializedName(SERIALIZED_NAME_MODE)
  private Mode mode;

  public static final String SERIALIZED_NAME_VALUE = "Value";
  @SerializedName(SERIALIZED_NAME_VALUE)
  private String value;

  public AvailSuppression() {
  }

  public AvailSuppression fillPolicy(FillPolicy fillPolicy) {
    this.fillPolicy = fillPolicy;
    return this;
  }

  /**
   * Get fillPolicy
   * @return fillPolicy
   */
  @javax.annotation.Nullable
  public FillPolicy getFillPolicy() {
    return fillPolicy;
  }

  public void setFillPolicy(FillPolicy fillPolicy) {
    this.fillPolicy = fillPolicy;
  }


  public AvailSuppression mode(Mode mode) {
    this.mode = mode;
    return this;
  }

  /**
   * Get mode
   * @return mode
   */
  @javax.annotation.Nullable
  public Mode getMode() {
    return mode;
  }

  public void setMode(Mode mode) {
    this.mode = mode;
  }


  public AvailSuppression value(String value) {
    this.value = value;
    return this;
  }

  /**
   * Get value
   * @return value
   */
  @javax.annotation.Nullable
  public String getValue() {
    return value;
  }

  public void setValue(String value) {
    this.value = value;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    AvailSuppression availSuppression = (AvailSuppression) o;
    return Objects.equals(this.fillPolicy, availSuppression.fillPolicy) &&
        Objects.equals(this.mode, availSuppression.mode) &&
        Objects.equals(this.value, availSuppression.value);
  }

  @Override
  public int hashCode() {
    return Objects.hash(fillPolicy, mode, value);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class AvailSuppression {\n");
    sb.append("    fillPolicy: ").append(toIndentedString(fillPolicy)).append("\n");
    sb.append("    mode: ").append(toIndentedString(mode)).append("\n");
    sb.append("    value: ").append(toIndentedString(value)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("FillPolicy");
    openapiFields.add("Mode");
    openapiFields.add("Value");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to AvailSuppression
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!AvailSuppression.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in AvailSuppression is not found in the empty JSON string", AvailSuppression.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!AvailSuppression.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `AvailSuppression` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // validate the optional field `FillPolicy`
      if (jsonObj.get("FillPolicy") != null && !jsonObj.get("FillPolicy").isJsonNull()) {
        FillPolicy.validateJsonElement(jsonObj.get("FillPolicy"));
      }
      // validate the optional field `Mode`
      if (jsonObj.get("Mode") != null && !jsonObj.get("Mode").isJsonNull()) {
        Mode.validateJsonElement(jsonObj.get("Mode"));
      }
      // validate the optional field `Value`
      if (jsonObj.get("Value") != null && !jsonObj.get("Value").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("Value"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!AvailSuppression.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'AvailSuppression' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<AvailSuppression> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(AvailSuppression.class));

       return (TypeAdapter<T>) new TypeAdapter<AvailSuppression>() {
           @Override
           public void write(JsonWriter out, AvailSuppression value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public AvailSuppression read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of AvailSuppression given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of AvailSuppression
   * @throws IOException if the JSON string is invalid with respect to AvailSuppression
   */
  public static AvailSuppression fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, AvailSuppression.class);
  }

  /**
   * Convert an instance of AvailSuppression to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

