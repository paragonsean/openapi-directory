/*
 * AWS MediaTailor
 * <p>Use the AWS Elemental MediaTailor SDKs and CLI to configure scalable ad insertion and linear channels. With MediaTailor, you can assemble existing content into a linear stream and serve targeted ads to viewers while maintaining broadcast quality in over-the-top (OTT) video applications. For information about using the service, including detailed information about the settings covered in this guide, see the <a href=\"https://docs.aws.amazon.com/mediatailor/latest/ug/\">AWS Elemental MediaTailor User Guide</a>.</p> <p>Through the SDKs and the CLI you manage AWS Elemental MediaTailor configurations and channels the same as you do through the console. For example, you specify ad insertion behavior and mapping information for the origin server and the ad decision server (ADS).</p>
 *
 * The version of the OpenAPI document: 2018-04-23
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * The configuration for using a content delivery network (CDN), like Amazon CloudFront, for content and ad segment management.
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T12:02:49.240114-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class PutPlaybackConfigurationRequestCdnConfiguration {
  public static final String SERIALIZED_NAME_AD_SEGMENT_URL_PREFIX = "AdSegmentUrlPrefix";
  @SerializedName(SERIALIZED_NAME_AD_SEGMENT_URL_PREFIX)
  private String adSegmentUrlPrefix;

  public static final String SERIALIZED_NAME_CONTENT_SEGMENT_URL_PREFIX = "ContentSegmentUrlPrefix";
  @SerializedName(SERIALIZED_NAME_CONTENT_SEGMENT_URL_PREFIX)
  private String contentSegmentUrlPrefix;

  public PutPlaybackConfigurationRequestCdnConfiguration() {
  }

  public PutPlaybackConfigurationRequestCdnConfiguration adSegmentUrlPrefix(String adSegmentUrlPrefix) {
    this.adSegmentUrlPrefix = adSegmentUrlPrefix;
    return this;
  }

  /**
   * Get adSegmentUrlPrefix
   * @return adSegmentUrlPrefix
   */
  @javax.annotation.Nullable
  public String getAdSegmentUrlPrefix() {
    return adSegmentUrlPrefix;
  }

  public void setAdSegmentUrlPrefix(String adSegmentUrlPrefix) {
    this.adSegmentUrlPrefix = adSegmentUrlPrefix;
  }


  public PutPlaybackConfigurationRequestCdnConfiguration contentSegmentUrlPrefix(String contentSegmentUrlPrefix) {
    this.contentSegmentUrlPrefix = contentSegmentUrlPrefix;
    return this;
  }

  /**
   * Get contentSegmentUrlPrefix
   * @return contentSegmentUrlPrefix
   */
  @javax.annotation.Nullable
  public String getContentSegmentUrlPrefix() {
    return contentSegmentUrlPrefix;
  }

  public void setContentSegmentUrlPrefix(String contentSegmentUrlPrefix) {
    this.contentSegmentUrlPrefix = contentSegmentUrlPrefix;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    PutPlaybackConfigurationRequestCdnConfiguration putPlaybackConfigurationRequestCdnConfiguration = (PutPlaybackConfigurationRequestCdnConfiguration) o;
    return Objects.equals(this.adSegmentUrlPrefix, putPlaybackConfigurationRequestCdnConfiguration.adSegmentUrlPrefix) &&
        Objects.equals(this.contentSegmentUrlPrefix, putPlaybackConfigurationRequestCdnConfiguration.contentSegmentUrlPrefix);
  }

  @Override
  public int hashCode() {
    return Objects.hash(adSegmentUrlPrefix, contentSegmentUrlPrefix);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class PutPlaybackConfigurationRequestCdnConfiguration {\n");
    sb.append("    adSegmentUrlPrefix: ").append(toIndentedString(adSegmentUrlPrefix)).append("\n");
    sb.append("    contentSegmentUrlPrefix: ").append(toIndentedString(contentSegmentUrlPrefix)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("AdSegmentUrlPrefix");
    openapiFields.add("ContentSegmentUrlPrefix");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to PutPlaybackConfigurationRequestCdnConfiguration
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!PutPlaybackConfigurationRequestCdnConfiguration.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in PutPlaybackConfigurationRequestCdnConfiguration is not found in the empty JSON string", PutPlaybackConfigurationRequestCdnConfiguration.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!PutPlaybackConfigurationRequestCdnConfiguration.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `PutPlaybackConfigurationRequestCdnConfiguration` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // validate the optional field `AdSegmentUrlPrefix`
      if (jsonObj.get("AdSegmentUrlPrefix") != null && !jsonObj.get("AdSegmentUrlPrefix").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("AdSegmentUrlPrefix"));
      }
      // validate the optional field `ContentSegmentUrlPrefix`
      if (jsonObj.get("ContentSegmentUrlPrefix") != null && !jsonObj.get("ContentSegmentUrlPrefix").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("ContentSegmentUrlPrefix"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!PutPlaybackConfigurationRequestCdnConfiguration.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'PutPlaybackConfigurationRequestCdnConfiguration' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<PutPlaybackConfigurationRequestCdnConfiguration> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(PutPlaybackConfigurationRequestCdnConfiguration.class));

       return (TypeAdapter<T>) new TypeAdapter<PutPlaybackConfigurationRequestCdnConfiguration>() {
           @Override
           public void write(JsonWriter out, PutPlaybackConfigurationRequestCdnConfiguration value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public PutPlaybackConfigurationRequestCdnConfiguration read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of PutPlaybackConfigurationRequestCdnConfiguration given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of PutPlaybackConfigurationRequestCdnConfiguration
   * @throws IOException if the JSON string is invalid with respect to PutPlaybackConfigurationRequestCdnConfiguration
   */
  public static PutPlaybackConfigurationRequestCdnConfiguration fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, PutPlaybackConfigurationRequestCdnConfiguration.class);
  }

  /**
   * Convert an instance of PutPlaybackConfigurationRequestCdnConfiguration to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

