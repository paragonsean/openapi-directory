/**
 * Amazon EventBridge
 * <p>Amazon EventBridge helps you to respond to state changes in your Amazon Web Services resources. When your resources change state, they automatically send events to an event stream. You can create rules that match selected events in the stream and route them to targets to take action. You can also use rules to take action on a predetermined schedule. For example, you can configure rules to:</p> <ul> <li> <p>Automatically invoke an Lambda function to update DNS entries when an event notifies you that Amazon EC2 instance enters the running state.</p> </li> <li> <p>Direct specific API records from CloudTrail to an Amazon Kinesis data stream for detailed analysis of potential security or availability risks.</p> </li> <li> <p>Periodically invoke a built-in target to create a snapshot of an Amazon EBS volume.</p> </li> </ul> <p>For more information about the features of Amazon EventBridge, see the <a href=\"https://docs.aws.amazon.com/eventbridge/latest/userguide\">Amazon EventBridge User Guide</a>.</p>
 *
 * The version of the OpenAPI document: 2015-10-07
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAICreateEndpointRequest.h
 *
 * 
 */

#ifndef OAICreateEndpointRequest_H
#define OAICreateEndpointRequest_H

#include <QJsonObject>

#include "OAICreateEndpointRequest_ReplicationConfig.h"
#include "OAICreateEndpointRequest_RoutingConfig.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAICreateEndpointRequest_RoutingConfig;
class OAICreateEndpointRequest_ReplicationConfig;

class OAICreateEndpointRequest : public OAIObject {
public:
    OAICreateEndpointRequest();
    OAICreateEndpointRequest(QString json);
    ~OAICreateEndpointRequest() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getName() const;
    void setName(const QString &name);
    bool is_name_Set() const;
    bool is_name_Valid() const;

    QString getDescription() const;
    void setDescription(const QString &description);
    bool is_description_Set() const;
    bool is_description_Valid() const;

    OAICreateEndpointRequest_RoutingConfig getRoutingConfig() const;
    void setRoutingConfig(const OAICreateEndpointRequest_RoutingConfig &routing_config);
    bool is_routing_config_Set() const;
    bool is_routing_config_Valid() const;

    OAICreateEndpointRequest_ReplicationConfig getReplicationConfig() const;
    void setReplicationConfig(const OAICreateEndpointRequest_ReplicationConfig &replication_config);
    bool is_replication_config_Set() const;
    bool is_replication_config_Valid() const;

    QList getEventBuses() const;
    void setEventBuses(const QList &event_buses);
    bool is_event_buses_Set() const;
    bool is_event_buses_Valid() const;

    QString getRoleArn() const;
    void setRoleArn(const QString &role_arn);
    bool is_role_arn_Set() const;
    bool is_role_arn_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_name;
    bool m_name_isSet;
    bool m_name_isValid;

    QString m_description;
    bool m_description_isSet;
    bool m_description_isValid;

    OAICreateEndpointRequest_RoutingConfig m_routing_config;
    bool m_routing_config_isSet;
    bool m_routing_config_isValid;

    OAICreateEndpointRequest_ReplicationConfig m_replication_config;
    bool m_replication_config_isSet;
    bool m_replication_config_isValid;

    QList m_event_buses;
    bool m_event_buses_isSet;
    bool m_event_buses_isValid;

    QString m_role_arn;
    bool m_role_arn_isSet;
    bool m_role_arn_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAICreateEndpointRequest)

#endif // OAICreateEndpointRequest_H
