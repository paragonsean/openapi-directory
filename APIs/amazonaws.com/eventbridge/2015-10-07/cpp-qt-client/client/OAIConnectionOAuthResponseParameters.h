/**
 * Amazon EventBridge
 * <p>Amazon EventBridge helps you to respond to state changes in your Amazon Web Services resources. When your resources change state, they automatically send events to an event stream. You can create rules that match selected events in the stream and route them to targets to take action. You can also use rules to take action on a predetermined schedule. For example, you can configure rules to:</p> <ul> <li> <p>Automatically invoke an Lambda function to update DNS entries when an event notifies you that Amazon EC2 instance enters the running state.</p> </li> <li> <p>Direct specific API records from CloudTrail to an Amazon Kinesis data stream for detailed analysis of potential security or availability risks.</p> </li> <li> <p>Periodically invoke a built-in target to create a snapshot of an Amazon EBS volume.</p> </li> </ul> <p>For more information about the features of Amazon EventBridge, see the <a href=\"https://docs.aws.amazon.com/eventbridge/latest/userguide\">Amazon EventBridge User Guide</a>.</p>
 *
 * The version of the OpenAPI document: 2015-10-07
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIConnectionOAuthResponseParameters.h
 *
 * Contains the response parameters when OAuth is specified as the authorization type.
 */

#ifndef OAIConnectionOAuthResponseParameters_H
#define OAIConnectionOAuthResponseParameters_H

#include <QJsonObject>

#include "OAIConnectionOAuthHttpMethod.h"
#include "OAIConnectionOAuthResponseParameters_ClientParameters.h"
#include "OAIConnectionOAuthResponseParameters_OAuthHttpParameters.h"
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIConnectionOAuthResponseParameters_ClientParameters;
class OAIConnectionOAuthResponseParameters_OAuthHttpParameters;

class OAIConnectionOAuthResponseParameters : public OAIObject {
public:
    OAIConnectionOAuthResponseParameters();
    OAIConnectionOAuthResponseParameters(QString json);
    ~OAIConnectionOAuthResponseParameters() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAIConnectionOAuthResponseParameters_ClientParameters getClientParameters() const;
    void setClientParameters(const OAIConnectionOAuthResponseParameters_ClientParameters &client_parameters);
    bool is_client_parameters_Set() const;
    bool is_client_parameters_Valid() const;

    QString getAuthorizationEndpoint() const;
    void setAuthorizationEndpoint(const QString &authorization_endpoint);
    bool is_authorization_endpoint_Set() const;
    bool is_authorization_endpoint_Valid() const;

    OAIConnectionOAuthHttpMethod getHttpMethod() const;
    void setHttpMethod(const OAIConnectionOAuthHttpMethod &http_method);
    bool is_http_method_Set() const;
    bool is_http_method_Valid() const;

    OAIConnectionOAuthResponseParameters_OAuthHttpParameters getOAuthHttpParameters() const;
    void setOAuthHttpParameters(const OAIConnectionOAuthResponseParameters_OAuthHttpParameters &o_auth_http_parameters);
    bool is_o_auth_http_parameters_Set() const;
    bool is_o_auth_http_parameters_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAIConnectionOAuthResponseParameters_ClientParameters m_client_parameters;
    bool m_client_parameters_isSet;
    bool m_client_parameters_isValid;

    QString m_authorization_endpoint;
    bool m_authorization_endpoint_isSet;
    bool m_authorization_endpoint_isValid;

    OAIConnectionOAuthHttpMethod m_http_method;
    bool m_http_method_isSet;
    bool m_http_method_isValid;

    OAIConnectionOAuthResponseParameters_OAuthHttpParameters m_o_auth_http_parameters;
    bool m_o_auth_http_parameters_isSet;
    bool m_o_auth_http_parameters_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIConnectionOAuthResponseParameters)

#endif // OAIConnectionOAuthResponseParameters_H
