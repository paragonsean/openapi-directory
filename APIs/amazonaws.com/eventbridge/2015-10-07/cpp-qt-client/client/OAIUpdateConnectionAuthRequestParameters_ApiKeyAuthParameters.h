/**
 * Amazon EventBridge
 * <p>Amazon EventBridge helps you to respond to state changes in your Amazon Web Services resources. When your resources change state, they automatically send events to an event stream. You can create rules that match selected events in the stream and route them to targets to take action. You can also use rules to take action on a predetermined schedule. For example, you can configure rules to:</p> <ul> <li> <p>Automatically invoke an Lambda function to update DNS entries when an event notifies you that Amazon EC2 instance enters the running state.</p> </li> <li> <p>Direct specific API records from CloudTrail to an Amazon Kinesis data stream for detailed analysis of potential security or availability risks.</p> </li> <li> <p>Periodically invoke a built-in target to create a snapshot of an Amazon EBS volume.</p> </li> </ul> <p>For more information about the features of Amazon EventBridge, see the <a href=\"https://docs.aws.amazon.com/eventbridge/latest/userguide\">Amazon EventBridge User Guide</a>.</p>
 *
 * The version of the OpenAPI document: 2015-10-07
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIUpdateConnectionAuthRequestParameters_ApiKeyAuthParameters.h
 *
 * 
 */

#ifndef OAIUpdateConnectionAuthRequestParameters_ApiKeyAuthParameters_H
#define OAIUpdateConnectionAuthRequestParameters_ApiKeyAuthParameters_H

#include <QJsonObject>

#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIUpdateConnectionAuthRequestParameters_ApiKeyAuthParameters : public OAIObject {
public:
    OAIUpdateConnectionAuthRequestParameters_ApiKeyAuthParameters();
    OAIUpdateConnectionAuthRequestParameters_ApiKeyAuthParameters(QString json);
    ~OAIUpdateConnectionAuthRequestParameters_ApiKeyAuthParameters() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getApiKeyName() const;
    void setApiKeyName(const QString &api_key_name);
    bool is_api_key_name_Set() const;
    bool is_api_key_name_Valid() const;

    QString getApiKeyValue() const;
    void setApiKeyValue(const QString &api_key_value);
    bool is_api_key_value_Set() const;
    bool is_api_key_value_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_api_key_name;
    bool m_api_key_name_isSet;
    bool m_api_key_name_isValid;

    QString m_api_key_value;
    bool m_api_key_value_isSet;
    bool m_api_key_value_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIUpdateConnectionAuthRequestParameters_ApiKeyAuthParameters)

#endif // OAIUpdateConnectionAuthRequestParameters_ApiKeyAuthParameters_H
