/**
 * Amazon EventBridge
 * <p>Amazon EventBridge helps you to respond to state changes in your Amazon Web Services resources. When your resources change state, they automatically send events to an event stream. You can create rules that match selected events in the stream and route them to targets to take action. You can also use rules to take action on a predetermined schedule. For example, you can configure rules to:</p> <ul> <li> <p>Automatically invoke an Lambda function to update DNS entries when an event notifies you that Amazon EC2 instance enters the running state.</p> </li> <li> <p>Direct specific API records from CloudTrail to an Amazon Kinesis data stream for detailed analysis of potential security or availability risks.</p> </li> <li> <p>Periodically invoke a built-in target to create a snapshot of an Amazon EBS volume.</p> </li> </ul> <p>For more information about the features of Amazon EventBridge, see the <a href=\"https://docs.aws.amazon.com/eventbridge/latest/userguide\">Amazon EventBridge User Guide</a>.</p>
 *
 * The version of the OpenAPI document: 2015-10-07
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIUpdateConnectionRequest.h
 *
 * 
 */

#ifndef OAIUpdateConnectionRequest_H
#define OAIUpdateConnectionRequest_H

#include <QJsonObject>

#include "OAIConnectionAuthorizationType.h"
#include "OAIUpdateConnectionRequest_AuthParameters.h"
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIUpdateConnectionRequest_AuthParameters;

class OAIUpdateConnectionRequest : public OAIObject {
public:
    OAIUpdateConnectionRequest();
    OAIUpdateConnectionRequest(QString json);
    ~OAIUpdateConnectionRequest() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getName() const;
    void setName(const QString &name);
    bool is_name_Set() const;
    bool is_name_Valid() const;

    QString getDescription() const;
    void setDescription(const QString &description);
    bool is_description_Set() const;
    bool is_description_Valid() const;

    OAIConnectionAuthorizationType getAuthorizationType() const;
    void setAuthorizationType(const OAIConnectionAuthorizationType &authorization_type);
    bool is_authorization_type_Set() const;
    bool is_authorization_type_Valid() const;

    OAIUpdateConnectionRequest_AuthParameters getAuthParameters() const;
    void setAuthParameters(const OAIUpdateConnectionRequest_AuthParameters &auth_parameters);
    bool is_auth_parameters_Set() const;
    bool is_auth_parameters_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_name;
    bool m_name_isSet;
    bool m_name_isValid;

    QString m_description;
    bool m_description_isSet;
    bool m_description_isValid;

    OAIConnectionAuthorizationType m_authorization_type;
    bool m_authorization_type_isSet;
    bool m_authorization_type_isValid;

    OAIUpdateConnectionRequest_AuthParameters m_auth_parameters;
    bool m_auth_parameters_isSet;
    bool m_auth_parameters_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIUpdateConnectionRequest)

#endif // OAIUpdateConnectionRequest_H
