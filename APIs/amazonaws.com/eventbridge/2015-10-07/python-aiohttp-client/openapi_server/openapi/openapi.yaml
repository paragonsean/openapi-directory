openapi: 3.0.0
info:
  contact:
    email: mike.ralphson@gmail.com
    name: Mike Ralphson
    url: https://github.com/mermade/aws2openapi
    x-twitter: PermittedSoc
  description: "<p>Amazon EventBridge helps you to respond to state changes in your\
    \ Amazon Web Services resources. When your resources change state, they automatically\
    \ send events to an event stream. You can create rules that match selected events\
    \ in the stream and route them to targets to take action. You can also use rules\
    \ to take action on a predetermined schedule. For example, you can configure rules\
    \ to:</p> <ul> <li> <p>Automatically invoke an Lambda function to update DNS entries\
    \ when an event notifies you that Amazon EC2 instance enters the running state.</p>\
    \ </li> <li> <p>Direct specific API records from CloudTrail to an Amazon Kinesis\
    \ data stream for detailed analysis of potential security or availability risks.</p>\
    \ </li> <li> <p>Periodically invoke a built-in target to create a snapshot of\
    \ an Amazon EBS volume.</p> </li> </ul> <p>For more information about the features\
    \ of Amazon EventBridge, see the <a href=\"https://docs.aws.amazon.com/eventbridge/latest/userguide\"\
    >Amazon EventBridge User Guide</a>.</p>"
  license:
    name: Apache 2.0 License
    url: http://www.apache.org/licenses/
  termsOfService: https://aws.amazon.com/service-terms/
  title: Amazon EventBridge
  version: 2015-10-07
  x-release: v4
  x-logo:
    url: https://twitter.com/awscloud/profile_image?size=original
    backgroundColor: '#FFFFFF'
  x-providerName: amazonaws.com
  x-serviceName: eventbridge
  x-origin:
  - contentType: application/json
    url: https://raw.githubusercontent.com/aws/aws-sdk-js/master/apis/eventbridge-2015-10-07.normal.json
    converter:
      url: https://github.com/mermade/aws2openapi
      version: 1.0.0
    x-apisguru-driver: external
  x-apiClientRegistration:
    url: https://portal.aws.amazon.com/gp/aws/developer/registration/index.html?nc2=h_ct
  x-apisguru-categories:
  - cloud
  x-preferred: true
externalDocs:
  description: Amazon Web Services documentation
  url: https://docs.aws.amazon.com/events/
servers:
- description: The Amazon EventBridge multi-region endpoint
  url: "http://events.{region}.amazonaws.com"
  variables:
    region:
      default: us-east-1
      description: The AWS region
      enum:
      - us-east-1
      - us-east-2
      - us-west-1
      - us-west-2
      - us-gov-west-1
      - us-gov-east-1
      - ca-central-1
      - eu-north-1
      - eu-west-1
      - eu-west-2
      - eu-west-3
      - eu-central-1
      - eu-south-1
      - af-south-1
      - ap-northeast-1
      - ap-northeast-2
      - ap-northeast-3
      - ap-southeast-1
      - ap-southeast-2
      - ap-east-1
      - ap-south-1
      - sa-east-1
      - me-south-1
- description: The Amazon EventBridge multi-region endpoint
  url: "https://events.{region}.amazonaws.com"
  variables:
    region:
      default: us-east-1
      description: The AWS region
      enum:
      - us-east-1
      - us-east-2
      - us-west-1
      - us-west-2
      - us-gov-west-1
      - us-gov-east-1
      - ca-central-1
      - eu-north-1
      - eu-west-1
      - eu-west-2
      - eu-west-3
      - eu-central-1
      - eu-south-1
      - af-south-1
      - ap-northeast-1
      - ap-northeast-2
      - ap-northeast-3
      - ap-southeast-1
      - ap-southeast-2
      - ap-east-1
      - ap-south-1
      - sa-east-1
      - me-south-1
- description: The Amazon EventBridge endpoint for China (Beijing) and China (Ningxia)
  url: "http://events.{region}.amazonaws.com.cn"
  variables:
    region:
      default: cn-north-1
      description: The AWS region
      enum:
      - cn-north-1
      - cn-northwest-1
- description: The Amazon EventBridge endpoint for China (Beijing) and China (Ningxia)
  url: "https://events.{region}.amazonaws.com.cn"
  variables:
    region:
      default: cn-north-1
      description: The AWS region
      enum:
      - cn-north-1
      - cn-northwest-1
security:
- hmac: []
paths:
  /#X-Amz-Target=AWSEvents.ActivateEventSource:
    post:
      description: "Activates a partner event source that has been deactivated. Once\
        \ activated, your matching event bus will start receiving events from the\
        \ event source."
      operationId: activate_event_source
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AWSEvents.ActivateEventSource
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ActivateEventSourceRequest'
        required: true
        x-body-name: body
      responses:
        "200":
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConcurrentModificationException'
          description: ConcurrentModificationException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidStateException'
          description: InvalidStateException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalException'
          description: InternalException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationDisabledException'
          description: OperationDisabledException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /#X-Amz-Target=AWSEvents.CancelReplay:
    post:
      description: Cancels the specified replay.
      operationId: cancel_replay
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AWSEvents.CancelReplay
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CancelReplayRequest'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CancelReplayResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConcurrentModificationException'
          description: ConcurrentModificationException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IllegalStatusException'
          description: IllegalStatusException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalException'
          description: InternalException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /#X-Amz-Target=AWSEvents.CreateApiDestination:
    post:
      description: "Creates an API destination, which is an HTTP invocation endpoint\
        \ configured as a target for events."
      operationId: create_api_destination
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AWSEvents.CreateApiDestination
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateApiDestinationRequest'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateApiDestinationResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceAlreadyExistsException'
          description: ResourceAlreadyExistsException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
          description: LimitExceededException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalException'
          description: InternalException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /#X-Amz-Target=AWSEvents.CreateArchive:
    post:
      description: "Creates an archive of events with the specified settings. When\
        \ you create an archive, incoming events might not immediately start being\
        \ sent to the archive. Allow a short period of time for changes to take effect.\
        \ If you do not specify a pattern to filter events sent to the archive, all\
        \ events are sent to the archive except replayed events. Replayed events are\
        \ not sent to an archive."
      operationId: create_archive
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AWSEvents.CreateArchive
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateArchiveRequest'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateArchiveResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConcurrentModificationException'
          description: ConcurrentModificationException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceAlreadyExistsException'
          description: ResourceAlreadyExistsException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalException'
          description: InternalException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
          description: LimitExceededException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidEventPatternException'
          description: InvalidEventPatternException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /#X-Amz-Target=AWSEvents.CreateConnection:
    post:
      description: Creates a connection. A connection defines the authorization type
        and credentials to use for authorization with an API destination HTTP endpoint.
      operationId: create_connection
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AWSEvents.CreateConnection
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateConnectionRequest'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateConnectionResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceAlreadyExistsException'
          description: ResourceAlreadyExistsException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
          description: LimitExceededException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalException'
          description: InternalException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /#X-Amz-Target=AWSEvents.CreateEndpoint:
    post:
      description: "Creates a global endpoint. Global endpoints improve your application's\
        \ availability by making it regional-fault tolerant. To do this, you define\
        \ a primary and secondary Region with event buses in each Region. You also\
        \ create a Amazon Route\_53 health check that will tell EventBridge to route\
        \ events to the secondary Region when an \"unhealthy\" state is encountered\
        \ and events will be routed back to the primary Region when the health check\
        \ reports a \"healthy\" state."
      operationId: create_endpoint
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AWSEvents.CreateEndpoint
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateEndpointRequest'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateEndpointResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceAlreadyExistsException'
          description: ResourceAlreadyExistsException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
          description: LimitExceededException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalException'
          description: InternalException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /#X-Amz-Target=AWSEvents.CreateEventBus:
    post:
      description: "Creates a new event bus within your account. This can be a custom\
        \ event bus which you can use to receive events from your custom applications\
        \ and services, or it can be a partner event bus which can be matched to a\
        \ partner event source."
      operationId: create_event_bus
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AWSEvents.CreateEventBus
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateEventBusRequest'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateEventBusResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceAlreadyExistsException'
          description: ResourceAlreadyExistsException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidStateException'
          description: InvalidStateException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalException'
          description: InternalException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConcurrentModificationException'
          description: ConcurrentModificationException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
          description: LimitExceededException
        "486":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationDisabledException'
          description: OperationDisabledException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /#X-Amz-Target=AWSEvents.CreatePartnerEventSource:
    post:
      description: "<p>Called by an SaaS partner to create a partner event source.\
        \ This operation is not used by Amazon Web Services customers.</p> <p>Each\
        \ partner event source can be used by one Amazon Web Services account to create\
        \ a matching partner event bus in that Amazon Web Services account. A SaaS\
        \ partner must create one partner event source for each Amazon Web Services\
        \ account that wants to receive those event types. </p> <p>A partner event\
        \ source creates events based on resources within the SaaS partner's service\
        \ or application.</p> <p>An Amazon Web Services account that creates a partner\
        \ event bus that matches the partner event source can use that event bus to\
        \ receive events from the partner, and then process them using Amazon Web\
        \ Services Events rules and targets.</p> <p>Partner event source names follow\
        \ this format:</p> <p> <code> <i>partner_name</i>/<i>event_namespace</i>/<i>event_name</i>\
        \ </code> </p> <p> <i>partner_name</i> is determined during partner registration\
        \ and identifies the partner to Amazon Web Services customers. <i>event_namespace</i>\
        \ is determined by the partner and is a way for the partner to categorize\
        \ their events. <i>event_name</i> is determined by the partner, and should\
        \ uniquely identify an event-generating resource within the partner system.\
        \ The combination of <i>event_namespace</i> and <i>event_name</i> should help\
        \ Amazon Web Services customers decide whether to create an event bus to receive\
        \ these events.</p>"
      operationId: create_partner_event_source
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AWSEvents.CreatePartnerEventSource
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreatePartnerEventSourceRequest'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreatePartnerEventSourceResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceAlreadyExistsException'
          description: ResourceAlreadyExistsException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalException'
          description: InternalException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConcurrentModificationException'
          description: ConcurrentModificationException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
          description: LimitExceededException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationDisabledException'
          description: OperationDisabledException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /#X-Amz-Target=AWSEvents.DeactivateEventSource:
    post:
      description: "<p>You can use this operation to temporarily stop receiving events\
        \ from the specified partner event source. The matching event bus is not deleted.\
        \ </p> <p>When you deactivate a partner event source, the source goes into\
        \ PENDING state. If it remains in PENDING state for more than two weeks, it\
        \ is deleted.</p> <p>To activate a deactivated partner event source, use <a\
        \ href=\"https://docs.aws.amazon.com/eventbridge/latest/APIReference/API_ActivateEventSource.html\"\
        >ActivateEventSource</a>.</p>"
      operationId: deactivate_event_source
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AWSEvents.DeactivateEventSource
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeactivateEventSourceRequest'
        required: true
        x-body-name: body
      responses:
        "200":
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConcurrentModificationException'
          description: ConcurrentModificationException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidStateException'
          description: InvalidStateException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalException'
          description: InternalException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationDisabledException'
          description: OperationDisabledException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /#X-Amz-Target=AWSEvents.DeauthorizeConnection:
    post:
      description: Removes all authorization parameters from the connection. This
        lets you remove the secret from the connection so you can reuse it without
        having to create a new connection.
      operationId: deauthorize_connection
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AWSEvents.DeauthorizeConnection
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeauthorizeConnectionRequest'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeauthorizeConnectionResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConcurrentModificationException'
          description: ConcurrentModificationException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalException'
          description: InternalException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /#X-Amz-Target=AWSEvents.DeleteApiDestination:
    post:
      description: Deletes the specified API destination.
      operationId: delete_api_destination
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AWSEvents.DeleteApiDestination
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeleteApiDestinationRequest'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteApiDestinationResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConcurrentModificationException'
          description: ConcurrentModificationException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalException'
          description: InternalException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /#X-Amz-Target=AWSEvents.DeleteArchive:
    post:
      description: Deletes the specified archive.
      operationId: delete_archive
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AWSEvents.DeleteArchive
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeleteArchiveRequest'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteArchiveResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConcurrentModificationException'
          description: ConcurrentModificationException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalException'
          description: InternalException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /#X-Amz-Target=AWSEvents.DeleteConnection:
    post:
      description: Deletes a connection.
      operationId: delete_connection
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AWSEvents.DeleteConnection
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeleteConnectionRequest'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteConnectionResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConcurrentModificationException'
          description: ConcurrentModificationException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalException'
          description: InternalException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /#X-Amz-Target=AWSEvents.DeleteEndpoint:
    post:
      description: "Delete an existing global endpoint. For more information about\
        \ global endpoints, see <a href=\"https://docs.aws.amazon.com/eventbridge/latest/userguide/eb-global-endpoints.html\"\
        >Making applications Regional-fault tolerant with global endpoints and event\
        \ replication</a> in the Amazon EventBridge User Guide."
      operationId: delete_endpoint
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AWSEvents.DeleteEndpoint
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeleteEndpointRequest'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteEndpointResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConcurrentModificationException'
          description: ConcurrentModificationException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalException'
          description: InternalException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /#X-Amz-Target=AWSEvents.DeleteEventBus:
    post:
      description: Deletes the specified custom event bus or partner event bus. All
        rules associated with this event bus need to be deleted. You can't delete
        your account's default event bus.
      operationId: delete_event_bus
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AWSEvents.DeleteEventBus
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeleteEventBusRequest'
        required: true
        x-body-name: body
      responses:
        "200":
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalException'
          description: InternalException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConcurrentModificationException'
          description: ConcurrentModificationException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /#X-Amz-Target=AWSEvents.DeletePartnerEventSource:
    post:
      description: "<p>This operation is used by SaaS partners to delete a partner\
        \ event source. This operation is not used by Amazon Web Services customers.</p>\
        \ <p>When you delete an event source, the status of the corresponding partner\
        \ event bus in the Amazon Web Services customer account becomes DELETED.</p>\
        \ <p/>"
      operationId: delete_partner_event_source
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AWSEvents.DeletePartnerEventSource
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeletePartnerEventSourceRequest'
        required: true
        x-body-name: body
      responses:
        "200":
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalException'
          description: InternalException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConcurrentModificationException'
          description: ConcurrentModificationException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationDisabledException'
          description: OperationDisabledException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /#X-Amz-Target=AWSEvents.DeleteRule:
    post:
      description: "<p>Deletes the specified rule.</p> <p>Before you can delete the\
        \ rule, you must remove all targets, using <a href=\"https://docs.aws.amazon.com/eventbridge/latest/APIReference/API_RemoveTargets.html\"\
        >RemoveTargets</a>.</p> <p>When you delete a rule, incoming events might continue\
        \ to match to the deleted rule. Allow a short period of time for changes to\
        \ take effect.</p> <p>If you call delete rule multiple times for the same\
        \ rule, all calls will succeed. When you call delete rule for a non-existent\
        \ custom eventbus, <code>ResourceNotFoundException</code> is returned.</p>\
        \ <p>Managed rules are rules created and managed by another Amazon Web Services\
        \ service on your behalf. These rules are created by those other Amazon Web\
        \ Services services to support functionality in those services. You can delete\
        \ these rules using the <code>Force</code> option, but you should do so only\
        \ if you are sure the other service is not still using that rule.</p>"
      operationId: delete_rule
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AWSEvents.DeleteRule
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeleteRuleRequest'
        required: true
        x-body-name: body
      responses:
        "200":
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConcurrentModificationException'
          description: ConcurrentModificationException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ManagedRuleException'
          description: ManagedRuleException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalException'
          description: InternalException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /#X-Amz-Target=AWSEvents.DescribeApiDestination:
    post:
      description: Retrieves details about an API destination.
      operationId: describe_api_destination
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AWSEvents.DescribeApiDestination
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DescribeApiDestinationRequest'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DescribeApiDestinationResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalException'
          description: InternalException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /#X-Amz-Target=AWSEvents.DescribeArchive:
    post:
      description: Retrieves details about an archive.
      operationId: describe_archive
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AWSEvents.DescribeArchive
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DescribeArchiveRequest'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DescribeArchiveResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceAlreadyExistsException'
          description: ResourceAlreadyExistsException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalException'
          description: InternalException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /#X-Amz-Target=AWSEvents.DescribeConnection:
    post:
      description: Retrieves details about a connection.
      operationId: describe_connection
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AWSEvents.DescribeConnection
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DescribeConnectionRequest'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DescribeConnectionResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalException'
          description: InternalException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /#X-Amz-Target=AWSEvents.DescribeEndpoint:
    post:
      description: "Get the information about an existing global endpoint. For more\
        \ information about global endpoints, see <a href=\"https://docs.aws.amazon.com/eventbridge/latest/userguide/eb-global-endpoints.html\"\
        >Making applications Regional-fault tolerant with global endpoints and event\
        \ replication</a> in the Amazon EventBridge User Guide.."
      operationId: describe_endpoint
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AWSEvents.DescribeEndpoint
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DescribeEndpointRequest'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DescribeEndpointResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalException'
          description: InternalException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /#X-Amz-Target=AWSEvents.DescribeEventBus:
    post:
      description: "<p>Displays details about an event bus in your account. This can\
        \ include the external Amazon Web Services accounts that are permitted to\
        \ write events to your default event bus, and the associated policy. For custom\
        \ event buses and partner event buses, it displays the name, ARN, policy,\
        \ state, and creation time.</p> <p> To enable your account to receive events\
        \ from other accounts on its default event bus, use <a href=\"https://docs.aws.amazon.com/eventbridge/latest/APIReference/API_PutPermission.html\"\
        >PutPermission</a>.</p> <p>For more information about partner event buses,\
        \ see <a href=\"https://docs.aws.amazon.com/eventbridge/latest/APIReference/API_CreateEventBus.html\"\
        >CreateEventBus</a>.</p>"
      operationId: describe_event_bus
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AWSEvents.DescribeEventBus
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DescribeEventBusRequest'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DescribeEventBusResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalException'
          description: InternalException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /#X-Amz-Target=AWSEvents.DescribeEventSource:
    post:
      description: This operation lists details about a partner event source that
        is shared with your account.
      operationId: describe_event_source
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AWSEvents.DescribeEventSource
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DescribeEventSourceRequest'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DescribeEventSourceResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalException'
          description: InternalException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationDisabledException'
          description: OperationDisabledException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /#X-Amz-Target=AWSEvents.DescribePartnerEventSource:
    post:
      description: "An SaaS partner can use this operation to list details about a\
        \ partner event source that they have created. Amazon Web Services customers\
        \ do not use this operation. Instead, Amazon Web Services customers can use\
        \ <a href=\"https://docs.aws.amazon.com/eventbridge/latest/APIReference/API_DescribeEventSource.html\"\
        >DescribeEventSource</a> to see details about a partner event source that\
        \ is shared with them."
      operationId: describe_partner_event_source
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AWSEvents.DescribePartnerEventSource
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DescribePartnerEventSourceRequest'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DescribePartnerEventSourceResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalException'
          description: InternalException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationDisabledException'
          description: OperationDisabledException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /#X-Amz-Target=AWSEvents.DescribeReplay:
    post:
      description: "Retrieves details about a replay. Use <code>DescribeReplay</code>\
        \ to determine the progress of a running replay. A replay processes events\
        \ to replay based on the time in the event, and replays them using 1 minute\
        \ intervals. If you use <code>StartReplay</code> and specify an <code>EventStartTime</code>\
        \ and an <code>EventEndTime</code> that covers a 20 minute time range, the\
        \ events are replayed from the first minute of that 20 minute range first.\
        \ Then the events from the second minute are replayed. You can use <code>DescribeReplay</code>\
        \ to determine the progress of a replay. The value returned for <code>EventLastReplayedTime</code>\
        \ indicates the time within the specified time range associated with the last\
        \ event replayed."
      operationId: describe_replay
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AWSEvents.DescribeReplay
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DescribeReplayRequest'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DescribeReplayResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalException'
          description: InternalException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /#X-Amz-Target=AWSEvents.DescribeRule:
    post:
      description: "<p>Describes the specified rule.</p> <p>DescribeRule does not\
        \ list the targets of a rule. To see the targets associated with a rule, use\
        \ <a href=\"https://docs.aws.amazon.com/eventbridge/latest/APIReference/API_ListTargetsByRule.html\"\
        >ListTargetsByRule</a>.</p>"
      operationId: describe_rule
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AWSEvents.DescribeRule
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DescribeRuleRequest'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DescribeRuleResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalException'
          description: InternalException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /#X-Amz-Target=AWSEvents.DisableRule:
    post:
      description: "<p>Disables the specified rule. A disabled rule won't match any\
        \ events, and won't self-trigger if it has a schedule expression.</p> <p>When\
        \ you disable a rule, incoming events might continue to match to the disabled\
        \ rule. Allow a short period of time for changes to take effect.</p>"
      operationId: disable_rule
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AWSEvents.DisableRule
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DisableRuleRequest'
        required: true
        x-body-name: body
      responses:
        "200":
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConcurrentModificationException'
          description: ConcurrentModificationException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ManagedRuleException'
          description: ManagedRuleException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalException'
          description: InternalException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /#X-Amz-Target=AWSEvents.EnableRule:
    post:
      description: "<p>Enables the specified rule. If the rule does not exist, the\
        \ operation fails.</p> <p>When you enable a rule, incoming events might not\
        \ immediately start matching to a newly enabled rule. Allow a short period\
        \ of time for changes to take effect.</p>"
      operationId: enable_rule
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AWSEvents.EnableRule
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EnableRuleRequest'
        required: true
        x-body-name: body
      responses:
        "200":
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConcurrentModificationException'
          description: ConcurrentModificationException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ManagedRuleException'
          description: ManagedRuleException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalException'
          description: InternalException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /#X-Amz-Target=AWSEvents.ListApiDestinations:
    post:
      description: Retrieves a list of API destination in the account in the current
        Region.
      operationId: list_api_destinations
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AWSEvents.ListApiDestinations
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ListApiDestinationsRequest'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListApiDestinationsResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalException'
          description: InternalException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /#X-Amz-Target=AWSEvents.ListArchives:
    post:
      description: Lists your archives. You can either list all the archives or you
        can provide a prefix to match to the archive names. Filter parameters are
        exclusive.
      operationId: list_archives
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AWSEvents.ListArchives
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ListArchivesRequest'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListArchivesResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalException'
          description: InternalException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /#X-Amz-Target=AWSEvents.ListConnections:
    post:
      description: Retrieves a list of connections from the account.
      operationId: list_connections
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AWSEvents.ListConnections
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ListConnectionsRequest'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListConnectionsResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalException'
          description: InternalException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /#X-Amz-Target=AWSEvents.ListEndpoints:
    post:
      description: "List the global endpoints associated with this account. For more\
        \ information about global endpoints, see <a href=\"https://docs.aws.amazon.com/eventbridge/latest/userguide/eb-global-endpoints.html\"\
        >Making applications Regional-fault tolerant with global endpoints and event\
        \ replication</a> in the Amazon EventBridge User Guide.."
      operationId: list_endpoints
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AWSEvents.ListEndpoints
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ListEndpointsRequest'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListEndpointsResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalException'
          description: InternalException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /#X-Amz-Target=AWSEvents.ListEventBuses:
    post:
      description: "Lists all the event buses in your account, including the default\
        \ event bus, custom event buses, and partner event buses."
      operationId: list_event_buses
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AWSEvents.ListEventBuses
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ListEventBusesRequest'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListEventBusesResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalException'
          description: InternalException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /#X-Amz-Target=AWSEvents.ListEventSources:
    post:
      description: "You can use this to see all the partner event sources that have\
        \ been shared with your Amazon Web Services account. For more information\
        \ about partner event sources, see <a href=\"https://docs.aws.amazon.com/eventbridge/latest/APIReference/API_CreateEventBus.html\"\
        >CreateEventBus</a>."
      operationId: list_event_sources
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AWSEvents.ListEventSources
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ListEventSourcesRequest'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListEventSourcesResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalException'
          description: InternalException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationDisabledException'
          description: OperationDisabledException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /#X-Amz-Target=AWSEvents.ListPartnerEventSourceAccounts:
    post:
      description: An SaaS partner can use this operation to display the Amazon Web
        Services account ID that a particular partner event source name is associated
        with. This operation is not used by Amazon Web Services customers.
      operationId: list_partner_event_source_accounts
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AWSEvents.ListPartnerEventSourceAccounts
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ListPartnerEventSourceAccountsRequest'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListPartnerEventSourceAccountsResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalException'
          description: InternalException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationDisabledException'
          description: OperationDisabledException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /#X-Amz-Target=AWSEvents.ListPartnerEventSources:
    post:
      description: An SaaS partner can use this operation to list all the partner
        event source names that they have created. This operation is not used by Amazon
        Web Services customers.
      operationId: list_partner_event_sources
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AWSEvents.ListPartnerEventSources
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ListPartnerEventSourcesRequest'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListPartnerEventSourcesResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalException'
          description: InternalException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationDisabledException'
          description: OperationDisabledException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /#X-Amz-Target=AWSEvents.ListReplays:
    post:
      description: Lists your replays. You can either list all the replays or you
        can provide a prefix to match to the replay names. Filter parameters are exclusive.
      operationId: list_replays
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AWSEvents.ListReplays
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ListReplaysRequest'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListReplaysResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalException'
          description: InternalException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /#X-Amz-Target=AWSEvents.ListRuleNamesByTarget:
    post:
      description: Lists the rules for the specified target. You can see which of
        the rules in Amazon EventBridge can invoke a specific target in your account.
      operationId: list_rule_names_by_target
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AWSEvents.ListRuleNamesByTarget
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ListRuleNamesByTargetRequest'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListRuleNamesByTargetResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalException'
          description: InternalException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /#X-Amz-Target=AWSEvents.ListRules:
    post:
      description: "<p>Lists your Amazon EventBridge rules. You can either list all\
        \ the rules or you can provide a prefix to match to the rule names.</p> <p>ListRules\
        \ does not list the targets of a rule. To see the targets associated with\
        \ a rule, use <a href=\"https://docs.aws.amazon.com/eventbridge/latest/APIReference/API_ListTargetsByRule.html\"\
        >ListTargetsByRule</a>.</p>"
      operationId: list_rules
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AWSEvents.ListRules
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ListRulesRequest'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListRulesResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalException'
          description: InternalException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /#X-Amz-Target=AWSEvents.ListTagsForResource:
    post:
      description: "Displays the tags associated with an EventBridge resource. In\
        \ EventBridge, rules and event buses can be tagged."
      operationId: list_tags_for_resource
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AWSEvents.ListTagsForResource
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ListTagsForResourceRequest'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListTagsForResourceResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalException'
          description: InternalException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /#X-Amz-Target=AWSEvents.ListTargetsByRule:
    post:
      description: Lists the targets assigned to the specified rule.
      operationId: list_targets_by_rule
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AWSEvents.ListTargetsByRule
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ListTargetsByRuleRequest'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListTargetsByRuleResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalException'
          description: InternalException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /#X-Amz-Target=AWSEvents.PutEvents:
    post:
      description: <p>Sends custom events to Amazon EventBridge so that they can be
        matched to rules.</p> <note> <p>PutEvents will only process nested JSON up
        to 1100 levels deep.</p> </note>
      operationId: put_events
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AWSEvents.PutEvents
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PutEventsRequest'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PutEventsResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalException'
          description: InternalException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /#X-Amz-Target=AWSEvents.PutPartnerEvents:
    post:
      description: This is used by SaaS partners to write events to a customer's partner
        event bus. Amazon Web Services customers do not use this operation.
      operationId: put_partner_events
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AWSEvents.PutPartnerEvents
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PutPartnerEventsRequest'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PutPartnerEventsResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalException'
          description: InternalException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationDisabledException'
          description: OperationDisabledException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /#X-Amz-Target=AWSEvents.PutPermission:
    post:
      description: "<p>Running <code>PutPermission</code> permits the specified Amazon\
        \ Web Services account or Amazon Web Services organization to put events to\
        \ the specified <i>event bus</i>. Amazon EventBridge (CloudWatch Events) rules\
        \ in your account are triggered by these events arriving to an event bus in\
        \ your account. </p> <p>For another account to send events to your account,\
        \ that external account must have an EventBridge rule with your account's\
        \ event bus as a target.</p> <p>To enable multiple Amazon Web Services accounts\
        \ to put events to your event bus, run <code>PutPermission</code> once for\
        \ each of these accounts. Or, if all the accounts are members of the same\
        \ Amazon Web Services organization, you can run <code>PutPermission</code>\
        \ once specifying <code>Principal</code> as \"*\" and specifying the Amazon\
        \ Web Services organization ID in <code>Condition</code>, to grant permissions\
        \ to all accounts in that organization.</p> <p>If you grant permissions using\
        \ an organization, then accounts in that organization must specify a <code>RoleArn</code>\
        \ with proper permissions when they use <code>PutTarget</code> to add your\
        \ account's event bus as a target. For more information, see <a href=\"https://docs.aws.amazon.com/eventbridge/latest/userguide/eventbridge-cross-account-event-delivery.html\"\
        >Sending and Receiving Events Between Amazon Web Services Accounts</a> in\
        \ the <i>Amazon EventBridge User Guide</i>.</p> <p>The permission policy on\
        \ the event bus cannot exceed 10 KB in size.</p>"
      operationId: put_permission
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AWSEvents.PutPermission
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PutPermissionRequest'
        required: true
        x-body-name: body
      responses:
        "200":
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PolicyLengthExceededException'
          description: PolicyLengthExceededException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalException'
          description: InternalException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConcurrentModificationException'
          description: ConcurrentModificationException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationDisabledException'
          description: OperationDisabledException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /#X-Amz-Target=AWSEvents.PutRule:
    post:
      description: "<p>Creates or updates the specified rule. Rules are enabled by\
        \ default, or based on value of the state. You can disable a rule using <a\
        \ href=\"https://docs.aws.amazon.com/eventbridge/latest/APIReference/API_DisableRule.html\"\
        >DisableRule</a>.</p> <p>A single rule watches for events from a single event\
        \ bus. Events generated by Amazon Web Services services go to your account's\
        \ default event bus. Events generated by SaaS partner services or applications\
        \ go to the matching partner event bus. If you have custom applications or\
        \ services, you can specify whether their events go to your default event\
        \ bus or a custom event bus that you have created. For more information, see\
        \ <a href=\"https://docs.aws.amazon.com/eventbridge/latest/APIReference/API_CreateEventBus.html\"\
        >CreateEventBus</a>.</p> <p>If you are updating an existing rule, the rule\
        \ is replaced with what you specify in this <code>PutRule</code> command.\
        \ If you omit arguments in <code>PutRule</code>, the old values for those\
        \ arguments are not kept. Instead, they are replaced with null values.</p>\
        \ <p>When you create or update a rule, incoming events might not immediately\
        \ start matching to new or updated rules. Allow a short period of time for\
        \ changes to take effect.</p> <p>A rule must contain at least an EventPattern\
        \ or ScheduleExpression. Rules with EventPatterns are triggered when a matching\
        \ event is observed. Rules with ScheduleExpressions self-trigger based on\
        \ the given schedule. A rule can have both an EventPattern and a ScheduleExpression,\
        \ in which case the rule triggers on matching events as well as on a schedule.</p>\
        \ <p>When you initially create a rule, you can optionally assign one or more\
        \ tags to the rule. Tags can help you organize and categorize your resources.\
        \ You can also use them to scope user permissions, by granting a user permission\
        \ to access or change only rules with certain tag values. To use the <code>PutRule</code>\
        \ operation and assign tags, you must have both the <code>events:PutRule</code>\
        \ and <code>events:TagResource</code> permissions.</p> <p>If you are updating\
        \ an existing rule, any tags you specify in the <code>PutRule</code> operation\
        \ are ignored. To update the tags of an existing rule, use <a href=\"https://docs.aws.amazon.com/eventbridge/latest/APIReference/API_TagResource.html\"\
        >TagResource</a> and <a href=\"https://docs.aws.amazon.com/eventbridge/latest/APIReference/API_UntagResource.html\"\
        >UntagResource</a>.</p> <p>Most services in Amazon Web Services treat : or\
        \ / as the same character in Amazon Resource Names (ARNs). However, EventBridge\
        \ uses an exact match in event patterns and rules. Be sure to use the correct\
        \ ARN characters when creating event patterns so that they match the ARN syntax\
        \ in the event you want to match.</p> <p>In EventBridge, it is possible to\
        \ create rules that lead to infinite loops, where a rule is fired repeatedly.\
        \ For example, a rule might detect that ACLs have changed on an S3 bucket,\
        \ and trigger software to change them to the desired state. If the rule is\
        \ not written carefully, the subsequent change to the ACLs fires the rule\
        \ again, creating an infinite loop.</p> <p>To prevent this, write the rules\
        \ so that the triggered actions do not re-fire the same rule. For example,\
        \ your rule could fire only if ACLs are found to be in a bad state, instead\
        \ of after any change. </p> <p>An infinite loop can quickly cause higher than\
        \ expected charges. We recommend that you use budgeting, which alerts you\
        \ when charges exceed your specified limit. For more information, see <a href=\"\
        https://docs.aws.amazon.com/awsaccountbilling/latest/aboutv2/budgets-managing-costs.html\"\
        >Managing Your Costs with Budgets</a>.</p>"
      operationId: put_rule
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AWSEvents.PutRule
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PutRuleRequest'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PutRuleResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidEventPatternException'
          description: InvalidEventPatternException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
          description: LimitExceededException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConcurrentModificationException'
          description: ConcurrentModificationException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ManagedRuleException'
          description: ManagedRuleException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalException'
          description: InternalException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /#X-Amz-Target=AWSEvents.PutTargets:
    post:
      description: "<p>Adds the specified targets to the specified rule, or updates\
        \ the targets if they are already associated with the rule.</p> <p>Targets\
        \ are the resources that are invoked when a rule is triggered.</p> <note>\
        \ <p>Each rule can have up to five (5) targets associated with it at one time.</p>\
        \ </note> <p>You can configure the following as targets for Events:</p> <ul>\
        \ <li> <p> <a href=\"https://docs.aws.amazon.com/eventbridge/latest/userguide/eb-api-destinations.html\"\
        >API destination</a> </p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/eventbridge/latest/userguide/eb-api-gateway-target.html\"\
        >API Gateway</a> </p> </li> <li> <p>Batch job queue</p> </li> <li> <p>CloudWatch\
        \ group</p> </li> <li> <p>CodeBuild project</p> </li> <li> <p>CodePipeline</p>\
        \ </li> <li> <p>EC2 <code>CreateSnapshot</code> API call</p> </li> <li> <p>EC2\
        \ Image Builder</p> </li> <li> <p>EC2 <code>RebootInstances</code> API call</p>\
        \ </li> <li> <p>EC2 <code>StopInstances</code> API call</p> </li> <li> <p>EC2\
        \ <code>TerminateInstances</code> API call</p> </li> <li> <p>ECS task</p>\
        \ </li> <li> <p> <a href=\"https://docs.aws.amazon.com/eventbridge/latest/userguide/eb-cross-account.html\"\
        >Event bus in a different account or Region</a> </p> </li> <li> <p> <a href=\"\
        https://docs.aws.amazon.com/eventbridge/latest/userguide/eb-bus-to-bus.html\"\
        >Event bus in the same account and Region</a> </p> </li> <li> <p>Firehose\
        \ delivery stream</p> </li> <li> <p>Glue workflow</p> </li> <li> <p> <a href=\"\
        https://docs.aws.amazon.com/incident-manager/latest/userguide/incident-creation.html#incident-tracking-auto-eventbridge\"\
        >Incident Manager response plan</a> </p> </li> <li> <p>Inspector assessment\
        \ template</p> </li> <li> <p>Kinesis stream</p> </li> <li> <p>Lambda function</p>\
        \ </li> <li> <p>Redshift cluster</p> </li> <li> <p>Redshift Serverless workgroup</p>\
        \ </li> <li> <p>SageMaker Pipeline</p> </li> <li> <p>SNS topic</p> </li> <li>\
        \ <p>SQS queue</p> </li> <li> <p>Step Functions state machine</p> </li> <li>\
        \ <p>Systems Manager Automation</p> </li> <li> <p>Systems Manager OpsItem</p>\
        \ </li> <li> <p>Systems Manager Run Command</p> </li> </ul> <p>Creating rules\
        \ with built-in targets is supported only in the Amazon Web Services Management\
        \ Console. The built-in targets are <code>EC2 CreateSnapshot API call</code>,\
        \ <code>EC2 RebootInstances API call</code>, <code>EC2 StopInstances API call</code>,\
        \ and <code>EC2 TerminateInstances API call</code>. </p> <p>For some target\
        \ types, <code>PutTargets</code> provides target-specific parameters. If the\
        \ target is a Kinesis data stream, you can optionally specify which shard\
        \ the event goes to by using the <code>KinesisParameters</code> argument.\
        \ To invoke a command on multiple EC2 instances with one rule, you can use\
        \ the <code>RunCommandParameters</code> field.</p> <p>To be able to make API\
        \ calls against the resources that you own, Amazon EventBridge needs the appropriate\
        \ permissions. For Lambda and Amazon SNS resources, EventBridge relies on\
        \ resource-based policies. For EC2 instances, Kinesis Data Streams, Step Functions\
        \ state machines and API Gateway APIs, EventBridge relies on IAM roles that\
        \ you specify in the <code>RoleARN</code> argument in <code>PutTargets</code>.\
        \ For more information, see <a href=\"https://docs.aws.amazon.com/eventbridge/latest/userguide/auth-and-access-control-eventbridge.html\"\
        >Authentication and Access Control</a> in the <i>Amazon EventBridge User Guide</i>.</p>\
        \ <p>If another Amazon Web Services account is in the same region and has\
        \ granted you permission (using <code>PutPermission</code>), you can send\
        \ events to that account. Set that account's event bus as a target of the\
        \ rules in your account. To send the matched events to the other account,\
        \ specify that account's event bus as the <code>Arn</code> value when you\
        \ run <code>PutTargets</code>. If your account sends events to another account,\
        \ your account is charged for each sent event. Each event sent to another\
        \ account is charged as a custom event. The account receiving the event is\
        \ not charged. For more information, see <a href=\"http://aws.amazon.com/eventbridge/pricing/\"\
        >Amazon EventBridge Pricing</a>.</p> <note> <p> <code>Input</code>, <code>InputPath</code>,\
        \ and <code>InputTransformer</code> are not available with <code>PutTarget</code>\
        \ if the target is an event bus of a different Amazon Web Services account.</p>\
        \ </note> <p>If you are setting the event bus of another account as the target,\
        \ and that account granted permission to your account through an organization\
        \ instead of directly by the account ID, then you must specify a <code>RoleArn</code>\
        \ with proper permissions in the <code>Target</code> structure. For more information,\
        \ see <a href=\"https://docs.aws.amazon.com/eventbridge/latest/userguide/eventbridge-cross-account-event-delivery.html\"\
        >Sending and Receiving Events Between Amazon Web Services Accounts</a> in\
        \ the <i>Amazon EventBridge User Guide</i>.</p> <p>For more information about\
        \ enabling cross-account events, see <a href=\"https://docs.aws.amazon.com/eventbridge/latest/APIReference/API_PutPermission.html\"\
        >PutPermission</a>.</p> <p> <b>Input</b>, <b>InputPath</b>, and <b>InputTransformer</b>\
        \ are mutually exclusive and optional parameters of a target. When a rule\
        \ is triggered due to a matched event:</p> <ul> <li> <p>If none of the following\
        \ arguments are specified for a target, then the entire event is passed to\
        \ the target in JSON format (unless the target is Amazon EC2 Run Command or\
        \ Amazon ECS task, in which case nothing from the event is passed to the target).</p>\
        \ </li> <li> <p>If <b>Input</b> is specified in the form of valid JSON, then\
        \ the matched event is overridden with this constant.</p> </li> <li> <p>If\
        \ <b>InputPath</b> is specified in the form of JSONPath (for example, <code>$.detail</code>),\
        \ then only the part of the event specified in the path is passed to the target\
        \ (for example, only the detail part of the event is passed).</p> </li> <li>\
        \ <p>If <b>InputTransformer</b> is specified, then one or more specified JSONPaths\
        \ are extracted from the event and used as values in a template that you specify\
        \ as the input to the target.</p> </li> </ul> <p>When you specify <code>InputPath</code>\
        \ or <code>InputTransformer</code>, you must use JSON dot notation, not bracket\
        \ notation.</p> <p>When you add targets to a rule and the associated rule\
        \ triggers soon after, new or updated targets might not be immediately invoked.\
        \ Allow a short period of time for changes to take effect.</p> <p>This action\
        \ can partially fail if too many requests are made at the same time. If that\
        \ happens, <code>FailedEntryCount</code> is non-zero in the response and each\
        \ entry in <code>FailedEntries</code> provides the ID of the failed target\
        \ and the error code.</p>"
      operationId: put_targets
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AWSEvents.PutTargets
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PutTargetsRequest'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PutTargetsResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConcurrentModificationException'
          description: ConcurrentModificationException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
          description: LimitExceededException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ManagedRuleException'
          description: ManagedRuleException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalException'
          description: InternalException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /#X-Amz-Target=AWSEvents.RemovePermission:
    post:
      description: Revokes the permission of another Amazon Web Services account to
        be able to put events to the specified event bus. Specify the account to revoke
        by the <code>StatementId</code> value that you associated with the account
        when you granted it permission with <code>PutPermission</code>. You can find
        the <code>StatementId</code> by using <a href="https://docs.aws.amazon.com/eventbridge/latest/APIReference/API_DescribeEventBus.html">DescribeEventBus</a>.
      operationId: remove_permission
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AWSEvents.RemovePermission
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RemovePermissionRequest'
        required: true
        x-body-name: body
      responses:
        "200":
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalException'
          description: InternalException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConcurrentModificationException'
          description: ConcurrentModificationException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationDisabledException'
          description: OperationDisabledException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /#X-Amz-Target=AWSEvents.RemoveTargets:
    post:
      description: "<p>Removes the specified targets from the specified rule. When\
        \ the rule is triggered, those targets are no longer be invoked.</p> <note>\
        \ <p>A successful execution of <code>RemoveTargets</code> doesn't guarantee\
        \ all targets are removed from the rule, it means that the target(s) listed\
        \ in the request are removed.</p> </note> <p>When you remove a target, when\
        \ the associated rule triggers, removed targets might continue to be invoked.\
        \ Allow a short period of time for changes to take effect.</p> <p>This action\
        \ can partially fail if too many requests are made at the same time. If that\
        \ happens, <code>FailedEntryCount</code> is non-zero in the response and each\
        \ entry in <code>FailedEntries</code> provides the ID of the failed target\
        \ and the error code.</p>"
      operationId: remove_targets
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AWSEvents.RemoveTargets
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RemoveTargetsRequest'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RemoveTargetsResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConcurrentModificationException'
          description: ConcurrentModificationException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ManagedRuleException'
          description: ManagedRuleException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalException'
          description: InternalException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /#X-Amz-Target=AWSEvents.StartReplay:
    post:
      description: "Starts the specified replay. Events are not necessarily replayed\
        \ in the exact same order that they were added to the archive. A replay processes\
        \ events to replay based on the time in the event, and replays them using\
        \ 1 minute intervals. If you specify an <code>EventStartTime</code> and an\
        \ <code>EventEndTime</code> that covers a 20 minute time range, the events\
        \ are replayed from the first minute of that 20 minute range first. Then the\
        \ events from the second minute are replayed. You can use <code>DescribeReplay</code>\
        \ to determine the progress of a replay. The value returned for <code>EventLastReplayedTime</code>\
        \ indicates the time within the specified time range associated with the last\
        \ event replayed."
      operationId: start_replay
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AWSEvents.StartReplay
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StartReplayRequest'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StartReplayResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceAlreadyExistsException'
          description: ResourceAlreadyExistsException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidEventPatternException'
          description: InvalidEventPatternException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
          description: LimitExceededException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalException'
          description: InternalException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /#X-Amz-Target=AWSEvents.TagResource:
    post:
      description: "<p>Assigns one or more tags (key-value pairs) to the specified\
        \ EventBridge resource. Tags can help you organize and categorize your resources.\
        \ You can also use them to scope user permissions by granting a user permission\
        \ to access or change only resources with certain tag values. In EventBridge,\
        \ rules and event buses can be tagged.</p> <p>Tags don't have any semantic\
        \ meaning to Amazon Web Services and are interpreted strictly as strings of\
        \ characters.</p> <p>You can use the <code>TagResource</code> action with\
        \ a resource that already has tags. If you specify a new tag key, this tag\
        \ is appended to the list of tags associated with the resource. If you specify\
        \ a tag key that is already associated with the resource, the new tag value\
        \ that you specify replaces the previous value for that tag.</p> <p>You can\
        \ associate as many as 50 tags with a resource.</p>"
      operationId: tag_resource
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AWSEvents.TagResource
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TagResourceRequest'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TagResourceResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConcurrentModificationException'
          description: ConcurrentModificationException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalException'
          description: InternalException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ManagedRuleException'
          description: ManagedRuleException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /#X-Amz-Target=AWSEvents.TestEventPattern:
    post:
      description: "<p>Tests whether the specified event pattern matches the provided\
        \ event.</p> <p>Most services in Amazon Web Services treat : or / as the same\
        \ character in Amazon Resource Names (ARNs). However, EventBridge uses an\
        \ exact match in event patterns and rules. Be sure to use the correct ARN\
        \ characters when creating event patterns so that they match the ARN syntax\
        \ in the event you want to match.</p>"
      operationId: test_event_pattern
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AWSEvents.TestEventPattern
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TestEventPatternRequest'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TestEventPatternResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidEventPatternException'
          description: InvalidEventPatternException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalException'
          description: InternalException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /#X-Amz-Target=AWSEvents.UntagResource:
    post:
      description: "Removes one or more tags from the specified EventBridge resource.\
        \ In Amazon EventBridge (CloudWatch Events), rules and event buses can be\
        \ tagged."
      operationId: untag_resource
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AWSEvents.UntagResource
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UntagResourceRequest'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UntagResourceResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalException'
          description: InternalException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConcurrentModificationException'
          description: ConcurrentModificationException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ManagedRuleException'
          description: ManagedRuleException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /#X-Amz-Target=AWSEvents.UpdateApiDestination:
    post:
      description: Updates an API destination.
      operationId: update_api_destination
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AWSEvents.UpdateApiDestination
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateApiDestinationRequest'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateApiDestinationResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConcurrentModificationException'
          description: ConcurrentModificationException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalException'
          description: InternalException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
          description: LimitExceededException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /#X-Amz-Target=AWSEvents.UpdateArchive:
    post:
      description: Updates the specified archive.
      operationId: update_archive
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AWSEvents.UpdateArchive
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateArchiveRequest'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateArchiveResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConcurrentModificationException'
          description: ConcurrentModificationException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalException'
          description: InternalException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
          description: LimitExceededException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidEventPatternException'
          description: InvalidEventPatternException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /#X-Amz-Target=AWSEvents.UpdateConnection:
    post:
      description: Updates settings for a connection.
      operationId: update_connection
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AWSEvents.UpdateConnection
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateConnectionRequest'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateConnectionResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConcurrentModificationException'
          description: ConcurrentModificationException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalException'
          description: InternalException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
          description: LimitExceededException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /#X-Amz-Target=AWSEvents.UpdateEndpoint:
    post:
      description: "Update an existing endpoint. For more information about global\
        \ endpoints, see <a href=\"https://docs.aws.amazon.com/eventbridge/latest/userguide/eb-global-endpoints.html\"\
        >Making applications Regional-fault tolerant with global endpoints and event\
        \ replication</a> in the Amazon EventBridge User Guide.."
      operationId: update_endpoint
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - AWSEvents.UpdateEndpoint
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateEndpointRequest'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateEndpointResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConcurrentModificationException'
          description: ConcurrentModificationException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalException'
          description: InternalException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
components:
  parameters:
    X-Amz-Content-Sha256:
      explode: false
      in: header
      name: X-Amz-Content-Sha256
      required: false
      schema:
        type: string
      style: simple
    X-Amz-Date:
      explode: false
      in: header
      name: X-Amz-Date
      required: false
      schema:
        type: string
      style: simple
    X-Amz-Algorithm:
      explode: false
      in: header
      name: X-Amz-Algorithm
      required: false
      schema:
        type: string
      style: simple
    X-Amz-Credential:
      explode: false
      in: header
      name: X-Amz-Credential
      required: false
      schema:
        type: string
      style: simple
    X-Amz-Security-Token:
      explode: false
      in: header
      name: X-Amz-Security-Token
      required: false
      schema:
        type: string
      style: simple
    X-Amz-Signature:
      explode: false
      in: header
      name: X-Amz-Signature
      required: false
      schema:
        type: string
      style: simple
    X-Amz-SignedHeaders:
      explode: false
      in: header
      name: X-Amz-SignedHeaders
      required: false
      schema:
        type: string
      style: simple
  schemas:
    ActivateEventSourceRequest:
      example:
        Name: ""
      properties:
        Name:
          allOf:
          - $ref: '#/components/schemas/EventSourceName'
          - description: The name of the partner event source to activate.
          title: Name
      required:
      - Name
      title: ActivateEventSourceRequest
      type: object
    ResourceNotFoundException: {}
    ConcurrentModificationException: {}
    InvalidStateException: {}
    InternalException: {}
    OperationDisabledException: {}
    CancelReplayResponse:
      example:
        ReplayArn: ""
        State: ""
        StateReason: ""
      properties:
        ReplayArn:
          allOf:
          - $ref: '#/components/schemas/ReplayArn'
          - description: The ARN of the replay to cancel.
          title: ReplayArn
        State:
          allOf:
          - $ref: '#/components/schemas/ReplayState'
          - description: The current state of the replay.
          title: State
        StateReason:
          allOf:
          - $ref: '#/components/schemas/ReplayStateReason'
          - description: The reason that the replay is in the current state.
          title: StateReason
      title: CancelReplayResponse
      type: object
    CancelReplayRequest:
      example:
        ReplayName: ""
      properties:
        ReplayName:
          allOf:
          - $ref: '#/components/schemas/ReplayName'
          - description: The name of the replay to cancel.
          title: ReplayName
      required:
      - ReplayName
      title: CancelReplayRequest
      type: object
    IllegalStatusException: {}
    CreateApiDestinationResponse:
      example:
        ApiDestinationState: ""
        CreationTime: ""
        LastModifiedTime: ""
        ApiDestinationArn: ""
      properties:
        ApiDestinationArn:
          allOf:
          - $ref: '#/components/schemas/ApiDestinationArn'
          - description: The ARN of the API destination that was created by the request.
          title: ApiDestinationArn
        ApiDestinationState:
          allOf:
          - $ref: '#/components/schemas/ApiDestinationState'
          - description: The state of the API destination that was created by the
              request.
          title: ApiDestinationState
        CreationTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          - description: A time stamp indicating the time that the API destination
              was created.
          title: CreationTime
        LastModifiedTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          - description: A time stamp indicating the time that the API destination
              was last modified.
          title: LastModifiedTime
      title: CreateApiDestinationResponse
      type: object
    CreateApiDestinationRequest:
      example:
        Description: ""
        ConnectionArn: ""
        InvocationEndpoint: ""
        HttpMethod: ""
        Name: ""
        InvocationRateLimitPerSecond: ""
      properties:
        Name:
          allOf:
          - $ref: '#/components/schemas/ApiDestinationName'
          - description: The name for the API destination to create.
          title: Name
        Description:
          allOf:
          - $ref: '#/components/schemas/ApiDestinationDescription'
          - description: A description for the API destination to create.
          title: Description
        ConnectionArn:
          allOf:
          - $ref: '#/components/schemas/ConnectionArn'
          - description: The ARN of the connection to use for the API destination.
              The destination endpoint must support the authorization type specified
              for the connection.
          title: ConnectionArn
        InvocationEndpoint:
          allOf:
          - $ref: '#/components/schemas/HttpsEndpoint'
          - description: The URL to the HTTP invocation endpoint for the API destination.
          title: InvocationEndpoint
        HttpMethod:
          allOf:
          - $ref: '#/components/schemas/ApiDestinationHttpMethod'
          - description: The method to use for the request to the HTTP invocation
              endpoint.
          title: HttpMethod
        InvocationRateLimitPerSecond:
          allOf:
          - $ref: '#/components/schemas/ApiDestinationInvocationRateLimitPerSecond'
          - description: The maximum number of requests per second to send to the
              HTTP invocation endpoint.
          title: InvocationRateLimitPerSecond
      required:
      - ConnectionArn
      - HttpMethod
      - InvocationEndpoint
      - Name
      title: CreateApiDestinationRequest
      type: object
    ResourceAlreadyExistsException: {}
    LimitExceededException: {}
    CreateArchiveResponse:
      example:
        State: ""
        StateReason: ""
        CreationTime: ""
        ArchiveArn: ""
      properties:
        ArchiveArn:
          allOf:
          - $ref: '#/components/schemas/ArchiveArn'
          - description: The ARN of the archive that was created.
          title: ArchiveArn
        State:
          allOf:
          - $ref: '#/components/schemas/ArchiveState'
          - description: The state of the archive that was created.
          title: State
        StateReason:
          allOf:
          - $ref: '#/components/schemas/ArchiveStateReason'
          - description: The reason that the archive is in the state.
          title: StateReason
        CreationTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          - description: The time at which the archive was created.
          title: CreationTime
      title: CreateArchiveResponse
      type: object
    CreateArchiveRequest:
      example:
        EventPattern: ""
        Description: ""
        ArchiveName: ""
        RetentionDays: ""
        EventSourceArn: ""
      properties:
        ArchiveName:
          allOf:
          - $ref: '#/components/schemas/ArchiveName'
          - description: The name for the archive to create.
          title: ArchiveName
        EventSourceArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          - description: The ARN of the event bus that sends events to the archive.
          title: EventSourceArn
        Description:
          allOf:
          - $ref: '#/components/schemas/ArchiveDescription'
          - description: A description for the archive.
          title: Description
        EventPattern:
          allOf:
          - $ref: '#/components/schemas/EventPattern'
          - description: An event pattern to use to filter events sent to the archive.
          title: EventPattern
        RetentionDays:
          allOf:
          - $ref: '#/components/schemas/RetentionDays'
          - description: "The number of days to retain events for. Default value is\
              \ 0. If set to 0, events are retained indefinitely"
          title: RetentionDays
      required:
      - ArchiveName
      - EventSourceArn
      title: CreateArchiveRequest
      type: object
    InvalidEventPatternException: {}
    CreateConnectionResponse:
      example:
        ConnectionArn: ""
        CreationTime: ""
        LastModifiedTime: ""
        ConnectionState: ""
      properties:
        ConnectionArn:
          allOf:
          - $ref: '#/components/schemas/ConnectionArn'
          - description: The ARN of the connection that was created by the request.
          title: ConnectionArn
        ConnectionState:
          allOf:
          - $ref: '#/components/schemas/ConnectionState'
          - description: The state of the connection that was created by the request.
          title: ConnectionState
        CreationTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          - description: A time stamp for the time that the connection was created.
          title: CreationTime
        LastModifiedTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          - description: A time stamp for the time that the connection was last updated.
          title: LastModifiedTime
      title: CreateConnectionResponse
      type: object
    CreateConnectionRequest:
      example:
        AuthParameters:
          InvocationHttpParameters:
            HeaderParameters: ""
            QueryStringParameters: ""
            BodyParameters: ""
          BasicAuthParameters:
            Username: ""
            Password: ""
          ApiKeyAuthParameters:
            ApiKeyValue: ""
            ApiKeyName: ""
          OAuthParameters:
            ClientParameters:
              ClientSecret: ""
              ClientID: ""
            OAuthHttpParameters:
              HeaderParameters: ""
              QueryStringParameters: ""
              BodyParameters: ""
            AuthorizationEndpoint: ""
            HttpMethod: ""
        Description: ""
        AuthorizationType: ""
        Name: ""
      properties:
        Name:
          allOf:
          - $ref: '#/components/schemas/ConnectionName'
          - description: The name for the connection to create.
          title: Name
        Description:
          allOf:
          - $ref: '#/components/schemas/ConnectionDescription'
          - description: A description for the connection to create.
          title: Description
        AuthorizationType:
          allOf:
          - $ref: '#/components/schemas/ConnectionAuthorizationType'
          - description: <p>The type of authorization to use for the connection.</p>
              <note> <p>OAUTH tokens are refreshed when a 401 or 407 response is returned.</p>
              </note>
          title: AuthorizationType
        AuthParameters:
          $ref: '#/components/schemas/CreateConnectionRequest_AuthParameters'
      required:
      - AuthParameters
      - AuthorizationType
      - Name
      title: CreateConnectionRequest
      type: object
    CreateEndpointResponse:
      example:
        EventBuses: ""
        ReplicationConfig:
          State: ""
        State: ""
        Arn: ""
        RoutingConfig:
          FailoverConfig:
            Secondary:
              Route: ""
            Primary:
              HealthCheck: ""
        RoleArn: ""
        Name: ""
      properties:
        Name:
          allOf:
          - $ref: '#/components/schemas/EndpointName'
          - description: The name of the endpoint that was created by this request.
          title: Name
        Arn:
          allOf:
          - $ref: '#/components/schemas/EndpointArn'
          - description: The ARN of the endpoint that was created by this request.
          title: Arn
        RoutingConfig:
          $ref: '#/components/schemas/CreateEndpointResponse_RoutingConfig'
        ReplicationConfig:
          $ref: '#/components/schemas/CreateEndpointResponse_ReplicationConfig'
        EventBuses:
          allOf:
          - $ref: '#/components/schemas/EndpointEventBusList'
          - description: The event buses used by this request.
          title: EventBuses
        RoleArn:
          allOf:
          - $ref: '#/components/schemas/IamRoleArn'
          - description: The ARN of the role used by event replication for this request.
          title: RoleArn
        State:
          allOf:
          - $ref: '#/components/schemas/EndpointState'
          - description: The state of the endpoint that was created by this request.
          title: State
      title: CreateEndpointResponse
      type: object
    CreateEndpointRequest:
      example:
        EventBuses: ""
        Description: ""
        ReplicationConfig:
          State: ""
        RoutingConfig:
          FailoverConfig:
            Secondary:
              Route: ""
            Primary:
              HealthCheck: ""
        RoleArn: ""
        Name: ""
      properties:
        Name:
          allOf:
          - $ref: '#/components/schemas/EndpointName'
          - description: "The name of the global endpoint. For example, <code>\"Name\"\
              :\"us-east-2-custom_bus_A-endpoint\"</code>."
          title: Name
        Description:
          allOf:
          - $ref: '#/components/schemas/EndpointDescription'
          - description: A description of the global endpoint.
          title: Description
        RoutingConfig:
          $ref: '#/components/schemas/CreateEndpointRequest_RoutingConfig'
        ReplicationConfig:
          $ref: '#/components/schemas/CreateEndpointRequest_ReplicationConfig'
        EventBuses:
          allOf:
          - $ref: '#/components/schemas/EndpointEventBusList'
          - description: <p>Define the event buses used. </p> <important> <p>The names
              of the event buses must be identical in each Region.</p> </important>
          title: EventBuses
        RoleArn:
          allOf:
          - $ref: '#/components/schemas/IamRoleArn'
          - description: The ARN of the role used for replication.
          title: RoleArn
      required:
      - EventBuses
      - Name
      - RoutingConfig
      title: CreateEndpointRequest
      type: object
    CreateEventBusResponse:
      example:
        EventBusArn: ""
      properties:
        EventBusArn:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The ARN of the new event bus.
          title: EventBusArn
      title: CreateEventBusResponse
      type: object
    CreateEventBusRequest:
      example:
        EventSourceName: ""
        Tags: ""
        Name: ""
      properties:
        Name:
          allOf:
          - $ref: '#/components/schemas/EventBusName'
          - description: "<p>The name of the new event bus. </p> <p>Custom event bus\
              \ names can't contain the <code>/</code> character, but you can use\
              \ the <code>/</code> character in partner event bus names. In addition,\
              \ for partner event buses, the name must exactly match the name of the\
              \ partner event source that this event bus is matched to.</p> <p>You\
              \ can't use the name <code>default</code> for a custom event bus, as\
              \ this name is already used for your account's default event bus.</p>"
          title: Name
        EventSourceName:
          allOf:
          - $ref: '#/components/schemas/EventSourceName'
          - description: "If you are creating a partner event bus, this specifies\
              \ the partner event source that the new event bus will be matched with."
          title: EventSourceName
        Tags:
          allOf:
          - $ref: '#/components/schemas/TagList'
          - description: Tags to associate with the event bus.
          title: Tags
      required:
      - Name
      title: CreateEventBusRequest
      type: object
    CreatePartnerEventSourceResponse:
      example:
        EventSourceArn: ""
      properties:
        EventSourceArn:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The ARN of the partner event source.
          title: EventSourceArn
      title: CreatePartnerEventSourceResponse
      type: object
    CreatePartnerEventSourceRequest:
      example:
        Account: ""
        Name: ""
      properties:
        Name:
          allOf:
          - $ref: '#/components/schemas/EventSourceName'
          - description: The name of the partner event source. This name must be unique
              and must be in the format <code> <i>partner_name</i>/<i>event_namespace</i>/<i>event_name</i>
              </code>. The Amazon Web Services account that wants to use this partner
              event source must create a partner event bus with a name that matches
              the name of the partner event source.
          title: Name
        Account:
          allOf:
          - $ref: '#/components/schemas/AccountId'
          - description: The Amazon Web Services account ID that is permitted to create
              a matching partner event bus for this partner event source.
          title: Account
      required:
      - Account
      - Name
      title: CreatePartnerEventSourceRequest
      type: object
    DeactivateEventSourceRequest:
      example:
        Name: ""
      properties:
        Name:
          allOf:
          - $ref: '#/components/schemas/EventSourceName'
          - description: The name of the partner event source to deactivate.
          title: Name
      required:
      - Name
      title: DeactivateEventSourceRequest
      type: object
    DeauthorizeConnectionResponse:
      example:
        ConnectionArn: ""
        CreationTime: ""
        LastModifiedTime: ""
        ConnectionState: ""
        LastAuthorizedTime: ""
      properties:
        ConnectionArn:
          allOf:
          - $ref: '#/components/schemas/ConnectionArn'
          - description: The ARN of the connection that authorization was removed
              from.
          title: ConnectionArn
        ConnectionState:
          allOf:
          - $ref: '#/components/schemas/ConnectionState'
          - description: The state of the connection.
          title: ConnectionState
        CreationTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          - description: A time stamp for the time that the connection was created.
          title: CreationTime
        LastModifiedTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          - description: A time stamp for the time that the connection was last updated.
          title: LastModifiedTime
        LastAuthorizedTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          - description: A time stamp for the time that the connection was last authorized.
          title: LastAuthorizedTime
      title: DeauthorizeConnectionResponse
      type: object
    DeauthorizeConnectionRequest:
      example:
        Name: ""
      properties:
        Name:
          allOf:
          - $ref: '#/components/schemas/ConnectionName'
          - description: The name of the connection to remove authorization from.
          title: Name
      required:
      - Name
      title: DeauthorizeConnectionRequest
      type: object
    DeleteApiDestinationResponse:
      properties: {}
      type: object
    DeleteApiDestinationRequest:
      example:
        Name: ""
      properties:
        Name:
          allOf:
          - $ref: '#/components/schemas/ApiDestinationName'
          - description: The name of the destination to delete.
          title: Name
      required:
      - Name
      title: DeleteApiDestinationRequest
      type: object
    DeleteArchiveResponse:
      properties: {}
      type: object
    DeleteArchiveRequest:
      example:
        ArchiveName: ""
      properties:
        ArchiveName:
          allOf:
          - $ref: '#/components/schemas/ArchiveName'
          - description: The name of the archive to delete.
          title: ArchiveName
      required:
      - ArchiveName
      title: DeleteArchiveRequest
      type: object
    DeleteConnectionResponse:
      example:
        ConnectionArn: ""
        CreationTime: ""
        LastModifiedTime: ""
        ConnectionState: ""
        LastAuthorizedTime: ""
      properties:
        ConnectionArn:
          allOf:
          - $ref: '#/components/schemas/ConnectionArn'
          - description: The ARN of the connection that was deleted.
          title: ConnectionArn
        ConnectionState:
          allOf:
          - $ref: '#/components/schemas/ConnectionState'
          - description: The state of the connection before it was deleted.
          title: ConnectionState
        CreationTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          - description: A time stamp for the time that the connection was created.
          title: CreationTime
        LastModifiedTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          - description: A time stamp for the time that the connection was last modified
              before it was deleted.
          title: LastModifiedTime
        LastAuthorizedTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          - description: A time stamp for the time that the connection was last authorized
              before it wa deleted.
          title: LastAuthorizedTime
      title: DeleteConnectionResponse
      type: object
    DeleteConnectionRequest:
      example:
        Name: ""
      properties:
        Name:
          allOf:
          - $ref: '#/components/schemas/ConnectionName'
          - description: The name of the connection to delete.
          title: Name
      required:
      - Name
      title: DeleteConnectionRequest
      type: object
    DeleteEndpointResponse:
      properties: {}
      type: object
    DeleteEndpointRequest:
      example:
        Name: ""
      properties:
        Name:
          allOf:
          - $ref: '#/components/schemas/EndpointName'
          - description: "The name of the endpoint you want to delete. For example,\
              \ <code>\"Name\":\"us-east-2-custom_bus_A-endpoint\"</code>.."
          title: Name
      required:
      - Name
      title: DeleteEndpointRequest
      type: object
    DeleteEventBusRequest:
      example:
        Name: ""
      properties:
        Name:
          allOf:
          - $ref: '#/components/schemas/EventBusName'
          - description: The name of the event bus to delete.
          title: Name
      required:
      - Name
      title: DeleteEventBusRequest
      type: object
    DeletePartnerEventSourceRequest:
      example:
        Account: ""
        Name: ""
      properties:
        Name:
          allOf:
          - $ref: '#/components/schemas/EventSourceName'
          - description: The name of the event source to delete.
          title: Name
        Account:
          allOf:
          - $ref: '#/components/schemas/AccountId'
          - description: The Amazon Web Services account ID of the Amazon Web Services
              customer that the event source was created for.
          title: Account
      required:
      - Account
      - Name
      title: DeletePartnerEventSourceRequest
      type: object
    DeleteRuleRequest:
      example:
        EventBusName: ""
        Force: ""
        Name: ""
      properties:
        Name:
          allOf:
          - $ref: '#/components/schemas/RuleName'
          - description: The name of the rule.
          title: Name
        EventBusName:
          allOf:
          - $ref: '#/components/schemas/EventBusNameOrArn'
          - description: "The name or ARN of the event bus associated with the rule.\
              \ If you omit this, the default event bus is used."
          title: EventBusName
        Force:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          - description: "If this is a managed rule, created by an Amazon Web Services\
              \ service on your behalf, you must specify <code>Force</code> as <code>True</code>\
              \ to delete the rule. This parameter is ignored for rules that are not\
              \ managed rules. You can check whether a rule is a managed rule by using\
              \ <code>DescribeRule</code> or <code>ListRules</code> and checking the\
              \ <code>ManagedBy</code> field of the response."
          title: Force
      required:
      - Name
      title: DeleteRuleRequest
      type: object
    ManagedRuleException: {}
    DescribeApiDestinationResponse:
      example:
        Description: ""
        ApiDestinationState: ""
        ConnectionArn: ""
        CreationTime: ""
        LastModifiedTime: ""
        ApiDestinationArn: ""
        InvocationEndpoint: ""
        HttpMethod: ""
        Name: ""
        InvocationRateLimitPerSecond: ""
      properties:
        ApiDestinationArn:
          allOf:
          - $ref: '#/components/schemas/ApiDestinationArn'
          - description: The ARN of the API destination retrieved.
          title: ApiDestinationArn
        Name:
          allOf:
          - $ref: '#/components/schemas/ApiDestinationName'
          - description: The name of the API destination retrieved.
          title: Name
        Description:
          allOf:
          - $ref: '#/components/schemas/ApiDestinationDescription'
          - description: The description for the API destination retrieved.
          title: Description
        ApiDestinationState:
          allOf:
          - $ref: '#/components/schemas/ApiDestinationState'
          - description: The state of the API destination retrieved.
          title: ApiDestinationState
        ConnectionArn:
          allOf:
          - $ref: '#/components/schemas/ConnectionArn'
          - description: The ARN of the connection specified for the API destination
              retrieved.
          title: ConnectionArn
        InvocationEndpoint:
          allOf:
          - $ref: '#/components/schemas/HttpsEndpoint'
          - description: The URL to use to connect to the HTTP endpoint.
          title: InvocationEndpoint
        HttpMethod:
          allOf:
          - $ref: '#/components/schemas/ApiDestinationHttpMethod'
          - description: The method to use to connect to the HTTP endpoint.
          title: HttpMethod
        InvocationRateLimitPerSecond:
          allOf:
          - $ref: '#/components/schemas/ApiDestinationInvocationRateLimitPerSecond'
          - description: "The maximum number of invocations per second to specified\
              \ for the API destination. Note that if you set the invocation rate\
              \ maximum to a value lower the rate necessary to send all events received\
              \ on to the destination HTTP endpoint, some events may not be delivered\
              \ within the 24-hour retry window. If you plan to set the rate lower\
              \ than the rate necessary to deliver all events, consider using a dead-letter\
              \ queue to catch events that are not delivered within 24 hours."
          title: InvocationRateLimitPerSecond
        CreationTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          - description: A time stamp for the time that the API destination was created.
          title: CreationTime
        LastModifiedTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          - description: A time stamp for the time that the API destination was last
              modified.
          title: LastModifiedTime
      title: DescribeApiDestinationResponse
      type: object
    DescribeApiDestinationRequest:
      example:
        Name: ""
      properties:
        Name:
          allOf:
          - $ref: '#/components/schemas/ApiDestinationName'
          - description: The name of the API destination to retrieve.
          title: Name
      required:
      - Name
      title: DescribeApiDestinationRequest
      type: object
    DescribeArchiveResponse:
      example:
        EventPattern: ""
        Description: ""
        EventCount: ""
        State: ""
        StateReason: ""
        ArchiveName: ""
        CreationTime: ""
        RetentionDays: ""
        EventSourceArn: ""
        ArchiveArn: ""
        SizeBytes: ""
      properties:
        ArchiveArn:
          allOf:
          - $ref: '#/components/schemas/ArchiveArn'
          - description: The ARN of the archive.
          title: ArchiveArn
        ArchiveName:
          allOf:
          - $ref: '#/components/schemas/ArchiveName'
          - description: The name of the archive.
          title: ArchiveName
        EventSourceArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          - description: The ARN of the event source associated with the archive.
          title: EventSourceArn
        Description:
          allOf:
          - $ref: '#/components/schemas/ArchiveDescription'
          - description: The description of the archive.
          title: Description
        EventPattern:
          allOf:
          - $ref: '#/components/schemas/EventPattern'
          - description: The event pattern used to filter events sent to the archive.
          title: EventPattern
        State:
          allOf:
          - $ref: '#/components/schemas/ArchiveState'
          - description: The state of the archive.
          title: State
        StateReason:
          allOf:
          - $ref: '#/components/schemas/ArchiveStateReason'
          - description: The reason that the archive is in the state.
          title: StateReason
        RetentionDays:
          allOf:
          - $ref: '#/components/schemas/RetentionDays'
          - description: The number of days to retain events for in the archive.
          title: RetentionDays
        SizeBytes:
          allOf:
          - $ref: '#/components/schemas/Long'
          - description: The size of the archive in bytes.
          title: SizeBytes
        EventCount:
          allOf:
          - $ref: '#/components/schemas/Long'
          - description: The number of events in the archive.
          title: EventCount
        CreationTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          - description: The time at which the archive was created.
          title: CreationTime
      title: DescribeArchiveResponse
      type: object
    DescribeArchiveRequest:
      example:
        ArchiveName: ""
      properties:
        ArchiveName:
          allOf:
          - $ref: '#/components/schemas/ArchiveName'
          - description: The name of the archive to retrieve.
          title: ArchiveName
      required:
      - ArchiveName
      title: DescribeArchiveRequest
      type: object
    DescribeConnectionResponse:
      example:
        SecretArn: ""
        AuthParameters:
          InvocationHttpParameters:
            HeaderParameters: ""
            QueryStringParameters: ""
            BodyParameters: ""
          BasicAuthParameters:
            Username: ""
          ApiKeyAuthParameters:
            ApiKeyName: ""
          OAuthParameters:
            ClientParameters:
              ClientID: ""
            OAuthHttpParameters:
              HeaderParameters: ""
              QueryStringParameters: ""
              BodyParameters: ""
            AuthorizationEndpoint: ""
            HttpMethod: ""
        Description: ""
        StateReason: ""
        ConnectionArn: ""
        CreationTime: ""
        LastModifiedTime: ""
        ConnectionState: ""
        AuthorizationType: ""
        LastAuthorizedTime: ""
        Name: ""
      properties:
        ConnectionArn:
          allOf:
          - $ref: '#/components/schemas/ConnectionArn'
          - description: The ARN of the connection retrieved.
          title: ConnectionArn
        Name:
          allOf:
          - $ref: '#/components/schemas/ConnectionName'
          - description: The name of the connection retrieved.
          title: Name
        Description:
          allOf:
          - $ref: '#/components/schemas/ConnectionDescription'
          - description: The description for the connection retrieved.
          title: Description
        ConnectionState:
          allOf:
          - $ref: '#/components/schemas/ConnectionState'
          - description: The state of the connection retrieved.
          title: ConnectionState
        StateReason:
          allOf:
          - $ref: '#/components/schemas/ConnectionStateReason'
          - description: The reason that the connection is in the current connection
              state.
          title: StateReason
        AuthorizationType:
          allOf:
          - $ref: '#/components/schemas/ConnectionAuthorizationType'
          - description: The type of authorization specified for the connection.
          title: AuthorizationType
        SecretArn:
          allOf:
          - $ref: '#/components/schemas/SecretsManagerSecretArn'
          - description: The ARN of the secret created from the authorization parameters
              specified for the connection.
          title: SecretArn
        AuthParameters:
          $ref: '#/components/schemas/DescribeConnectionResponse_AuthParameters'
        CreationTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          - description: A time stamp for the time that the connection was created.
          title: CreationTime
        LastModifiedTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          - description: A time stamp for the time that the connection was last modified.
          title: LastModifiedTime
        LastAuthorizedTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          - description: A time stamp for the time that the connection was last authorized.
          title: LastAuthorizedTime
      title: DescribeConnectionResponse
      type: object
    DescribeConnectionRequest:
      example:
        Name: ""
      properties:
        Name:
          allOf:
          - $ref: '#/components/schemas/ConnectionName'
          - description: The name of the connection to retrieve.
          title: Name
      required:
      - Name
      title: DescribeConnectionRequest
      type: object
    DescribeEndpointResponse:
      example:
        Description: ""
        ReplicationConfig:
          State: ""
        RoutingConfig:
          FailoverConfig:
            Secondary:
              Route: ""
            Primary:
              HealthCheck: ""
        EndpointUrl: ""
        RoleArn: ""
        Name: ""
        EventBuses: ""
        State: ""
        StateReason: ""
        EndpointId: ""
        CreationTime: ""
        LastModifiedTime: ""
        Arn: ""
      properties:
        Name:
          allOf:
          - $ref: '#/components/schemas/EndpointName'
          - description: The name of the endpoint you asked for information about.
          title: Name
        Description:
          allOf:
          - $ref: '#/components/schemas/EndpointDescription'
          - description: The description of the endpoint you asked for information
              about.
          title: Description
        Arn:
          allOf:
          - $ref: '#/components/schemas/EndpointArn'
          - description: The ARN of the endpoint you asked for information about.
          title: Arn
        RoutingConfig:
          $ref: '#/components/schemas/DescribeEndpointResponse_RoutingConfig'
        ReplicationConfig:
          $ref: '#/components/schemas/DescribeEndpointResponse_ReplicationConfig'
        EventBuses:
          allOf:
          - $ref: '#/components/schemas/EndpointEventBusList'
          - description: The event buses being used by the endpoint you asked for
              information about.
          title: EventBuses
        RoleArn:
          allOf:
          - $ref: '#/components/schemas/IamRoleArn'
          - description: The ARN of the role used by the endpoint you asked for information
              about.
          title: RoleArn
        EndpointId:
          allOf:
          - $ref: '#/components/schemas/EndpointId'
          - description: The ID of the endpoint you asked for information about.
          title: EndpointId
        EndpointUrl:
          allOf:
          - $ref: '#/components/schemas/EndpointUrl'
          - description: The URL of the endpoint you asked for information about.
          title: EndpointUrl
        State:
          allOf:
          - $ref: '#/components/schemas/EndpointState'
          - description: The current state of the endpoint you asked for information
              about.
          title: State
        StateReason:
          allOf:
          - $ref: '#/components/schemas/EndpointStateReason'
          - description: The reason the endpoint you asked for information about is
              in its current state.
          title: StateReason
        CreationTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          - description: The time the endpoint you asked for information about was
              created.
          title: CreationTime
        LastModifiedTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          - description: The last time the endpoint you asked for information about
              was modified.
          title: LastModifiedTime
      title: DescribeEndpointResponse
      type: object
    DescribeEndpointRequest:
      example:
        HomeRegion: ""
        Name: ""
      properties:
        Name:
          allOf:
          - $ref: '#/components/schemas/EndpointName'
          - description: "The name of the endpoint you want to get information about.\
              \ For example, <code>\"Name\":\"us-east-2-custom_bus_A-endpoint\"</code>."
          title: Name
        HomeRegion:
          allOf:
          - $ref: '#/components/schemas/HomeRegion'
          - description: "The primary Region of the endpoint you want to get information\
              \ about. For example <code>\"HomeRegion\": \"us-east-1\"</code>."
          title: HomeRegion
      required:
      - Name
      title: DescribeEndpointRequest
      type: object
    DescribeEventBusResponse:
      example:
        Policy: ""
        Arn: ""
        Name: ""
      properties:
        Name:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: "The name of the event bus. Currently, this is always <code>default</code>."
          title: Name
        Arn:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The Amazon Resource Name (ARN) of the account permitted to
              write events to the current account.
          title: Arn
        Policy:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The policy that enables the external account to send events
              to your account.
          title: Policy
      title: DescribeEventBusResponse
      type: object
    DescribeEventBusRequest:
      example:
        Name: ""
      properties:
        Name:
          allOf:
          - $ref: '#/components/schemas/EventBusNameOrArn'
          - description: "The name or ARN of the event bus to show details for. If\
              \ you omit this, the default event bus is displayed."
          title: Name
      title: DescribeEventBusRequest
      type: object
    DescribeEventSourceResponse:
      example:
        CreatedBy: ""
        State: ""
        CreationTime: ""
        Arn: ""
        ExpirationTime: ""
        Name: ""
      properties:
        Arn:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The ARN of the partner event source.
          title: Arn
        CreatedBy:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The name of the SaaS partner that created the event source.
          title: CreatedBy
        CreationTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          - description: The date and time that the event source was created.
          title: CreationTime
        ExpirationTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          - description: The date and time that the event source will expire if you
              do not create a matching event bus.
          title: ExpirationTime
        Name:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The name of the partner event source.
          title: Name
        State:
          allOf:
          - $ref: '#/components/schemas/EventSourceState'
          - description: "The state of the event source. If it is ACTIVE, you have\
              \ already created a matching event bus for this event source, and that\
              \ event bus is active. If it is PENDING, either you haven't yet created\
              \ a matching event bus, or that event bus is deactivated. If it is DELETED,\
              \ you have created a matching event bus, but the event source has since\
              \ been deleted."
          title: State
      title: DescribeEventSourceResponse
      type: object
    DescribeEventSourceRequest:
      example:
        Name: ""
      properties:
        Name:
          allOf:
          - $ref: '#/components/schemas/EventSourceName'
          - description: The name of the partner event source to display the details
              of.
          title: Name
      required:
      - Name
      title: DescribeEventSourceRequest
      type: object
    DescribePartnerEventSourceResponse:
      example:
        Arn: ""
        Name: ""
      properties:
        Arn:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The ARN of the event source.
          title: Arn
        Name:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The name of the event source.
          title: Name
      title: DescribePartnerEventSourceResponse
      type: object
    DescribePartnerEventSourceRequest:
      example:
        Name: ""
      properties:
        Name:
          allOf:
          - $ref: '#/components/schemas/EventSourceName'
          - description: The name of the event source to display.
          title: Name
      required:
      - Name
      title: DescribePartnerEventSourceRequest
      type: object
    DescribeReplayResponse:
      example:
        ReplayArn: ""
        Destination:
          FilterArns: ""
          Arn: ""
        ReplayEndTime: ""
        Description: ""
        EventStartTime: ""
        State: ""
        StateReason: ""
        ReplayStartTime: ""
        ReplayName: ""
        EventSourceArn: ""
        EventLastReplayedTime: ""
        EventEndTime: ""
      properties:
        ReplayName:
          allOf:
          - $ref: '#/components/schemas/ReplayName'
          - description: The name of the replay.
          title: ReplayName
        ReplayArn:
          allOf:
          - $ref: '#/components/schemas/ReplayArn'
          - description: The ARN of the replay.
          title: ReplayArn
        Description:
          allOf:
          - $ref: '#/components/schemas/ReplayDescription'
          - description: The description of the replay.
          title: Description
        State:
          allOf:
          - $ref: '#/components/schemas/ReplayState'
          - description: The current state of the replay.
          title: State
        StateReason:
          allOf:
          - $ref: '#/components/schemas/ReplayStateReason'
          - description: The reason that the replay is in the current state.
          title: StateReason
        EventSourceArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          - description: The ARN of the archive events were replayed from.
          title: EventSourceArn
        Destination:
          $ref: '#/components/schemas/DescribeReplayResponse_Destination'
        EventStartTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          - description: The time stamp of the first event that was last replayed
              from the archive.
          title: EventStartTime
        EventEndTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          - description: The time stamp for the last event that was replayed from
              the archive.
          title: EventEndTime
        EventLastReplayedTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          - description: The time that the event was last replayed.
          title: EventLastReplayedTime
        ReplayStartTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          - description: A time stamp for the time that the replay started.
          title: ReplayStartTime
        ReplayEndTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          - description: A time stamp for the time that the replay stopped.
          title: ReplayEndTime
      title: DescribeReplayResponse
      type: object
    DescribeReplayRequest:
      example:
        ReplayName: ""
      properties:
        ReplayName:
          allOf:
          - $ref: '#/components/schemas/ReplayName'
          - description: The name of the replay to retrieve.
          title: ReplayName
      required:
      - ReplayName
      title: DescribeReplayRequest
      type: object
    DescribeRuleResponse:
      example:
        EventBusName: ""
        EventPattern: ""
        ScheduleExpression: ""
        Description: ""
        ManagedBy: ""
        CreatedBy: ""
        State: ""
        Arn: ""
        RoleArn: ""
        Name: ""
      properties:
        Name:
          allOf:
          - $ref: '#/components/schemas/RuleName'
          - description: The name of the rule.
          title: Name
        Arn:
          allOf:
          - $ref: '#/components/schemas/RuleArn'
          - description: The Amazon Resource Name (ARN) of the rule.
          title: Arn
        EventPattern:
          allOf:
          - $ref: '#/components/schemas/EventPattern'
          - description: "The event pattern. For more information, see <a href=\"\
              https://docs.aws.amazon.com/eventbridge/latest/userguide/eventbridge-and-event-patterns.html\"\
              >Events and Event Patterns</a> in the <i>Amazon EventBridge User Guide</i>."
          title: EventPattern
        ScheduleExpression:
          allOf:
          - $ref: '#/components/schemas/ScheduleExpression'
          - description: "The scheduling expression. For example, \"cron(0 20 * *\
              \ ? *)\", \"rate(5 minutes)\"."
          title: ScheduleExpression
        State:
          allOf:
          - $ref: '#/components/schemas/RuleState'
          - description: Specifies whether the rule is enabled or disabled.
          title: State
        Description:
          allOf:
          - $ref: '#/components/schemas/RuleDescription'
          - description: The description of the rule.
          title: Description
        RoleArn:
          allOf:
          - $ref: '#/components/schemas/RoleArn'
          - description: The Amazon Resource Name (ARN) of the IAM role associated
              with the rule.
          title: RoleArn
        ManagedBy:
          allOf:
          - $ref: '#/components/schemas/ManagedBy'
          - description: "If this is a managed rule, created by an Amazon Web Services\
              \ service on your behalf, this field displays the principal name of\
              \ the Amazon Web Services service that created the rule."
          title: ManagedBy
        EventBusName:
          allOf:
          - $ref: '#/components/schemas/EventBusName'
          - description: The name of the event bus associated with the rule.
          title: EventBusName
        CreatedBy:
          allOf:
          - $ref: '#/components/schemas/CreatedBy'
          - description: "The account ID of the user that created the rule. If you\
              \ use <code>PutRule</code> to put a rule on an event bus in another\
              \ account, the other account is the owner of the rule, and the rule\
              \ ARN includes the account ID for that account. However, the value for\
              \ <code>CreatedBy</code> is the account ID as the account that created\
              \ the rule in the other account."
          title: CreatedBy
      title: DescribeRuleResponse
      type: object
    DescribeRuleRequest:
      example:
        EventBusName: ""
        Name: ""
      properties:
        Name:
          allOf:
          - $ref: '#/components/schemas/RuleName'
          - description: The name of the rule.
          title: Name
        EventBusName:
          allOf:
          - $ref: '#/components/schemas/EventBusNameOrArn'
          - description: "The name or ARN of the event bus associated with the rule.\
              \ If you omit this, the default event bus is used."
          title: EventBusName
      required:
      - Name
      title: DescribeRuleRequest
      type: object
    DisableRuleRequest:
      example:
        EventBusName: ""
        Name: ""
      properties:
        Name:
          allOf:
          - $ref: '#/components/schemas/RuleName'
          - description: The name of the rule.
          title: Name
        EventBusName:
          allOf:
          - $ref: '#/components/schemas/EventBusNameOrArn'
          - description: "The name or ARN of the event bus associated with the rule.\
              \ If you omit this, the default event bus is used."
          title: EventBusName
      required:
      - Name
      title: DisableRuleRequest
      type: object
    EnableRuleRequest:
      example:
        EventBusName: ""
        Name: ""
      properties:
        Name:
          allOf:
          - $ref: '#/components/schemas/RuleName'
          - description: The name of the rule.
          title: Name
        EventBusName:
          allOf:
          - $ref: '#/components/schemas/EventBusNameOrArn'
          - description: "The name or ARN of the event bus associated with the rule.\
              \ If you omit this, the default event bus is used."
          title: EventBusName
      required:
      - Name
      title: EnableRuleRequest
      type: object
    ListApiDestinationsResponse:
      example:
        NextToken: ""
        ApiDestinations: ""
      properties:
        ApiDestinations:
          allOf:
          - $ref: '#/components/schemas/ApiDestinationResponseList'
          - description: An array of <code>ApiDestination</code> objects that include
              information about an API destination.
          title: ApiDestinations
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          - description: A token you can use in a subsequent request to retrieve the
              next set of results.
          title: NextToken
      title: ListApiDestinationsResponse
      type: object
    ListApiDestinationsRequest:
      example:
        NamePrefix: ""
        NextToken: ""
        ConnectionArn: ""
        Limit: ""
      properties:
        NamePrefix:
          allOf:
          - $ref: '#/components/schemas/ApiDestinationName'
          - description: A name prefix to filter results returned. Only API destinations
              with a name that starts with the prefix are returned.
          title: NamePrefix
        ConnectionArn:
          allOf:
          - $ref: '#/components/schemas/ConnectionArn'
          - description: The ARN of the connection specified for the API destination.
          title: ConnectionArn
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          - description: The token returned by a previous call to retrieve the next
              set of results.
          title: NextToken
        Limit:
          allOf:
          - $ref: '#/components/schemas/LimitMax100'
          - description: The maximum number of API destinations to include in the
              response.
          title: Limit
      title: ListApiDestinationsRequest
      type: object
    ListArchivesResponse:
      example:
        NextToken: ""
        Archives: ""
      properties:
        Archives:
          allOf:
          - $ref: '#/components/schemas/ArchiveResponseList'
          - description: An array of <code>Archive</code> objects that include details
              about an archive.
          title: Archives
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          - description: The token returned by a previous call to retrieve the next
              set of results.
          title: NextToken
      title: ListArchivesResponse
      type: object
    ListArchivesRequest:
      example:
        NamePrefix: ""
        NextToken: ""
        State: ""
        Limit: ""
        EventSourceArn: ""
      properties:
        NamePrefix:
          allOf:
          - $ref: '#/components/schemas/ArchiveName'
          - description: A name prefix to filter the archives returned. Only archives
              with name that match the prefix are returned.
          title: NamePrefix
        EventSourceArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          - description: The ARN of the event source associated with the archive.
          title: EventSourceArn
        State:
          allOf:
          - $ref: '#/components/schemas/ArchiveState'
          - description: The state of the archive.
          title: State
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          - description: The token returned by a previous call to retrieve the next
              set of results.
          title: NextToken
        Limit:
          allOf:
          - $ref: '#/components/schemas/LimitMax100'
          - description: The maximum number of results to return.
          title: Limit
      title: ListArchivesRequest
      type: object
    ListConnectionsResponse:
      example:
        Connections: ""
        NextToken: ""
      properties:
        Connections:
          allOf:
          - $ref: '#/components/schemas/ConnectionResponseList'
          - description: An array of connections objects that include details about
              the connections.
          title: Connections
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          - description: A token you can use in a subsequent request to retrieve the
              next set of results.
          title: NextToken
      title: ListConnectionsResponse
      type: object
    ListConnectionsRequest:
      example:
        NamePrefix: ""
        NextToken: ""
        ConnectionState: ""
        Limit: ""
      properties:
        NamePrefix:
          allOf:
          - $ref: '#/components/schemas/ConnectionName'
          - description: A name prefix to filter results returned. Only connections
              with a name that starts with the prefix are returned.
          title: NamePrefix
        ConnectionState:
          allOf:
          - $ref: '#/components/schemas/ConnectionState'
          - description: The state of the connection.
          title: ConnectionState
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          - description: The token returned by a previous call to retrieve the next
              set of results.
          title: NextToken
        Limit:
          allOf:
          - $ref: '#/components/schemas/LimitMax100'
          - description: The maximum number of connections to return.
          title: Limit
      title: ListConnectionsRequest
      type: object
    ListEndpointsResponse:
      example:
        Endpoints: ""
        NextToken: ""
      properties:
        Endpoints:
          allOf:
          - $ref: '#/components/schemas/EndpointList'
          - description: The endpoints returned by the call.
          title: Endpoints
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          - description: "If <code>nextToken</code> is returned, there are more results\
              \ available. The value of <code>nextToken</code> is a unique pagination\
              \ token for each page. Make the call again using the returned token\
              \ to retrieve the next page. Keep all other arguments unchanged. Each\
              \ pagination token expires after 24 hours. Using an expired pagination\
              \ token will return an HTTP 400 InvalidToken error."
          title: NextToken
      title: ListEndpointsResponse
      type: object
    ListEndpointsRequest:
      example:
        NamePrefix: ""
        NextToken: ""
        HomeRegion: ""
        MaxResults: ""
      properties:
        NamePrefix:
          allOf:
          - $ref: '#/components/schemas/EndpointName'
          - description: "A value that will return a subset of the endpoints associated\
              \ with this account. For example, <code>\"NamePrefix\": \"ABC\"</code>\
              \ will return all endpoints with \"ABC\" in the name."
          title: NamePrefix
        HomeRegion:
          allOf:
          - $ref: '#/components/schemas/HomeRegion'
          - description: "The primary Region of the endpoints associated with this\
              \ account. For example <code>\"HomeRegion\": \"us-east-1\"</code>."
          title: HomeRegion
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          - description: "If <code>nextToken</code> is returned, there are more results\
              \ available. The value of <code>nextToken</code> is a unique pagination\
              \ token for each page. Make the call again using the returned token\
              \ to retrieve the next page. Keep all other arguments unchanged. Each\
              \ pagination token expires after 24 hours. Using an expired pagination\
              \ token will return an HTTP 400 InvalidToken error."
          title: NextToken
        MaxResults:
          allOf:
          - $ref: '#/components/schemas/LimitMax100'
          - description: The maximum number of results returned by the call.
          title: MaxResults
      title: ListEndpointsRequest
      type: object
    ListEventBusesResponse:
      example:
        EventBuses: ""
        NextToken: ""
      properties:
        EventBuses:
          allOf:
          - $ref: '#/components/schemas/EventBusList'
          - description: This list of event buses.
          title: EventBuses
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          - description: A token you can use in a subsequent operation to retrieve
              the next set of results.
          title: NextToken
      title: ListEventBusesResponse
      type: object
    ListEventBusesRequest:
      example:
        NamePrefix: ""
        NextToken: ""
        Limit: ""
      properties:
        NamePrefix:
          allOf:
          - $ref: '#/components/schemas/EventBusName'
          - description: Specifying this limits the results to only those event buses
              with names that start with the specified prefix.
          title: NamePrefix
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          - description: The token returned by a previous call to retrieve the next
              set of results.
          title: NextToken
        Limit:
          allOf:
          - $ref: '#/components/schemas/LimitMax100'
          - description: Specifying this limits the number of results returned by
              this operation. The operation also returns a NextToken which you can
              use in a subsequent operation to retrieve the next set of results.
          title: Limit
      title: ListEventBusesRequest
      type: object
    ListEventSourcesResponse:
      example:
        EventSources: ""
        NextToken: ""
      properties:
        EventSources:
          allOf:
          - $ref: '#/components/schemas/EventSourceList'
          - description: The list of event sources.
          title: EventSources
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          - description: A token you can use in a subsequent operation to retrieve
              the next set of results.
          title: NextToken
      title: ListEventSourcesResponse
      type: object
    ListEventSourcesRequest:
      example:
        NamePrefix: ""
        NextToken: ""
        Limit: ""
      properties:
        NamePrefix:
          allOf:
          - $ref: '#/components/schemas/EventSourceNamePrefix'
          - description: Specifying this limits the results to only those partner
              event sources with names that start with the specified prefix.
          title: NamePrefix
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          - description: The token returned by a previous call to retrieve the next
              set of results.
          title: NextToken
        Limit:
          allOf:
          - $ref: '#/components/schemas/LimitMax100'
          - description: Specifying this limits the number of results returned by
              this operation. The operation also returns a NextToken which you can
              use in a subsequent operation to retrieve the next set of results.
          title: Limit
      title: ListEventSourcesRequest
      type: object
    ListPartnerEventSourceAccountsResponse:
      example:
        NextToken: ""
        PartnerEventSourceAccounts: ""
      properties:
        PartnerEventSourceAccounts:
          allOf:
          - $ref: '#/components/schemas/PartnerEventSourceAccountList'
          - description: The list of partner event sources returned by the operation.
          title: PartnerEventSourceAccounts
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          - description: A token you can use in a subsequent operation to retrieve
              the next set of results.
          title: NextToken
      title: ListPartnerEventSourceAccountsResponse
      type: object
    ListPartnerEventSourceAccountsRequest:
      example:
        NextToken: ""
        EventSourceName: ""
        Limit: ""
      properties:
        EventSourceName:
          allOf:
          - $ref: '#/components/schemas/EventSourceName'
          - description: The name of the partner event source to display account information
              about.
          title: EventSourceName
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          - description: The token returned by a previous call to this operation.
              Specifying this retrieves the next set of results.
          title: NextToken
        Limit:
          allOf:
          - $ref: '#/components/schemas/LimitMax100'
          - description: Specifying this limits the number of results returned by
              this operation. The operation also returns a NextToken which you can
              use in a subsequent operation to retrieve the next set of results.
          title: Limit
      required:
      - EventSourceName
      title: ListPartnerEventSourceAccountsRequest
      type: object
    ListPartnerEventSourcesResponse:
      example:
        NextToken: ""
        PartnerEventSources: ""
      properties:
        PartnerEventSources:
          allOf:
          - $ref: '#/components/schemas/PartnerEventSourceList'
          - description: The list of partner event sources returned by the operation.
          title: PartnerEventSources
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          - description: A token you can use in a subsequent operation to retrieve
              the next set of results.
          title: NextToken
      title: ListPartnerEventSourcesResponse
      type: object
    ListPartnerEventSourcesRequest:
      example:
        NamePrefix: ""
        NextToken: ""
        Limit: ""
      properties:
        NamePrefix:
          allOf:
          - $ref: '#/components/schemas/PartnerEventSourceNamePrefix'
          - description: "If you specify this, the results are limited to only those\
              \ partner event sources that start with the string you specify."
          title: NamePrefix
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          - description: The token returned by a previous call to this operation.
              Specifying this retrieves the next set of results.
          title: NextToken
        Limit:
          allOf:
          - $ref: '#/components/schemas/LimitMax100'
          - description: pecifying this limits the number of results returned by this
              operation. The operation also returns a NextToken which you can use
              in a subsequent operation to retrieve the next set of results.
          title: Limit
      required:
      - NamePrefix
      title: ListPartnerEventSourcesRequest
      type: object
    ListReplaysResponse:
      example:
        NextToken: ""
        Replays: ""
      properties:
        Replays:
          allOf:
          - $ref: '#/components/schemas/ReplayList'
          - description: An array of <code>Replay</code> objects that contain information
              about the replay.
          title: Replays
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          - description: The token returned by a previous call to retrieve the next
              set of results.
          title: NextToken
      title: ListReplaysResponse
      type: object
    ListReplaysRequest:
      example:
        NamePrefix: ""
        NextToken: ""
        State: ""
        Limit: ""
        EventSourceArn: ""
      properties:
        NamePrefix:
          allOf:
          - $ref: '#/components/schemas/ReplayName'
          - description: A name prefix to filter the replays returned. Only replays
              with name that match the prefix are returned.
          title: NamePrefix
        State:
          allOf:
          - $ref: '#/components/schemas/ReplayState'
          - description: The state of the replay.
          title: State
        EventSourceArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          - description: The ARN of the archive from which the events are replayed.
          title: EventSourceArn
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          - description: The token returned by a previous call to retrieve the next
              set of results.
          title: NextToken
        Limit:
          allOf:
          - $ref: '#/components/schemas/LimitMax100'
          - description: The maximum number of replays to retrieve.
          title: Limit
      title: ListReplaysRequest
      type: object
    ListRuleNamesByTargetResponse:
      example:
        RuleNames: ""
        NextToken: ""
      properties:
        RuleNames:
          allOf:
          - $ref: '#/components/schemas/RuleNameList'
          - description: The names of the rules that can invoke the given target.
          title: RuleNames
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          - description: "Indicates whether there are additional results to retrieve.\
              \ If there are no more results, the value is null."
          title: NextToken
      title: ListRuleNamesByTargetResponse
      type: object
    ListRuleNamesByTargetRequest:
      example:
        EventBusName: ""
        NextToken: ""
        TargetArn: ""
        Limit: ""
      properties:
        TargetArn:
          allOf:
          - $ref: '#/components/schemas/TargetArn'
          - description: The Amazon Resource Name (ARN) of the target resource.
          title: TargetArn
        EventBusName:
          allOf:
          - $ref: '#/components/schemas/EventBusNameOrArn'
          - description: "The name or ARN of the event bus to list rules for. If you\
              \ omit this, the default event bus is used."
          title: EventBusName
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          - description: The token returned by a previous call to retrieve the next
              set of results.
          title: NextToken
        Limit:
          allOf:
          - $ref: '#/components/schemas/LimitMax100'
          - description: The maximum number of results to return.
          title: Limit
      required:
      - TargetArn
      title: ListRuleNamesByTargetRequest
      type: object
    ListRulesResponse:
      example:
        NextToken: ""
        Rules: ""
      properties:
        Rules:
          allOf:
          - $ref: '#/components/schemas/RuleResponseList'
          - description: The rules that match the specified criteria.
          title: Rules
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          - description: "Indicates whether there are additional results to retrieve.\
              \ If there are no more results, the value is null."
          title: NextToken
      title: ListRulesResponse
      type: object
    ListRulesRequest:
      example:
        NamePrefix: ""
        EventBusName: ""
        NextToken: ""
        Limit: ""
      properties:
        NamePrefix:
          allOf:
          - $ref: '#/components/schemas/RuleName'
          - description: The prefix matching the rule name.
          title: NamePrefix
        EventBusName:
          allOf:
          - $ref: '#/components/schemas/EventBusNameOrArn'
          - description: "The name or ARN of the event bus to list the rules for.\
              \ If you omit this, the default event bus is used."
          title: EventBusName
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          - description: The token returned by a previous call to retrieve the next
              set of results.
          title: NextToken
        Limit:
          allOf:
          - $ref: '#/components/schemas/LimitMax100'
          - description: The maximum number of results to return.
          title: Limit
      title: ListRulesRequest
      type: object
    ListTagsForResourceResponse:
      example:
        Tags: ""
      properties:
        Tags:
          allOf:
          - $ref: '#/components/schemas/TagList'
          - description: The list of tag keys and values associated with the resource
              you specified
          title: Tags
      title: ListTagsForResourceResponse
      type: object
    ListTagsForResourceRequest:
      example:
        ResourceARN: ""
      properties:
        ResourceARN:
          allOf:
          - $ref: '#/components/schemas/Arn'
          - description: The ARN of the EventBridge resource for which you want to
              view tags.
          title: ResourceARN
      required:
      - ResourceARN
      title: ListTagsForResourceRequest
      type: object
    ListTargetsByRuleResponse:
      example:
        NextToken: ""
        Targets: ""
      properties:
        Targets:
          allOf:
          - $ref: '#/components/schemas/TargetList'
          - description: The targets assigned to the rule.
          title: Targets
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          - description: "Indicates whether there are additional results to retrieve.\
              \ If there are no more results, the value is null."
          title: NextToken
      title: ListTargetsByRuleResponse
      type: object
    ListTargetsByRuleRequest:
      example:
        EventBusName: ""
        NextToken: ""
        Rule: ""
        Limit: ""
      properties:
        Rule:
          allOf:
          - $ref: '#/components/schemas/RuleName'
          - description: The name of the rule.
          title: Rule
        EventBusName:
          allOf:
          - $ref: '#/components/schemas/EventBusNameOrArn'
          - description: "The name or ARN of the event bus associated with the rule.\
              \ If you omit this, the default event bus is used."
          title: EventBusName
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          - description: The token returned by a previous call to retrieve the next
              set of results.
          title: NextToken
        Limit:
          allOf:
          - $ref: '#/components/schemas/LimitMax100'
          - description: The maximum number of results to return.
          title: Limit
      required:
      - Rule
      title: ListTargetsByRuleRequest
      type: object
    PutEventsResponse:
      example:
        FailedEntryCount: ""
        Entries: ""
      properties:
        FailedEntryCount:
          allOf:
          - $ref: '#/components/schemas/Integer'
          - description: The number of failed entries.
          title: FailedEntryCount
        Entries:
          allOf:
          - $ref: '#/components/schemas/PutEventsResultEntryList'
          - description: "<p>The successfully and unsuccessfully ingested events results.\
              \ If the ingestion was successful, the entry has the event ID in it.\
              \ Otherwise, you can use the error code and error message to identify\
              \ the problem with the entry.</p> <p>For each record, the index of the\
              \ response element is the same as the index in the request array.</p>"
          title: Entries
      title: PutEventsResponse
      type: object
    PutEventsRequest:
      example:
        EndpointId: ""
        Entries: ""
      properties:
        Entries:
          allOf:
          - $ref: '#/components/schemas/PutEventsRequestEntryList'
          - description: "The entry that defines an event in your system. You can\
              \ specify several parameters for the entry such as the source and type\
              \ of the event, resources associated with the event, and so on."
          title: Entries
        EndpointId:
          allOf:
          - $ref: '#/components/schemas/EndpointId'
          - description: "<p>The URL subdomain of the endpoint. For example, if the\
              \ URL for Endpoint is https://abcde.veo.endpoints.event.amazonaws.com,\
              \ then the EndpointId is <code>abcde.veo</code>.</p> <important> <p>When\
              \ using Java, you must include <code>auth-crt</code> on the class path.</p>\
              \ </important>"
          title: EndpointId
      required:
      - Entries
      title: PutEventsRequest
      type: object
    PutPartnerEventsResponse:
      example:
        FailedEntryCount: ""
        Entries: ""
      properties:
        FailedEntryCount:
          allOf:
          - $ref: '#/components/schemas/Integer'
          - description: The number of events from this operation that could not be
              written to the partner event bus.
          title: FailedEntryCount
        Entries:
          allOf:
          - $ref: '#/components/schemas/PutPartnerEventsResultEntryList'
          - description: The list of events from this operation that were successfully
              written to the partner event bus.
          title: Entries
      title: PutPartnerEventsResponse
      type: object
    PutPartnerEventsRequest:
      example:
        Entries: ""
      properties:
        Entries:
          allOf:
          - $ref: '#/components/schemas/PutPartnerEventsRequestEntryList'
          - description: The list of events to write to the event bus.
          title: Entries
      required:
      - Entries
      title: PutPartnerEventsRequest
      type: object
    PutPermissionRequest:
      example:
        EventBusName: ""
        Condition:
          Type: ""
          Value: ""
          Key: ""
        Policy: ""
        Action: ""
        StatementId: ""
        Principal: ""
      properties:
        EventBusName:
          allOf:
          - $ref: '#/components/schemas/NonPartnerEventBusName'
          - description: "The name of the event bus associated with the rule. If you\
              \ omit this, the default event bus is used."
          title: EventBusName
        Action:
          allOf:
          - $ref: '#/components/schemas/Action'
          - description: The action that you are enabling the other account to perform.
          title: Action
        Principal:
          allOf:
          - $ref: '#/components/schemas/Principal'
          - description: "<p>The 12-digit Amazon Web Services account ID that you\
              \ are permitting to put events to your default event bus. Specify \"\
              *\" to permit any account to put events to your default event bus.</p>\
              \ <p>If you specify \"*\" without specifying <code>Condition</code>,\
              \ avoid creating rules that may match undesirable events. To create\
              \ more secure rules, make sure that the event pattern for each rule\
              \ contains an <code>account</code> field with a specific account ID\
              \ from which to receive events. Rules with an account field do not match\
              \ any events sent from other accounts.</p>"
          title: Principal
        StatementId:
          allOf:
          - $ref: '#/components/schemas/StatementId'
          - description: "<p>An identifier string for the external account that you\
              \ are granting permissions to. If you later want to revoke the permission\
              \ for this external account, specify this <code>StatementId</code> when\
              \ you run <a href=\"https://docs.aws.amazon.com/eventbridge/latest/APIReference/API_RemovePermission.html\"\
              >RemovePermission</a>.</p> <note> <p>Each <code>StatementId</code> must\
              \ be unique.</p> </note>"
          title: StatementId
        Condition:
          $ref: '#/components/schemas/PutPermissionRequest_Condition'
        Policy:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: "A JSON string that describes the permission policy statement.\
              \ You can include a <code>Policy</code> parameter in the request instead\
              \ of using the <code>StatementId</code>, <code>Action</code>, <code>Principal</code>,\
              \ or <code>Condition</code> parameters."
          title: Policy
      title: PutPermissionRequest
      type: object
    PolicyLengthExceededException: {}
    PutRuleResponse:
      example:
        RuleArn: ""
      properties:
        RuleArn:
          allOf:
          - $ref: '#/components/schemas/RuleArn'
          - description: The Amazon Resource Name (ARN) of the rule.
          title: RuleArn
      title: PutRuleResponse
      type: object
    PutRuleRequest:
      example:
        EventBusName: ""
        ScheduleExpression: ""
        EventPattern: ""
        Description: ""
        State: ""
        RoleArn: ""
        Tags: ""
        Name: ""
      properties:
        Name:
          allOf:
          - $ref: '#/components/schemas/RuleName'
          - description: The name of the rule that you are creating or updating.
          title: Name
        ScheduleExpression:
          allOf:
          - $ref: '#/components/schemas/ScheduleExpression'
          - description: "The scheduling expression. For example, \"cron(0 20 * *\
              \ ? *)\" or \"rate(5 minutes)\"."
          title: ScheduleExpression
        EventPattern:
          allOf:
          - $ref: '#/components/schemas/EventPattern'
          - description: "The event pattern. For more information, see <a href=\"\
              https://docs.aws.amazon.com/eventbridge/latest/userguide/eb-event-patterns.html\"\
              >Amazon EventBridge event patterns</a> in the <i>Amazon EventBridge\
              \ User Guide</i>."
          title: EventPattern
        State:
          allOf:
          - $ref: '#/components/schemas/RuleState'
          - description: Indicates whether the rule is enabled or disabled.
          title: State
        Description:
          allOf:
          - $ref: '#/components/schemas/RuleDescription'
          - description: A description of the rule.
          title: Description
        RoleArn:
          allOf:
          - $ref: '#/components/schemas/RoleArn'
          - description: "<p>The Amazon Resource Name (ARN) of the IAM role associated\
              \ with the rule.</p> <p>If you're setting an event bus in another account\
              \ as the target and that account granted permission to your account\
              \ through an organization instead of directly by the account ID, you\
              \ must specify a <code>RoleArn</code> with proper permissions in the\
              \ <code>Target</code> structure, instead of here in this parameter.</p>"
          title: RoleArn
        Tags:
          allOf:
          - $ref: '#/components/schemas/TagList'
          - description: The list of key-value pairs to associate with the rule.
          title: Tags
        EventBusName:
          allOf:
          - $ref: '#/components/schemas/EventBusNameOrArn'
          - description: "The name or ARN of the event bus to associate with this\
              \ rule. If you omit this, the default event bus is used."
          title: EventBusName
      required:
      - Name
      title: PutRuleRequest
      type: object
    PutTargetsResponse:
      example:
        FailedEntryCount: ""
        FailedEntries: ""
      properties:
        FailedEntryCount:
          allOf:
          - $ref: '#/components/schemas/Integer'
          - description: The number of failed entries.
          title: FailedEntryCount
        FailedEntries:
          allOf:
          - $ref: '#/components/schemas/PutTargetsResultEntryList'
          - description: The failed target entries.
          title: FailedEntries
      title: PutTargetsResponse
      type: object
    PutTargetsRequest:
      example:
        EventBusName: ""
        Targets: ""
        Rule: ""
      properties:
        Rule:
          allOf:
          - $ref: '#/components/schemas/RuleName'
          - description: The name of the rule.
          title: Rule
        EventBusName:
          allOf:
          - $ref: '#/components/schemas/EventBusNameOrArn'
          - description: "The name or ARN of the event bus associated with the rule.\
              \ If you omit this, the default event bus is used."
          title: EventBusName
        Targets:
          allOf:
          - $ref: '#/components/schemas/TargetList'
          - description: The targets to update or add to the rule.
          title: Targets
      required:
      - Rule
      - Targets
      title: PutTargetsRequest
      type: object
    RemovePermissionRequest:
      example:
        EventBusName: ""
        RemoveAllPermissions: ""
        StatementId: ""
      properties:
        StatementId:
          allOf:
          - $ref: '#/components/schemas/StatementId'
          - description: The statement ID corresponding to the account that is no
              longer allowed to put events to the default event bus.
          title: StatementId
        RemoveAllPermissions:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          - description: Specifies whether to remove all permissions.
          title: RemoveAllPermissions
        EventBusName:
          allOf:
          - $ref: '#/components/schemas/NonPartnerEventBusName'
          - description: "The name of the event bus to revoke permissions for. If\
              \ you omit this, the default event bus is used."
          title: EventBusName
      title: RemovePermissionRequest
      type: object
    RemoveTargetsResponse:
      example:
        FailedEntryCount: ""
        FailedEntries: ""
      properties:
        FailedEntryCount:
          allOf:
          - $ref: '#/components/schemas/Integer'
          - description: The number of failed entries.
          title: FailedEntryCount
        FailedEntries:
          allOf:
          - $ref: '#/components/schemas/RemoveTargetsResultEntryList'
          - description: The failed target entries.
          title: FailedEntries
      title: RemoveTargetsResponse
      type: object
    RemoveTargetsRequest:
      example:
        EventBusName: ""
        Force: ""
        Ids: ""
        Rule: ""
      properties:
        Rule:
          allOf:
          - $ref: '#/components/schemas/RuleName'
          - description: The name of the rule.
          title: Rule
        EventBusName:
          allOf:
          - $ref: '#/components/schemas/EventBusNameOrArn'
          - description: "The name or ARN of the event bus associated with the rule.\
              \ If you omit this, the default event bus is used."
          title: EventBusName
        Ids:
          allOf:
          - $ref: '#/components/schemas/TargetIdList'
          - description: The IDs of the targets to remove from the rule.
          title: Ids
        Force:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          - description: "If this is a managed rule, created by an Amazon Web Services\
              \ service on your behalf, you must specify <code>Force</code> as <code>True</code>\
              \ to remove targets. This parameter is ignored for rules that are not\
              \ managed rules. You can check whether a rule is a managed rule by using\
              \ <code>DescribeRule</code> or <code>ListRules</code> and checking the\
              \ <code>ManagedBy</code> field of the response."
          title: Force
      required:
      - Ids
      - Rule
      title: RemoveTargetsRequest
      type: object
    StartReplayResponse:
      example:
        ReplayArn: ""
        State: ""
        StateReason: ""
        ReplayStartTime: ""
      properties:
        ReplayArn:
          allOf:
          - $ref: '#/components/schemas/ReplayArn'
          - description: The ARN of the replay.
          title: ReplayArn
        State:
          allOf:
          - $ref: '#/components/schemas/ReplayState'
          - description: The state of the replay.
          title: State
        StateReason:
          allOf:
          - $ref: '#/components/schemas/ReplayStateReason'
          - description: The reason that the replay is in the state.
          title: StateReason
        ReplayStartTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          - description: The time at which the replay started.
          title: ReplayStartTime
      title: StartReplayResponse
      type: object
    StartReplayRequest:
      example:
        Destination:
          FilterArns: ""
          Arn: ""
        Description: ""
        EventStartTime: ""
        ReplayName: ""
        EventSourceArn: ""
        EventEndTime: ""
      properties:
        ReplayName:
          allOf:
          - $ref: '#/components/schemas/ReplayName'
          - description: The name of the replay to start.
          title: ReplayName
        Description:
          allOf:
          - $ref: '#/components/schemas/ReplayDescription'
          - description: A description for the replay to start.
          title: Description
        EventSourceArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          - description: The ARN of the archive to replay events from.
          title: EventSourceArn
        EventStartTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          - description: A time stamp for the time to start replaying events. Only
              events that occurred between the <code>EventStartTime</code> and <code>EventEndTime</code>
              are replayed.
          title: EventStartTime
        EventEndTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          - description: A time stamp for the time to stop replaying events. Only
              events that occurred between the <code>EventStartTime</code> and <code>EventEndTime</code>
              are replayed.
          title: EventEndTime
        Destination:
          $ref: '#/components/schemas/StartReplayRequest_Destination'
      required:
      - Destination
      - EventEndTime
      - EventSourceArn
      - EventStartTime
      - ReplayName
      title: StartReplayRequest
      type: object
    TagResourceResponse:
      properties: {}
      type: object
    TagResourceRequest:
      example:
        ResourceARN: ""
        Tags: ""
      properties:
        ResourceARN:
          allOf:
          - $ref: '#/components/schemas/Arn'
          - description: The ARN of the EventBridge resource that you're adding tags
              to.
          title: ResourceARN
        Tags:
          allOf:
          - $ref: '#/components/schemas/TagList'
          - description: The list of key-value pairs to associate with the resource.
          title: Tags
      required:
      - ResourceARN
      - Tags
      title: TagResourceRequest
      type: object
    TestEventPatternResponse:
      example:
        Result: ""
      properties:
        Result:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          - description: Indicates whether the event matches the event pattern.
          title: Result
      title: TestEventPatternResponse
      type: object
    TestEventPatternRequest:
      example:
        EventPattern: ""
        Event: ""
      properties:
        EventPattern:
          allOf:
          - $ref: '#/components/schemas/EventPattern'
          - description: "The event pattern. For more information, see <a href=\"\
              https://docs.aws.amazon.com/eventbridge/latest/userguide/eventbridge-and-event-patterns.html\"\
              >Events and Event Patterns</a> in the <i>Amazon EventBridge User Guide</i>."
          title: EventPattern
        Event:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: "<p>The event, in JSON format, to test against the event\
              \ pattern. The JSON must follow the format specified in <a href=\"https://docs.aws.amazon.com/eventbridge/latest/userguide/aws-events.html\"\
              >Amazon Web Services Events</a>, and the following fields are mandatory:</p>\
              \ <ul> <li> <p> <code>id</code> </p> </li> <li> <p> <code>account</code>\
              \ </p> </li> <li> <p> <code>source</code> </p> </li> <li> <p> <code>time</code>\
              \ </p> </li> <li> <p> <code>region</code> </p> </li> <li> <p> <code>resources</code>\
              \ </p> </li> <li> <p> <code>detail-type</code> </p> </li> </ul>"
          title: Event
      required:
      - Event
      - EventPattern
      title: TestEventPatternRequest
      type: object
    UntagResourceResponse:
      properties: {}
      type: object
    UntagResourceRequest:
      example:
        ResourceARN: ""
        TagKeys: ""
      properties:
        ResourceARN:
          allOf:
          - $ref: '#/components/schemas/Arn'
          - description: The ARN of the EventBridge resource from which you are removing
              tags.
          title: ResourceARN
        TagKeys:
          allOf:
          - $ref: '#/components/schemas/TagKeyList'
          - description: The list of tag keys to remove from the resource.
          title: TagKeys
      required:
      - ResourceARN
      - TagKeys
      title: UntagResourceRequest
      type: object
    UpdateApiDestinationResponse:
      example:
        ApiDestinationState: ""
        CreationTime: ""
        LastModifiedTime: ""
        ApiDestinationArn: ""
      properties:
        ApiDestinationArn:
          allOf:
          - $ref: '#/components/schemas/ApiDestinationArn'
          - description: The ARN of the API destination that was updated.
          title: ApiDestinationArn
        ApiDestinationState:
          allOf:
          - $ref: '#/components/schemas/ApiDestinationState'
          - description: The state of the API destination that was updated.
          title: ApiDestinationState
        CreationTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          - description: A time stamp for the time that the API destination was created.
          title: CreationTime
        LastModifiedTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          - description: A time stamp for the time that the API destination was last
              modified.
          title: LastModifiedTime
      title: UpdateApiDestinationResponse
      type: object
    UpdateApiDestinationRequest:
      example:
        Description: ""
        ConnectionArn: ""
        InvocationEndpoint: ""
        HttpMethod: ""
        Name: ""
        InvocationRateLimitPerSecond: ""
      properties:
        Name:
          allOf:
          - $ref: '#/components/schemas/ApiDestinationName'
          - description: The name of the API destination to update.
          title: Name
        Description:
          allOf:
          - $ref: '#/components/schemas/ApiDestinationDescription'
          - description: The name of the API destination to update.
          title: Description
        ConnectionArn:
          allOf:
          - $ref: '#/components/schemas/ConnectionArn'
          - description: The ARN of the connection to use for the API destination.
          title: ConnectionArn
        InvocationEndpoint:
          allOf:
          - $ref: '#/components/schemas/HttpsEndpoint'
          - description: The URL to the endpoint to use for the API destination.
          title: InvocationEndpoint
        HttpMethod:
          allOf:
          - $ref: '#/components/schemas/ApiDestinationHttpMethod'
          - description: The method to use for the API destination.
          title: HttpMethod
        InvocationRateLimitPerSecond:
          allOf:
          - $ref: '#/components/schemas/ApiDestinationInvocationRateLimitPerSecond'
          - description: The maximum number of invocations per second to send to the
              API destination.
          title: InvocationRateLimitPerSecond
      required:
      - Name
      title: UpdateApiDestinationRequest
      type: object
    UpdateArchiveResponse:
      example:
        State: ""
        StateReason: ""
        CreationTime: ""
        ArchiveArn: ""
      properties:
        ArchiveArn:
          allOf:
          - $ref: '#/components/schemas/ArchiveArn'
          - description: The ARN of the archive.
          title: ArchiveArn
        State:
          allOf:
          - $ref: '#/components/schemas/ArchiveState'
          - description: The state of the archive.
          title: State
        StateReason:
          allOf:
          - $ref: '#/components/schemas/ArchiveStateReason'
          - description: The reason that the archive is in the current state.
          title: StateReason
        CreationTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          - description: The time at which the archive was updated.
          title: CreationTime
      title: UpdateArchiveResponse
      type: object
    UpdateArchiveRequest:
      example:
        EventPattern: ""
        Description: ""
        ArchiveName: ""
        RetentionDays: ""
      properties:
        ArchiveName:
          allOf:
          - $ref: '#/components/schemas/ArchiveName'
          - description: The name of the archive to update.
          title: ArchiveName
        Description:
          allOf:
          - $ref: '#/components/schemas/ArchiveDescription'
          - description: The description for the archive.
          title: Description
        EventPattern:
          allOf:
          - $ref: '#/components/schemas/EventPattern'
          - description: The event pattern to use to filter events sent to the archive.
          title: EventPattern
        RetentionDays:
          allOf:
          - $ref: '#/components/schemas/RetentionDays'
          - description: The number of days to retain events in the archive.
          title: RetentionDays
      required:
      - ArchiveName
      title: UpdateArchiveRequest
      type: object
    UpdateConnectionResponse:
      example:
        ConnectionArn: ""
        CreationTime: ""
        LastModifiedTime: ""
        ConnectionState: ""
        LastAuthorizedTime: ""
      properties:
        ConnectionArn:
          allOf:
          - $ref: '#/components/schemas/ConnectionArn'
          - description: The ARN of the connection that was updated.
          title: ConnectionArn
        ConnectionState:
          allOf:
          - $ref: '#/components/schemas/ConnectionState'
          - description: The state of the connection that was updated.
          title: ConnectionState
        CreationTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          - description: A time stamp for the time that the connection was created.
          title: CreationTime
        LastModifiedTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          - description: A time stamp for the time that the connection was last modified.
          title: LastModifiedTime
        LastAuthorizedTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          - description: A time stamp for the time that the connection was last authorized.
          title: LastAuthorizedTime
      title: UpdateConnectionResponse
      type: object
    UpdateConnectionRequest:
      example:
        AuthParameters:
          InvocationHttpParameters:
            HeaderParameters: ""
            QueryStringParameters: ""
            BodyParameters: ""
          BasicAuthParameters:
            Username: ""
            Password: ""
          ApiKeyAuthParameters:
            ApiKeyValue: ""
            ApiKeyName: ""
          OAuthParameters:
            ClientParameters:
              ClientSecret: ""
              ClientID: ""
            OAuthHttpParameters:
              HeaderParameters: ""
              QueryStringParameters: ""
              BodyParameters: ""
            AuthorizationEndpoint: ""
            HttpMethod: ""
        Description: ""
        AuthorizationType: ""
        Name: ""
      properties:
        Name:
          allOf:
          - $ref: '#/components/schemas/ConnectionName'
          - description: The name of the connection to update.
          title: Name
        Description:
          allOf:
          - $ref: '#/components/schemas/ConnectionDescription'
          - description: A description for the connection.
          title: Description
        AuthorizationType:
          allOf:
          - $ref: '#/components/schemas/ConnectionAuthorizationType'
          - description: The type of authorization to use for the connection.
          title: AuthorizationType
        AuthParameters:
          $ref: '#/components/schemas/UpdateConnectionRequest_AuthParameters'
      required:
      - Name
      title: UpdateConnectionRequest
      type: object
    UpdateEndpointResponse:
      example:
        EventBuses: ""
        ReplicationConfig:
          State: ""
        State: ""
        EndpointId: ""
        Arn: ""
        RoutingConfig:
          FailoverConfig:
            Secondary:
              Route: ""
            Primary:
              HealthCheck: ""
        EndpointUrl: ""
        RoleArn: ""
        Name: ""
      properties:
        Name:
          allOf:
          - $ref: '#/components/schemas/EndpointName'
          - description: The name of the endpoint you updated in this request.
          title: Name
        Arn:
          allOf:
          - $ref: '#/components/schemas/EndpointArn'
          - description: The ARN of the endpoint you updated in this request.
          title: Arn
        RoutingConfig:
          $ref: '#/components/schemas/UpdateEndpointResponse_RoutingConfig'
        ReplicationConfig:
          $ref: '#/components/schemas/UpdateEndpointResponse_ReplicationConfig'
        EventBuses:
          allOf:
          - $ref: '#/components/schemas/EndpointEventBusList'
          - description: The event buses used for replication for the endpoint you
              updated in this request.
          title: EventBuses
        RoleArn:
          allOf:
          - $ref: '#/components/schemas/IamRoleArn'
          - description: The ARN of the role used by event replication for the endpoint
              you updated in this request.
          title: RoleArn
        EndpointId:
          allOf:
          - $ref: '#/components/schemas/EndpointId'
          - description: The ID of the endpoint you updated in this request.
          title: EndpointId
        EndpointUrl:
          allOf:
          - $ref: '#/components/schemas/EndpointUrl'
          - description: The URL of the endpoint you updated in this request.
          title: EndpointUrl
        State:
          allOf:
          - $ref: '#/components/schemas/EndpointState'
          - description: The state of the endpoint you updated in this request.
          title: State
      title: UpdateEndpointResponse
      type: object
    UpdateEndpointRequest:
      example:
        EventBuses: ""
        Description: ""
        ReplicationConfig:
          State: ""
        RoutingConfig:
          FailoverConfig:
            Secondary:
              Route: ""
            Primary:
              HealthCheck: ""
        RoleArn: ""
        Name: ""
      properties:
        Name:
          allOf:
          - $ref: '#/components/schemas/EndpointName'
          - description: The name of the endpoint you want to update.
          title: Name
        Description:
          allOf:
          - $ref: '#/components/schemas/EndpointDescription'
          - description: A description for the endpoint.
          title: Description
        RoutingConfig:
          $ref: '#/components/schemas/UpdateEndpointRequest_RoutingConfig'
        ReplicationConfig:
          $ref: '#/components/schemas/CreateEndpointResponse_ReplicationConfig'
        EventBuses:
          allOf:
          - $ref: '#/components/schemas/EndpointEventBusList'
          - description: Define event buses used for replication.
          title: EventBuses
        RoleArn:
          allOf:
          - $ref: '#/components/schemas/IamRoleArn'
          - description: The ARN of the role used by event replication for this request.
          title: RoleArn
      required:
      - Name
      title: UpdateEndpointRequest
      type: object
    AccountId:
      maxLength: 12
      minLength: 12
      pattern: "\\d{12}"
      type: string
    Action:
      maxLength: 64
      minLength: 1
      pattern: "events:[a-zA-Z]+"
      type: string
    EventSourceName:
      maxLength: 256
      minLength: 1
      pattern: "aws\\.partner(/[\\.\\-_A-Za-z0-9]+){2,}"
      type: string
    ApiDestinationArn:
      maxLength: 1600
      minLength: 1
      pattern: "^arn:aws([a-z]|\\-)*:events:([a-z]|\\d|\\-)*:([0-9]{12})?:api-destination\\\
        /[\\.\\-_A-Za-z0-9]+\\/[\\-A-Za-z0-9]+$"
      type: string
    ApiDestinationName:
      maxLength: 64
      minLength: 1
      pattern: "[\\.\\-_A-Za-z0-9]+"
      type: string
    ApiDestinationState:
      enum:
      - ACTIVE
      - INACTIVE
      title: ApiDestinationState
      type: string
    ConnectionArn:
      maxLength: 1600
      minLength: 1
      pattern: "^arn:aws([a-z]|\\-)*:events:([a-z]|\\d|\\-)*:([0-9]{12})?:connection\\\
        /[\\.\\-_A-Za-z0-9]+\\/[\\-A-Za-z0-9]+$"
      type: string
    HttpsEndpoint:
      maxLength: 2048
      minLength: 1
      pattern: "^((%[0-9A-Fa-f]{2}|[-()_.!~*';/?:@\\x26=+$,A-Za-z0-9])+)([).!';/?:,])?$"
      type: string
    ApiDestinationHttpMethod:
      enum:
      - POST
      - GET
      - HEAD
      - OPTIONS
      - PUT
      - PATCH
      - DELETE
      title: ApiDestinationHttpMethod
      type: string
    ApiDestinationInvocationRateLimitPerSecond:
      minimum: 1
      type: integer
    Timestamp:
      format: date-time
      type: string
    ApiDestination:
      description: Contains details about an API destination.
      properties:
        ApiDestinationArn:
          allOf:
          - $ref: '#/components/schemas/ApiDestinationArn'
          - description: The ARN of the API destination.
          title: ApiDestinationArn
        Name:
          allOf:
          - $ref: '#/components/schemas/ApiDestinationName'
          - description: The name of the API destination.
          title: Name
        ApiDestinationState:
          allOf:
          - $ref: '#/components/schemas/ApiDestinationState'
          - description: The state of the API destination.
          title: ApiDestinationState
        ConnectionArn:
          allOf:
          - $ref: '#/components/schemas/ConnectionArn'
          - description: The ARN of the connection specified for the API destination.
          title: ConnectionArn
        InvocationEndpoint:
          allOf:
          - $ref: '#/components/schemas/HttpsEndpoint'
          - description: The URL to the endpoint for the API destination.
          title: InvocationEndpoint
        HttpMethod:
          allOf:
          - $ref: '#/components/schemas/ApiDestinationHttpMethod'
          - description: The method to use to connect to the HTTP endpoint.
          title: HttpMethod
        InvocationRateLimitPerSecond:
          allOf:
          - $ref: '#/components/schemas/ApiDestinationInvocationRateLimitPerSecond'
          - description: The maximum number of invocations per second to send to the
              HTTP endpoint.
          title: InvocationRateLimitPerSecond
        CreationTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          - description: A time stamp for the time that the API destination was created.
          title: CreationTime
        LastModifiedTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          - description: A time stamp for the time that the API destination was last
              modified.
          title: LastModifiedTime
      title: ApiDestination
      type: object
    ApiDestinationDescription:
      maxLength: 512
      pattern: .*
      type: string
    ApiDestinationResponseList:
      items:
        $ref: '#/components/schemas/ApiDestination'
      type: array
    ArchiveName:
      maxLength: 48
      minLength: 1
      pattern: "[\\.\\-_A-Za-z0-9]+"
      type: string
    Arn:
      maxLength: 1600
      minLength: 1
      title: Arn
      type: string
    ArchiveState:
      enum:
      - ENABLED
      - DISABLED
      - CREATING
      - UPDATING
      - CREATE_FAILED
      - UPDATE_FAILED
      title: ArchiveState
      type: string
    ArchiveStateReason:
      maxLength: 512
      pattern: .*
      type: string
    RetentionDays:
      minimum: 0
      type: integer
    Long:
      type: integer
    Archive:
      description: An <code>Archive</code> object that contains details about an archive.
      properties:
        ArchiveName:
          allOf:
          - $ref: '#/components/schemas/ArchiveName'
          - description: The name of the archive.
          title: ArchiveName
        EventSourceArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          - description: The ARN of the event bus associated with the archive. Only
              events from this event bus are sent to the archive.
          title: EventSourceArn
        State:
          allOf:
          - $ref: '#/components/schemas/ArchiveState'
          - description: The current state of the archive.
          title: State
        StateReason:
          allOf:
          - $ref: '#/components/schemas/ArchiveStateReason'
          - description: A description for the reason that the archive is in the current
              state.
          title: StateReason
        RetentionDays:
          allOf:
          - $ref: '#/components/schemas/RetentionDays'
          - description: The number of days to retain events in the archive before
              they are deleted.
          title: RetentionDays
        SizeBytes:
          allOf:
          - $ref: '#/components/schemas/Long'
          - description: "The size of the archive, in bytes."
          title: SizeBytes
        EventCount:
          allOf:
          - $ref: '#/components/schemas/Long'
          - description: The number of events in the archive.
          title: EventCount
        CreationTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          - description: The time stamp for the time that the archive was created.
          title: CreationTime
      title: Archive
      type: object
    ArchiveArn:
      maxLength: 1600
      minLength: 1
      pattern: "^arn:aws([a-z]|\\-)*:events:([a-z]|\\d|\\-)*:([0-9]{12})?:.+\\/.+$"
      type: string
    ArchiveDescription:
      maxLength: 512
      pattern: .*
      type: string
    ArchiveResponseList:
      items:
        $ref: '#/components/schemas/Archive'
      type: array
    AssignPublicIp:
      enum:
      - ENABLED
      - DISABLED
      title: AssignPublicIp
      type: string
    AuthHeaderParameters:
      maxLength: 512
      minLength: 1
      pattern: "^[ \\t]*[^\\x00-\\x1F:\\x7F]+([ \\t]+[^\\x00-\\x1F:\\x7F]+)*[ \\t]*$"
      type: string
    StringList:
      items:
        $ref: '#/components/schemas/String'
      type: array
    AwsVpcConfiguration:
      description: "This structure specifies the VPC subnets and security groups for\
        \ the task, and whether a public IP address is to be used. This structure\
        \ is relevant only for ECS tasks that use the <code>awsvpc</code> network\
        \ mode."
      properties:
        Subnets:
          allOf:
          - $ref: '#/components/schemas/StringList'
          - description: Specifies the subnets associated with the task. These subnets
              must all be in the same VPC. You can specify as many as 16 subnets.
          title: Subnets
        SecurityGroups:
          allOf:
          - $ref: '#/components/schemas/StringList'
          - description: "Specifies the security groups associated with the task.\
              \ These security groups must all be in the same VPC. You can specify\
              \ as many as five security groups. If you do not specify a security\
              \ group, the default security group for the VPC is used."
          title: SecurityGroups
        AssignPublicIp:
          allOf:
          - $ref: '#/components/schemas/AssignPublicIp'
          - description: Specifies whether the task's elastic network interface receives
              a public IP address. You can specify <code>ENABLED</code> only when
              <code>LaunchType</code> in <code>EcsParameters</code> is set to <code>FARGATE</code>.
          title: AssignPublicIp
      required:
      - Subnets
      title: AwsVpcConfiguration
      type: object
    Integer:
      type: integer
    BatchArrayProperties:
      description: "The array properties for the submitted job, such as the size of\
        \ the array. The array size can be between 2 and 10,000. If you specify array\
        \ properties for a job, it becomes an array job. This parameter is used only\
        \ if the target is an Batch job."
      properties:
        Size:
          allOf:
          - $ref: '#/components/schemas/Integer'
          - description: "The size of the array, if this is an array batch job. Valid\
              \ values are integers between 2 and 10,000."
          title: Size
      title: BatchArrayProperties
      type: object
    String:
      title: String
      type: string
    BatchRetryStrategy:
      description: "The retry strategy to use for failed jobs, if the target is an\
        \ Batch job. If you specify a retry strategy here, it overrides the retry\
        \ strategy defined in the job definition."
      properties:
        Attempts:
          allOf:
          - $ref: '#/components/schemas/Integer'
          - description: "The number of times to attempt to retry, if the job fails.\
              \ Valid values are 1–10."
          title: Attempts
      title: BatchRetryStrategy
      type: object
    BatchParameters:
      description: The custom parameters to be used when the target is an Batch job.
      properties:
        JobDefinition:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The ARN or name of the job definition to use if the event
              target is an Batch job. This job definition must already exist.
          title: JobDefinition
        JobName:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: "The name to use for this execution of the job, if the target\
              \ is an Batch job."
          title: JobName
        ArrayProperties:
          $ref: '#/components/schemas/BatchParameters_ArrayProperties'
        RetryStrategy:
          $ref: '#/components/schemas/BatchParameters_RetryStrategy'
      required:
      - JobDefinition
      - JobName
      title: BatchParameters
      type: object
    Boolean:
      type: boolean
    ReplayName:
      maxLength: 64
      minLength: 1
      pattern: "[\\.\\-_A-Za-z0-9]+"
      type: string
    ReplayArn:
      maxLength: 1600
      minLength: 1
      pattern: "^arn:aws([a-z]|\\-)*:events:([a-z]|\\d|\\-)*:([0-9]{12})?:.+\\/[\\\
        .\\-_A-Za-z0-9]+$"
      type: string
    ReplayState:
      enum:
      - STARTING
      - RUNNING
      - CANCELLING
      - COMPLETED
      - CANCELLED
      - FAILED
      title: ReplayState
      type: string
    ReplayStateReason:
      maxLength: 512
      pattern: .*
      type: string
    CapacityProvider:
      maxLength: 255
      minLength: 1
      type: string
    CapacityProviderStrategyItem:
      description: "The details of a capacity provider strategy. To learn more, see\
        \ <a href=\"https://docs.aws.amazon.com/AmazonECS/latest/APIReference/API_CapacityProviderStrategyItem.html\"\
        >CapacityProviderStrategyItem</a> in the Amazon ECS API Reference."
      properties:
        capacityProvider:
          allOf:
          - $ref: '#/components/schemas/CapacityProvider'
          - description: The short name of the capacity provider.
          title: capacityProvider
        weight:
          allOf:
          - $ref: '#/components/schemas/CapacityProviderStrategyItemWeight'
          - description: "The weight value designates the relative percentage of the\
              \ total number of tasks launched that should use the specified capacity\
              \ provider. The weight value is taken into consideration after the base\
              \ value, if defined, is satisfied."
          title: weight
        base:
          allOf:
          - $ref: '#/components/schemas/CapacityProviderStrategyItemBase'
          - description: "The base value designates how many tasks, at a minimum,\
              \ to run on the specified capacity provider. Only one capacity provider\
              \ in a capacity provider strategy can have a base defined. If no value\
              \ is specified, the default value of 0 is used. "
          title: base
      required:
      - capacityProvider
      title: CapacityProviderStrategyItem
      type: object
    CapacityProviderStrategy:
      items:
        $ref: '#/components/schemas/CapacityProviderStrategyItem'
      maxItems: 6
      type: array
    CapacityProviderStrategyItemWeight:
      maximum: 1000
      minimum: 0
      type: integer
    CapacityProviderStrategyItemBase:
      maximum: 100000
      minimum: 0
      type: integer
    Condition:
      description: "<p>A JSON string which you can use to limit the event bus permissions\
        \ you are granting to only accounts that fulfill the condition. Currently,\
        \ the only supported condition is membership in a certain Amazon Web Services\
        \ organization. The string must contain <code>Type</code>, <code>Key</code>,\
        \ and <code>Value</code> fields. The <code>Value</code> field specifies the\
        \ ID of the Amazon Web Services organization. Following is an example value\
        \ for <code>Condition</code>:</p> <p> <code>'{\"Type\" : \"StringEquals\"\
        , \"Key\": \"aws:PrincipalOrgID\", \"Value\": \"o-1234567890\"}'</code> </p>"
      properties:
        Type:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: Specifies the type of condition. Currently the only supported
              value is <code>StringEquals</code>.
          title: Type
        Key:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: Specifies the key for the condition. Currently the only supported
              key is <code>aws:PrincipalOrgID</code>.
          title: Key
        Value:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: "Specifies the value for the key. Currently, this must be\
              \ the ID of the organization."
          title: Value
      required:
      - Key
      - Type
      - Value
      title: Condition
      type: object
    ConnectionName:
      maxLength: 64
      minLength: 1
      pattern: "[\\.\\-_A-Za-z0-9]+"
      type: string
    ConnectionState:
      enum:
      - CREATING
      - UPDATING
      - DELETING
      - AUTHORIZED
      - DEAUTHORIZED
      - AUTHORIZING
      - DEAUTHORIZING
      title: ConnectionState
      type: string
    ConnectionStateReason:
      maxLength: 512
      pattern: .*
      type: string
    ConnectionAuthorizationType:
      enum:
      - BASIC
      - OAUTH_CLIENT_CREDENTIALS
      - API_KEY
      title: ConnectionAuthorizationType
      type: string
    Connection:
      description: Contains information about a connection.
      properties:
        ConnectionArn:
          allOf:
          - $ref: '#/components/schemas/ConnectionArn'
          - description: The ARN of the connection.
          title: ConnectionArn
        Name:
          allOf:
          - $ref: '#/components/schemas/ConnectionName'
          - description: The name of the connection.
          title: Name
        ConnectionState:
          allOf:
          - $ref: '#/components/schemas/ConnectionState'
          - description: The state of the connection.
          title: ConnectionState
        StateReason:
          allOf:
          - $ref: '#/components/schemas/ConnectionStateReason'
          - description: The reason that the connection is in the connection state.
          title: StateReason
        AuthorizationType:
          allOf:
          - $ref: '#/components/schemas/ConnectionAuthorizationType'
          - description: <p>The authorization type specified for the connection.</p>
              <note> <p>OAUTH tokens are refreshed when a 401 or 407 response is returned.</p>
              </note>
          title: AuthorizationType
        CreationTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          - description: A time stamp for the time that the connection was created.
          title: CreationTime
        LastModifiedTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          - description: A time stamp for the time that the connection was last modified.
          title: LastModifiedTime
        LastAuthorizedTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          - description: A time stamp for the time that the connection was last authorized.
          title: LastAuthorizedTime
      title: Connection
      type: object
    ConnectionApiKeyAuthResponseParameters:
      description: Contains the authorization parameters for the connection if API
        Key is specified as the authorization type.
      properties:
        ApiKeyName:
          allOf:
          - $ref: '#/components/schemas/AuthHeaderParameters'
          - description: The name of the header to use for the <code>APIKeyValue</code>
              used for authorization.
          title: ApiKeyName
      title: ConnectionApiKeyAuthResponseParameters
      type: object
    ConnectionBasicAuthResponseParameters:
      description: Contains the authorization parameters for the connection if Basic
        is specified as the authorization type.
      properties:
        Username:
          allOf:
          - $ref: '#/components/schemas/AuthHeaderParameters'
          - description: The user name to use for Basic authorization.
          title: Username
      title: ConnectionBasicAuthResponseParameters
      type: object
    ConnectionOAuthResponseParameters:
      description: Contains the response parameters when OAuth is specified as the
        authorization type.
      properties:
        ClientParameters:
          $ref: '#/components/schemas/ConnectionOAuthResponseParameters_ClientParameters'
        AuthorizationEndpoint:
          allOf:
          - $ref: '#/components/schemas/HttpsEndpoint'
          - description: The URL to the HTTP endpoint that authorized the request.
          title: AuthorizationEndpoint
        HttpMethod:
          allOf:
          - $ref: '#/components/schemas/ConnectionOAuthHttpMethod'
          - description: The method used to connect to the HTTP endpoint.
          title: HttpMethod
        OAuthHttpParameters:
          $ref: '#/components/schemas/ConnectionOAuthResponseParameters_OAuthHttpParameters'
      title: ConnectionOAuthResponseParameters
      type: object
    ConnectionHttpParameters:
      description: Contains additional parameters for the connection.
      properties:
        HeaderParameters:
          allOf:
          - $ref: '#/components/schemas/ConnectionHeaderParametersList'
          - description: Contains additional header parameters for the connection.
          title: HeaderParameters
        QueryStringParameters:
          allOf:
          - $ref: '#/components/schemas/ConnectionQueryStringParametersList'
          - description: Contains additional query string parameters for the connection.
          title: QueryStringParameters
        BodyParameters:
          allOf:
          - $ref: '#/components/schemas/ConnectionBodyParametersList'
          - description: Contains additional body string parameters for the connection.
          title: BodyParameters
      title: ConnectionHttpParameters
      type: object
    ConnectionAuthResponseParameters:
      description: Contains the authorization parameters to use for the connection.
      properties:
        BasicAuthParameters:
          $ref: '#/components/schemas/ConnectionAuthResponseParameters_BasicAuthParameters'
        OAuthParameters:
          $ref: '#/components/schemas/ConnectionAuthResponseParameters_OAuthParameters'
        ApiKeyAuthParameters:
          $ref: '#/components/schemas/ConnectionAuthResponseParameters_ApiKeyAuthParameters'
        InvocationHttpParameters:
          $ref: '#/components/schemas/ConnectionAuthResponseParameters_InvocationHttpParameters'
      title: ConnectionAuthResponseParameters
      type: object
    ConnectionBodyParameter:
      description: Additional parameter included in the body. You can include up to
        100 additional body parameters per request. An event payload cannot exceed
        64 KB.
      properties:
        Key:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The key for the parameter.
          title: Key
        Value:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The value associated with the key.
          title: Value
        IsValueSecret:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          - description: Specified whether the value is secret.
          title: IsValueSecret
      title: ConnectionBodyParameter
      type: object
    ConnectionBodyParametersList:
      items:
        $ref: '#/components/schemas/ConnectionBodyParameter'
      maxItems: 100
      minItems: 0
      type: array
    ConnectionDescription:
      maxLength: 512
      pattern: .*
      type: string
    HeaderKey:
      maxLength: 512
      pattern: "^[!#$%&'*+-.^_`|~0-9a-zA-Z]+$"
      type: string
    HeaderValue:
      maxLength: 512
      pattern: "^[ \\t]*[\\x20-\\x7E]+([ \\t]+[\\x20-\\x7E]+)*[ \\t]*$"
      title: HeaderValue
      type: string
    ConnectionHeaderParameter:
      description: Additional parameter included in the header. You can include up
        to 100 additional header parameters per request. An event payload cannot exceed
        64 KB.
      properties:
        Key:
          allOf:
          - $ref: '#/components/schemas/HeaderKey'
          - description: The key for the parameter.
          title: Key
        Value:
          allOf:
          - $ref: '#/components/schemas/HeaderValue'
          - description: The value associated with the key.
          title: Value
        IsValueSecret:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          - description: Specified whether the value is a secret.
          title: IsValueSecret
      title: ConnectionHeaderParameter
      type: object
    ConnectionHeaderParametersList:
      items:
        $ref: '#/components/schemas/ConnectionHeaderParameter'
      maxItems: 100
      minItems: 0
      type: array
    ConnectionQueryStringParametersList:
      items:
        $ref: '#/components/schemas/ConnectionQueryStringParameter'
      maxItems: 100
      minItems: 0
      type: array
    ConnectionOAuthClientResponseParameters:
      description: Contains the client response parameters for the connection when
        OAuth is specified as the authorization type.
      properties:
        ClientID:
          allOf:
          - $ref: '#/components/schemas/AuthHeaderParameters'
          - description: The client ID associated with the response to the connection
              request.
          title: ClientID
      title: ConnectionOAuthClientResponseParameters
      type: object
    ConnectionOAuthHttpMethod:
      enum:
      - GET
      - POST
      - PUT
      title: ConnectionOAuthHttpMethod
      type: string
    QueryStringKey:
      maxLength: 512
      pattern: "[^\\x00-\\x1F\\x7F]+"
      type: string
    QueryStringValue:
      maxLength: 512
      pattern: "[^\\x00-\\x09\\x0B\\x0C\\x0E-\\x1F\\x7F]+"
      title: QueryStringValue
      type: string
    ConnectionQueryStringParameter:
      description: "Additional query string parameter for the connection. You can\
        \ include up to 100 additional query string parameters per request. Each additional\
        \ parameter counts towards the event payload size, which cannot exceed 64\
        \ KB."
      properties:
        Key:
          allOf:
          - $ref: '#/components/schemas/QueryStringKey'
          - description: The key for a query string parameter.
          title: Key
        Value:
          allOf:
          - $ref: '#/components/schemas/QueryStringValue'
          - description: The value associated with the key for the query string parameter.
          title: Value
        IsValueSecret:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          - description: Specifies whether the value is secret.
          title: IsValueSecret
      title: ConnectionQueryStringParameter
      type: object
    ConnectionResponseList:
      items:
        $ref: '#/components/schemas/Connection'
      type: array
    EventPattern:
      maxLength: 4096
      type: string
    CreateConnectionApiKeyAuthRequestParameters:
      description: Contains the API key authorization parameters for the connection.
      properties:
        ApiKeyName:
          allOf:
          - $ref: '#/components/schemas/AuthHeaderParameters'
          - description: The name of the API key to use for authorization.
          title: ApiKeyName
        ApiKeyValue:
          allOf:
          - $ref: '#/components/schemas/AuthHeaderParameters'
          - description: The value for the API key to use for authorization.
          title: ApiKeyValue
      required:
      - ApiKeyName
      - ApiKeyValue
      title: CreateConnectionApiKeyAuthRequestParameters
      type: object
    CreateConnectionBasicAuthRequestParameters:
      description: Contains the Basic authorization parameters to use for the connection.
      properties:
        Username:
          allOf:
          - $ref: '#/components/schemas/AuthHeaderParameters'
          - description: The user name to use for Basic authorization.
          title: Username
        Password:
          allOf:
          - $ref: '#/components/schemas/AuthHeaderParameters'
          - description: The password associated with the user name to use for Basic
              authorization.
          title: Password
      required:
      - Password
      - Username
      title: CreateConnectionBasicAuthRequestParameters
      type: object
    CreateConnectionOAuthRequestParameters:
      description: Contains the OAuth authorization parameters to use for the connection.
      properties:
        ClientParameters:
          $ref: '#/components/schemas/CreateConnectionOAuthRequestParameters_ClientParameters'
        AuthorizationEndpoint:
          allOf:
          - $ref: '#/components/schemas/HttpsEndpoint'
          - description: The URL to the authorization endpoint when OAuth is specified
              as the authorization type.
          title: AuthorizationEndpoint
        HttpMethod:
          allOf:
          - $ref: '#/components/schemas/ConnectionOAuthHttpMethod'
          - description: The method to use for the authorization request.
          title: HttpMethod
        OAuthHttpParameters:
          $ref: '#/components/schemas/CreateConnectionOAuthRequestParameters_OAuthHttpParameters'
      required:
      - AuthorizationEndpoint
      - ClientParameters
      - HttpMethod
      title: CreateConnectionOAuthRequestParameters
      type: object
    CreateConnectionAuthRequestParameters:
      description: Contains the authorization parameters for the connection.
      properties:
        BasicAuthParameters:
          $ref: '#/components/schemas/CreateConnectionAuthRequestParameters_BasicAuthParameters'
        OAuthParameters:
          $ref: '#/components/schemas/CreateConnectionAuthRequestParameters_OAuthParameters'
        ApiKeyAuthParameters:
          $ref: '#/components/schemas/CreateConnectionAuthRequestParameters_ApiKeyAuthParameters'
        InvocationHttpParameters:
          $ref: '#/components/schemas/CreateConnectionAuthRequestParameters_InvocationHttpParameters'
      title: CreateConnectionAuthRequestParameters
      type: object
    CreateConnectionOAuthClientRequestParameters:
      description: Contains the Basic authorization parameters to use for the connection.
      properties:
        ClientID:
          allOf:
          - $ref: '#/components/schemas/AuthHeaderParameters'
          - description: The client ID to use for OAuth authorization for the connection.
          title: ClientID
        ClientSecret:
          allOf:
          - $ref: '#/components/schemas/AuthHeaderParameters'
          - description: The client secret associated with the client ID to use for
              OAuth authorization for the connection.
          title: ClientSecret
      required:
      - ClientID
      - ClientSecret
      title: CreateConnectionOAuthClientRequestParameters
      type: object
    EndpointName:
      maxLength: 64
      minLength: 1
      pattern: "[\\.\\-_A-Za-z0-9]+"
      type: string
    EndpointDescription:
      maxLength: 512
      pattern: .*
      type: string
    RoutingConfig:
      description: The routing configuration of the endpoint.
      properties:
        FailoverConfig:
          $ref: '#/components/schemas/RoutingConfig_FailoverConfig'
      required:
      - FailoverConfig
      title: RoutingConfig
      type: object
    ReplicationConfig:
      description: Endpoints can replicate all events to the secondary Region.
      properties:
        State:
          allOf:
          - $ref: '#/components/schemas/ReplicationState'
          - description: The state of event replication.
          title: State
      title: ReplicationConfig
      type: object
    EndpointEventBusList:
      items:
        $ref: '#/components/schemas/EndpointEventBus'
      maxItems: 2
      minItems: 2
      type: array
    IamRoleArn:
      maxLength: 256
      minLength: 1
      pattern: "^arn:aws[a-z-]*:iam::\\d{12}:role\\/[\\w+=,.@/-]+$"
      type: string
    EndpointArn:
      maxLength: 1600
      minLength: 1
      pattern: "^arn:aws([a-z]|\\-)*:events:([a-z]|\\d|\\-)*:([0-9]{12})?:endpoint\\\
        /[/\\.\\-_A-Za-z0-9]+$"
      type: string
    EndpointState:
      enum:
      - ACTIVE
      - CREATING
      - UPDATING
      - DELETING
      - CREATE_FAILED
      - UPDATE_FAILED
      - DELETE_FAILED
      title: EndpointState
      type: string
    EventBusName:
      maxLength: 256
      minLength: 1
      pattern: "[/\\.\\-_A-Za-z0-9]+"
      type: string
    TagList:
      items:
        $ref: '#/components/schemas/Tag'
      type: array
    CreatedBy:
      maxLength: 128
      minLength: 1
      type: string
    Database:
      description: Redshift Database
      maxLength: 64
      minLength: 1
      type: string
    DbUser:
      description: Database user name
      maxLength: 128
      minLength: 1
      type: string
    ResourceArn:
      maxLength: 1600
      minLength: 1
      type: string
    DeadLetterConfig:
      description: A <code>DeadLetterConfig</code> object that contains information
        about a dead-letter queue configuration.
      properties:
        Arn:
          allOf:
          - $ref: '#/components/schemas/ResourceArn'
          - description: The ARN of the SQS queue specified as the target for the
              dead-letter queue.
          title: Arn
      title: DeadLetterConfig
      type: object
    RuleName:
      maxLength: 64
      minLength: 1
      pattern: "[\\.\\-_A-Za-z0-9]+"
      title: RuleName
      type: string
    EventBusNameOrArn:
      maxLength: 1600
      minLength: 1
      pattern: "(arn:aws[\\w-]*:events:[a-z]{2}-[a-z]+-[\\w-]+:[0-9]{12}:event-bus\\\
        /)?[/\\.\\-_A-Za-z0-9]+"
      type: string
    SecretsManagerSecretArn:
      maxLength: 2048
      minLength: 20
      pattern: "^arn:aws([a-z]|\\-)*:secretsmanager:([a-z]|\\d|\\-)*:([0-9]{12})?:secret:[\\\
        /_+=\\.@\\-A-Za-z0-9]+$"
      type: string
    HomeRegion:
      maxLength: 20
      minLength: 9
      pattern: "^[\\-a-z0-9]+$"
      type: string
    EndpointId:
      maxLength: 50
      minLength: 1
      pattern: "^[A-Za-z0-9\\-]+[\\.][A-Za-z0-9\\-]+$"
      type: string
    EndpointUrl:
      maxLength: 256
      minLength: 1
      pattern: "^(https://)?[\\.\\-a-z0-9]+$"
      type: string
    EndpointStateReason:
      maxLength: 512
      minLength: 1
      pattern: .*
      type: string
    EventSourceState:
      enum:
      - PENDING
      - ACTIVE
      - DELETED
      title: EventSourceState
      type: string
    ReplayDescription:
      maxLength: 512
      pattern: .*
      type: string
    ReplayDestination:
      description: A <code>ReplayDestination</code> object that contains details about
        a replay.
      properties:
        Arn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          - description: The ARN of the event bus to replay event to. You can replay
              events only to the event bus specified to create the archive.
          title: Arn
        FilterArns:
          allOf:
          - $ref: '#/components/schemas/ReplayDestinationFilters'
          - description: A list of ARNs for rules to replay events to.
          title: FilterArns
      required:
      - Arn
      title: ReplayDestination
      type: object
    RuleArn:
      maxLength: 1600
      minLength: 1
      type: string
    ScheduleExpression:
      maxLength: 256
      type: string
    RuleState:
      enum:
      - ENABLED
      - DISABLED
      title: RuleState
      type: string
    RuleDescription:
      maxLength: 512
      type: string
    RoleArn:
      maxLength: 1600
      minLength: 1
      type: string
    ManagedBy:
      maxLength: 128
      minLength: 1
      type: string
    LimitMin1:
      minimum: 1
      type: integer
    LaunchType:
      enum:
      - EC2
      - FARGATE
      - EXTERNAL
      title: LaunchType
      type: string
    NetworkConfiguration:
      description: This structure specifies the network configuration for an ECS task.
      properties:
        awsvpcConfiguration:
          $ref: '#/components/schemas/NetworkConfiguration_awsvpcConfiguration'
      title: NetworkConfiguration
      type: object
    PlacementConstraints:
      items:
        $ref: '#/components/schemas/PlacementConstraint'
      maxItems: 10
      type: array
    PlacementStrategies:
      items:
        $ref: '#/components/schemas/PlacementStrategy'
      maxItems: 5
      type: array
    PropagateTags:
      enum:
      - TASK_DEFINITION
      title: PropagateTags
      type: string
    ReferenceId:
      maxLength: 1024
      type: string
    EcsParameters:
      description: The custom parameters to be used when the target is an Amazon ECS
        task.
      properties:
        TaskDefinitionArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          - description: 'The ARN of the task definition to use if the event target
              is an Amazon ECS task. '
          title: TaskDefinitionArn
        TaskCount:
          allOf:
          - $ref: '#/components/schemas/LimitMin1'
          - description: The number of tasks to create based on <code>TaskDefinition</code>.
              The default is 1.
          title: TaskCount
        LaunchType:
          allOf:
          - $ref: '#/components/schemas/LaunchType'
          - description: "Specifies the launch type on which your task is running.\
              \ The launch type that you specify here must match one of the launch\
              \ type (compatibilities) of the target task. The <code>FARGATE</code>\
              \ value is supported only in the Regions where Fargate with Amazon ECS\
              \ is supported. For more information, see <a href=\"https://docs.aws.amazon.com/AmazonECS/latest/developerguide/AWS-Fargate.html\"\
              >Fargate on Amazon ECS</a> in the <i>Amazon Elastic Container Service\
              \ Developer Guide</i>."
          title: LaunchType
        NetworkConfiguration:
          $ref: '#/components/schemas/EcsParameters_NetworkConfiguration'
        PlatformVersion:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: "<p>Specifies the platform version for the task. Specify\
              \ only the numeric portion of the platform version, such as <code>1.1.0</code>.</p>\
              \ <p>This structure is used only if <code>LaunchType</code> is <code>FARGATE</code>.\
              \ For more information about valid platform versions, see <a href=\"\
              https://docs.aws.amazon.com/AmazonECS/latest/developerguide/platform_versions.html\"\
              >Fargate Platform Versions</a> in the <i>Amazon Elastic Container Service\
              \ Developer Guide</i>.</p>"
          title: PlatformVersion
        Group:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: Specifies an ECS task group for the task. The maximum length
              is 255 characters.
          title: Group
        CapacityProviderStrategy:
          allOf:
          - $ref: '#/components/schemas/CapacityProviderStrategy'
          - description: "<p>The capacity provider strategy to use for the task.</p>\
              \ <p>If a <code>capacityProviderStrategy</code> is specified, the <code>launchType</code>\
              \ parameter must be omitted. If no <code>capacityProviderStrategy</code>\
              \ or launchType is specified, the <code>defaultCapacityProviderStrategy</code>\
              \ for the cluster is used. </p>"
          title: CapacityProviderStrategy
        EnableECSManagedTags:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          - description: "Specifies whether to enable Amazon ECS managed tags for\
              \ the task. For more information, see <a href=\"https://docs.aws.amazon.com/AmazonECS/latest/developerguide/ecs-using-tags.html\"\
              >Tagging Your Amazon ECS Resources</a> in the Amazon Elastic Container\
              \ Service Developer Guide. "
          title: EnableECSManagedTags
        EnableExecuteCommand:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          - description: "Whether or not to enable the execute command functionality\
              \ for the containers in this task. If true, this enables execute command\
              \ functionality on all containers in the task."
          title: EnableExecuteCommand
        PlacementConstraints:
          allOf:
          - $ref: '#/components/schemas/PlacementConstraints'
          - description: An array of placement constraint objects to use for the task.
              You can specify up to 10 constraints per task (including constraints
              in the task definition and those specified at runtime).
          title: PlacementConstraints
        PlacementStrategy:
          allOf:
          - $ref: '#/components/schemas/PlacementStrategies'
          - description: 'The placement strategy objects to use for the task. You
              can specify a maximum of five strategy rules per task. '
          title: PlacementStrategy
        PropagateTags:
          allOf:
          - $ref: '#/components/schemas/PropagateTags'
          - description: "Specifies whether to propagate the tags from the task definition\
              \ to the task. If no value is specified, the tags are not propagated.\
              \ Tags can only be propagated to the task during task creation. To add\
              \ tags to a task after task creation, use the TagResource API action. "
          title: PropagateTags
        ReferenceId:
          allOf:
          - $ref: '#/components/schemas/ReferenceId'
          - description: The reference ID to use for the task.
          title: ReferenceId
        Tags:
          allOf:
          - $ref: '#/components/schemas/TagList'
          - description: "The metadata that you apply to the task to help you categorize\
              \ and organize them. Each tag consists of a key and an optional value,\
              \ both of which you define. To learn more, see <a href=\"https://docs.aws.amazon.com/AmazonECS/latest/APIReference/API_RunTask.html#ECS-RunTask-request-tags\"\
              >RunTask</a> in the Amazon ECS API Reference."
          title: Tags
      required:
      - TaskDefinitionArn
      title: EcsParameters
      type: object
    Endpoint:
      description: "A global endpoint used to improve your application's availability\
        \ by making it regional-fault tolerant. For more information about global\
        \ endpoints, see <a href=\"https://docs.aws.amazon.com/eventbridge/latest/userguide/eb-global-endpoints.html\"\
        >Making applications Regional-fault tolerant with global endpoints and event\
        \ replication</a> in the Amazon EventBridge User Guide."
      properties:
        Name:
          allOf:
          - $ref: '#/components/schemas/EndpointName'
          - description: The name of the endpoint.
          title: Name
        Description:
          allOf:
          - $ref: '#/components/schemas/EndpointDescription'
          - description: A description for the endpoint.
          title: Description
        Arn:
          allOf:
          - $ref: '#/components/schemas/EndpointArn'
          - description: The ARN of the endpoint.
          title: Arn
        RoutingConfig:
          $ref: '#/components/schemas/Endpoint_RoutingConfig'
        ReplicationConfig:
          $ref: '#/components/schemas/Endpoint_ReplicationConfig'
        EventBuses:
          allOf:
          - $ref: '#/components/schemas/EndpointEventBusList'
          - description: The event buses being used by the endpoint.
          title: EventBuses
        RoleArn:
          allOf:
          - $ref: '#/components/schemas/IamRoleArn'
          - description: The ARN of the role used by event replication for the endpoint.
          title: RoleArn
        EndpointId:
          allOf:
          - $ref: '#/components/schemas/EndpointId'
          - description: "The URL subdomain of the endpoint. For example, if the URL\
              \ for Endpoint is https://abcde.veo.endpoints.event.amazonaws.com, then\
              \ the EndpointId is <code>abcde.veo</code>."
          title: EndpointId
        EndpointUrl:
          allOf:
          - $ref: '#/components/schemas/EndpointUrl'
          - description: The URL of the endpoint.
          title: EndpointUrl
        State:
          allOf:
          - $ref: '#/components/schemas/EndpointState'
          - description: The current state of the endpoint.
          title: State
        StateReason:
          allOf:
          - $ref: '#/components/schemas/EndpointStateReason'
          - description: The reason the endpoint is in its current state.
          title: StateReason
        CreationTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          - description: The time the endpoint was created.
          title: CreationTime
        LastModifiedTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          - description: The last time the endpoint was modified.
          title: LastModifiedTime
      title: Endpoint
      type: object
    NonPartnerEventBusArn:
      maxLength: 512
      minLength: 1
      pattern: "^arn:aws[a-z-]*:events:[a-z]{2}-[a-z-]+-\\d+:\\d{12}:event-bus/[\\\
        w.-]+$"
      type: string
    EndpointEventBus:
      description: The event buses the endpoint is associated with.
      properties:
        EventBusArn:
          allOf:
          - $ref: '#/components/schemas/NonPartnerEventBusArn'
          - description: The ARN of the event bus the endpoint is associated with.
          title: EventBusArn
      required:
      - EventBusArn
      title: EndpointEventBus
      type: object
    EndpointList:
      items:
        $ref: '#/components/schemas/Endpoint'
      type: array
    ErrorCode:
      type: string
    ErrorMessage:
      type: string
    EventBus:
      description: "An event bus receives events from a source, uses rules to evaluate\
        \ them, applies any configured input transformation, and routes them to the\
        \ appropriate target(s). Your account's default event bus receives events\
        \ from Amazon Web Services services. A custom event bus can receive events\
        \ from your custom applications and services. A partner event bus receives\
        \ events from an event source created by an SaaS partner. These events come\
        \ from the partners services or applications."
      properties:
        Name:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The name of the event bus.
          title: Name
        Arn:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The ARN of the event bus.
          title: Arn
        Policy:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: "The permissions policy of the event bus, describing which\
              \ other Amazon Web Services accounts can write events to this event\
              \ bus."
          title: Policy
      title: EventBus
      type: object
    EventBusList:
      items:
        $ref: '#/components/schemas/EventBus'
      type: array
    EventId:
      maxLength: 64
      type: string
    EventResource:
      maxLength: 2048
      title: EventResource
      type: string
    EventResourceList:
      items:
        $ref: '#/components/schemas/EventResource'
      type: array
    EventSource:
      description: "A partner event source is created by an SaaS partner. If a customer\
        \ creates a partner event bus that matches this event source, that Amazon\
        \ Web Services account can receive events from the partner's applications\
        \ or services."
      properties:
        Arn:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The ARN of the event source.
          title: Arn
        CreatedBy:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The name of the partner that created the event source.
          title: CreatedBy
        CreationTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          - description: The date and time the event source was created.
          title: CreationTime
        ExpirationTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          - description: "The date and time that the event source will expire, if\
              \ the Amazon Web Services account doesn't create a matching event bus\
              \ for it."
          title: ExpirationTime
        Name:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The name of the event source.
          title: Name
        State:
          allOf:
          - $ref: '#/components/schemas/EventSourceState'
          - description: "The state of the event source. If it is ACTIVE, you have\
              \ already created a matching event bus for this event source, and that\
              \ event bus is active. If it is PENDING, either you haven't yet created\
              \ a matching event bus, or that event bus is deactivated. If it is DELETED,\
              \ you have created a matching event bus, but the event source has since\
              \ been deleted."
          title: State
      title: EventSource
      type: object
    EventSourceList:
      items:
        $ref: '#/components/schemas/EventSource'
      type: array
    EventSourceNamePrefix:
      maxLength: 256
      minLength: 1
      pattern: "[/\\.\\-_A-Za-z0-9]+"
      type: string
    EventTime:
      format: date-time
      type: string
    Primary:
      description: The primary Region of the endpoint.
      properties:
        HealthCheck:
          allOf:
          - $ref: '#/components/schemas/HealthCheck'
          - description: The ARN of the health check used by the endpoint to determine
              whether failover is triggered.
          title: HealthCheck
      required:
      - HealthCheck
      title: Primary
      type: object
    Secondary:
      description: The secondary Region that processes events when failover is triggered
        or replication is enabled.
      properties:
        Route:
          allOf:
          - $ref: '#/components/schemas/Route'
          - description: Defines the secondary Region.
          title: Route
      required:
      - Route
      title: Secondary
      type: object
    FailoverConfig:
      description: The failover configuration for an endpoint. This includes what
        triggers failover and what happens when it's triggered.
      properties:
        Primary:
          $ref: '#/components/schemas/FailoverConfig_Primary'
        Secondary:
          $ref: '#/components/schemas/FailoverConfig_Secondary'
      required:
      - Primary
      - Secondary
      title: FailoverConfig
      type: object
    HeaderParametersMap:
      additionalProperties:
        $ref: '#/components/schemas/HeaderValue'
      type: object
    HealthCheck:
      maxLength: 1600
      minLength: 1
      pattern: "^arn:aws([a-z]|\\-)*:route53:::healthcheck/[\\-a-z0-9]+$"
      type: string
    PathParameterList:
      items:
        $ref: '#/components/schemas/PathParameter'
      type: array
    QueryStringParametersMap:
      additionalProperties:
        $ref: '#/components/schemas/QueryStringValue'
      type: object
    HttpParameters:
      description: "These are custom parameter to be used when the target is an API\
        \ Gateway APIs or EventBridge ApiDestinations. In the latter case, these are\
        \ merged with any InvocationParameters specified on the Connection, with any\
        \ values from the Connection taking precedence."
      properties:
        PathParameterValues:
          allOf:
          - $ref: '#/components/schemas/PathParameterList'
          - description: The path parameter values to be used to populate API Gateway
              API or EventBridge ApiDestination path wildcards ("*").
          title: PathParameterValues
        HeaderParameters:
          allOf:
          - $ref: '#/components/schemas/HeaderParametersMap'
          - description: The headers that need to be sent as part of request invoking
              the API Gateway API or EventBridge ApiDestination.
          title: HeaderParameters
        QueryStringParameters:
          allOf:
          - $ref: '#/components/schemas/QueryStringParametersMap'
          - description: The query string keys/values that need to be sent as part
              of request invoking the API Gateway API or EventBridge ApiDestination.
          title: QueryStringParameters
      title: HttpParameters
      type: object
    TransformerPaths:
      additionalProperties:
        $ref: '#/components/schemas/TargetInputPath'
      maxProperties: 100
      type: object
    TransformerInput:
      maxLength: 8192
      minLength: 1
      type: string
    InputTransformer:
      description: Contains the parameters needed for you to provide custom input
        to a target based on one or more pieces of data extracted from the event.
      properties:
        InputPathsMap:
          allOf:
          - $ref: '#/components/schemas/TransformerPaths'
          - description: "<p>Map of JSON paths to be extracted from the event. You\
              \ can then insert these in the template in <code>InputTemplate</code>\
              \ to produce the output you want to be sent to the target.</p> <p> <code>InputPathsMap</code>\
              \ is an array key-value pairs, where each value is a valid JSON path.\
              \ You can have as many as 100 key-value pairs. You must use JSON dot\
              \ notation, not bracket notation.</p> <p>The keys cannot start with\
              \ \"Amazon Web Services.\" </p>"
          title: InputPathsMap
        InputTemplate:
          allOf:
          - $ref: '#/components/schemas/TransformerInput'
          - description: "<p>Input template where you specify placeholders that will\
              \ be filled with the values of the keys from <code>InputPathsMap</code>\
              \ to customize the data sent to the target. Enclose each <code>InputPathsMaps</code>\
              \ value in brackets: &lt;<i>value</i>&gt; </p> <p>If <code>InputTemplate</code>\
              \ is a JSON object (surrounded by curly braces), the following restrictions\
              \ apply:</p> <ul> <li> <p>The placeholder cannot be used as an object\
              \ key.</p> </li> </ul> <p>The following example shows the syntax for\
              \ using <code>InputPathsMap</code> and <code>InputTemplate</code>.</p>\
              \ <p> <code> \"InputTransformer\":</code> </p> <p> <code>{</code> </p>\
              \ <p> <code>\"InputPathsMap\": {\"instance\": \"$.detail.instance\"\
              ,\"status\": \"$.detail.status\"},</code> </p> <p> <code>\"InputTemplate\"\
              : \"&lt;instance&gt; is in state &lt;status&gt;\"</code> </p> <p> <code>}</code>\
              \ </p> <p>To have the <code>InputTemplate</code> include quote marks\
              \ within a JSON string, escape each quote marks with a slash, as in\
              \ the following example:</p> <p> <code> \"InputTransformer\":</code>\
              \ </p> <p> <code>{</code> </p> <p> <code>\"InputPathsMap\": {\"instance\"\
              : \"$.detail.instance\",\"status\": \"$.detail.status\"},</code> </p>\
              \ <p> <code>\"InputTemplate\": \"&lt;instance&gt; is in state \\\"&lt;status&gt;\\\
              \"\"</code> </p> <p> <code>}</code> </p> <p>The <code>InputTemplate</code>\
              \ can also be valid JSON with varibles in quotes or out, as in the following\
              \ example:</p> <p> <code> \"InputTransformer\":</code> </p> <p> <code>{</code>\
              \ </p> <p> <code>\"InputPathsMap\": {\"instance\": \"$.detail.instance\"\
              ,\"status\": \"$.detail.status\"},</code> </p> <p> <code>\"InputTemplate\"\
              : '{\"myInstance\": &lt;instance&gt;,\"myStatus\": \"&lt;instance&gt;\
              \ is in state \\\"&lt;status&gt;\\\"\"}'</code> </p> <p> <code>}</code>\
              \ </p>"
          title: InputTemplate
      required:
      - InputTemplate
      title: InputTransformer
      type: object
    InputTransformerPathKey:
      maxLength: 256
      minLength: 1
      pattern: "[A-Za-z0-9\\_\\-]+"
      type: string
    TargetPartitionKeyPath:
      maxLength: 256
      type: string
    KinesisParameters:
      description: "This object enables you to specify a JSON path to extract from\
        \ the event and use as the partition key for the Amazon Kinesis data stream,\
        \ so that you can control the shard to which the event goes. If you do not\
        \ include this parameter, the default is to use the <code>eventId</code> as\
        \ the partition key."
      properties:
        PartitionKeyPath:
          allOf:
          - $ref: '#/components/schemas/TargetPartitionKeyPath'
          - description: "The JSON path to be extracted from the event and used as\
              \ the partition key. For more information, see <a href=\"https://docs.aws.amazon.com/streams/latest/dev/key-concepts.html#partition-key\"\
              >Amazon Kinesis Streams Key Concepts</a> in the <i>Amazon Kinesis Streams\
              \ Developer Guide</i>."
          title: PartitionKeyPath
      required:
      - PartitionKeyPath
      title: KinesisParameters
      type: object
    LimitMax100:
      maximum: 100
      minimum: 1
      type: integer
    NextToken:
      maxLength: 2048
      minLength: 1
      type: string
    PartnerEventSourceAccountList:
      items:
        $ref: '#/components/schemas/PartnerEventSourceAccount'
      type: array
    PartnerEventSourceNamePrefix:
      maxLength: 256
      minLength: 1
      pattern: "aws\\.partner/[\\.\\-_A-Za-z0-9]+/[/\\.\\-_A-Za-z0-9]*"
      type: string
    PartnerEventSourceList:
      items:
        $ref: '#/components/schemas/PartnerEventSource'
      type: array
    ReplayList:
      items:
        $ref: '#/components/schemas/Replay'
      type: array
    TargetArn:
      maxLength: 1600
      minLength: 1
      type: string
    RuleNameList:
      items:
        $ref: '#/components/schemas/RuleName'
      type: array
    RuleResponseList:
      items:
        $ref: '#/components/schemas/Rule'
      type: array
    TargetList:
      items:
        $ref: '#/components/schemas/Target'
      maxItems: 100
      minItems: 1
      type: array
    MaximumEventAgeInSeconds:
      maximum: 86400
      minimum: 60
      type: integer
    MaximumRetryAttempts:
      maximum: 185
      minimum: 0
      type: integer
    MessageGroupId:
      maxLength: 100
      type: string
    NonPartnerEventBusName:
      maxLength: 256
      minLength: 1
      pattern: "[\\.\\-_A-Za-z0-9]+"
      type: string
    NonPartnerEventBusNameOrArn:
      maxLength: 1600
      minLength: 1
      pattern: "(arn:aws[\\w-]*:events:[a-z]{2}-[a-z]+-[\\w-]+:[0-9]{12}:event-bus\\\
        /)?[\\.\\-_A-Za-z0-9]+"
      type: string
    PartnerEventSource:
      description: "A partner event source is created by an SaaS partner. If a customer\
        \ creates a partner event bus that matches this event source, that Amazon\
        \ Web Services account can receive events from the partner's applications\
        \ or services."
      properties:
        Arn:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The ARN of the partner event source.
          title: Arn
        Name:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The name of the partner event source.
          title: Name
      title: PartnerEventSource
      type: object
    PartnerEventSourceAccount:
      description: The Amazon Web Services account that a partner event source has
        been offered to.
      properties:
        Account:
          allOf:
          - $ref: '#/components/schemas/AccountId'
          - description: The Amazon Web Services account ID that the partner event
              source was offered to.
          title: Account
        CreationTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          - description: The date and time the event source was created.
          title: CreationTime
        ExpirationTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          - description: "The date and time that the event source will expire, if\
              \ the Amazon Web Services account doesn't create a matching event bus\
              \ for it."
          title: ExpirationTime
        State:
          allOf:
          - $ref: '#/components/schemas/EventSourceState'
          - description: "The state of the event source. If it is ACTIVE, you have\
              \ already created a matching event bus for this event source, and that\
              \ event bus is active. If it is PENDING, either you haven't yet created\
              \ a matching event bus, or that event bus is deactivated. If it is DELETED,\
              \ you have created a matching event bus, but the event source has since\
              \ been deleted."
          title: State
      title: PartnerEventSourceAccount
      type: object
    PathParameter:
      pattern: ^(?!\s*$).+
      title: PathParameter
      type: string
    PlacementConstraintType:
      enum:
      - distinctInstance
      - memberOf
      title: PlacementConstraintType
      type: string
    PlacementConstraintExpression:
      maxLength: 2000
      type: string
    PlacementConstraint:
      description: "An object representing a constraint on task placement. To learn\
        \ more, see <a href=\"https://docs.aws.amazon.com/AmazonECS/latest/developerguide/task-placement-constraints.html\"\
        >Task Placement Constraints</a> in the Amazon Elastic Container Service Developer\
        \ Guide."
      properties:
        type:
          allOf:
          - $ref: '#/components/schemas/PlacementConstraintType'
          - description: 'The type of constraint. Use distinctInstance to ensure that
              each task in a particular group is running on a different container
              instance. Use memberOf to restrict the selection to a group of valid
              candidates. '
          title: type
        expression:
          allOf:
          - $ref: '#/components/schemas/PlacementConstraintExpression'
          - description: "A cluster query language expression to apply to the constraint.\
              \ You cannot specify an expression if the constraint type is <code>distinctInstance</code>.\
              \ To learn more, see <a href=\"https://docs.aws.amazon.com/AmazonECS/latest/developerguide/cluster-query-language.html\"\
              >Cluster Query Language</a> in the Amazon Elastic Container Service\
              \ Developer Guide. "
          title: expression
      title: PlacementConstraint
      type: object
    PlacementStrategy:
      description: "The task placement strategy for a task or service. To learn more,\
        \ see <a href=\"https://docs.aws.amazon.com/AmazonECS/latest/developerguide/task-placement-strategies.html\"\
        >Task Placement Strategies</a> in the Amazon Elastic Container Service Service\
        \ Developer Guide."
      properties:
        type:
          allOf:
          - $ref: '#/components/schemas/PlacementStrategyType'
          - description: "The type of placement strategy. The random placement strategy\
              \ randomly places tasks on available candidates. The spread placement\
              \ strategy spreads placement across available candidates evenly based\
              \ on the field parameter. The binpack strategy places tasks on available\
              \ candidates that have the least available amount of the resource that\
              \ is specified with the field parameter. For example, if you binpack\
              \ on memory, a task is placed on the instance with the least amount\
              \ of remaining memory (but still enough to run the task). "
          title: type
        field:
          allOf:
          - $ref: '#/components/schemas/PlacementStrategyField'
          - description: "The field to apply the placement strategy against. For the\
              \ spread placement strategy, valid values are instanceId (or host, which\
              \ has the same effect), or any platform or custom attribute that is\
              \ applied to a container instance, such as attribute:ecs.availability-zone.\
              \ For the binpack placement strategy, valid values are cpu and memory.\
              \ For the random placement strategy, this field is not used. "
          title: field
      title: PlacementStrategy
      type: object
    PlacementStrategyType:
      enum:
      - random
      - spread
      - binpack
      title: PlacementStrategyType
      type: string
    PlacementStrategyField:
      maxLength: 255
      type: string
    Principal:
      maxLength: 12
      minLength: 1
      pattern: "(\\d{12}|\\*)"
      type: string
    PutEventsRequestEntryList:
      items:
        $ref: '#/components/schemas/PutEventsRequestEntry'
      maxItems: 10
      minItems: 1
      type: array
    TraceHeader:
      maxLength: 500
      minLength: 1
      type: string
    PutEventsRequestEntry:
      description: Represents an event to be submitted.
      properties:
        Time:
          allOf:
          - $ref: '#/components/schemas/EventTime'
          - description: "The time stamp of the event, per <a href=\"https://www.rfc-editor.org/rfc/rfc3339.txt\"\
              >RFC3339</a>. If no time stamp is provided, the time stamp of the <a\
              \ href=\"https://docs.aws.amazon.com/eventbridge/latest/APIReference/API_PutEvents.html\"\
              >PutEvents</a> call is used."
          title: Time
        Source:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The source of the event.
          title: Source
        Resources:
          allOf:
          - $ref: '#/components/schemas/EventResourceList'
          - description: "Amazon Web Services resources, identified by Amazon Resource\
              \ Name (ARN), which the event primarily concerns. Any number, including\
              \ zero, may be present."
          title: Resources
        DetailType:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: "Free-form string, with a maximum of 128 characters, used\
              \ to decide what fields to expect in the event detail."
          title: DetailType
        Detail:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: A valid JSON object. There is no other schema imposed. The
              JSON object may contain fields and nested subobjects.
          title: Detail
        EventBusName:
          allOf:
          - $ref: '#/components/schemas/NonPartnerEventBusNameOrArn'
          - description: "<p>The name or ARN of the event bus to receive the event.\
              \ Only the rules that are associated with this event bus are used to\
              \ match the event. If you omit this, the default event bus is used.</p>\
              \ <note> <p>If you're using a global endpoint with a custom bus, you\
              \ must enter the name, not the ARN, of the event bus in either the primary\
              \ or secondary Region here and the corresponding event bus in the other\
              \ Region will be determined based on the endpoint referenced by the\
              \ <code>EndpointId</code>.</p> </note>"
          title: EventBusName
        TraceHeader:
          allOf:
          - $ref: '#/components/schemas/TraceHeader'
          - description: "<p>An X-Ray trace header, which is an http header (X-Amzn-Trace-Id)\
              \ that contains the trace-id associated with the event.</p> <p>To learn\
              \ more about X-Ray trace headers, see <a href=\"https://docs.aws.amazon.com/xray/latest/devguide/xray-concepts.html#xray-concepts-tracingheader\"\
              >Tracing header</a> in the X-Ray Developer Guide.</p>"
          title: TraceHeader
      title: PutEventsRequestEntry
      type: object
    PutEventsResultEntryList:
      items:
        $ref: '#/components/schemas/PutEventsResultEntry'
      type: array
    PutEventsResultEntry:
      description: "Represents an event that failed to be submitted. For information\
        \ about the errors that are common to all actions, see <a href=\"https://docs.aws.amazon.com/eventbridge/latest/APIReference/CommonErrors.html\"\
        >Common Errors</a>."
      properties:
        EventId:
          allOf:
          - $ref: '#/components/schemas/EventId'
          - description: The ID of the event.
          title: EventId
        ErrorCode:
          allOf:
          - $ref: '#/components/schemas/ErrorCode'
          - description: The error code that indicates why the event submission failed.
          title: ErrorCode
        ErrorMessage:
          allOf:
          - $ref: '#/components/schemas/ErrorMessage'
          - description: The error message that explains why the event submission
              failed.
          title: ErrorMessage
      title: PutEventsResultEntry
      type: object
    PutPartnerEventsRequestEntryList:
      items:
        $ref: '#/components/schemas/PutPartnerEventsRequestEntry'
      maxItems: 20
      minItems: 1
      type: array
    PutPartnerEventsRequestEntry:
      description: The details about an event generated by an SaaS partner.
      properties:
        Time:
          allOf:
          - $ref: '#/components/schemas/EventTime'
          - description: The date and time of the event.
          title: Time
        Source:
          allOf:
          - $ref: '#/components/schemas/EventSourceName'
          - description: The event source that is generating the entry.
          title: Source
        Resources:
          allOf:
          - $ref: '#/components/schemas/EventResourceList'
          - description: "Amazon Web Services resources, identified by Amazon Resource\
              \ Name (ARN), which the event primarily concerns. Any number, including\
              \ zero, may be present."
          title: Resources
        DetailType:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: "A free-form string, with a maximum of 128 characters, used\
              \ to decide what fields to expect in the event detail."
          title: DetailType
        Detail:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: A valid JSON string. There is no other schema imposed. The
              JSON string may contain fields and nested subobjects.
          title: Detail
      title: PutPartnerEventsRequestEntry
      type: object
    PutPartnerEventsResultEntryList:
      items:
        $ref: '#/components/schemas/PutPartnerEventsResultEntry'
      type: array
    PutPartnerEventsResultEntry:
      description: "Represents an event that a partner tried to generate, but failed."
      properties:
        EventId:
          allOf:
          - $ref: '#/components/schemas/EventId'
          - description: The ID of the event.
          title: EventId
        ErrorCode:
          allOf:
          - $ref: '#/components/schemas/ErrorCode'
          - description: The error code that indicates why the event submission failed.
          title: ErrorCode
        ErrorMessage:
          allOf:
          - $ref: '#/components/schemas/ErrorMessage'
          - description: The error message that explains why the event submission
              failed.
          title: ErrorMessage
      title: PutPartnerEventsResultEntry
      type: object
    StatementId:
      maxLength: 64
      minLength: 1
      pattern: "[a-zA-Z0-9-_]+"
      type: string
    PutTargetsResultEntryList:
      items:
        $ref: '#/components/schemas/PutTargetsResultEntry'
      type: array
    TargetId:
      maxLength: 64
      minLength: 1
      pattern: "[\\.\\-_A-Za-z0-9]+"
      title: TargetId
      type: string
    PutTargetsResultEntry:
      description: Represents a target that failed to be added to a rule.
      properties:
        TargetId:
          allOf:
          - $ref: '#/components/schemas/TargetId'
          - description: The ID of the target.
          title: TargetId
        ErrorCode:
          allOf:
          - $ref: '#/components/schemas/ErrorCode'
          - description: "The error code that indicates why the target addition failed.\
              \ If the value is <code>ConcurrentModificationException</code>, too\
              \ many requests were made at the same time."
          title: ErrorCode
        ErrorMessage:
          allOf:
          - $ref: '#/components/schemas/ErrorMessage'
          - description: The error message that explains why the target addition failed.
          title: ErrorMessage
      title: PutTargetsResultEntry
      type: object
    RedshiftSecretManagerArn:
      description: Optional SecretManager ARN which stores the database credentials
      maxLength: 1600
      minLength: 1
      pattern: "(^arn:aws([a-z]|\\-)*:secretsmanager:[a-z0-9-.]+:.*)|(\\$(\\.[\\w_-]+(\\\
        [(\\d+|\\*)\\])*)*)"
      type: string
    Sql:
      description: A single Redshift SQL
      format: password
      maxLength: 100000
      minLength: 1
      title: Sql
      type: string
    StatementName:
      description: A name for Redshift DataAPI statement which can be used as filter
        of ListStatement.
      maxLength: 500
      minLength: 1
      type: string
    Sqls:
      description: A list of SQLs.
      items:
        $ref: '#/components/schemas/Sql'
      maxItems: 40
      minItems: 0
      title: Sqls
      type: array
    RedshiftDataParameters:
      description: These are custom parameters to be used when the target is a Amazon
        Redshift cluster or Redshift Serverless workgroup to invoke the Amazon Redshift
        Data API ExecuteStatement based on EventBridge events.
      properties:
        SecretManagerArn:
          allOf:
          - $ref: '#/components/schemas/RedshiftSecretManagerArn'
          - description: The name or ARN of the secret that enables access to the
              database. Required when authenticating using Amazon Web Services Secrets
              Manager.
          title: SecretManagerArn
        Database:
          allOf:
          - $ref: '#/components/schemas/Database'
          - description: The name of the database. Required when authenticating using
              temporary credentials.
          title: Database
        DbUser:
          allOf:
          - $ref: '#/components/schemas/DbUser'
          - description: <p>The database user name. Required when authenticating using
              temporary credentials.</p> <p>Do not provide this parameter when connecting
              to a Redshift Serverless workgroup.</p>
          title: DbUser
        Sql:
          allOf:
          - $ref: '#/components/schemas/Sql'
          - description: The SQL statement text to run.
          title: Sql
        StatementName:
          allOf:
          - $ref: '#/components/schemas/StatementName'
          - description: The name of the SQL statement. You can name the SQL statement
              when you create it to identify the query.
          title: StatementName
        WithEvent:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          - description: Indicates whether to send an event back to EventBridge after
              the SQL statement runs.
          title: WithEvent
        Sqls:
          description: A list of SQLs.
          items:
            $ref: '#/components/schemas/Sql'
          maxItems: 40
          minItems: 0
          title: Sqls
          type: array
      required:
      - Database
      title: RedshiftDataParameters
      type: object
    TargetIdList:
      items:
        $ref: '#/components/schemas/TargetId'
      maxItems: 100
      minItems: 1
      type: array
    RemoveTargetsResultEntryList:
      items:
        $ref: '#/components/schemas/RemoveTargetsResultEntry'
      type: array
    RemoveTargetsResultEntry:
      description: Represents a target that failed to be removed from a rule.
      properties:
        TargetId:
          allOf:
          - $ref: '#/components/schemas/TargetId'
          - description: The ID of the target.
          title: TargetId
        ErrorCode:
          allOf:
          - $ref: '#/components/schemas/ErrorCode'
          - description: "The error code that indicates why the target removal failed.\
              \ If the value is <code>ConcurrentModificationException</code>, too\
              \ many requests were made at the same time."
          title: ErrorCode
        ErrorMessage:
          allOf:
          - $ref: '#/components/schemas/ErrorMessage'
          - description: The error message that explains why the target removal failed.
          title: ErrorMessage
      title: RemoveTargetsResultEntry
      type: object
    Replay:
      description: A <code>Replay</code> object that contains details about a replay.
      properties:
        ReplayName:
          allOf:
          - $ref: '#/components/schemas/ReplayName'
          - description: The name of the replay.
          title: ReplayName
        EventSourceArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          - description: The ARN of the archive to replay event from.
          title: EventSourceArn
        State:
          allOf:
          - $ref: '#/components/schemas/ReplayState'
          - description: The current state of the replay.
          title: State
        StateReason:
          allOf:
          - $ref: '#/components/schemas/ReplayStateReason'
          - description: A description of why the replay is in the current state.
          title: StateReason
        EventStartTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          - description: A time stamp for the time to start replaying events. This
              is determined by the time in the event as described in <a href="https://docs.aws.amazon.com/eventbridge/latest/APIReference/API_PutEventsRequestEntry.html#eventbridge-Type-PutEventsRequestEntry-Time">Time</a>.
          title: EventStartTime
        EventEndTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          - description: A time stamp for the time to start replaying events. Any
              event with a creation time prior to the <code>EventEndTime</code> specified
              is replayed.
          title: EventEndTime
        EventLastReplayedTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          - description: A time stamp for the time that the last event was replayed.
          title: EventLastReplayedTime
        ReplayStartTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          - description: A time stamp for the time that the replay started.
          title: ReplayStartTime
        ReplayEndTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          - description: A time stamp for the time that the replay completed.
          title: ReplayEndTime
      title: Replay
      type: object
    ReplayDestinationFilters:
      items:
        $ref: '#/components/schemas/Arn'
      type: array
    ReplicationState:
      enum:
      - ENABLED
      - DISABLED
      title: ReplicationState
      type: string
    RetryPolicy:
      description: A <code>RetryPolicy</code> object that includes information about
        the retry policy settings.
      properties:
        MaximumRetryAttempts:
          allOf:
          - $ref: '#/components/schemas/MaximumRetryAttempts'
          - description: The maximum number of retry attempts to make before the request
              fails. Retry attempts continue until either the maximum number of attempts
              is made or until the duration of the <code>MaximumEventAgeInSeconds</code>
              is met.
          title: MaximumRetryAttempts
        MaximumEventAgeInSeconds:
          allOf:
          - $ref: '#/components/schemas/MaximumEventAgeInSeconds'
          - description: "The maximum amount of time, in seconds, to continue to make\
              \ retry attempts."
          title: MaximumEventAgeInSeconds
      title: RetryPolicy
      type: object
    Route:
      maxLength: 20
      minLength: 9
      pattern: "^[\\-a-z0-9]+$"
      type: string
    Rule:
      description: Contains information about a rule in Amazon EventBridge.
      properties:
        Name:
          allOf:
          - $ref: '#/components/schemas/RuleName'
          - description: The name of the rule.
          title: Name
        Arn:
          allOf:
          - $ref: '#/components/schemas/RuleArn'
          - description: The Amazon Resource Name (ARN) of the rule.
          title: Arn
        EventPattern:
          allOf:
          - $ref: '#/components/schemas/EventPattern'
          - description: "The event pattern of the rule. For more information, see\
              \ <a href=\"https://docs.aws.amazon.com/eventbridge/latest/userguide/eventbridge-and-event-patterns.html\"\
              >Events and Event Patterns</a> in the <i>Amazon EventBridge User Guide</i>."
          title: EventPattern
        State:
          allOf:
          - $ref: '#/components/schemas/RuleState'
          - description: The state of the rule.
          title: State
        Description:
          allOf:
          - $ref: '#/components/schemas/RuleDescription'
          - description: The description of the rule.
          title: Description
        ScheduleExpression:
          allOf:
          - $ref: '#/components/schemas/ScheduleExpression'
          - description: "The scheduling expression. For example, \"cron(0 20 * *\
              \ ? *)\", \"rate(5 minutes)\". For more information, see <a href=\"\
              https://docs.aws.amazon.com/eventbridge/latest/userguide/eb-create-rule-schedule.html\"\
              >Creating an Amazon EventBridge rule that runs on a schedule</a>."
          title: ScheduleExpression
        RoleArn:
          allOf:
          - $ref: '#/components/schemas/RoleArn'
          - description: "<p>The Amazon Resource Name (ARN) of the role that is used\
              \ for target invocation.</p> <p>If you're setting an event bus in another\
              \ account as the target and that account granted permission to your\
              \ account through an organization instead of directly by the account\
              \ ID, you must specify a <code>RoleArn</code> with proper permissions\
              \ in the <code>Target</code> structure, instead of here in this parameter.</p>"
          title: RoleArn
        ManagedBy:
          allOf:
          - $ref: '#/components/schemas/ManagedBy'
          - description: "If the rule was created on behalf of your account by an\
              \ Amazon Web Services service, this field displays the principal name\
              \ of the service that created the rule."
          title: ManagedBy
        EventBusName:
          allOf:
          - $ref: '#/components/schemas/EventBusName'
          - description: "The name or ARN of the event bus associated with the rule.\
              \ If you omit this, the default event bus is used."
          title: EventBusName
      title: Rule
      type: object
    RunCommandTargets:
      items:
        $ref: '#/components/schemas/RunCommandTarget'
      maxItems: 5
      minItems: 1
      type: array
    RunCommandParameters:
      description: 'This parameter contains the criteria (either InstanceIds or a
        tag) used to specify which EC2 instances are to be sent the command. '
      properties:
        RunCommandTargets:
          allOf:
          - $ref: '#/components/schemas/RunCommandTargets'
          - description: "Currently, we support including only one RunCommandTarget\
              \ block, which specifies either an array of InstanceIds or a tag."
          title: RunCommandTargets
      required:
      - RunCommandTargets
      title: RunCommandParameters
      type: object
    RunCommandTargetKey:
      maxLength: 128
      minLength: 1
      pattern: "^[\\p{L}\\p{Z}\\p{N}_.:/=+\\-@]*$"
      type: string
    RunCommandTargetValues:
      items:
        $ref: '#/components/schemas/RunCommandTargetValue'
      maxItems: 50
      minItems: 1
      type: array
    RunCommandTarget:
      description: "Information about the EC2 instances that are to be sent the command,\
        \ specified as key-value pairs. Each <code>RunCommandTarget</code> block can\
        \ include only one key, but this key may specify multiple values."
      properties:
        Key:
          allOf:
          - $ref: '#/components/schemas/RunCommandTargetKey'
          - description: Can be either <code>tag:</code> <i>tag-key</i> or <code>InstanceIds</code>.
          title: Key
        Values:
          allOf:
          - $ref: '#/components/schemas/RunCommandTargetValues'
          - description: "If <code>Key</code> is <code>tag:</code> <i>tag-key</i>,\
              \ <code>Values</code> is a list of tag values. If <code>Key</code> is\
              \ <code>InstanceIds</code>, <code>Values</code> is a list of Amazon\
              \ EC2 instance IDs."
          title: Values
      required:
      - Key
      - Values
      title: RunCommandTarget
      type: object
    RunCommandTargetValue:
      maxLength: 256
      minLength: 1
      title: RunCommandTargetValue
      type: string
    SageMakerPipelineParameterName:
      maxLength: 256
      minLength: 1
      pattern: "^[a-zA-Z0-9](-*[a-zA-Z0-9])*$"
      type: string
    SageMakerPipelineParameterValue:
      maxLength: 1024
      type: string
    SageMakerPipelineParameter:
      description: Name/Value pair of a parameter to start execution of a SageMaker
        Model Building Pipeline.
      properties:
        Name:
          allOf:
          - $ref: '#/components/schemas/SageMakerPipelineParameterName'
          - description: Name of parameter to start execution of a SageMaker Model
              Building Pipeline.
          title: Name
        Value:
          allOf:
          - $ref: '#/components/schemas/SageMakerPipelineParameterValue'
          - description: Value of parameter to start execution of a SageMaker Model
              Building Pipeline.
          title: Value
      required:
      - Name
      - Value
      title: SageMakerPipelineParameter
      type: object
    SageMakerPipelineParameterList:
      items:
        $ref: '#/components/schemas/SageMakerPipelineParameter'
      maxItems: 200
      minItems: 0
      type: array
    SageMakerPipelineParameters:
      description: These are custom parameters to use when the target is a SageMaker
        Model Building Pipeline that starts based on EventBridge events.
      properties:
        PipelineParameterList:
          allOf:
          - $ref: '#/components/schemas/SageMakerPipelineParameterList'
          - description: List of Parameter names and values for SageMaker Model Building
              Pipeline execution.
          title: PipelineParameterList
      title: SageMakerPipelineParameters
      type: object
    SqsParameters:
      description: This structure includes the custom parameter to be used when the
        target is an SQS FIFO queue.
      properties:
        MessageGroupId:
          allOf:
          - $ref: '#/components/schemas/MessageGroupId'
          - description: The FIFO message group ID to use as the target.
          title: MessageGroupId
      title: SqsParameters
      type: object
    TagKey:
      maxLength: 128
      minLength: 1
      title: TagKey
      type: string
    TagValue:
      maxLength: 256
      minLength: 0
      type: string
    Tag:
      description: "A key-value pair associated with an Amazon Web Services resource.\
        \ In EventBridge, rules and event buses support tagging."
      properties:
        Key:
          allOf:
          - $ref: '#/components/schemas/TagKey'
          - description: A string you can use to assign a value. The combination of
              tag keys and values can help you organize and categorize your resources.
          title: Key
        Value:
          allOf:
          - $ref: '#/components/schemas/TagValue'
          - description: The value for the specified tag key.
          title: Value
      required:
      - Key
      - Value
      title: Tag
      type: object
    TagKeyList:
      items:
        $ref: '#/components/schemas/TagKey'
      type: array
    TargetInput:
      maxLength: 8192
      type: string
    TargetInputPath:
      maxLength: 256
      title: TargetInputPath
      type: string
    Target:
      description: "<p>Targets are the resources to be invoked when a rule is triggered.\
        \ For a complete list of services and resources that can be set as a target,\
        \ see <a href=\"https://docs.aws.amazon.com/eventbridge/latest/APIReference/API_PutTargets.html\"\
        >PutTargets</a>.</p> <p>If you are setting the event bus of another account\
        \ as the target, and that account granted permission to your account through\
        \ an organization instead of directly by the account ID, then you must specify\
        \ a <code>RoleArn</code> with proper permissions in the <code>Target</code>\
        \ structure. For more information, see <a href=\"https://docs.aws.amazon.com/eventbridge/latest/userguide/eventbridge-cross-account-event-delivery.html\"\
        >Sending and Receiving Events Between Amazon Web Services Accounts</a> in\
        \ the <i>Amazon EventBridge User Guide</i>.</p>"
      properties:
        Id:
          allOf:
          - $ref: '#/components/schemas/TargetId'
          - description: The ID of the target within the specified rule. Use this
              ID to reference the target when updating the rule. We recommend using
              a memorable and unique string.
          title: Id
        Arn:
          allOf:
          - $ref: '#/components/schemas/TargetArn'
          - description: The Amazon Resource Name (ARN) of the target.
          title: Arn
        RoleArn:
          allOf:
          - $ref: '#/components/schemas/RoleArn'
          - description: "The Amazon Resource Name (ARN) of the IAM role to be used\
              \ for this target when the rule is triggered. If one rule triggers multiple\
              \ targets, you can use a different IAM role for each target."
          title: RoleArn
        Input:
          allOf:
          - $ref: '#/components/schemas/TargetInput'
          - description: "Valid JSON text passed to the target. In this case, nothing\
              \ from the event itself is passed to the target. For more information,\
              \ see <a href=\"http://www.rfc-editor.org/rfc/rfc7159.txt\">The JavaScript\
              \ Object Notation (JSON) Data Interchange Format</a>."
          title: Input
        InputPath:
          allOf:
          - $ref: '#/components/schemas/TargetInputPath'
          - description: "The value of the JSONPath that is used for extracting part\
              \ of the matched event when passing it to the target. You may use JSON\
              \ dot notation or bracket notation. For more information about JSON\
              \ paths, see <a href=\"http://goessner.net/articles/JsonPath/\">JSONPath</a>."
          title: InputPath
        InputTransformer:
          $ref: '#/components/schemas/Target_InputTransformer'
        KinesisParameters:
          $ref: '#/components/schemas/Target_KinesisParameters'
        RunCommandParameters:
          $ref: '#/components/schemas/Target_RunCommandParameters'
        EcsParameters:
          $ref: '#/components/schemas/Target_EcsParameters'
        BatchParameters:
          $ref: '#/components/schemas/Target_BatchParameters'
        SqsParameters:
          $ref: '#/components/schemas/Target_SqsParameters'
        HttpParameters:
          $ref: '#/components/schemas/Target_HttpParameters'
        RedshiftDataParameters:
          $ref: '#/components/schemas/Target_RedshiftDataParameters'
        SageMakerPipelineParameters:
          $ref: '#/components/schemas/Target_SageMakerPipelineParameters'
        DeadLetterConfig:
          $ref: '#/components/schemas/Target_DeadLetterConfig'
        RetryPolicy:
          $ref: '#/components/schemas/Target_RetryPolicy'
      required:
      - Arn
      - Id
      title: Target
      type: object
    UpdateConnectionApiKeyAuthRequestParameters:
      description: Contains the API key authorization parameters to use to update
        the connection.
      properties:
        ApiKeyName:
          allOf:
          - $ref: '#/components/schemas/AuthHeaderParameters'
          - description: The name of the API key to use for authorization.
          title: ApiKeyName
        ApiKeyValue:
          allOf:
          - $ref: '#/components/schemas/AuthHeaderParameters'
          - description: The value associated with teh API key to use for authorization.
          title: ApiKeyValue
      title: UpdateConnectionApiKeyAuthRequestParameters
      type: object
    UpdateConnectionBasicAuthRequestParameters:
      description: Contains the Basic authorization parameters for the connection.
      properties:
        Username:
          allOf:
          - $ref: '#/components/schemas/AuthHeaderParameters'
          - description: The user name to use for Basic authorization.
          title: Username
        Password:
          allOf:
          - $ref: '#/components/schemas/AuthHeaderParameters'
          - description: The password associated with the user name to use for Basic
              authorization.
          title: Password
      title: UpdateConnectionBasicAuthRequestParameters
      type: object
    UpdateConnectionOAuthRequestParameters:
      description: Contains the OAuth request parameters to use for the connection.
      properties:
        ClientParameters:
          $ref: '#/components/schemas/UpdateConnectionOAuthRequestParameters_ClientParameters'
        AuthorizationEndpoint:
          allOf:
          - $ref: '#/components/schemas/HttpsEndpoint'
          - description: The URL to the authorization endpoint when OAuth is specified
              as the authorization type.
          title: AuthorizationEndpoint
        HttpMethod:
          allOf:
          - $ref: '#/components/schemas/ConnectionOAuthHttpMethod'
          - description: The method used to connect to the HTTP endpoint.
          title: HttpMethod
        OAuthHttpParameters:
          $ref: '#/components/schemas/ConnectionOAuthResponseParameters_OAuthHttpParameters'
      title: UpdateConnectionOAuthRequestParameters
      type: object
    UpdateConnectionAuthRequestParameters:
      description: Contains the additional parameters to use for the connection.
      properties:
        BasicAuthParameters:
          $ref: '#/components/schemas/UpdateConnectionAuthRequestParameters_BasicAuthParameters'
        OAuthParameters:
          $ref: '#/components/schemas/UpdateConnectionAuthRequestParameters_OAuthParameters'
        ApiKeyAuthParameters:
          $ref: '#/components/schemas/UpdateConnectionAuthRequestParameters_ApiKeyAuthParameters'
        InvocationHttpParameters:
          $ref: '#/components/schemas/UpdateConnectionAuthRequestParameters_InvocationHttpParameters'
      title: UpdateConnectionAuthRequestParameters
      type: object
    UpdateConnectionOAuthClientRequestParameters:
      description: Contains the OAuth authorization parameters to use for the connection.
      properties:
        ClientID:
          allOf:
          - $ref: '#/components/schemas/AuthHeaderParameters'
          - description: The client ID to use for OAuth authorization.
          title: ClientID
        ClientSecret:
          allOf:
          - $ref: '#/components/schemas/AuthHeaderParameters'
          - description: The client secret assciated with the client ID to use for
              OAuth authorization.
          title: ClientSecret
      title: UpdateConnectionOAuthClientRequestParameters
      type: object
    CreateConnectionRequest_AuthParameters:
      allOf:
      - $ref: '#/components/schemas/CreateConnectionAuthRequestParameters'
      - description: 'A <code>CreateConnectionAuthRequestParameters</code> object
          that contains the authorization parameters to use to authorize with the
          endpoint. '
      example:
        InvocationHttpParameters:
          HeaderParameters: ""
          QueryStringParameters: ""
          BodyParameters: ""
        BasicAuthParameters:
          Username: ""
          Password: ""
        ApiKeyAuthParameters:
          ApiKeyValue: ""
          ApiKeyName: ""
        OAuthParameters:
          ClientParameters:
            ClientSecret: ""
            ClientID: ""
          OAuthHttpParameters:
            HeaderParameters: ""
            QueryStringParameters: ""
            BodyParameters: ""
          AuthorizationEndpoint: ""
          HttpMethod: ""
      title: CreateConnectionRequest_AuthParameters
    CreateEndpointResponse_RoutingConfig:
      allOf:
      - $ref: '#/components/schemas/RoutingConfig'
      - description: The routing configuration defined by this request.
      example:
        FailoverConfig:
          Secondary:
            Route: ""
          Primary:
            HealthCheck: ""
      title: CreateEndpointResponse_RoutingConfig
    CreateEndpointResponse_ReplicationConfig:
      allOf:
      - $ref: '#/components/schemas/ReplicationConfig'
      - description: Whether event replication was enabled or disabled by this request.
      example:
        State: ""
      title: CreateEndpointResponse_ReplicationConfig
    CreateEndpointRequest_RoutingConfig:
      allOf:
      - $ref: '#/components/schemas/RoutingConfig'
      - description: "Configure the routing policy, including the health check and\
          \ secondary Region.."
      example:
        FailoverConfig:
          Secondary:
            Route: ""
          Primary:
            HealthCheck: ""
      title: CreateEndpointRequest_RoutingConfig
    CreateEndpointRequest_ReplicationConfig:
      allOf:
      - $ref: '#/components/schemas/ReplicationConfig'
      - description: "Enable or disable event replication. The default state is <code>ENABLED</code>\
          \ which means you must supply a <code>RoleArn</code>. If you don't have\
          \ a <code>RoleArn</code> or you don't want event replication enabled, set\
          \ the state to <code>DISABLED</code>."
      example:
        State: ""
      title: CreateEndpointRequest_ReplicationConfig
    DescribeConnectionResponse_AuthParameters:
      allOf:
      - $ref: '#/components/schemas/ConnectionAuthResponseParameters'
      - description: The parameters to use for authorization for the connection.
      example:
        InvocationHttpParameters:
          HeaderParameters: ""
          QueryStringParameters: ""
          BodyParameters: ""
        BasicAuthParameters:
          Username: ""
        ApiKeyAuthParameters:
          ApiKeyName: ""
        OAuthParameters:
          ClientParameters:
            ClientID: ""
          OAuthHttpParameters:
            HeaderParameters: ""
            QueryStringParameters: ""
            BodyParameters: ""
          AuthorizationEndpoint: ""
          HttpMethod: ""
      title: DescribeConnectionResponse_AuthParameters
    DescribeEndpointResponse_RoutingConfig:
      allOf:
      - $ref: '#/components/schemas/RoutingConfig'
      - description: The routing configuration of the endpoint you asked for information
          about.
      example:
        FailoverConfig:
          Secondary:
            Route: ""
          Primary:
            HealthCheck: ""
      title: DescribeEndpointResponse_RoutingConfig
    DescribeEndpointResponse_ReplicationConfig:
      allOf:
      - $ref: '#/components/schemas/ReplicationConfig'
      - description: Whether replication is enabled or disabled for the endpoint you
          asked for information about.
      example:
        State: ""
      title: DescribeEndpointResponse_ReplicationConfig
    DescribeReplayResponse_Destination:
      allOf:
      - $ref: '#/components/schemas/ReplayDestination'
      - description: A <code>ReplayDestination</code> object that contains details
          about the replay.
      example:
        FilterArns: ""
        Arn: ""
      title: DescribeReplayResponse_Destination
    PutPermissionRequest_Condition:
      allOf:
      - $ref: '#/components/schemas/Condition'
      - description: "<p>This parameter enables you to limit the permission to accounts\
          \ that fulfill a certain condition, such as being a member of a certain\
          \ Amazon Web Services organization. For more information about Amazon Web\
          \ Services Organizations, see <a href=\"https://docs.aws.amazon.com/organizations/latest/userguide/orgs_introduction.html\"\
          >What Is Amazon Web Services Organizations</a> in the <i>Amazon Web Services\
          \ Organizations User Guide</i>.</p> <p>If you specify <code>Condition</code>\
          \ with an Amazon Web Services organization ID, and specify \"*\" as the\
          \ value for <code>Principal</code>, you grant permission to all the accounts\
          \ in the named organization.</p> <p>The <code>Condition</code> is a JSON\
          \ string which must contain <code>Type</code>, <code>Key</code>, and <code>Value</code>\
          \ fields.</p>"
      example:
        Type: ""
        Value: ""
        Key: ""
      title: PutPermissionRequest_Condition
    StartReplayRequest_Destination:
      allOf:
      - $ref: '#/components/schemas/ReplayDestination'
      - description: A <code>ReplayDestination</code> object that includes details
          about the destination for the replay.
      example:
        FilterArns: ""
        Arn: ""
      title: StartReplayRequest_Destination
    UpdateConnectionRequest_AuthParameters:
      allOf:
      - $ref: '#/components/schemas/UpdateConnectionAuthRequestParameters'
      - description: The authorization parameters to use for the connection.
      example:
        InvocationHttpParameters:
          HeaderParameters: ""
          QueryStringParameters: ""
          BodyParameters: ""
        BasicAuthParameters:
          Username: ""
          Password: ""
        ApiKeyAuthParameters:
          ApiKeyValue: ""
          ApiKeyName: ""
        OAuthParameters:
          ClientParameters:
            ClientSecret: ""
            ClientID: ""
          OAuthHttpParameters:
            HeaderParameters: ""
            QueryStringParameters: ""
            BodyParameters: ""
          AuthorizationEndpoint: ""
          HttpMethod: ""
      title: UpdateConnectionRequest_AuthParameters
    UpdateEndpointResponse_RoutingConfig:
      allOf:
      - $ref: '#/components/schemas/RoutingConfig'
      - description: The routing configuration you updated in this request.
      example:
        FailoverConfig:
          Secondary:
            Route: ""
          Primary:
            HealthCheck: ""
      title: UpdateEndpointResponse_RoutingConfig
    UpdateEndpointResponse_ReplicationConfig:
      allOf:
      - $ref: '#/components/schemas/ReplicationConfig'
      - description: Whether event replication was enabled or disabled for the endpoint
          you updated in this request.
      example:
        State: ""
      title: UpdateEndpointResponse_ReplicationConfig
    UpdateEndpointRequest_RoutingConfig:
      allOf:
      - $ref: '#/components/schemas/RoutingConfig'
      - description: "Configure the routing policy, including the health check and\
          \ secondary Region."
      example:
        FailoverConfig:
          Secondary:
            Route: ""
          Primary:
            HealthCheck: ""
      title: UpdateEndpointRequest_RoutingConfig
    BatchParameters_ArrayProperties:
      allOf:
      - $ref: '#/components/schemas/BatchArrayProperties'
      - description: "The array properties for the submitted job, such as the size\
          \ of the array. The array size can be between 2 and 10,000. If you specify\
          \ array properties for a job, it becomes an array job. This parameter is\
          \ used only if the target is an Batch job."
      title: BatchParameters_ArrayProperties
    BatchParameters_RetryStrategy:
      allOf:
      - $ref: '#/components/schemas/BatchRetryStrategy'
      - description: "The retry strategy to use for failed jobs, if the target is\
          \ an Batch job. The retry strategy is the number of times to retry the failed\
          \ job execution. Valid values are 1–10. When you specify a retry strategy\
          \ here, it overrides the retry strategy defined in the job definition."
      title: BatchParameters_RetryStrategy
    ConnectionOAuthResponseParameters_ClientParameters:
      allOf:
      - $ref: '#/components/schemas/ConnectionOAuthClientResponseParameters'
      - description: A <code>ConnectionOAuthClientResponseParameters</code> object
          that contains details about the client parameters returned when OAuth is
          specified as the authorization type.
      example:
        ClientID: ""
      title: ConnectionOAuthResponseParameters_ClientParameters
    ConnectionOAuthResponseParameters_OAuthHttpParameters:
      allOf:
      - $ref: '#/components/schemas/ConnectionHttpParameters'
      - description: The additional HTTP parameters used for the OAuth authorization
          request.
      example:
        HeaderParameters: ""
        QueryStringParameters: ""
        BodyParameters: ""
      title: ConnectionOAuthResponseParameters_OAuthHttpParameters
    ConnectionAuthResponseParameters_BasicAuthParameters:
      allOf:
      - $ref: '#/components/schemas/ConnectionBasicAuthResponseParameters'
      - description: The authorization parameters for Basic authorization.
      example:
        Username: ""
      title: ConnectionAuthResponseParameters_BasicAuthParameters
    ConnectionAuthResponseParameters_OAuthParameters:
      allOf:
      - $ref: '#/components/schemas/ConnectionOAuthResponseParameters'
      - description: The OAuth parameters to use for authorization.
      example:
        ClientParameters:
          ClientID: ""
        OAuthHttpParameters:
          HeaderParameters: ""
          QueryStringParameters: ""
          BodyParameters: ""
        AuthorizationEndpoint: ""
        HttpMethod: ""
      title: ConnectionAuthResponseParameters_OAuthParameters
    ConnectionAuthResponseParameters_ApiKeyAuthParameters:
      allOf:
      - $ref: '#/components/schemas/ConnectionApiKeyAuthResponseParameters'
      - description: The API Key parameters to use for authorization.
      example:
        ApiKeyName: ""
      title: ConnectionAuthResponseParameters_ApiKeyAuthParameters
    ConnectionAuthResponseParameters_InvocationHttpParameters:
      allOf:
      - $ref: '#/components/schemas/ConnectionHttpParameters'
      - description: Additional parameters for the connection that are passed through
          with every invocation to the HTTP endpoint.
      example:
        HeaderParameters: ""
        QueryStringParameters: ""
        BodyParameters: ""
      title: ConnectionAuthResponseParameters_InvocationHttpParameters
    CreateConnectionOAuthRequestParameters_ClientParameters:
      allOf:
      - $ref: '#/components/schemas/CreateConnectionOAuthClientRequestParameters'
      - description: A <code>CreateConnectionOAuthClientRequestParameters</code> object
          that contains the client parameters for OAuth authorization.
      example:
        ClientSecret: ""
        ClientID: ""
      title: CreateConnectionOAuthRequestParameters_ClientParameters
    CreateConnectionOAuthRequestParameters_OAuthHttpParameters:
      allOf:
      - $ref: '#/components/schemas/ConnectionHttpParameters'
      - description: A <code>ConnectionHttpParameters</code> object that contains
          details about the additional parameters to use for the connection.
      example:
        HeaderParameters: ""
        QueryStringParameters: ""
        BodyParameters: ""
      title: CreateConnectionOAuthRequestParameters_OAuthHttpParameters
    CreateConnectionAuthRequestParameters_BasicAuthParameters:
      allOf:
      - $ref: '#/components/schemas/CreateConnectionBasicAuthRequestParameters'
      - description: A <code>CreateConnectionBasicAuthRequestParameters</code> object
          that contains the Basic authorization parameters to use for the connection.
      example:
        Username: ""
        Password: ""
      title: CreateConnectionAuthRequestParameters_BasicAuthParameters
    CreateConnectionAuthRequestParameters_OAuthParameters:
      allOf:
      - $ref: '#/components/schemas/CreateConnectionOAuthRequestParameters'
      - description: A <code>CreateConnectionOAuthRequestParameters</code> object
          that contains the OAuth authorization parameters to use for the connection.
      example:
        ClientParameters:
          ClientSecret: ""
          ClientID: ""
        OAuthHttpParameters:
          HeaderParameters: ""
          QueryStringParameters: ""
          BodyParameters: ""
        AuthorizationEndpoint: ""
        HttpMethod: ""
      title: CreateConnectionAuthRequestParameters_OAuthParameters
    CreateConnectionAuthRequestParameters_ApiKeyAuthParameters:
      allOf:
      - $ref: '#/components/schemas/CreateConnectionApiKeyAuthRequestParameters'
      - description: A <code>CreateConnectionApiKeyAuthRequestParameters</code> object
          that contains the API key authorization parameters to use for the connection.
      example:
        ApiKeyValue: ""
        ApiKeyName: ""
      title: CreateConnectionAuthRequestParameters_ApiKeyAuthParameters
    CreateConnectionAuthRequestParameters_InvocationHttpParameters:
      allOf:
      - $ref: '#/components/schemas/ConnectionHttpParameters'
      - description: "A <code>ConnectionHttpParameters</code> object that contains\
          \ the API key authorization parameters to use for the connection. Note that\
          \ if you include additional parameters for the target of a rule via <code>HttpParameters</code>,\
          \ including query strings, the parameters added for the connection take\
          \ precedence."
      example:
        HeaderParameters: ""
        QueryStringParameters: ""
        BodyParameters: ""
      title: CreateConnectionAuthRequestParameters_InvocationHttpParameters
    RoutingConfig_FailoverConfig:
      allOf:
      - $ref: '#/components/schemas/FailoverConfig'
      - description: The failover configuration for an endpoint. This includes what
          triggers failover and what happens when it's triggered.
      example:
        Secondary:
          Route: ""
        Primary:
          HealthCheck: ""
      title: RoutingConfig_FailoverConfig
    NetworkConfiguration_awsvpcConfiguration:
      allOf:
      - $ref: '#/components/schemas/AwsVpcConfiguration'
      - description: "Use this structure to specify the VPC subnets and security groups\
          \ for the task, and whether a public IP address is to be used. This structure\
          \ is relevant only for ECS tasks that use the <code>awsvpc</code> network\
          \ mode."
      title: NetworkConfiguration_awsvpcConfiguration
    EcsParameters_NetworkConfiguration:
      allOf:
      - $ref: '#/components/schemas/NetworkConfiguration'
      - description: "<p>Use this structure if the Amazon ECS task uses the <code>awsvpc</code>\
          \ network mode. This structure specifies the VPC subnets and security groups\
          \ associated with the task, and whether a public IP address is to be used.\
          \ This structure is required if <code>LaunchType</code> is <code>FARGATE</code>\
          \ because the <code>awsvpc</code> mode is required for Fargate tasks.</p>\
          \ <p>If you specify <code>NetworkConfiguration</code> when the target ECS\
          \ task does not use the <code>awsvpc</code> network mode, the task fails.</p>"
      title: EcsParameters_NetworkConfiguration
    Endpoint_RoutingConfig:
      allOf:
      - $ref: '#/components/schemas/RoutingConfig'
      - description: The routing configuration of the endpoint.
      title: Endpoint_RoutingConfig
    Endpoint_ReplicationConfig:
      allOf:
      - $ref: '#/components/schemas/ReplicationConfig'
      - description: "Whether event replication was enabled or disabled for this endpoint.\
          \ The default state is <code>ENABLED</code> which means you must supply\
          \ a <code>RoleArn</code>. If you don't have a <code>RoleArn</code> or you\
          \ don't want event replication enabled, set the state to <code>DISABLED</code>."
      title: Endpoint_ReplicationConfig
    FailoverConfig_Primary:
      allOf:
      - $ref: '#/components/schemas/Primary'
      - description: The main Region of the endpoint.
      example:
        HealthCheck: ""
      title: FailoverConfig_Primary
    FailoverConfig_Secondary:
      allOf:
      - $ref: '#/components/schemas/Secondary'
      - description: The Region that events are routed to when failover is triggered
          or event replication is enabled.
      example:
        Route: ""
      title: FailoverConfig_Secondary
    Target_InputTransformer:
      allOf:
      - $ref: '#/components/schemas/InputTransformer'
      - description: Settings to enable you to provide custom input to a target based
          on certain event data. You can extract one or more key-value pairs from
          the event and then use that data to send customized input to the target.
      title: Target_InputTransformer
    Target_KinesisParameters:
      allOf:
      - $ref: '#/components/schemas/KinesisParameters'
      - description: "The custom parameter you can use to control the shard assignment,\
          \ when the target is a Kinesis data stream. If you do not include this parameter,\
          \ the default is to use the <code>eventId</code> as the partition key."
      title: Target_KinesisParameters
    Target_RunCommandParameters:
      allOf:
      - $ref: '#/components/schemas/RunCommandParameters'
      - description: Parameters used when you are using the rule to invoke Amazon
          EC2 Run Command.
      title: Target_RunCommandParameters
    Target_EcsParameters:
      allOf:
      - $ref: '#/components/schemas/EcsParameters'
      - description: "Contains the Amazon ECS task definition and task count to be\
          \ used, if the event target is an Amazon ECS task. For more information\
          \ about Amazon ECS tasks, see <a href=\"https://docs.aws.amazon.com/AmazonECS/latest/developerguide/task_defintions.html\"\
          >Task Definitions </a> in the <i>Amazon EC2 Container Service Developer\
          \ Guide</i>."
      title: Target_EcsParameters
    Target_BatchParameters:
      allOf:
      - $ref: '#/components/schemas/BatchParameters'
      - description: "If the event target is an Batch job, this contains the job definition,\
          \ job name, and other parameters. For more information, see <a href=\"https://docs.aws.amazon.com/batch/latest/userguide/jobs.html\"\
          >Jobs</a> in the <i>Batch User Guide</i>."
      title: Target_BatchParameters
    Target_SqsParameters:
      allOf:
      - $ref: '#/components/schemas/SqsParameters'
      - description: "<p>Contains the message group ID to use when the target is a\
          \ FIFO queue.</p> <p>If you specify an SQS FIFO queue as a target, the queue\
          \ must have content-based deduplication enabled.</p>"
      title: Target_SqsParameters
    Target_HttpParameters:
      allOf:
      - $ref: '#/components/schemas/HttpParameters'
      - description: "<p>Contains the HTTP parameters to use when the target is a\
          \ API Gateway endpoint or EventBridge ApiDestination.</p> <p>If you specify\
          \ an API Gateway API or EventBridge ApiDestination as a target, you can\
          \ use this parameter to specify headers, path parameters, and query string\
          \ keys/values as part of your target invoking request. If you're using ApiDestinations,\
          \ the corresponding Connection can also have these values configured. In\
          \ case of any conflicting keys, values from the Connection take precedence.</p>"
      title: Target_HttpParameters
    Target_RedshiftDataParameters:
      allOf:
      - $ref: '#/components/schemas/RedshiftDataParameters'
      - description: "<p>Contains the Amazon Redshift Data API parameters to use when\
          \ the target is a Amazon Redshift cluster.</p> <p>If you specify a Amazon\
          \ Redshift Cluster as a Target, you can use this to specify parameters to\
          \ invoke the Amazon Redshift Data API ExecuteStatement based on EventBridge\
          \ events.</p>"
      title: Target_RedshiftDataParameters
    Target_SageMakerPipelineParameters:
      allOf:
      - $ref: '#/components/schemas/SageMakerPipelineParameters'
      - description: "<p>Contains the SageMaker Model Building Pipeline parameters\
          \ to start execution of a SageMaker Model Building Pipeline.</p> <p>If you\
          \ specify a SageMaker Model Building Pipeline as a target, you can use this\
          \ to specify parameters to start a pipeline execution based on EventBridge\
          \ events.</p>"
      title: Target_SageMakerPipelineParameters
    Target_DeadLetterConfig:
      allOf:
      - $ref: '#/components/schemas/DeadLetterConfig'
      - description: The <code>DeadLetterConfig</code> that defines the target queue
          to send dead-letter queue events to.
      title: Target_DeadLetterConfig
    Target_RetryPolicy:
      allOf:
      - $ref: '#/components/schemas/RetryPolicy'
      - description: The <code>RetryPolicy</code> object that contains the retry policy
          configuration to use for the dead-letter queue.
      title: Target_RetryPolicy
    UpdateConnectionOAuthRequestParameters_ClientParameters:
      allOf:
      - $ref: '#/components/schemas/UpdateConnectionOAuthClientRequestParameters'
      - description: A <code>UpdateConnectionOAuthClientRequestParameters</code> object
          that contains the client parameters to use for the connection when OAuth
          is specified as the authorization type.
      example:
        ClientSecret: ""
        ClientID: ""
      title: UpdateConnectionOAuthRequestParameters_ClientParameters
    UpdateConnectionAuthRequestParameters_BasicAuthParameters:
      allOf:
      - $ref: '#/components/schemas/UpdateConnectionBasicAuthRequestParameters'
      - description: A <code>UpdateConnectionBasicAuthRequestParameters</code> object
          that contains the authorization parameters for Basic authorization.
      example:
        Username: ""
        Password: ""
      title: UpdateConnectionAuthRequestParameters_BasicAuthParameters
    UpdateConnectionAuthRequestParameters_OAuthParameters:
      allOf:
      - $ref: '#/components/schemas/UpdateConnectionOAuthRequestParameters'
      - description: A <code>UpdateConnectionOAuthRequestParameters</code> object
          that contains the authorization parameters for OAuth authorization.
      example:
        ClientParameters:
          ClientSecret: ""
          ClientID: ""
        OAuthHttpParameters:
          HeaderParameters: ""
          QueryStringParameters: ""
          BodyParameters: ""
        AuthorizationEndpoint: ""
        HttpMethod: ""
      title: UpdateConnectionAuthRequestParameters_OAuthParameters
    UpdateConnectionAuthRequestParameters_ApiKeyAuthParameters:
      allOf:
      - $ref: '#/components/schemas/UpdateConnectionApiKeyAuthRequestParameters'
      - description: A <code>UpdateConnectionApiKeyAuthRequestParameters</code> object
          that contains the authorization parameters for API key authorization.
      example:
        ApiKeyValue: ""
        ApiKeyName: ""
      title: UpdateConnectionAuthRequestParameters_ApiKeyAuthParameters
    UpdateConnectionAuthRequestParameters_InvocationHttpParameters:
      allOf:
      - $ref: '#/components/schemas/ConnectionHttpParameters'
      - description: A <code>ConnectionHttpParameters</code> object that contains
          the additional parameters to use for the connection.
      example:
        HeaderParameters: ""
        QueryStringParameters: ""
        BodyParameters: ""
      title: UpdateConnectionAuthRequestParameters_InvocationHttpParameters
  securitySchemes:
    hmac:
      description: Amazon Signature authorization v4
      in: header
      name: Authorization
      type: apiKey
      x-amazon-apigateway-authtype: awsSigv4
      x-apikeyInfoFunc: openapi_server.controllers.security_controller.info_from_hmac
x-hasEquivalentPaths: true
