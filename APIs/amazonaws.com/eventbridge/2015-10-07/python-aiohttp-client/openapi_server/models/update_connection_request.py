# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.connection_authorization_type import ConnectionAuthorizationType
from openapi_server.models.update_connection_request_auth_parameters import UpdateConnectionRequestAuthParameters
from openapi_server import util


class UpdateConnectionRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, name: str=None, description: str=None, authorization_type: ConnectionAuthorizationType=None, auth_parameters: UpdateConnectionRequestAuthParameters=None):
        """UpdateConnectionRequest - a model defined in OpenAPI

        :param name: The name of this UpdateConnectionRequest.
        :param description: The description of this UpdateConnectionRequest.
        :param authorization_type: The authorization_type of this UpdateConnectionRequest.
        :param auth_parameters: The auth_parameters of this UpdateConnectionRequest.
        """
        self.openapi_types = {
            'name': str,
            'description': str,
            'authorization_type': ConnectionAuthorizationType,
            'auth_parameters': UpdateConnectionRequestAuthParameters
        }

        self.attribute_map = {
            'name': 'Name',
            'description': 'Description',
            'authorization_type': 'AuthorizationType',
            'auth_parameters': 'AuthParameters'
        }

        self._name = name
        self._description = description
        self._authorization_type = authorization_type
        self._auth_parameters = auth_parameters

    @classmethod
    def from_dict(cls, dikt: dict) -> 'UpdateConnectionRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The UpdateConnectionRequest of this UpdateConnectionRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def name(self):
        """Gets the name of this UpdateConnectionRequest.


        :return: The name of this UpdateConnectionRequest.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this UpdateConnectionRequest.


        :param name: The name of this UpdateConnectionRequest.
        :type name: str
        """
        if name is None:
            raise ValueError("Invalid value for `name`, must not be `None`")

        self._name = name

    @property
    def description(self):
        """Gets the description of this UpdateConnectionRequest.


        :return: The description of this UpdateConnectionRequest.
        :rtype: str
        """
        return self._description

    @description.setter
    def description(self, description):
        """Sets the description of this UpdateConnectionRequest.


        :param description: The description of this UpdateConnectionRequest.
        :type description: str
        """

        self._description = description

    @property
    def authorization_type(self):
        """Gets the authorization_type of this UpdateConnectionRequest.


        :return: The authorization_type of this UpdateConnectionRequest.
        :rtype: ConnectionAuthorizationType
        """
        return self._authorization_type

    @authorization_type.setter
    def authorization_type(self, authorization_type):
        """Sets the authorization_type of this UpdateConnectionRequest.


        :param authorization_type: The authorization_type of this UpdateConnectionRequest.
        :type authorization_type: ConnectionAuthorizationType
        """

        self._authorization_type = authorization_type

    @property
    def auth_parameters(self):
        """Gets the auth_parameters of this UpdateConnectionRequest.


        :return: The auth_parameters of this UpdateConnectionRequest.
        :rtype: UpdateConnectionRequestAuthParameters
        """
        return self._auth_parameters

    @auth_parameters.setter
    def auth_parameters(self, auth_parameters):
        """Sets the auth_parameters of this UpdateConnectionRequest.


        :param auth_parameters: The auth_parameters of this UpdateConnectionRequest.
        :type auth_parameters: UpdateConnectionRequestAuthParameters
        """

        self._auth_parameters = auth_parameters
