# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class DescribeReplayRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, replay_name: str=None):
        """DescribeReplayRequest - a model defined in OpenAPI

        :param replay_name: The replay_name of this DescribeReplayRequest.
        """
        self.openapi_types = {
            'replay_name': str
        }

        self.attribute_map = {
            'replay_name': 'ReplayName'
        }

        self._replay_name = replay_name

    @classmethod
    def from_dict(cls, dikt: dict) -> 'DescribeReplayRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The DescribeReplayRequest of this DescribeReplayRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def replay_name(self):
        """Gets the replay_name of this DescribeReplayRequest.


        :return: The replay_name of this DescribeReplayRequest.
        :rtype: str
        """
        return self._replay_name

    @replay_name.setter
    def replay_name(self, replay_name):
        """Sets the replay_name of this DescribeReplayRequest.


        :param replay_name: The replay_name of this DescribeReplayRequest.
        :type replay_name: str
        """
        if replay_name is None:
            raise ValueError("Invalid value for `replay_name`, must not be `None`")

        self._replay_name = replay_name
