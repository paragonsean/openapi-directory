# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.rule_state import RuleState
from openapi_server import util


class PutRuleRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, name: str=None, schedule_expression: str=None, event_pattern: str=None, state: RuleState=None, description: str=None, role_arn: str=None, tags: List=None, event_bus_name: str=None):
        """PutRuleRequest - a model defined in OpenAPI

        :param name: The name of this PutRuleRequest.
        :param schedule_expression: The schedule_expression of this PutRuleRequest.
        :param event_pattern: The event_pattern of this PutRuleRequest.
        :param state: The state of this PutRuleRequest.
        :param description: The description of this PutRuleRequest.
        :param role_arn: The role_arn of this PutRuleRequest.
        :param tags: The tags of this PutRuleRequest.
        :param event_bus_name: The event_bus_name of this PutRuleRequest.
        """
        self.openapi_types = {
            'name': str,
            'schedule_expression': str,
            'event_pattern': str,
            'state': RuleState,
            'description': str,
            'role_arn': str,
            'tags': List,
            'event_bus_name': str
        }

        self.attribute_map = {
            'name': 'Name',
            'schedule_expression': 'ScheduleExpression',
            'event_pattern': 'EventPattern',
            'state': 'State',
            'description': 'Description',
            'role_arn': 'RoleArn',
            'tags': 'Tags',
            'event_bus_name': 'EventBusName'
        }

        self._name = name
        self._schedule_expression = schedule_expression
        self._event_pattern = event_pattern
        self._state = state
        self._description = description
        self._role_arn = role_arn
        self._tags = tags
        self._event_bus_name = event_bus_name

    @classmethod
    def from_dict(cls, dikt: dict) -> 'PutRuleRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The PutRuleRequest of this PutRuleRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def name(self):
        """Gets the name of this PutRuleRequest.


        :return: The name of this PutRuleRequest.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this PutRuleRequest.


        :param name: The name of this PutRuleRequest.
        :type name: str
        """
        if name is None:
            raise ValueError("Invalid value for `name`, must not be `None`")

        self._name = name

    @property
    def schedule_expression(self):
        """Gets the schedule_expression of this PutRuleRequest.


        :return: The schedule_expression of this PutRuleRequest.
        :rtype: str
        """
        return self._schedule_expression

    @schedule_expression.setter
    def schedule_expression(self, schedule_expression):
        """Sets the schedule_expression of this PutRuleRequest.


        :param schedule_expression: The schedule_expression of this PutRuleRequest.
        :type schedule_expression: str
        """

        self._schedule_expression = schedule_expression

    @property
    def event_pattern(self):
        """Gets the event_pattern of this PutRuleRequest.


        :return: The event_pattern of this PutRuleRequest.
        :rtype: str
        """
        return self._event_pattern

    @event_pattern.setter
    def event_pattern(self, event_pattern):
        """Sets the event_pattern of this PutRuleRequest.


        :param event_pattern: The event_pattern of this PutRuleRequest.
        :type event_pattern: str
        """

        self._event_pattern = event_pattern

    @property
    def state(self):
        """Gets the state of this PutRuleRequest.


        :return: The state of this PutRuleRequest.
        :rtype: RuleState
        """
        return self._state

    @state.setter
    def state(self, state):
        """Sets the state of this PutRuleRequest.


        :param state: The state of this PutRuleRequest.
        :type state: RuleState
        """

        self._state = state

    @property
    def description(self):
        """Gets the description of this PutRuleRequest.


        :return: The description of this PutRuleRequest.
        :rtype: str
        """
        return self._description

    @description.setter
    def description(self, description):
        """Sets the description of this PutRuleRequest.


        :param description: The description of this PutRuleRequest.
        :type description: str
        """

        self._description = description

    @property
    def role_arn(self):
        """Gets the role_arn of this PutRuleRequest.


        :return: The role_arn of this PutRuleRequest.
        :rtype: str
        """
        return self._role_arn

    @role_arn.setter
    def role_arn(self, role_arn):
        """Sets the role_arn of this PutRuleRequest.


        :param role_arn: The role_arn of this PutRuleRequest.
        :type role_arn: str
        """

        self._role_arn = role_arn

    @property
    def tags(self):
        """Gets the tags of this PutRuleRequest.


        :return: The tags of this PutRuleRequest.
        :rtype: List
        """
        return self._tags

    @tags.setter
    def tags(self, tags):
        """Sets the tags of this PutRuleRequest.


        :param tags: The tags of this PutRuleRequest.
        :type tags: List
        """

        self._tags = tags

    @property
    def event_bus_name(self):
        """Gets the event_bus_name of this PutRuleRequest.


        :return: The event_bus_name of this PutRuleRequest.
        :rtype: str
        """
        return self._event_bus_name

    @event_bus_name.setter
    def event_bus_name(self, event_bus_name):
        """Sets the event_bus_name of this PutRuleRequest.


        :param event_bus_name: The event_bus_name of this PutRuleRequest.
        :type event_bus_name: str
        """

        self._event_bus_name = event_bus_name
