# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.event_source_state import EventSourceState
from openapi_server import util


class EventSource(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, arn: str=None, created_by: str=None, creation_time: datetime=None, expiration_time: datetime=None, name: str=None, state: EventSourceState=None):
        """EventSource - a model defined in OpenAPI

        :param arn: The arn of this EventSource.
        :param created_by: The created_by of this EventSource.
        :param creation_time: The creation_time of this EventSource.
        :param expiration_time: The expiration_time of this EventSource.
        :param name: The name of this EventSource.
        :param state: The state of this EventSource.
        """
        self.openapi_types = {
            'arn': str,
            'created_by': str,
            'creation_time': datetime,
            'expiration_time': datetime,
            'name': str,
            'state': EventSourceState
        }

        self.attribute_map = {
            'arn': 'Arn',
            'created_by': 'CreatedBy',
            'creation_time': 'CreationTime',
            'expiration_time': 'ExpirationTime',
            'name': 'Name',
            'state': 'State'
        }

        self._arn = arn
        self._created_by = created_by
        self._creation_time = creation_time
        self._expiration_time = expiration_time
        self._name = name
        self._state = state

    @classmethod
    def from_dict(cls, dikt: dict) -> 'EventSource':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The EventSource of this EventSource.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def arn(self):
        """Gets the arn of this EventSource.


        :return: The arn of this EventSource.
        :rtype: str
        """
        return self._arn

    @arn.setter
    def arn(self, arn):
        """Sets the arn of this EventSource.


        :param arn: The arn of this EventSource.
        :type arn: str
        """

        self._arn = arn

    @property
    def created_by(self):
        """Gets the created_by of this EventSource.


        :return: The created_by of this EventSource.
        :rtype: str
        """
        return self._created_by

    @created_by.setter
    def created_by(self, created_by):
        """Sets the created_by of this EventSource.


        :param created_by: The created_by of this EventSource.
        :type created_by: str
        """

        self._created_by = created_by

    @property
    def creation_time(self):
        """Gets the creation_time of this EventSource.


        :return: The creation_time of this EventSource.
        :rtype: datetime
        """
        return self._creation_time

    @creation_time.setter
    def creation_time(self, creation_time):
        """Sets the creation_time of this EventSource.


        :param creation_time: The creation_time of this EventSource.
        :type creation_time: datetime
        """

        self._creation_time = creation_time

    @property
    def expiration_time(self):
        """Gets the expiration_time of this EventSource.


        :return: The expiration_time of this EventSource.
        :rtype: datetime
        """
        return self._expiration_time

    @expiration_time.setter
    def expiration_time(self, expiration_time):
        """Sets the expiration_time of this EventSource.


        :param expiration_time: The expiration_time of this EventSource.
        :type expiration_time: datetime
        """

        self._expiration_time = expiration_time

    @property
    def name(self):
        """Gets the name of this EventSource.


        :return: The name of this EventSource.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this EventSource.


        :param name: The name of this EventSource.
        :type name: str
        """

        self._name = name

    @property
    def state(self):
        """Gets the state of this EventSource.


        :return: The state of this EventSource.
        :rtype: EventSourceState
        """
        return self._state

    @state.setter
    def state(self, state):
        """Sets the state of this EventSource.


        :param state: The state of this EventSource.
        :type state: EventSourceState
        """

        self._state = state
