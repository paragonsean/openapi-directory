# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class CreateEventBusRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, name: str=None, event_source_name: str=None, tags: List=None):
        """CreateEventBusRequest - a model defined in OpenAPI

        :param name: The name of this CreateEventBusRequest.
        :param event_source_name: The event_source_name of this CreateEventBusRequest.
        :param tags: The tags of this CreateEventBusRequest.
        """
        self.openapi_types = {
            'name': str,
            'event_source_name': str,
            'tags': List
        }

        self.attribute_map = {
            'name': 'Name',
            'event_source_name': 'EventSourceName',
            'tags': 'Tags'
        }

        self._name = name
        self._event_source_name = event_source_name
        self._tags = tags

    @classmethod
    def from_dict(cls, dikt: dict) -> 'CreateEventBusRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The CreateEventBusRequest of this CreateEventBusRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def name(self):
        """Gets the name of this CreateEventBusRequest.


        :return: The name of this CreateEventBusRequest.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this CreateEventBusRequest.


        :param name: The name of this CreateEventBusRequest.
        :type name: str
        """
        if name is None:
            raise ValueError("Invalid value for `name`, must not be `None`")

        self._name = name

    @property
    def event_source_name(self):
        """Gets the event_source_name of this CreateEventBusRequest.


        :return: The event_source_name of this CreateEventBusRequest.
        :rtype: str
        """
        return self._event_source_name

    @event_source_name.setter
    def event_source_name(self, event_source_name):
        """Sets the event_source_name of this CreateEventBusRequest.


        :param event_source_name: The event_source_name of this CreateEventBusRequest.
        :type event_source_name: str
        """

        self._event_source_name = event_source_name

    @property
    def tags(self):
        """Gets the tags of this CreateEventBusRequest.


        :return: The tags of this CreateEventBusRequest.
        :rtype: List
        """
        return self._tags

    @tags.setter
    def tags(self, tags):
        """Sets the tags of this CreateEventBusRequest.


        :param tags: The tags of this CreateEventBusRequest.
        :type tags: List
        """

        self._tags = tags
