# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class DeleteArchiveRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, archive_name: str=None):
        """DeleteArchiveRequest - a model defined in OpenAPI

        :param archive_name: The archive_name of this DeleteArchiveRequest.
        """
        self.openapi_types = {
            'archive_name': str
        }

        self.attribute_map = {
            'archive_name': 'ArchiveName'
        }

        self._archive_name = archive_name

    @classmethod
    def from_dict(cls, dikt: dict) -> 'DeleteArchiveRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The DeleteArchiveRequest of this DeleteArchiveRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def archive_name(self):
        """Gets the archive_name of this DeleteArchiveRequest.


        :return: The archive_name of this DeleteArchiveRequest.
        :rtype: str
        """
        return self._archive_name

    @archive_name.setter
    def archive_name(self, archive_name):
        """Sets the archive_name of this DeleteArchiveRequest.


        :param archive_name: The archive_name of this DeleteArchiveRequest.
        :type archive_name: str
        """
        if archive_name is None:
            raise ValueError("Invalid value for `archive_name`, must not be `None`")

        self._archive_name = archive_name
