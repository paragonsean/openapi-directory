# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class RemovePermissionRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, statement_id: str=None, remove_all_permissions: bool=None, event_bus_name: str=None):
        """RemovePermissionRequest - a model defined in OpenAPI

        :param statement_id: The statement_id of this RemovePermissionRequest.
        :param remove_all_permissions: The remove_all_permissions of this RemovePermissionRequest.
        :param event_bus_name: The event_bus_name of this RemovePermissionRequest.
        """
        self.openapi_types = {
            'statement_id': str,
            'remove_all_permissions': bool,
            'event_bus_name': str
        }

        self.attribute_map = {
            'statement_id': 'StatementId',
            'remove_all_permissions': 'RemoveAllPermissions',
            'event_bus_name': 'EventBusName'
        }

        self._statement_id = statement_id
        self._remove_all_permissions = remove_all_permissions
        self._event_bus_name = event_bus_name

    @classmethod
    def from_dict(cls, dikt: dict) -> 'RemovePermissionRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The RemovePermissionRequest of this RemovePermissionRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def statement_id(self):
        """Gets the statement_id of this RemovePermissionRequest.


        :return: The statement_id of this RemovePermissionRequest.
        :rtype: str
        """
        return self._statement_id

    @statement_id.setter
    def statement_id(self, statement_id):
        """Sets the statement_id of this RemovePermissionRequest.


        :param statement_id: The statement_id of this RemovePermissionRequest.
        :type statement_id: str
        """

        self._statement_id = statement_id

    @property
    def remove_all_permissions(self):
        """Gets the remove_all_permissions of this RemovePermissionRequest.


        :return: The remove_all_permissions of this RemovePermissionRequest.
        :rtype: bool
        """
        return self._remove_all_permissions

    @remove_all_permissions.setter
    def remove_all_permissions(self, remove_all_permissions):
        """Sets the remove_all_permissions of this RemovePermissionRequest.


        :param remove_all_permissions: The remove_all_permissions of this RemovePermissionRequest.
        :type remove_all_permissions: bool
        """

        self._remove_all_permissions = remove_all_permissions

    @property
    def event_bus_name(self):
        """Gets the event_bus_name of this RemovePermissionRequest.


        :return: The event_bus_name of this RemovePermissionRequest.
        :rtype: str
        """
        return self._event_bus_name

    @event_bus_name.setter
    def event_bus_name(self, event_bus_name):
        """Sets the event_bus_name of this RemovePermissionRequest.


        :param event_bus_name: The event_bus_name of this RemovePermissionRequest.
        :type event_bus_name: str
        """

        self._event_bus_name = event_bus_name
