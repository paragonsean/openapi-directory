# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.replay_state import ReplayState
from openapi_server import util


class StartReplayResponse(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, replay_arn: str=None, state: ReplayState=None, state_reason: str=None, replay_start_time: datetime=None):
        """StartReplayResponse - a model defined in OpenAPI

        :param replay_arn: The replay_arn of this StartReplayResponse.
        :param state: The state of this StartReplayResponse.
        :param state_reason: The state_reason of this StartReplayResponse.
        :param replay_start_time: The replay_start_time of this StartReplayResponse.
        """
        self.openapi_types = {
            'replay_arn': str,
            'state': ReplayState,
            'state_reason': str,
            'replay_start_time': datetime
        }

        self.attribute_map = {
            'replay_arn': 'ReplayArn',
            'state': 'State',
            'state_reason': 'StateReason',
            'replay_start_time': 'ReplayStartTime'
        }

        self._replay_arn = replay_arn
        self._state = state
        self._state_reason = state_reason
        self._replay_start_time = replay_start_time

    @classmethod
    def from_dict(cls, dikt: dict) -> 'StartReplayResponse':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The StartReplayResponse of this StartReplayResponse.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def replay_arn(self):
        """Gets the replay_arn of this StartReplayResponse.


        :return: The replay_arn of this StartReplayResponse.
        :rtype: str
        """
        return self._replay_arn

    @replay_arn.setter
    def replay_arn(self, replay_arn):
        """Sets the replay_arn of this StartReplayResponse.


        :param replay_arn: The replay_arn of this StartReplayResponse.
        :type replay_arn: str
        """

        self._replay_arn = replay_arn

    @property
    def state(self):
        """Gets the state of this StartReplayResponse.


        :return: The state of this StartReplayResponse.
        :rtype: ReplayState
        """
        return self._state

    @state.setter
    def state(self, state):
        """Sets the state of this StartReplayResponse.


        :param state: The state of this StartReplayResponse.
        :type state: ReplayState
        """

        self._state = state

    @property
    def state_reason(self):
        """Gets the state_reason of this StartReplayResponse.


        :return: The state_reason of this StartReplayResponse.
        :rtype: str
        """
        return self._state_reason

    @state_reason.setter
    def state_reason(self, state_reason):
        """Sets the state_reason of this StartReplayResponse.


        :param state_reason: The state_reason of this StartReplayResponse.
        :type state_reason: str
        """

        self._state_reason = state_reason

    @property
    def replay_start_time(self):
        """Gets the replay_start_time of this StartReplayResponse.


        :return: The replay_start_time of this StartReplayResponse.
        :rtype: datetime
        """
        return self._replay_start_time

    @replay_start_time.setter
    def replay_start_time(self, replay_start_time):
        """Sets the replay_start_time of this StartReplayResponse.


        :param replay_start_time: The replay_start_time of this StartReplayResponse.
        :type replay_start_time: datetime
        """

        self._replay_start_time = replay_start_time
