openapi: 3.0.0
info:
  contact:
    email: mike.ralphson@gmail.com
    name: Mike Ralphson
    url: https://github.com/mermade/aws2openapi
    x-twitter: PermittedSoc
  description: "<p>Welcome to the AWS Device Farm API documentation, which contains\
    \ APIs for:</p> <ul> <li> <p>Testing on desktop browsers</p> <p> Device Farm makes\
    \ it possible for you to test your web applications on desktop browsers using\
    \ Selenium. The APIs for desktop browser testing contain <code>TestGrid</code>\
    \ in their names. For more information, see <a href=\"https://docs.aws.amazon.com/devicefarm/latest/testgrid/\"\
    >Testing Web Applications on Selenium with Device Farm</a>.</p> </li> <li> <p>Testing\
    \ on real mobile devices</p> <p>Device Farm makes it possible for you to test\
    \ apps on physical phones, tablets, and other devices in the cloud. For more information,\
    \ see the <a href=\"https://docs.aws.amazon.com/devicefarm/latest/developerguide/\"\
    >Device Farm Developer Guide</a>.</p> </li> </ul>"
  license:
    name: Apache 2.0 License
    url: http://www.apache.org/licenses/
  termsOfService: https://aws.amazon.com/service-terms/
  title: AWS Device Farm
  version: 2015-06-23
  x-release: v4
  x-logo:
    url: https://twitter.com/awscloud/profile_image?size=original
    backgroundColor: '#FFFFFF'
  x-providerName: amazonaws.com
  x-serviceName: devicefarm
  x-origin:
  - contentType: application/json
    url: https://raw.githubusercontent.com/aws/aws-sdk-js/master/apis/devicefarm-2015-06-23.normal.json
    converter:
      url: https://github.com/mermade/aws2openapi
      version: 1.0.0
    x-apisguru-driver: external
  x-apiClientRegistration:
    url: https://portal.aws.amazon.com/gp/aws/developer/registration/index.html?nc2=h_ct
  x-apisguru-categories:
  - cloud
  x-preferred: true
externalDocs:
  description: Amazon Web Services documentation
  url: https://docs.aws.amazon.com/devicefarm/
servers:
- description: The AWS Device Farm multi-region endpoint
  url: "http://devicefarm.{region}.amazonaws.com"
  variables:
    region:
      default: us-east-1
      description: The AWS region
      enum:
      - us-east-1
      - us-east-2
      - us-west-1
      - us-west-2
      - us-gov-west-1
      - us-gov-east-1
      - ca-central-1
      - eu-north-1
      - eu-west-1
      - eu-west-2
      - eu-west-3
      - eu-central-1
      - eu-south-1
      - af-south-1
      - ap-northeast-1
      - ap-northeast-2
      - ap-northeast-3
      - ap-southeast-1
      - ap-southeast-2
      - ap-east-1
      - ap-south-1
      - sa-east-1
      - me-south-1
- description: The AWS Device Farm multi-region endpoint
  url: "https://devicefarm.{region}.amazonaws.com"
  variables:
    region:
      default: us-east-1
      description: The AWS region
      enum:
      - us-east-1
      - us-east-2
      - us-west-1
      - us-west-2
      - us-gov-west-1
      - us-gov-east-1
      - ca-central-1
      - eu-north-1
      - eu-west-1
      - eu-west-2
      - eu-west-3
      - eu-central-1
      - eu-south-1
      - af-south-1
      - ap-northeast-1
      - ap-northeast-2
      - ap-northeast-3
      - ap-southeast-1
      - ap-southeast-2
      - ap-east-1
      - ap-south-1
      - sa-east-1
      - me-south-1
- description: The AWS Device Farm endpoint for China (Beijing) and China (Ningxia)
  url: "http://devicefarm.{region}.amazonaws.com.cn"
  variables:
    region:
      default: cn-north-1
      description: The AWS region
      enum:
      - cn-north-1
      - cn-northwest-1
- description: The AWS Device Farm endpoint for China (Beijing) and China (Ningxia)
  url: "https://devicefarm.{region}.amazonaws.com.cn"
  variables:
    region:
      default: cn-north-1
      description: The AWS region
      enum:
      - cn-north-1
      - cn-northwest-1
security:
- hmac: []
paths:
  /#X-Amz-Target=DeviceFarm_20150623.CreateDevicePool:
    post:
      description: Creates a device pool.
      operationId: CreateDevicePool
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - DeviceFarm_20150623.CreateDevicePool
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateDevicePoolRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateDevicePoolResult'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ArgumentException'
          description: ArgumentException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
          description: NotFoundException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
          description: LimitExceededException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceAccountException'
          description: ServiceAccountException
      x-content-type: application/json
      x-accepts:
      - application/json
  /#X-Amz-Target=DeviceFarm_20150623.CreateInstanceProfile:
    post:
      description: Creates a profile that can be applied to one or more private fleet
        device instances.
      operationId: CreateInstanceProfile
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - DeviceFarm_20150623.CreateInstanceProfile
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateInstanceProfileRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateInstanceProfileResult'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ArgumentException'
          description: ArgumentException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
          description: NotFoundException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
          description: LimitExceededException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceAccountException'
          description: ServiceAccountException
      x-content-type: application/json
      x-accepts:
      - application/json
  /#X-Amz-Target=DeviceFarm_20150623.CreateNetworkProfile:
    post:
      description: Creates a network profile.
      operationId: CreateNetworkProfile
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - DeviceFarm_20150623.CreateNetworkProfile
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateNetworkProfileRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateNetworkProfileResult'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ArgumentException'
          description: ArgumentException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
          description: NotFoundException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
          description: LimitExceededException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceAccountException'
          description: ServiceAccountException
      x-content-type: application/json
      x-accepts:
      - application/json
  /#X-Amz-Target=DeviceFarm_20150623.CreateProject:
    post:
      description: Creates a project.
      operationId: CreateProject
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - DeviceFarm_20150623.CreateProject
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateProjectRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateProjectResult'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ArgumentException'
          description: ArgumentException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
          description: NotFoundException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
          description: LimitExceededException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceAccountException'
          description: ServiceAccountException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TagOperationException'
          description: TagOperationException
      x-content-type: application/json
      x-accepts:
      - application/json
  /#X-Amz-Target=DeviceFarm_20150623.CreateRemoteAccessSession:
    post:
      description: Specifies and starts a remote access session.
      operationId: CreateRemoteAccessSession
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - DeviceFarm_20150623.CreateRemoteAccessSession
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateRemoteAccessSessionRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateRemoteAccessSessionResult'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ArgumentException'
          description: ArgumentException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
          description: NotFoundException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
          description: LimitExceededException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceAccountException'
          description: ServiceAccountException
      x-content-type: application/json
      x-accepts:
      - application/json
  /#X-Amz-Target=DeviceFarm_20150623.CreateTestGridProject:
    post:
      description: Creates a Selenium testing project. Projects are used to track
        <a>TestGridSession</a> instances.
      operationId: CreateTestGridProject
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - DeviceFarm_20150623.CreateTestGridProject
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateTestGridProjectRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateTestGridProjectResult'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ArgumentException'
          description: ArgumentException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
          description: LimitExceededException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceException'
          description: InternalServiceException
      x-content-type: application/json
      x-accepts:
      - application/json
  /#X-Amz-Target=DeviceFarm_20150623.CreateTestGridUrl:
    post:
      description: "Creates a signed, short-term URL that can be passed to a Selenium\
        \ <code>RemoteWebDriver</code> constructor."
      operationId: CreateTestGridUrl
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - DeviceFarm_20150623.CreateTestGridUrl
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateTestGridUrlRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateTestGridUrlResult'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
          description: NotFoundException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ArgumentException'
          description: ArgumentException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceException'
          description: InternalServiceException
      x-content-type: application/json
      x-accepts:
      - application/json
  /#X-Amz-Target=DeviceFarm_20150623.CreateUpload:
    post:
      description: Uploads an app or test scripts.
      operationId: CreateUpload
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - DeviceFarm_20150623.CreateUpload
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateUploadRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateUploadResult'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ArgumentException'
          description: ArgumentException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
          description: NotFoundException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
          description: LimitExceededException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceAccountException'
          description: ServiceAccountException
      x-content-type: application/json
      x-accepts:
      - application/json
  /#X-Amz-Target=DeviceFarm_20150623.CreateVPCEConfiguration:
    post:
      description: Creates a configuration record in Device Farm for your Amazon Virtual
        Private Cloud (VPC) endpoint.
      operationId: CreateVPCEConfiguration
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - DeviceFarm_20150623.CreateVPCEConfiguration
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateVPCEConfigurationRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateVPCEConfigurationResult'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ArgumentException'
          description: ArgumentException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
          description: LimitExceededException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceAccountException'
          description: ServiceAccountException
      x-content-type: application/json
      x-accepts:
      - application/json
  /#X-Amz-Target=DeviceFarm_20150623.DeleteDevicePool:
    post:
      description: Deletes a device pool given the pool ARN. Does not allow deletion
        of curated pools owned by the system.
      operationId: DeleteDevicePool
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - DeviceFarm_20150623.DeleteDevicePool
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeleteDevicePoolRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteDevicePoolResult'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ArgumentException'
          description: ArgumentException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
          description: NotFoundException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
          description: LimitExceededException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceAccountException'
          description: ServiceAccountException
      x-content-type: application/json
      x-accepts:
      - application/json
  /#X-Amz-Target=DeviceFarm_20150623.DeleteInstanceProfile:
    post:
      description: Deletes a profile that can be applied to one or more private device
        instances.
      operationId: DeleteInstanceProfile
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - DeviceFarm_20150623.DeleteInstanceProfile
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeleteInstanceProfileRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteInstanceProfileResult'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ArgumentException'
          description: ArgumentException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
          description: NotFoundException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
          description: LimitExceededException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceAccountException'
          description: ServiceAccountException
      x-content-type: application/json
      x-accepts:
      - application/json
  /#X-Amz-Target=DeviceFarm_20150623.DeleteNetworkProfile:
    post:
      description: Deletes a network profile.
      operationId: DeleteNetworkProfile
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - DeviceFarm_20150623.DeleteNetworkProfile
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeleteNetworkProfileRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteNetworkProfileResult'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ArgumentException'
          description: ArgumentException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
          description: NotFoundException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
          description: LimitExceededException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceAccountException'
          description: ServiceAccountException
      x-content-type: application/json
      x-accepts:
      - application/json
  /#X-Amz-Target=DeviceFarm_20150623.DeleteProject:
    post:
      description: "<p>Deletes an AWS Device Farm project, given the project ARN.</p>\
        \ <p> Deleting this resource does not stop an in-progress run.</p>"
      operationId: DeleteProject
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - DeviceFarm_20150623.DeleteProject
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeleteProjectRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteProjectResult'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ArgumentException'
          description: ArgumentException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
          description: NotFoundException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
          description: LimitExceededException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceAccountException'
          description: ServiceAccountException
      x-content-type: application/json
      x-accepts:
      - application/json
  /#X-Amz-Target=DeviceFarm_20150623.DeleteRemoteAccessSession:
    post:
      description: Deletes a completed remote access session and its results.
      operationId: DeleteRemoteAccessSession
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - DeviceFarm_20150623.DeleteRemoteAccessSession
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeleteRemoteAccessSessionRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteRemoteAccessSessionResult'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ArgumentException'
          description: ArgumentException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
          description: NotFoundException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
          description: LimitExceededException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceAccountException'
          description: ServiceAccountException
      x-content-type: application/json
      x-accepts:
      - application/json
  /#X-Amz-Target=DeviceFarm_20150623.DeleteRun:
    post:
      description: "<p>Deletes the run, given the run ARN.</p> <p> Deleting this resource\
        \ does not stop an in-progress run.</p>"
      operationId: DeleteRun
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - DeviceFarm_20150623.DeleteRun
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeleteRunRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteRunResult'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ArgumentException'
          description: ArgumentException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
          description: NotFoundException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
          description: LimitExceededException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceAccountException'
          description: ServiceAccountException
      x-content-type: application/json
      x-accepts:
      - application/json
  /#X-Amz-Target=DeviceFarm_20150623.DeleteTestGridProject:
    post:
      description: <p> Deletes a Selenium testing project and all content generated
        under it. </p> <important> <p>You cannot undo this operation.</p> </important>
        <note> <p>You cannot delete a project if it has active sessions.</p> </note>
      operationId: DeleteTestGridProject
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - DeviceFarm_20150623.DeleteTestGridProject
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeleteTestGridProjectRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteTestGridProjectResult'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
          description: NotFoundException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ArgumentException'
          description: ArgumentException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CannotDeleteException'
          description: CannotDeleteException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceException'
          description: InternalServiceException
      x-content-type: application/json
      x-accepts:
      - application/json
  /#X-Amz-Target=DeviceFarm_20150623.DeleteUpload:
    post:
      description: Deletes an upload given the upload ARN.
      operationId: DeleteUpload
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - DeviceFarm_20150623.DeleteUpload
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeleteUploadRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteUploadResult'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ArgumentException'
          description: ArgumentException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
          description: NotFoundException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
          description: LimitExceededException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceAccountException'
          description: ServiceAccountException
      x-content-type: application/json
      x-accepts:
      - application/json
  /#X-Amz-Target=DeviceFarm_20150623.DeleteVPCEConfiguration:
    post:
      description: Deletes a configuration for your Amazon Virtual Private Cloud (VPC)
        endpoint.
      operationId: DeleteVPCEConfiguration
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - DeviceFarm_20150623.DeleteVPCEConfiguration
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeleteVPCEConfigurationRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteVPCEConfigurationResult'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ArgumentException'
          description: ArgumentException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
          description: NotFoundException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceAccountException'
          description: ServiceAccountException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidOperationException'
          description: InvalidOperationException
      x-content-type: application/json
      x-accepts:
      - application/json
  /#X-Amz-Target=DeviceFarm_20150623.GetAccountSettings:
    post:
      description: Returns the number of unmetered iOS or unmetered Android devices
        that have been purchased by the account.
      operationId: GetAccountSettings
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - DeviceFarm_20150623.GetAccountSettings
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetAccountSettingsRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetAccountSettingsResult'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ArgumentException'
          description: ArgumentException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
          description: NotFoundException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
          description: LimitExceededException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceAccountException'
          description: ServiceAccountException
      x-content-type: application/json
      x-accepts:
      - application/json
  /#X-Amz-Target=DeviceFarm_20150623.GetDevice:
    post:
      description: Gets information about a unique device type.
      operationId: GetDevice
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - DeviceFarm_20150623.GetDevice
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetDeviceRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetDeviceResult'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ArgumentException'
          description: ArgumentException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
          description: NotFoundException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
          description: LimitExceededException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceAccountException'
          description: ServiceAccountException
      x-content-type: application/json
      x-accepts:
      - application/json
  /#X-Amz-Target=DeviceFarm_20150623.GetDeviceInstance:
    post:
      description: Returns information about a device instance that belongs to a private
        device fleet.
      operationId: GetDeviceInstance
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - DeviceFarm_20150623.GetDeviceInstance
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetDeviceInstanceRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetDeviceInstanceResult'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ArgumentException'
          description: ArgumentException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
          description: NotFoundException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
          description: LimitExceededException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceAccountException'
          description: ServiceAccountException
      x-content-type: application/json
      x-accepts:
      - application/json
  /#X-Amz-Target=DeviceFarm_20150623.GetDevicePool:
    post:
      description: Gets information about a device pool.
      operationId: GetDevicePool
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - DeviceFarm_20150623.GetDevicePool
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetDevicePoolRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetDevicePoolResult'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ArgumentException'
          description: ArgumentException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
          description: NotFoundException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
          description: LimitExceededException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceAccountException'
          description: ServiceAccountException
      x-content-type: application/json
      x-accepts:
      - application/json
  /#X-Amz-Target=DeviceFarm_20150623.GetDevicePoolCompatibility:
    post:
      description: Gets information about compatibility with a device pool.
      operationId: GetDevicePoolCompatibility
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - DeviceFarm_20150623.GetDevicePoolCompatibility
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetDevicePoolCompatibilityRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetDevicePoolCompatibilityResult'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ArgumentException'
          description: ArgumentException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
          description: NotFoundException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
          description: LimitExceededException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceAccountException'
          description: ServiceAccountException
      x-content-type: application/json
      x-accepts:
      - application/json
  /#X-Amz-Target=DeviceFarm_20150623.GetInstanceProfile:
    post:
      description: Returns information about the specified instance profile.
      operationId: GetInstanceProfile
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - DeviceFarm_20150623.GetInstanceProfile
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetInstanceProfileRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetInstanceProfileResult'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ArgumentException'
          description: ArgumentException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
          description: NotFoundException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
          description: LimitExceededException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceAccountException'
          description: ServiceAccountException
      x-content-type: application/json
      x-accepts:
      - application/json
  /#X-Amz-Target=DeviceFarm_20150623.GetJob:
    post:
      description: Gets information about a job.
      operationId: GetJob
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - DeviceFarm_20150623.GetJob
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetJobRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetJobResult'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ArgumentException'
          description: ArgumentException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
          description: NotFoundException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
          description: LimitExceededException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceAccountException'
          description: ServiceAccountException
      x-content-type: application/json
      x-accepts:
      - application/json
  /#X-Amz-Target=DeviceFarm_20150623.GetNetworkProfile:
    post:
      description: Returns information about a network profile.
      operationId: GetNetworkProfile
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - DeviceFarm_20150623.GetNetworkProfile
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetNetworkProfileRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetNetworkProfileResult'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ArgumentException'
          description: ArgumentException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
          description: NotFoundException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
          description: LimitExceededException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceAccountException'
          description: ServiceAccountException
      x-content-type: application/json
      x-accepts:
      - application/json
  /#X-Amz-Target=DeviceFarm_20150623.GetOfferingStatus:
    post:
      description: "Gets the current status and future status of all offerings purchased\
        \ by an AWS account. The response indicates how many offerings are currently\
        \ available and the offerings that will be available in the next period. The\
        \ API returns a <code>NotEligible</code> error if the user is not permitted\
        \ to invoke the operation. If you must be able to invoke this operation, contact\
        \ <a href=\"mailto:aws-devicefarm-support@amazon.com\">aws-devicefarm-support@amazon.com</a>."
      operationId: GetOfferingStatus
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: Pagination token
        explode: true
        in: query
        name: nextToken
        required: false
        schema:
          type: string
        style: form
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - DeviceFarm_20150623.GetOfferingStatus
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetOfferingStatusRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetOfferingStatusResult'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ArgumentException'
          description: ArgumentException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
          description: NotFoundException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotEligibleException'
          description: NotEligibleException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
          description: LimitExceededException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceAccountException'
          description: ServiceAccountException
      x-content-type: application/json
      x-accepts:
      - application/json
  /#X-Amz-Target=DeviceFarm_20150623.GetProject:
    post:
      description: Gets information about a project.
      operationId: GetProject
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - DeviceFarm_20150623.GetProject
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetProjectRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetProjectResult'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ArgumentException'
          description: ArgumentException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
          description: NotFoundException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
          description: LimitExceededException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceAccountException'
          description: ServiceAccountException
      x-content-type: application/json
      x-accepts:
      - application/json
  /#X-Amz-Target=DeviceFarm_20150623.GetRemoteAccessSession:
    post:
      description: Returns a link to a currently running remote access session.
      operationId: GetRemoteAccessSession
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - DeviceFarm_20150623.GetRemoteAccessSession
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetRemoteAccessSessionRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetRemoteAccessSessionResult'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ArgumentException'
          description: ArgumentException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
          description: NotFoundException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
          description: LimitExceededException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceAccountException'
          description: ServiceAccountException
      x-content-type: application/json
      x-accepts:
      - application/json
  /#X-Amz-Target=DeviceFarm_20150623.GetRun:
    post:
      description: Gets information about a run.
      operationId: GetRun
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - DeviceFarm_20150623.GetRun
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetRunRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetRunResult'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ArgumentException'
          description: ArgumentException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
          description: NotFoundException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
          description: LimitExceededException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceAccountException'
          description: ServiceAccountException
      x-content-type: application/json
      x-accepts:
      - application/json
  /#X-Amz-Target=DeviceFarm_20150623.GetSuite:
    post:
      description: Gets information about a suite.
      operationId: GetSuite
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - DeviceFarm_20150623.GetSuite
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetSuiteRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetSuiteResult'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ArgumentException'
          description: ArgumentException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
          description: NotFoundException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
          description: LimitExceededException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceAccountException'
          description: ServiceAccountException
      x-content-type: application/json
      x-accepts:
      - application/json
  /#X-Amz-Target=DeviceFarm_20150623.GetTest:
    post:
      description: Gets information about a test.
      operationId: GetTest
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - DeviceFarm_20150623.GetTest
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetTestRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetTestResult'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ArgumentException'
          description: ArgumentException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
          description: NotFoundException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
          description: LimitExceededException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceAccountException'
          description: ServiceAccountException
      x-content-type: application/json
      x-accepts:
      - application/json
  /#X-Amz-Target=DeviceFarm_20150623.GetTestGridProject:
    post:
      description: Retrieves information about a Selenium testing project.
      operationId: GetTestGridProject
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - DeviceFarm_20150623.GetTestGridProject
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetTestGridProjectRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetTestGridProjectResult'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
          description: NotFoundException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ArgumentException'
          description: ArgumentException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceException'
          description: InternalServiceException
      x-content-type: application/json
      x-accepts:
      - application/json
  /#X-Amz-Target=DeviceFarm_20150623.GetTestGridSession:
    post:
      description: <p>A session is an instance of a browser created through a <code>RemoteWebDriver</code>
        with the URL from <a>CreateTestGridUrlResult$url</a>. You can use the following
        to look up sessions:</p> <ul> <li> <p>The session ARN (<a>GetTestGridSessionRequest$sessionArn</a>).</p>
        </li> <li> <p>The project ARN and a session ID (<a>GetTestGridSessionRequest$projectArn</a>
        and <a>GetTestGridSessionRequest$sessionId</a>).</p> </li> </ul> <p/>
      operationId: GetTestGridSession
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - DeviceFarm_20150623.GetTestGridSession
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetTestGridSessionRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetTestGridSessionResult'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
          description: NotFoundException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ArgumentException'
          description: ArgumentException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceException'
          description: InternalServiceException
      x-content-type: application/json
      x-accepts:
      - application/json
  /#X-Amz-Target=DeviceFarm_20150623.GetUpload:
    post:
      description: Gets information about an upload.
      operationId: GetUpload
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - DeviceFarm_20150623.GetUpload
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetUploadRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetUploadResult'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ArgumentException'
          description: ArgumentException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
          description: NotFoundException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
          description: LimitExceededException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceAccountException'
          description: ServiceAccountException
      x-content-type: application/json
      x-accepts:
      - application/json
  /#X-Amz-Target=DeviceFarm_20150623.GetVPCEConfiguration:
    post:
      description: Returns information about the configuration settings for your Amazon
        Virtual Private Cloud (VPC) endpoint.
      operationId: GetVPCEConfiguration
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - DeviceFarm_20150623.GetVPCEConfiguration
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetVPCEConfigurationRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetVPCEConfigurationResult'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ArgumentException'
          description: ArgumentException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
          description: NotFoundException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceAccountException'
          description: ServiceAccountException
      x-content-type: application/json
      x-accepts:
      - application/json
  /#X-Amz-Target=DeviceFarm_20150623.InstallToRemoteAccessSession:
    post:
      description: "Installs an application to the device in a remote access session.\
        \ For Android applications, the file must be in .apk format. For iOS applications,\
        \ the file must be in .ipa format."
      operationId: InstallToRemoteAccessSession
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - DeviceFarm_20150623.InstallToRemoteAccessSession
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InstallToRemoteAccessSessionRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InstallToRemoteAccessSessionResult'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ArgumentException'
          description: ArgumentException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
          description: NotFoundException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
          description: LimitExceededException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceAccountException'
          description: ServiceAccountException
      x-content-type: application/json
      x-accepts:
      - application/json
  /#X-Amz-Target=DeviceFarm_20150623.ListArtifacts:
    post:
      description: Gets information about artifacts.
      operationId: ListArtifacts
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: Pagination token
        explode: true
        in: query
        name: nextToken
        required: false
        schema:
          type: string
        style: form
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - DeviceFarm_20150623.ListArtifacts
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ListArtifactsRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListArtifactsResult'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ArgumentException'
          description: ArgumentException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
          description: NotFoundException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
          description: LimitExceededException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceAccountException'
          description: ServiceAccountException
      x-content-type: application/json
      x-accepts:
      - application/json
  /#X-Amz-Target=DeviceFarm_20150623.ListDeviceInstances:
    post:
      description: Returns information about the private device instances associated
        with one or more AWS accounts.
      operationId: ListDeviceInstances
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - DeviceFarm_20150623.ListDeviceInstances
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ListDeviceInstancesRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListDeviceInstancesResult'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ArgumentException'
          description: ArgumentException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
          description: NotFoundException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
          description: LimitExceededException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceAccountException'
          description: ServiceAccountException
      x-content-type: application/json
      x-accepts:
      - application/json
  /#X-Amz-Target=DeviceFarm_20150623.ListDevicePools:
    post:
      description: Gets information about device pools.
      operationId: ListDevicePools
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: Pagination token
        explode: true
        in: query
        name: nextToken
        required: false
        schema:
          type: string
        style: form
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - DeviceFarm_20150623.ListDevicePools
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ListDevicePoolsRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListDevicePoolsResult'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ArgumentException'
          description: ArgumentException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
          description: NotFoundException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
          description: LimitExceededException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceAccountException'
          description: ServiceAccountException
      x-content-type: application/json
      x-accepts:
      - application/json
  /#X-Amz-Target=DeviceFarm_20150623.ListDevices:
    post:
      description: Gets information about unique device types.
      operationId: ListDevices
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: Pagination token
        explode: true
        in: query
        name: nextToken
        required: false
        schema:
          type: string
        style: form
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - DeviceFarm_20150623.ListDevices
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ListDevicesRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListDevicesResult'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ArgumentException'
          description: ArgumentException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
          description: NotFoundException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
          description: LimitExceededException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceAccountException'
          description: ServiceAccountException
      x-content-type: application/json
      x-accepts:
      - application/json
  /#X-Amz-Target=DeviceFarm_20150623.ListInstanceProfiles:
    post:
      description: Returns information about all the instance profiles in an AWS account.
      operationId: ListInstanceProfiles
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - DeviceFarm_20150623.ListInstanceProfiles
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ListInstanceProfilesRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListInstanceProfilesResult'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ArgumentException'
          description: ArgumentException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
          description: NotFoundException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
          description: LimitExceededException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceAccountException'
          description: ServiceAccountException
      x-content-type: application/json
      x-accepts:
      - application/json
  /#X-Amz-Target=DeviceFarm_20150623.ListJobs:
    post:
      description: Gets information about jobs for a given test run.
      operationId: ListJobs
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: Pagination token
        explode: true
        in: query
        name: nextToken
        required: false
        schema:
          type: string
        style: form
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - DeviceFarm_20150623.ListJobs
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ListJobsRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListJobsResult'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ArgumentException'
          description: ArgumentException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
          description: NotFoundException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
          description: LimitExceededException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceAccountException'
          description: ServiceAccountException
      x-content-type: application/json
      x-accepts:
      - application/json
  /#X-Amz-Target=DeviceFarm_20150623.ListNetworkProfiles:
    post:
      description: Returns the list of available network profiles.
      operationId: ListNetworkProfiles
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - DeviceFarm_20150623.ListNetworkProfiles
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ListNetworkProfilesRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListNetworkProfilesResult'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ArgumentException'
          description: ArgumentException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
          description: NotFoundException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
          description: LimitExceededException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceAccountException'
          description: ServiceAccountException
      x-content-type: application/json
      x-accepts:
      - application/json
  /#X-Amz-Target=DeviceFarm_20150623.ListOfferingPromotions:
    post:
      description: Returns a list of offering promotions. Each offering promotion
        record contains the ID and description of the promotion. The API returns a
        <code>NotEligible</code> error if the caller is not permitted to invoke the
        operation. Contact <a href="mailto:aws-devicefarm-support@amazon.com">aws-devicefarm-support@amazon.com</a>
        if you must be able to invoke this operation.
      operationId: ListOfferingPromotions
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - DeviceFarm_20150623.ListOfferingPromotions
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ListOfferingPromotionsRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListOfferingPromotionsResult'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ArgumentException'
          description: ArgumentException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
          description: NotFoundException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotEligibleException'
          description: NotEligibleException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
          description: LimitExceededException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceAccountException'
          description: ServiceAccountException
      x-content-type: application/json
      x-accepts:
      - application/json
  /#X-Amz-Target=DeviceFarm_20150623.ListOfferingTransactions:
    post:
      description: "Returns a list of all historical purchases, renewals, and system\
        \ renewal transactions for an AWS account. The list is paginated and ordered\
        \ by a descending timestamp (most recent transactions are first). The API\
        \ returns a <code>NotEligible</code> error if the user is not permitted to\
        \ invoke the operation. If you must be able to invoke this operation, contact\
        \ <a href=\"mailto:aws-devicefarm-support@amazon.com\">aws-devicefarm-support@amazon.com</a>."
      operationId: ListOfferingTransactions
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: Pagination token
        explode: true
        in: query
        name: nextToken
        required: false
        schema:
          type: string
        style: form
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - DeviceFarm_20150623.ListOfferingTransactions
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ListOfferingTransactionsRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListOfferingTransactionsResult'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ArgumentException'
          description: ArgumentException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
          description: NotFoundException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotEligibleException'
          description: NotEligibleException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
          description: LimitExceededException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceAccountException'
          description: ServiceAccountException
      x-content-type: application/json
      x-accepts:
      - application/json
  /#X-Amz-Target=DeviceFarm_20150623.ListOfferings:
    post:
      description: "Returns a list of products or offerings that the user can manage\
        \ through the API. Each offering record indicates the recurring price per\
        \ unit and the frequency for that offering. The API returns a <code>NotEligible</code>\
        \ error if the user is not permitted to invoke the operation. If you must\
        \ be able to invoke this operation, contact <a href=\"mailto:aws-devicefarm-support@amazon.com\"\
        >aws-devicefarm-support@amazon.com</a>."
      operationId: ListOfferings
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: Pagination token
        explode: true
        in: query
        name: nextToken
        required: false
        schema:
          type: string
        style: form
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - DeviceFarm_20150623.ListOfferings
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ListOfferingsRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListOfferingsResult'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ArgumentException'
          description: ArgumentException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
          description: NotFoundException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotEligibleException'
          description: NotEligibleException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
          description: LimitExceededException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceAccountException'
          description: ServiceAccountException
      x-content-type: application/json
      x-accepts:
      - application/json
  /#X-Amz-Target=DeviceFarm_20150623.ListProjects:
    post:
      description: Gets information about projects.
      operationId: ListProjects
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: Pagination token
        explode: true
        in: query
        name: nextToken
        required: false
        schema:
          type: string
        style: form
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - DeviceFarm_20150623.ListProjects
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ListProjectsRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListProjectsResult'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ArgumentException'
          description: ArgumentException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
          description: NotFoundException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
          description: LimitExceededException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceAccountException'
          description: ServiceAccountException
      x-content-type: application/json
      x-accepts:
      - application/json
  /#X-Amz-Target=DeviceFarm_20150623.ListRemoteAccessSessions:
    post:
      description: Returns a list of all currently running remote access sessions.
      operationId: ListRemoteAccessSessions
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - DeviceFarm_20150623.ListRemoteAccessSessions
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ListRemoteAccessSessionsRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListRemoteAccessSessionsResult'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ArgumentException'
          description: ArgumentException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
          description: NotFoundException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
          description: LimitExceededException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceAccountException'
          description: ServiceAccountException
      x-content-type: application/json
      x-accepts:
      - application/json
  /#X-Amz-Target=DeviceFarm_20150623.ListRuns:
    post:
      description: "Gets information about runs, given an AWS Device Farm project\
        \ ARN."
      operationId: ListRuns
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: Pagination token
        explode: true
        in: query
        name: nextToken
        required: false
        schema:
          type: string
        style: form
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - DeviceFarm_20150623.ListRuns
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ListRunsRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListRunsResult'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ArgumentException'
          description: ArgumentException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
          description: NotFoundException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
          description: LimitExceededException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceAccountException'
          description: ServiceAccountException
      x-content-type: application/json
      x-accepts:
      - application/json
  /#X-Amz-Target=DeviceFarm_20150623.ListSamples:
    post:
      description: "Gets information about samples, given an AWS Device Farm job ARN."
      operationId: ListSamples
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: Pagination token
        explode: true
        in: query
        name: nextToken
        required: false
        schema:
          type: string
        style: form
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - DeviceFarm_20150623.ListSamples
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ListSamplesRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListSamplesResult'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ArgumentException'
          description: ArgumentException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
          description: NotFoundException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
          description: LimitExceededException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceAccountException'
          description: ServiceAccountException
      x-content-type: application/json
      x-accepts:
      - application/json
  /#X-Amz-Target=DeviceFarm_20150623.ListSuites:
    post:
      description: Gets information about test suites for a given job.
      operationId: ListSuites
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: Pagination token
        explode: true
        in: query
        name: nextToken
        required: false
        schema:
          type: string
        style: form
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - DeviceFarm_20150623.ListSuites
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ListSuitesRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListSuitesResult'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ArgumentException'
          description: ArgumentException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
          description: NotFoundException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
          description: LimitExceededException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceAccountException'
          description: ServiceAccountException
      x-content-type: application/json
      x-accepts:
      - application/json
  /#X-Amz-Target=DeviceFarm_20150623.ListTagsForResource:
    post:
      description: List the tags for an AWS Device Farm resource.
      operationId: ListTagsForResource
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - DeviceFarm_20150623.ListTagsForResource
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ListTagsForResourceRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListTagsForResourceResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ArgumentException'
          description: ArgumentException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
          description: NotFoundException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TagOperationException'
          description: TagOperationException
      x-content-type: application/json
      x-accepts:
      - application/json
  /#X-Amz-Target=DeviceFarm_20150623.ListTestGridProjects:
    post:
      description: Gets a list of all Selenium testing projects in your account.
      operationId: ListTestGridProjects
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: Pagination limit
        explode: true
        in: query
        name: maxResult
        required: false
        schema:
          type: string
        style: form
      - description: Pagination token
        explode: true
        in: query
        name: nextToken
        required: false
        schema:
          type: string
        style: form
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - DeviceFarm_20150623.ListTestGridProjects
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ListTestGridProjectsRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListTestGridProjectsResult'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ArgumentException'
          description: ArgumentException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceException'
          description: InternalServiceException
      x-content-type: application/json
      x-accepts:
      - application/json
  /#X-Amz-Target=DeviceFarm_20150623.ListTestGridSessionActions:
    post:
      description: Returns a list of the actions taken in a <a>TestGridSession</a>.
      operationId: ListTestGridSessionActions
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: Pagination limit
        explode: true
        in: query
        name: maxResult
        required: false
        schema:
          type: string
        style: form
      - description: Pagination token
        explode: true
        in: query
        name: nextToken
        required: false
        schema:
          type: string
        style: form
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - DeviceFarm_20150623.ListTestGridSessionActions
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ListTestGridSessionActionsRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListTestGridSessionActionsResult'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
          description: NotFoundException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ArgumentException'
          description: ArgumentException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceException'
          description: InternalServiceException
      x-content-type: application/json
      x-accepts:
      - application/json
  /#X-Amz-Target=DeviceFarm_20150623.ListTestGridSessionArtifacts:
    post:
      description: Retrieves a list of artifacts created during the session.
      operationId: ListTestGridSessionArtifacts
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: Pagination limit
        explode: true
        in: query
        name: maxResult
        required: false
        schema:
          type: string
        style: form
      - description: Pagination token
        explode: true
        in: query
        name: nextToken
        required: false
        schema:
          type: string
        style: form
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - DeviceFarm_20150623.ListTestGridSessionArtifacts
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ListTestGridSessionArtifactsRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListTestGridSessionArtifactsResult'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
          description: NotFoundException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ArgumentException'
          description: ArgumentException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceException'
          description: InternalServiceException
      x-content-type: application/json
      x-accepts:
      - application/json
  /#X-Amz-Target=DeviceFarm_20150623.ListTestGridSessions:
    post:
      description: Retrieves a list of sessions for a <a>TestGridProject</a>.
      operationId: ListTestGridSessions
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: Pagination limit
        explode: true
        in: query
        name: maxResult
        required: false
        schema:
          type: string
        style: form
      - description: Pagination token
        explode: true
        in: query
        name: nextToken
        required: false
        schema:
          type: string
        style: form
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - DeviceFarm_20150623.ListTestGridSessions
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ListTestGridSessionsRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListTestGridSessionsResult'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
          description: NotFoundException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ArgumentException'
          description: ArgumentException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceException'
          description: InternalServiceException
      x-content-type: application/json
      x-accepts:
      - application/json
  /#X-Amz-Target=DeviceFarm_20150623.ListTests:
    post:
      description: Gets information about tests in a given test suite.
      operationId: ListTests
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: Pagination token
        explode: true
        in: query
        name: nextToken
        required: false
        schema:
          type: string
        style: form
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - DeviceFarm_20150623.ListTests
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ListTestsRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListTestsResult'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ArgumentException'
          description: ArgumentException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
          description: NotFoundException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
          description: LimitExceededException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceAccountException'
          description: ServiceAccountException
      x-content-type: application/json
      x-accepts:
      - application/json
  /#X-Amz-Target=DeviceFarm_20150623.ListUniqueProblems:
    post:
      description: "<p>Gets information about unique problems, such as exceptions\
        \ or crashes.</p> <p>Unique problems are defined as a single instance of an\
        \ error across a run, job, or suite. For example, if a call in your application\
        \ consistently raises an exception (<code>OutOfBoundsException in MyActivity.java:386</code>),\
        \ <code>ListUniqueProblems</code> returns a single entry instead of many individual\
        \ entries for that exception.</p>"
      operationId: ListUniqueProblems
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: Pagination token
        explode: true
        in: query
        name: nextToken
        required: false
        schema:
          type: string
        style: form
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - DeviceFarm_20150623.ListUniqueProblems
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ListUniqueProblemsRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListUniqueProblemsResult'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ArgumentException'
          description: ArgumentException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
          description: NotFoundException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
          description: LimitExceededException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceAccountException'
          description: ServiceAccountException
      x-content-type: application/json
      x-accepts:
      - application/json
  /#X-Amz-Target=DeviceFarm_20150623.ListUploads:
    post:
      description: "Gets information about uploads, given an AWS Device Farm project\
        \ ARN."
      operationId: ListUploads
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: Pagination token
        explode: true
        in: query
        name: nextToken
        required: false
        schema:
          type: string
        style: form
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - DeviceFarm_20150623.ListUploads
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ListUploadsRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListUploadsResult'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ArgumentException'
          description: ArgumentException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
          description: NotFoundException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
          description: LimitExceededException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceAccountException'
          description: ServiceAccountException
      x-content-type: application/json
      x-accepts:
      - application/json
  /#X-Amz-Target=DeviceFarm_20150623.ListVPCEConfigurations:
    post:
      description: Returns information about all Amazon Virtual Private Cloud (VPC)
        endpoint configurations in the AWS account.
      operationId: ListVPCEConfigurations
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - DeviceFarm_20150623.ListVPCEConfigurations
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ListVPCEConfigurationsRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListVPCEConfigurationsResult'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ArgumentException'
          description: ArgumentException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceAccountException'
          description: ServiceAccountException
      x-content-type: application/json
      x-accepts:
      - application/json
  /#X-Amz-Target=DeviceFarm_20150623.PurchaseOffering:
    post:
      description: "Immediately purchases offerings for an AWS account. Offerings\
        \ renew with the latest total purchased quantity for an offering, unless the\
        \ renewal was overridden. The API returns a <code>NotEligible</code> error\
        \ if the user is not permitted to invoke the operation. If you must be able\
        \ to invoke this operation, contact <a href=\"mailto:aws-devicefarm-support@amazon.com\"\
        >aws-devicefarm-support@amazon.com</a>."
      operationId: PurchaseOffering
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - DeviceFarm_20150623.PurchaseOffering
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PurchaseOfferingRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PurchaseOfferingResult'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ArgumentException'
          description: ArgumentException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
          description: NotFoundException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotEligibleException'
          description: NotEligibleException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
          description: LimitExceededException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceAccountException'
          description: ServiceAccountException
      x-content-type: application/json
      x-accepts:
      - application/json
  /#X-Amz-Target=DeviceFarm_20150623.RenewOffering:
    post:
      description: "Explicitly sets the quantity of devices to renew for an offering,\
        \ starting from the <code>effectiveDate</code> of the next period. The API\
        \ returns a <code>NotEligible</code> error if the user is not permitted to\
        \ invoke the operation. If you must be able to invoke this operation, contact\
        \ <a href=\"mailto:aws-devicefarm-support@amazon.com\">aws-devicefarm-support@amazon.com</a>."
      operationId: RenewOffering
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - DeviceFarm_20150623.RenewOffering
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RenewOfferingRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RenewOfferingResult'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ArgumentException'
          description: ArgumentException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
          description: NotFoundException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotEligibleException'
          description: NotEligibleException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
          description: LimitExceededException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceAccountException'
          description: ServiceAccountException
      x-content-type: application/json
      x-accepts:
      - application/json
  /#X-Amz-Target=DeviceFarm_20150623.ScheduleRun:
    post:
      description: Schedules a run.
      operationId: ScheduleRun
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - DeviceFarm_20150623.ScheduleRun
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ScheduleRunRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ScheduleRunResult'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ArgumentException'
          description: ArgumentException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
          description: NotFoundException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
          description: LimitExceededException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IdempotencyException'
          description: IdempotencyException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceAccountException'
          description: ServiceAccountException
      x-content-type: application/json
      x-accepts:
      - application/json
  /#X-Amz-Target=DeviceFarm_20150623.StopJob:
    post:
      description: "Initiates a stop request for the current job. AWS Device Farm\
        \ immediately stops the job on the device where tests have not started. You\
        \ are not billed for this device. On the device where tests have started,\
        \ setup suite and teardown suite tests run to completion on the device. You\
        \ are billed for setup, teardown, and any tests that were in progress or already\
        \ completed."
      operationId: StopJob
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - DeviceFarm_20150623.StopJob
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StopJobRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StopJobResult'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ArgumentException'
          description: ArgumentException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
          description: NotFoundException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
          description: LimitExceededException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceAccountException'
          description: ServiceAccountException
      x-content-type: application/json
      x-accepts:
      - application/json
  /#X-Amz-Target=DeviceFarm_20150623.StopRemoteAccessSession:
    post:
      description: Ends a specified remote access session.
      operationId: StopRemoteAccessSession
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - DeviceFarm_20150623.StopRemoteAccessSession
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StopRemoteAccessSessionRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StopRemoteAccessSessionResult'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ArgumentException'
          description: ArgumentException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
          description: NotFoundException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
          description: LimitExceededException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceAccountException'
          description: ServiceAccountException
      x-content-type: application/json
      x-accepts:
      - application/json
  /#X-Amz-Target=DeviceFarm_20150623.StopRun:
    post:
      description: "Initiates a stop request for the current test run. AWS Device\
        \ Farm immediately stops the run on devices where tests have not started.\
        \ You are not billed for these devices. On devices where tests have started\
        \ executing, setup suite and teardown suite tests run to completion on those\
        \ devices. You are billed for setup, teardown, and any tests that were in\
        \ progress or already completed."
      operationId: StopRun
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - DeviceFarm_20150623.StopRun
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StopRunRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StopRunResult'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ArgumentException'
          description: ArgumentException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
          description: NotFoundException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
          description: LimitExceededException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceAccountException'
          description: ServiceAccountException
      x-content-type: application/json
      x-accepts:
      - application/json
  /#X-Amz-Target=DeviceFarm_20150623.TagResource:
    post:
      description: "Associates the specified tags to a resource with the specified\
        \ <code>resourceArn</code>. If existing tags on a resource are not specified\
        \ in the request parameters, they are not changed. When a resource is deleted,\
        \ the tags associated with that resource are also deleted."
      operationId: TagResource
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - DeviceFarm_20150623.TagResource
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TagResourceRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TagResourceResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ArgumentException'
          description: ArgumentException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
          description: NotFoundException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TagOperationException'
          description: TagOperationException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyTagsException'
          description: TooManyTagsException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TagPolicyException'
          description: TagPolicyException
      x-content-type: application/json
      x-accepts:
      - application/json
  /#X-Amz-Target=DeviceFarm_20150623.UntagResource:
    post:
      description: Deletes the specified tags from a resource.
      operationId: UntagResource
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - DeviceFarm_20150623.UntagResource
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UntagResourceRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UntagResourceResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ArgumentException'
          description: ArgumentException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
          description: NotFoundException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TagOperationException'
          description: TagOperationException
      x-content-type: application/json
      x-accepts:
      - application/json
  /#X-Amz-Target=DeviceFarm_20150623.UpdateDeviceInstance:
    post:
      description: Updates information about a private device instance.
      operationId: UpdateDeviceInstance
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - DeviceFarm_20150623.UpdateDeviceInstance
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateDeviceInstanceRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateDeviceInstanceResult'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ArgumentException'
          description: ArgumentException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
          description: NotFoundException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
          description: LimitExceededException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceAccountException'
          description: ServiceAccountException
      x-content-type: application/json
      x-accepts:
      - application/json
  /#X-Amz-Target=DeviceFarm_20150623.UpdateDevicePool:
    post:
      description: "Modifies the name, description, and rules in a device pool given\
        \ the attributes and the pool ARN. Rule updates are all-or-nothing, meaning\
        \ they can only be updated as a whole (or not at all)."
      operationId: UpdateDevicePool
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - DeviceFarm_20150623.UpdateDevicePool
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateDevicePoolRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateDevicePoolResult'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ArgumentException'
          description: ArgumentException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
          description: NotFoundException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
          description: LimitExceededException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceAccountException'
          description: ServiceAccountException
      x-content-type: application/json
      x-accepts:
      - application/json
  /#X-Amz-Target=DeviceFarm_20150623.UpdateInstanceProfile:
    post:
      description: Updates information about an existing private device instance profile.
      operationId: UpdateInstanceProfile
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - DeviceFarm_20150623.UpdateInstanceProfile
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateInstanceProfileRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateInstanceProfileResult'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ArgumentException'
          description: ArgumentException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
          description: NotFoundException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
          description: LimitExceededException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceAccountException'
          description: ServiceAccountException
      x-content-type: application/json
      x-accepts:
      - application/json
  /#X-Amz-Target=DeviceFarm_20150623.UpdateNetworkProfile:
    post:
      description: Updates the network profile.
      operationId: UpdateNetworkProfile
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - DeviceFarm_20150623.UpdateNetworkProfile
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateNetworkProfileRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateNetworkProfileResult'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ArgumentException'
          description: ArgumentException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
          description: NotFoundException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
          description: LimitExceededException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceAccountException'
          description: ServiceAccountException
      x-content-type: application/json
      x-accepts:
      - application/json
  /#X-Amz-Target=DeviceFarm_20150623.UpdateProject:
    post:
      description: "Modifies the specified project name, given the project ARN and\
        \ a new name."
      operationId: UpdateProject
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - DeviceFarm_20150623.UpdateProject
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateProjectRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateProjectResult'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ArgumentException'
          description: ArgumentException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
          description: NotFoundException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
          description: LimitExceededException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceAccountException'
          description: ServiceAccountException
      x-content-type: application/json
      x-accepts:
      - application/json
  /#X-Amz-Target=DeviceFarm_20150623.UpdateTestGridProject:
    post:
      description: Change details of a project.
      operationId: UpdateTestGridProject
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - DeviceFarm_20150623.UpdateTestGridProject
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateTestGridProjectRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateTestGridProjectResult'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
          description: NotFoundException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ArgumentException'
          description: ArgumentException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
          description: LimitExceededException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceException'
          description: InternalServiceException
      x-content-type: application/json
      x-accepts:
      - application/json
  /#X-Amz-Target=DeviceFarm_20150623.UpdateUpload:
    post:
      description: Updates an uploaded test spec.
      operationId: UpdateUpload
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - DeviceFarm_20150623.UpdateUpload
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateUploadRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateUploadResult'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ArgumentException'
          description: ArgumentException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
          description: NotFoundException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
          description: LimitExceededException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceAccountException'
          description: ServiceAccountException
      x-content-type: application/json
      x-accepts:
      - application/json
  /#X-Amz-Target=DeviceFarm_20150623.UpdateVPCEConfiguration:
    post:
      description: Updates information about an Amazon Virtual Private Cloud (VPC)
        endpoint configuration.
      operationId: UpdateVPCEConfiguration
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - DeviceFarm_20150623.UpdateVPCEConfiguration
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateVPCEConfigurationRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateVPCEConfigurationResult'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ArgumentException'
          description: ArgumentException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
          description: NotFoundException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceAccountException'
          description: ServiceAccountException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidOperationException'
          description: InvalidOperationException
      x-content-type: application/json
      x-accepts:
      - application/json
components:
  parameters:
    X-Amz-Content-Sha256:
      explode: false
      in: header
      name: X-Amz-Content-Sha256
      required: false
      schema:
        type: string
      style: simple
    X-Amz-Date:
      explode: false
      in: header
      name: X-Amz-Date
      required: false
      schema:
        type: string
      style: simple
    X-Amz-Algorithm:
      explode: false
      in: header
      name: X-Amz-Algorithm
      required: false
      schema:
        type: string
      style: simple
    X-Amz-Credential:
      explode: false
      in: header
      name: X-Amz-Credential
      required: false
      schema:
        type: string
      style: simple
    X-Amz-Security-Token:
      explode: false
      in: header
      name: X-Amz-Security-Token
      required: false
      schema:
        type: string
      style: simple
    X-Amz-Signature:
      explode: false
      in: header
      name: X-Amz-Signature
      required: false
      schema:
        type: string
      style: simple
    X-Amz-SignedHeaders:
      explode: false
      in: header
      name: X-Amz-SignedHeaders
      required: false
      schema:
        type: string
      style: simple
  schemas:
    CreateDevicePoolResult:
      description: Represents the result of a create device pool request.
      example:
        devicePool: {}
      properties:
        devicePool:
          $ref: '#/components/schemas/CreateDevicePoolResult_devicePool'
      type: object
    CreateDevicePoolRequest:
      description: Represents a request to the create device pool operation.
      example:
        projectArn: ""
        name: ""
        maxDevices: ""
        description: ""
        rules: ""
      properties:
        projectArn:
          allOf:
          - $ref: '#/components/schemas/AmazonResourceName'
          - description: The ARN of the project for the device pool.
        name:
          allOf:
          - $ref: '#/components/schemas/Name'
          - description: The device pool's name.
        description:
          allOf:
          - $ref: '#/components/schemas/Message'
          - description: The device pool's description.
        rules:
          allOf:
          - $ref: '#/components/schemas/Rules'
          - description: The device pool's rules.
        maxDevices:
          allOf:
          - $ref: '#/components/schemas/Integer'
          - description: "<p>The number of devices that Device Farm can add to your\
              \ device pool. Device Farm adds devices that are available and meet\
              \ the criteria that you assign for the <code>rules</code> parameter.\
              \ Depending on how many devices meet these constraints, your device\
              \ pool might contain fewer devices than the value for this parameter.</p>\
              \ <p>By specifying the maximum number of devices, you can control the\
              \ costs that you incur by running tests.</p>"
      required:
      - name
      - projectArn
      - rules
      title: CreateDevicePoolRequest
      type: object
    ArgumentException: {}
    NotFoundException: {}
    LimitExceededException: {}
    ServiceAccountException: {}
    CreateInstanceProfileResult:
      example:
        instanceProfile:
          excludeAppPackagesFromCleanup: ""
          name: ""
          rebootAfterUse: ""
          description: ""
          packageCleanup: ""
          arn: ""
      properties:
        instanceProfile:
          $ref: '#/components/schemas/CreateInstanceProfileResult_instanceProfile'
      type: object
    CreateInstanceProfileRequest:
      example:
        excludeAppPackagesFromCleanup: ""
        name: ""
        description: ""
        rebootAfterUse: ""
        packageCleanup: ""
      properties:
        name:
          allOf:
          - $ref: '#/components/schemas/Name'
          - description: The name of your instance profile.
        description:
          allOf:
          - $ref: '#/components/schemas/Message'
          - description: The description of your instance profile.
        packageCleanup:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          - description: "When set to <code>true</code>, Device Farm removes app packages\
              \ after a test run. The default value is <code>false</code> for private\
              \ devices."
        excludeAppPackagesFromCleanup:
          allOf:
          - $ref: '#/components/schemas/PackageIds'
          - description: <p>An array of strings that specifies the list of app packages
              that should not be cleaned up from the device after a test run.</p>
              <p>The list of packages is considered only if you set <code>packageCleanup</code>
              to <code>true</code>.</p>
        rebootAfterUse:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          - description: "When set to <code>true</code>, Device Farm reboots the instance\
              \ after a test run. The default value is <code>true</code>."
      required:
      - name
      title: CreateInstanceProfileRequest
      type: object
    CreateNetworkProfileResult:
      example:
        networkProfile:
          uplinkLossPercent: ""
          downlinkBandwidthBits: ""
          downlinkDelayMs: ""
          uplinkJitterMs: ""
          name: ""
          description: ""
          uplinkBandwidthBits: ""
          downlinkJitterMs: ""
          arn: ""
          type: ""
          downlinkLossPercent: ""
          uplinkDelayMs: ""
      properties:
        networkProfile:
          $ref: '#/components/schemas/CreateNetworkProfileResult_networkProfile'
      type: object
    CreateNetworkProfileRequest:
      example:
        projectArn: ""
        uplinkLossPercent: ""
        downlinkBandwidthBits: ""
        downlinkDelayMs: ""
        uplinkJitterMs: ""
        name: ""
        description: ""
        uplinkBandwidthBits: ""
        downlinkJitterMs: ""
        type: ""
        downlinkLossPercent: ""
        uplinkDelayMs: ""
      properties:
        projectArn:
          allOf:
          - $ref: '#/components/schemas/AmazonResourceName'
          - description: The Amazon Resource Name (ARN) of the project for which you
              want to create a network profile.
        name:
          allOf:
          - $ref: '#/components/schemas/Name'
          - description: The name for the new network profile.
        description:
          allOf:
          - $ref: '#/components/schemas/Message'
          - description: The description of the network profile.
        type:
          allOf:
          - $ref: '#/components/schemas/NetworkProfileType'
          - description: The type of network profile to create. Valid values are listed
              here.
        uplinkBandwidthBits:
          allOf:
          - $ref: '#/components/schemas/Long'
          - description: "The data throughput rate in bits per second, as an integer\
              \ from 0 to 104857600."
        downlinkBandwidthBits:
          allOf:
          - $ref: '#/components/schemas/Long'
          - description: "The data throughput rate in bits per second, as an integer\
              \ from 0 to 104857600."
        uplinkDelayMs:
          allOf:
          - $ref: '#/components/schemas/Long'
          - description: Delay time for all packets to destination in milliseconds
              as an integer from 0 to 2000.
        downlinkDelayMs:
          allOf:
          - $ref: '#/components/schemas/Long'
          - description: Delay time for all packets to destination in milliseconds
              as an integer from 0 to 2000.
        uplinkJitterMs:
          allOf:
          - $ref: '#/components/schemas/Long'
          - description: Time variation in the delay of received packets in milliseconds
              as an integer from 0 to 2000.
        downlinkJitterMs:
          allOf:
          - $ref: '#/components/schemas/Long'
          - description: Time variation in the delay of received packets in milliseconds
              as an integer from 0 to 2000.
        uplinkLossPercent:
          allOf:
          - $ref: '#/components/schemas/PercentInteger'
          - description: Proportion of transmitted packets that fail to arrive from
              0 to 100 percent.
        downlinkLossPercent:
          allOf:
          - $ref: '#/components/schemas/PercentInteger'
          - description: Proportion of received packets that fail to arrive from 0
              to 100 percent.
      required:
      - name
      - projectArn
      title: CreateNetworkProfileRequest
      type: object
    CreateProjectResult:
      description: Represents the result of a create project request.
      example:
        project:
          name: MyProject
          arn: arn:aws:devicefarm:us-west-2:123456789101:project:5e01a8c7-c861-4c0a-b1d5-12345EXAMPLE
          created: "1472660939.152"
      properties:
        project:
          $ref: '#/components/schemas/CreateProjectResult_project'
      type: object
    CreateProjectRequest:
      description: Represents a request to the create project operation.
      example:
        defaultJobTimeoutMinutes: ""
        vpcConfig:
          securityGroupIds: ""
          vpcId: ""
          subnetIds: ""
        name: ""
      properties:
        name:
          allOf:
          - $ref: '#/components/schemas/Name'
          - description: The project's name.
        defaultJobTimeoutMinutes:
          allOf:
          - $ref: '#/components/schemas/JobTimeoutMinutes'
          - description: Sets the execution timeout value (in minutes) for a project.
              All test runs in this project use the specified execution timeout value
              unless overridden when scheduling a run.
        vpcConfig:
          $ref: '#/components/schemas/CreateProjectRequest_vpcConfig'
      required:
      - name
      title: CreateProjectRequest
      type: object
    TagOperationException: {}
    CreateRemoteAccessSessionResult:
      description: Represents the server response from a request to create a remote
        access session.
      example:
        remoteAccessSession: {}
      properties:
        remoteAccessSession:
          $ref: '#/components/schemas/CreateRemoteAccessSessionResult_remoteAccessSession'
      type: object
    CreateRemoteAccessSessionRequest:
      description: Creates and submits a request to start a remote access session.
      example:
        projectArn: ""
        sshPublicKey: ""
        remoteRecordEnabled: ""
        clientId: ""
        interactionMode: ""
        configuration:
          billingMethod: ""
          vpceConfigurationArns: ""
        deviceArn: ""
        name: ""
        skipAppResign: ""
        instanceArn: ""
        remoteDebugEnabled: ""
        remoteRecordAppArn: ""
      properties:
        projectArn:
          allOf:
          - $ref: '#/components/schemas/AmazonResourceName'
          - description: The Amazon Resource Name (ARN) of the project for which you
              want to create a remote access session.
        deviceArn:
          allOf:
          - $ref: '#/components/schemas/AmazonResourceName'
          - description: The ARN of the device for which you want to create a remote
              access session.
        instanceArn:
          allOf:
          - $ref: '#/components/schemas/AmazonResourceName'
          - description: The Amazon Resource Name (ARN) of the device instance for
              which you want to create a remote access session.
        sshPublicKey:
          allOf:
          - $ref: '#/components/schemas/SshPublicKey'
          - description: <p>Ignored. The public key of the <code>ssh</code> key pair
              you want to use for connecting to remote devices in your remote debugging
              session. This key is required only if <code>remoteDebugEnabled</code>
              is set to <code>true</code>.</p> <p>Remote debugging is <a href="https://docs.aws.amazon.com/devicefarm/latest/developerguide/history.html">no
              longer supported</a>.</p>
        remoteDebugEnabled:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          - description: <p>Set to <code>true</code> if you want to access devices
              remotely for debugging in your remote access session.</p> <p>Remote
              debugging is <a href="https://docs.aws.amazon.com/devicefarm/latest/developerguide/history.html">no
              longer supported</a>.</p>
        remoteRecordEnabled:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          - description: Set to <code>true</code> to enable remote recording for the
              remote access session.
        remoteRecordAppArn:
          allOf:
          - $ref: '#/components/schemas/AmazonResourceName'
          - description: The Amazon Resource Name (ARN) for the app to be recorded
              in the remote access session.
        name:
          allOf:
          - $ref: '#/components/schemas/Name'
          - description: The name of the remote access session to create.
        clientId:
          allOf:
          - $ref: '#/components/schemas/ClientId'
          - description: "<p>Unique identifier for the client. If you want access\
              \ to multiple devices on the same client, you should pass the same <code>clientId</code>\
              \ value in each call to <code>CreateRemoteAccessSession</code>. This\
              \ identifier is required only if <code>remoteDebugEnabled</code> is\
              \ set to <code>true</code>.</p> <p>Remote debugging is <a href=\"https://docs.aws.amazon.com/devicefarm/latest/developerguide/history.html\"\
              >no longer supported</a>.</p>"
        configuration:
          $ref: '#/components/schemas/CreateRemoteAccessSessionRequest_configuration'
        interactionMode:
          allOf:
          - $ref: '#/components/schemas/InteractionMode'
          - description: "<p>The interaction mode of the remote access session. Valid\
              \ values are:</p> <ul> <li> <p>INTERACTIVE: You can interact with the\
              \ iOS device by viewing, touching, and rotating the screen. You cannot\
              \ run XCUITest framework-based tests in this mode.</p> </li> <li> <p>NO_VIDEO:\
              \ You are connected to the device, but cannot interact with it or view\
              \ the screen. This mode has the fastest test execution speed. You can\
              \ run XCUITest framework-based tests in this mode.</p> </li> <li> <p>VIDEO_ONLY:\
              \ You can view the screen, but cannot touch or rotate it. You can run\
              \ XCUITest framework-based tests and watch the screen in this mode.</p>\
              \ </li> </ul>"
        skipAppResign:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          - description: "<p>When set to <code>true</code>, for private devices, Device\
              \ Farm does not sign your app again. For public devices, Device Farm\
              \ always signs your apps again.</p> <p>For more information on how Device\
              \ Farm modifies your uploads during tests, see <a href=\"http://aws.amazon.com/device-farm/faqs/\"\
              >Do you modify my app?</a> </p>"
      required:
      - deviceArn
      - projectArn
      title: CreateRemoteAccessSessionRequest
      type: object
    CreateTestGridProjectResult:
      example:
        testGridProject:
          created: ""
          vpcConfig:
            securityGroupIds: ""
            vpcId: ""
            subnetIds: ""
          name: ""
          description: ""
          arn: ""
      properties:
        testGridProject:
          $ref: '#/components/schemas/CreateTestGridProjectResult_testGridProject'
      type: object
    CreateTestGridProjectRequest:
      example:
        vpcConfig:
          securityGroupIds: ""
          vpcId: ""
          subnetIds: ""
        name: ""
        description: ""
      properties:
        name:
          allOf:
          - $ref: '#/components/schemas/ResourceName'
          - description: Human-readable name of the Selenium testing project.
        description:
          allOf:
          - $ref: '#/components/schemas/ResourceDescription'
          - description: Human-readable description of the project.
        vpcConfig:
          $ref: '#/components/schemas/CreateTestGridProjectRequest_vpcConfig'
      required:
      - name
      title: CreateTestGridProjectRequest
      type: object
    InternalServiceException: {}
    CreateTestGridUrlResult:
      example:
        expires: ""
        url: ""
      properties:
        url:
          allOf:
          - $ref: '#/components/schemas/SensitiveString'
          - description: "A signed URL, expiring in <a>CreateTestGridUrlRequest$expiresInSeconds</a>\
              \ seconds, to be passed to a <code>RemoteWebDriver</code>. "
        expires:
          allOf:
          - $ref: '#/components/schemas/DateTime'
          - description: The number of seconds the URL from <a>CreateTestGridUrlResult$url</a>
              stays active.
      type: object
    CreateTestGridUrlRequest:
      example:
        projectArn: ""
        expiresInSeconds: ""
      properties:
        projectArn:
          allOf:
          - $ref: '#/components/schemas/DeviceFarmArn'
          - description: 'ARN (from <a>CreateTestGridProject</a> or <a>ListTestGridProjects</a>)
              to associate with the short-term URL. '
        expiresInSeconds:
          allOf:
          - $ref: '#/components/schemas/TestGridUrlExpiresInSecondsInput'
          - description: "Lifetime, in seconds, of the URL."
      required:
      - expiresInSeconds
      - projectArn
      title: CreateTestGridUrlRequest
      type: object
    CreateUploadResult:
      description: Represents the result of a create upload request.
      example:
        upload:
          name: MyAppiumPythonUpload
          type: APPIUM_PYTHON_TEST_PACKAGE
          arn: arn:aws:devicefarm:us-west-2:123456789101:upload:5e01a8c7-c861-4c0a-b1d5-5ec6e6c6dd23/b5340a65-3da7-4da6-a26e-12345EXAMPLE
          created: "1472661404.186"
          status: INITIALIZED
          url: https://prod-us-west-2-uploads.s3-us-west-2.amazonaws.com/arn%3Aaws%3Adevicefarm%3Aus-west-2%3A123456789101%3Aproject%3A5e01a8c7-c861-4c0a-b1d5-12345EXAMPLE/uploads/arn%3Aaws%3Adevicefarm%3Aus-west-2%3A123456789101%3Aupload%3A5e01a8c7-c861-4c0a-b1d5-5ec6e6c6dd23/b5340a65-3da7-4da6-a26e-12345EXAMPLE/MyAppiumPythonUpload?AWSAccessKeyId=1234567891011EXAMPLE&Expires=1472747804&Signature=1234567891011EXAMPLE
      properties:
        upload:
          $ref: '#/components/schemas/CreateUploadResult_upload'
      type: object
    CreateUploadRequest:
      description: Represents a request to the create upload operation.
      example:
        projectArn: ""
        name: ""
        type: ""
        contentType: ""
      properties:
        projectArn:
          allOf:
          - $ref: '#/components/schemas/AmazonResourceName'
          - description: The ARN of the project for the upload.
        name:
          allOf:
          - $ref: '#/components/schemas/Name'
          - description: "The upload's file name. The name should not contain any\
              \ forward slashes (<code>/</code>). If you are uploading an iOS app,\
              \ the file name must end with the <code>.ipa</code> extension. If you\
              \ are uploading an Android app, the file name must end with the <code>.apk</code>\
              \ extension. For all others, the file name must end with the <code>.zip</code>\
              \ file extension."
        type:
          allOf:
          - $ref: '#/components/schemas/UploadType'
          - description: "<p>The upload's upload type.</p> <p>Must be one of the following\
              \ values:</p> <ul> <li> <p>ANDROID_APP</p> </li> <li> <p>IOS_APP</p>\
              \ </li> <li> <p>WEB_APP</p> </li> <li> <p>EXTERNAL_DATA</p> </li> <li>\
              \ <p>APPIUM_JAVA_JUNIT_TEST_PACKAGE</p> </li> <li> <p>APPIUM_JAVA_TESTNG_TEST_PACKAGE</p>\
              \ </li> <li> <p>APPIUM_PYTHON_TEST_PACKAGE</p> </li> <li> <p>APPIUM_NODE_TEST_PACKAGE</p>\
              \ </li> <li> <p>APPIUM_RUBY_TEST_PACKAGE</p> </li> <li> <p>APPIUM_WEB_JAVA_JUNIT_TEST_PACKAGE</p>\
              \ </li> <li> <p>APPIUM_WEB_JAVA_TESTNG_TEST_PACKAGE</p> </li> <li> <p>APPIUM_WEB_PYTHON_TEST_PACKAGE</p>\
              \ </li> <li> <p>APPIUM_WEB_NODE_TEST_PACKAGE</p> </li> <li> <p>APPIUM_WEB_RUBY_TEST_PACKAGE</p>\
              \ </li> <li> <p>CALABASH_TEST_PACKAGE</p> </li> <li> <p>INSTRUMENTATION_TEST_PACKAGE</p>\
              \ </li> <li> <p>UIAUTOMATION_TEST_PACKAGE</p> </li> <li> <p>UIAUTOMATOR_TEST_PACKAGE</p>\
              \ </li> <li> <p>XCTEST_TEST_PACKAGE</p> </li> <li> <p>XCTEST_UI_TEST_PACKAGE</p>\
              \ </li> <li> <p>APPIUM_JAVA_JUNIT_TEST_SPEC</p> </li> <li> <p>APPIUM_JAVA_TESTNG_TEST_SPEC</p>\
              \ </li> <li> <p>APPIUM_PYTHON_TEST_SPEC</p> </li> <li> <p>APPIUM_NODE_TEST_SPEC</p>\
              \ </li> <li> <p>APPIUM_RUBY_TEST_SPEC</p> </li> <li> <p>APPIUM_WEB_JAVA_JUNIT_TEST_SPEC</p>\
              \ </li> <li> <p>APPIUM_WEB_JAVA_TESTNG_TEST_SPEC</p> </li> <li> <p>APPIUM_WEB_PYTHON_TEST_SPEC</p>\
              \ </li> <li> <p>APPIUM_WEB_NODE_TEST_SPEC</p> </li> <li> <p>APPIUM_WEB_RUBY_TEST_SPEC</p>\
              \ </li> <li> <p>INSTRUMENTATION_TEST_SPEC</p> </li> <li> <p>XCTEST_UI_TEST_SPEC</p>\
              \ </li> </ul> <p> If you call <code>CreateUpload</code> with <code>WEB_APP</code>\
              \ specified, AWS Device Farm throws an <code>ArgumentException</code>\
              \ error.</p>"
        contentType:
          allOf:
          - $ref: '#/components/schemas/ContentType'
          - description: "The upload's content type (for example, <code>application/octet-stream</code>)."
      required:
      - name
      - projectArn
      - type
      title: CreateUploadRequest
      type: object
    CreateVPCEConfigurationResult:
      example:
        vpceConfiguration:
          serviceDnsName: ""
          vpceServiceName: ""
          vpceConfigurationDescription: ""
          vpceConfigurationName: ""
          arn: ""
      properties:
        vpceConfiguration:
          $ref: '#/components/schemas/CreateVPCEConfigurationResult_vpceConfiguration'
      type: object
    CreateVPCEConfigurationRequest:
      example:
        serviceDnsName: ""
        vpceServiceName: ""
        vpceConfigurationDescription: ""
        vpceConfigurationName: ""
      properties:
        vpceConfigurationName:
          allOf:
          - $ref: '#/components/schemas/VPCEConfigurationName'
          - description: "The friendly name you give to your VPC endpoint configuration,\
              \ to manage your configurations more easily."
        vpceServiceName:
          allOf:
          - $ref: '#/components/schemas/VPCEServiceName'
          - description: The name of the VPC endpoint service running in your AWS
              account that you want Device Farm to test.
        serviceDnsName:
          allOf:
          - $ref: '#/components/schemas/ServiceDnsName'
          - description: The DNS name of the service running in your VPC that you
              want Device Farm to test.
        vpceConfigurationDescription:
          allOf:
          - $ref: '#/components/schemas/VPCEConfigurationDescription'
          - description: An optional description that provides details about your
              VPC endpoint configuration.
      required:
      - serviceDnsName
      - vpceConfigurationName
      - vpceServiceName
      title: CreateVPCEConfigurationRequest
      type: object
    DeleteDevicePoolResult:
      description: Represents the result of a delete device pool request.
      example: {}
      properties: {}
      type: object
    DeleteDevicePoolRequest:
      description: Represents a request to the delete device pool operation.
      example:
        arn: ""
      properties:
        arn:
          allOf:
          - $ref: '#/components/schemas/AmazonResourceName'
          - description: Represents the Amazon Resource Name (ARN) of the Device Farm
              device pool to delete.
      required:
      - arn
      title: DeleteDevicePoolRequest
      type: object
    DeleteInstanceProfileResult:
      properties: {}
      type: object
    DeleteInstanceProfileRequest:
      example:
        arn: ""
      properties:
        arn:
          allOf:
          - $ref: '#/components/schemas/AmazonResourceName'
          - description: The Amazon Resource Name (ARN) of the instance profile you
              are requesting to delete.
      required:
      - arn
      title: DeleteInstanceProfileRequest
      type: object
    DeleteNetworkProfileResult:
      properties: {}
      type: object
    DeleteNetworkProfileRequest:
      example:
        arn: ""
      properties:
        arn:
          allOf:
          - $ref: '#/components/schemas/AmazonResourceName'
          - description: The ARN of the network profile to delete.
      required:
      - arn
      title: DeleteNetworkProfileRequest
      type: object
    DeleteProjectResult:
      description: Represents the result of a delete project request.
      example: {}
      properties: {}
      type: object
    DeleteProjectRequest:
      description: Represents a request to the delete project operation.
      example:
        arn: ""
      properties:
        arn:
          allOf:
          - $ref: '#/components/schemas/AmazonResourceName'
          - description: Represents the Amazon Resource Name (ARN) of the Device Farm
              project to delete.
      required:
      - arn
      title: DeleteProjectRequest
      type: object
    DeleteRemoteAccessSessionResult:
      description: The response from the server when a request is made to delete the
        remote access session.
      example: {}
      properties: {}
      type: object
    DeleteRemoteAccessSessionRequest:
      description: Represents the request to delete the specified remote access session.
      example:
        arn: ""
      properties:
        arn:
          allOf:
          - $ref: '#/components/schemas/AmazonResourceName'
          - description: The Amazon Resource Name (ARN) of the session for which you
              want to delete remote access.
      required:
      - arn
      title: DeleteRemoteAccessSessionRequest
      type: object
    DeleteRunResult:
      description: Represents the result of a delete run request.
      example: {}
      properties: {}
      type: object
    DeleteRunRequest:
      description: Represents a request to the delete run operation.
      example:
        arn: ""
      properties:
        arn:
          allOf:
          - $ref: '#/components/schemas/AmazonResourceName'
          - description: The Amazon Resource Name (ARN) for the run to delete.
      required:
      - arn
      title: DeleteRunRequest
      type: object
    DeleteTestGridProjectResult:
      properties: {}
      type: object
    DeleteTestGridProjectRequest:
      example:
        projectArn: ""
      properties:
        projectArn:
          allOf:
          - $ref: '#/components/schemas/DeviceFarmArn'
          - description: "The ARN of the project to delete, from <a>CreateTestGridProject</a>\
              \ or <a>ListTestGridProjects</a>."
      required:
      - projectArn
      title: DeleteTestGridProjectRequest
      type: object
    CannotDeleteException: {}
    DeleteUploadResult:
      description: Represents the result of a delete upload request.
      example: {}
      properties: {}
      type: object
    DeleteUploadRequest:
      description: Represents a request to the delete upload operation.
      example:
        arn: ""
      properties:
        arn:
          allOf:
          - $ref: '#/components/schemas/AmazonResourceName'
          - description: Represents the Amazon Resource Name (ARN) of the Device Farm
              upload to delete.
      required:
      - arn
      title: DeleteUploadRequest
      type: object
    DeleteVPCEConfigurationResult:
      properties: {}
      type: object
    DeleteVPCEConfigurationRequest:
      example:
        arn: ""
      properties:
        arn:
          allOf:
          - $ref: '#/components/schemas/AmazonResourceName'
          - description: The Amazon Resource Name (ARN) of the VPC endpoint configuration
              you want to delete.
      required:
      - arn
      title: DeleteVPCEConfigurationRequest
      type: object
    InvalidOperationException: {}
    GetAccountSettingsResult:
      description: Represents the account settings return values from the <code>GetAccountSettings</code>
        request.
      example:
        accountSettings:
          awsAccountNumber: "123456789101"
          unmeteredDevices:
            ANDROID: 1
            IOS: 2
      properties:
        accountSettings:
          $ref: '#/components/schemas/GetAccountSettingsResult_accountSettings'
      type: object
    GetAccountSettingsRequest:
      description: Represents the request sent to retrieve the account settings.
      properties: {}
      title: GetAccountSettingsRequest
      type: object
    GetDeviceResult:
      description: Represents the result of a get device request.
      example:
        device:
          name: LG G2 (Sprint)
          arn: arn:aws:devicefarm:us-west-2::device:A0E6E6E1059E45918208DF75B2B7EF6C
          cpu:
            architecture: armeabi-v7a
            clock: 2265.6
            frequency: MHz
          formFactor: PHONE
          heapSize: 256000000
          image: 75B2B7EF6C12345EXAMPLE
          manufacturer: LG
          memory: 16000000000
          model: G2 (Sprint)
          os: 4.2.2
          platform: ANDROID
          resolution:
            height: 1920
            width: 1080
      properties:
        device:
          $ref: '#/components/schemas/GetDeviceResult_device'
      type: object
    GetDeviceRequest:
      description: Represents a request to the get device request.
      example:
        arn: ""
      properties:
        arn:
          allOf:
          - $ref: '#/components/schemas/AmazonResourceName'
          - description: The device type's ARN.
      required:
      - arn
      title: GetDeviceRequest
      type: object
    GetDeviceInstanceResult:
      example:
        deviceInstance:
          instanceProfile:
            excludeAppPackagesFromCleanup: ""
            name: ""
            rebootAfterUse: ""
            description: ""
            packageCleanup: ""
            arn: ""
          deviceArn: ""
          arn: ""
          udid: ""
          labels: ""
          status: ""
      properties:
        deviceInstance:
          $ref: '#/components/schemas/GetDeviceInstanceResult_deviceInstance'
      type: object
    GetDeviceInstanceRequest:
      example:
        arn: ""
      properties:
        arn:
          allOf:
          - $ref: '#/components/schemas/AmazonResourceName'
          - description: The Amazon Resource Name (ARN) of the instance you're requesting
              information about.
      required:
      - arn
      title: GetDeviceInstanceRequest
      type: object
    GetDevicePoolResult:
      description: Represents the result of a get device pool request.
      example:
        devicePool: {}
      properties:
        devicePool:
          $ref: '#/components/schemas/GetDevicePoolResult_devicePool'
      type: object
    GetDevicePoolRequest:
      description: Represents a request to the get device pool operation.
      example:
        arn: ""
      properties:
        arn:
          allOf:
          - $ref: '#/components/schemas/AmazonResourceName'
          - description: The device pool's ARN.
      required:
      - arn
      title: GetDevicePoolRequest
      type: object
    GetDevicePoolCompatibilityResult:
      description: Represents the result of describe device pool compatibility request.
      example:
        compatibleDevices: []
        incompatibleDevices: []
      properties:
        compatibleDevices:
          allOf:
          - $ref: '#/components/schemas/DevicePoolCompatibilityResults'
          - description: Information about compatible devices.
        incompatibleDevices:
          allOf:
          - $ref: '#/components/schemas/DevicePoolCompatibilityResults'
          - description: Information about incompatible devices.
      type: object
    GetDevicePoolCompatibilityRequest:
      description: Represents a request to the get device pool compatibility operation.
      example:
        test:
          filter: ""
          testSpecArn: ""
          testPackageArn: ""
          type: ""
          parameters: ""
        configuration:
          extraDataPackageArn: ""
          radios:
            wifi: ""
            bluetooth: ""
            nfc: ""
            gps: ""
          billingMethod: ""
          vpceConfigurationArns: ""
          auxiliaryApps: ""
          location:
            latitude: ""
            longitude: ""
          networkProfileArn: ""
          locale: ""
          customerArtifactPaths:
            iosPaths: ""
            androidPaths: ""
            deviceHostPaths: ""
        appArn: ""
        testType: ""
        devicePoolArn: ""
      properties:
        devicePoolArn:
          allOf:
          - $ref: '#/components/schemas/AmazonResourceName'
          - description: The device pool's ARN.
        appArn:
          allOf:
          - $ref: '#/components/schemas/AmazonResourceName'
          - description: The ARN of the app that is associated with the specified
              device pool.
        testType:
          allOf:
          - $ref: '#/components/schemas/TestType'
          - description: "<p>The test type for the specified device pool.</p> <p>Allowed\
              \ values include the following:</p> <ul> <li> <p>BUILTIN_FUZZ.</p> </li>\
              \ <li> <p>BUILTIN_EXPLORER. For Android, an app explorer that traverses\
              \ an Android app, interacting with it and capturing screenshots at the\
              \ same time.</p> </li> <li> <p>APPIUM_JAVA_JUNIT.</p> </li> <li> <p>APPIUM_JAVA_TESTNG.</p>\
              \ </li> <li> <p>APPIUM_PYTHON.</p> </li> <li> <p>APPIUM_NODE.</p> </li>\
              \ <li> <p>APPIUM_RUBY.</p> </li> <li> <p>APPIUM_WEB_JAVA_JUNIT.</p>\
              \ </li> <li> <p>APPIUM_WEB_JAVA_TESTNG.</p> </li> <li> <p>APPIUM_WEB_PYTHON.</p>\
              \ </li> <li> <p>APPIUM_WEB_NODE.</p> </li> <li> <p>APPIUM_WEB_RUBY.</p>\
              \ </li> <li> <p>CALABASH.</p> </li> <li> <p>INSTRUMENTATION.</p> </li>\
              \ <li> <p>UIAUTOMATION.</p> </li> <li> <p>UIAUTOMATOR.</p> </li> <li>\
              \ <p>XCTEST.</p> </li> <li> <p>XCTEST_UI.</p> </li> </ul>"
        test:
          $ref: '#/components/schemas/GetDevicePoolCompatibilityRequest_test'
        configuration:
          $ref: '#/components/schemas/GetDevicePoolCompatibilityRequest_configuration'
      required:
      - devicePoolArn
      title: GetDevicePoolCompatibilityRequest
      type: object
    GetInstanceProfileResult:
      example:
        instanceProfile:
          excludeAppPackagesFromCleanup: ""
          name: ""
          rebootAfterUse: ""
          description: ""
          packageCleanup: ""
          arn: ""
      properties:
        instanceProfile:
          $ref: '#/components/schemas/GetInstanceProfileResult_instanceProfile'
      type: object
    GetInstanceProfileRequest:
      example:
        arn: ""
      properties:
        arn:
          allOf:
          - $ref: '#/components/schemas/AmazonResourceName'
          - description: The Amazon Resource Name (ARN) of an instance profile.
      required:
      - arn
      title: GetInstanceProfileRequest
      type: object
    GetJobResult:
      description: Represents the result of a get job request.
      example:
        job: {}
      properties:
        job:
          $ref: '#/components/schemas/GetJobResult_job'
      type: object
    GetJobRequest:
      description: Represents a request to the get job operation.
      example:
        arn: ""
      properties:
        arn:
          allOf:
          - $ref: '#/components/schemas/AmazonResourceName'
          - description: The job's ARN.
      required:
      - arn
      title: GetJobRequest
      type: object
    GetNetworkProfileResult:
      example:
        networkProfile:
          uplinkLossPercent: ""
          downlinkBandwidthBits: ""
          downlinkDelayMs: ""
          uplinkJitterMs: ""
          name: ""
          description: ""
          uplinkBandwidthBits: ""
          downlinkJitterMs: ""
          arn: ""
          type: ""
          downlinkLossPercent: ""
          uplinkDelayMs: ""
      properties:
        networkProfile:
          $ref: '#/components/schemas/GetNetworkProfileResult_networkProfile'
      type: object
    GetNetworkProfileRequest:
      example:
        arn: ""
      properties:
        arn:
          allOf:
          - $ref: '#/components/schemas/AmazonResourceName'
          - description: The ARN of the network profile to return information about.
      required:
      - arn
      title: GetNetworkProfileRequest
      type: object
    GetOfferingStatusResult:
      description: Returns the status result for a device offering.
      example:
        current:
          D68B3C05-1BA6-4360-BC69-12345EXAMPLE:
            offering:
              type: RECURRING
              description: Android Remote Access Unmetered Device Slot
              id: D68B3C05-1BA6-4360-BC69-12345EXAMPLE
              platform: ANDROID
            quantity: 1
        nextPeriod:
          D68B3C05-1BA6-4360-BC69-12345EXAMPLE:
            effectiveOn: "1472688000"
            offering:
              type: RECURRING
              description: Android Remote Access Unmetered Device Slot
              id: D68B3C05-1BA6-4360-BC69-12345EXAMPLE
              platform: ANDROID
            quantity: 1
      properties:
        current:
          allOf:
          - $ref: '#/components/schemas/OfferingStatusMap'
          - description: "When specified, gets the offering status for the current\
              \ period."
        nextPeriod:
          allOf:
          - $ref: '#/components/schemas/OfferingStatusMap'
          - description: "When specified, gets the offering status for the next period."
        nextToken:
          allOf:
          - $ref: '#/components/schemas/PaginationToken'
          - description: "An identifier that was returned from the previous call to\
              \ this operation, which can be used to return the next set of items\
              \ in the list."
      type: object
    GetOfferingStatusRequest:
      description: Represents the request to retrieve the offering status for the
        specified customer or account.
      example:
        nextToken: ""
      properties:
        nextToken:
          allOf:
          - $ref: '#/components/schemas/PaginationToken'
          - description: "An identifier that was returned from the previous call to\
              \ this operation, which can be used to return the next set of items\
              \ in the list."
      title: GetOfferingStatusRequest
      type: object
    NotEligibleException: {}
    GetProjectResult:
      description: Represents the result of a get project request.
      example:
        project:
          name: My Project
          arn: arn:aws:devicefarm:us-west-2:123456789101:project:5e01a8c7-c861-4c0a-b1d5-12345EXAMPLE
          created: "1472660939.152"
      properties:
        project:
          $ref: '#/components/schemas/GetProjectResult_project'
      type: object
    GetProjectRequest:
      description: Represents a request to the get project operation.
      example:
        arn: ""
      properties:
        arn:
          allOf:
          - $ref: '#/components/schemas/AmazonResourceName'
          - description: The project's ARN.
      required:
      - arn
      title: GetProjectRequest
      type: object
    GetRemoteAccessSessionResult:
      description: Represents the response from the server that lists detailed information
        about the remote access session.
      example:
        remoteAccessSession: {}
      properties:
        remoteAccessSession:
          $ref: '#/components/schemas/GetRemoteAccessSessionResult_remoteAccessSession'
      type: object
    GetRemoteAccessSessionRequest:
      description: Represents the request to get information about the specified remote
        access session.
      example:
        arn: ""
      properties:
        arn:
          allOf:
          - $ref: '#/components/schemas/AmazonResourceName'
          - description: The Amazon Resource Name (ARN) of the remote access session
              about which you want to get session information.
      required:
      - arn
      title: GetRemoteAccessSessionRequest
      type: object
    GetRunResult:
      description: Represents the result of a get run request.
      example:
        run:
          name: My Test Run
          type: BUILTIN_EXPLORER
          arn: arn:aws:devicefarm:us-west-2:123456789101:run:5e01a8c7-c861-4c0a-b1d5-5ec6e6c6dd23/0fcac17b-6122-44d7-ae5a-12345EXAMPLE
          billingMethod: METERED
          completedJobs: 0
          counters:
            errored: 0
            failed: 0
            passed: 0
            skipped: 0
            stopped: 0
            total: 0
            warned: 0
          created: "1472667509.852"
          deviceMinutes:
            metered: 0
            total: 0
            unmetered: 0
          platform: ANDROID
          result: PENDING
          status: RUNNING
          totalJobs: 3
      properties:
        run:
          $ref: '#/components/schemas/GetRunResult_run'
      type: object
    GetRunRequest:
      description: Represents a request to the get run operation.
      example:
        arn: ""
      properties:
        arn:
          allOf:
          - $ref: '#/components/schemas/AmazonResourceName'
          - description: The run's ARN.
      required:
      - arn
      title: GetRunRequest
      type: object
    GetSuiteResult:
      description: Represents the result of a get suite request.
      example:
        suite: {}
      properties:
        suite:
          $ref: '#/components/schemas/GetSuiteResult_suite'
      type: object
    GetSuiteRequest:
      description: Represents a request to the get suite operation.
      example:
        arn: ""
      properties:
        arn:
          allOf:
          - $ref: '#/components/schemas/AmazonResourceName'
          - description: The suite's ARN.
      required:
      - arn
      title: GetSuiteRequest
      type: object
    GetTestResult:
      description: Represents the result of a get test request.
      example:
        test: {}
      properties:
        test:
          $ref: '#/components/schemas/GetTestResult_test'
      type: object
    GetTestRequest:
      description: Represents a request to the get test operation.
      example:
        arn: ""
      properties:
        arn:
          allOf:
          - $ref: '#/components/schemas/AmazonResourceName'
          - description: The test's ARN.
      required:
      - arn
      title: GetTestRequest
      type: object
    GetTestGridProjectResult:
      example:
        testGridProject:
          created: ""
          vpcConfig:
            securityGroupIds: ""
            vpcId: ""
            subnetIds: ""
          name: ""
          description: ""
          arn: ""
      properties:
        testGridProject:
          $ref: '#/components/schemas/GetTestGridProjectResult_testGridProject'
      type: object
    GetTestGridProjectRequest:
      example:
        projectArn: ""
      properties:
        projectArn:
          allOf:
          - $ref: '#/components/schemas/DeviceFarmArn'
          - description: "The ARN of the Selenium testing project, from either <a>CreateTestGridProject</a>\
              \ or <a>ListTestGridProjects</a>."
      required:
      - projectArn
      title: GetTestGridProjectRequest
      type: object
    GetTestGridSessionResult:
      example:
        testGridSession:
          seleniumProperties: ""
          created: ""
          billingMinutes: ""
          ended: ""
          arn: ""
          status: ""
      properties:
        testGridSession:
          $ref: '#/components/schemas/GetTestGridSessionResult_testGridSession'
      type: object
    GetTestGridSessionRequest:
      example:
        projectArn: ""
        sessionArn: ""
        sessionId: ""
      properties:
        projectArn:
          allOf:
          - $ref: '#/components/schemas/DeviceFarmArn'
          - description: The ARN for the project that this session belongs to. See
              <a>CreateTestGridProject</a> and <a>ListTestGridProjects</a>.
        sessionId:
          allOf:
          - $ref: '#/components/schemas/ResourceId'
          - description: An ID associated with this session.
        sessionArn:
          allOf:
          - $ref: '#/components/schemas/DeviceFarmArn'
          - description: An ARN that uniquely identifies a <a>TestGridSession</a>.
      title: GetTestGridSessionRequest
      type: object
    GetUploadResult:
      description: Represents the result of a get upload request.
      example:
        upload: {}
      properties:
        upload:
          $ref: '#/components/schemas/GetUploadResult_upload'
      type: object
    GetUploadRequest:
      description: Represents a request to the get upload operation.
      example:
        arn: ""
      properties:
        arn:
          allOf:
          - $ref: '#/components/schemas/AmazonResourceName'
          - description: The upload's ARN.
      required:
      - arn
      title: GetUploadRequest
      type: object
    GetVPCEConfigurationResult:
      example:
        vpceConfiguration:
          serviceDnsName: ""
          vpceServiceName: ""
          vpceConfigurationDescription: ""
          vpceConfigurationName: ""
          arn: ""
      properties:
        vpceConfiguration:
          $ref: '#/components/schemas/CreateVPCEConfigurationResult_vpceConfiguration'
      type: object
    GetVPCEConfigurationRequest:
      example:
        arn: ""
      properties:
        arn:
          allOf:
          - $ref: '#/components/schemas/AmazonResourceName'
          - description: The Amazon Resource Name (ARN) of the VPC endpoint configuration
              you want to describe.
      required:
      - arn
      title: GetVPCEConfigurationRequest
      type: object
    InstallToRemoteAccessSessionResult:
      description: Represents the response from the server after AWS Device Farm makes
        a request to install to a remote access session.
      example:
        appUpload: {}
      properties:
        appUpload:
          $ref: '#/components/schemas/InstallToRemoteAccessSessionResult_appUpload'
      type: object
    InstallToRemoteAccessSessionRequest:
      description: Represents the request to install an Android application (in .apk
        format) or an iOS application (in .ipa format) as part of a remote access
        session.
      example:
        remoteAccessSessionArn: ""
        appArn: ""
      properties:
        remoteAccessSessionArn:
          allOf:
          - $ref: '#/components/schemas/AmazonResourceName'
          - description: The Amazon Resource Name (ARN) of the remote access session
              about which you are requesting information.
        appArn:
          allOf:
          - $ref: '#/components/schemas/AmazonResourceName'
          - description: The ARN of the app about which you are requesting information.
      required:
      - appArn
      - remoteAccessSessionArn
      title: InstallToRemoteAccessSessionRequest
      type: object
    ListArtifactsResult:
      description: Represents the result of a list artifacts operation.
      example:
        nextToken: ""
        artifacts: ""
      properties:
        artifacts:
          allOf:
          - $ref: '#/components/schemas/Artifacts'
          - description: Information about the artifacts.
        nextToken:
          allOf:
          - $ref: '#/components/schemas/PaginationToken'
          - description: "If the number of items that are returned is significantly\
              \ large, this is an identifier that is also returned. It can be used\
              \ in a subsequent call to this operation to return the next set of items\
              \ in the list."
      type: object
    ListArtifactsRequest:
      description: Represents a request to the list artifacts operation.
      example:
        nextToken: ""
        arn: ""
        type: ""
      properties:
        arn:
          allOf:
          - $ref: '#/components/schemas/AmazonResourceName'
          - description: "The run, job, suite, or test ARN."
        type:
          allOf:
          - $ref: '#/components/schemas/ArtifactCategory'
          - description: <p>The artifacts' type.</p> <p>Allowed values include:</p>
              <ul> <li> <p>FILE</p> </li> <li> <p>LOG</p> </li> <li> <p>SCREENSHOT</p>
              </li> </ul>
        nextToken:
          allOf:
          - $ref: '#/components/schemas/PaginationToken'
          - description: "An identifier that was returned from the previous call to\
              \ this operation, which can be used to return the next set of items\
              \ in the list."
      required:
      - arn
      - type
      title: ListArtifactsRequest
      type: object
    ListDeviceInstancesResult:
      example:
        nextToken: ""
        deviceInstances: ""
      properties:
        deviceInstances:
          allOf:
          - $ref: '#/components/schemas/DeviceInstances'
          - description: An object that contains information about your device instances.
        nextToken:
          allOf:
          - $ref: '#/components/schemas/PaginationToken'
          - description: An identifier that can be used in the next call to this operation
              to return the next set of items in the list.
      type: object
    ListDeviceInstancesRequest:
      example:
        maxResults: ""
        nextToken: ""
      properties:
        maxResults:
          allOf:
          - $ref: '#/components/schemas/Integer'
          - description: An integer that specifies the maximum number of items you
              want to return in the API response.
        nextToken:
          allOf:
          - $ref: '#/components/schemas/PaginationToken'
          - description: "An identifier that was returned from the previous call to\
              \ this operation, which can be used to return the next set of items\
              \ in the list."
      title: ListDeviceInstancesRequest
      type: object
    ListDevicePoolsResult:
      description: Represents the result of a list device pools request.
      example:
        devicePools:
        - name: Top Devices
          arn: arn:aws:devicefarm:us-west-2::devicepool:082d10e5-d7d7-48a5-ba5c-12345EXAMPLE
          description: Top devices
          rules:
          - value: "[\"arn:aws:devicefarm:us-west-2::device:123456789EXAMPLE\",\"\
              arn:aws:devicefarm:us-west-2::device:123456789EXAMPLE\",\"arn:aws:devicefarm:us-west-2::device:123456789EXAMPLE\"\
              ,\"arn:aws:devicefarm:us-west-2::device:123456789EXAMPLE\",\"arn:aws:devicefarm:us-west-2::device:123456789EXAMPLE\"\
              ,\"arn:aws:devicefarm:us-west-2::device:123456789EXAMPLE\",\"arn:aws:devicefarm:us-west-2::device:123456789EXAMPLE\"\
              ,\"arn:aws:devicefarm:us-west-2::device:123456789EXAMPLE\",\"arn:aws:devicefarm:us-west-2::device:123456789EXAMPLE\"\
              ,\"arn:aws:devicefarm:us-west-2::device:123456789EXAMPLE\"]"
            attribute: ARN
            operator: IN
        - name: My Android Device Pool
          arn: arn:aws:devicefarm:us-west-2:123456789101:devicepool:5e01a8c7-c861-4c0a-b1d5-5ec6e6c6dd23/bf96e75a-28f6-4e61-b6a7-12345EXAMPLE
          description: Samsung Galaxy Android devices
          rules:
          - value: "[\"arn:aws:devicefarm:us-west-2::device:123456789EXAMPLE\",\"\
              arn:aws:devicefarm:us-west-2::device:123456789EXAMPLE\",\"arn:aws:devicefarm:us-west-2::device:123456789EXAMPLE\"\
              ]"
            attribute: ARN
            operator: IN
      properties:
        devicePools:
          allOf:
          - $ref: '#/components/schemas/DevicePools'
          - description: Information about the device pools.
        nextToken:
          allOf:
          - $ref: '#/components/schemas/PaginationToken'
          - description: "If the number of items that are returned is significantly\
              \ large, this is an identifier that is also returned. It can be used\
              \ in a subsequent call to this operation to return the next set of items\
              \ in the list."
      type: object
    ListDevicePoolsRequest:
      description: Represents the result of a list device pools request.
      example:
        nextToken: ""
        arn: ""
        type: ""
      properties:
        arn:
          allOf:
          - $ref: '#/components/schemas/AmazonResourceName'
          - description: The project ARN.
        type:
          allOf:
          - $ref: '#/components/schemas/DevicePoolType'
          - description: "<p>The device pools' type.</p> <p>Allowed values include:</p>\
              \ <ul> <li> <p>CURATED: A device pool that is created and managed by\
              \ AWS Device Farm.</p> </li> <li> <p>PRIVATE: A device pool that is\
              \ created and managed by the device pool developer.</p> </li> </ul>"
        nextToken:
          allOf:
          - $ref: '#/components/schemas/PaginationToken'
          - description: "An identifier that was returned from the previous call to\
              \ this operation, which can be used to return the next set of items\
              \ in the list."
      required:
      - arn
      title: ListDevicePoolsRequest
      type: object
    ListDevicesResult:
      description: Represents the result of a list devices operation.
      example: {}
      properties:
        devices:
          allOf:
          - $ref: '#/components/schemas/Devices'
          - description: Information about the devices.
        nextToken:
          allOf:
          - $ref: '#/components/schemas/PaginationToken'
          - description: "If the number of items that are returned is significantly\
              \ large, this is an identifier that is also returned. It can be used\
              \ in a subsequent call to this operation to return the next set of items\
              \ in the list."
      type: object
    ListDevicesRequest:
      description: Represents the result of a list devices request.
      example:
        nextToken: ""
        filters: ""
        arn: ""
      properties:
        arn:
          allOf:
          - $ref: '#/components/schemas/AmazonResourceName'
          - description: The Amazon Resource Name (ARN) of the project.
        nextToken:
          allOf:
          - $ref: '#/components/schemas/PaginationToken'
          - description: "An identifier that was returned from the previous call to\
              \ this operation, which can be used to return the next set of items\
              \ in the list."
        filters:
          allOf:
          - $ref: '#/components/schemas/DeviceFilters'
          - description: "<p>Used to select a set of devices. A filter is made up\
              \ of an attribute, an operator, and one or more values.</p> <ul> <li>\
              \ <p>Attribute: The aspect of a device such as platform or model used\
              \ as the selection criteria in a device filter.</p> <p>Allowed values\
              \ include:</p> <ul> <li> <p>ARN: The Amazon Resource Name (ARN) of the\
              \ device (for example, <code>arn:aws:devicefarm:us-west-2::device:12345Example</code>).</p>\
              \ </li> <li> <p>PLATFORM: The device platform. Valid values are ANDROID\
              \ or IOS.</p> </li> <li> <p>OS_VERSION: The operating system version\
              \ (for example, 10.3.2).</p> </li> <li> <p>MODEL: The device model (for\
              \ example, iPad 5th Gen).</p> </li> <li> <p>AVAILABILITY: The current\
              \ availability of the device. Valid values are AVAILABLE, HIGHLY_AVAILABLE,\
              \ BUSY, or TEMPORARY_NOT_AVAILABLE.</p> </li> <li> <p>FORM_FACTOR: The\
              \ device form factor. Valid values are PHONE or TABLET.</p> </li> <li>\
              \ <p>MANUFACTURER: The device manufacturer (for example, Apple).</p>\
              \ </li> <li> <p>REMOTE_ACCESS_ENABLED: Whether the device is enabled\
              \ for remote access. Valid values are TRUE or FALSE.</p> </li> <li>\
              \ <p>REMOTE_DEBUG_ENABLED: Whether the device is enabled for remote\
              \ debugging. Valid values are TRUE or FALSE. Because remote debugging\
              \ is <a href=\"https://docs.aws.amazon.com/devicefarm/latest/developerguide/history.html\"\
              >no longer supported</a>, this attribute is ignored.</p> </li> <li>\
              \ <p>INSTANCE_ARN: The Amazon Resource Name (ARN) of the device instance.</p>\
              \ </li> <li> <p>INSTANCE_LABELS: The label of the device instance.</p>\
              \ </li> <li> <p>FLEET_TYPE: The fleet type. Valid values are PUBLIC\
              \ or PRIVATE.</p> </li> </ul> </li> <li> <p>Operator: The filter operator.</p>\
              \ <ul> <li> <p>The EQUALS operator is available for every attribute\
              \ except INSTANCE_LABELS.</p> </li> <li> <p>The CONTAINS operator is\
              \ available for the INSTANCE_LABELS and MODEL attributes.</p> </li>\
              \ <li> <p>The IN and NOT_IN operators are available for the ARN, OS_VERSION,\
              \ MODEL, MANUFACTURER, and INSTANCE_ARN attributes.</p> </li> <li> <p>The\
              \ LESS_THAN, GREATER_THAN, LESS_THAN_OR_EQUALS, and GREATER_THAN_OR_EQUALS\
              \ operators are also available for the OS_VERSION attribute.</p> </li>\
              \ </ul> </li> <li> <p>Values: An array of one or more filter values.</p>\
              \ <ul> <li> <p>The IN and NOT_IN operators take a values array that\
              \ has one or more elements.</p> </li> <li> <p>The other operators require\
              \ an array with a single element.</p> </li> <li> <p>In a request, the\
              \ AVAILABILITY attribute takes the following values: AVAILABLE, HIGHLY_AVAILABLE,\
              \ BUSY, or TEMPORARY_NOT_AVAILABLE.</p> </li> </ul> </li> </ul>"
      title: ListDevicesRequest
      type: object
    ListInstanceProfilesResult:
      example:
        nextToken: ""
        instanceProfiles: ""
      properties:
        instanceProfiles:
          allOf:
          - $ref: '#/components/schemas/InstanceProfiles'
          - description: An object that contains information about your instance profiles.
        nextToken:
          allOf:
          - $ref: '#/components/schemas/PaginationToken'
          - description: An identifier that can be used in the next call to this operation
              to return the next set of items in the list.
      type: object
    ListInstanceProfilesRequest:
      example:
        maxResults: ""
        nextToken: ""
      properties:
        maxResults:
          allOf:
          - $ref: '#/components/schemas/Integer'
          - description: An integer that specifies the maximum number of items you
              want to return in the API response.
        nextToken:
          allOf:
          - $ref: '#/components/schemas/PaginationToken'
          - description: "An identifier that was returned from the previous call to\
              \ this operation, which can be used to return the next set of items\
              \ in the list."
      title: ListInstanceProfilesRequest
      type: object
    ListJobsResult:
      description: Represents the result of a list jobs request.
      example:
        nextToken: ""
        jobs: ""
      properties:
        jobs:
          allOf:
          - $ref: '#/components/schemas/Jobs'
          - description: Information about the jobs.
        nextToken:
          allOf:
          - $ref: '#/components/schemas/PaginationToken'
          - description: "If the number of items that are returned is significantly\
              \ large, this is an identifier that is also returned. It can be used\
              \ in a subsequent call to this operation to return the next set of items\
              \ in the list."
      type: object
    ListJobsRequest:
      description: Represents a request to the list jobs operation.
      example:
        nextToken: ""
        arn: ""
      properties:
        arn:
          allOf:
          - $ref: '#/components/schemas/AmazonResourceName'
          - description: The run's Amazon Resource Name (ARN).
        nextToken:
          allOf:
          - $ref: '#/components/schemas/PaginationToken'
          - description: "An identifier that was returned from the previous call to\
              \ this operation, which can be used to return the next set of items\
              \ in the list."
      required:
      - arn
      title: ListJobsRequest
      type: object
    ListNetworkProfilesResult:
      example:
        nextToken: ""
        networkProfiles: ""
      properties:
        networkProfiles:
          allOf:
          - $ref: '#/components/schemas/NetworkProfiles'
          - description: A list of the available network profiles.
        nextToken:
          allOf:
          - $ref: '#/components/schemas/PaginationToken'
          - description: "An identifier that was returned from the previous call to\
              \ this operation, which can be used to return the next set of items\
              \ in the list."
      type: object
    ListNetworkProfilesRequest:
      example:
        nextToken: ""
        arn: ""
        type: ""
      properties:
        arn:
          allOf:
          - $ref: '#/components/schemas/AmazonResourceName'
          - description: The Amazon Resource Name (ARN) of the project for which you
              want to list network profiles.
        type:
          allOf:
          - $ref: '#/components/schemas/NetworkProfileType'
          - description: The type of network profile to return information about.
              Valid values are listed here.
        nextToken:
          allOf:
          - $ref: '#/components/schemas/PaginationToken'
          - description: "An identifier that was returned from the previous call to\
              \ this operation, which can be used to return the next set of items\
              \ in the list."
      required:
      - arn
      title: ListNetworkProfilesRequest
      type: object
    ListOfferingPromotionsResult:
      example:
        nextToken: ""
        offeringPromotions: ""
      properties:
        offeringPromotions:
          allOf:
          - $ref: '#/components/schemas/OfferingPromotions'
          - description: Information about the offering promotions.
        nextToken:
          allOf:
          - $ref: '#/components/schemas/PaginationToken'
          - description: "An identifier to be used in the next call to this operation,\
              \ to return the next set of items in the list."
      type: object
    ListOfferingPromotionsRequest:
      example:
        nextToken: ""
      properties:
        nextToken:
          allOf:
          - $ref: '#/components/schemas/PaginationToken'
          - description: "An identifier that was returned from the previous call to\
              \ this operation, which can be used to return the next set of items\
              \ in the list."
      title: ListOfferingPromotionsRequest
      type: object
    ListOfferingTransactionsResult:
      description: Returns the transaction log of the specified offerings.
      example:
        offeringTransactions:
        - cost:
            amount: 0
            currencyCode: USD
          createdOn: "1470021420"
          offeringStatus:
            type: RENEW
            effectiveOn: "1472688000"
            offering:
              type: RECURRING
              description: Android Remote Access Unmetered Device Slot
              id: D68B3C05-1BA6-4360-BC69-12345EXAMPLE
              platform: ANDROID
            quantity: 0
          transactionId: 03728003-d1ea-4851-abd6-12345EXAMPLE
        - cost:
            amount: 250
            currencyCode: USD
          createdOn: "1470021420"
          offeringStatus:
            type: PURCHASE
            effectiveOn: "1470021420"
            offering:
              type: RECURRING
              description: Android Remote Access Unmetered Device Slot
              id: D68B3C05-1BA6-4360-BC69-12345EXAMPLE
              platform: ANDROID
            quantity: 1
          transactionId: 56820b6e-06bd-473a-8ff8-12345EXAMPLE
        - cost:
            amount: 175
            currencyCode: USD
          createdOn: "1465538520"
          offeringStatus:
            type: PURCHASE
            effectiveOn: "1465538520"
            offering:
              type: RECURRING
              description: Android Unmetered Device Slot
              id: 8980F81C-00D7-469D-8EC6-12345EXAMPLE
              platform: ANDROID
            quantity: 1
          transactionId: 953ae2c6-d760-4a04-9597-12345EXAMPLE
        - cost:
            amount: 8.07
            currencyCode: USD
          createdOn: "1459344300"
          offeringStatus:
            type: PURCHASE
            effectiveOn: "1459344300"
            offering:
              type: RECURRING
              description: iOS Unmetered Device Slot
              id: A53D4D73-A6F6-4B82-A0B0-12345EXAMPLE
              platform: IOS
            quantity: 1
          transactionId: 2baf9021-ae3e-47f5-ab52-12345EXAMPLE
      properties:
        offeringTransactions:
          allOf:
          - $ref: '#/components/schemas/OfferingTransactions'
          - description: The audit log of subscriptions you have purchased and modified
              through AWS Device Farm.
        nextToken:
          allOf:
          - $ref: '#/components/schemas/PaginationToken'
          - description: "An identifier that was returned from the previous call to\
              \ this operation, which can be used to return the next set of items\
              \ in the list."
      type: object
    ListOfferingTransactionsRequest:
      description: Represents the request to list the offering transaction history.
      example:
        nextToken: ""
      properties:
        nextToken:
          allOf:
          - $ref: '#/components/schemas/PaginationToken'
          - description: "An identifier that was returned from the previous call to\
              \ this operation, which can be used to return the next set of items\
              \ in the list."
      title: ListOfferingTransactionsRequest
      type: object
    ListOfferingsResult:
      description: Represents the return values of the list of offerings.
      example:
        offerings:
        - type: RECURRING
          description: iOS Unmetered Device Slot
          id: A53D4D73-A6F6-4B82-A0B0-12345EXAMPLE
          platform: IOS
          recurringCharges:
          - cost:
              amount: 250
              currencyCode: USD
            frequency: MONTHLY
        - type: RECURRING
          description: Android Unmetered Device Slot
          id: 8980F81C-00D7-469D-8EC6-12345EXAMPLE
          platform: ANDROID
          recurringCharges:
          - cost:
              amount: 250
              currencyCode: USD
            frequency: MONTHLY
        - type: RECURRING
          description: Android Remote Access Unmetered Device Slot
          id: D68B3C05-1BA6-4360-BC69-12345EXAMPLE
          platform: ANDROID
          recurringCharges:
          - cost:
              amount: 250
              currencyCode: USD
            frequency: MONTHLY
        - type: RECURRING
          description: iOS Remote Access Unmetered Device Slot
          id: 552B4DAD-A6C9-45C4-94FB-12345EXAMPLE
          platform: IOS
          recurringCharges:
          - cost:
              amount: 250
              currencyCode: USD
            frequency: MONTHLY
      properties:
        offerings:
          allOf:
          - $ref: '#/components/schemas/Offerings'
          - description: A value that represents the list offering results.
        nextToken:
          allOf:
          - $ref: '#/components/schemas/PaginationToken'
          - description: "An identifier that was returned from the previous call to\
              \ this operation, which can be used to return the next set of items\
              \ in the list."
      type: object
    ListOfferingsRequest:
      description: Represents the request to list all offerings.
      example:
        nextToken: ""
      properties:
        nextToken:
          allOf:
          - $ref: '#/components/schemas/PaginationToken'
          - description: "An identifier that was returned from the previous call to\
              \ this operation, which can be used to return the next set of items\
              \ in the list."
      title: ListOfferingsRequest
      type: object
    ListProjectsResult:
      description: Represents the result of a list projects request.
      example:
        projects:
        - name: My Test Project
          arn: arn:aws:devicefarm:us-west-2:123456789101:project:7ad300ed-8183-41a7-bf94-12345EXAMPLE
          created: "1453163262.105"
        - name: Hello World
          arn: arn:aws:devicefarm:us-west-2:123456789101:project:d6b087d9-56db-4e44-b9ec-12345EXAMPLE
          created: "1470350112.439"
      properties:
        projects:
          allOf:
          - $ref: '#/components/schemas/Projects'
          - description: Information about the projects.
        nextToken:
          allOf:
          - $ref: '#/components/schemas/PaginationToken'
          - description: "If the number of items that are returned is significantly\
              \ large, this is an identifier that is also returned. It can be used\
              \ in a subsequent call to this operation to return the next set of items\
              \ in the list."
      type: object
    ListProjectsRequest:
      description: Represents a request to the list projects operation.
      example:
        nextToken: ""
        arn: ""
      properties:
        arn:
          allOf:
          - $ref: '#/components/schemas/AmazonResourceName'
          - description: "Optional. If no Amazon Resource Name (ARN) is specified,\
              \ then AWS Device Farm returns a list of all projects for the AWS account.\
              \ You can also specify a project ARN."
        nextToken:
          allOf:
          - $ref: '#/components/schemas/PaginationToken'
          - description: "An identifier that was returned from the previous call to\
              \ this operation, which can be used to return the next set of items\
              \ in the list."
      title: ListProjectsRequest
      type: object
    ListRemoteAccessSessionsResult:
      description: Represents the response from the server after AWS Device Farm makes
        a request to return information about the remote access session.
      example:
        remoteAccessSessions: []
      properties:
        remoteAccessSessions:
          allOf:
          - $ref: '#/components/schemas/RemoteAccessSessions'
          - description: A container that represents the metadata from the service
              about each remote access session you are requesting.
        nextToken:
          allOf:
          - $ref: '#/components/schemas/PaginationToken'
          - description: "An identifier that was returned from the previous call to\
              \ this operation, which can be used to return the next set of items\
              \ in the list."
      type: object
    ListRemoteAccessSessionsRequest:
      description: Represents the request to return information about the remote access
        session.
      example:
        nextToken: ""
        arn: ""
      properties:
        arn:
          allOf:
          - $ref: '#/components/schemas/AmazonResourceName'
          - description: The Amazon Resource Name (ARN) of the project about which
              you are requesting information.
        nextToken:
          allOf:
          - $ref: '#/components/schemas/PaginationToken'
          - description: "An identifier that was returned from the previous call to\
              \ this operation, which can be used to return the next set of items\
              \ in the list."
      required:
      - arn
      title: ListRemoteAccessSessionsRequest
      type: object
    ListRunsResult:
      description: Represents the result of a list runs request.
      example:
        runs:
        - name: My Test Run
          type: BUILTIN_EXPLORER
          arn: arn:aws:devicefarm:us-west-2:123456789101:run:5e01a8c7-c861-4c0a-b1d5-5ec6e6c6dd23/0fcac17b-6122-44d7-ae5a-12345EXAMPLE
          billingMethod: METERED
          completedJobs: 0
          counters:
            errored: 0
            failed: 0
            passed: 0
            skipped: 0
            stopped: 0
            total: 0
            warned: 0
          created: "1472667509.852"
          deviceMinutes:
            metered: 0
            total: 0
            unmetered: 0
          platform: ANDROID
          result: PENDING
          status: RUNNING
          totalJobs: 3
      properties:
        runs:
          allOf:
          - $ref: '#/components/schemas/Runs'
          - description: Information about the runs.
        nextToken:
          allOf:
          - $ref: '#/components/schemas/PaginationToken'
          - description: "If the number of items that are returned is significantly\
              \ large, this is an identifier that is also returned. It can be used\
              \ in a subsequent call to this operation to return the next set of items\
              \ in the list."
      type: object
    ListRunsRequest:
      description: Represents a request to the list runs operation.
      example:
        nextToken: ""
        arn: ""
      properties:
        arn:
          allOf:
          - $ref: '#/components/schemas/AmazonResourceName'
          - description: The Amazon Resource Name (ARN) of the project for which you
              want to list runs.
        nextToken:
          allOf:
          - $ref: '#/components/schemas/PaginationToken'
          - description: "An identifier that was returned from the previous call to\
              \ this operation, which can be used to return the next set of items\
              \ in the list."
      required:
      - arn
      title: ListRunsRequest
      type: object
    ListSamplesResult:
      description: Represents the result of a list samples request.
      example:
        samples: []
      properties:
        samples:
          allOf:
          - $ref: '#/components/schemas/Samples'
          - description: Information about the samples.
        nextToken:
          allOf:
          - $ref: '#/components/schemas/PaginationToken'
          - description: "If the number of items that are returned is significantly\
              \ large, this is an identifier that is also returned. It can be used\
              \ in a subsequent call to this operation to return the next set of items\
              \ in the list."
      type: object
    ListSamplesRequest:
      description: Represents a request to the list samples operation.
      example:
        nextToken: ""
        arn: ""
      properties:
        arn:
          allOf:
          - $ref: '#/components/schemas/AmazonResourceName'
          - description: The Amazon Resource Name (ARN) of the job used to list samples.
        nextToken:
          allOf:
          - $ref: '#/components/schemas/PaginationToken'
          - description: "An identifier that was returned from the previous call to\
              \ this operation, which can be used to return the next set of items\
              \ in the list."
      required:
      - arn
      title: ListSamplesRequest
      type: object
    ListSuitesResult:
      description: Represents the result of a list suites request.
      example:
        suites: []
      properties:
        suites:
          allOf:
          - $ref: '#/components/schemas/Suites'
          - description: Information about the suites.
        nextToken:
          allOf:
          - $ref: '#/components/schemas/PaginationToken'
          - description: "If the number of items that are returned is significantly\
              \ large, this is an identifier that is also returned. It can be used\
              \ in a subsequent call to this operation to return the next set of items\
              \ in the list."
      type: object
    ListSuitesRequest:
      description: Represents a request to the list suites operation.
      example:
        nextToken: ""
        arn: ""
      properties:
        arn:
          allOf:
          - $ref: '#/components/schemas/AmazonResourceName'
          - description: The job's Amazon Resource Name (ARN).
        nextToken:
          allOf:
          - $ref: '#/components/schemas/PaginationToken'
          - description: "An identifier that was returned from the previous call to\
              \ this operation, which can be used to return the next set of items\
              \ in the list."
      required:
      - arn
      title: ListSuitesRequest
      type: object
    ListTagsForResourceResponse:
      example:
        Tags: ""
      properties:
        Tags:
          allOf:
          - $ref: '#/components/schemas/TagList'
          - description: The tags to add to the resource. A tag is an array of key-value
              pairs. Tag keys can have a maximum character length of 128 characters.
              Tag values can have a maximum length of 256 characters.
      type: object
    ListTagsForResourceRequest:
      example:
        ResourceARN: ""
      properties:
        ResourceARN:
          allOf:
          - $ref: '#/components/schemas/DeviceFarmArn'
          - description: "The Amazon Resource Name (ARN) of the resource or resources\
              \ for which to list tags. You can associate tags with the following\
              \ Device Farm resources: <code>PROJECT</code>, <code>RUN</code>, <code>NETWORK_PROFILE</code>,\
              \ <code>INSTANCE_PROFILE</code>, <code>DEVICE_INSTANCE</code>, <code>SESSION</code>,\
              \ <code>DEVICE_POOL</code>, <code>DEVICE</code>, and <code>VPCE_CONFIGURATION</code>."
      required:
      - ResourceARN
      title: ListTagsForResourceRequest
      type: object
    ListTestGridProjectsResult:
      example:
        testGridProjects: ""
        nextToken: ""
      properties:
        testGridProjects:
          allOf:
          - $ref: '#/components/schemas/TestGridProjects'
          - description: "The list of TestGridProjects, based on a <a>ListTestGridProjectsRequest</a>."
        nextToken:
          allOf:
          - $ref: '#/components/schemas/PaginationToken'
          - description: Used for pagination. Pass into <a>ListTestGridProjects</a>
              to get more results in a paginated request.
      type: object
    ListTestGridProjectsRequest:
      example:
        maxResult: ""
        nextToken: ""
      properties:
        maxResult:
          allOf:
          - $ref: '#/components/schemas/MaxPageSize'
          - description: Return no more than this number of results.
        nextToken:
          allOf:
          - $ref: '#/components/schemas/PaginationToken'
          - description: "From a response, used to continue a paginated listing. "
      title: ListTestGridProjectsRequest
      type: object
    ListTestGridSessionActionsResult:
      example:
        nextToken: ""
        actions: ""
      properties:
        actions:
          allOf:
          - $ref: '#/components/schemas/TestGridSessionActions'
          - description: The action taken by the session.
        nextToken:
          allOf:
          - $ref: '#/components/schemas/PaginationToken'
          - description: Pagination token.
      type: object
    ListTestGridSessionActionsRequest:
      example:
        maxResult: ""
        nextToken: ""
        sessionArn: ""
      properties:
        sessionArn:
          allOf:
          - $ref: '#/components/schemas/DeviceFarmArn'
          - description: The ARN of the session to retrieve.
        maxResult:
          allOf:
          - $ref: '#/components/schemas/MaxPageSize'
          - description: The maximum number of sessions to return per response.
        nextToken:
          allOf:
          - $ref: '#/components/schemas/PaginationToken'
          - description: Pagination token.
      required:
      - sessionArn
      title: ListTestGridSessionActionsRequest
      type: object
    ListTestGridSessionArtifactsResult:
      example:
        nextToken: ""
        artifacts: ""
      properties:
        artifacts:
          allOf:
          - $ref: '#/components/schemas/TestGridSessionArtifacts'
          - description: A list of test grid session artifacts for a <a>TestGridSession</a>.
        nextToken:
          allOf:
          - $ref: '#/components/schemas/PaginationToken'
          - description: Pagination token.
      type: object
    ListTestGridSessionArtifactsRequest:
      example:
        maxResult: ""
        nextToken: ""
        sessionArn: ""
        type: ""
      properties:
        sessionArn:
          allOf:
          - $ref: '#/components/schemas/DeviceFarmArn'
          - description: 'The ARN of a <a>TestGridSession</a>. '
        type:
          allOf:
          - $ref: '#/components/schemas/TestGridSessionArtifactCategory'
          - description: Limit results to a specified type of artifact.
        maxResult:
          allOf:
          - $ref: '#/components/schemas/MaxPageSize'
          - description: The maximum number of results to be returned by a request.
        nextToken:
          allOf:
          - $ref: '#/components/schemas/PaginationToken'
          - description: Pagination token.
      required:
      - sessionArn
      title: ListTestGridSessionArtifactsRequest
      type: object
    ListTestGridSessionsResult:
      example:
        nextToken: ""
        testGridSessions: ""
      properties:
        testGridSessions:
          allOf:
          - $ref: '#/components/schemas/TestGridSessions'
          - description: 'The sessions that match the criteria in a <a>ListTestGridSessionsRequest</a>. '
        nextToken:
          allOf:
          - $ref: '#/components/schemas/PaginationToken'
          - description: Pagination token.
      type: object
    ListTestGridSessionsRequest:
      example:
        projectArn: ""
        maxResult: ""
        nextToken: ""
        creationTimeAfter: ""
        endTimeAfter: ""
        endTimeBefore: ""
        creationTimeBefore: ""
        status: ""
      properties:
        projectArn:
          allOf:
          - $ref: '#/components/schemas/DeviceFarmArn'
          - description: ARN of a <a>TestGridProject</a>.
        status:
          allOf:
          - $ref: '#/components/schemas/TestGridSessionStatus'
          - description: Return only sessions in this state.
        creationTimeAfter:
          allOf:
          - $ref: '#/components/schemas/DateTime'
          - description: Return only sessions created after this time.
        creationTimeBefore:
          allOf:
          - $ref: '#/components/schemas/DateTime'
          - description: Return only sessions created before this time.
        endTimeAfter:
          allOf:
          - $ref: '#/components/schemas/DateTime'
          - description: Return only sessions that ended after this time.
        endTimeBefore:
          allOf:
          - $ref: '#/components/schemas/DateTime'
          - description: Return only sessions that ended before this time.
        maxResult:
          allOf:
          - $ref: '#/components/schemas/MaxPageSize'
          - description: Return only this many results at a time.
        nextToken:
          allOf:
          - $ref: '#/components/schemas/PaginationToken'
          - description: Pagination token.
      required:
      - projectArn
      title: ListTestGridSessionsRequest
      type: object
    ListTestsResult:
      description: Represents the result of a list tests request.
      example:
        tests: []
      properties:
        tests:
          allOf:
          - $ref: '#/components/schemas/Tests'
          - description: Information about the tests.
        nextToken:
          allOf:
          - $ref: '#/components/schemas/PaginationToken'
          - description: "If the number of items that are returned is significantly\
              \ large, this is an identifier that is also returned. It can be used\
              \ in a subsequent call to this operation to return the next set of items\
              \ in the list."
      type: object
    ListTestsRequest:
      description: Represents a request to the list tests operation.
      example:
        nextToken: ""
        arn: ""
      properties:
        arn:
          allOf:
          - $ref: '#/components/schemas/AmazonResourceName'
          - description: The test suite's Amazon Resource Name (ARN).
        nextToken:
          allOf:
          - $ref: '#/components/schemas/PaginationToken'
          - description: "An identifier that was returned from the previous call to\
              \ this operation, which can be used to return the next set of items\
              \ in the list."
      required:
      - arn
      title: ListTestsRequest
      type: object
    ListUniqueProblemsResult:
      description: Represents the result of a list unique problems request.
      example:
        uniqueProblems: {}
      properties:
        uniqueProblems:
          allOf:
          - $ref: '#/components/schemas/UniqueProblemsByExecutionResultMap'
          - description: <p>Information about the unique problems.</p> <p>Allowed
              values include:</p> <ul> <li> <p>PENDING</p> </li> <li> <p>PASSED</p>
              </li> <li> <p>WARNED</p> </li> <li> <p>FAILED</p> </li> <li> <p>SKIPPED</p>
              </li> <li> <p>ERRORED</p> </li> <li> <p>STOPPED</p> </li> </ul>
        nextToken:
          allOf:
          - $ref: '#/components/schemas/PaginationToken'
          - description: "If the number of items that are returned is significantly\
              \ large, this is an identifier that is also returned. It can be used\
              \ in a subsequent call to this operation to return the next set of items\
              \ in the list."
      type: object
    ListUniqueProblemsRequest:
      description: Represents a request to the list unique problems operation.
      example:
        nextToken: ""
        arn: ""
      properties:
        arn:
          allOf:
          - $ref: '#/components/schemas/AmazonResourceName'
          - description: The unique problems' ARNs.
        nextToken:
          allOf:
          - $ref: '#/components/schemas/PaginationToken'
          - description: "An identifier that was returned from the previous call to\
              \ this operation, which can be used to return the next set of items\
              \ in the list."
      required:
      - arn
      title: ListUniqueProblemsRequest
      type: object
    ListUploadsResult:
      description: Represents the result of a list uploads request.
      example:
        uploads: []
      properties:
        uploads:
          allOf:
          - $ref: '#/components/schemas/Uploads'
          - description: Information about the uploads.
        nextToken:
          allOf:
          - $ref: '#/components/schemas/PaginationToken'
          - description: "If the number of items that are returned is significantly\
              \ large, this is an identifier that is also returned. It can be used\
              \ in a subsequent call to this operation to return the next set of items\
              \ in the list."
      type: object
    ListUploadsRequest:
      description: Represents a request to the list uploads operation.
      example:
        nextToken: ""
        arn: ""
        type: ""
      properties:
        arn:
          allOf:
          - $ref: '#/components/schemas/AmazonResourceName'
          - description: The Amazon Resource Name (ARN) of the project for which you
              want to list uploads.
        type:
          allOf:
          - $ref: '#/components/schemas/UploadType'
          - description: <p>The type of upload.</p> <p>Must be one of the following
              values:</p> <ul> <li> <p>ANDROID_APP</p> </li> <li> <p>IOS_APP</p> </li>
              <li> <p>WEB_APP</p> </li> <li> <p>EXTERNAL_DATA</p> </li> <li> <p>APPIUM_JAVA_JUNIT_TEST_PACKAGE</p>
              </li> <li> <p>APPIUM_JAVA_TESTNG_TEST_PACKAGE</p> </li> <li> <p>APPIUM_PYTHON_TEST_PACKAGE</p>
              </li> <li> <p>APPIUM_NODE_TEST_PACKAGE</p> </li> <li> <p>APPIUM_RUBY_TEST_PACKAGE</p>
              </li> <li> <p>APPIUM_WEB_JAVA_JUNIT_TEST_PACKAGE</p> </li> <li> <p>APPIUM_WEB_JAVA_TESTNG_TEST_PACKAGE</p>
              </li> <li> <p>APPIUM_WEB_PYTHON_TEST_PACKAGE</p> </li> <li> <p>APPIUM_WEB_NODE_TEST_PACKAGE</p>
              </li> <li> <p>APPIUM_WEB_RUBY_TEST_PACKAGE</p> </li> <li> <p>CALABASH_TEST_PACKAGE</p>
              </li> <li> <p>INSTRUMENTATION_TEST_PACKAGE</p> </li> <li> <p>UIAUTOMATION_TEST_PACKAGE</p>
              </li> <li> <p>UIAUTOMATOR_TEST_PACKAGE</p> </li> <li> <p>XCTEST_TEST_PACKAGE</p>
              </li> <li> <p>XCTEST_UI_TEST_PACKAGE</p> </li> <li> <p>APPIUM_JAVA_JUNIT_TEST_SPEC</p>
              </li> <li> <p>APPIUM_JAVA_TESTNG_TEST_SPEC</p> </li> <li> <p>APPIUM_PYTHON_TEST_SPEC</p>
              </li> <li> <p>APPIUM_NODE_TEST_SPEC</p> </li> <li> <p> APPIUM_RUBY_TEST_SPEC</p>
              </li> <li> <p>APPIUM_WEB_JAVA_JUNIT_TEST_SPEC</p> </li> <li> <p>APPIUM_WEB_JAVA_TESTNG_TEST_SPEC</p>
              </li> <li> <p>APPIUM_WEB_PYTHON_TEST_SPEC</p> </li> <li> <p>APPIUM_WEB_NODE_TEST_SPEC</p>
              </li> <li> <p>APPIUM_WEB_RUBY_TEST_SPEC</p> </li> <li> <p>INSTRUMENTATION_TEST_SPEC</p>
              </li> <li> <p>XCTEST_UI_TEST_SPEC</p> </li> </ul>
        nextToken:
          allOf:
          - $ref: '#/components/schemas/PaginationToken'
          - description: "An identifier that was returned from the previous call to\
              \ this operation, which can be used to return the next set of items\
              \ in the list."
      required:
      - arn
      title: ListUploadsRequest
      type: object
    ListVPCEConfigurationsResult:
      example:
        vpceConfigurations: ""
        nextToken: ""
      properties:
        vpceConfigurations:
          allOf:
          - $ref: '#/components/schemas/VPCEConfigurations'
          - description: An array of <code>VPCEConfiguration</code> objects that contain
              information about your VPC endpoint configuration.
        nextToken:
          allOf:
          - $ref: '#/components/schemas/PaginationToken'
          - description: "An identifier that was returned from the previous call to\
              \ this operation, which can be used to return the next set of items\
              \ in the list."
      type: object
    ListVPCEConfigurationsRequest:
      example:
        maxResults: ""
        nextToken: ""
      properties:
        maxResults:
          allOf:
          - $ref: '#/components/schemas/Integer'
          - description: An integer that specifies the maximum number of items you
              want to return in the API response.
        nextToken:
          allOf:
          - $ref: '#/components/schemas/PaginationToken'
          - description: "An identifier that was returned from the previous call to\
              \ this operation, which can be used to return the next set of items\
              \ in the list."
      title: ListVPCEConfigurationsRequest
      type: object
    PurchaseOfferingResult:
      description: "The result of the purchase offering (for example, success or failure)."
      example:
        offeringTransaction:
          cost:
            amount: 8.07
            currencyCode: USD
          createdOn: "1472648340"
          offeringStatus:
            type: PURCHASE
            effectiveOn: "1472648340"
            offering:
              type: RECURRING
              description: Android Remote Access Unmetered Device Slot
              id: D68B3C05-1BA6-4360-BC69-12345EXAMPLE
              platform: ANDROID
            quantity: 1
          transactionId: d30614ed-1b03-404c-9893-12345EXAMPLE
      properties:
        offeringTransaction:
          $ref: '#/components/schemas/PurchaseOfferingResult_offeringTransaction'
      type: object
    PurchaseOfferingRequest:
      description: Represents a request for a purchase offering.
      example:
        offeringPromotionId: ""
        quantity: ""
        offeringId: ""
      properties:
        offeringId:
          allOf:
          - $ref: '#/components/schemas/OfferingIdentifier'
          - description: The ID of the offering.
        quantity:
          allOf:
          - $ref: '#/components/schemas/Integer'
          - description: The number of device slots to purchase in an offering request.
        offeringPromotionId:
          allOf:
          - $ref: '#/components/schemas/OfferingPromotionIdentifier'
          - description: The ID of the offering promotion to be applied to the purchase.
      required:
      - offeringId
      - quantity
      title: PurchaseOfferingRequest
      type: object
    RenewOfferingResult:
      description: The result of a renewal offering.
      example:
        offeringTransaction:
          cost:
            amount: 250
            currencyCode: USD
          createdOn: "1472648880"
          offeringStatus:
            type: RENEW
            effectiveOn: "1472688000"
            offering:
              type: RECURRING
              description: Android Remote Access Unmetered Device Slot
              id: D68B3C05-1BA6-4360-BC69-12345EXAMPLE
              platform: ANDROID
            quantity: 1
          transactionId: e90f1405-8c35-4561-be43-12345EXAMPLE
      properties:
        offeringTransaction:
          $ref: '#/components/schemas/RenewOfferingResult_offeringTransaction'
      type: object
    RenewOfferingRequest:
      description: A request that represents an offering renewal.
      example:
        quantity: ""
        offeringId: ""
      properties:
        offeringId:
          allOf:
          - $ref: '#/components/schemas/OfferingIdentifier'
          - description: The ID of a request to renew an offering.
        quantity:
          allOf:
          - $ref: '#/components/schemas/Integer'
          - description: The quantity requested in an offering renewal.
      required:
      - offeringId
      - quantity
      title: RenewOfferingRequest
      type: object
    ScheduleRunResult:
      description: Represents the result of a schedule run request.
      example:
        run: {}
      properties:
        run:
          $ref: '#/components/schemas/ScheduleRunResult_run'
      type: object
    ScheduleRunRequest:
      description: Represents a request to the schedule run operation.
      example:
        projectArn: ""
        executionConfiguration:
          videoCapture: ""
          appPackagesCleanup: ""
          jobTimeoutMinutes: ""
          skipAppResign: ""
          accountsCleanup: ""
        test:
          filter: ""
          testSpecArn: ""
          testPackageArn: ""
          type: ""
          parameters: ""
        configuration:
          extraDataPackageArn: ""
          radios:
            wifi: ""
            bluetooth: ""
            nfc: ""
            gps: ""
          billingMethod: ""
          vpceConfigurationArns: ""
          auxiliaryApps: ""
          location:
            latitude: ""
            longitude: ""
          networkProfileArn: ""
          locale: ""
          customerArtifactPaths:
            iosPaths: ""
            androidPaths: ""
            deviceHostPaths: ""
        deviceSelectionConfiguration:
          maxDevices: ""
          filters: ""
        appArn: ""
        name: ""
        devicePoolArn: ""
      properties:
        projectArn:
          allOf:
          - $ref: '#/components/schemas/AmazonResourceName'
          - description: The ARN of the project for the run to be scheduled.
        appArn:
          allOf:
          - $ref: '#/components/schemas/AmazonResourceName'
          - description: "The ARN of an application package to run tests against,\
              \ created with <a>CreateUpload</a>. See <a>ListUploads</a>."
        devicePoolArn:
          allOf:
          - $ref: '#/components/schemas/AmazonResourceName'
          - description: The ARN of the device pool for the run to be scheduled.
        deviceSelectionConfiguration:
          $ref: '#/components/schemas/ScheduleRunRequest_deviceSelectionConfiguration'
        name:
          allOf:
          - $ref: '#/components/schemas/Name'
          - description: The name for the run to be scheduled.
        test:
          $ref: '#/components/schemas/ScheduleRunRequest_test'
        configuration:
          $ref: '#/components/schemas/ScheduleRunRequest_configuration'
        executionConfiguration:
          $ref: '#/components/schemas/ScheduleRunRequest_executionConfiguration'
      required:
      - projectArn
      - test
      title: ScheduleRunRequest
      type: object
    IdempotencyException: {}
    StopJobResult:
      example:
        job:
          videoCapture: ""
          stopped: ""
          counters:
            total: ""
            stopped: ""
            warned: ""
            passed: ""
            failed: ""
            errored: ""
            skipped: ""
          deviceMinutes:
            total: ""
            unmetered: ""
            metered: ""
          created: ""
          started: ""
          type: ""
          message: ""
          videoEndpoint: ""
          result: ""
          name: ""
          arn: ""
          device:
            fleetName: ""
            image: ""
            memory: ""
            os: ""
            modelId: ""
            instances: ""
            formFactor: ""
            cpu:
              clock: ""
              frequency: ""
              architecture: ""
            heapSize: ""
            remoteAccessEnabled: ""
            availability: ""
            resolution:
              width: ""
              height: ""
            platform: ""
            remoteDebugEnabled: ""
            manufacturer: ""
            radio: ""
            carrier: ""
            fleetType: ""
            name: ""
            model: ""
            arn: ""
          instanceArn: ""
          status: ""
      properties:
        job:
          $ref: '#/components/schemas/StopJobResult_job'
      type: object
    StopJobRequest:
      example:
        arn: ""
      properties:
        arn:
          allOf:
          - $ref: '#/components/schemas/AmazonResourceName'
          - description: Represents the Amazon Resource Name (ARN) of the Device Farm
              job to stop.
      required:
      - arn
      title: StopJobRequest
      type: object
    StopRemoteAccessSessionResult:
      description: Represents the response from the server that describes the remote
        access session when AWS Device Farm stops the session.
      example:
        remoteAccessSession:
          stopped: ""
          clientId: ""
          interactionMode: ""
          deviceMinutes:
            total: ""
            unmetered: ""
            metered: ""
          created: ""
          billingMethod: ""
          skipAppResign: ""
          started: ""
          message: ""
          remoteDebugEnabled: ""
          remoteRecordAppArn: ""
          result: ""
          deviceUdid: ""
          remoteRecordEnabled: ""
          endpoint: ""
          vpcConfig:
            securityGroupIds: ""
            vpcId: ""
            subnetIds: ""
          name: ""
          hostAddress: ""
          arn: ""
          device:
            fleetName: ""
            image: ""
            memory: ""
            os: ""
            modelId: ""
            instances: ""
            formFactor: ""
            cpu:
              clock: ""
              frequency: ""
              architecture: ""
            heapSize: ""
            remoteAccessEnabled: ""
            availability: ""
            resolution:
              width: ""
              height: ""
            platform: ""
            remoteDebugEnabled: ""
            manufacturer: ""
            radio: ""
            carrier: ""
            fleetType: ""
            name: ""
            model: ""
            arn: ""
          instanceArn: ""
          status: ""
      properties:
        remoteAccessSession:
          $ref: '#/components/schemas/StopRemoteAccessSessionResult_remoteAccessSession'
      type: object
    StopRemoteAccessSessionRequest:
      description: Represents the request to stop the remote access session.
      example:
        arn: ""
      properties:
        arn:
          allOf:
          - $ref: '#/components/schemas/AmazonResourceName'
          - description: The Amazon Resource Name (ARN) of the remote access session
              to stop.
      required:
      - arn
      title: StopRemoteAccessSessionRequest
      type: object
    StopRunResult:
      description: Represents the results of your stop run attempt.
      example:
        run: {}
      properties:
        run:
          $ref: '#/components/schemas/StopRunResult_run'
      type: object
    StopRunRequest:
      description: Represents the request to stop a specific run.
      example:
        arn: ""
      properties:
        arn:
          allOf:
          - $ref: '#/components/schemas/AmazonResourceName'
          - description: Represents the Amazon Resource Name (ARN) of the Device Farm
              run to stop.
      required:
      - arn
      title: StopRunRequest
      type: object
    TagResourceResponse:
      properties: {}
      type: object
    TagResourceRequest:
      example:
        ResourceARN: ""
        Tags: ""
      properties:
        ResourceARN:
          allOf:
          - $ref: '#/components/schemas/DeviceFarmArn'
          - description: "The Amazon Resource Name (ARN) of the resource or resources\
              \ to which to add tags. You can associate tags with the following Device\
              \ Farm resources: <code>PROJECT</code>, <code>RUN</code>, <code>NETWORK_PROFILE</code>,\
              \ <code>INSTANCE_PROFILE</code>, <code>DEVICE_INSTANCE</code>, <code>SESSION</code>,\
              \ <code>DEVICE_POOL</code>, <code>DEVICE</code>, and <code>VPCE_CONFIGURATION</code>."
        Tags:
          allOf:
          - $ref: '#/components/schemas/TagList'
          - description: The tags to add to the resource. A tag is an array of key-value
              pairs. Tag keys can have a maximum character length of 128 characters.
              Tag values can have a maximum length of 256 characters.
      required:
      - ResourceARN
      - Tags
      title: TagResourceRequest
      type: object
    TooManyTagsException: {}
    TagPolicyException: {}
    UntagResourceResponse:
      properties: {}
      type: object
    UntagResourceRequest:
      example:
        ResourceARN: ""
        TagKeys: ""
      properties:
        ResourceARN:
          allOf:
          - $ref: '#/components/schemas/DeviceFarmArn'
          - description: "The Amazon Resource Name (ARN) of the resource or resources\
              \ from which to delete tags. You can associate tags with the following\
              \ Device Farm resources: <code>PROJECT</code>, <code>RUN</code>, <code>NETWORK_PROFILE</code>,\
              \ <code>INSTANCE_PROFILE</code>, <code>DEVICE_INSTANCE</code>, <code>SESSION</code>,\
              \ <code>DEVICE_POOL</code>, <code>DEVICE</code>, and <code>VPCE_CONFIGURATION</code>."
        TagKeys:
          allOf:
          - $ref: '#/components/schemas/TagKeyList'
          - description: The keys of the tags to be removed.
      required:
      - ResourceARN
      - TagKeys
      title: UntagResourceRequest
      type: object
    UpdateDeviceInstanceResult:
      example:
        deviceInstance:
          instanceProfile:
            excludeAppPackagesFromCleanup: ""
            name: ""
            rebootAfterUse: ""
            description: ""
            packageCleanup: ""
            arn: ""
          deviceArn: ""
          arn: ""
          udid: ""
          labels: ""
          status: ""
      properties:
        deviceInstance:
          $ref: '#/components/schemas/GetDeviceInstanceResult_deviceInstance'
      type: object
    UpdateDeviceInstanceRequest:
      example:
        profileArn: ""
        arn: ""
        labels: ""
      properties:
        arn:
          allOf:
          - $ref: '#/components/schemas/AmazonResourceName'
          - description: The Amazon Resource Name (ARN) of the device instance.
        profileArn:
          allOf:
          - $ref: '#/components/schemas/AmazonResourceName'
          - description: The ARN of the profile that you want to associate with the
              device instance.
        labels:
          allOf:
          - $ref: '#/components/schemas/InstanceLabels'
          - description: An array of strings that you want to associate with the device
              instance.
      required:
      - arn
      title: UpdateDeviceInstanceRequest
      type: object
    UpdateDevicePoolResult:
      description: Represents the result of an update device pool request.
      example:
        devicePool: {}
      properties:
        devicePool:
          $ref: '#/components/schemas/UpdateDevicePoolResult_devicePool'
      type: object
    UpdateDevicePoolRequest:
      description: Represents a request to the update device pool operation.
      example:
        clearMaxDevices: ""
        name: ""
        maxDevices: ""
        description: ""
        rules: ""
        arn: ""
      properties:
        arn:
          allOf:
          - $ref: '#/components/schemas/AmazonResourceName'
          - description: The Amazon Resource Name (ARN) of the Device Farm device
              pool to update.
        name:
          allOf:
          - $ref: '#/components/schemas/Name'
          - description: A string that represents the name of the device pool to update.
        description:
          allOf:
          - $ref: '#/components/schemas/Message'
          - description: A description of the device pool to update.
        rules:
          allOf:
          - $ref: '#/components/schemas/Rules'
          - description: "Represents the rules to modify for the device pool. Updating\
              \ rules is optional. If you update rules for your request, the update\
              \ replaces the existing rules."
        maxDevices:
          allOf:
          - $ref: '#/components/schemas/Integer'
          - description: "<p>The number of devices that Device Farm can add to your\
              \ device pool. Device Farm adds devices that are available and that\
              \ meet the criteria that you assign for the <code>rules</code> parameter.\
              \ Depending on how many devices meet these constraints, your device\
              \ pool might contain fewer devices than the value for this parameter.</p>\
              \ <p>By specifying the maximum number of devices, you can control the\
              \ costs that you incur by running tests.</p> <p>If you use this parameter\
              \ in your request, you cannot use the <code>clearMaxDevices</code> parameter\
              \ in the same request.</p>"
        clearMaxDevices:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          - description: "<p>Sets whether the <code>maxDevices</code> parameter applies\
              \ to your device pool. If you set this parameter to <code>true</code>,\
              \ the <code>maxDevices</code> parameter does not apply, and Device Farm\
              \ does not limit the number of devices that it adds to your device pool.\
              \ In this case, Device Farm adds all available devices that meet the\
              \ criteria specified in the <code>rules</code> parameter.</p> <p>If\
              \ you use this parameter in your request, you cannot use the <code>maxDevices</code>\
              \ parameter in the same request.</p>"
      required:
      - arn
      title: UpdateDevicePoolRequest
      type: object
    UpdateInstanceProfileResult:
      example:
        instanceProfile:
          excludeAppPackagesFromCleanup: ""
          name: ""
          rebootAfterUse: ""
          description: ""
          packageCleanup: ""
          arn: ""
      properties:
        instanceProfile:
          $ref: '#/components/schemas/CreateInstanceProfileResult_instanceProfile'
      type: object
    UpdateInstanceProfileRequest:
      example:
        excludeAppPackagesFromCleanup: ""
        name: ""
        description: ""
        rebootAfterUse: ""
        packageCleanup: ""
        arn: ""
      properties:
        arn:
          allOf:
          - $ref: '#/components/schemas/AmazonResourceName'
          - description: The Amazon Resource Name (ARN) of the instance profile.
        name:
          allOf:
          - $ref: '#/components/schemas/Name'
          - description: The updated name for your instance profile.
        description:
          allOf:
          - $ref: '#/components/schemas/Message'
          - description: The updated description for your instance profile.
        packageCleanup:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          - description: The updated choice for whether you want to specify package
              cleanup. The default value is <code>false</code> for private devices.
        excludeAppPackagesFromCleanup:
          allOf:
          - $ref: '#/components/schemas/PackageIds'
          - description: <p>An array of strings that specifies the list of app packages
              that should not be cleaned up from the device after a test run is over.</p>
              <p>The list of packages is only considered if you set <code>packageCleanup</code>
              to <code>true</code>.</p>
        rebootAfterUse:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          - description: The updated choice for whether you want to reboot the device
              after use. The default value is <code>true</code>.
      required:
      - arn
      title: UpdateInstanceProfileRequest
      type: object
    UpdateNetworkProfileResult:
      example:
        networkProfile:
          uplinkLossPercent: ""
          downlinkBandwidthBits: ""
          downlinkDelayMs: ""
          uplinkJitterMs: ""
          name: ""
          description: ""
          uplinkBandwidthBits: ""
          downlinkJitterMs: ""
          arn: ""
          type: ""
          downlinkLossPercent: ""
          uplinkDelayMs: ""
      properties:
        networkProfile:
          $ref: '#/components/schemas/UpdateNetworkProfileResult_networkProfile'
      type: object
    UpdateNetworkProfileRequest:
      example:
        uplinkLossPercent: ""
        downlinkBandwidthBits: ""
        downlinkDelayMs: ""
        uplinkJitterMs: ""
        name: ""
        description: ""
        uplinkBandwidthBits: ""
        downlinkJitterMs: ""
        arn: ""
        type: ""
        downlinkLossPercent: ""
        uplinkDelayMs: ""
      properties:
        arn:
          allOf:
          - $ref: '#/components/schemas/AmazonResourceName'
          - description: The Amazon Resource Name (ARN) of the project for which you
              want to update network profile settings.
        name:
          allOf:
          - $ref: '#/components/schemas/Name'
          - description: The name of the network profile about which you are returning
              information.
        description:
          allOf:
          - $ref: '#/components/schemas/Message'
          - description: The description of the network profile about which you are
              returning information.
        type:
          allOf:
          - $ref: '#/components/schemas/NetworkProfileType'
          - description: The type of network profile to return information about.
              Valid values are listed here.
        uplinkBandwidthBits:
          allOf:
          - $ref: '#/components/schemas/Long'
          - description: "The data throughput rate in bits per second, as an integer\
              \ from 0 to 104857600."
        downlinkBandwidthBits:
          allOf:
          - $ref: '#/components/schemas/Long'
          - description: "The data throughput rate in bits per second, as an integer\
              \ from 0 to 104857600."
        uplinkDelayMs:
          allOf:
          - $ref: '#/components/schemas/Long'
          - description: Delay time for all packets to destination in milliseconds
              as an integer from 0 to 2000.
        downlinkDelayMs:
          allOf:
          - $ref: '#/components/schemas/Long'
          - description: Delay time for all packets to destination in milliseconds
              as an integer from 0 to 2000.
        uplinkJitterMs:
          allOf:
          - $ref: '#/components/schemas/Long'
          - description: Time variation in the delay of received packets in milliseconds
              as an integer from 0 to 2000.
        downlinkJitterMs:
          allOf:
          - $ref: '#/components/schemas/Long'
          - description: Time variation in the delay of received packets in milliseconds
              as an integer from 0 to 2000.
        uplinkLossPercent:
          allOf:
          - $ref: '#/components/schemas/PercentInteger'
          - description: Proportion of transmitted packets that fail to arrive from
              0 to 100 percent.
        downlinkLossPercent:
          allOf:
          - $ref: '#/components/schemas/PercentInteger'
          - description: Proportion of received packets that fail to arrive from 0
              to 100 percent.
      required:
      - arn
      title: UpdateNetworkProfileRequest
      type: object
    UpdateProjectResult:
      description: Represents the result of an update project request.
      example:
        project:
          name: NewName
          arn: arn:aws:devicefarm:us-west-2:123456789101:project:8f75187d-101e-4625-accc-12345EXAMPLE
          created: "1448400709.927"
      properties:
        project:
          $ref: '#/components/schemas/UpdateProjectResult_project'
      type: object
    UpdateProjectRequest:
      description: Represents a request to the update project operation.
      example:
        defaultJobTimeoutMinutes: ""
        vpcConfig:
          securityGroupIds: ""
          vpcId: ""
          subnetIds: ""
        name: ""
        arn: ""
      properties:
        arn:
          allOf:
          - $ref: '#/components/schemas/AmazonResourceName'
          - description: The Amazon Resource Name (ARN) of the project whose name
              to update.
        name:
          allOf:
          - $ref: '#/components/schemas/Name'
          - description: A string that represents the new name of the project that
              you are updating.
        defaultJobTimeoutMinutes:
          allOf:
          - $ref: '#/components/schemas/JobTimeoutMinutes'
          - description: The number of minutes a test run in the project executes
              before it times out.
        vpcConfig:
          $ref: '#/components/schemas/CreateProjectRequest_vpcConfig'
      required:
      - arn
      title: UpdateProjectRequest
      type: object
    UpdateTestGridProjectResult:
      example:
        testGridProject:
          created: ""
          vpcConfig:
            securityGroupIds: ""
            vpcId: ""
            subnetIds: ""
          name: ""
          description: ""
          arn: ""
      properties:
        testGridProject:
          $ref: '#/components/schemas/UpdateTestGridProjectResult_testGridProject'
      type: object
    UpdateTestGridProjectRequest:
      example:
        projectArn: ""
        vpcConfig:
          securityGroupIds: ""
          vpcId: ""
          subnetIds: ""
        name: ""
        description: ""
      properties:
        projectArn:
          allOf:
          - $ref: '#/components/schemas/DeviceFarmArn'
          - description: ARN of the project to update.
        name:
          allOf:
          - $ref: '#/components/schemas/ResourceName'
          - description: Human-readable name for the project.
        description:
          allOf:
          - $ref: '#/components/schemas/ResourceDescription'
          - description: Human-readable description for the project.
        vpcConfig:
          $ref: '#/components/schemas/CreateTestGridProjectRequest_vpcConfig'
      required:
      - projectArn
      title: UpdateTestGridProjectRequest
      type: object
    UpdateUploadResult:
      example:
        upload:
          metadata: ""
          created: ""
          name: ""
          arn: ""
          type: ""
          message: ""
          category: ""
          contentType: ""
          url: ""
          status: ""
      properties:
        upload:
          $ref: '#/components/schemas/UpdateUploadResult_upload'
      type: object
    UpdateUploadRequest:
      example:
        name: ""
        editContent: ""
        arn: ""
        contentType: ""
      properties:
        arn:
          allOf:
          - $ref: '#/components/schemas/AmazonResourceName'
          - description: The Amazon Resource Name (ARN) of the uploaded test spec.
        name:
          allOf:
          - $ref: '#/components/schemas/Name'
          - description: The upload's test spec file name. The name must not contain
              any forward slashes (/). The test spec file name must end with the <code>.yaml</code>
              or <code>.yml</code> file extension.
        contentType:
          allOf:
          - $ref: '#/components/schemas/ContentType'
          - description: "The upload's content type (for example, <code>application/x-yaml</code>)."
        editContent:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          - description: "Set to true if the YAML file has changed and must be updated.\
              \ Otherwise, set to false."
      required:
      - arn
      title: UpdateUploadRequest
      type: object
    UpdateVPCEConfigurationResult:
      example:
        vpceConfiguration:
          serviceDnsName: ""
          vpceServiceName: ""
          vpceConfigurationDescription: ""
          vpceConfigurationName: ""
          arn: ""
      properties:
        vpceConfiguration:
          $ref: '#/components/schemas/CreateVPCEConfigurationResult_vpceConfiguration'
      type: object
    UpdateVPCEConfigurationRequest:
      example:
        serviceDnsName: ""
        vpceServiceName: ""
        vpceConfigurationDescription: ""
        vpceConfigurationName: ""
        arn: ""
      properties:
        arn:
          allOf:
          - $ref: '#/components/schemas/AmazonResourceName'
          - description: The Amazon Resource Name (ARN) of the VPC endpoint configuration
              you want to update.
        vpceConfigurationName:
          allOf:
          - $ref: '#/components/schemas/VPCEConfigurationName'
          - description: The friendly name you give to your VPC endpoint configuration
              to manage your configurations more easily.
        vpceServiceName:
          allOf:
          - $ref: '#/components/schemas/VPCEServiceName'
          - description: The name of the VPC endpoint service running in your AWS
              account that you want Device Farm to test.
        serviceDnsName:
          allOf:
          - $ref: '#/components/schemas/ServiceDnsName'
          - description: The DNS (domain) name used to connect to your private service
              in your VPC. The DNS name must not already be in use on the internet.
        vpceConfigurationDescription:
          allOf:
          - $ref: '#/components/schemas/VPCEConfigurationDescription'
          - description: An optional description that provides details about your
              VPC endpoint configuration.
      required:
      - arn
      title: UpdateVPCEConfigurationRequest
      type: object
    AWSAccountNumber:
      maxLength: 16
      minLength: 2
      type: string
    PurchasedDevicesMap:
      additionalProperties:
        $ref: '#/components/schemas/Integer'
      type: object
    JobTimeoutMinutes:
      type: integer
    TrialMinutes:
      description: Represents information about free trial device minutes for an AWS
        account.
      properties:
        total:
          allOf:
          - $ref: '#/components/schemas/Double'
          - description: The total number of free trial minutes that the account started
              with.
        remaining:
          allOf:
          - $ref: '#/components/schemas/Double'
          - description: The number of free trial minutes remaining in the account.
      type: object
    MaxSlotMap:
      additionalProperties:
        $ref: '#/components/schemas/Integer'
      type: object
    SkipAppResign:
      type: boolean
    AccountSettings:
      description: A container for account-level settings in AWS Device Farm.
      properties:
        awsAccountNumber:
          allOf:
          - $ref: '#/components/schemas/AWSAccountNumber'
          - description: The AWS account number specified in the <code>AccountSettings</code>
              container.
        unmeteredDevices:
          allOf:
          - $ref: '#/components/schemas/PurchasedDevicesMap'
          - description: Returns the unmetered devices you have purchased or want
              to purchase.
        unmeteredRemoteAccessDevices:
          allOf:
          - $ref: '#/components/schemas/PurchasedDevicesMap'
          - description: Returns the unmetered remote access devices you have purchased
              or want to purchase.
        maxJobTimeoutMinutes:
          allOf:
          - $ref: '#/components/schemas/JobTimeoutMinutes'
          - description: The maximum number of minutes a test run executes before
              it times out.
        trialMinutes:
          $ref: '#/components/schemas/AccountSettings_trialMinutes'
        maxSlots:
          allOf:
          - $ref: '#/components/schemas/MaxSlotMap'
          - description: "The maximum number of device slots that the AWS account\
              \ can purchase. Each maximum is expressed as an <code>offering-id:number</code>\
              \ pair, where the <code>offering-id</code> represents one of the IDs\
              \ returned by the <code>ListOfferings</code> command."
        defaultJobTimeoutMinutes:
          allOf:
          - $ref: '#/components/schemas/JobTimeoutMinutes'
          - description: The default number of minutes (at the account level) a test
              run executes before it times out. The default value is 150 minutes.
        skipAppResign:
          allOf:
          - $ref: '#/components/schemas/SkipAppResign'
          - description: "<p>When set to <code>true</code>, for private devices, Device\
              \ Farm does not sign your app again. For public devices, Device Farm\
              \ always signs your apps again.</p> <p>For more information about how\
              \ Device Farm re-signs your apps, see <a href=\"http://aws.amazon.com/device-farm/faqs/\"\
              >Do you modify my app?</a> in the <i>AWS Device Farm FAQs</i>.</p>"
      type: object
    AccountsCleanup:
      type: boolean
    AmazonResourceName:
      maxLength: 1011
      minLength: 32
      pattern: ^arn:.+
      type: string
    AmazonResourceNames:
      items:
        $ref: '#/components/schemas/AmazonResourceName'
      type: array
    String:
      type: string
    AndroidPaths:
      items:
        $ref: '#/components/schemas/String'
      type: array
    AppPackagesCleanup:
      type: boolean
    Name:
      maxLength: 256
      minLength: 0
      type: string
    ArtifactType:
      enum:
      - UNKNOWN
      - SCREENSHOT
      - DEVICE_LOG
      - MESSAGE_LOG
      - VIDEO_LOG
      - RESULT_LOG
      - SERVICE_LOG
      - WEBKIT_LOG
      - INSTRUMENTATION_OUTPUT
      - EXERCISER_MONKEY_OUTPUT
      - CALABASH_JSON_OUTPUT
      - CALABASH_PRETTY_OUTPUT
      - CALABASH_STANDARD_OUTPUT
      - CALABASH_JAVA_XML_OUTPUT
      - AUTOMATION_OUTPUT
      - APPIUM_SERVER_OUTPUT
      - APPIUM_JAVA_OUTPUT
      - APPIUM_JAVA_XML_OUTPUT
      - APPIUM_PYTHON_OUTPUT
      - APPIUM_PYTHON_XML_OUTPUT
      - EXPLORER_EVENT_LOG
      - EXPLORER_SUMMARY_LOG
      - APPLICATION_CRASH_REPORT
      - XCTEST_LOG
      - VIDEO
      - CUSTOMER_ARTIFACT
      - CUSTOMER_ARTIFACT_LOG
      - TESTSPEC_OUTPUT
      type: string
    URL:
      maxLength: 2048
      minLength: 0
      type: string
    Artifact:
      description: Represents the output of a test. Examples of artifacts include
        logs and screenshots.
      properties:
        arn:
          allOf:
          - $ref: '#/components/schemas/AmazonResourceName'
          - description: The artifact's ARN.
        name:
          allOf:
          - $ref: '#/components/schemas/Name'
          - description: The artifact's name.
        type:
          allOf:
          - $ref: '#/components/schemas/ArtifactType'
          - description: "<p>The artifact's type.</p> <p>Allowed values include the\
              \ following:</p> <ul> <li> <p>UNKNOWN</p> </li> <li> <p>SCREENSHOT</p>\
              \ </li> <li> <p>DEVICE_LOG</p> </li> <li> <p>MESSAGE_LOG</p> </li> <li>\
              \ <p>VIDEO_LOG</p> </li> <li> <p>RESULT_LOG</p> </li> <li> <p>SERVICE_LOG</p>\
              \ </li> <li> <p>WEBKIT_LOG</p> </li> <li> <p>INSTRUMENTATION_OUTPUT</p>\
              \ </li> <li> <p>EXERCISER_MONKEY_OUTPUT: the artifact (log) generated\
              \ by an Android fuzz test.</p> </li> <li> <p>CALABASH_JSON_OUTPUT</p>\
              \ </li> <li> <p>CALABASH_PRETTY_OUTPUT</p> </li> <li> <p>CALABASH_STANDARD_OUTPUT</p>\
              \ </li> <li> <p>CALABASH_JAVA_XML_OUTPUT</p> </li> <li> <p>AUTOMATION_OUTPUT</p>\
              \ </li> <li> <p>APPIUM_SERVER_OUTPUT</p> </li> <li> <p>APPIUM_JAVA_OUTPUT</p>\
              \ </li> <li> <p>APPIUM_JAVA_XML_OUTPUT</p> </li> <li> <p>APPIUM_PYTHON_OUTPUT</p>\
              \ </li> <li> <p>APPIUM_PYTHON_XML_OUTPUT</p> </li> <li> <p>EXPLORER_EVENT_LOG</p>\
              \ </li> <li> <p>EXPLORER_SUMMARY_LOG</p> </li> <li> <p>APPLICATION_CRASH_REPORT</p>\
              \ </li> <li> <p>XCTEST_LOG</p> </li> <li> <p>VIDEO</p> </li> <li> <p>CUSTOMER_ARTIFACT</p>\
              \ </li> <li> <p>CUSTOMER_ARTIFACT_LOG</p> </li> <li> <p>TESTSPEC_OUTPUT</p>\
              \ </li> </ul>"
        extension:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The artifact's file extension.
        url:
          allOf:
          - $ref: '#/components/schemas/URL'
          - description: The presigned Amazon S3 URL that can be used with a GET request
              to download the artifact's file.
      type: object
    ArtifactCategory:
      enum:
      - SCREENSHOT
      - FILE
      - LOG
      type: string
    Artifacts:
      items:
        $ref: '#/components/schemas/Artifact'
      type: array
    BillingMethod:
      enum:
      - METERED
      - UNMETERED
      type: string
    Boolean:
      type: boolean
    Double:
      format: double
      type: number
    CPU:
      description: Represents the amount of CPU that an app is using on a physical
        device. Does not represent system-wide CPU usage.
      properties:
        frequency:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The CPU's frequency.
        architecture:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: "The CPU's architecture (for example, x86 or ARM)."
        clock:
          allOf:
          - $ref: '#/components/schemas/Double'
          - description: "The clock speed of the device's CPU, expressed in hertz\
              \ (Hz). For example, a 1.2 GHz CPU is expressed as 1200000000."
      type: object
    ClientId:
      maxLength: 64
      minLength: 0
      type: string
    ContentType:
      maxLength: 64
      minLength: 0
      type: string
    Integer:
      type: integer
    Counters:
      description: Represents entity counters.
      properties:
        total:
          allOf:
          - $ref: '#/components/schemas/Integer'
          - description: The total number of entities.
        passed:
          allOf:
          - $ref: '#/components/schemas/Integer'
          - description: The number of passed entities.
        failed:
          allOf:
          - $ref: '#/components/schemas/Integer'
          - description: The number of failed entities.
        warned:
          allOf:
          - $ref: '#/components/schemas/Integer'
          - description: The number of warned entities.
        errored:
          allOf:
          - $ref: '#/components/schemas/Integer'
          - description: The number of errored entities.
        stopped:
          allOf:
          - $ref: '#/components/schemas/Integer'
          - description: The number of stopped entities.
        skipped:
          allOf:
          - $ref: '#/components/schemas/Integer'
          - description: The number of skipped entities.
      type: object
    Message:
      maxLength: 16384
      minLength: 0
      type: string
    Rules:
      items:
        $ref: '#/components/schemas/Rule'
      type: array
    DevicePool:
      description: Represents a collection of device types.
      properties:
        arn:
          allOf:
          - $ref: '#/components/schemas/AmazonResourceName'
          - description: The device pool's ARN.
        name:
          allOf:
          - $ref: '#/components/schemas/Name'
          - description: The device pool's name.
        description:
          allOf:
          - $ref: '#/components/schemas/Message'
          - description: The device pool's description.
        type:
          allOf:
          - $ref: '#/components/schemas/DevicePoolType'
          - description: "<p>The device pool's type.</p> <p>Allowed values include:</p>\
              \ <ul> <li> <p>CURATED: A device pool that is created and managed by\
              \ AWS Device Farm.</p> </li> <li> <p>PRIVATE: A device pool that is\
              \ created and managed by the device pool developer.</p> </li> </ul>"
        rules:
          allOf:
          - $ref: '#/components/schemas/Rules'
          - description: Information about the device pool's rules.
        maxDevices:
          allOf:
          - $ref: '#/components/schemas/Integer'
          - description: "<p>The number of devices that Device Farm can add to your\
              \ device pool. Device Farm adds devices that are available and meet\
              \ the criteria that you assign for the <code>rules</code> parameter.\
              \ Depending on how many devices meet these constraints, your device\
              \ pool might contain fewer devices than the value for this parameter.</p>\
              \ <p>By specifying the maximum number of devices, you can control the\
              \ costs that you incur by running tests.</p>"
      type: object
    PackageIds:
      items:
        $ref: '#/components/schemas/String'
      type: array
    InstanceProfile:
      description: Represents the instance profile.
      properties:
        arn:
          allOf:
          - $ref: '#/components/schemas/AmazonResourceName'
          - description: The Amazon Resource Name (ARN) of the instance profile.
        packageCleanup:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          - description: "When set to <code>true</code>, Device Farm removes app packages\
              \ after a test run. The default value is <code>false</code> for private\
              \ devices."
        excludeAppPackagesFromCleanup:
          allOf:
          - $ref: '#/components/schemas/PackageIds'
          - description: <p>An array of strings containing the list of app packages
              that should not be cleaned up from the device after a test run completes.</p>
              <p>The list of packages is considered only if you set <code>packageCleanup</code>
              to <code>true</code>.</p>
        rebootAfterUse:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          - description: "When set to <code>true</code>, Device Farm reboots the instance\
              \ after a test run. The default value is <code>true</code>."
        name:
          allOf:
          - $ref: '#/components/schemas/Name'
          - description: The name of the instance profile.
        description:
          allOf:
          - $ref: '#/components/schemas/Message'
          - description: The description of the instance profile.
      type: object
    NetworkProfileType:
      enum:
      - CURATED
      - PRIVATE
      type: string
    Long:
      type: integer
    PercentInteger:
      maximum: 100
      minimum: 0
      type: integer
    NetworkProfile:
      description: An array of settings that describes characteristics of a network
        profile.
      properties:
        arn:
          allOf:
          - $ref: '#/components/schemas/AmazonResourceName'
          - description: The Amazon Resource Name (ARN) of the network profile.
        name:
          allOf:
          - $ref: '#/components/schemas/Name'
          - description: The name of the network profile.
        description:
          allOf:
          - $ref: '#/components/schemas/Message'
          - description: The description of the network profile.
        type:
          allOf:
          - $ref: '#/components/schemas/NetworkProfileType'
          - description: The type of network profile. Valid values are listed here.
        uplinkBandwidthBits:
          allOf:
          - $ref: '#/components/schemas/Long'
          - description: "The data throughput rate in bits per second, as an integer\
              \ from 0 to 104857600."
        downlinkBandwidthBits:
          allOf:
          - $ref: '#/components/schemas/Long'
          - description: "The data throughput rate in bits per second, as an integer\
              \ from 0 to 104857600."
        uplinkDelayMs:
          allOf:
          - $ref: '#/components/schemas/Long'
          - description: Delay time for all packets to destination in milliseconds
              as an integer from 0 to 2000.
        downlinkDelayMs:
          allOf:
          - $ref: '#/components/schemas/Long'
          - description: Delay time for all packets to destination in milliseconds
              as an integer from 0 to 2000.
        uplinkJitterMs:
          allOf:
          - $ref: '#/components/schemas/Long'
          - description: Time variation in the delay of received packets in milliseconds
              as an integer from 0 to 2000.
        downlinkJitterMs:
          allOf:
          - $ref: '#/components/schemas/Long'
          - description: Time variation in the delay of received packets in milliseconds
              as an integer from 0 to 2000.
        uplinkLossPercent:
          allOf:
          - $ref: '#/components/schemas/PercentInteger'
          - description: Proportion of transmitted packets that fail to arrive from
              0 to 100 percent.
        downlinkLossPercent:
          allOf:
          - $ref: '#/components/schemas/PercentInteger'
          - description: Proportion of received packets that fail to arrive from 0
              to 100 percent.
      type: object
    VpcConfig:
      description: Contains the VPC configuration data necessary to interface with
        AWS Device Farm's services.
      properties:
        securityGroupIds:
          allOf:
          - $ref: '#/components/schemas/VpcSecurityGroupIds'
          - description: An array of one or more security groups IDs in your Amazon
              VPC.
        subnetIds:
          allOf:
          - $ref: '#/components/schemas/VpcSubnetIds'
          - description: An array of one or more subnet IDs in your Amazon VPC.
        vpcId:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          - description: The ID of the Amazon VPC.
      required:
      - securityGroupIds
      - subnetIds
      - vpcId
      type: object
    Project:
      description: Represents an operating-system neutral workspace for running and
        managing tests.
      properties:
        arn:
          allOf:
          - $ref: '#/components/schemas/AmazonResourceName'
          - description: The project's ARN.
        name:
          allOf:
          - $ref: '#/components/schemas/Name'
          - description: The project's name.
        defaultJobTimeoutMinutes:
          allOf:
          - $ref: '#/components/schemas/JobTimeoutMinutes'
          - description: The default number of minutes (at the project level) a test
              run executes before it times out. The default value is 150 minutes.
        created:
          allOf:
          - $ref: '#/components/schemas/DateTime'
          - description: When the project was created.
        vpcConfig:
          $ref: '#/components/schemas/CreateProjectRequest_vpcConfig'
      type: object
    CreateRemoteAccessSessionConfiguration:
      description: "Configuration settings for a remote access session, including\
        \ billing method."
      properties:
        billingMethod:
          allOf:
          - $ref: '#/components/schemas/BillingMethod'
          - description: The billing method for the remote access session.
        vpceConfigurationArns:
          allOf:
          - $ref: '#/components/schemas/AmazonResourceNames'
          - description: An array of ARNs included in the VPC endpoint configuration.
      type: object
    SshPublicKey:
      maxLength: 8192
      minLength: 0
      type: string
    InteractionMode:
      enum:
      - INTERACTIVE
      - NO_VIDEO
      - VIDEO_ONLY
      maxLength: 64
      minLength: 0
      type: string
    RemoteAccessSession:
      description: Represents information about the remote access session.
      properties:
        arn:
          allOf:
          - $ref: '#/components/schemas/AmazonResourceName'
          - description: The Amazon Resource Name (ARN) of the remote access session.
        name:
          allOf:
          - $ref: '#/components/schemas/Name'
          - description: The name of the remote access session.
        created:
          allOf:
          - $ref: '#/components/schemas/DateTime'
          - description: The date and time the remote access session was created.
        status:
          allOf:
          - $ref: '#/components/schemas/ExecutionStatus'
          - description: <p>The status of the remote access session. Can be any of
              the following:</p> <ul> <li> <p>PENDING.</p> </li> <li> <p>PENDING_CONCURRENCY.</p>
              </li> <li> <p>PENDING_DEVICE.</p> </li> <li> <p>PROCESSING.</p> </li>
              <li> <p>SCHEDULING.</p> </li> <li> <p>PREPARING.</p> </li> <li> <p>RUNNING.</p>
              </li> <li> <p>COMPLETED.</p> </li> <li> <p>STOPPING.</p> </li> </ul>
        result:
          allOf:
          - $ref: '#/components/schemas/ExecutionResult'
          - description: <p>The result of the remote access session. Can be any of
              the following:</p> <ul> <li> <p>PENDING.</p> </li> <li> <p>PASSED.</p>
              </li> <li> <p>WARNED.</p> </li> <li> <p>FAILED.</p> </li> <li> <p>SKIPPED.</p>
              </li> <li> <p>ERRORED.</p> </li> <li> <p>STOPPED.</p> </li> </ul>
        message:
          allOf:
          - $ref: '#/components/schemas/Message'
          - description: A message about the remote access session.
        started:
          allOf:
          - $ref: '#/components/schemas/DateTime'
          - description: The date and time the remote access session was started.
        stopped:
          allOf:
          - $ref: '#/components/schemas/DateTime'
          - description: The date and time the remote access session was stopped.
        device:
          $ref: '#/components/schemas/RemoteAccessSession_device'
        instanceArn:
          allOf:
          - $ref: '#/components/schemas/AmazonResourceName'
          - description: The ARN of the instance.
        remoteDebugEnabled:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          - description: <p>This flag is set to <code>true</code> if remote debugging
              is enabled for the remote access session.</p> <p>Remote debugging is
              <a href="https://docs.aws.amazon.com/devicefarm/latest/developerguide/history.html">no
              longer supported</a>.</p>
        remoteRecordEnabled:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          - description: This flag is set to <code>true</code> if remote recording
              is enabled for the remote access session.
        remoteRecordAppArn:
          allOf:
          - $ref: '#/components/schemas/AmazonResourceName'
          - description: The ARN for the app to be recorded in the remote access session.
        hostAddress:
          allOf:
          - $ref: '#/components/schemas/HostAddress'
          - description: <p>IP address of the EC2 host where you need to connect to
              remotely debug devices. Only returned if remote debugging is enabled
              for the remote access session.</p> <p>Remote debugging is <a href="https://docs.aws.amazon.com/devicefarm/latest/developerguide/history.html">no
              longer supported</a>.</p>
        clientId:
          allOf:
          - $ref: '#/components/schemas/ClientId'
          - description: <p>Unique identifier of your client for the remote access
              session. Only returned if remote debugging is enabled for the remote
              access session.</p> <p>Remote debugging is <a href="https://docs.aws.amazon.com/devicefarm/latest/developerguide/history.html">no
              longer supported</a>.</p>
        billingMethod:
          allOf:
          - $ref: '#/components/schemas/BillingMethod'
          - description: "The billing method of the remote access session. Possible\
              \ values include <code>METERED</code> or <code>UNMETERED</code>. For\
              \ more information about metered devices, see <a href=\"https://docs.aws.amazon.com/devicefarm/latest/developerguide/welcome.html#welcome-terminology\"\
              >AWS Device Farm terminology</a>."
        deviceMinutes:
          $ref: '#/components/schemas/RemoteAccessSession_deviceMinutes'
        endpoint:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The endpoint for the remote access sesssion.
        deviceUdid:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: <p>Unique device identifier for the remote device. Only returned
              if remote debugging is enabled for the remote access session.</p> <p>Remote
              debugging is <a href="https://docs.aws.amazon.com/devicefarm/latest/developerguide/history.html">no
              longer supported</a>.</p>
        interactionMode:
          allOf:
          - $ref: '#/components/schemas/InteractionMode'
          - description: "<p>The interaction mode of the remote access session. Valid\
              \ values are:</p> <ul> <li> <p>INTERACTIVE: You can interact with the\
              \ iOS device by viewing, touching, and rotating the screen. You cannot\
              \ run XCUITest framework-based tests in this mode.</p> </li> <li> <p>NO_VIDEO:\
              \ You are connected to the device, but cannot interact with it or view\
              \ the screen. This mode has the fastest test execution speed. You can\
              \ run XCUITest framework-based tests in this mode.</p> </li> <li> <p>VIDEO_ONLY:\
              \ You can view the screen, but cannot touch or rotate it. You can run\
              \ XCUITest framework-based tests and watch the screen in this mode.</p>\
              \ </li> </ul>"
        skipAppResign:
          allOf:
          - $ref: '#/components/schemas/SkipAppResign'
          - description: "<p>When set to <code>true</code>, for private devices, Device\
              \ Farm does not sign your app again. For public devices, Device Farm\
              \ always signs your apps again.</p> <p>For more information about how\
              \ Device Farm re-signs your apps, see <a href=\"http://aws.amazon.com/device-farm/faqs/\"\
              >Do you modify my app?</a> in the <i>AWS Device Farm FAQs</i>.</p>"
        vpcConfig:
          $ref: '#/components/schemas/CreateProjectRequest_vpcConfig'
      type: object
    ResourceName:
      maxLength: 64
      minLength: 1
      pattern: .*\S.*
      type: string
    ResourceDescription:
      maxLength: 2048
      minLength: 1
      pattern: .*\S.*
      type: string
    TestGridVpcConfig:
      description: The VPC security groups and subnets that are attached to a project.
      properties:
        securityGroupIds:
          allOf:
          - $ref: '#/components/schemas/SecurityGroupIds'
          - description: A list of VPC security group IDs in your Amazon VPC.
        subnetIds:
          allOf:
          - $ref: '#/components/schemas/SubnetIds'
          - description: A list of VPC subnet IDs in your Amazon VPC.
        vpcId:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          - description: The ID of the Amazon VPC.
      required:
      - securityGroupIds
      - subnetIds
      - vpcId
      type: object
    TestGridProject:
      description: A Selenium testing project. Projects are used to collect and collate
        sessions.
      properties:
        arn:
          allOf:
          - $ref: '#/components/schemas/DeviceFarmArn'
          - description: The ARN for the project.
        name:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: A human-readable name for the project.
        description:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: A human-readable description for the project.
        vpcConfig:
          $ref: '#/components/schemas/CreateTestGridProjectRequest_vpcConfig'
        created:
          allOf:
          - $ref: '#/components/schemas/DateTime'
          - description: When the project was created.
      type: object
    DeviceFarmArn:
      maxLength: 1011
      minLength: 32
      pattern: ^arn:aws:devicefarm:.+
      type: string
    TestGridUrlExpiresInSecondsInput:
      maximum: 86400
      minimum: 60
      type: integer
    SensitiveString:
      format: password
      type: string
    DateTime:
      format: date-time
      type: string
    UploadType:
      enum:
      - ANDROID_APP
      - IOS_APP
      - WEB_APP
      - EXTERNAL_DATA
      - APPIUM_JAVA_JUNIT_TEST_PACKAGE
      - APPIUM_JAVA_TESTNG_TEST_PACKAGE
      - APPIUM_PYTHON_TEST_PACKAGE
      - APPIUM_NODE_TEST_PACKAGE
      - APPIUM_RUBY_TEST_PACKAGE
      - APPIUM_WEB_JAVA_JUNIT_TEST_PACKAGE
      - APPIUM_WEB_JAVA_TESTNG_TEST_PACKAGE
      - APPIUM_WEB_PYTHON_TEST_PACKAGE
      - APPIUM_WEB_NODE_TEST_PACKAGE
      - APPIUM_WEB_RUBY_TEST_PACKAGE
      - CALABASH_TEST_PACKAGE
      - INSTRUMENTATION_TEST_PACKAGE
      - UIAUTOMATION_TEST_PACKAGE
      - UIAUTOMATOR_TEST_PACKAGE
      - XCTEST_TEST_PACKAGE
      - XCTEST_UI_TEST_PACKAGE
      - APPIUM_JAVA_JUNIT_TEST_SPEC
      - APPIUM_JAVA_TESTNG_TEST_SPEC
      - APPIUM_PYTHON_TEST_SPEC
      - APPIUM_NODE_TEST_SPEC
      - APPIUM_RUBY_TEST_SPEC
      - APPIUM_WEB_JAVA_JUNIT_TEST_SPEC
      - APPIUM_WEB_JAVA_TESTNG_TEST_SPEC
      - APPIUM_WEB_PYTHON_TEST_SPEC
      - APPIUM_WEB_NODE_TEST_SPEC
      - APPIUM_WEB_RUBY_TEST_SPEC
      - INSTRUMENTATION_TEST_SPEC
      - XCTEST_UI_TEST_SPEC
      type: string
    Upload:
      description: An app or a set of one or more tests to upload or that have been
        uploaded.
      properties:
        arn:
          allOf:
          - $ref: '#/components/schemas/AmazonResourceName'
          - description: The upload's ARN.
        name:
          allOf:
          - $ref: '#/components/schemas/Name'
          - description: The upload's file name.
        created:
          allOf:
          - $ref: '#/components/schemas/DateTime'
          - description: When the upload was created.
        type:
          allOf:
          - $ref: '#/components/schemas/UploadType'
          - description: <p>The upload's type.</p> <p>Must be one of the following
              values:</p> <ul> <li> <p>ANDROID_APP</p> </li> <li> <p>IOS_APP</p> </li>
              <li> <p>WEB_APP</p> </li> <li> <p>EXTERNAL_DATA</p> </li> <li> <p>APPIUM_JAVA_JUNIT_TEST_PACKAGE</p>
              </li> <li> <p>APPIUM_JAVA_TESTNG_TEST_PACKAGE</p> </li> <li> <p>APPIUM_PYTHON_TEST_PACKAGE</p>
              </li> <li> <p>APPIUM_NODE_TEST_PACKAGE</p> </li> <li> <p>APPIUM_RUBY_TEST_PACKAGE</p>
              </li> <li> <p>APPIUM_WEB_JAVA_JUNIT_TEST_PACKAGE</p> </li> <li> <p>APPIUM_WEB_JAVA_TESTNG_TEST_PACKAGE</p>
              </li> <li> <p>APPIUM_WEB_PYTHON_TEST_PACKAGE</p> </li> <li> <p>APPIUM_WEB_NODE_TEST_PACKAGE</p>
              </li> <li> <p>APPIUM_WEB_RUBY_TEST_PACKAGE</p> </li> <li> <p>CALABASH_TEST_PACKAGE</p>
              </li> <li> <p>INSTRUMENTATION_TEST_PACKAGE</p> </li> <li> <p>UIAUTOMATION_TEST_PACKAGE</p>
              </li> <li> <p>UIAUTOMATOR_TEST_PACKAGE</p> </li> <li> <p>XCTEST_TEST_PACKAGE</p>
              </li> <li> <p>XCTEST_UI_TEST_PACKAGE</p> </li> <li> <p>APPIUM_JAVA_JUNIT_TEST_SPEC</p>
              </li> <li> <p>APPIUM_JAVA_TESTNG_TEST_SPEC</p> </li> <li> <p>APPIUM_PYTHON_TEST_SPEC</p>
              </li> <li> <p>APPIUM_NODE_TEST_SPEC</p> </li> <li> <p>APPIUM_RUBY_TEST_SPEC</p>
              </li> <li> <p>APPIUM_WEB_JAVA_JUNIT_TEST_SPEC</p> </li> <li> <p>APPIUM_WEB_JAVA_TESTNG_TEST_SPEC</p>
              </li> <li> <p>APPIUM_WEB_PYTHON_TEST_SPEC</p> </li> <li> <p>APPIUM_WEB_NODE_TEST_SPEC</p>
              </li> <li> <p>APPIUM_WEB_RUBY_TEST_SPEC</p> </li> <li> <p>INSTRUMENTATION_TEST_SPEC</p>
              </li> <li> <p>XCTEST_UI_TEST_SPEC</p> </li> </ul>
        status:
          allOf:
          - $ref: '#/components/schemas/UploadStatus'
          - description: <p>The upload's status.</p> <p>Must be one of the following
              values:</p> <ul> <li> <p>FAILED</p> </li> <li> <p>INITIALIZED</p> </li>
              <li> <p>PROCESSING</p> </li> <li> <p>SUCCEEDED</p> </li> </ul>
        url:
          allOf:
          - $ref: '#/components/schemas/SensitiveURL'
          - description: The presigned Amazon S3 URL that was used to store a file
              using a PUT request.
        metadata:
          allOf:
          - $ref: '#/components/schemas/Metadata'
          - description: "The upload's metadata. For example, for Android, this contains\
              \ information that is parsed from the manifest and is displayed in the\
              \ AWS Device Farm console after the associated app is uploaded."
        contentType:
          allOf:
          - $ref: '#/components/schemas/ContentType'
          - description: "The upload's content type (for example, <code>application/octet-stream</code>)."
        message:
          allOf:
          - $ref: '#/components/schemas/Message'
          - description: A message about the upload's result.
        category:
          allOf:
          - $ref: '#/components/schemas/UploadCategory'
          - description: "<p>The upload's category. Allowed values include:</p> <ul>\
              \ <li> <p>CURATED: An upload managed by AWS Device Farm.</p> </li> <li>\
              \ <p>PRIVATE: An upload managed by the AWS Device Farm customer.</p>\
              \ </li> </ul>"
      type: object
    VPCEConfigurationName:
      maxLength: 1024
      minLength: 0
      type: string
    VPCEServiceName:
      maxLength: 2048
      minLength: 0
      type: string
    ServiceDnsName:
      maxLength: 2048
      minLength: 0
      type: string
    VPCEConfigurationDescription:
      maxLength: 2048
      minLength: 0
      type: string
    VPCEConfiguration:
      description: Represents an Amazon Virtual Private Cloud (VPC) endpoint configuration.
      properties:
        arn:
          allOf:
          - $ref: '#/components/schemas/AmazonResourceName'
          - description: The Amazon Resource Name (ARN) of the VPC endpoint configuration.
        vpceConfigurationName:
          allOf:
          - $ref: '#/components/schemas/VPCEConfigurationName'
          - description: The friendly name you give to your VPC endpoint configuration
              to manage your configurations more easily.
        vpceServiceName:
          allOf:
          - $ref: '#/components/schemas/VPCEServiceName'
          - description: The name of the VPC endpoint service running in your AWS
              account that you want Device Farm to test.
        serviceDnsName:
          allOf:
          - $ref: '#/components/schemas/ServiceDnsName'
          - description: The DNS name that maps to the private IP address of the service
              you want to access.
        vpceConfigurationDescription:
          allOf:
          - $ref: '#/components/schemas/VPCEConfigurationDescription'
          - description: An optional description that provides details about your
              VPC endpoint configuration.
      type: object
    CurrencyCode:
      enum:
      - USD
      type: string
    IosPaths:
      items:
        $ref: '#/components/schemas/String'
      type: array
    DeviceHostPaths:
      items:
        $ref: '#/components/schemas/String'
      type: array
    CustomerArtifactPaths:
      description: "<p>A JSON object that specifies the paths where the artifacts\
        \ generated by the customer's tests, on the device or in the test environment,\
        \ are pulled from.</p> <p>Specify <code>deviceHostPaths</code> and optionally\
        \ specify either <code>iosPaths</code> or <code>androidPaths</code>.</p> <p>For\
        \ web app tests, you can specify both <code>iosPaths</code> and <code>androidPaths</code>.</p>"
      properties:
        iosPaths:
          allOf:
          - $ref: '#/components/schemas/IosPaths'
          - description: Comma-separated list of paths on the iOS device where the
              artifacts generated by the customer's tests are pulled from.
        androidPaths:
          allOf:
          - $ref: '#/components/schemas/AndroidPaths'
          - description: Comma-separated list of paths on the Android device where
              the artifacts generated by the customer's tests are pulled from.
        deviceHostPaths:
          allOf:
          - $ref: '#/components/schemas/DeviceHostPaths'
          - description: Comma-separated list of paths in the test execution environment
              where the artifacts generated by the customer's tests are pulled from.
      type: object
    DeviceFormFactor:
      enum:
      - PHONE
      - TABLET
      type: string
    DevicePlatform:
      enum:
      - ANDROID
      - IOS
      type: string
    Resolution:
      description: "Represents the screen resolution of a device in height and width,\
        \ expressed in pixels."
      properties:
        width:
          allOf:
          - $ref: '#/components/schemas/Integer'
          - description: "The screen resolution's width, expressed in pixels."
        height:
          allOf:
          - $ref: '#/components/schemas/Integer'
          - description: "The screen resolution's height, expressed in pixels."
      type: object
    DeviceInstances:
      items:
        $ref: '#/components/schemas/DeviceInstance'
      type: array
    DeviceAvailability:
      enum:
      - TEMPORARY_NOT_AVAILABLE
      - BUSY
      - AVAILABLE
      - HIGHLY_AVAILABLE
      type: string
    Device:
      description: Represents a device type that an app is tested against.
      properties:
        arn:
          allOf:
          - $ref: '#/components/schemas/AmazonResourceName'
          - description: The device's ARN.
        name:
          allOf:
          - $ref: '#/components/schemas/Name'
          - description: The device's display name.
        manufacturer:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The device's manufacturer name.
        model:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The device's model name.
        modelId:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The device's model ID.
        formFactor:
          allOf:
          - $ref: '#/components/schemas/DeviceFormFactor'
          - description: <p>The device's form factor.</p> <p>Allowed values include:</p>
              <ul> <li> <p>PHONE</p> </li> <li> <p>TABLET</p> </li> </ul>
        platform:
          allOf:
          - $ref: '#/components/schemas/DevicePlatform'
          - description: <p>The device's platform.</p> <p>Allowed values include:</p>
              <ul> <li> <p>ANDROID</p> </li> <li> <p>IOS</p> </li> </ul>
        os:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The device's operating system type.
        cpu:
          $ref: '#/components/schemas/Device_cpu'
        resolution:
          $ref: '#/components/schemas/Device_resolution'
        heapSize:
          allOf:
          - $ref: '#/components/schemas/Long'
          - description: "The device's heap size, expressed in bytes."
        memory:
          allOf:
          - $ref: '#/components/schemas/Long'
          - description: "The device's total memory size, expressed in bytes."
        image:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The device's image name.
        carrier:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The device's carrier.
        radio:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The device's radio.
        remoteAccessEnabled:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          - description: Specifies whether remote access has been enabled for the
              specified device.
        remoteDebugEnabled:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          - description: <p>This flag is set to <code>true</code> if remote debugging
              is enabled for the device.</p> <p>Remote debugging is <a href="https://docs.aws.amazon.com/devicefarm/latest/developerguide/history.html">no
              longer supported</a>.</p>
        fleetType:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The type of fleet to which this device belongs. Possible
              values are PRIVATE and PUBLIC.
        fleetName:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The name of the fleet to which this device belongs.
        instances:
          allOf:
          - $ref: '#/components/schemas/DeviceInstances'
          - description: The instances that belong to this device.
        availability:
          allOf:
          - $ref: '#/components/schemas/DeviceAvailability'
          - description: Indicates how likely a device is available for a test run.
              Currently available in the <a>ListDevices</a> and GetDevice API methods.
      type: object
    DeviceAttribute:
      enum:
      - ARN
      - PLATFORM
      - FORM_FACTOR
      - MANUFACTURER
      - REMOTE_ACCESS_ENABLED
      - REMOTE_DEBUG_ENABLED
      - APPIUM_VERSION
      - INSTANCE_ARN
      - INSTANCE_LABELS
      - FLEET_TYPE
      - OS_VERSION
      - MODEL
      - AVAILABILITY
      type: string
    DeviceFilterAttribute:
      enum:
      - ARN
      - PLATFORM
      - OS_VERSION
      - MODEL
      - AVAILABILITY
      - FORM_FACTOR
      - MANUFACTURER
      - REMOTE_ACCESS_ENABLED
      - REMOTE_DEBUG_ENABLED
      - INSTANCE_ARN
      - INSTANCE_LABELS
      - FLEET_TYPE
      type: string
    RuleOperator:
      enum:
      - EQUALS
      - LESS_THAN
      - LESS_THAN_OR_EQUALS
      - GREATER_THAN
      - GREATER_THAN_OR_EQUALS
      - IN
      - NOT_IN
      - CONTAINS
      type: string
    DeviceFilterValues:
      items:
        $ref: '#/components/schemas/String'
      type: array
    DeviceFilter:
      description: "<p>Represents a device filter used to select a set of devices\
        \ to be included in a test run. This data structure is passed in as the <code>deviceSelectionConfiguration</code>\
        \ parameter to <code>ScheduleRun</code>. For an example of the JSON request\
        \ syntax, see <a>ScheduleRun</a>.</p> <p>It is also passed in as the <code>filters</code>\
        \ parameter to <code>ListDevices</code>. For an example of the JSON request\
        \ syntax, see <a>ListDevices</a>.</p>"
      properties:
        attribute:
          allOf:
          - $ref: '#/components/schemas/DeviceFilterAttribute'
          - description: "<p>The aspect of a device such as platform or model used\
              \ as the selection criteria in a device filter.</p> <p>The supported\
              \ operators for each attribute are provided in the following list.</p>\
              \ <dl> <dt>ARN</dt> <dd> <p>The Amazon Resource Name (ARN) of the device\
              \ (for example, <code>arn:aws:devicefarm:us-west-2::device:12345Example</code>).</p>\
              \ <p>Supported operators: <code>EQUALS</code>, <code>IN</code>, <code>NOT_IN</code>\
              \ </p> </dd> <dt>PLATFORM</dt> <dd> <p>The device platform. Valid values\
              \ are ANDROID or IOS.</p> <p>Supported operators: <code>EQUALS</code>\
              \ </p> </dd> <dt>OS_VERSION</dt> <dd> <p>The operating system version\
              \ (for example, 10.3.2).</p> <p>Supported operators: <code>EQUALS</code>,\
              \ <code>GREATER_THAN</code>, <code>GREATER_THAN_OR_EQUALS</code>, <code>IN</code>,\
              \ <code>LESS_THAN</code>, <code>LESS_THAN_OR_EQUALS</code>, <code>NOT_IN</code>\
              \ </p> </dd> <dt>MODEL</dt> <dd> <p>The device model (for example, iPad\
              \ 5th Gen).</p> <p>Supported operators: <code>CONTAINS</code>, <code>EQUALS</code>,\
              \ <code>IN</code>, <code>NOT_IN</code> </p> </dd> <dt>AVAILABILITY</dt>\
              \ <dd> <p>The current availability of the device. Valid values are AVAILABLE,\
              \ HIGHLY_AVAILABLE, BUSY, or TEMPORARY_NOT_AVAILABLE.</p> <p>Supported\
              \ operators: <code>EQUALS</code> </p> </dd> <dt>FORM_FACTOR</dt> <dd>\
              \ <p>The device form factor. Valid values are PHONE or TABLET.</p> <p>Supported\
              \ operators: <code>EQUALS</code> </p> </dd> <dt>MANUFACTURER</dt> <dd>\
              \ <p>The device manufacturer (for example, Apple).</p> <p>Supported\
              \ operators: <code>EQUALS</code>, <code>IN</code>, <code>NOT_IN</code>\
              \ </p> </dd> <dt>REMOTE_ACCESS_ENABLED</dt> <dd> <p>Whether the device\
              \ is enabled for remote access. Valid values are TRUE or FALSE.</p>\
              \ <p>Supported operators: <code>EQUALS</code> </p> </dd> <dt>REMOTE_DEBUG_ENABLED</dt>\
              \ <dd> <p>Whether the device is enabled for remote debugging. Valid\
              \ values are TRUE or FALSE.</p> <p>Supported operators: <code>EQUALS</code>\
              \ </p> <p>Because remote debugging is <a href=\"https://docs.aws.amazon.com/devicefarm/latest/developerguide/history.html\"\
              >no longer supported</a>, this filter is ignored.</p> </dd> <dt>INSTANCE_ARN</dt>\
              \ <dd> <p>The Amazon Resource Name (ARN) of the device instance.</p>\
              \ <p>Supported operators: <code>EQUALS</code>, <code>IN</code>, <code>NOT_IN</code>\
              \ </p> </dd> <dt>INSTANCE_LABELS</dt> <dd> <p>The label of the device\
              \ instance.</p> <p>Supported operators: <code>CONTAINS</code> </p> </dd>\
              \ <dt>FLEET_TYPE</dt> <dd> <p>The fleet type. Valid values are PUBLIC\
              \ or PRIVATE.</p> <p>Supported operators: <code>EQUALS</code> </p> </dd>\
              \ </dl>"
        operator:
          allOf:
          - $ref: '#/components/schemas/RuleOperator'
          - description: Specifies how Device Farm compares the filter's attribute
              to the value. See the attribute descriptions.
        values:
          allOf:
          - $ref: '#/components/schemas/DeviceFilterValues'
          - description: "<p>An array of one or more filter values used in a device\
              \ filter.</p> <p class=\"title\"> <b>Operator Values</b> </p> <ul> <li>\
              \ <p>The IN and NOT_IN operators can take a values array that has more\
              \ than one element.</p> </li> <li> <p>The other operators require an\
              \ array with a single element.</p> </li> </ul> <p class=\"title\"> <b>Attribute\
              \ Values</b> </p> <ul> <li> <p>The PLATFORM attribute can be set to\
              \ ANDROID or IOS.</p> </li> <li> <p>The AVAILABILITY attribute can be\
              \ set to AVAILABLE, HIGHLY_AVAILABLE, BUSY, or TEMPORARY_NOT_AVAILABLE.</p>\
              \ </li> <li> <p>The FORM_FACTOR attribute can be set to PHONE or TABLET.</p>\
              \ </li> <li> <p>The FLEET_TYPE attribute can be set to PUBLIC or PRIVATE.</p>\
              \ </li> </ul>"
      required:
      - attribute
      - operator
      - values
      type: object
    DeviceFilters:
      items:
        $ref: '#/components/schemas/DeviceFilter'
      type: array
    InstanceLabels:
      items:
        $ref: '#/components/schemas/String'
      type: array
    InstanceStatus:
      enum:
      - IN_USE
      - PREPARING
      - AVAILABLE
      - NOT_AVAILABLE
      type: string
    DeviceInstance:
      description: Represents the device instance.
      properties:
        arn:
          allOf:
          - $ref: '#/components/schemas/AmazonResourceName'
          - description: The Amazon Resource Name (ARN) of the device instance.
        deviceArn:
          allOf:
          - $ref: '#/components/schemas/AmazonResourceName'
          - description: The ARN of the device.
        labels:
          allOf:
          - $ref: '#/components/schemas/InstanceLabels'
          - description: An array of strings that describe the device instance.
        status:
          allOf:
          - $ref: '#/components/schemas/InstanceStatus'
          - description: The status of the device instance. Valid values are listed
              here.
        udid:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: Unique device identifier for the device instance.
        instanceProfile:
          $ref: '#/components/schemas/DeviceInstance_instanceProfile'
      type: object
    DeviceMinutes:
      description: Represents the total (metered or unmetered) minutes used by the
        resource to run tests. Contains the sum of minutes consumed by all children.
      properties:
        total:
          allOf:
          - $ref: '#/components/schemas/Double'
          - description: "When specified, represents the total minutes used by the\
              \ resource to run tests."
        metered:
          allOf:
          - $ref: '#/components/schemas/Double'
          - description: "When specified, represents only the sum of metered minutes\
              \ used by the resource to run tests."
        unmetered:
          allOf:
          - $ref: '#/components/schemas/Double'
          - description: "When specified, represents only the sum of unmetered minutes\
              \ used by the resource to run tests."
      type: object
    DevicePoolType:
      enum:
      - CURATED
      - PRIVATE
      type: string
    IncompatibilityMessages:
      items:
        $ref: '#/components/schemas/IncompatibilityMessage'
      type: array
    DevicePoolCompatibilityResult:
      description: Represents a device pool compatibility result.
      properties:
        device:
          $ref: '#/components/schemas/DevicePoolCompatibilityResult_device'
        compatible:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          - description: Whether the result was compatible with the device pool.
        incompatibilityMessages:
          allOf:
          - $ref: '#/components/schemas/IncompatibilityMessages'
          - description: Information about the compatibility.
      type: object
    DevicePoolCompatibilityResults:
      items:
        $ref: '#/components/schemas/DevicePoolCompatibilityResult'
      type: array
    DevicePools:
      items:
        $ref: '#/components/schemas/DevicePool'
      type: array
    DeviceSelectionConfiguration:
      description: Represents the device filters used in a test run and the maximum
        number of devices to be included in the run. It is passed in as the <code>deviceSelectionConfiguration</code>
        request parameter in <a>ScheduleRun</a>.
      properties:
        filters:
          allOf:
          - $ref: '#/components/schemas/DeviceFilters'
          - description: "<p>Used to dynamically select a set of devices for a test\
              \ run. A filter is made up of an attribute, an operator, and one or\
              \ more values.</p> <ul> <li> <p> <b>Attribute</b> </p> <p>The aspect\
              \ of a device such as platform or model used as the selection criteria\
              \ in a device filter.</p> <p>Allowed values include:</p> <ul> <li> <p>ARN:\
              \ The Amazon Resource Name (ARN) of the device (for example, <code>arn:aws:devicefarm:us-west-2::device:12345Example</code>).</p>\
              \ </li> <li> <p>PLATFORM: The device platform. Valid values are ANDROID\
              \ or IOS.</p> </li> <li> <p>OS_VERSION: The operating system version\
              \ (for example, 10.3.2).</p> </li> <li> <p>MODEL: The device model (for\
              \ example, iPad 5th Gen).</p> </li> <li> <p>AVAILABILITY: The current\
              \ availability of the device. Valid values are AVAILABLE, HIGHLY_AVAILABLE,\
              \ BUSY, or TEMPORARY_NOT_AVAILABLE.</p> </li> <li> <p>FORM_FACTOR: The\
              \ device form factor. Valid values are PHONE or TABLET.</p> </li> <li>\
              \ <p>MANUFACTURER: The device manufacturer (for example, Apple).</p>\
              \ </li> <li> <p>REMOTE_ACCESS_ENABLED: Whether the device is enabled\
              \ for remote access. Valid values are TRUE or FALSE.</p> </li> <li>\
              \ <p>REMOTE_DEBUG_ENABLED: Whether the device is enabled for remote\
              \ debugging. Valid values are TRUE or FALSE. Because remote debugging\
              \ is <a href=\"https://docs.aws.amazon.com/devicefarm/latest/developerguide/history.html\"\
              >no longer supported</a>, this filter is ignored.</p> </li> <li> <p>INSTANCE_ARN:\
              \ The Amazon Resource Name (ARN) of the device instance.</p> </li> <li>\
              \ <p>INSTANCE_LABELS: The label of the device instance.</p> </li> <li>\
              \ <p>FLEET_TYPE: The fleet type. Valid values are PUBLIC or PRIVATE.</p>\
              \ </li> </ul> </li> <li> <p> <b>Operator</b> </p> <p>The filter operator.</p>\
              \ <ul> <li> <p>The EQUALS operator is available for every attribute\
              \ except INSTANCE_LABELS.</p> </li> <li> <p>The CONTAINS operator is\
              \ available for the INSTANCE_LABELS and MODEL attributes.</p> </li>\
              \ <li> <p>The IN and NOT_IN operators are available for the ARN, OS_VERSION,\
              \ MODEL, MANUFACTURER, and INSTANCE_ARN attributes.</p> </li> <li> <p>The\
              \ LESS_THAN, GREATER_THAN, LESS_THAN_OR_EQUALS, and GREATER_THAN_OR_EQUALS\
              \ operators are also available for the OS_VERSION attribute.</p> </li>\
              \ </ul> </li> <li> <p> <b>Values</b> </p> <p>An array of one or more\
              \ filter values.</p> <p class=\"title\"> <b>Operator Values</b> </p>\
              \ <ul> <li> <p>The IN and NOT_IN operators can take a values array that\
              \ has more than one element.</p> </li> <li> <p>The other operators require\
              \ an array with a single element.</p> </li> </ul> <p class=\"title\"\
              > <b>Attribute Values</b> </p> <ul> <li> <p>The PLATFORM attribute can\
              \ be set to ANDROID or IOS.</p> </li> <li> <p>The AVAILABILITY attribute\
              \ can be set to AVAILABLE, HIGHLY_AVAILABLE, BUSY, or TEMPORARY_NOT_AVAILABLE.</p>\
              \ </li> <li> <p>The FORM_FACTOR attribute can be set to PHONE or TABLET.</p>\
              \ </li> <li> <p>The FLEET_TYPE attribute can be set to PUBLIC or PRIVATE.</p>\
              \ </li> </ul> </li> </ul>"
        maxDevices:
          allOf:
          - $ref: '#/components/schemas/Integer'
          - description: The maximum number of devices to be included in a test run.
      required:
      - filters
      - maxDevices
      type: object
    DeviceSelectionResult:
      description: "Contains the run results requested by the device selection configuration\
        \ and how many devices were returned. For an example of the JSON response\
        \ syntax, see <a>ScheduleRun</a>."
      properties:
        filters:
          allOf:
          - $ref: '#/components/schemas/DeviceFilters'
          - description: The filters in a device selection result.
        matchedDevicesCount:
          allOf:
          - $ref: '#/components/schemas/Integer'
          - description: The number of devices that matched the device filter selection
              criteria.
        maxDevices:
          allOf:
          - $ref: '#/components/schemas/Integer'
          - description: The maximum number of devices to be selected by a device
              filter and included in a test run.
      type: object
    Devices:
      items:
        $ref: '#/components/schemas/Device'
      type: array
    VideoCapture:
      type: boolean
    ExecutionConfiguration:
      description: "Represents configuration information about a test run, such as\
        \ the execution timeout (in minutes)."
      properties:
        jobTimeoutMinutes:
          allOf:
          - $ref: '#/components/schemas/JobTimeoutMinutes'
          - description: The number of minutes a test run executes before it times
              out.
        accountsCleanup:
          allOf:
          - $ref: '#/components/schemas/AccountsCleanup'
          - description: "True if account cleanup is enabled at the beginning of the\
              \ test. Otherwise, false."
        appPackagesCleanup:
          allOf:
          - $ref: '#/components/schemas/AppPackagesCleanup'
          - description: "True if app package cleanup is enabled at the beginning\
              \ of the test. Otherwise, false."
        videoCapture:
          allOf:
          - $ref: '#/components/schemas/VideoCapture'
          - description: "Set to true to enable video capture. Otherwise, set to false.\
              \ The default is true."
        skipAppResign:
          allOf:
          - $ref: '#/components/schemas/SkipAppResign'
          - description: "<p>When set to <code>true</code>, for private devices, Device\
              \ Farm does not sign your app again. For public devices, Device Farm\
              \ always signs your apps again.</p> <p>For more information about how\
              \ Device Farm re-signs your apps, see <a href=\"http://aws.amazon.com/device-farm/faqs/\"\
              >Do you modify my app?</a> in the <i>AWS Device Farm FAQs</i>.</p>"
      type: object
    ExecutionResult:
      enum:
      - PENDING
      - PASSED
      - WARNED
      - FAILED
      - SKIPPED
      - ERRORED
      - STOPPED
      type: string
    ExecutionResultCode:
      enum:
      - PARSING_FAILED
      - VPC_ENDPOINT_SETUP_FAILED
      type: string
    ExecutionStatus:
      enum:
      - PENDING
      - PENDING_CONCURRENCY
      - PENDING_DEVICE
      - PROCESSING
      - SCHEDULING
      - PREPARING
      - RUNNING
      - COMPLETED
      - STOPPING
      type: string
    Filter:
      maxLength: 8192
      minLength: 0
      type: string
    TestType:
      enum:
      - BUILTIN_FUZZ
      - BUILTIN_EXPLORER
      - WEB_PERFORMANCE_PROFILE
      - APPIUM_JAVA_JUNIT
      - APPIUM_JAVA_TESTNG
      - APPIUM_PYTHON
      - APPIUM_NODE
      - APPIUM_RUBY
      - APPIUM_WEB_JAVA_JUNIT
      - APPIUM_WEB_JAVA_TESTNG
      - APPIUM_WEB_PYTHON
      - APPIUM_WEB_NODE
      - APPIUM_WEB_RUBY
      - CALABASH
      - INSTRUMENTATION
      - UIAUTOMATION
      - UIAUTOMATOR
      - XCTEST
      - XCTEST_UI
      - REMOTE_ACCESS_RECORD
      - REMOTE_ACCESS_REPLAY
      type: string
    ScheduleRunTest:
      description: "Represents test settings. This data structure is passed in as\
        \ the test parameter to ScheduleRun. For an example of the JSON request syntax,\
        \ see <a>ScheduleRun</a>."
      properties:
        type:
          allOf:
          - $ref: '#/components/schemas/TestType'
          - description: "<p>The test's type.</p> <p>Must be one of the following\
              \ values:</p> <ul> <li> <p>BUILTIN_FUZZ</p> </li> <li> <p>BUILTIN_EXPLORER.\
              \ For Android, an app explorer that traverses an Android app, interacting\
              \ with it and capturing screenshots at the same time.</p> </li> <li>\
              \ <p>APPIUM_JAVA_JUNIT</p> </li> <li> <p>APPIUM_JAVA_TESTNG</p> </li>\
              \ <li> <p>APPIUM_PYTHON</p> </li> <li> <p>APPIUM_NODE</p> </li> <li>\
              \ <p>APPIUM_RUBY</p> </li> <li> <p>APPIUM_WEB_JAVA_JUNIT</p> </li> <li>\
              \ <p>APPIUM_WEB_JAVA_TESTNG</p> </li> <li> <p>APPIUM_WEB_PYTHON</p>\
              \ </li> <li> <p>APPIUM_WEB_NODE</p> </li> <li> <p>APPIUM_WEB_RUBY</p>\
              \ </li> <li> <p>CALABASH</p> </li> <li> <p>INSTRUMENTATION</p> </li>\
              \ <li> <p>UIAUTOMATION</p> </li> <li> <p>UIAUTOMATOR</p> </li> <li>\
              \ <p>XCTEST</p> </li> <li> <p>XCTEST_UI</p> </li> </ul>"
        testPackageArn:
          allOf:
          - $ref: '#/components/schemas/AmazonResourceName'
          - description: The ARN of the uploaded test to be run.
        testSpecArn:
          allOf:
          - $ref: '#/components/schemas/AmazonResourceName'
          - description: The ARN of the YAML-formatted test specification.
        filter:
          allOf:
          - $ref: '#/components/schemas/Filter'
          - description: The test's filter.
        parameters:
          allOf:
          - $ref: '#/components/schemas/TestParameters'
          - description: "<p>The test's parameters, such as test framework parameters\
              \ and fixture settings. Parameters are represented by name-value pairs\
              \ of strings.</p> <p>For all tests:</p> <ul> <li> <p> <code>app_performance_monitoring</code>:\
              \ Performance monitoring is enabled by default. Set this parameter to\
              \ false to disable it.</p> </li> </ul> <p>For Calabash tests:</p> <ul>\
              \ <li> <p>profile: A cucumber profile (for example, <code>my_profile_name</code>).</p>\
              \ </li> <li> <p>tags: You can limit execution to features or scenarios\
              \ that have (or don't have) certain tags (for example, @smoke or @smoke,~@wip).</p>\
              \ </li> </ul> <p>For Appium tests (all types):</p> <ul> <li> <p>appium_version:\
              \ The Appium version. Currently supported values are 1.6.5 (and later),\
              \ latest, and default.</p> <ul> <li> <p>latest runs the latest Appium\
              \ version supported by Device Farm (1.9.1).</p> </li> <li> <p>For default,\
              \ Device Farm selects a compatible version of Appium for the device.\
              \ The current behavior is to run 1.7.2 on Android devices and iOS 9\
              \ and earlier and 1.7.2 for iOS 10 and later.</p> </li> <li> <p>This\
              \ behavior is subject to change.</p> </li> </ul> </li> </ul> <p>For\
              \ fuzz tests (Android only):</p> <ul> <li> <p>event_count: The number\
              \ of events, between 1 and 10000, that the UI fuzz test should perform.</p>\
              \ </li> <li> <p>throttle: The time, in ms, between 0 and 1000, that\
              \ the UI fuzz test should wait between events.</p> </li> <li> <p>seed:\
              \ A seed to use for randomizing the UI fuzz test. Using the same seed\
              \ value between tests ensures identical event sequences.</p> </li> </ul>\
              \ <p>For Explorer tests:</p> <ul> <li> <p>username: A user name to use\
              \ if the Explorer encounters a login form. If not supplied, no user\
              \ name is inserted.</p> </li> <li> <p>password: A password to use if\
              \ the Explorer encounters a login form. If not supplied, no password\
              \ is inserted.</p> </li> </ul> <p>For Instrumentation:</p> <ul> <li>\
              \ <p>filter: A test filter string. Examples:</p> <ul> <li> <p>Running\
              \ a single test case: <code>com.android.abc.Test1</code> </p> </li>\
              \ <li> <p>Running a single test: <code>com.android.abc.Test1#smoke</code>\
              \ </p> </li> <li> <p>Running multiple tests: <code>com.android.abc.Test1,com.android.abc.Test2</code>\
              \ </p> </li> </ul> </li> </ul> <p>For XCTest and XCTestUI:</p> <ul>\
              \ <li> <p>filter: A test filter string. Examples:</p> <ul> <li> <p>Running\
              \ a single test class: <code>LoginTests</code> </p> </li> <li> <p>Running\
              \ a multiple test classes: <code>LoginTests,SmokeTests</code> </p> </li>\
              \ <li> <p>Running a single test: <code>LoginTests/testValid</code> </p>\
              \ </li> <li> <p>Running multiple tests: <code>LoginTests/testValid,LoginTests/testInvalid</code>\
              \ </p> </li> </ul> </li> </ul> <p>For UIAutomator:</p> <ul> <li> <p>filter:\
              \ A test filter string. Examples:</p> <ul> <li> <p>Running a single\
              \ test case: <code>com.android.abc.Test1</code> </p> </li> <li> <p>Running\
              \ a single test: <code>com.android.abc.Test1#smoke</code> </p> </li>\
              \ <li> <p>Running multiple tests: <code>com.android.abc.Test1,com.android.abc.Test2</code>\
              \ </p> </li> </ul> </li> </ul>"
      required:
      - type
      type: object
    ScheduleRunConfiguration:
      description: "Represents the settings for a run. Includes things like location,\
        \ radio states, auxiliary apps, and network profiles."
      properties:
        extraDataPackageArn:
          allOf:
          - $ref: '#/components/schemas/AmazonResourceName'
          - description: The ARN of the extra data for the run. The extra data is
              a .zip file that AWS Device Farm extracts to external data for Android
              or the app's sandbox for iOS.
        networkProfileArn:
          allOf:
          - $ref: '#/components/schemas/AmazonResourceName'
          - description: Reserved for internal use.
        locale:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: Information about the locale that is used for the run.
        location:
          $ref: '#/components/schemas/ScheduleRunConfiguration_location'
        vpceConfigurationArns:
          allOf:
          - $ref: '#/components/schemas/AmazonResourceNames'
          - description: An array of ARNs for your VPC endpoint configurations.
        customerArtifactPaths:
          $ref: '#/components/schemas/ScheduleRunConfiguration_customerArtifactPaths'
        radios:
          $ref: '#/components/schemas/ScheduleRunConfiguration_radios'
        auxiliaryApps:
          allOf:
          - $ref: '#/components/schemas/AmazonResourceNames'
          - description: A list of upload ARNs for app packages to be installed with
              your app.
        billingMethod:
          allOf:
          - $ref: '#/components/schemas/BillingMethod'
          - description: "<p>Specifies the billing method for a test run: <code>metered</code>\
              \ or <code>unmetered</code>. If the parameter is not specified, the\
              \ default value is <code>metered</code>.</p> <note> <p>If you have purchased\
              \ unmetered device slots, you must set this parameter to <code>unmetered</code>\
              \ to make use of them. Otherwise, your run counts against your metered\
              \ time.</p> </note>"
      type: object
    Job:
      description: Represents a device.
      properties:
        arn:
          allOf:
          - $ref: '#/components/schemas/AmazonResourceName'
          - description: The job's ARN.
        name:
          allOf:
          - $ref: '#/components/schemas/Name'
          - description: The job's name.
        type:
          allOf:
          - $ref: '#/components/schemas/TestType'
          - description: "<p>The job's type.</p> <p>Allowed values include the following:</p>\
              \ <ul> <li> <p>BUILTIN_FUZZ</p> </li> <li> <p>BUILTIN_EXPLORER. For\
              \ Android, an app explorer that traverses an Android app, interacting\
              \ with it and capturing screenshots at the same time.</p> </li> <li>\
              \ <p>APPIUM_JAVA_JUNIT</p> </li> <li> <p>APPIUM_JAVA_TESTNG</p> </li>\
              \ <li> <p>APPIUM_PYTHON</p> </li> <li> <p>APPIUM_NODE</p> </li> <li>\
              \ <p>APPIUM_RUBY</p> </li> <li> <p>APPIUM_WEB_JAVA_JUNIT</p> </li> <li>\
              \ <p>APPIUM_WEB_JAVA_TESTNG</p> </li> <li> <p>APPIUM_WEB_PYTHON</p>\
              \ </li> <li> <p>APPIUM_WEB_NODE</p> </li> <li> <p>APPIUM_WEB_RUBY</p>\
              \ </li> <li> <p>CALABASH</p> </li> <li> <p>INSTRUMENTATION</p> </li>\
              \ <li> <p>UIAUTOMATION</p> </li> <li> <p>UIAUTOMATOR</p> </li> <li>\
              \ <p>XCTEST</p> </li> <li> <p>XCTEST_UI</p> </li> </ul>"
        created:
          allOf:
          - $ref: '#/components/schemas/DateTime'
          - description: When the job was created.
        status:
          allOf:
          - $ref: '#/components/schemas/ExecutionStatus'
          - description: <p>The job's status.</p> <p>Allowed values include:</p> <ul>
              <li> <p>PENDING</p> </li> <li> <p>PENDING_CONCURRENCY</p> </li> <li>
              <p>PENDING_DEVICE</p> </li> <li> <p>PROCESSING</p> </li> <li> <p>SCHEDULING</p>
              </li> <li> <p>PREPARING</p> </li> <li> <p>RUNNING</p> </li> <li> <p>COMPLETED</p>
              </li> <li> <p>STOPPING</p> </li> </ul>
        result:
          allOf:
          - $ref: '#/components/schemas/ExecutionResult'
          - description: <p>The job's result.</p> <p>Allowed values include:</p> <ul>
              <li> <p>PENDING</p> </li> <li> <p>PASSED</p> </li> <li> <p>WARNED</p>
              </li> <li> <p>FAILED</p> </li> <li> <p>SKIPPED</p> </li> <li> <p>ERRORED</p>
              </li> <li> <p>STOPPED</p> </li> </ul>
        started:
          allOf:
          - $ref: '#/components/schemas/DateTime'
          - description: The job's start time.
        stopped:
          allOf:
          - $ref: '#/components/schemas/DateTime'
          - description: The job's stop time.
        counters:
          $ref: '#/components/schemas/Job_counters'
        message:
          allOf:
          - $ref: '#/components/schemas/Message'
          - description: A message about the job's result.
        device:
          $ref: '#/components/schemas/Job_device'
        instanceArn:
          allOf:
          - $ref: '#/components/schemas/AmazonResourceName'
          - description: The ARN of the instance.
        deviceMinutes:
          $ref: '#/components/schemas/Job_deviceMinutes'
        videoEndpoint:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The endpoint for streaming device video.
        videoCapture:
          allOf:
          - $ref: '#/components/schemas/VideoCapture'
          - description: "This value is set to true if video capture is enabled. Otherwise,\
              \ it is set to false."
      type: object
    PaginationToken:
      maxLength: 1024
      minLength: 4
      type: string
    OfferingStatusMap:
      additionalProperties:
        $ref: '#/components/schemas/OfferingStatus'
      type: object
    Run:
      description: "Represents a test run on a set of devices with a given app package,\
        \ test parameters, and so on."
      properties:
        arn:
          allOf:
          - $ref: '#/components/schemas/AmazonResourceName'
          - description: The run's ARN.
        name:
          allOf:
          - $ref: '#/components/schemas/Name'
          - description: The run's name.
        type:
          allOf:
          - $ref: '#/components/schemas/TestType'
          - description: "<p>The run's type.</p> <p>Must be one of the following values:</p>\
              \ <ul> <li> <p>BUILTIN_FUZZ</p> </li> <li> <p>BUILTIN_EXPLORER</p> <note>\
              \ <p>For Android, an app explorer that traverses an Android app, interacting\
              \ with it and capturing screenshots at the same time.</p> </note> </li>\
              \ <li> <p>APPIUM_JAVA_JUNIT</p> </li> <li> <p>APPIUM_JAVA_TESTNG</p>\
              \ </li> <li> <p>APPIUM_PYTHON</p> </li> <li> <p>APPIUM_NODE</p> </li>\
              \ <li> <p>APPIUM_RUBY</p> </li> <li> <p>APPIUM_WEB_JAVA_JUNIT</p> </li>\
              \ <li> <p>APPIUM_WEB_JAVA_TESTNG</p> </li> <li> <p>APPIUM_WEB_PYTHON</p>\
              \ </li> <li> <p>APPIUM_WEB_NODE</p> </li> <li> <p>APPIUM_WEB_RUBY</p>\
              \ </li> <li> <p>CALABASH</p> </li> <li> <p>INSTRUMENTATION</p> </li>\
              \ <li> <p>UIAUTOMATION</p> </li> <li> <p>UIAUTOMATOR</p> </li> <li>\
              \ <p>XCTEST</p> </li> <li> <p>XCTEST_UI</p> </li> </ul>"
        platform:
          allOf:
          - $ref: '#/components/schemas/DevicePlatform'
          - description: <p>The run's platform.</p> <p>Allowed values include:</p>
              <ul> <li> <p>ANDROID</p> </li> <li> <p>IOS</p> </li> </ul>
        created:
          allOf:
          - $ref: '#/components/schemas/DateTime'
          - description: When the run was created.
        status:
          allOf:
          - $ref: '#/components/schemas/ExecutionStatus'
          - description: <p>The run's status.</p> <p>Allowed values include:</p> <ul>
              <li> <p>PENDING</p> </li> <li> <p>PENDING_CONCURRENCY</p> </li> <li>
              <p>PENDING_DEVICE</p> </li> <li> <p>PROCESSING</p> </li> <li> <p>SCHEDULING</p>
              </li> <li> <p>PREPARING</p> </li> <li> <p>RUNNING</p> </li> <li> <p>COMPLETED</p>
              </li> <li> <p>STOPPING</p> </li> </ul>
        result:
          allOf:
          - $ref: '#/components/schemas/ExecutionResult'
          - description: <p>The run's result.</p> <p>Allowed values include:</p> <ul>
              <li> <p>PENDING</p> </li> <li> <p>PASSED</p> </li> <li> <p>WARNED</p>
              </li> <li> <p>FAILED</p> </li> <li> <p>SKIPPED</p> </li> <li> <p>ERRORED</p>
              </li> <li> <p>STOPPED</p> </li> </ul>
        started:
          allOf:
          - $ref: '#/components/schemas/DateTime'
          - description: The run's start time.
        stopped:
          allOf:
          - $ref: '#/components/schemas/DateTime'
          - description: The run's stop time.
        counters:
          $ref: '#/components/schemas/Run_counters'
        message:
          allOf:
          - $ref: '#/components/schemas/Message'
          - description: A message about the run's result.
        totalJobs:
          allOf:
          - $ref: '#/components/schemas/Integer'
          - description: The total number of jobs for the run.
        completedJobs:
          allOf:
          - $ref: '#/components/schemas/Integer'
          - description: The total number of completed jobs.
        billingMethod:
          allOf:
          - $ref: '#/components/schemas/BillingMethod'
          - description: "<p>Specifies the billing method for a test run: <code>metered</code>\
              \ or <code>unmetered</code>. If the parameter is not specified, the\
              \ default value is <code>metered</code>.</p> <note> <p>If you have unmetered\
              \ device slots, you must set this to <code>unmetered</code> to use them.\
              \ Otherwise, the run is counted toward metered device minutes.</p> </note>"
        deviceMinutes:
          $ref: '#/components/schemas/Run_deviceMinutes'
        networkProfile:
          $ref: '#/components/schemas/Run_networkProfile'
        parsingResultUrl:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: "Read-only URL for an object in an S3 bucket where you can\
              \ get the parsing results of the test package. If the test package doesn't\
              \ parse, the reason why it doesn't parse appears in the file that this\
              \ URL points to."
        resultCode:
          allOf:
          - $ref: '#/components/schemas/ExecutionResultCode'
          - description: Supporting field for the result field. Set only if <code>result</code>
              is <code>SKIPPED</code>. <code>PARSING_FAILED</code> if the result is
              skipped because of test package parsing failure.
        seed:
          allOf:
          - $ref: '#/components/schemas/Integer'
          - description: "For fuzz tests, this is a seed to use for randomizing the\
              \ UI fuzz test. Using the same seed value between tests ensures identical\
              \ event sequences."
        appUpload:
          allOf:
          - $ref: '#/components/schemas/AmazonResourceName'
          - description: An app to upload or that has been uploaded.
        eventCount:
          allOf:
          - $ref: '#/components/schemas/Integer'
          - description: "For fuzz tests, this is the number of events, between 1\
              \ and 10000, that the UI fuzz test should perform."
        jobTimeoutMinutes:
          allOf:
          - $ref: '#/components/schemas/JobTimeoutMinutes'
          - description: The number of minutes the job executes before it times out.
        devicePoolArn:
          allOf:
          - $ref: '#/components/schemas/AmazonResourceName'
          - description: The ARN of the device pool for the run.
        locale:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: Information about the locale that is used for the run.
        radios:
          $ref: '#/components/schemas/ScheduleRunConfiguration_radios'
        location:
          $ref: '#/components/schemas/ScheduleRunConfiguration_location'
        customerArtifactPaths:
          $ref: '#/components/schemas/Run_customerArtifactPaths'
        webUrl:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The Device Farm console URL for the recording of the run.
        skipAppResign:
          allOf:
          - $ref: '#/components/schemas/SkipAppResign'
          - description: "<p>When set to <code>true</code>, for private devices, Device\
              \ Farm does not sign your app again. For public devices, Device Farm\
              \ always signs your apps again.</p> <p>For more information about how\
              \ Device Farm re-signs your apps, see <a href=\"http://aws.amazon.com/device-farm/faqs/\"\
              >Do you modify my app?</a> in the <i>AWS Device Farm FAQs</i>.</p>"
        testSpecArn:
          allOf:
          - $ref: '#/components/schemas/AmazonResourceName'
          - description: The ARN of the YAML-formatted test specification for the
              run.
        deviceSelectionResult:
          $ref: '#/components/schemas/Run_deviceSelectionResult'
        vpcConfig:
          $ref: '#/components/schemas/CreateProjectRequest_vpcConfig'
      type: object
    Suite:
      description: Represents a collection of one or more tests.
      properties:
        arn:
          allOf:
          - $ref: '#/components/schemas/AmazonResourceName'
          - description: The suite's ARN.
        name:
          allOf:
          - $ref: '#/components/schemas/Name'
          - description: The suite's name.
        type:
          allOf:
          - $ref: '#/components/schemas/TestType'
          - description: "<p>The suite's type.</p> <p>Must be one of the following\
              \ values:</p> <ul> <li> <p>BUILTIN_FUZZ</p> </li> <li> <p>BUILTIN_EXPLORER\
              \ </p> <note> <p>Only available for Android; an app explorer that traverses\
              \ an Android app, interacting with it and capturing screenshots at the\
              \ same time.</p> </note> </li> <li> <p>APPIUM_JAVA_JUNIT</p> </li> <li>\
              \ <p>APPIUM_JAVA_TESTNG</p> </li> <li> <p>APPIUM_PYTHON</p> </li> <li>\
              \ <p>APPIUM_NODE</p> </li> <li> <p>APPIUM_RUBY</p> </li> <li> <p>APPIUM_WEB_JAVA_JUNIT</p>\
              \ </li> <li> <p>APPIUM_WEB_JAVA_TESTNG</p> </li> <li> <p>APPIUM_WEB_PYTHON</p>\
              \ </li> <li> <p>APPIUM_WEB_NODE</p> </li> <li> <p>APPIUM_WEB_RUBY</p>\
              \ </li> <li> <p>CALABASH</p> </li> <li> <p>INSTRUMENTATION</p> </li>\
              \ <li> <p>UIAUTOMATION</p> </li> <li> <p>UIAUTOMATOR</p> </li> <li>\
              \ <p>XCTEST</p> </li> <li> <p>XCTEST_UI</p> </li> </ul>"
        created:
          allOf:
          - $ref: '#/components/schemas/DateTime'
          - description: When the suite was created.
        status:
          allOf:
          - $ref: '#/components/schemas/ExecutionStatus'
          - description: <p>The suite's status.</p> <p>Allowed values include:</p>
              <ul> <li> <p>PENDING</p> </li> <li> <p>PENDING_CONCURRENCY</p> </li>
              <li> <p>PENDING_DEVICE</p> </li> <li> <p>PROCESSING</p> </li> <li> <p>SCHEDULING</p>
              </li> <li> <p>PREPARING</p> </li> <li> <p>RUNNING</p> </li> <li> <p>COMPLETED</p>
              </li> <li> <p>STOPPING</p> </li> </ul>
        result:
          allOf:
          - $ref: '#/components/schemas/ExecutionResult'
          - description: <p>The suite's result.</p> <p>Allowed values include:</p>
              <ul> <li> <p>PENDING</p> </li> <li> <p>PASSED</p> </li> <li> <p>WARNED</p>
              </li> <li> <p>FAILED</p> </li> <li> <p>SKIPPED</p> </li> <li> <p>ERRORED</p>
              </li> <li> <p>STOPPED</p> </li> </ul>
        started:
          allOf:
          - $ref: '#/components/schemas/DateTime'
          - description: The suite's start time.
        stopped:
          allOf:
          - $ref: '#/components/schemas/DateTime'
          - description: The suite's stop time.
        counters:
          $ref: '#/components/schemas/Suite_counters'
        message:
          allOf:
          - $ref: '#/components/schemas/Message'
          - description: A message about the suite's result.
        deviceMinutes:
          $ref: '#/components/schemas/Suite_deviceMinutes'
      type: object
    ResourceId:
      maxLength: 128
      minLength: 1
      pattern: .*\S.*
      type: string
    TestGridSession:
      description: A <a>TestGridSession</a> is a single instance of a browser launched
        from the URL provided by a call to <a>CreateTestGridUrl</a>.
      properties:
        arn:
          allOf:
          - $ref: '#/components/schemas/DeviceFarmArn'
          - description: The ARN of the session.
        status:
          allOf:
          - $ref: '#/components/schemas/TestGridSessionStatus'
          - description: The state of the session.
        created:
          allOf:
          - $ref: '#/components/schemas/DateTime'
          - description: The time that the session was started.
        ended:
          allOf:
          - $ref: '#/components/schemas/DateTime'
          - description: The time the session ended.
        billingMinutes:
          allOf:
          - $ref: '#/components/schemas/Double'
          - description: 'The number of billed minutes that were used for this session. '
        seleniumProperties:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: A JSON object of options and parameters passed to the Selenium
              WebDriver.
      type: object
    Test:
      description: Represents a condition that is evaluated.
      properties:
        arn:
          allOf:
          - $ref: '#/components/schemas/AmazonResourceName'
          - description: The test's ARN.
        name:
          allOf:
          - $ref: '#/components/schemas/Name'
          - description: The test's name.
        type:
          allOf:
          - $ref: '#/components/schemas/TestType'
          - description: "<p>The test's type.</p> <p>Must be one of the following\
              \ values:</p> <ul> <li> <p>BUILTIN_FUZZ</p> </li> <li> <p>BUILTIN_EXPLORER</p>\
              \ <note> <p>For Android, an app explorer that traverses an Android app,\
              \ interacting with it and capturing screenshots at the same time.</p>\
              \ </note> </li> <li> <p>APPIUM_JAVA_JUNIT</p> </li> <li> <p>APPIUM_JAVA_TESTNG</p>\
              \ </li> <li> <p>APPIUM_PYTHON</p> </li> <li> <p>APPIUM_NODE</p> </li>\
              \ <li> <p>APPIUM_RUBY</p> </li> <li> <p>APPIUM_WEB_JAVA_JUNIT</p> </li>\
              \ <li> <p>APPIUM_WEB_JAVA_TESTNG</p> </li> <li> <p>APPIUM_WEB_PYTHON</p>\
              \ </li> <li> <p>APPIUM_WEB_NODE</p> </li> <li> <p>APPIUM_WEB_RUBY</p>\
              \ </li> <li> <p>CALABASH</p> </li> <li> <p>INSTRUMENTATION</p> </li>\
              \ <li> <p>UIAUTOMATION</p> </li> <li> <p>UIAUTOMATOR</p> </li> <li>\
              \ <p>XCTEST</p> </li> <li> <p>XCTEST_UI</p> </li> </ul>"
        created:
          allOf:
          - $ref: '#/components/schemas/DateTime'
          - description: When the test was created.
        status:
          allOf:
          - $ref: '#/components/schemas/ExecutionStatus'
          - description: <p>The test's status.</p> <p>Allowed values include:</p>
              <ul> <li> <p>PENDING</p> </li> <li> <p>PENDING_CONCURRENCY</p> </li>
              <li> <p>PENDING_DEVICE</p> </li> <li> <p>PROCESSING</p> </li> <li> <p>SCHEDULING</p>
              </li> <li> <p>PREPARING</p> </li> <li> <p>RUNNING</p> </li> <li> <p>COMPLETED</p>
              </li> <li> <p>STOPPING</p> </li> </ul>
        result:
          allOf:
          - $ref: '#/components/schemas/ExecutionResult'
          - description: <p>The test's result.</p> <p>Allowed values include:</p>
              <ul> <li> <p>PENDING</p> </li> <li> <p>PASSED</p> </li> <li> <p>WARNED</p>
              </li> <li> <p>FAILED</p> </li> <li> <p>SKIPPED</p> </li> <li> <p>ERRORED</p>
              </li> <li> <p>STOPPED</p> </li> </ul>
        started:
          allOf:
          - $ref: '#/components/schemas/DateTime'
          - description: The test's start time.
        stopped:
          allOf:
          - $ref: '#/components/schemas/DateTime'
          - description: The test's stop time.
        counters:
          $ref: '#/components/schemas/Test_counters'
        message:
          allOf:
          - $ref: '#/components/schemas/Message'
          - description: A message about the test's result.
        deviceMinutes:
          $ref: '#/components/schemas/Test_deviceMinutes'
      type: object
    HostAddress:
      maxLength: 1024
      type: string
    IncompatibilityMessage:
      description: Represents information about incompatibility.
      properties:
        message:
          allOf:
          - $ref: '#/components/schemas/Message'
          - description: A message about the incompatibility.
        type:
          allOf:
          - $ref: '#/components/schemas/DeviceAttribute'
          - description: "<p>The type of incompatibility.</p> <p>Allowed values include:</p>\
              \ <ul> <li> <p>ARN</p> </li> <li> <p>FORM_FACTOR (for example, phone\
              \ or tablet)</p> </li> <li> <p>MANUFACTURER</p> </li> <li> <p>PLATFORM\
              \ (for example, Android or iOS)</p> </li> <li> <p>REMOTE_ACCESS_ENABLED</p>\
              \ </li> <li> <p>APPIUM_VERSION</p> </li> </ul>"
      type: object
    InstanceProfiles:
      items:
        $ref: '#/components/schemas/InstanceProfile'
      type: array
    Jobs:
      items:
        $ref: '#/components/schemas/Job'
      type: array
    NetworkProfiles:
      items:
        $ref: '#/components/schemas/NetworkProfile'
      type: array
    OfferingPromotions:
      items:
        $ref: '#/components/schemas/OfferingPromotion'
      type: array
    OfferingTransactions:
      items:
        $ref: '#/components/schemas/OfferingTransaction'
      type: array
    Offerings:
      items:
        $ref: '#/components/schemas/Offering'
      type: array
    Projects:
      items:
        $ref: '#/components/schemas/Project'
      type: array
    RemoteAccessSessions:
      items:
        $ref: '#/components/schemas/RemoteAccessSession'
      type: array
    Runs:
      items:
        $ref: '#/components/schemas/Run'
      type: array
    Samples:
      items:
        $ref: '#/components/schemas/Sample'
      type: array
    Suites:
      items:
        $ref: '#/components/schemas/Suite'
      type: array
    TagList:
      items:
        $ref: '#/components/schemas/Tag'
      maxItems: 150
      type: array
    MaxPageSize:
      maximum: 1000
      minimum: 1
      type: integer
    TestGridProjects:
      items:
        $ref: '#/components/schemas/TestGridProject'
      type: array
    TestGridSessionActions:
      items:
        $ref: '#/components/schemas/TestGridSessionAction'
      type: array
    TestGridSessionArtifactCategory:
      enum:
      - VIDEO
      - LOG
      type: string
    TestGridSessionArtifacts:
      items:
        $ref: '#/components/schemas/TestGridSessionArtifact'
      type: array
    TestGridSessionStatus:
      enum:
      - ACTIVE
      - CLOSED
      - ERRORED
      type: string
    TestGridSessions:
      items:
        $ref: '#/components/schemas/TestGridSession'
      type: array
    Tests:
      items:
        $ref: '#/components/schemas/Test'
      type: array
    UniqueProblemsByExecutionResultMap:
      additionalProperties:
        $ref: '#/components/schemas/UniqueProblems'
      type: object
    Uploads:
      items:
        $ref: '#/components/schemas/Upload'
      type: array
    VPCEConfigurations:
      items:
        $ref: '#/components/schemas/VPCEConfiguration'
      type: array
    Location:
      description: "<p>Represents a latitude and longitude pair, expressed in geographic\
        \ coordinate system degrees (for example, 47.6204, -122.3491).</p> <p>Elevation\
        \ is currently not supported.</p>"
      properties:
        latitude:
          allOf:
          - $ref: '#/components/schemas/Double'
          - description: The latitude.
        longitude:
          allOf:
          - $ref: '#/components/schemas/Double'
          - description: The longitude.
      required:
      - latitude
      - longitude
      type: object
    Metadata:
      maxLength: 8192
      minLength: 0
      type: string
    MonetaryAmount:
      description: A number that represents the monetary amount for an offering or
        transaction.
      properties:
        amount:
          allOf:
          - $ref: '#/components/schemas/Double'
          - description: The numerical amount of an offering or transaction.
        currencyCode:
          allOf:
          - $ref: '#/components/schemas/CurrencyCode'
          - description: "The currency code of a monetary amount. For example, <code>USD</code>\
              \ means U.S. dollars."
      type: object
    NonEmptyString:
      maxLength: 4096
      minLength: 1
      pattern: .*\S.*
      type: string
    OfferingIdentifier:
      minLength: 32
      type: string
    OfferingType:
      enum:
      - RECURRING
      type: string
    RecurringCharges:
      items:
        $ref: '#/components/schemas/RecurringCharge'
      type: array
    Offering:
      description: Represents the metadata of a device offering.
      properties:
        id:
          allOf:
          - $ref: '#/components/schemas/OfferingIdentifier'
          - description: The ID that corresponds to a device offering.
        description:
          allOf:
          - $ref: '#/components/schemas/Message'
          - description: A string that describes the offering.
        type:
          allOf:
          - $ref: '#/components/schemas/OfferingType'
          - description: "The type of offering (for example, <code>RECURRING</code>)\
              \ for a device."
        platform:
          allOf:
          - $ref: '#/components/schemas/DevicePlatform'
          - description: "The platform of the device (for example, <code>ANDROID</code>\
              \ or <code>IOS</code>)."
        recurringCharges:
          allOf:
          - $ref: '#/components/schemas/RecurringCharges'
          - description: Specifies whether there are recurring charges for the offering.
      type: object
    OfferingPromotionIdentifier:
      minLength: 4
      type: string
    OfferingPromotion:
      description: Represents information about an offering promotion.
      properties:
        id:
          allOf:
          - $ref: '#/components/schemas/OfferingPromotionIdentifier'
          - description: The ID of the offering promotion.
        description:
          allOf:
          - $ref: '#/components/schemas/Message'
          - description: A string that describes the offering promotion.
      type: object
    OfferingTransactionType:
      enum:
      - PURCHASE
      - RENEW
      - SYSTEM
      type: string
    OfferingStatus:
      description: The status of the offering.
      properties:
        type:
          allOf:
          - $ref: '#/components/schemas/OfferingTransactionType'
          - description: The type specified for the offering status.
        offering:
          $ref: '#/components/schemas/OfferingStatus_offering'
        quantity:
          allOf:
          - $ref: '#/components/schemas/Integer'
          - description: The number of available devices in the offering.
        effectiveOn:
          allOf:
          - $ref: '#/components/schemas/DateTime'
          - description: The date on which the offering is effective.
      type: object
    TransactionIdentifier:
      minLength: 32
      type: string
    OfferingTransaction:
      description: Represents the metadata of an offering transaction.
      properties:
        offeringStatus:
          $ref: '#/components/schemas/OfferingTransaction_offeringStatus'
        transactionId:
          allOf:
          - $ref: '#/components/schemas/TransactionIdentifier'
          - description: The transaction ID of the offering transaction.
        offeringPromotionId:
          allOf:
          - $ref: '#/components/schemas/OfferingPromotionIdentifier'
          - description: The ID that corresponds to a device offering promotion.
        createdOn:
          allOf:
          - $ref: '#/components/schemas/DateTime'
          - description: The date on which an offering transaction was created.
        cost:
          $ref: '#/components/schemas/OfferingTransaction_cost'
      type: object
    ProblemDetail:
      description: Information about a problem detail.
      properties:
        arn:
          allOf:
          - $ref: '#/components/schemas/AmazonResourceName'
          - description: The problem detail's ARN.
        name:
          allOf:
          - $ref: '#/components/schemas/Name'
          - description: The problem detail's name.
      type: object
    Problem:
      description: Represents a specific warning or failure.
      properties:
        run:
          $ref: '#/components/schemas/Problem_run'
        job:
          $ref: '#/components/schemas/Problem_job'
        suite:
          $ref: '#/components/schemas/Problem_suite'
        test:
          $ref: '#/components/schemas/Problem_test'
        device:
          $ref: '#/components/schemas/Problem_device'
        result:
          allOf:
          - $ref: '#/components/schemas/ExecutionResult'
          - description: <p>The problem's result.</p> <p>Allowed values include:</p>
              <ul> <li> <p>PENDING</p> </li> <li> <p>PASSED</p> </li> <li> <p>WARNED</p>
              </li> <li> <p>FAILED</p> </li> <li> <p>SKIPPED</p> </li> <li> <p>ERRORED</p>
              </li> <li> <p>STOPPED</p> </li> </ul>
        message:
          allOf:
          - $ref: '#/components/schemas/Message'
          - description: A message about the problem's result.
      type: object
    Problems:
      items:
        $ref: '#/components/schemas/Problem'
      type: array
    Radios:
      description: "Represents the set of radios and their states on a device. Examples\
        \ of radios include Wi-Fi, GPS, Bluetooth, and NFC."
      properties:
        wifi:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          - description: "True if Wi-Fi is enabled at the beginning of the test. Otherwise,\
              \ false."
        bluetooth:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          - description: "True if Bluetooth is enabled at the beginning of the test.\
              \ Otherwise, false."
        nfc:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          - description: "True if NFC is enabled at the beginning of the test. Otherwise,\
              \ false."
        gps:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          - description: "True if GPS is enabled at the beginning of the test. Otherwise,\
              \ false."
      type: object
    RecurringChargeFrequency:
      enum:
      - MONTHLY
      type: string
    RecurringCharge:
      description: Specifies whether charges for devices are recurring.
      properties:
        cost:
          $ref: '#/components/schemas/RecurringCharge_cost'
        frequency:
          allOf:
          - $ref: '#/components/schemas/RecurringChargeFrequency'
          - description: The frequency in which charges recur.
      type: object
    Rule:
      description: Represents a condition for a device pool.
      properties:
        attribute:
          allOf:
          - $ref: '#/components/schemas/DeviceAttribute'
          - description: "<p>The rule's stringified attribute. For example, specify\
              \ the value as <code>\"\\\"abc\\\"\"</code>.</p> <p>The supported operators\
              \ for each attribute are provided in the following list.</p> <dl> <dt>APPIUM_VERSION</dt>\
              \ <dd> <p>The Appium version for the test.</p> <p>Supported operators:\
              \ <code>CONTAINS</code> </p> </dd> <dt>ARN</dt> <dd> <p>The Amazon Resource\
              \ Name (ARN) of the device (for example, <code>arn:aws:devicefarm:us-west-2::device:12345Example</code>.</p>\
              \ <p>Supported operators: <code>EQUALS</code>, <code>IN</code>, <code>NOT_IN</code>\
              \ </p> </dd> <dt>AVAILABILITY</dt> <dd> <p>The current availability\
              \ of the device. Valid values are AVAILABLE, HIGHLY_AVAILABLE, BUSY,\
              \ or TEMPORARY_NOT_AVAILABLE.</p> <p>Supported operators: <code>EQUALS</code>\
              \ </p> </dd> <dt>FLEET_TYPE</dt> <dd> <p>The fleet type. Valid values\
              \ are PUBLIC or PRIVATE.</p> <p>Supported operators: <code>EQUALS</code>\
              \ </p> </dd> <dt>FORM_FACTOR</dt> <dd> <p>The device form factor. Valid\
              \ values are PHONE or TABLET.</p> <p>Supported operators: <code>EQUALS</code>,\
              \ <code>IN</code>, <code>NOT_IN</code> </p> </dd> <dt>INSTANCE_ARN</dt>\
              \ <dd> <p>The Amazon Resource Name (ARN) of the device instance.</p>\
              \ <p>Supported operators: <code>IN</code>, <code>NOT_IN</code> </p>\
              \ </dd> <dt>INSTANCE_LABELS</dt> <dd> <p>The label of the device instance.</p>\
              \ <p>Supported operators: <code>CONTAINS</code> </p> </dd> <dt>MANUFACTURER</dt>\
              \ <dd> <p>The device manufacturer (for example, Apple).</p> <p>Supported\
              \ operators: <code>EQUALS</code>, <code>IN</code>, <code>NOT_IN</code>\
              \ </p> </dd> <dt>MODEL</dt> <dd> <p>The device model, such as Apple\
              \ iPad Air 2 or Google Pixel.</p> <p>Supported operators: <code>CONTAINS</code>,\
              \ <code>EQUALS</code>, <code>IN</code>, <code>NOT_IN</code> </p> </dd>\
              \ <dt>OS_VERSION</dt> <dd> <p>The operating system version (for example,\
              \ 10.3.2).</p> <p>Supported operators: <code>EQUALS</code>, <code>GREATER_THAN</code>,\
              \ <code>GREATER_THAN_OR_EQUALS</code>, <code>IN</code>, <code>LESS_THAN</code>,\
              \ <code>LESS_THAN_OR_EQUALS</code>, <code>NOT_IN</code> </p> </dd> <dt>PLATFORM</dt>\
              \ <dd> <p>The device platform. Valid values are ANDROID or IOS.</p>\
              \ <p>Supported operators: <code>EQUALS</code>, <code>IN</code>, <code>NOT_IN</code>\
              \ </p> </dd> <dt>REMOTE_ACCESS_ENABLED</dt> <dd> <p>Whether the device\
              \ is enabled for remote access. Valid values are TRUE or FALSE.</p>\
              \ <p>Supported operators: <code>EQUALS</code> </p> </dd> <dt>REMOTE_DEBUG_ENABLED</dt>\
              \ <dd> <p>Whether the device is enabled for remote debugging. Valid\
              \ values are TRUE or FALSE.</p> <p>Supported operators: <code>EQUALS</code>\
              \ </p> <p>Because remote debugging is <a href=\"https://docs.aws.amazon.com/devicefarm/latest/developerguide/history.html\"\
              >no longer supported</a>, this filter is ignored.</p> </dd> </dl>"
        operator:
          allOf:
          - $ref: '#/components/schemas/RuleOperator'
          - description: "Specifies how Device Farm compares the rule's attribute\
              \ to the value. For the operators that are supported by each attribute,\
              \ see the attribute descriptions."
        value:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The rule's value.
      type: object
    SampleType:
      enum:
      - CPU
      - MEMORY
      - THREADS
      - RX_RATE
      - TX_RATE
      - RX
      - TX
      - NATIVE_FRAMES
      - NATIVE_FPS
      - NATIVE_MIN_DRAWTIME
      - NATIVE_AVG_DRAWTIME
      - NATIVE_MAX_DRAWTIME
      - OPENGL_FRAMES
      - OPENGL_FPS
      - OPENGL_MIN_DRAWTIME
      - OPENGL_AVG_DRAWTIME
      - OPENGL_MAX_DRAWTIME
      type: string
    Sample:
      description: Represents a sample of performance data.
      properties:
        arn:
          allOf:
          - $ref: '#/components/schemas/AmazonResourceName'
          - description: The sample's ARN.
        type:
          allOf:
          - $ref: '#/components/schemas/SampleType'
          - description: "<p>The sample's type.</p> <p>Must be one of the following\
              \ values:</p> <ul> <li> <p>CPU: A CPU sample type. This is expressed\
              \ as the app processing CPU time (including child processes) as reported\
              \ by process, as a percentage.</p> </li> <li> <p>MEMORY: A memory usage\
              \ sample type. This is expressed as the total proportional set size\
              \ of an app process, in kilobytes.</p> </li> <li> <p>NATIVE_AVG_DRAWTIME</p>\
              \ </li> <li> <p>NATIVE_FPS</p> </li> <li> <p>NATIVE_FRAMES</p> </li>\
              \ <li> <p>NATIVE_MAX_DRAWTIME</p> </li> <li> <p>NATIVE_MIN_DRAWTIME</p>\
              \ </li> <li> <p>OPENGL_AVG_DRAWTIME</p> </li> <li> <p>OPENGL_FPS</p>\
              \ </li> <li> <p>OPENGL_FRAMES</p> </li> <li> <p>OPENGL_MAX_DRAWTIME</p>\
              \ </li> <li> <p>OPENGL_MIN_DRAWTIME</p> </li> <li> <p>RX</p> </li> <li>\
              \ <p>RX_RATE: The total number of bytes per second (TCP and UDP) that\
              \ are sent, by app process.</p> </li> <li> <p>THREADS: A threads sample\
              \ type. This is expressed as the total number of threads per app process.</p>\
              \ </li> <li> <p>TX</p> </li> <li> <p>TX_RATE: The total number of bytes\
              \ per second (TCP and UDP) that are received, by app process.</p> </li>\
              \ </ul>"
        url:
          allOf:
          - $ref: '#/components/schemas/URL'
          - description: The presigned Amazon S3 URL that can be used with a GET request
              to download the sample's file.
      type: object
    TestParameters:
      additionalProperties:
        $ref: '#/components/schemas/String'
      type: object
    SecurityGroupId:
      maxLength: 4096
      minLength: 1
      pattern: "^sg-[0-9a-fA-F]{8,}$"
      type: string
    SecurityGroupIds:
      items:
        $ref: '#/components/schemas/NonEmptyString'
      maxItems: 5
      minItems: 1
      type: array
    SensitiveURL:
      format: password
      maxLength: 2048
      minLength: 0
      type: string
    SubnetId:
      maxLength: 4096
      minLength: 1
      pattern: "^subnet-[0-9a-fA-F]{8,}$"
      type: string
    SubnetIds:
      items:
        $ref: '#/components/schemas/NonEmptyString'
      maxItems: 8
      minItems: 1
      type: array
    TagKey:
      maxLength: 128
      minLength: 1
      type: string
    TagValue:
      maxLength: 256
      minLength: 0
      type: string
    Tag:
      description: "The metadata that you apply to a resource to help you categorize\
        \ and organize it. Each tag consists of a key and an optional value, both\
        \ of which you define. Tag keys can have a maximum character length of 128\
        \ characters. Tag values can have a maximum length of 256 characters. "
      properties:
        Key:
          allOf:
          - $ref: '#/components/schemas/TagKey'
          - description: One part of a key-value pair that makes up a tag. A <code>key</code>
              is a general label that acts like a category for more specific tag values.
        Value:
          allOf:
          - $ref: '#/components/schemas/TagValue'
          - description: The optional part of a key-value pair that makes up a tag.
              A <code>value</code> acts as a descriptor in a tag category (key).
      required:
      - Key
      - Value
      type: object
    TagKeyList:
      items:
        $ref: '#/components/schemas/TagKey'
      maxItems: 150
      type: array
    TestGridSessionAction:
      description: An action taken by a <a>TestGridSession</a> browser instance.
      properties:
        action:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The action taken by the session.
        started:
          allOf:
          - $ref: '#/components/schemas/DateTime'
          - description: The time that the session invoked the action.
        duration:
          allOf:
          - $ref: '#/components/schemas/Long'
          - description: "The time, in milliseconds, that the action took to complete\
              \ in the browser."
        statusCode:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: HTTP status code returned to the browser when the action
              was taken.
        requestMethod:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: HTTP method that the browser used to make the request.
      type: object
    TestGridSessionArtifactType:
      enum:
      - UNKNOWN
      - VIDEO
      - SELENIUM_LOG
      type: string
    TestGridSessionArtifact:
      description: <p>Artifacts are video and other files that are produced in the
        process of running a browser in an automated context. </p> <note> <p>Video
        elements might be broken up into multiple artifacts as they grow in size during
        creation. </p> </note>
      properties:
        filename:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The file name of the artifact.
        type:
          allOf:
          - $ref: '#/components/schemas/TestGridSessionArtifactType'
          - description: The kind of artifact.
        url:
          allOf:
          - $ref: '#/components/schemas/SensitiveString'
          - description: A semi-stable URL to the content of the object.
      type: object
    UniqueProblem:
      description: "A collection of one or more problems, grouped by their result."
      properties:
        message:
          allOf:
          - $ref: '#/components/schemas/Message'
          - description: A message about the unique problems' result.
        problems:
          allOf:
          - $ref: '#/components/schemas/Problems'
          - description: Information about the problems.
      type: object
    UniqueProblems:
      items:
        $ref: '#/components/schemas/UniqueProblem'
      type: array
    UploadStatus:
      enum:
      - INITIALIZED
      - PROCESSING
      - SUCCEEDED
      - FAILED
      type: string
    UploadCategory:
      enum:
      - CURATED
      - PRIVATE
      type: string
    VpcSecurityGroupIds:
      items:
        $ref: '#/components/schemas/SecurityGroupId'
      maxItems: 5
      minItems: 1
      type: array
    VpcSubnetIds:
      items:
        $ref: '#/components/schemas/SubnetId'
      maxItems: 8
      minItems: 1
      type: array
    CreateDevicePoolResult_devicePool:
      allOf:
      - $ref: '#/components/schemas/DevicePool'
      - description: The newly created device pool.
    CreateInstanceProfileResult_instanceProfile:
      allOf:
      - $ref: '#/components/schemas/InstanceProfile'
      - description: An object that contains information about your instance profile.
      example:
        excludeAppPackagesFromCleanup: ""
        name: ""
        rebootAfterUse: ""
        description: ""
        packageCleanup: ""
        arn: ""
    CreateNetworkProfileResult_networkProfile:
      allOf:
      - $ref: '#/components/schemas/NetworkProfile'
      - description: The network profile that is returned by the create network profile
          request.
      example:
        uplinkLossPercent: ""
        downlinkBandwidthBits: ""
        downlinkDelayMs: ""
        uplinkJitterMs: ""
        name: ""
        description: ""
        uplinkBandwidthBits: ""
        downlinkJitterMs: ""
        arn: ""
        type: ""
        downlinkLossPercent: ""
        uplinkDelayMs: ""
    CreateProjectResult_project:
      allOf:
      - $ref: '#/components/schemas/Project'
      - description: The newly created project.
    CreateProjectRequest_vpcConfig:
      allOf:
      - $ref: '#/components/schemas/VpcConfig'
      - description: The VPC security groups and subnets that are attached to a project.
      example:
        securityGroupIds: ""
        vpcId: ""
        subnetIds: ""
    CreateRemoteAccessSessionResult_remoteAccessSession:
      allOf:
      - $ref: '#/components/schemas/RemoteAccessSession'
      - description: A container that describes the remote access session when the
          request to create a remote access session is sent.
    CreateRemoteAccessSessionRequest_configuration:
      allOf:
      - $ref: '#/components/schemas/CreateRemoteAccessSessionConfiguration'
      - description: The configuration information for the remote access session request.
      example:
        billingMethod: ""
        vpceConfigurationArns: ""
    CreateTestGridProjectResult_testGridProject:
      allOf:
      - $ref: '#/components/schemas/TestGridProject'
      - description: ARN of the Selenium testing project that was created.
      example:
        created: ""
        vpcConfig:
          securityGroupIds: ""
          vpcId: ""
          subnetIds: ""
        name: ""
        description: ""
        arn: ""
    CreateTestGridProjectRequest_vpcConfig:
      allOf:
      - $ref: '#/components/schemas/TestGridVpcConfig'
      - description: The VPC security groups and subnets that are attached to a project.
      example:
        securityGroupIds: ""
        vpcId: ""
        subnetIds: ""
    CreateUploadResult_upload:
      allOf:
      - $ref: '#/components/schemas/Upload'
      - description: The newly created upload.
    CreateVPCEConfigurationResult_vpceConfiguration:
      allOf:
      - $ref: '#/components/schemas/VPCEConfiguration'
      - description: An object that contains information about your VPC endpoint configuration.
      example:
        serviceDnsName: ""
        vpceServiceName: ""
        vpceConfigurationDescription: ""
        vpceConfigurationName: ""
        arn: ""
    GetAccountSettingsResult_accountSettings:
      allOf:
      - $ref: '#/components/schemas/AccountSettings'
      - description: The account settings.
    GetDeviceResult_device:
      allOf:
      - $ref: '#/components/schemas/Device'
      - description: An object that contains information about the requested device.
    GetDeviceInstanceResult_deviceInstance:
      allOf:
      - $ref: '#/components/schemas/DeviceInstance'
      - description: An object that contains information about your device instance.
      example:
        instanceProfile:
          excludeAppPackagesFromCleanup: ""
          name: ""
          rebootAfterUse: ""
          description: ""
          packageCleanup: ""
          arn: ""
        deviceArn: ""
        arn: ""
        udid: ""
        labels: ""
        status: ""
    GetDevicePoolResult_devicePool:
      allOf:
      - $ref: '#/components/schemas/DevicePool'
      - description: An object that contains information about the requested device
          pool.
    GetDevicePoolCompatibilityRequest_test:
      allOf:
      - $ref: '#/components/schemas/ScheduleRunTest'
      - description: Information about the uploaded test to be run against the device
          pool.
      example:
        filter: ""
        testSpecArn: ""
        testPackageArn: ""
        type: ""
        parameters: ""
    GetDevicePoolCompatibilityRequest_configuration:
      allOf:
      - $ref: '#/components/schemas/ScheduleRunConfiguration'
      - description: An object that contains information about the settings for a
          run.
      example:
        extraDataPackageArn: ""
        radios:
          wifi: ""
          bluetooth: ""
          nfc: ""
          gps: ""
        billingMethod: ""
        vpceConfigurationArns: ""
        auxiliaryApps: ""
        location:
          latitude: ""
          longitude: ""
        networkProfileArn: ""
        locale: ""
        customerArtifactPaths:
          iosPaths: ""
          androidPaths: ""
          deviceHostPaths: ""
    GetInstanceProfileResult_instanceProfile:
      allOf:
      - $ref: '#/components/schemas/InstanceProfile'
      - description: An object that contains information about an instance profile.
      example:
        excludeAppPackagesFromCleanup: ""
        name: ""
        rebootAfterUse: ""
        description: ""
        packageCleanup: ""
        arn: ""
    GetJobResult_job:
      allOf:
      - $ref: '#/components/schemas/Job'
      - description: An object that contains information about the requested job.
    GetNetworkProfileResult_networkProfile:
      allOf:
      - $ref: '#/components/schemas/NetworkProfile'
      - description: The network profile.
      example:
        uplinkLossPercent: ""
        downlinkBandwidthBits: ""
        downlinkDelayMs: ""
        uplinkJitterMs: ""
        name: ""
        description: ""
        uplinkBandwidthBits: ""
        downlinkJitterMs: ""
        arn: ""
        type: ""
        downlinkLossPercent: ""
        uplinkDelayMs: ""
    GetProjectResult_project:
      allOf:
      - $ref: '#/components/schemas/Project'
      - description: The project to get information about.
    GetRemoteAccessSessionResult_remoteAccessSession:
      allOf:
      - $ref: '#/components/schemas/RemoteAccessSession'
      - description: A container that lists detailed information about the remote
          access session.
    GetRunResult_run:
      allOf:
      - $ref: '#/components/schemas/Run'
      - description: The run to get results from.
    GetSuiteResult_suite:
      allOf:
      - $ref: '#/components/schemas/Suite'
      - description: A collection of one or more tests.
    GetTestResult_test:
      allOf:
      - $ref: '#/components/schemas/Test'
      - description: A test condition that is evaluated.
    GetTestGridProjectResult_testGridProject:
      allOf:
      - $ref: '#/components/schemas/TestGridProject'
      - description: A <a>TestGridProject</a>.
      example:
        created: ""
        vpcConfig:
          securityGroupIds: ""
          vpcId: ""
          subnetIds: ""
        name: ""
        description: ""
        arn: ""
    GetTestGridSessionResult_testGridSession:
      allOf:
      - $ref: '#/components/schemas/TestGridSession'
      - description: The <a>TestGridSession</a> that was requested.
      example:
        seleniumProperties: ""
        created: ""
        billingMinutes: ""
        ended: ""
        arn: ""
        status: ""
    GetUploadResult_upload:
      allOf:
      - $ref: '#/components/schemas/Upload'
      - description: An app or a set of one or more tests to upload or that have been
          uploaded.
    InstallToRemoteAccessSessionResult_appUpload:
      allOf:
      - $ref: '#/components/schemas/Upload'
      - description: An app to upload or that has been uploaded.
    PurchaseOfferingResult_offeringTransaction:
      allOf:
      - $ref: '#/components/schemas/OfferingTransaction'
      - description: Represents the offering transaction for the purchase result.
    RenewOfferingResult_offeringTransaction:
      allOf:
      - $ref: '#/components/schemas/OfferingTransaction'
      - description: Represents the status of the offering transaction for the renewal.
    ScheduleRunResult_run:
      allOf:
      - $ref: '#/components/schemas/Run'
      - description: Information about the scheduled run.
    ScheduleRunRequest_deviceSelectionConfiguration:
      allOf:
      - $ref: '#/components/schemas/DeviceSelectionConfiguration'
      - description: <p>The filter criteria used to dynamically select a set of devices
          for a test run and the maximum number of devices to be included in the run.</p>
          <p>Either <b> <code>devicePoolArn</code> </b> or <b> <code>deviceSelectionConfiguration</code>
          </b> is required in a request.</p>
      example:
        maxDevices: ""
        filters: ""
    ScheduleRunRequest_test:
      allOf:
      - $ref: '#/components/schemas/ScheduleRunTest'
      - description: Information about the test for the run to be scheduled.
      example:
        filter: ""
        testSpecArn: ""
        testPackageArn: ""
        type: ""
        parameters: ""
    ScheduleRunRequest_configuration:
      allOf:
      - $ref: '#/components/schemas/ScheduleRunConfiguration'
      - description: Information about the settings for the run to be scheduled.
      example:
        extraDataPackageArn: ""
        radios:
          wifi: ""
          bluetooth: ""
          nfc: ""
          gps: ""
        billingMethod: ""
        vpceConfigurationArns: ""
        auxiliaryApps: ""
        location:
          latitude: ""
          longitude: ""
        networkProfileArn: ""
        locale: ""
        customerArtifactPaths:
          iosPaths: ""
          androidPaths: ""
          deviceHostPaths: ""
    ScheduleRunRequest_executionConfiguration:
      allOf:
      - $ref: '#/components/schemas/ExecutionConfiguration'
      - description: "Specifies configuration information about a test run, such as\
          \ the execution timeout (in minutes)."
      example:
        videoCapture: ""
        appPackagesCleanup: ""
        jobTimeoutMinutes: ""
        skipAppResign: ""
        accountsCleanup: ""
    StopJobResult_job:
      allOf:
      - $ref: '#/components/schemas/Job'
      - description: The job that was stopped.
      example:
        videoCapture: ""
        stopped: ""
        counters:
          total: ""
          stopped: ""
          warned: ""
          passed: ""
          failed: ""
          errored: ""
          skipped: ""
        deviceMinutes:
          total: ""
          unmetered: ""
          metered: ""
        created: ""
        started: ""
        type: ""
        message: ""
        videoEndpoint: ""
        result: ""
        name: ""
        arn: ""
        device:
          fleetName: ""
          image: ""
          memory: ""
          os: ""
          modelId: ""
          instances: ""
          formFactor: ""
          cpu:
            clock: ""
            frequency: ""
            architecture: ""
          heapSize: ""
          remoteAccessEnabled: ""
          availability: ""
          resolution:
            width: ""
            height: ""
          platform: ""
          remoteDebugEnabled: ""
          manufacturer: ""
          radio: ""
          carrier: ""
          fleetType: ""
          name: ""
          model: ""
          arn: ""
        instanceArn: ""
        status: ""
    StopRemoteAccessSessionResult_remoteAccessSession:
      allOf:
      - $ref: '#/components/schemas/RemoteAccessSession'
      - description: A container that represents the metadata from the service about
          the remote access session you are stopping.
      example:
        stopped: ""
        clientId: ""
        interactionMode: ""
        deviceMinutes:
          total: ""
          unmetered: ""
          metered: ""
        created: ""
        billingMethod: ""
        skipAppResign: ""
        started: ""
        message: ""
        remoteDebugEnabled: ""
        remoteRecordAppArn: ""
        result: ""
        deviceUdid: ""
        remoteRecordEnabled: ""
        endpoint: ""
        vpcConfig:
          securityGroupIds: ""
          vpcId: ""
          subnetIds: ""
        name: ""
        hostAddress: ""
        arn: ""
        device:
          fleetName: ""
          image: ""
          memory: ""
          os: ""
          modelId: ""
          instances: ""
          formFactor: ""
          cpu:
            clock: ""
            frequency: ""
            architecture: ""
          heapSize: ""
          remoteAccessEnabled: ""
          availability: ""
          resolution:
            width: ""
            height: ""
          platform: ""
          remoteDebugEnabled: ""
          manufacturer: ""
          radio: ""
          carrier: ""
          fleetType: ""
          name: ""
          model: ""
          arn: ""
        instanceArn: ""
        status: ""
    StopRunResult_run:
      allOf:
      - $ref: '#/components/schemas/Run'
      - description: The run that was stopped.
    UpdateDevicePoolResult_devicePool:
      allOf:
      - $ref: '#/components/schemas/DevicePool'
      - description: The device pool you just updated.
    UpdateNetworkProfileResult_networkProfile:
      allOf:
      - $ref: '#/components/schemas/NetworkProfile'
      - description: A list of the available network profiles.
      example:
        uplinkLossPercent: ""
        downlinkBandwidthBits: ""
        downlinkDelayMs: ""
        uplinkJitterMs: ""
        name: ""
        description: ""
        uplinkBandwidthBits: ""
        downlinkJitterMs: ""
        arn: ""
        type: ""
        downlinkLossPercent: ""
        uplinkDelayMs: ""
    UpdateProjectResult_project:
      allOf:
      - $ref: '#/components/schemas/Project'
      - description: The project to update.
    UpdateTestGridProjectResult_testGridProject:
      allOf:
      - $ref: '#/components/schemas/TestGridProject'
      - description: "The project, including updated information."
      example:
        created: ""
        vpcConfig:
          securityGroupIds: ""
          vpcId: ""
          subnetIds: ""
        name: ""
        description: ""
        arn: ""
    UpdateUploadResult_upload:
      allOf:
      - $ref: '#/components/schemas/Upload'
      - description: A test spec uploaded to Device Farm.
      example:
        metadata: ""
        created: ""
        name: ""
        arn: ""
        type: ""
        message: ""
        category: ""
        contentType: ""
        url: ""
        status: ""
    AccountSettings_trialMinutes:
      allOf:
      - $ref: '#/components/schemas/TrialMinutes'
      - description: Information about an AWS account's usage of free trial device
          minutes.
    RemoteAccessSession_device:
      allOf:
      - $ref: '#/components/schemas/Device'
      - description: The device (phone or tablet) used in the remote access session.
      example:
        fleetName: ""
        image: ""
        memory: ""
        os: ""
        modelId: ""
        instances: ""
        formFactor: ""
        cpu:
          clock: ""
          frequency: ""
          architecture: ""
        heapSize: ""
        remoteAccessEnabled: ""
        availability: ""
        resolution:
          width: ""
          height: ""
        platform: ""
        remoteDebugEnabled: ""
        manufacturer: ""
        radio: ""
        carrier: ""
        fleetType: ""
        name: ""
        model: ""
        arn: ""
    RemoteAccessSession_deviceMinutes:
      allOf:
      - $ref: '#/components/schemas/DeviceMinutes'
      - description: The number of minutes a device is used in a remote access session
          (including setup and teardown minutes).
      example:
        total: ""
        unmetered: ""
        metered: ""
    Device_cpu:
      allOf:
      - $ref: '#/components/schemas/CPU'
      - description: Information about the device's CPU.
      example:
        clock: ""
        frequency: ""
        architecture: ""
    Device_resolution:
      allOf:
      - $ref: '#/components/schemas/Resolution'
      - description: The resolution of the device.
      example:
        width: ""
        height: ""
    DeviceInstance_instanceProfile:
      allOf:
      - $ref: '#/components/schemas/InstanceProfile'
      - description: A object that contains information about the instance profile.
      example:
        excludeAppPackagesFromCleanup: ""
        name: ""
        rebootAfterUse: ""
        description: ""
        packageCleanup: ""
        arn: ""
    DevicePoolCompatibilityResult_device:
      allOf:
      - $ref: '#/components/schemas/Device'
      - description: The device (phone or tablet) to return information about.
    ScheduleRunConfiguration_location:
      allOf:
      - $ref: '#/components/schemas/Location'
      - description: Information about the location that is used for the run.
      example:
        latitude: ""
        longitude: ""
    ScheduleRunConfiguration_customerArtifactPaths:
      allOf:
      - $ref: '#/components/schemas/CustomerArtifactPaths'
      - description: Input <code>CustomerArtifactPaths</code> object for the scheduled
          run configuration.
      example:
        iosPaths: ""
        androidPaths: ""
        deviceHostPaths: ""
    ScheduleRunConfiguration_radios:
      allOf:
      - $ref: '#/components/schemas/Radios'
      - description: Information about the radio states for the run.
      example:
        wifi: ""
        bluetooth: ""
        nfc: ""
        gps: ""
    Job_counters:
      allOf:
      - $ref: '#/components/schemas/Counters'
      - description: The job's result counters.
      example:
        total: ""
        stopped: ""
        warned: ""
        passed: ""
        failed: ""
        errored: ""
        skipped: ""
    Job_device:
      allOf:
      - $ref: '#/components/schemas/Device'
      - description: The device (phone or tablet).
      example:
        fleetName: ""
        image: ""
        memory: ""
        os: ""
        modelId: ""
        instances: ""
        formFactor: ""
        cpu:
          clock: ""
          frequency: ""
          architecture: ""
        heapSize: ""
        remoteAccessEnabled: ""
        availability: ""
        resolution:
          width: ""
          height: ""
        platform: ""
        remoteDebugEnabled: ""
        manufacturer: ""
        radio: ""
        carrier: ""
        fleetType: ""
        name: ""
        model: ""
        arn: ""
    Job_deviceMinutes:
      allOf:
      - $ref: '#/components/schemas/DeviceMinutes'
      - description: Represents the total (metered or unmetered) minutes used by the
          job.
      example:
        total: ""
        unmetered: ""
        metered: ""
    Run_counters:
      allOf:
      - $ref: '#/components/schemas/Counters'
      - description: The run's result counters.
    Run_deviceMinutes:
      allOf:
      - $ref: '#/components/schemas/DeviceMinutes'
      - description: Represents the total (metered or unmetered) minutes used by the
          test run.
    Run_networkProfile:
      allOf:
      - $ref: '#/components/schemas/NetworkProfile'
      - description: The network profile being used for a test run.
    Run_customerArtifactPaths:
      allOf:
      - $ref: '#/components/schemas/CustomerArtifactPaths'
      - description: Output <code>CustomerArtifactPaths</code> object for the test
          run.
    Run_deviceSelectionResult:
      allOf:
      - $ref: '#/components/schemas/DeviceSelectionResult'
      - description: The results of a device filter used to select the devices for
          a test run.
    Suite_counters:
      allOf:
      - $ref: '#/components/schemas/Counters'
      - description: The suite's result counters.
    Suite_deviceMinutes:
      allOf:
      - $ref: '#/components/schemas/DeviceMinutes'
      - description: Represents the total (metered or unmetered) minutes used by the
          test suite.
    Test_counters:
      allOf:
      - $ref: '#/components/schemas/Counters'
      - description: The test's result counters.
    Test_deviceMinutes:
      allOf:
      - $ref: '#/components/schemas/DeviceMinutes'
      - description: Represents the total (metered or unmetered) minutes used by the
          test.
    OfferingStatus_offering:
      allOf:
      - $ref: '#/components/schemas/Offering'
      - description: Represents the metadata of an offering status.
    OfferingTransaction_offeringStatus:
      allOf:
      - $ref: '#/components/schemas/OfferingStatus'
      - description: The status of an offering transaction.
    OfferingTransaction_cost:
      allOf:
      - $ref: '#/components/schemas/MonetaryAmount'
      - description: The cost of an offering transaction.
    Problem_run:
      allOf:
      - $ref: '#/components/schemas/ProblemDetail'
      - description: Information about the associated run.
    Problem_job:
      allOf:
      - $ref: '#/components/schemas/ProblemDetail'
      - description: Information about the associated job.
    Problem_suite:
      allOf:
      - $ref: '#/components/schemas/ProblemDetail'
      - description: Information about the associated suite.
    Problem_test:
      allOf:
      - $ref: '#/components/schemas/ProblemDetail'
      - description: Information about the associated test.
    Problem_device:
      allOf:
      - $ref: '#/components/schemas/Device'
      - description: Information about the associated device.
    RecurringCharge_cost:
      allOf:
      - $ref: '#/components/schemas/MonetaryAmount'
      - description: The cost of the recurring charge.
  securitySchemes:
    hmac:
      description: Amazon Signature authorization v4
      in: header
      name: Authorization
      type: apiKey
      x-amazon-apigateway-authtype: awsSigv4
x-hasEquivalentPaths: true

