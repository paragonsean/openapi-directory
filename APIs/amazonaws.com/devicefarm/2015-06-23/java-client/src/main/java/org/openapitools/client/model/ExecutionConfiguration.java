/*
 * AWS Device Farm
 * <p>Welcome to the AWS Device Farm API documentation, which contains APIs for:</p> <ul> <li> <p>Testing on desktop browsers</p> <p> Device Farm makes it possible for you to test your web applications on desktop browsers using Selenium. The APIs for desktop browser testing contain <code>TestGrid</code> in their names. For more information, see <a href=\"https://docs.aws.amazon.com/devicefarm/latest/testgrid/\">Testing Web Applications on Selenium with Device Farm</a>.</p> </li> <li> <p>Testing on real mobile devices</p> <p>Device Farm makes it possible for you to test apps on physical phones, tablets, and other devices in the cloud. For more information, see the <a href=\"https://docs.aws.amazon.com/devicefarm/latest/developerguide/\">Device Farm Developer Guide</a>.</p> </li> </ul>
 *
 * The version of the OpenAPI document: 2015-06-23
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * Represents configuration information about a test run, such as the execution timeout (in minutes).
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T12:10:03.389051-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class ExecutionConfiguration {
  public static final String SERIALIZED_NAME_JOB_TIMEOUT_MINUTES = "jobTimeoutMinutes";
  @SerializedName(SERIALIZED_NAME_JOB_TIMEOUT_MINUTES)
  private Integer jobTimeoutMinutes;

  public static final String SERIALIZED_NAME_ACCOUNTS_CLEANUP = "accountsCleanup";
  @SerializedName(SERIALIZED_NAME_ACCOUNTS_CLEANUP)
  private Boolean accountsCleanup;

  public static final String SERIALIZED_NAME_APP_PACKAGES_CLEANUP = "appPackagesCleanup";
  @SerializedName(SERIALIZED_NAME_APP_PACKAGES_CLEANUP)
  private Boolean appPackagesCleanup;

  public static final String SERIALIZED_NAME_VIDEO_CAPTURE = "videoCapture";
  @SerializedName(SERIALIZED_NAME_VIDEO_CAPTURE)
  private Boolean videoCapture;

  public static final String SERIALIZED_NAME_SKIP_APP_RESIGN = "skipAppResign";
  @SerializedName(SERIALIZED_NAME_SKIP_APP_RESIGN)
  private Boolean skipAppResign;

  public ExecutionConfiguration() {
  }

  public ExecutionConfiguration jobTimeoutMinutes(Integer jobTimeoutMinutes) {
    this.jobTimeoutMinutes = jobTimeoutMinutes;
    return this;
  }

  /**
   * Get jobTimeoutMinutes
   * @return jobTimeoutMinutes
   */
  @javax.annotation.Nullable
  public Integer getJobTimeoutMinutes() {
    return jobTimeoutMinutes;
  }

  public void setJobTimeoutMinutes(Integer jobTimeoutMinutes) {
    this.jobTimeoutMinutes = jobTimeoutMinutes;
  }


  public ExecutionConfiguration accountsCleanup(Boolean accountsCleanup) {
    this.accountsCleanup = accountsCleanup;
    return this;
  }

  /**
   * Get accountsCleanup
   * @return accountsCleanup
   */
  @javax.annotation.Nullable
  public Boolean getAccountsCleanup() {
    return accountsCleanup;
  }

  public void setAccountsCleanup(Boolean accountsCleanup) {
    this.accountsCleanup = accountsCleanup;
  }


  public ExecutionConfiguration appPackagesCleanup(Boolean appPackagesCleanup) {
    this.appPackagesCleanup = appPackagesCleanup;
    return this;
  }

  /**
   * Get appPackagesCleanup
   * @return appPackagesCleanup
   */
  @javax.annotation.Nullable
  public Boolean getAppPackagesCleanup() {
    return appPackagesCleanup;
  }

  public void setAppPackagesCleanup(Boolean appPackagesCleanup) {
    this.appPackagesCleanup = appPackagesCleanup;
  }


  public ExecutionConfiguration videoCapture(Boolean videoCapture) {
    this.videoCapture = videoCapture;
    return this;
  }

  /**
   * Get videoCapture
   * @return videoCapture
   */
  @javax.annotation.Nullable
  public Boolean getVideoCapture() {
    return videoCapture;
  }

  public void setVideoCapture(Boolean videoCapture) {
    this.videoCapture = videoCapture;
  }


  public ExecutionConfiguration skipAppResign(Boolean skipAppResign) {
    this.skipAppResign = skipAppResign;
    return this;
  }

  /**
   * Get skipAppResign
   * @return skipAppResign
   */
  @javax.annotation.Nullable
  public Boolean getSkipAppResign() {
    return skipAppResign;
  }

  public void setSkipAppResign(Boolean skipAppResign) {
    this.skipAppResign = skipAppResign;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ExecutionConfiguration executionConfiguration = (ExecutionConfiguration) o;
    return Objects.equals(this.jobTimeoutMinutes, executionConfiguration.jobTimeoutMinutes) &&
        Objects.equals(this.accountsCleanup, executionConfiguration.accountsCleanup) &&
        Objects.equals(this.appPackagesCleanup, executionConfiguration.appPackagesCleanup) &&
        Objects.equals(this.videoCapture, executionConfiguration.videoCapture) &&
        Objects.equals(this.skipAppResign, executionConfiguration.skipAppResign);
  }

  @Override
  public int hashCode() {
    return Objects.hash(jobTimeoutMinutes, accountsCleanup, appPackagesCleanup, videoCapture, skipAppResign);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ExecutionConfiguration {\n");
    sb.append("    jobTimeoutMinutes: ").append(toIndentedString(jobTimeoutMinutes)).append("\n");
    sb.append("    accountsCleanup: ").append(toIndentedString(accountsCleanup)).append("\n");
    sb.append("    appPackagesCleanup: ").append(toIndentedString(appPackagesCleanup)).append("\n");
    sb.append("    videoCapture: ").append(toIndentedString(videoCapture)).append("\n");
    sb.append("    skipAppResign: ").append(toIndentedString(skipAppResign)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("jobTimeoutMinutes");
    openapiFields.add("accountsCleanup");
    openapiFields.add("appPackagesCleanup");
    openapiFields.add("videoCapture");
    openapiFields.add("skipAppResign");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to ExecutionConfiguration
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!ExecutionConfiguration.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in ExecutionConfiguration is not found in the empty JSON string", ExecutionConfiguration.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!ExecutionConfiguration.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `ExecutionConfiguration` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // validate the optional field `jobTimeoutMinutes`
      if (jsonObj.get("jobTimeoutMinutes") != null && !jsonObj.get("jobTimeoutMinutes").isJsonNull()) {
        Integer.validateJsonElement(jsonObj.get("jobTimeoutMinutes"));
      }
      // validate the optional field `accountsCleanup`
      if (jsonObj.get("accountsCleanup") != null && !jsonObj.get("accountsCleanup").isJsonNull()) {
        Boolean.validateJsonElement(jsonObj.get("accountsCleanup"));
      }
      // validate the optional field `appPackagesCleanup`
      if (jsonObj.get("appPackagesCleanup") != null && !jsonObj.get("appPackagesCleanup").isJsonNull()) {
        Boolean.validateJsonElement(jsonObj.get("appPackagesCleanup"));
      }
      // validate the optional field `videoCapture`
      if (jsonObj.get("videoCapture") != null && !jsonObj.get("videoCapture").isJsonNull()) {
        Boolean.validateJsonElement(jsonObj.get("videoCapture"));
      }
      // validate the optional field `skipAppResign`
      if (jsonObj.get("skipAppResign") != null && !jsonObj.get("skipAppResign").isJsonNull()) {
        Boolean.validateJsonElement(jsonObj.get("skipAppResign"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!ExecutionConfiguration.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'ExecutionConfiguration' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<ExecutionConfiguration> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(ExecutionConfiguration.class));

       return (TypeAdapter<T>) new TypeAdapter<ExecutionConfiguration>() {
           @Override
           public void write(JsonWriter out, ExecutionConfiguration value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public ExecutionConfiguration read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of ExecutionConfiguration given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of ExecutionConfiguration
   * @throws IOException if the JSON string is invalid with respect to ExecutionConfiguration
   */
  public static ExecutionConfiguration fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, ExecutionConfiguration.class);
  }

  /**
   * Convert an instance of ExecutionConfiguration to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

