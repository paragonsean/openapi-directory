/*
 * AWS Device Farm
 * <p>Welcome to the AWS Device Farm API documentation, which contains APIs for:</p> <ul> <li> <p>Testing on desktop browsers</p> <p> Device Farm makes it possible for you to test your web applications on desktop browsers using Selenium. The APIs for desktop browser testing contain <code>TestGrid</code> in their names. For more information, see <a href=\"https://docs.aws.amazon.com/devicefarm/latest/testgrid/\">Testing Web Applications on Selenium with Device Farm</a>.</p> </li> <li> <p>Testing on real mobile devices</p> <p>Device Farm makes it possible for you to test apps on physical phones, tablets, and other devices in the cloud. For more information, see the <a href=\"https://docs.aws.amazon.com/devicefarm/latest/developerguide/\">Device Farm Developer Guide</a>.</p> </li> </ul>
 *
 * The version of the OpenAPI document: 2015-06-23
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.annotations.SerializedName;

import java.io.IOException;
import com.google.gson.TypeAdapter;
import com.google.gson.JsonElement;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;

/**
 * Gets or Sets ArtifactType
 */
@JsonAdapter(ArtifactType.Adapter.class)
public enum ArtifactType {
  
  UNKNOWN("UNKNOWN"),
  
  SCREENSHOT("SCREENSHOT"),
  
  DEVICE_LOG("DEVICE_LOG"),
  
  MESSAGE_LOG("MESSAGE_LOG"),
  
  VIDEO_LOG("VIDEO_LOG"),
  
  RESULT_LOG("RESULT_LOG"),
  
  SERVICE_LOG("SERVICE_LOG"),
  
  WEBKIT_LOG("WEBKIT_LOG"),
  
  INSTRUMENTATION_OUTPUT("INSTRUMENTATION_OUTPUT"),
  
  EXERCISER_MONKEY_OUTPUT("EXERCISER_MONKEY_OUTPUT"),
  
  CALABASH_JSON_OUTPUT("CALABASH_JSON_OUTPUT"),
  
  CALABASH_PRETTY_OUTPUT("CALABASH_PRETTY_OUTPUT"),
  
  CALABASH_STANDARD_OUTPUT("CALABASH_STANDARD_OUTPUT"),
  
  CALABASH_JAVA_XML_OUTPUT("CALABASH_JAVA_XML_OUTPUT"),
  
  AUTOMATION_OUTPUT("AUTOMATION_OUTPUT"),
  
  APPIUM_SERVER_OUTPUT("APPIUM_SERVER_OUTPUT"),
  
  APPIUM_JAVA_OUTPUT("APPIUM_JAVA_OUTPUT"),
  
  APPIUM_JAVA_XML_OUTPUT("APPIUM_JAVA_XML_OUTPUT"),
  
  APPIUM_PYTHON_OUTPUT("APPIUM_PYTHON_OUTPUT"),
  
  APPIUM_PYTHON_XML_OUTPUT("APPIUM_PYTHON_XML_OUTPUT"),
  
  EXPLORER_EVENT_LOG("EXPLORER_EVENT_LOG"),
  
  EXPLORER_SUMMARY_LOG("EXPLORER_SUMMARY_LOG"),
  
  APPLICATION_CRASH_REPORT("APPLICATION_CRASH_REPORT"),
  
  XCTEST_LOG("XCTEST_LOG"),
  
  VIDEO("VIDEO"),
  
  CUSTOMER_ARTIFACT("CUSTOMER_ARTIFACT"),
  
  CUSTOMER_ARTIFACT_LOG("CUSTOMER_ARTIFACT_LOG"),
  
  TESTSPEC_OUTPUT("TESTSPEC_OUTPUT");

  private String value;

  ArtifactType(String value) {
    this.value = value;
  }

  public String getValue() {
    return value;
  }

  @Override
  public String toString() {
    return String.valueOf(value);
  }

  public static ArtifactType fromValue(String value) {
    for (ArtifactType b : ArtifactType.values()) {
      if (b.value.equals(value)) {
        return b;
      }
    }
    throw new IllegalArgumentException("Unexpected value '" + value + "'");
  }

  public static class Adapter extends TypeAdapter<ArtifactType> {
    @Override
    public void write(final JsonWriter jsonWriter, final ArtifactType enumeration) throws IOException {
      jsonWriter.value(enumeration.getValue());
    }

    @Override
    public ArtifactType read(final JsonReader jsonReader) throws IOException {
      String value = jsonReader.nextString();
      return ArtifactType.fromValue(value);
    }
  }

  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
    String value = jsonElement.getAsString();
    ArtifactType.fromValue(value);
  }
}

