/**
 * AWS Device Farm
 * <p>Welcome to the AWS Device Farm API documentation, which contains APIs for:</p> <ul> <li> <p>Testing on desktop browsers</p> <p> Device Farm makes it possible for you to test your web applications on desktop browsers using Selenium. The APIs for desktop browser testing contain <code>TestGrid</code> in their names. For more information, see <a href=\"https://docs.aws.amazon.com/devicefarm/latest/testgrid/\">Testing Web Applications on Selenium with Device Farm</a>.</p> </li> <li> <p>Testing on real mobile devices</p> <p>Device Farm makes it possible for you to test apps on physical phones, tablets, and other devices in the cloud. For more information, see the <a href=\"https://docs.aws.amazon.com/devicefarm/latest/developerguide/\">Device Farm Developer Guide</a>.</p> </li> </ul>
 *
 * The version of the OpenAPI document: 2015-06-23
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIGetTestGridSessionResult_testGridSession.h
 *
 * 
 */

#ifndef OAIGetTestGridSessionResult_testGridSession_H
#define OAIGetTestGridSessionResult_testGridSession_H

#include <QJsonObject>

#include "OAITestGridSessionStatus.h"
#include <QDateTime>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIGetTestGridSessionResult_testGridSession : public OAIObject {
public:
    OAIGetTestGridSessionResult_testGridSession();
    OAIGetTestGridSessionResult_testGridSession(QString json);
    ~OAIGetTestGridSessionResult_testGridSession() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getArn() const;
    void setArn(const QString &arn);
    bool is_arn_Set() const;
    bool is_arn_Valid() const;

    OAITestGridSessionStatus getStatus() const;
    void setStatus(const OAITestGridSessionStatus &status);
    bool is_status_Set() const;
    bool is_status_Valid() const;

    QDateTime getCreated() const;
    void setCreated(const QDateTime &created);
    bool is_created_Set() const;
    bool is_created_Valid() const;

    QDateTime getEnded() const;
    void setEnded(const QDateTime &ended);
    bool is_ended_Set() const;
    bool is_ended_Valid() const;

    double getBillingMinutes() const;
    void setBillingMinutes(const double &billing_minutes);
    bool is_billing_minutes_Set() const;
    bool is_billing_minutes_Valid() const;

    QString getSeleniumProperties() const;
    void setSeleniumProperties(const QString &selenium_properties);
    bool is_selenium_properties_Set() const;
    bool is_selenium_properties_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_arn;
    bool m_arn_isSet;
    bool m_arn_isValid;

    OAITestGridSessionStatus m_status;
    bool m_status_isSet;
    bool m_status_isValid;

    QDateTime m_created;
    bool m_created_isSet;
    bool m_created_isValid;

    QDateTime m_ended;
    bool m_ended_isSet;
    bool m_ended_isValid;

    double m_billing_minutes;
    bool m_billing_minutes_isSet;
    bool m_billing_minutes_isValid;

    QString m_selenium_properties;
    bool m_selenium_properties_isSet;
    bool m_selenium_properties_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIGetTestGridSessionResult_testGridSession)

#endif // OAIGetTestGridSessionResult_testGridSession_H
