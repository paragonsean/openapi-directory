/**
 * AWS Device Farm
 * <p>Welcome to the AWS Device Farm API documentation, which contains APIs for:</p> <ul> <li> <p>Testing on desktop browsers</p> <p> Device Farm makes it possible for you to test your web applications on desktop browsers using Selenium. The APIs for desktop browser testing contain <code>TestGrid</code> in their names. For more information, see <a href=\"https://docs.aws.amazon.com/devicefarm/latest/testgrid/\">Testing Web Applications on Selenium with Device Farm</a>.</p> </li> <li> <p>Testing on real mobile devices</p> <p>Device Farm makes it possible for you to test apps on physical phones, tablets, and other devices in the cloud. For more information, see the <a href=\"https://docs.aws.amazon.com/devicefarm/latest/developerguide/\">Device Farm Developer Guide</a>.</p> </li> </ul>
 *
 * The version of the OpenAPI document: 2015-06-23
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIPurchaseOfferingResult_offeringTransaction.h
 *
 * 
 */

#ifndef OAIPurchaseOfferingResult_offeringTransaction_H
#define OAIPurchaseOfferingResult_offeringTransaction_H

#include <QJsonObject>

#include "OAIOfferingTransaction_cost.h"
#include "OAIOfferingTransaction_offeringStatus.h"
#include <QDateTime>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIOfferingTransaction_offeringStatus;
class OAIOfferingTransaction_cost;

class OAIPurchaseOfferingResult_offeringTransaction : public OAIObject {
public:
    OAIPurchaseOfferingResult_offeringTransaction();
    OAIPurchaseOfferingResult_offeringTransaction(QString json);
    ~OAIPurchaseOfferingResult_offeringTransaction() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAIOfferingTransaction_offeringStatus getOfferingStatus() const;
    void setOfferingStatus(const OAIOfferingTransaction_offeringStatus &offering_status);
    bool is_offering_status_Set() const;
    bool is_offering_status_Valid() const;

    QString getTransactionId() const;
    void setTransactionId(const QString &transaction_id);
    bool is_transaction_id_Set() const;
    bool is_transaction_id_Valid() const;

    QString getOfferingPromotionId() const;
    void setOfferingPromotionId(const QString &offering_promotion_id);
    bool is_offering_promotion_id_Set() const;
    bool is_offering_promotion_id_Valid() const;

    QDateTime getCreatedOn() const;
    void setCreatedOn(const QDateTime &created_on);
    bool is_created_on_Set() const;
    bool is_created_on_Valid() const;

    OAIOfferingTransaction_cost getCost() const;
    void setCost(const OAIOfferingTransaction_cost &cost);
    bool is_cost_Set() const;
    bool is_cost_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAIOfferingTransaction_offeringStatus m_offering_status;
    bool m_offering_status_isSet;
    bool m_offering_status_isValid;

    QString m_transaction_id;
    bool m_transaction_id_isSet;
    bool m_transaction_id_isValid;

    QString m_offering_promotion_id;
    bool m_offering_promotion_id_isSet;
    bool m_offering_promotion_id_isValid;

    QDateTime m_created_on;
    bool m_created_on_isSet;
    bool m_created_on_isValid;

    OAIOfferingTransaction_cost m_cost;
    bool m_cost_isSet;
    bool m_cost_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIPurchaseOfferingResult_offeringTransaction)

#endif // OAIPurchaseOfferingResult_offeringTransaction_H
