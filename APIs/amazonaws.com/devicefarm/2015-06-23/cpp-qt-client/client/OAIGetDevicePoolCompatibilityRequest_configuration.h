/**
 * AWS Device Farm
 * <p>Welcome to the AWS Device Farm API documentation, which contains APIs for:</p> <ul> <li> <p>Testing on desktop browsers</p> <p> Device Farm makes it possible for you to test your web applications on desktop browsers using Selenium. The APIs for desktop browser testing contain <code>TestGrid</code> in their names. For more information, see <a href=\"https://docs.aws.amazon.com/devicefarm/latest/testgrid/\">Testing Web Applications on Selenium with Device Farm</a>.</p> </li> <li> <p>Testing on real mobile devices</p> <p>Device Farm makes it possible for you to test apps on physical phones, tablets, and other devices in the cloud. For more information, see the <a href=\"https://docs.aws.amazon.com/devicefarm/latest/developerguide/\">Device Farm Developer Guide</a>.</p> </li> </ul>
 *
 * The version of the OpenAPI document: 2015-06-23
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIGetDevicePoolCompatibilityRequest_configuration.h
 *
 * 
 */

#ifndef OAIGetDevicePoolCompatibilityRequest_configuration_H
#define OAIGetDevicePoolCompatibilityRequest_configuration_H

#include <QJsonObject>

#include "OAIBillingMethod.h"
#include "OAIScheduleRunConfiguration_customerArtifactPaths.h"
#include "OAIScheduleRunConfiguration_location.h"
#include "OAIScheduleRunConfiguration_radios.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIScheduleRunConfiguration_location;
class OAIScheduleRunConfiguration_customerArtifactPaths;
class OAIScheduleRunConfiguration_radios;

class OAIGetDevicePoolCompatibilityRequest_configuration : public OAIObject {
public:
    OAIGetDevicePoolCompatibilityRequest_configuration();
    OAIGetDevicePoolCompatibilityRequest_configuration(QString json);
    ~OAIGetDevicePoolCompatibilityRequest_configuration() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getExtraDataPackageArn() const;
    void setExtraDataPackageArn(const QString &extra_data_package_arn);
    bool is_extra_data_package_arn_Set() const;
    bool is_extra_data_package_arn_Valid() const;

    QString getNetworkProfileArn() const;
    void setNetworkProfileArn(const QString &network_profile_arn);
    bool is_network_profile_arn_Set() const;
    bool is_network_profile_arn_Valid() const;

    QString getLocale() const;
    void setLocale(const QString &locale);
    bool is_locale_Set() const;
    bool is_locale_Valid() const;

    OAIScheduleRunConfiguration_location getLocation() const;
    void setLocation(const OAIScheduleRunConfiguration_location &location);
    bool is_location_Set() const;
    bool is_location_Valid() const;

    QList getVpceConfigurationArns() const;
    void setVpceConfigurationArns(const QList &vpce_configuration_arns);
    bool is_vpce_configuration_arns_Set() const;
    bool is_vpce_configuration_arns_Valid() const;

    OAIScheduleRunConfiguration_customerArtifactPaths getCustomerArtifactPaths() const;
    void setCustomerArtifactPaths(const OAIScheduleRunConfiguration_customerArtifactPaths &customer_artifact_paths);
    bool is_customer_artifact_paths_Set() const;
    bool is_customer_artifact_paths_Valid() const;

    OAIScheduleRunConfiguration_radios getRadios() const;
    void setRadios(const OAIScheduleRunConfiguration_radios &radios);
    bool is_radios_Set() const;
    bool is_radios_Valid() const;

    QList getAuxiliaryApps() const;
    void setAuxiliaryApps(const QList &auxiliary_apps);
    bool is_auxiliary_apps_Set() const;
    bool is_auxiliary_apps_Valid() const;

    OAIBillingMethod getBillingMethod() const;
    void setBillingMethod(const OAIBillingMethod &billing_method);
    bool is_billing_method_Set() const;
    bool is_billing_method_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_extra_data_package_arn;
    bool m_extra_data_package_arn_isSet;
    bool m_extra_data_package_arn_isValid;

    QString m_network_profile_arn;
    bool m_network_profile_arn_isSet;
    bool m_network_profile_arn_isValid;

    QString m_locale;
    bool m_locale_isSet;
    bool m_locale_isValid;

    OAIScheduleRunConfiguration_location m_location;
    bool m_location_isSet;
    bool m_location_isValid;

    QList m_vpce_configuration_arns;
    bool m_vpce_configuration_arns_isSet;
    bool m_vpce_configuration_arns_isValid;

    OAIScheduleRunConfiguration_customerArtifactPaths m_customer_artifact_paths;
    bool m_customer_artifact_paths_isSet;
    bool m_customer_artifact_paths_isValid;

    OAIScheduleRunConfiguration_radios m_radios;
    bool m_radios_isSet;
    bool m_radios_isValid;

    QList m_auxiliary_apps;
    bool m_auxiliary_apps_isSet;
    bool m_auxiliary_apps_isValid;

    OAIBillingMethod m_billing_method;
    bool m_billing_method_isSet;
    bool m_billing_method_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIGetDevicePoolCompatibilityRequest_configuration)

#endif // OAIGetDevicePoolCompatibilityRequest_configuration_H
