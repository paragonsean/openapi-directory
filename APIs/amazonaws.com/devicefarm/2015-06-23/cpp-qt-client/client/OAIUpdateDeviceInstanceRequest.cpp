/**
 * AWS Device Farm
 * <p>Welcome to the AWS Device Farm API documentation, which contains APIs for:</p> <ul> <li> <p>Testing on desktop browsers</p> <p> Device Farm makes it possible for you to test your web applications on desktop browsers using Selenium. The APIs for desktop browser testing contain <code>TestGrid</code> in their names. For more information, see <a href=\"https://docs.aws.amazon.com/devicefarm/latest/testgrid/\">Testing Web Applications on Selenium with Device Farm</a>.</p> </li> <li> <p>Testing on real mobile devices</p> <p>Device Farm makes it possible for you to test apps on physical phones, tablets, and other devices in the cloud. For more information, see the <a href=\"https://docs.aws.amazon.com/devicefarm/latest/developerguide/\">Device Farm Developer Guide</a>.</p> </li> </ul>
 *
 * The version of the OpenAPI document: 2015-06-23
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIUpdateDeviceInstanceRequest.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIUpdateDeviceInstanceRequest::OAIUpdateDeviceInstanceRequest(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIUpdateDeviceInstanceRequest::OAIUpdateDeviceInstanceRequest() {
    this->initializeModel();
}

OAIUpdateDeviceInstanceRequest::~OAIUpdateDeviceInstanceRequest() {}

void OAIUpdateDeviceInstanceRequest::initializeModel() {

    m_arn_isSet = false;
    m_arn_isValid = false;

    m_profile_arn_isSet = false;
    m_profile_arn_isValid = false;

    m_labels_isSet = false;
    m_labels_isValid = false;
}

void OAIUpdateDeviceInstanceRequest::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIUpdateDeviceInstanceRequest::fromJsonObject(QJsonObject json) {

    m_arn_isValid = ::OpenAPI::fromJsonValue(m_arn, json[QString("arn")]);
    m_arn_isSet = !json[QString("arn")].isNull() && m_arn_isValid;

    m_profile_arn_isValid = ::OpenAPI::fromJsonValue(m_profile_arn, json[QString("profileArn")]);
    m_profile_arn_isSet = !json[QString("profileArn")].isNull() && m_profile_arn_isValid;

    m_labels_isValid = ::OpenAPI::fromJsonValue(m_labels, json[QString("labels")]);
    m_labels_isSet = !json[QString("labels")].isNull() && m_labels_isValid;
}

QString OAIUpdateDeviceInstanceRequest::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIUpdateDeviceInstanceRequest::asJsonObject() const {
    QJsonObject obj;
    if (m_arn_isSet) {
        obj.insert(QString("arn"), ::OpenAPI::toJsonValue(m_arn));
    }
    if (m_profile_arn_isSet) {
        obj.insert(QString("profileArn"), ::OpenAPI::toJsonValue(m_profile_arn));
    }
    if (m_labels.isSet()) {
        obj.insert(QString("labels"), ::OpenAPI::toJsonValue(m_labels));
    }
    return obj;
}

QString OAIUpdateDeviceInstanceRequest::getArn() const {
    return m_arn;
}
void OAIUpdateDeviceInstanceRequest::setArn(const QString &arn) {
    m_arn = arn;
    m_arn_isSet = true;
}

bool OAIUpdateDeviceInstanceRequest::is_arn_Set() const{
    return m_arn_isSet;
}

bool OAIUpdateDeviceInstanceRequest::is_arn_Valid() const{
    return m_arn_isValid;
}

QString OAIUpdateDeviceInstanceRequest::getProfileArn() const {
    return m_profile_arn;
}
void OAIUpdateDeviceInstanceRequest::setProfileArn(const QString &profile_arn) {
    m_profile_arn = profile_arn;
    m_profile_arn_isSet = true;
}

bool OAIUpdateDeviceInstanceRequest::is_profile_arn_Set() const{
    return m_profile_arn_isSet;
}

bool OAIUpdateDeviceInstanceRequest::is_profile_arn_Valid() const{
    return m_profile_arn_isValid;
}

QList OAIUpdateDeviceInstanceRequest::getLabels() const {
    return m_labels;
}
void OAIUpdateDeviceInstanceRequest::setLabels(const QList &labels) {
    m_labels = labels;
    m_labels_isSet = true;
}

bool OAIUpdateDeviceInstanceRequest::is_labels_Set() const{
    return m_labels_isSet;
}

bool OAIUpdateDeviceInstanceRequest::is_labels_Valid() const{
    return m_labels_isValid;
}

bool OAIUpdateDeviceInstanceRequest::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_arn_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_profile_arn_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_labels.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIUpdateDeviceInstanceRequest::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_arn_isValid && true;
}

} // namespace OpenAPI
