/**
 * AWS Device Farm
 * <p>Welcome to the AWS Device Farm API documentation, which contains APIs for:</p> <ul> <li> <p>Testing on desktop browsers</p> <p> Device Farm makes it possible for you to test your web applications on desktop browsers using Selenium. The APIs for desktop browser testing contain <code>TestGrid</code> in their names. For more information, see <a href=\"https://docs.aws.amazon.com/devicefarm/latest/testgrid/\">Testing Web Applications on Selenium with Device Farm</a>.</p> </li> <li> <p>Testing on real mobile devices</p> <p>Device Farm makes it possible for you to test apps on physical phones, tablets, and other devices in the cloud. For more information, see the <a href=\"https://docs.aws.amazon.com/devicefarm/latest/developerguide/\">Device Farm Developer Guide</a>.</p> </li> </ul>
 *
 * The version of the OpenAPI document: 2015-06-23
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIOfferingTransaction_offeringStatus.h
 *
 * 
 */

#ifndef OAIOfferingTransaction_offeringStatus_H
#define OAIOfferingTransaction_offeringStatus_H

#include <QJsonObject>

#include "OAIOfferingStatus_offering.h"
#include "OAIOfferingTransactionType.h"
#include <QDateTime>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIOfferingStatus_offering;

class OAIOfferingTransaction_offeringStatus : public OAIObject {
public:
    OAIOfferingTransaction_offeringStatus();
    OAIOfferingTransaction_offeringStatus(QString json);
    ~OAIOfferingTransaction_offeringStatus() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAIOfferingTransactionType getType() const;
    void setType(const OAIOfferingTransactionType &type);
    bool is_type_Set() const;
    bool is_type_Valid() const;

    OAIOfferingStatus_offering getOffering() const;
    void setOffering(const OAIOfferingStatus_offering &offering);
    bool is_offering_Set() const;
    bool is_offering_Valid() const;

    qint32 getQuantity() const;
    void setQuantity(const qint32 &quantity);
    bool is_quantity_Set() const;
    bool is_quantity_Valid() const;

    QDateTime getEffectiveOn() const;
    void setEffectiveOn(const QDateTime &effective_on);
    bool is_effective_on_Set() const;
    bool is_effective_on_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAIOfferingTransactionType m_type;
    bool m_type_isSet;
    bool m_type_isValid;

    OAIOfferingStatus_offering m_offering;
    bool m_offering_isSet;
    bool m_offering_isValid;

    qint32 m_quantity;
    bool m_quantity_isSet;
    bool m_quantity_isValid;

    QDateTime m_effective_on;
    bool m_effective_on_isSet;
    bool m_effective_on_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIOfferingTransaction_offeringStatus)

#endif // OAIOfferingTransaction_offeringStatus_H
