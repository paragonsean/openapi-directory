/**
 * AWS Device Farm
 * <p>Welcome to the AWS Device Farm API documentation, which contains APIs for:</p> <ul> <li> <p>Testing on desktop browsers</p> <p> Device Farm makes it possible for you to test your web applications on desktop browsers using Selenium. The APIs for desktop browser testing contain <code>TestGrid</code> in their names. For more information, see <a href=\"https://docs.aws.amazon.com/devicefarm/latest/testgrid/\">Testing Web Applications on Selenium with Device Farm</a>.</p> </li> <li> <p>Testing on real mobile devices</p> <p>Device Farm makes it possible for you to test apps on physical phones, tablets, and other devices in the cloud. For more information, see the <a href=\"https://docs.aws.amazon.com/devicefarm/latest/developerguide/\">Device Farm Developer Guide</a>.</p> </li> </ul>
 *
 * The version of the OpenAPI document: 2015-06-23
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIUploadCategory.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIUploadCategory::OAIUploadCategory(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIUploadCategory::OAIUploadCategory() {
    this->initializeModel();
}

OAIUploadCategory::~OAIUploadCategory() {}

void OAIUploadCategory::initializeModel() {

    m_value_isSet = false;
    m_value_isValid = false;
    m_value = eOAIUploadCategory::INVALID_VALUE_OPENAPI_GENERATED;
}

void OAIUploadCategory::fromJson(QString jsonString) {
    
    if ( jsonString.compare("CURATED", Qt::CaseInsensitive) == 0) {
        m_value = eOAIUploadCategory::CURATED;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("PRIVATE", Qt::CaseInsensitive) == 0) {
        m_value = eOAIUploadCategory::PRIVATE;
        m_value_isSet = m_value_isValid = true;
    }
}

void OAIUploadCategory::fromJsonValue(QJsonValue json) {
fromJson(json.toString());
}

QString OAIUploadCategory::asJson() const {
    
    QString val;
    switch (m_value){
        case eOAIUploadCategory::CURATED:
            val = "CURATED";
            break;
        case eOAIUploadCategory::PRIVATE:
            val = "PRIVATE";
            break;
        default:
            break;
    }
    return val;
}

QJsonValue OAIUploadCategory::asJsonValue() const {
    
    return QJsonValue(asJson());
}


OAIUploadCategory::eOAIUploadCategory OAIUploadCategory::getValue() const {
    return m_value;
}

void OAIUploadCategory::setValue(const OAIUploadCategory::eOAIUploadCategory& value){
    m_value = value;
    m_value_isSet = true;
}
bool OAIUploadCategory::isSet() const {
    
    return m_value_isSet;
}

bool OAIUploadCategory::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_value_isValid;
}

} // namespace OpenAPI
