/**
 * AWS Device Farm
 * <p>Welcome to the AWS Device Farm API documentation, which contains APIs for:</p> <ul> <li> <p>Testing on desktop browsers</p> <p> Device Farm makes it possible for you to test your web applications on desktop browsers using Selenium. The APIs for desktop browser testing contain <code>TestGrid</code> in their names. For more information, see <a href=\"https://docs.aws.amazon.com/devicefarm/latest/testgrid/\">Testing Web Applications on Selenium with Device Farm</a>.</p> </li> <li> <p>Testing on real mobile devices</p> <p>Device Farm makes it possible for you to test apps on physical phones, tablets, and other devices in the cloud. For more information, see the <a href=\"https://docs.aws.amazon.com/devicefarm/latest/developerguide/\">Device Farm Developer Guide</a>.</p> </li> </ul>
 *
 * The version of the OpenAPI document: 2015-06-23
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAICreateRemoteAccessSessionRequest.h
 *
 * Creates and submits a request to start a remote access session.
 */

#ifndef OAICreateRemoteAccessSessionRequest_H
#define OAICreateRemoteAccessSessionRequest_H

#include <QJsonObject>

#include "OAICreateRemoteAccessSessionRequest_configuration.h"
#include "OAIInteractionMode.h"
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAICreateRemoteAccessSessionRequest_configuration;

class OAICreateRemoteAccessSessionRequest : public OAIObject {
public:
    OAICreateRemoteAccessSessionRequest();
    OAICreateRemoteAccessSessionRequest(QString json);
    ~OAICreateRemoteAccessSessionRequest() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getProjectArn() const;
    void setProjectArn(const QString &project_arn);
    bool is_project_arn_Set() const;
    bool is_project_arn_Valid() const;

    QString getDeviceArn() const;
    void setDeviceArn(const QString &device_arn);
    bool is_device_arn_Set() const;
    bool is_device_arn_Valid() const;

    QString getInstanceArn() const;
    void setInstanceArn(const QString &instance_arn);
    bool is_instance_arn_Set() const;
    bool is_instance_arn_Valid() const;

    QString getSshPublicKey() const;
    void setSshPublicKey(const QString &ssh_public_key);
    bool is_ssh_public_key_Set() const;
    bool is_ssh_public_key_Valid() const;

    bool getRemoteDebugEnabled() const;
    void setRemoteDebugEnabled(const bool &remote_debug_enabled);
    bool is_remote_debug_enabled_Set() const;
    bool is_remote_debug_enabled_Valid() const;

    bool getRemoteRecordEnabled() const;
    void setRemoteRecordEnabled(const bool &remote_record_enabled);
    bool is_remote_record_enabled_Set() const;
    bool is_remote_record_enabled_Valid() const;

    QString getRemoteRecordAppArn() const;
    void setRemoteRecordAppArn(const QString &remote_record_app_arn);
    bool is_remote_record_app_arn_Set() const;
    bool is_remote_record_app_arn_Valid() const;

    QString getName() const;
    void setName(const QString &name);
    bool is_name_Set() const;
    bool is_name_Valid() const;

    QString getClientId() const;
    void setClientId(const QString &client_id);
    bool is_client_id_Set() const;
    bool is_client_id_Valid() const;

    OAICreateRemoteAccessSessionRequest_configuration getConfiguration() const;
    void setConfiguration(const OAICreateRemoteAccessSessionRequest_configuration &configuration);
    bool is_configuration_Set() const;
    bool is_configuration_Valid() const;

    OAIInteractionMode getInteractionMode() const;
    void setInteractionMode(const OAIInteractionMode &interaction_mode);
    bool is_interaction_mode_Set() const;
    bool is_interaction_mode_Valid() const;

    bool getSkipAppResign() const;
    void setSkipAppResign(const bool &skip_app_resign);
    bool is_skip_app_resign_Set() const;
    bool is_skip_app_resign_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_project_arn;
    bool m_project_arn_isSet;
    bool m_project_arn_isValid;

    QString m_device_arn;
    bool m_device_arn_isSet;
    bool m_device_arn_isValid;

    QString m_instance_arn;
    bool m_instance_arn_isSet;
    bool m_instance_arn_isValid;

    QString m_ssh_public_key;
    bool m_ssh_public_key_isSet;
    bool m_ssh_public_key_isValid;

    bool m_remote_debug_enabled;
    bool m_remote_debug_enabled_isSet;
    bool m_remote_debug_enabled_isValid;

    bool m_remote_record_enabled;
    bool m_remote_record_enabled_isSet;
    bool m_remote_record_enabled_isValid;

    QString m_remote_record_app_arn;
    bool m_remote_record_app_arn_isSet;
    bool m_remote_record_app_arn_isValid;

    QString m_name;
    bool m_name_isSet;
    bool m_name_isValid;

    QString m_client_id;
    bool m_client_id_isSet;
    bool m_client_id_isValid;

    OAICreateRemoteAccessSessionRequest_configuration m_configuration;
    bool m_configuration_isSet;
    bool m_configuration_isValid;

    OAIInteractionMode m_interaction_mode;
    bool m_interaction_mode_isSet;
    bool m_interaction_mode_isValid;

    bool m_skip_app_resign;
    bool m_skip_app_resign_isSet;
    bool m_skip_app_resign_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAICreateRemoteAccessSessionRequest)

#endif // OAICreateRemoteAccessSessionRequest_H
