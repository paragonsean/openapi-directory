/**
 * AWS Device Farm
 * <p>Welcome to the AWS Device Farm API documentation, which contains APIs for:</p> <ul> <li> <p>Testing on desktop browsers</p> <p> Device Farm makes it possible for you to test your web applications on desktop browsers using Selenium. The APIs for desktop browser testing contain <code>TestGrid</code> in their names. For more information, see <a href=\"https://docs.aws.amazon.com/devicefarm/latest/testgrid/\">Testing Web Applications on Selenium with Device Farm</a>.</p> </li> <li> <p>Testing on real mobile devices</p> <p>Device Farm makes it possible for you to test apps on physical phones, tablets, and other devices in the cloud. For more information, see the <a href=\"https://docs.aws.amazon.com/devicefarm/latest/developerguide/\">Device Farm Developer Guide</a>.</p> </li> </ul>
 *
 * The version of the OpenAPI document: 2015-06-23
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIGetDevicePoolCompatibilityRequest.h
 *
 * Represents a request to the get device pool compatibility operation.
 */

#ifndef OAIGetDevicePoolCompatibilityRequest_H
#define OAIGetDevicePoolCompatibilityRequest_H

#include <QJsonObject>

#include "OAIGetDevicePoolCompatibilityRequest_configuration.h"
#include "OAIGetDevicePoolCompatibilityRequest_test.h"
#include "OAITestType.h"
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIGetDevicePoolCompatibilityRequest_test;
class OAIGetDevicePoolCompatibilityRequest_configuration;

class OAIGetDevicePoolCompatibilityRequest : public OAIObject {
public:
    OAIGetDevicePoolCompatibilityRequest();
    OAIGetDevicePoolCompatibilityRequest(QString json);
    ~OAIGetDevicePoolCompatibilityRequest() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getDevicePoolArn() const;
    void setDevicePoolArn(const QString &device_pool_arn);
    bool is_device_pool_arn_Set() const;
    bool is_device_pool_arn_Valid() const;

    QString getAppArn() const;
    void setAppArn(const QString &app_arn);
    bool is_app_arn_Set() const;
    bool is_app_arn_Valid() const;

    OAITestType getTestType() const;
    void setTestType(const OAITestType &test_type);
    bool is_test_type_Set() const;
    bool is_test_type_Valid() const;

    OAIGetDevicePoolCompatibilityRequest_test getTest() const;
    void setTest(const OAIGetDevicePoolCompatibilityRequest_test &test);
    bool is_test_Set() const;
    bool is_test_Valid() const;

    OAIGetDevicePoolCompatibilityRequest_configuration getConfiguration() const;
    void setConfiguration(const OAIGetDevicePoolCompatibilityRequest_configuration &configuration);
    bool is_configuration_Set() const;
    bool is_configuration_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_device_pool_arn;
    bool m_device_pool_arn_isSet;
    bool m_device_pool_arn_isValid;

    QString m_app_arn;
    bool m_app_arn_isSet;
    bool m_app_arn_isValid;

    OAITestType m_test_type;
    bool m_test_type_isSet;
    bool m_test_type_isValid;

    OAIGetDevicePoolCompatibilityRequest_test m_test;
    bool m_test_isSet;
    bool m_test_isValid;

    OAIGetDevicePoolCompatibilityRequest_configuration m_configuration;
    bool m_configuration_isSet;
    bool m_configuration_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIGetDevicePoolCompatibilityRequest)

#endif // OAIGetDevicePoolCompatibilityRequest_H
