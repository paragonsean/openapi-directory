/**
 * AWS Device Farm
 * <p>Welcome to the AWS Device Farm API documentation, which contains APIs for:</p> <ul> <li> <p>Testing on desktop browsers</p> <p> Device Farm makes it possible for you to test your web applications on desktop browsers using Selenium. The APIs for desktop browser testing contain <code>TestGrid</code> in their names. For more information, see <a href=\"https://docs.aws.amazon.com/devicefarm/latest/testgrid/\">Testing Web Applications on Selenium with Device Farm</a>.</p> </li> <li> <p>Testing on real mobile devices</p> <p>Device Farm makes it possible for you to test apps on physical phones, tablets, and other devices in the cloud. For more information, see the <a href=\"https://docs.aws.amazon.com/devicefarm/latest/developerguide/\">Device Farm Developer Guide</a>.</p> </li> </ul>
 *
 * The version of the OpenAPI document: 2015-06-23
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIGetAccountSettingsResult_accountSettings.h
 *
 * 
 */

#ifndef OAIGetAccountSettingsResult_accountSettings_H
#define OAIGetAccountSettingsResult_accountSettings_H

#include <QJsonObject>

#include "OAIAccountSettings_trialMinutes.h"
#include <QMap>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIAccountSettings_trialMinutes;

class OAIGetAccountSettingsResult_accountSettings : public OAIObject {
public:
    OAIGetAccountSettingsResult_accountSettings();
    OAIGetAccountSettingsResult_accountSettings(QString json);
    ~OAIGetAccountSettingsResult_accountSettings() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getAwsAccountNumber() const;
    void setAwsAccountNumber(const QString &aws_account_number);
    bool is_aws_account_number_Set() const;
    bool is_aws_account_number_Valid() const;

    QMap getUnmeteredDevices() const;
    void setUnmeteredDevices(const QMap &unmetered_devices);
    bool is_unmetered_devices_Set() const;
    bool is_unmetered_devices_Valid() const;

    QMap getUnmeteredRemoteAccessDevices() const;
    void setUnmeteredRemoteAccessDevices(const QMap &unmetered_remote_access_devices);
    bool is_unmetered_remote_access_devices_Set() const;
    bool is_unmetered_remote_access_devices_Valid() const;

    qint32 getMaxJobTimeoutMinutes() const;
    void setMaxJobTimeoutMinutes(const qint32 &max_job_timeout_minutes);
    bool is_max_job_timeout_minutes_Set() const;
    bool is_max_job_timeout_minutes_Valid() const;

    OAIAccountSettings_trialMinutes getTrialMinutes() const;
    void setTrialMinutes(const OAIAccountSettings_trialMinutes &trial_minutes);
    bool is_trial_minutes_Set() const;
    bool is_trial_minutes_Valid() const;

    QMap getMaxSlots() const;
    void setMaxSlots(const QMap &max_slots);
    bool is_max_slots_Set() const;
    bool is_max_slots_Valid() const;

    qint32 getDefaultJobTimeoutMinutes() const;
    void setDefaultJobTimeoutMinutes(const qint32 &default_job_timeout_minutes);
    bool is_default_job_timeout_minutes_Set() const;
    bool is_default_job_timeout_minutes_Valid() const;

    bool getSkipAppResign() const;
    void setSkipAppResign(const bool &skip_app_resign);
    bool is_skip_app_resign_Set() const;
    bool is_skip_app_resign_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_aws_account_number;
    bool m_aws_account_number_isSet;
    bool m_aws_account_number_isValid;

    QMap m_unmetered_devices;
    bool m_unmetered_devices_isSet;
    bool m_unmetered_devices_isValid;

    QMap m_unmetered_remote_access_devices;
    bool m_unmetered_remote_access_devices_isSet;
    bool m_unmetered_remote_access_devices_isValid;

    qint32 m_max_job_timeout_minutes;
    bool m_max_job_timeout_minutes_isSet;
    bool m_max_job_timeout_minutes_isValid;

    OAIAccountSettings_trialMinutes m_trial_minutes;
    bool m_trial_minutes_isSet;
    bool m_trial_minutes_isValid;

    QMap m_max_slots;
    bool m_max_slots_isSet;
    bool m_max_slots_isValid;

    qint32 m_default_job_timeout_minutes;
    bool m_default_job_timeout_minutes_isSet;
    bool m_default_job_timeout_minutes_isValid;

    bool m_skip_app_resign;
    bool m_skip_app_resign_isSet;
    bool m_skip_app_resign_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIGetAccountSettingsResult_accountSettings)

#endif // OAIGetAccountSettingsResult_accountSettings_H
