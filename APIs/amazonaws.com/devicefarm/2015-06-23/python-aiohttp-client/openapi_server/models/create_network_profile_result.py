# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.create_network_profile_result_network_profile import CreateNetworkProfileResultNetworkProfile
from openapi_server import util


class CreateNetworkProfileResult(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, network_profile: CreateNetworkProfileResultNetworkProfile=None):
        """CreateNetworkProfileResult - a model defined in OpenAPI

        :param network_profile: The network_profile of this CreateNetworkProfileResult.
        """
        self.openapi_types = {
            'network_profile': CreateNetworkProfileResultNetworkProfile
        }

        self.attribute_map = {
            'network_profile': 'networkProfile'
        }

        self._network_profile = network_profile

    @classmethod
    def from_dict(cls, dikt: dict) -> 'CreateNetworkProfileResult':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The CreateNetworkProfileResult of this CreateNetworkProfileResult.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def network_profile(self):
        """Gets the network_profile of this CreateNetworkProfileResult.


        :return: The network_profile of this CreateNetworkProfileResult.
        :rtype: CreateNetworkProfileResultNetworkProfile
        """
        return self._network_profile

    @network_profile.setter
    def network_profile(self, network_profile):
        """Sets the network_profile of this CreateNetworkProfileResult.


        :param network_profile: The network_profile of this CreateNetworkProfileResult.
        :type network_profile: CreateNetworkProfileResultNetworkProfile
        """

        self._network_profile = network_profile
