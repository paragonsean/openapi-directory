# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class UpdateUploadRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, arn: str=None, name: str=None, content_type: str=None, edit_content: bool=None):
        """UpdateUploadRequest - a model defined in OpenAPI

        :param arn: The arn of this UpdateUploadRequest.
        :param name: The name of this UpdateUploadRequest.
        :param content_type: The content_type of this UpdateUploadRequest.
        :param edit_content: The edit_content of this UpdateUploadRequest.
        """
        self.openapi_types = {
            'arn': str,
            'name': str,
            'content_type': str,
            'edit_content': bool
        }

        self.attribute_map = {
            'arn': 'arn',
            'name': 'name',
            'content_type': 'contentType',
            'edit_content': 'editContent'
        }

        self._arn = arn
        self._name = name
        self._content_type = content_type
        self._edit_content = edit_content

    @classmethod
    def from_dict(cls, dikt: dict) -> 'UpdateUploadRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The UpdateUploadRequest of this UpdateUploadRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def arn(self):
        """Gets the arn of this UpdateUploadRequest.


        :return: The arn of this UpdateUploadRequest.
        :rtype: str
        """
        return self._arn

    @arn.setter
    def arn(self, arn):
        """Sets the arn of this UpdateUploadRequest.


        :param arn: The arn of this UpdateUploadRequest.
        :type arn: str
        """
        if arn is None:
            raise ValueError("Invalid value for `arn`, must not be `None`")

        self._arn = arn

    @property
    def name(self):
        """Gets the name of this UpdateUploadRequest.


        :return: The name of this UpdateUploadRequest.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this UpdateUploadRequest.


        :param name: The name of this UpdateUploadRequest.
        :type name: str
        """

        self._name = name

    @property
    def content_type(self):
        """Gets the content_type of this UpdateUploadRequest.


        :return: The content_type of this UpdateUploadRequest.
        :rtype: str
        """
        return self._content_type

    @content_type.setter
    def content_type(self, content_type):
        """Sets the content_type of this UpdateUploadRequest.


        :param content_type: The content_type of this UpdateUploadRequest.
        :type content_type: str
        """

        self._content_type = content_type

    @property
    def edit_content(self):
        """Gets the edit_content of this UpdateUploadRequest.


        :return: The edit_content of this UpdateUploadRequest.
        :rtype: bool
        """
        return self._edit_content

    @edit_content.setter
    def edit_content(self, edit_content):
        """Sets the edit_content of this UpdateUploadRequest.


        :param edit_content: The edit_content of this UpdateUploadRequest.
        :type edit_content: bool
        """

        self._edit_content = edit_content
