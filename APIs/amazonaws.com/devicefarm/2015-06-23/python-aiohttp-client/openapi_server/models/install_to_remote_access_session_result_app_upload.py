# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.upload_category import UploadCategory
from openapi_server.models.upload_status import UploadStatus
from openapi_server.models.upload_type import UploadType
from openapi_server import util


class InstallToRemoteAccessSessionResultAppUpload(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, arn: str=None, name: str=None, created: datetime=None, type: UploadType=None, status: UploadStatus=None, url: str=None, metadata: str=None, content_type: str=None, message: str=None, category: UploadCategory=None):
        """InstallToRemoteAccessSessionResultAppUpload - a model defined in OpenAPI

        :param arn: The arn of this InstallToRemoteAccessSessionResultAppUpload.
        :param name: The name of this InstallToRemoteAccessSessionResultAppUpload.
        :param created: The created of this InstallToRemoteAccessSessionResultAppUpload.
        :param type: The type of this InstallToRemoteAccessSessionResultAppUpload.
        :param status: The status of this InstallToRemoteAccessSessionResultAppUpload.
        :param url: The url of this InstallToRemoteAccessSessionResultAppUpload.
        :param metadata: The metadata of this InstallToRemoteAccessSessionResultAppUpload.
        :param content_type: The content_type of this InstallToRemoteAccessSessionResultAppUpload.
        :param message: The message of this InstallToRemoteAccessSessionResultAppUpload.
        :param category: The category of this InstallToRemoteAccessSessionResultAppUpload.
        """
        self.openapi_types = {
            'arn': str,
            'name': str,
            'created': datetime,
            'type': UploadType,
            'status': UploadStatus,
            'url': str,
            'metadata': str,
            'content_type': str,
            'message': str,
            'category': UploadCategory
        }

        self.attribute_map = {
            'arn': 'arn',
            'name': 'name',
            'created': 'created',
            'type': 'type',
            'status': 'status',
            'url': 'url',
            'metadata': 'metadata',
            'content_type': 'contentType',
            'message': 'message',
            'category': 'category'
        }

        self._arn = arn
        self._name = name
        self._created = created
        self._type = type
        self._status = status
        self._url = url
        self._metadata = metadata
        self._content_type = content_type
        self._message = message
        self._category = category

    @classmethod
    def from_dict(cls, dikt: dict) -> 'InstallToRemoteAccessSessionResultAppUpload':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The InstallToRemoteAccessSessionResult_appUpload of this InstallToRemoteAccessSessionResultAppUpload.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def arn(self):
        """Gets the arn of this InstallToRemoteAccessSessionResultAppUpload.


        :return: The arn of this InstallToRemoteAccessSessionResultAppUpload.
        :rtype: str
        """
        return self._arn

    @arn.setter
    def arn(self, arn):
        """Sets the arn of this InstallToRemoteAccessSessionResultAppUpload.


        :param arn: The arn of this InstallToRemoteAccessSessionResultAppUpload.
        :type arn: str
        """

        self._arn = arn

    @property
    def name(self):
        """Gets the name of this InstallToRemoteAccessSessionResultAppUpload.


        :return: The name of this InstallToRemoteAccessSessionResultAppUpload.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this InstallToRemoteAccessSessionResultAppUpload.


        :param name: The name of this InstallToRemoteAccessSessionResultAppUpload.
        :type name: str
        """

        self._name = name

    @property
    def created(self):
        """Gets the created of this InstallToRemoteAccessSessionResultAppUpload.


        :return: The created of this InstallToRemoteAccessSessionResultAppUpload.
        :rtype: datetime
        """
        return self._created

    @created.setter
    def created(self, created):
        """Sets the created of this InstallToRemoteAccessSessionResultAppUpload.


        :param created: The created of this InstallToRemoteAccessSessionResultAppUpload.
        :type created: datetime
        """

        self._created = created

    @property
    def type(self):
        """Gets the type of this InstallToRemoteAccessSessionResultAppUpload.


        :return: The type of this InstallToRemoteAccessSessionResultAppUpload.
        :rtype: UploadType
        """
        return self._type

    @type.setter
    def type(self, type):
        """Sets the type of this InstallToRemoteAccessSessionResultAppUpload.


        :param type: The type of this InstallToRemoteAccessSessionResultAppUpload.
        :type type: UploadType
        """

        self._type = type

    @property
    def status(self):
        """Gets the status of this InstallToRemoteAccessSessionResultAppUpload.


        :return: The status of this InstallToRemoteAccessSessionResultAppUpload.
        :rtype: UploadStatus
        """
        return self._status

    @status.setter
    def status(self, status):
        """Sets the status of this InstallToRemoteAccessSessionResultAppUpload.


        :param status: The status of this InstallToRemoteAccessSessionResultAppUpload.
        :type status: UploadStatus
        """

        self._status = status

    @property
    def url(self):
        """Gets the url of this InstallToRemoteAccessSessionResultAppUpload.


        :return: The url of this InstallToRemoteAccessSessionResultAppUpload.
        :rtype: str
        """
        return self._url

    @url.setter
    def url(self, url):
        """Sets the url of this InstallToRemoteAccessSessionResultAppUpload.


        :param url: The url of this InstallToRemoteAccessSessionResultAppUpload.
        :type url: str
        """

        self._url = url

    @property
    def metadata(self):
        """Gets the metadata of this InstallToRemoteAccessSessionResultAppUpload.


        :return: The metadata of this InstallToRemoteAccessSessionResultAppUpload.
        :rtype: str
        """
        return self._metadata

    @metadata.setter
    def metadata(self, metadata):
        """Sets the metadata of this InstallToRemoteAccessSessionResultAppUpload.


        :param metadata: The metadata of this InstallToRemoteAccessSessionResultAppUpload.
        :type metadata: str
        """

        self._metadata = metadata

    @property
    def content_type(self):
        """Gets the content_type of this InstallToRemoteAccessSessionResultAppUpload.


        :return: The content_type of this InstallToRemoteAccessSessionResultAppUpload.
        :rtype: str
        """
        return self._content_type

    @content_type.setter
    def content_type(self, content_type):
        """Sets the content_type of this InstallToRemoteAccessSessionResultAppUpload.


        :param content_type: The content_type of this InstallToRemoteAccessSessionResultAppUpload.
        :type content_type: str
        """

        self._content_type = content_type

    @property
    def message(self):
        """Gets the message of this InstallToRemoteAccessSessionResultAppUpload.


        :return: The message of this InstallToRemoteAccessSessionResultAppUpload.
        :rtype: str
        """
        return self._message

    @message.setter
    def message(self, message):
        """Sets the message of this InstallToRemoteAccessSessionResultAppUpload.


        :param message: The message of this InstallToRemoteAccessSessionResultAppUpload.
        :type message: str
        """

        self._message = message

    @property
    def category(self):
        """Gets the category of this InstallToRemoteAccessSessionResultAppUpload.


        :return: The category of this InstallToRemoteAccessSessionResultAppUpload.
        :rtype: UploadCategory
        """
        return self._category

    @category.setter
    def category(self, category):
        """Sets the category of this InstallToRemoteAccessSessionResultAppUpload.


        :param category: The category of this InstallToRemoteAccessSessionResultAppUpload.
        :type category: UploadCategory
        """

        self._category = category
