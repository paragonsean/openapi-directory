# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.get_device_pool_compatibility_request_configuration import GetDevicePoolCompatibilityRequestConfiguration
from openapi_server.models.get_device_pool_compatibility_request_test import GetDevicePoolCompatibilityRequestTest
from openapi_server.models.test_type import TestType
from openapi_server import util


class GetDevicePoolCompatibilityRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, device_pool_arn: str=None, app_arn: str=None, test_type: TestType=None, test: GetDevicePoolCompatibilityRequestTest=None, configuration: GetDevicePoolCompatibilityRequestConfiguration=None):
        """GetDevicePoolCompatibilityRequest - a model defined in OpenAPI

        :param device_pool_arn: The device_pool_arn of this GetDevicePoolCompatibilityRequest.
        :param app_arn: The app_arn of this GetDevicePoolCompatibilityRequest.
        :param test_type: The test_type of this GetDevicePoolCompatibilityRequest.
        :param test: The test of this GetDevicePoolCompatibilityRequest.
        :param configuration: The configuration of this GetDevicePoolCompatibilityRequest.
        """
        self.openapi_types = {
            'device_pool_arn': str,
            'app_arn': str,
            'test_type': TestType,
            'test': GetDevicePoolCompatibilityRequestTest,
            'configuration': GetDevicePoolCompatibilityRequestConfiguration
        }

        self.attribute_map = {
            'device_pool_arn': 'devicePoolArn',
            'app_arn': 'appArn',
            'test_type': 'testType',
            'test': 'test',
            'configuration': 'configuration'
        }

        self._device_pool_arn = device_pool_arn
        self._app_arn = app_arn
        self._test_type = test_type
        self._test = test
        self._configuration = configuration

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GetDevicePoolCompatibilityRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The GetDevicePoolCompatibilityRequest of this GetDevicePoolCompatibilityRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def device_pool_arn(self):
        """Gets the device_pool_arn of this GetDevicePoolCompatibilityRequest.


        :return: The device_pool_arn of this GetDevicePoolCompatibilityRequest.
        :rtype: str
        """
        return self._device_pool_arn

    @device_pool_arn.setter
    def device_pool_arn(self, device_pool_arn):
        """Sets the device_pool_arn of this GetDevicePoolCompatibilityRequest.


        :param device_pool_arn: The device_pool_arn of this GetDevicePoolCompatibilityRequest.
        :type device_pool_arn: str
        """
        if device_pool_arn is None:
            raise ValueError("Invalid value for `device_pool_arn`, must not be `None`")

        self._device_pool_arn = device_pool_arn

    @property
    def app_arn(self):
        """Gets the app_arn of this GetDevicePoolCompatibilityRequest.


        :return: The app_arn of this GetDevicePoolCompatibilityRequest.
        :rtype: str
        """
        return self._app_arn

    @app_arn.setter
    def app_arn(self, app_arn):
        """Sets the app_arn of this GetDevicePoolCompatibilityRequest.


        :param app_arn: The app_arn of this GetDevicePoolCompatibilityRequest.
        :type app_arn: str
        """

        self._app_arn = app_arn

    @property
    def test_type(self):
        """Gets the test_type of this GetDevicePoolCompatibilityRequest.


        :return: The test_type of this GetDevicePoolCompatibilityRequest.
        :rtype: TestType
        """
        return self._test_type

    @test_type.setter
    def test_type(self, test_type):
        """Sets the test_type of this GetDevicePoolCompatibilityRequest.


        :param test_type: The test_type of this GetDevicePoolCompatibilityRequest.
        :type test_type: TestType
        """

        self._test_type = test_type

    @property
    def test(self):
        """Gets the test of this GetDevicePoolCompatibilityRequest.


        :return: The test of this GetDevicePoolCompatibilityRequest.
        :rtype: GetDevicePoolCompatibilityRequestTest
        """
        return self._test

    @test.setter
    def test(self, test):
        """Sets the test of this GetDevicePoolCompatibilityRequest.


        :param test: The test of this GetDevicePoolCompatibilityRequest.
        :type test: GetDevicePoolCompatibilityRequestTest
        """

        self._test = test

    @property
    def configuration(self):
        """Gets the configuration of this GetDevicePoolCompatibilityRequest.


        :return: The configuration of this GetDevicePoolCompatibilityRequest.
        :rtype: GetDevicePoolCompatibilityRequestConfiguration
        """
        return self._configuration

    @configuration.setter
    def configuration(self, configuration):
        """Sets the configuration of this GetDevicePoolCompatibilityRequest.


        :param configuration: The configuration of this GetDevicePoolCompatibilityRequest.
        :type configuration: GetDevicePoolCompatibilityRequestConfiguration
        """

        self._configuration = configuration
