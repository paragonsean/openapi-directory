# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.recurring_charge_cost import RecurringChargeCost
from openapi_server.models.recurring_charge_frequency import RecurringChargeFrequency
from openapi_server import util


class RecurringCharge(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, cost: RecurringChargeCost=None, frequency: RecurringChargeFrequency=None):
        """RecurringCharge - a model defined in OpenAPI

        :param cost: The cost of this RecurringCharge.
        :param frequency: The frequency of this RecurringCharge.
        """
        self.openapi_types = {
            'cost': RecurringChargeCost,
            'frequency': RecurringChargeFrequency
        }

        self.attribute_map = {
            'cost': 'cost',
            'frequency': 'frequency'
        }

        self._cost = cost
        self._frequency = frequency

    @classmethod
    def from_dict(cls, dikt: dict) -> 'RecurringCharge':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The RecurringCharge of this RecurringCharge.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def cost(self):
        """Gets the cost of this RecurringCharge.


        :return: The cost of this RecurringCharge.
        :rtype: RecurringChargeCost
        """
        return self._cost

    @cost.setter
    def cost(self, cost):
        """Sets the cost of this RecurringCharge.


        :param cost: The cost of this RecurringCharge.
        :type cost: RecurringChargeCost
        """

        self._cost = cost

    @property
    def frequency(self):
        """Gets the frequency of this RecurringCharge.


        :return: The frequency of this RecurringCharge.
        :rtype: RecurringChargeFrequency
        """
        return self._frequency

    @frequency.setter
    def frequency(self, frequency):
        """Sets the frequency of this RecurringCharge.


        :param frequency: The frequency of this RecurringCharge.
        :type frequency: RecurringChargeFrequency
        """

        self._frequency = frequency
