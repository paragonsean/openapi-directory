# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.purchase_offering_result_offering_transaction import PurchaseOfferingResultOfferingTransaction
from openapi_server import util


class PurchaseOfferingResult(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, offering_transaction: PurchaseOfferingResultOfferingTransaction=None):
        """PurchaseOfferingResult - a model defined in OpenAPI

        :param offering_transaction: The offering_transaction of this PurchaseOfferingResult.
        """
        self.openapi_types = {
            'offering_transaction': PurchaseOfferingResultOfferingTransaction
        }

        self.attribute_map = {
            'offering_transaction': 'offeringTransaction'
        }

        self._offering_transaction = offering_transaction

    @classmethod
    def from_dict(cls, dikt: dict) -> 'PurchaseOfferingResult':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The PurchaseOfferingResult of this PurchaseOfferingResult.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def offering_transaction(self):
        """Gets the offering_transaction of this PurchaseOfferingResult.


        :return: The offering_transaction of this PurchaseOfferingResult.
        :rtype: PurchaseOfferingResultOfferingTransaction
        """
        return self._offering_transaction

    @offering_transaction.setter
    def offering_transaction(self, offering_transaction):
        """Sets the offering_transaction of this PurchaseOfferingResult.


        :param offering_transaction: The offering_transaction of this PurchaseOfferingResult.
        :type offering_transaction: PurchaseOfferingResultOfferingTransaction
        """

        self._offering_transaction = offering_transaction
