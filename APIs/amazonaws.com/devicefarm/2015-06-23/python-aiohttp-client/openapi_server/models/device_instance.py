# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.device_instance_instance_profile import DeviceInstanceInstanceProfile
from openapi_server.models.instance_status import InstanceStatus
from openapi_server import util


class DeviceInstance(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, arn: str=None, device_arn: str=None, labels: List=None, status: InstanceStatus=None, udid: str=None, instance_profile: DeviceInstanceInstanceProfile=None):
        """DeviceInstance - a model defined in OpenAPI

        :param arn: The arn of this DeviceInstance.
        :param device_arn: The device_arn of this DeviceInstance.
        :param labels: The labels of this DeviceInstance.
        :param status: The status of this DeviceInstance.
        :param udid: The udid of this DeviceInstance.
        :param instance_profile: The instance_profile of this DeviceInstance.
        """
        self.openapi_types = {
            'arn': str,
            'device_arn': str,
            'labels': List,
            'status': InstanceStatus,
            'udid': str,
            'instance_profile': DeviceInstanceInstanceProfile
        }

        self.attribute_map = {
            'arn': 'arn',
            'device_arn': 'deviceArn',
            'labels': 'labels',
            'status': 'status',
            'udid': 'udid',
            'instance_profile': 'instanceProfile'
        }

        self._arn = arn
        self._device_arn = device_arn
        self._labels = labels
        self._status = status
        self._udid = udid
        self._instance_profile = instance_profile

    @classmethod
    def from_dict(cls, dikt: dict) -> 'DeviceInstance':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The DeviceInstance of this DeviceInstance.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def arn(self):
        """Gets the arn of this DeviceInstance.


        :return: The arn of this DeviceInstance.
        :rtype: str
        """
        return self._arn

    @arn.setter
    def arn(self, arn):
        """Sets the arn of this DeviceInstance.


        :param arn: The arn of this DeviceInstance.
        :type arn: str
        """

        self._arn = arn

    @property
    def device_arn(self):
        """Gets the device_arn of this DeviceInstance.


        :return: The device_arn of this DeviceInstance.
        :rtype: str
        """
        return self._device_arn

    @device_arn.setter
    def device_arn(self, device_arn):
        """Sets the device_arn of this DeviceInstance.


        :param device_arn: The device_arn of this DeviceInstance.
        :type device_arn: str
        """

        self._device_arn = device_arn

    @property
    def labels(self):
        """Gets the labels of this DeviceInstance.


        :return: The labels of this DeviceInstance.
        :rtype: List
        """
        return self._labels

    @labels.setter
    def labels(self, labels):
        """Sets the labels of this DeviceInstance.


        :param labels: The labels of this DeviceInstance.
        :type labels: List
        """

        self._labels = labels

    @property
    def status(self):
        """Gets the status of this DeviceInstance.


        :return: The status of this DeviceInstance.
        :rtype: InstanceStatus
        """
        return self._status

    @status.setter
    def status(self, status):
        """Sets the status of this DeviceInstance.


        :param status: The status of this DeviceInstance.
        :type status: InstanceStatus
        """

        self._status = status

    @property
    def udid(self):
        """Gets the udid of this DeviceInstance.


        :return: The udid of this DeviceInstance.
        :rtype: str
        """
        return self._udid

    @udid.setter
    def udid(self, udid):
        """Sets the udid of this DeviceInstance.


        :param udid: The udid of this DeviceInstance.
        :type udid: str
        """

        self._udid = udid

    @property
    def instance_profile(self):
        """Gets the instance_profile of this DeviceInstance.


        :return: The instance_profile of this DeviceInstance.
        :rtype: DeviceInstanceInstanceProfile
        """
        return self._instance_profile

    @instance_profile.setter
    def instance_profile(self, instance_profile):
        """Sets the instance_profile of this DeviceInstance.


        :param instance_profile: The instance_profile of this DeviceInstance.
        :type instance_profile: DeviceInstanceInstanceProfile
        """

        self._instance_profile = instance_profile
