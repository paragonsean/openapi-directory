# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class SampleType(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    """
    allowed enum values
    """
    CPU = 'CPU'
    MEMORY = 'MEMORY'
    THREADS = 'THREADS'
    RX_RATE = 'RX_RATE'
    TX_RATE = 'TX_RATE'
    RX = 'RX'
    TX = 'TX'
    NATIVE_FRAMES = 'NATIVE_FRAMES'
    NATIVE_FPS = 'NATIVE_FPS'
    NATIVE_MIN_DRAWTIME = 'NATIVE_MIN_DRAWTIME'
    NATIVE_AVG_DRAWTIME = 'NATIVE_AVG_DRAWTIME'
    NATIVE_MAX_DRAWTIME = 'NATIVE_MAX_DRAWTIME'
    OPENGL_FRAMES = 'OPENGL_FRAMES'
    OPENGL_FPS = 'OPENGL_FPS'
    OPENGL_MIN_DRAWTIME = 'OPENGL_MIN_DRAWTIME'
    OPENGL_AVG_DRAWTIME = 'OPENGL_AVG_DRAWTIME'
    OPENGL_MAX_DRAWTIME = 'OPENGL_MAX_DRAWTIME'

    def __init__(self):
        """SampleType - a model defined in OpenAPI

        """
        self.openapi_types = {
        }

        self.attribute_map = {
        }

    @classmethod
    def from_dict(cls, dikt: dict) -> 'SampleType':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The SampleType of this SampleType.
        """
        return util.deserialize_model(dikt, cls)
