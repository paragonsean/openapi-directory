# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.create_project_request_vpc_config import CreateProjectRequestVpcConfig
from openapi_server import util


class CreateProjectRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, name: str=None, default_job_timeout_minutes: int=None, vpc_config: CreateProjectRequestVpcConfig=None):
        """CreateProjectRequest - a model defined in OpenAPI

        :param name: The name of this CreateProjectRequest.
        :param default_job_timeout_minutes: The default_job_timeout_minutes of this CreateProjectRequest.
        :param vpc_config: The vpc_config of this CreateProjectRequest.
        """
        self.openapi_types = {
            'name': str,
            'default_job_timeout_minutes': int,
            'vpc_config': CreateProjectRequestVpcConfig
        }

        self.attribute_map = {
            'name': 'name',
            'default_job_timeout_minutes': 'defaultJobTimeoutMinutes',
            'vpc_config': 'vpcConfig'
        }

        self._name = name
        self._default_job_timeout_minutes = default_job_timeout_minutes
        self._vpc_config = vpc_config

    @classmethod
    def from_dict(cls, dikt: dict) -> 'CreateProjectRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The CreateProjectRequest of this CreateProjectRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def name(self):
        """Gets the name of this CreateProjectRequest.


        :return: The name of this CreateProjectRequest.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this CreateProjectRequest.


        :param name: The name of this CreateProjectRequest.
        :type name: str
        """
        if name is None:
            raise ValueError("Invalid value for `name`, must not be `None`")

        self._name = name

    @property
    def default_job_timeout_minutes(self):
        """Gets the default_job_timeout_minutes of this CreateProjectRequest.


        :return: The default_job_timeout_minutes of this CreateProjectRequest.
        :rtype: int
        """
        return self._default_job_timeout_minutes

    @default_job_timeout_minutes.setter
    def default_job_timeout_minutes(self, default_job_timeout_minutes):
        """Sets the default_job_timeout_minutes of this CreateProjectRequest.


        :param default_job_timeout_minutes: The default_job_timeout_minutes of this CreateProjectRequest.
        :type default_job_timeout_minutes: int
        """

        self._default_job_timeout_minutes = default_job_timeout_minutes

    @property
    def vpc_config(self):
        """Gets the vpc_config of this CreateProjectRequest.


        :return: The vpc_config of this CreateProjectRequest.
        :rtype: CreateProjectRequestVpcConfig
        """
        return self._vpc_config

    @vpc_config.setter
    def vpc_config(self, vpc_config):
        """Sets the vpc_config of this CreateProjectRequest.


        :param vpc_config: The vpc_config of this CreateProjectRequest.
        :type vpc_config: CreateProjectRequestVpcConfig
        """

        self._vpc_config = vpc_config
