# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class ArtifactType(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    """
    allowed enum values
    """
    UNKNOWN = 'UNKNOWN'
    SCREENSHOT = 'SCREENSHOT'
    DEVICE_LOG = 'DEVICE_LOG'
    MESSAGE_LOG = 'MESSAGE_LOG'
    VIDEO_LOG = 'VIDEO_LOG'
    RESULT_LOG = 'RESULT_LOG'
    SERVICE_LOG = 'SERVICE_LOG'
    WEBKIT_LOG = 'WEBKIT_LOG'
    INSTRUMENTATION_OUTPUT = 'INSTRUMENTATION_OUTPUT'
    EXERCISER_MONKEY_OUTPUT = 'EXERCISER_MONKEY_OUTPUT'
    CALABASH_JSON_OUTPUT = 'CALABASH_JSON_OUTPUT'
    CALABASH_PRETTY_OUTPUT = 'CALABASH_PRETTY_OUTPUT'
    CALABASH_STANDARD_OUTPUT = 'CALABASH_STANDARD_OUTPUT'
    CALABASH_JAVA_XML_OUTPUT = 'CALABASH_JAVA_XML_OUTPUT'
    AUTOMATION_OUTPUT = 'AUTOMATION_OUTPUT'
    APPIUM_SERVER_OUTPUT = 'APPIUM_SERVER_OUTPUT'
    APPIUM_JAVA_OUTPUT = 'APPIUM_JAVA_OUTPUT'
    APPIUM_JAVA_XML_OUTPUT = 'APPIUM_JAVA_XML_OUTPUT'
    APPIUM_PYTHON_OUTPUT = 'APPIUM_PYTHON_OUTPUT'
    APPIUM_PYTHON_XML_OUTPUT = 'APPIUM_PYTHON_XML_OUTPUT'
    EXPLORER_EVENT_LOG = 'EXPLORER_EVENT_LOG'
    EXPLORER_SUMMARY_LOG = 'EXPLORER_SUMMARY_LOG'
    APPLICATION_CRASH_REPORT = 'APPLICATION_CRASH_REPORT'
    XCTEST_LOG = 'XCTEST_LOG'
    VIDEO = 'VIDEO'
    CUSTOMER_ARTIFACT = 'CUSTOMER_ARTIFACT'
    CUSTOMER_ARTIFACT_LOG = 'CUSTOMER_ARTIFACT_LOG'
    TESTSPEC_OUTPUT = 'TESTSPEC_OUTPUT'

    def __init__(self):
        """ArtifactType - a model defined in OpenAPI

        """
        self.openapi_types = {
        }

        self.attribute_map = {
        }

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ArtifactType':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ArtifactType of this ArtifactType.
        """
        return util.deserialize_model(dikt, cls)
