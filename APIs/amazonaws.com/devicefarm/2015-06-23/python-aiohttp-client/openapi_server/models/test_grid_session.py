# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.test_grid_session_status import TestGridSessionStatus
from openapi_server import util


class TestGridSession(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, arn: str=None, status: TestGridSessionStatus=None, created: datetime=None, ended: datetime=None, billing_minutes: float=None, selenium_properties: str=None):
        """TestGridSession - a model defined in OpenAPI

        :param arn: The arn of this TestGridSession.
        :param status: The status of this TestGridSession.
        :param created: The created of this TestGridSession.
        :param ended: The ended of this TestGridSession.
        :param billing_minutes: The billing_minutes of this TestGridSession.
        :param selenium_properties: The selenium_properties of this TestGridSession.
        """
        self.openapi_types = {
            'arn': str,
            'status': TestGridSessionStatus,
            'created': datetime,
            'ended': datetime,
            'billing_minutes': float,
            'selenium_properties': str
        }

        self.attribute_map = {
            'arn': 'arn',
            'status': 'status',
            'created': 'created',
            'ended': 'ended',
            'billing_minutes': 'billingMinutes',
            'selenium_properties': 'seleniumProperties'
        }

        self._arn = arn
        self._status = status
        self._created = created
        self._ended = ended
        self._billing_minutes = billing_minutes
        self._selenium_properties = selenium_properties

    @classmethod
    def from_dict(cls, dikt: dict) -> 'TestGridSession':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The TestGridSession of this TestGridSession.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def arn(self):
        """Gets the arn of this TestGridSession.


        :return: The arn of this TestGridSession.
        :rtype: str
        """
        return self._arn

    @arn.setter
    def arn(self, arn):
        """Sets the arn of this TestGridSession.


        :param arn: The arn of this TestGridSession.
        :type arn: str
        """

        self._arn = arn

    @property
    def status(self):
        """Gets the status of this TestGridSession.


        :return: The status of this TestGridSession.
        :rtype: TestGridSessionStatus
        """
        return self._status

    @status.setter
    def status(self, status):
        """Sets the status of this TestGridSession.


        :param status: The status of this TestGridSession.
        :type status: TestGridSessionStatus
        """

        self._status = status

    @property
    def created(self):
        """Gets the created of this TestGridSession.


        :return: The created of this TestGridSession.
        :rtype: datetime
        """
        return self._created

    @created.setter
    def created(self, created):
        """Sets the created of this TestGridSession.


        :param created: The created of this TestGridSession.
        :type created: datetime
        """

        self._created = created

    @property
    def ended(self):
        """Gets the ended of this TestGridSession.


        :return: The ended of this TestGridSession.
        :rtype: datetime
        """
        return self._ended

    @ended.setter
    def ended(self, ended):
        """Sets the ended of this TestGridSession.


        :param ended: The ended of this TestGridSession.
        :type ended: datetime
        """

        self._ended = ended

    @property
    def billing_minutes(self):
        """Gets the billing_minutes of this TestGridSession.


        :return: The billing_minutes of this TestGridSession.
        :rtype: float
        """
        return self._billing_minutes

    @billing_minutes.setter
    def billing_minutes(self, billing_minutes):
        """Sets the billing_minutes of this TestGridSession.


        :param billing_minutes: The billing_minutes of this TestGridSession.
        :type billing_minutes: float
        """

        self._billing_minutes = billing_minutes

    @property
    def selenium_properties(self):
        """Gets the selenium_properties of this TestGridSession.


        :return: The selenium_properties of this TestGridSession.
        :rtype: str
        """
        return self._selenium_properties

    @selenium_properties.setter
    def selenium_properties(self, selenium_properties):
        """Sets the selenium_properties of this TestGridSession.


        :param selenium_properties: The selenium_properties of this TestGridSession.
        :type selenium_properties: str
        """

        self._selenium_properties = selenium_properties
