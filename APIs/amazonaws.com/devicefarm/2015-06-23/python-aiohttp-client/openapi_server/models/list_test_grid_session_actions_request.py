# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class ListTestGridSessionActionsRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, session_arn: str=None, max_result: int=None, next_token: str=None):
        """ListTestGridSessionActionsRequest - a model defined in OpenAPI

        :param session_arn: The session_arn of this ListTestGridSessionActionsRequest.
        :param max_result: The max_result of this ListTestGridSessionActionsRequest.
        :param next_token: The next_token of this ListTestGridSessionActionsRequest.
        """
        self.openapi_types = {
            'session_arn': str,
            'max_result': int,
            'next_token': str
        }

        self.attribute_map = {
            'session_arn': 'sessionArn',
            'max_result': 'maxResult',
            'next_token': 'nextToken'
        }

        self._session_arn = session_arn
        self._max_result = max_result
        self._next_token = next_token

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ListTestGridSessionActionsRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ListTestGridSessionActionsRequest of this ListTestGridSessionActionsRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def session_arn(self):
        """Gets the session_arn of this ListTestGridSessionActionsRequest.


        :return: The session_arn of this ListTestGridSessionActionsRequest.
        :rtype: str
        """
        return self._session_arn

    @session_arn.setter
    def session_arn(self, session_arn):
        """Sets the session_arn of this ListTestGridSessionActionsRequest.


        :param session_arn: The session_arn of this ListTestGridSessionActionsRequest.
        :type session_arn: str
        """
        if session_arn is None:
            raise ValueError("Invalid value for `session_arn`, must not be `None`")

        self._session_arn = session_arn

    @property
    def max_result(self):
        """Gets the max_result of this ListTestGridSessionActionsRequest.


        :return: The max_result of this ListTestGridSessionActionsRequest.
        :rtype: int
        """
        return self._max_result

    @max_result.setter
    def max_result(self, max_result):
        """Sets the max_result of this ListTestGridSessionActionsRequest.


        :param max_result: The max_result of this ListTestGridSessionActionsRequest.
        :type max_result: int
        """

        self._max_result = max_result

    @property
    def next_token(self):
        """Gets the next_token of this ListTestGridSessionActionsRequest.


        :return: The next_token of this ListTestGridSessionActionsRequest.
        :rtype: str
        """
        return self._next_token

    @next_token.setter
    def next_token(self, next_token):
        """Sets the next_token of this ListTestGridSessionActionsRequest.


        :param next_token: The next_token of this ListTestGridSessionActionsRequest.
        :type next_token: str
        """

        self._next_token = next_token
