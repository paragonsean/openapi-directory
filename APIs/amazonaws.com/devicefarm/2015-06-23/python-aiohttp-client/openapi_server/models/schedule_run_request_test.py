# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.test_type import TestType
from openapi_server import util


class ScheduleRunRequestTest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, type: TestType=None, test_package_arn: str=None, test_spec_arn: str=None, filter: str=None, parameters: Dict=None):
        """ScheduleRunRequestTest - a model defined in OpenAPI

        :param type: The type of this ScheduleRunRequestTest.
        :param test_package_arn: The test_package_arn of this ScheduleRunRequestTest.
        :param test_spec_arn: The test_spec_arn of this ScheduleRunRequestTest.
        :param filter: The filter of this ScheduleRunRequestTest.
        :param parameters: The parameters of this ScheduleRunRequestTest.
        """
        self.openapi_types = {
            'type': TestType,
            'test_package_arn': str,
            'test_spec_arn': str,
            'filter': str,
            'parameters': Dict
        }

        self.attribute_map = {
            'type': 'type',
            'test_package_arn': 'testPackageArn',
            'test_spec_arn': 'testSpecArn',
            'filter': 'filter',
            'parameters': 'parameters'
        }

        self._type = type
        self._test_package_arn = test_package_arn
        self._test_spec_arn = test_spec_arn
        self._filter = filter
        self._parameters = parameters

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ScheduleRunRequestTest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ScheduleRunRequest_test of this ScheduleRunRequestTest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def type(self):
        """Gets the type of this ScheduleRunRequestTest.


        :return: The type of this ScheduleRunRequestTest.
        :rtype: TestType
        """
        return self._type

    @type.setter
    def type(self, type):
        """Sets the type of this ScheduleRunRequestTest.


        :param type: The type of this ScheduleRunRequestTest.
        :type type: TestType
        """
        if type is None:
            raise ValueError("Invalid value for `type`, must not be `None`")

        self._type = type

    @property
    def test_package_arn(self):
        """Gets the test_package_arn of this ScheduleRunRequestTest.


        :return: The test_package_arn of this ScheduleRunRequestTest.
        :rtype: str
        """
        return self._test_package_arn

    @test_package_arn.setter
    def test_package_arn(self, test_package_arn):
        """Sets the test_package_arn of this ScheduleRunRequestTest.


        :param test_package_arn: The test_package_arn of this ScheduleRunRequestTest.
        :type test_package_arn: str
        """

        self._test_package_arn = test_package_arn

    @property
    def test_spec_arn(self):
        """Gets the test_spec_arn of this ScheduleRunRequestTest.


        :return: The test_spec_arn of this ScheduleRunRequestTest.
        :rtype: str
        """
        return self._test_spec_arn

    @test_spec_arn.setter
    def test_spec_arn(self, test_spec_arn):
        """Sets the test_spec_arn of this ScheduleRunRequestTest.


        :param test_spec_arn: The test_spec_arn of this ScheduleRunRequestTest.
        :type test_spec_arn: str
        """

        self._test_spec_arn = test_spec_arn

    @property
    def filter(self):
        """Gets the filter of this ScheduleRunRequestTest.


        :return: The filter of this ScheduleRunRequestTest.
        :rtype: str
        """
        return self._filter

    @filter.setter
    def filter(self, filter):
        """Sets the filter of this ScheduleRunRequestTest.


        :param filter: The filter of this ScheduleRunRequestTest.
        :type filter: str
        """

        self._filter = filter

    @property
    def parameters(self):
        """Gets the parameters of this ScheduleRunRequestTest.


        :return: The parameters of this ScheduleRunRequestTest.
        :rtype: Dict
        """
        return self._parameters

    @parameters.setter
    def parameters(self, parameters):
        """Sets the parameters of this ScheduleRunRequestTest.


        :param parameters: The parameters of this ScheduleRunRequestTest.
        :type parameters: Dict
        """

        self._parameters = parameters
