# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.schedule_run_request_configuration import ScheduleRunRequestConfiguration
from openapi_server.models.schedule_run_request_device_selection_configuration import ScheduleRunRequestDeviceSelectionConfiguration
from openapi_server.models.schedule_run_request_execution_configuration import ScheduleRunRequestExecutionConfiguration
from openapi_server.models.schedule_run_request_test import ScheduleRunRequestTest
from openapi_server import util


class ScheduleRunRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, project_arn: str=None, app_arn: str=None, device_pool_arn: str=None, device_selection_configuration: ScheduleRunRequestDeviceSelectionConfiguration=None, name: str=None, test: ScheduleRunRequestTest=None, configuration: ScheduleRunRequestConfiguration=None, execution_configuration: ScheduleRunRequestExecutionConfiguration=None):
        """ScheduleRunRequest - a model defined in OpenAPI

        :param project_arn: The project_arn of this ScheduleRunRequest.
        :param app_arn: The app_arn of this ScheduleRunRequest.
        :param device_pool_arn: The device_pool_arn of this ScheduleRunRequest.
        :param device_selection_configuration: The device_selection_configuration of this ScheduleRunRequest.
        :param name: The name of this ScheduleRunRequest.
        :param test: The test of this ScheduleRunRequest.
        :param configuration: The configuration of this ScheduleRunRequest.
        :param execution_configuration: The execution_configuration of this ScheduleRunRequest.
        """
        self.openapi_types = {
            'project_arn': str,
            'app_arn': str,
            'device_pool_arn': str,
            'device_selection_configuration': ScheduleRunRequestDeviceSelectionConfiguration,
            'name': str,
            'test': ScheduleRunRequestTest,
            'configuration': ScheduleRunRequestConfiguration,
            'execution_configuration': ScheduleRunRequestExecutionConfiguration
        }

        self.attribute_map = {
            'project_arn': 'projectArn',
            'app_arn': 'appArn',
            'device_pool_arn': 'devicePoolArn',
            'device_selection_configuration': 'deviceSelectionConfiguration',
            'name': 'name',
            'test': 'test',
            'configuration': 'configuration',
            'execution_configuration': 'executionConfiguration'
        }

        self._project_arn = project_arn
        self._app_arn = app_arn
        self._device_pool_arn = device_pool_arn
        self._device_selection_configuration = device_selection_configuration
        self._name = name
        self._test = test
        self._configuration = configuration
        self._execution_configuration = execution_configuration

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ScheduleRunRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ScheduleRunRequest of this ScheduleRunRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def project_arn(self):
        """Gets the project_arn of this ScheduleRunRequest.


        :return: The project_arn of this ScheduleRunRequest.
        :rtype: str
        """
        return self._project_arn

    @project_arn.setter
    def project_arn(self, project_arn):
        """Sets the project_arn of this ScheduleRunRequest.


        :param project_arn: The project_arn of this ScheduleRunRequest.
        :type project_arn: str
        """
        if project_arn is None:
            raise ValueError("Invalid value for `project_arn`, must not be `None`")

        self._project_arn = project_arn

    @property
    def app_arn(self):
        """Gets the app_arn of this ScheduleRunRequest.


        :return: The app_arn of this ScheduleRunRequest.
        :rtype: str
        """
        return self._app_arn

    @app_arn.setter
    def app_arn(self, app_arn):
        """Sets the app_arn of this ScheduleRunRequest.


        :param app_arn: The app_arn of this ScheduleRunRequest.
        :type app_arn: str
        """

        self._app_arn = app_arn

    @property
    def device_pool_arn(self):
        """Gets the device_pool_arn of this ScheduleRunRequest.


        :return: The device_pool_arn of this ScheduleRunRequest.
        :rtype: str
        """
        return self._device_pool_arn

    @device_pool_arn.setter
    def device_pool_arn(self, device_pool_arn):
        """Sets the device_pool_arn of this ScheduleRunRequest.


        :param device_pool_arn: The device_pool_arn of this ScheduleRunRequest.
        :type device_pool_arn: str
        """

        self._device_pool_arn = device_pool_arn

    @property
    def device_selection_configuration(self):
        """Gets the device_selection_configuration of this ScheduleRunRequest.


        :return: The device_selection_configuration of this ScheduleRunRequest.
        :rtype: ScheduleRunRequestDeviceSelectionConfiguration
        """
        return self._device_selection_configuration

    @device_selection_configuration.setter
    def device_selection_configuration(self, device_selection_configuration):
        """Sets the device_selection_configuration of this ScheduleRunRequest.


        :param device_selection_configuration: The device_selection_configuration of this ScheduleRunRequest.
        :type device_selection_configuration: ScheduleRunRequestDeviceSelectionConfiguration
        """

        self._device_selection_configuration = device_selection_configuration

    @property
    def name(self):
        """Gets the name of this ScheduleRunRequest.


        :return: The name of this ScheduleRunRequest.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this ScheduleRunRequest.


        :param name: The name of this ScheduleRunRequest.
        :type name: str
        """

        self._name = name

    @property
    def test(self):
        """Gets the test of this ScheduleRunRequest.


        :return: The test of this ScheduleRunRequest.
        :rtype: ScheduleRunRequestTest
        """
        return self._test

    @test.setter
    def test(self, test):
        """Sets the test of this ScheduleRunRequest.


        :param test: The test of this ScheduleRunRequest.
        :type test: ScheduleRunRequestTest
        """
        if test is None:
            raise ValueError("Invalid value for `test`, must not be `None`")

        self._test = test

    @property
    def configuration(self):
        """Gets the configuration of this ScheduleRunRequest.


        :return: The configuration of this ScheduleRunRequest.
        :rtype: ScheduleRunRequestConfiguration
        """
        return self._configuration

    @configuration.setter
    def configuration(self, configuration):
        """Sets the configuration of this ScheduleRunRequest.


        :param configuration: The configuration of this ScheduleRunRequest.
        :type configuration: ScheduleRunRequestConfiguration
        """

        self._configuration = configuration

    @property
    def execution_configuration(self):
        """Gets the execution_configuration of this ScheduleRunRequest.


        :return: The execution_configuration of this ScheduleRunRequest.
        :rtype: ScheduleRunRequestExecutionConfiguration
        """
        return self._execution_configuration

    @execution_configuration.setter
    def execution_configuration(self, execution_configuration):
        """Sets the execution_configuration of this ScheduleRunRequest.


        :param execution_configuration: The execution_configuration of this ScheduleRunRequest.
        :type execution_configuration: ScheduleRunRequestExecutionConfiguration
        """

        self._execution_configuration = execution_configuration
