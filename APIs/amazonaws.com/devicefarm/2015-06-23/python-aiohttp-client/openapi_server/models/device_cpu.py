# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class DeviceCpu(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, frequency: str=None, architecture: str=None, clock: float=None):
        """DeviceCpu - a model defined in OpenAPI

        :param frequency: The frequency of this DeviceCpu.
        :param architecture: The architecture of this DeviceCpu.
        :param clock: The clock of this DeviceCpu.
        """
        self.openapi_types = {
            'frequency': str,
            'architecture': str,
            'clock': float
        }

        self.attribute_map = {
            'frequency': 'frequency',
            'architecture': 'architecture',
            'clock': 'clock'
        }

        self._frequency = frequency
        self._architecture = architecture
        self._clock = clock

    @classmethod
    def from_dict(cls, dikt: dict) -> 'DeviceCpu':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Device_cpu of this DeviceCpu.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def frequency(self):
        """Gets the frequency of this DeviceCpu.


        :return: The frequency of this DeviceCpu.
        :rtype: str
        """
        return self._frequency

    @frequency.setter
    def frequency(self, frequency):
        """Sets the frequency of this DeviceCpu.


        :param frequency: The frequency of this DeviceCpu.
        :type frequency: str
        """

        self._frequency = frequency

    @property
    def architecture(self):
        """Gets the architecture of this DeviceCpu.


        :return: The architecture of this DeviceCpu.
        :rtype: str
        """
        return self._architecture

    @architecture.setter
    def architecture(self, architecture):
        """Sets the architecture of this DeviceCpu.


        :param architecture: The architecture of this DeviceCpu.
        :type architecture: str
        """

        self._architecture = architecture

    @property
    def clock(self):
        """Gets the clock of this DeviceCpu.


        :return: The clock of this DeviceCpu.
        :rtype: float
        """
        return self._clock

    @clock.setter
    def clock(self, clock):
        """Sets the clock of this DeviceCpu.


        :param clock: The clock of this DeviceCpu.
        :type clock: float
        """

        self._clock = clock
