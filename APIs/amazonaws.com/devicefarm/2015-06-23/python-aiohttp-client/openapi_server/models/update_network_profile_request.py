# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.network_profile_type import NetworkProfileType
from openapi_server import util


class UpdateNetworkProfileRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, arn: str=None, name: str=None, description: str=None, type: NetworkProfileType=None, uplink_bandwidth_bits: int=None, downlink_bandwidth_bits: int=None, uplink_delay_ms: int=None, downlink_delay_ms: int=None, uplink_jitter_ms: int=None, downlink_jitter_ms: int=None, uplink_loss_percent: int=None, downlink_loss_percent: int=None):
        """UpdateNetworkProfileRequest - a model defined in OpenAPI

        :param arn: The arn of this UpdateNetworkProfileRequest.
        :param name: The name of this UpdateNetworkProfileRequest.
        :param description: The description of this UpdateNetworkProfileRequest.
        :param type: The type of this UpdateNetworkProfileRequest.
        :param uplink_bandwidth_bits: The uplink_bandwidth_bits of this UpdateNetworkProfileRequest.
        :param downlink_bandwidth_bits: The downlink_bandwidth_bits of this UpdateNetworkProfileRequest.
        :param uplink_delay_ms: The uplink_delay_ms of this UpdateNetworkProfileRequest.
        :param downlink_delay_ms: The downlink_delay_ms of this UpdateNetworkProfileRequest.
        :param uplink_jitter_ms: The uplink_jitter_ms of this UpdateNetworkProfileRequest.
        :param downlink_jitter_ms: The downlink_jitter_ms of this UpdateNetworkProfileRequest.
        :param uplink_loss_percent: The uplink_loss_percent of this UpdateNetworkProfileRequest.
        :param downlink_loss_percent: The downlink_loss_percent of this UpdateNetworkProfileRequest.
        """
        self.openapi_types = {
            'arn': str,
            'name': str,
            'description': str,
            'type': NetworkProfileType,
            'uplink_bandwidth_bits': int,
            'downlink_bandwidth_bits': int,
            'uplink_delay_ms': int,
            'downlink_delay_ms': int,
            'uplink_jitter_ms': int,
            'downlink_jitter_ms': int,
            'uplink_loss_percent': int,
            'downlink_loss_percent': int
        }

        self.attribute_map = {
            'arn': 'arn',
            'name': 'name',
            'description': 'description',
            'type': 'type',
            'uplink_bandwidth_bits': 'uplinkBandwidthBits',
            'downlink_bandwidth_bits': 'downlinkBandwidthBits',
            'uplink_delay_ms': 'uplinkDelayMs',
            'downlink_delay_ms': 'downlinkDelayMs',
            'uplink_jitter_ms': 'uplinkJitterMs',
            'downlink_jitter_ms': 'downlinkJitterMs',
            'uplink_loss_percent': 'uplinkLossPercent',
            'downlink_loss_percent': 'downlinkLossPercent'
        }

        self._arn = arn
        self._name = name
        self._description = description
        self._type = type
        self._uplink_bandwidth_bits = uplink_bandwidth_bits
        self._downlink_bandwidth_bits = downlink_bandwidth_bits
        self._uplink_delay_ms = uplink_delay_ms
        self._downlink_delay_ms = downlink_delay_ms
        self._uplink_jitter_ms = uplink_jitter_ms
        self._downlink_jitter_ms = downlink_jitter_ms
        self._uplink_loss_percent = uplink_loss_percent
        self._downlink_loss_percent = downlink_loss_percent

    @classmethod
    def from_dict(cls, dikt: dict) -> 'UpdateNetworkProfileRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The UpdateNetworkProfileRequest of this UpdateNetworkProfileRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def arn(self):
        """Gets the arn of this UpdateNetworkProfileRequest.


        :return: The arn of this UpdateNetworkProfileRequest.
        :rtype: str
        """
        return self._arn

    @arn.setter
    def arn(self, arn):
        """Sets the arn of this UpdateNetworkProfileRequest.


        :param arn: The arn of this UpdateNetworkProfileRequest.
        :type arn: str
        """
        if arn is None:
            raise ValueError("Invalid value for `arn`, must not be `None`")

        self._arn = arn

    @property
    def name(self):
        """Gets the name of this UpdateNetworkProfileRequest.


        :return: The name of this UpdateNetworkProfileRequest.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this UpdateNetworkProfileRequest.


        :param name: The name of this UpdateNetworkProfileRequest.
        :type name: str
        """

        self._name = name

    @property
    def description(self):
        """Gets the description of this UpdateNetworkProfileRequest.


        :return: The description of this UpdateNetworkProfileRequest.
        :rtype: str
        """
        return self._description

    @description.setter
    def description(self, description):
        """Sets the description of this UpdateNetworkProfileRequest.


        :param description: The description of this UpdateNetworkProfileRequest.
        :type description: str
        """

        self._description = description

    @property
    def type(self):
        """Gets the type of this UpdateNetworkProfileRequest.


        :return: The type of this UpdateNetworkProfileRequest.
        :rtype: NetworkProfileType
        """
        return self._type

    @type.setter
    def type(self, type):
        """Sets the type of this UpdateNetworkProfileRequest.


        :param type: The type of this UpdateNetworkProfileRequest.
        :type type: NetworkProfileType
        """

        self._type = type

    @property
    def uplink_bandwidth_bits(self):
        """Gets the uplink_bandwidth_bits of this UpdateNetworkProfileRequest.


        :return: The uplink_bandwidth_bits of this UpdateNetworkProfileRequest.
        :rtype: int
        """
        return self._uplink_bandwidth_bits

    @uplink_bandwidth_bits.setter
    def uplink_bandwidth_bits(self, uplink_bandwidth_bits):
        """Sets the uplink_bandwidth_bits of this UpdateNetworkProfileRequest.


        :param uplink_bandwidth_bits: The uplink_bandwidth_bits of this UpdateNetworkProfileRequest.
        :type uplink_bandwidth_bits: int
        """

        self._uplink_bandwidth_bits = uplink_bandwidth_bits

    @property
    def downlink_bandwidth_bits(self):
        """Gets the downlink_bandwidth_bits of this UpdateNetworkProfileRequest.


        :return: The downlink_bandwidth_bits of this UpdateNetworkProfileRequest.
        :rtype: int
        """
        return self._downlink_bandwidth_bits

    @downlink_bandwidth_bits.setter
    def downlink_bandwidth_bits(self, downlink_bandwidth_bits):
        """Sets the downlink_bandwidth_bits of this UpdateNetworkProfileRequest.


        :param downlink_bandwidth_bits: The downlink_bandwidth_bits of this UpdateNetworkProfileRequest.
        :type downlink_bandwidth_bits: int
        """

        self._downlink_bandwidth_bits = downlink_bandwidth_bits

    @property
    def uplink_delay_ms(self):
        """Gets the uplink_delay_ms of this UpdateNetworkProfileRequest.


        :return: The uplink_delay_ms of this UpdateNetworkProfileRequest.
        :rtype: int
        """
        return self._uplink_delay_ms

    @uplink_delay_ms.setter
    def uplink_delay_ms(self, uplink_delay_ms):
        """Sets the uplink_delay_ms of this UpdateNetworkProfileRequest.


        :param uplink_delay_ms: The uplink_delay_ms of this UpdateNetworkProfileRequest.
        :type uplink_delay_ms: int
        """

        self._uplink_delay_ms = uplink_delay_ms

    @property
    def downlink_delay_ms(self):
        """Gets the downlink_delay_ms of this UpdateNetworkProfileRequest.


        :return: The downlink_delay_ms of this UpdateNetworkProfileRequest.
        :rtype: int
        """
        return self._downlink_delay_ms

    @downlink_delay_ms.setter
    def downlink_delay_ms(self, downlink_delay_ms):
        """Sets the downlink_delay_ms of this UpdateNetworkProfileRequest.


        :param downlink_delay_ms: The downlink_delay_ms of this UpdateNetworkProfileRequest.
        :type downlink_delay_ms: int
        """

        self._downlink_delay_ms = downlink_delay_ms

    @property
    def uplink_jitter_ms(self):
        """Gets the uplink_jitter_ms of this UpdateNetworkProfileRequest.


        :return: The uplink_jitter_ms of this UpdateNetworkProfileRequest.
        :rtype: int
        """
        return self._uplink_jitter_ms

    @uplink_jitter_ms.setter
    def uplink_jitter_ms(self, uplink_jitter_ms):
        """Sets the uplink_jitter_ms of this UpdateNetworkProfileRequest.


        :param uplink_jitter_ms: The uplink_jitter_ms of this UpdateNetworkProfileRequest.
        :type uplink_jitter_ms: int
        """

        self._uplink_jitter_ms = uplink_jitter_ms

    @property
    def downlink_jitter_ms(self):
        """Gets the downlink_jitter_ms of this UpdateNetworkProfileRequest.


        :return: The downlink_jitter_ms of this UpdateNetworkProfileRequest.
        :rtype: int
        """
        return self._downlink_jitter_ms

    @downlink_jitter_ms.setter
    def downlink_jitter_ms(self, downlink_jitter_ms):
        """Sets the downlink_jitter_ms of this UpdateNetworkProfileRequest.


        :param downlink_jitter_ms: The downlink_jitter_ms of this UpdateNetworkProfileRequest.
        :type downlink_jitter_ms: int
        """

        self._downlink_jitter_ms = downlink_jitter_ms

    @property
    def uplink_loss_percent(self):
        """Gets the uplink_loss_percent of this UpdateNetworkProfileRequest.


        :return: The uplink_loss_percent of this UpdateNetworkProfileRequest.
        :rtype: int
        """
        return self._uplink_loss_percent

    @uplink_loss_percent.setter
    def uplink_loss_percent(self, uplink_loss_percent):
        """Sets the uplink_loss_percent of this UpdateNetworkProfileRequest.


        :param uplink_loss_percent: The uplink_loss_percent of this UpdateNetworkProfileRequest.
        :type uplink_loss_percent: int
        """

        self._uplink_loss_percent = uplink_loss_percent

    @property
    def downlink_loss_percent(self):
        """Gets the downlink_loss_percent of this UpdateNetworkProfileRequest.


        :return: The downlink_loss_percent of this UpdateNetworkProfileRequest.
        :rtype: int
        """
        return self._downlink_loss_percent

    @downlink_loss_percent.setter
    def downlink_loss_percent(self, downlink_loss_percent):
        """Sets the downlink_loss_percent of this UpdateNetworkProfileRequest.


        :param downlink_loss_percent: The downlink_loss_percent of this UpdateNetworkProfileRequest.
        :type downlink_loss_percent: int
        """

        self._downlink_loss_percent = downlink_loss_percent
