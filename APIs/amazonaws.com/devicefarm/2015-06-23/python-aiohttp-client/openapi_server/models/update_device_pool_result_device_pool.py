# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.device_pool_type import DevicePoolType
from openapi_server import util


class UpdateDevicePoolResultDevicePool(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, arn: str=None, name: str=None, description: str=None, type: DevicePoolType=None, rules: List=None, max_devices: int=None):
        """UpdateDevicePoolResultDevicePool - a model defined in OpenAPI

        :param arn: The arn of this UpdateDevicePoolResultDevicePool.
        :param name: The name of this UpdateDevicePoolResultDevicePool.
        :param description: The description of this UpdateDevicePoolResultDevicePool.
        :param type: The type of this UpdateDevicePoolResultDevicePool.
        :param rules: The rules of this UpdateDevicePoolResultDevicePool.
        :param max_devices: The max_devices of this UpdateDevicePoolResultDevicePool.
        """
        self.openapi_types = {
            'arn': str,
            'name': str,
            'description': str,
            'type': DevicePoolType,
            'rules': List,
            'max_devices': int
        }

        self.attribute_map = {
            'arn': 'arn',
            'name': 'name',
            'description': 'description',
            'type': 'type',
            'rules': 'rules',
            'max_devices': 'maxDevices'
        }

        self._arn = arn
        self._name = name
        self._description = description
        self._type = type
        self._rules = rules
        self._max_devices = max_devices

    @classmethod
    def from_dict(cls, dikt: dict) -> 'UpdateDevicePoolResultDevicePool':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The UpdateDevicePoolResult_devicePool of this UpdateDevicePoolResultDevicePool.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def arn(self):
        """Gets the arn of this UpdateDevicePoolResultDevicePool.


        :return: The arn of this UpdateDevicePoolResultDevicePool.
        :rtype: str
        """
        return self._arn

    @arn.setter
    def arn(self, arn):
        """Sets the arn of this UpdateDevicePoolResultDevicePool.


        :param arn: The arn of this UpdateDevicePoolResultDevicePool.
        :type arn: str
        """

        self._arn = arn

    @property
    def name(self):
        """Gets the name of this UpdateDevicePoolResultDevicePool.


        :return: The name of this UpdateDevicePoolResultDevicePool.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this UpdateDevicePoolResultDevicePool.


        :param name: The name of this UpdateDevicePoolResultDevicePool.
        :type name: str
        """

        self._name = name

    @property
    def description(self):
        """Gets the description of this UpdateDevicePoolResultDevicePool.


        :return: The description of this UpdateDevicePoolResultDevicePool.
        :rtype: str
        """
        return self._description

    @description.setter
    def description(self, description):
        """Sets the description of this UpdateDevicePoolResultDevicePool.


        :param description: The description of this UpdateDevicePoolResultDevicePool.
        :type description: str
        """

        self._description = description

    @property
    def type(self):
        """Gets the type of this UpdateDevicePoolResultDevicePool.


        :return: The type of this UpdateDevicePoolResultDevicePool.
        :rtype: DevicePoolType
        """
        return self._type

    @type.setter
    def type(self, type):
        """Sets the type of this UpdateDevicePoolResultDevicePool.


        :param type: The type of this UpdateDevicePoolResultDevicePool.
        :type type: DevicePoolType
        """

        self._type = type

    @property
    def rules(self):
        """Gets the rules of this UpdateDevicePoolResultDevicePool.


        :return: The rules of this UpdateDevicePoolResultDevicePool.
        :rtype: List
        """
        return self._rules

    @rules.setter
    def rules(self, rules):
        """Sets the rules of this UpdateDevicePoolResultDevicePool.


        :param rules: The rules of this UpdateDevicePoolResultDevicePool.
        :type rules: List
        """

        self._rules = rules

    @property
    def max_devices(self):
        """Gets the max_devices of this UpdateDevicePoolResultDevicePool.


        :return: The max_devices of this UpdateDevicePoolResultDevicePool.
        :rtype: int
        """
        return self._max_devices

    @max_devices.setter
    def max_devices(self, max_devices):
        """Sets the max_devices of this UpdateDevicePoolResultDevicePool.


        :param max_devices: The max_devices of this UpdateDevicePoolResultDevicePool.
        :type max_devices: int
        """

        self._max_devices = max_devices
