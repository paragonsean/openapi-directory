# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.create_vpce_configuration_result_vpce_configuration import CreateVPCEConfigurationResultVpceConfiguration
from openapi_server import util


class GetVPCEConfigurationResult(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, vpce_configuration: CreateVPCEConfigurationResultVpceConfiguration=None):
        """GetVPCEConfigurationResult - a model defined in OpenAPI

        :param vpce_configuration: The vpce_configuration of this GetVPCEConfigurationResult.
        """
        self.openapi_types = {
            'vpce_configuration': CreateVPCEConfigurationResultVpceConfiguration
        }

        self.attribute_map = {
            'vpce_configuration': 'vpceConfiguration'
        }

        self._vpce_configuration = vpce_configuration

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GetVPCEConfigurationResult':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The GetVPCEConfigurationResult of this GetVPCEConfigurationResult.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def vpce_configuration(self):
        """Gets the vpce_configuration of this GetVPCEConfigurationResult.


        :return: The vpce_configuration of this GetVPCEConfigurationResult.
        :rtype: CreateVPCEConfigurationResultVpceConfiguration
        """
        return self._vpce_configuration

    @vpce_configuration.setter
    def vpce_configuration(self, vpce_configuration):
        """Sets the vpce_configuration of this GetVPCEConfigurationResult.


        :param vpce_configuration: The vpce_configuration of this GetVPCEConfigurationResult.
        :type vpce_configuration: CreateVPCEConfigurationResultVpceConfiguration
        """

        self._vpce_configuration = vpce_configuration
