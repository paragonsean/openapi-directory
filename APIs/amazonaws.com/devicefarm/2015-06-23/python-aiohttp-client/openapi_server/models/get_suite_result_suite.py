# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.execution_result import ExecutionResult
from openapi_server.models.execution_status import ExecutionStatus
from openapi_server.models.suite_counters import SuiteCounters
from openapi_server.models.suite_device_minutes import SuiteDeviceMinutes
from openapi_server.models.test_type import TestType
from openapi_server import util


class GetSuiteResultSuite(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, arn: str=None, name: str=None, type: TestType=None, created: datetime=None, status: ExecutionStatus=None, result: ExecutionResult=None, started: datetime=None, stopped: datetime=None, counters: SuiteCounters=None, message: str=None, device_minutes: SuiteDeviceMinutes=None):
        """GetSuiteResultSuite - a model defined in OpenAPI

        :param arn: The arn of this GetSuiteResultSuite.
        :param name: The name of this GetSuiteResultSuite.
        :param type: The type of this GetSuiteResultSuite.
        :param created: The created of this GetSuiteResultSuite.
        :param status: The status of this GetSuiteResultSuite.
        :param result: The result of this GetSuiteResultSuite.
        :param started: The started of this GetSuiteResultSuite.
        :param stopped: The stopped of this GetSuiteResultSuite.
        :param counters: The counters of this GetSuiteResultSuite.
        :param message: The message of this GetSuiteResultSuite.
        :param device_minutes: The device_minutes of this GetSuiteResultSuite.
        """
        self.openapi_types = {
            'arn': str,
            'name': str,
            'type': TestType,
            'created': datetime,
            'status': ExecutionStatus,
            'result': ExecutionResult,
            'started': datetime,
            'stopped': datetime,
            'counters': SuiteCounters,
            'message': str,
            'device_minutes': SuiteDeviceMinutes
        }

        self.attribute_map = {
            'arn': 'arn',
            'name': 'name',
            'type': 'type',
            'created': 'created',
            'status': 'status',
            'result': 'result',
            'started': 'started',
            'stopped': 'stopped',
            'counters': 'counters',
            'message': 'message',
            'device_minutes': 'deviceMinutes'
        }

        self._arn = arn
        self._name = name
        self._type = type
        self._created = created
        self._status = status
        self._result = result
        self._started = started
        self._stopped = stopped
        self._counters = counters
        self._message = message
        self._device_minutes = device_minutes

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GetSuiteResultSuite':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The GetSuiteResult_suite of this GetSuiteResultSuite.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def arn(self):
        """Gets the arn of this GetSuiteResultSuite.


        :return: The arn of this GetSuiteResultSuite.
        :rtype: str
        """
        return self._arn

    @arn.setter
    def arn(self, arn):
        """Sets the arn of this GetSuiteResultSuite.


        :param arn: The arn of this GetSuiteResultSuite.
        :type arn: str
        """

        self._arn = arn

    @property
    def name(self):
        """Gets the name of this GetSuiteResultSuite.


        :return: The name of this GetSuiteResultSuite.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this GetSuiteResultSuite.


        :param name: The name of this GetSuiteResultSuite.
        :type name: str
        """

        self._name = name

    @property
    def type(self):
        """Gets the type of this GetSuiteResultSuite.


        :return: The type of this GetSuiteResultSuite.
        :rtype: TestType
        """
        return self._type

    @type.setter
    def type(self, type):
        """Sets the type of this GetSuiteResultSuite.


        :param type: The type of this GetSuiteResultSuite.
        :type type: TestType
        """

        self._type = type

    @property
    def created(self):
        """Gets the created of this GetSuiteResultSuite.


        :return: The created of this GetSuiteResultSuite.
        :rtype: datetime
        """
        return self._created

    @created.setter
    def created(self, created):
        """Sets the created of this GetSuiteResultSuite.


        :param created: The created of this GetSuiteResultSuite.
        :type created: datetime
        """

        self._created = created

    @property
    def status(self):
        """Gets the status of this GetSuiteResultSuite.


        :return: The status of this GetSuiteResultSuite.
        :rtype: ExecutionStatus
        """
        return self._status

    @status.setter
    def status(self, status):
        """Sets the status of this GetSuiteResultSuite.


        :param status: The status of this GetSuiteResultSuite.
        :type status: ExecutionStatus
        """

        self._status = status

    @property
    def result(self):
        """Gets the result of this GetSuiteResultSuite.


        :return: The result of this GetSuiteResultSuite.
        :rtype: ExecutionResult
        """
        return self._result

    @result.setter
    def result(self, result):
        """Sets the result of this GetSuiteResultSuite.


        :param result: The result of this GetSuiteResultSuite.
        :type result: ExecutionResult
        """

        self._result = result

    @property
    def started(self):
        """Gets the started of this GetSuiteResultSuite.


        :return: The started of this GetSuiteResultSuite.
        :rtype: datetime
        """
        return self._started

    @started.setter
    def started(self, started):
        """Sets the started of this GetSuiteResultSuite.


        :param started: The started of this GetSuiteResultSuite.
        :type started: datetime
        """

        self._started = started

    @property
    def stopped(self):
        """Gets the stopped of this GetSuiteResultSuite.


        :return: The stopped of this GetSuiteResultSuite.
        :rtype: datetime
        """
        return self._stopped

    @stopped.setter
    def stopped(self, stopped):
        """Sets the stopped of this GetSuiteResultSuite.


        :param stopped: The stopped of this GetSuiteResultSuite.
        :type stopped: datetime
        """

        self._stopped = stopped

    @property
    def counters(self):
        """Gets the counters of this GetSuiteResultSuite.


        :return: The counters of this GetSuiteResultSuite.
        :rtype: SuiteCounters
        """
        return self._counters

    @counters.setter
    def counters(self, counters):
        """Sets the counters of this GetSuiteResultSuite.


        :param counters: The counters of this GetSuiteResultSuite.
        :type counters: SuiteCounters
        """

        self._counters = counters

    @property
    def message(self):
        """Gets the message of this GetSuiteResultSuite.


        :return: The message of this GetSuiteResultSuite.
        :rtype: str
        """
        return self._message

    @message.setter
    def message(self, message):
        """Sets the message of this GetSuiteResultSuite.


        :param message: The message of this GetSuiteResultSuite.
        :type message: str
        """

        self._message = message

    @property
    def device_minutes(self):
        """Gets the device_minutes of this GetSuiteResultSuite.


        :return: The device_minutes of this GetSuiteResultSuite.
        :rtype: SuiteDeviceMinutes
        """
        return self._device_minutes

    @device_minutes.setter
    def device_minutes(self, device_minutes):
        """Sets the device_minutes of this GetSuiteResultSuite.


        :param device_minutes: The device_minutes of this GetSuiteResultSuite.
        :type device_minutes: SuiteDeviceMinutes
        """

        self._device_minutes = device_minutes
