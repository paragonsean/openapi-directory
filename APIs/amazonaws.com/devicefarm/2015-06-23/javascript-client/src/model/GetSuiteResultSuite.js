/**
 * AWS Device Farm
 * <p>Welcome to the AWS Device Farm API documentation, which contains APIs for:</p> <ul> <li> <p>Testing on desktop browsers</p> <p> Device Farm makes it possible for you to test your web applications on desktop browsers using Selenium. The APIs for desktop browser testing contain <code>TestGrid</code> in their names. For more information, see <a href=\"https://docs.aws.amazon.com/devicefarm/latest/testgrid/\">Testing Web Applications on Selenium with Device Farm</a>.</p> </li> <li> <p>Testing on real mobile devices</p> <p>Device Farm makes it possible for you to test apps on physical phones, tablets, and other devices in the cloud. For more information, see the <a href=\"https://docs.aws.amazon.com/devicefarm/latest/developerguide/\">Device Farm Developer Guide</a>.</p> </li> </ul>
 *
 * The version of the OpenAPI document: 2015-06-23
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import ExecutionResult from './ExecutionResult';
import ExecutionStatus from './ExecutionStatus';
import Suite from './Suite';
import SuiteCounters from './SuiteCounters';
import SuiteDeviceMinutes from './SuiteDeviceMinutes';
import TestType from './TestType';

/**
 * The GetSuiteResultSuite model module.
 * @module model/GetSuiteResultSuite
 * @version 2015-06-23
 */
class GetSuiteResultSuite {
    /**
     * Constructs a new <code>GetSuiteResultSuite</code>.
     * @alias module:model/GetSuiteResultSuite
     * @implements module:model/Suite
     */
    constructor() { 
        Suite.initialize(this);
        GetSuiteResultSuite.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>GetSuiteResultSuite</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/GetSuiteResultSuite} obj Optional instance to populate.
     * @return {module:model/GetSuiteResultSuite} The populated <code>GetSuiteResultSuite</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new GetSuiteResultSuite();
            Suite.constructFromObject(data, obj);

            if (data.hasOwnProperty('arn')) {
                obj['arn'] = ApiClient.convertToType(data['arn'], 'String');
            }
            if (data.hasOwnProperty('name')) {
                obj['name'] = ApiClient.convertToType(data['name'], 'String');
            }
            if (data.hasOwnProperty('type')) {
                obj['type'] = ApiClient.convertToType(data['type'], TestType);
            }
            if (data.hasOwnProperty('created')) {
                obj['created'] = ApiClient.convertToType(data['created'], 'Date');
            }
            if (data.hasOwnProperty('status')) {
                obj['status'] = ApiClient.convertToType(data['status'], ExecutionStatus);
            }
            if (data.hasOwnProperty('result')) {
                obj['result'] = ApiClient.convertToType(data['result'], ExecutionResult);
            }
            if (data.hasOwnProperty('started')) {
                obj['started'] = ApiClient.convertToType(data['started'], 'Date');
            }
            if (data.hasOwnProperty('stopped')) {
                obj['stopped'] = ApiClient.convertToType(data['stopped'], 'Date');
            }
            if (data.hasOwnProperty('counters')) {
                obj['counters'] = SuiteCounters.constructFromObject(data['counters']);
            }
            if (data.hasOwnProperty('message')) {
                obj['message'] = ApiClient.convertToType(data['message'], 'String');
            }
            if (data.hasOwnProperty('deviceMinutes')) {
                obj['deviceMinutes'] = SuiteDeviceMinutes.constructFromObject(data['deviceMinutes']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>GetSuiteResultSuite</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>GetSuiteResultSuite</code>.
     */
    static validateJSON(data) {
        // validate the optional field `arn`
        if (data['arn']) { // data not null
          String.validateJSON(data['arn']);
        }
        // validate the optional field `name`
        if (data['name']) { // data not null
          String.validateJSON(data['name']);
        }
        // validate the optional field `type`
        if (data['type']) { // data not null
          TestType.validateJSON(data['type']);
        }
        // validate the optional field `created`
        if (data['created']) { // data not null
          Date.validateJSON(data['created']);
        }
        // validate the optional field `status`
        if (data['status']) { // data not null
          ExecutionStatus.validateJSON(data['status']);
        }
        // validate the optional field `result`
        if (data['result']) { // data not null
          ExecutionResult.validateJSON(data['result']);
        }
        // validate the optional field `started`
        if (data['started']) { // data not null
          Date.validateJSON(data['started']);
        }
        // validate the optional field `stopped`
        if (data['stopped']) { // data not null
          Date.validateJSON(data['stopped']);
        }
        // validate the optional field `counters`
        if (data['counters']) { // data not null
          SuiteCounters.validateJSON(data['counters']);
        }
        // validate the optional field `message`
        if (data['message']) { // data not null
          String.validateJSON(data['message']);
        }
        // validate the optional field `deviceMinutes`
        if (data['deviceMinutes']) { // data not null
          SuiteDeviceMinutes.validateJSON(data['deviceMinutes']);
        }

        return true;
    }


}



/**
 * @member {String} arn
 */
GetSuiteResultSuite.prototype['arn'] = undefined;

/**
 * @member {String} name
 */
GetSuiteResultSuite.prototype['name'] = undefined;

/**
 * @member {module:model/TestType} type
 */
GetSuiteResultSuite.prototype['type'] = undefined;

/**
 * @member {Date} created
 */
GetSuiteResultSuite.prototype['created'] = undefined;

/**
 * @member {module:model/ExecutionStatus} status
 */
GetSuiteResultSuite.prototype['status'] = undefined;

/**
 * @member {module:model/ExecutionResult} result
 */
GetSuiteResultSuite.prototype['result'] = undefined;

/**
 * @member {Date} started
 */
GetSuiteResultSuite.prototype['started'] = undefined;

/**
 * @member {Date} stopped
 */
GetSuiteResultSuite.prototype['stopped'] = undefined;

/**
 * @member {module:model/SuiteCounters} counters
 */
GetSuiteResultSuite.prototype['counters'] = undefined;

/**
 * @member {String} message
 */
GetSuiteResultSuite.prototype['message'] = undefined;

/**
 * @member {module:model/SuiteDeviceMinutes} deviceMinutes
 */
GetSuiteResultSuite.prototype['deviceMinutes'] = undefined;


// Implement Suite interface:
/**
 * @member {String} arn
 */
Suite.prototype['arn'] = undefined;
/**
 * @member {String} name
 */
Suite.prototype['name'] = undefined;
/**
 * @member {module:model/TestType} type
 */
Suite.prototype['type'] = undefined;
/**
 * @member {Date} created
 */
Suite.prototype['created'] = undefined;
/**
 * @member {module:model/ExecutionStatus} status
 */
Suite.prototype['status'] = undefined;
/**
 * @member {module:model/ExecutionResult} result
 */
Suite.prototype['result'] = undefined;
/**
 * @member {Date} started
 */
Suite.prototype['started'] = undefined;
/**
 * @member {Date} stopped
 */
Suite.prototype['stopped'] = undefined;
/**
 * @member {module:model/SuiteCounters} counters
 */
Suite.prototype['counters'] = undefined;
/**
 * @member {String} message
 */
Suite.prototype['message'] = undefined;
/**
 * @member {module:model/SuiteDeviceMinutes} deviceMinutes
 */
Suite.prototype['deviceMinutes'] = undefined;




export default GetSuiteResultSuite;

