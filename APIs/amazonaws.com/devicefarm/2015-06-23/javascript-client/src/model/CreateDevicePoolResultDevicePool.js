/**
 * AWS Device Farm
 * <p>Welcome to the AWS Device Farm API documentation, which contains APIs for:</p> <ul> <li> <p>Testing on desktop browsers</p> <p> Device Farm makes it possible for you to test your web applications on desktop browsers using Selenium. The APIs for desktop browser testing contain <code>TestGrid</code> in their names. For more information, see <a href=\"https://docs.aws.amazon.com/devicefarm/latest/testgrid/\">Testing Web Applications on Selenium with Device Farm</a>.</p> </li> <li> <p>Testing on real mobile devices</p> <p>Device Farm makes it possible for you to test apps on physical phones, tablets, and other devices in the cloud. For more information, see the <a href=\"https://docs.aws.amazon.com/devicefarm/latest/developerguide/\">Device Farm Developer Guide</a>.</p> </li> </ul>
 *
 * The version of the OpenAPI document: 2015-06-23
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import DevicePool from './DevicePool';
import DevicePoolType from './DevicePoolType';

/**
 * The CreateDevicePoolResultDevicePool model module.
 * @module model/CreateDevicePoolResultDevicePool
 * @version 2015-06-23
 */
class CreateDevicePoolResultDevicePool {
    /**
     * Constructs a new <code>CreateDevicePoolResultDevicePool</code>.
     * @alias module:model/CreateDevicePoolResultDevicePool
     * @implements module:model/DevicePool
     */
    constructor() { 
        DevicePool.initialize(this);
        CreateDevicePoolResultDevicePool.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>CreateDevicePoolResultDevicePool</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/CreateDevicePoolResultDevicePool} obj Optional instance to populate.
     * @return {module:model/CreateDevicePoolResultDevicePool} The populated <code>CreateDevicePoolResultDevicePool</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new CreateDevicePoolResultDevicePool();
            DevicePool.constructFromObject(data, obj);

            if (data.hasOwnProperty('arn')) {
                obj['arn'] = ApiClient.convertToType(data['arn'], 'String');
            }
            if (data.hasOwnProperty('name')) {
                obj['name'] = ApiClient.convertToType(data['name'], 'String');
            }
            if (data.hasOwnProperty('description')) {
                obj['description'] = ApiClient.convertToType(data['description'], 'String');
            }
            if (data.hasOwnProperty('type')) {
                obj['type'] = ApiClient.convertToType(data['type'], DevicePoolType);
            }
            if (data.hasOwnProperty('rules')) {
                obj['rules'] = ApiClient.convertToType(data['rules'], Array);
            }
            if (data.hasOwnProperty('maxDevices')) {
                obj['maxDevices'] = ApiClient.convertToType(data['maxDevices'], 'Number');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>CreateDevicePoolResultDevicePool</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>CreateDevicePoolResultDevicePool</code>.
     */
    static validateJSON(data) {
        // validate the optional field `arn`
        if (data['arn']) { // data not null
          String.validateJSON(data['arn']);
        }
        // validate the optional field `name`
        if (data['name']) { // data not null
          String.validateJSON(data['name']);
        }
        // validate the optional field `description`
        if (data['description']) { // data not null
          String.validateJSON(data['description']);
        }
        // validate the optional field `type`
        if (data['type']) { // data not null
          DevicePoolType.validateJSON(data['type']);
        }
        // validate the optional field `rules`
        if (data['rules']) { // data not null
          Array.validateJSON(data['rules']);
        }
        // validate the optional field `maxDevices`
        if (data['maxDevices']) { // data not null
          Number.validateJSON(data['maxDevices']);
        }

        return true;
    }


}



/**
 * @member {String} arn
 */
CreateDevicePoolResultDevicePool.prototype['arn'] = undefined;

/**
 * @member {String} name
 */
CreateDevicePoolResultDevicePool.prototype['name'] = undefined;

/**
 * @member {String} description
 */
CreateDevicePoolResultDevicePool.prototype['description'] = undefined;

/**
 * @member {module:model/DevicePoolType} type
 */
CreateDevicePoolResultDevicePool.prototype['type'] = undefined;

/**
 * @member {Array} rules
 */
CreateDevicePoolResultDevicePool.prototype['rules'] = undefined;

/**
 * @member {Number} maxDevices
 */
CreateDevicePoolResultDevicePool.prototype['maxDevices'] = undefined;


// Implement DevicePool interface:
/**
 * @member {String} arn
 */
DevicePool.prototype['arn'] = undefined;
/**
 * @member {String} name
 */
DevicePool.prototype['name'] = undefined;
/**
 * @member {String} description
 */
DevicePool.prototype['description'] = undefined;
/**
 * @member {module:model/DevicePoolType} type
 */
DevicePool.prototype['type'] = undefined;
/**
 * @member {Array} rules
 */
DevicePool.prototype['rules'] = undefined;
/**
 * @member {Number} maxDevices
 */
DevicePool.prototype['maxDevices'] = undefined;




export default CreateDevicePoolResultDevicePool;

