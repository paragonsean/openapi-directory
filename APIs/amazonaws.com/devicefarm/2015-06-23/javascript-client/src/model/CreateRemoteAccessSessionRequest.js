/**
 * AWS Device Farm
 * <p>Welcome to the AWS Device Farm API documentation, which contains APIs for:</p> <ul> <li> <p>Testing on desktop browsers</p> <p> Device Farm makes it possible for you to test your web applications on desktop browsers using Selenium. The APIs for desktop browser testing contain <code>TestGrid</code> in their names. For more information, see <a href=\"https://docs.aws.amazon.com/devicefarm/latest/testgrid/\">Testing Web Applications on Selenium with Device Farm</a>.</p> </li> <li> <p>Testing on real mobile devices</p> <p>Device Farm makes it possible for you to test apps on physical phones, tablets, and other devices in the cloud. For more information, see the <a href=\"https://docs.aws.amazon.com/devicefarm/latest/developerguide/\">Device Farm Developer Guide</a>.</p> </li> </ul>
 *
 * The version of the OpenAPI document: 2015-06-23
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import CreateRemoteAccessSessionRequestConfiguration from './CreateRemoteAccessSessionRequestConfiguration';
import InteractionMode from './InteractionMode';

/**
 * The CreateRemoteAccessSessionRequest model module.
 * @module model/CreateRemoteAccessSessionRequest
 * @version 2015-06-23
 */
class CreateRemoteAccessSessionRequest {
    /**
     * Constructs a new <code>CreateRemoteAccessSessionRequest</code>.
     * Creates and submits a request to start a remote access session.
     * @alias module:model/CreateRemoteAccessSessionRequest
     * @param projectArn {String} 
     * @param deviceArn {String} 
     */
    constructor(projectArn, deviceArn) { 
        
        CreateRemoteAccessSessionRequest.initialize(this, projectArn, deviceArn);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, projectArn, deviceArn) { 
        obj['projectArn'] = projectArn;
        obj['deviceArn'] = deviceArn;
    }

    /**
     * Constructs a <code>CreateRemoteAccessSessionRequest</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/CreateRemoteAccessSessionRequest} obj Optional instance to populate.
     * @return {module:model/CreateRemoteAccessSessionRequest} The populated <code>CreateRemoteAccessSessionRequest</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new CreateRemoteAccessSessionRequest();

            if (data.hasOwnProperty('projectArn')) {
                obj['projectArn'] = ApiClient.convertToType(data['projectArn'], 'String');
            }
            if (data.hasOwnProperty('deviceArn')) {
                obj['deviceArn'] = ApiClient.convertToType(data['deviceArn'], 'String');
            }
            if (data.hasOwnProperty('instanceArn')) {
                obj['instanceArn'] = ApiClient.convertToType(data['instanceArn'], 'String');
            }
            if (data.hasOwnProperty('sshPublicKey')) {
                obj['sshPublicKey'] = ApiClient.convertToType(data['sshPublicKey'], 'String');
            }
            if (data.hasOwnProperty('remoteDebugEnabled')) {
                obj['remoteDebugEnabled'] = ApiClient.convertToType(data['remoteDebugEnabled'], 'Boolean');
            }
            if (data.hasOwnProperty('remoteRecordEnabled')) {
                obj['remoteRecordEnabled'] = ApiClient.convertToType(data['remoteRecordEnabled'], 'Boolean');
            }
            if (data.hasOwnProperty('remoteRecordAppArn')) {
                obj['remoteRecordAppArn'] = ApiClient.convertToType(data['remoteRecordAppArn'], 'String');
            }
            if (data.hasOwnProperty('name')) {
                obj['name'] = ApiClient.convertToType(data['name'], 'String');
            }
            if (data.hasOwnProperty('clientId')) {
                obj['clientId'] = ApiClient.convertToType(data['clientId'], 'String');
            }
            if (data.hasOwnProperty('configuration')) {
                obj['configuration'] = CreateRemoteAccessSessionRequestConfiguration.constructFromObject(data['configuration']);
            }
            if (data.hasOwnProperty('interactionMode')) {
                obj['interactionMode'] = ApiClient.convertToType(data['interactionMode'], InteractionMode);
            }
            if (data.hasOwnProperty('skipAppResign')) {
                obj['skipAppResign'] = ApiClient.convertToType(data['skipAppResign'], 'Boolean');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>CreateRemoteAccessSessionRequest</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>CreateRemoteAccessSessionRequest</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of CreateRemoteAccessSessionRequest.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // validate the optional field `projectArn`
        if (data['projectArn']) { // data not null
          String.validateJSON(data['projectArn']);
        }
        // validate the optional field `deviceArn`
        if (data['deviceArn']) { // data not null
          String.validateJSON(data['deviceArn']);
        }
        // validate the optional field `instanceArn`
        if (data['instanceArn']) { // data not null
          String.validateJSON(data['instanceArn']);
        }
        // validate the optional field `sshPublicKey`
        if (data['sshPublicKey']) { // data not null
          String.validateJSON(data['sshPublicKey']);
        }
        // validate the optional field `remoteDebugEnabled`
        if (data['remoteDebugEnabled']) { // data not null
          Boolean.validateJSON(data['remoteDebugEnabled']);
        }
        // validate the optional field `remoteRecordEnabled`
        if (data['remoteRecordEnabled']) { // data not null
          Boolean.validateJSON(data['remoteRecordEnabled']);
        }
        // validate the optional field `remoteRecordAppArn`
        if (data['remoteRecordAppArn']) { // data not null
          String.validateJSON(data['remoteRecordAppArn']);
        }
        // validate the optional field `name`
        if (data['name']) { // data not null
          String.validateJSON(data['name']);
        }
        // validate the optional field `clientId`
        if (data['clientId']) { // data not null
          String.validateJSON(data['clientId']);
        }
        // validate the optional field `configuration`
        if (data['configuration']) { // data not null
          CreateRemoteAccessSessionRequestConfiguration.validateJSON(data['configuration']);
        }
        // validate the optional field `interactionMode`
        if (data['interactionMode']) { // data not null
          InteractionMode.validateJSON(data['interactionMode']);
        }
        // validate the optional field `skipAppResign`
        if (data['skipAppResign']) { // data not null
          Boolean.validateJSON(data['skipAppResign']);
        }

        return true;
    }


}

CreateRemoteAccessSessionRequest.RequiredProperties = ["projectArn", "deviceArn"];

/**
 * @member {String} projectArn
 */
CreateRemoteAccessSessionRequest.prototype['projectArn'] = undefined;

/**
 * @member {String} deviceArn
 */
CreateRemoteAccessSessionRequest.prototype['deviceArn'] = undefined;

/**
 * @member {String} instanceArn
 */
CreateRemoteAccessSessionRequest.prototype['instanceArn'] = undefined;

/**
 * @member {String} sshPublicKey
 */
CreateRemoteAccessSessionRequest.prototype['sshPublicKey'] = undefined;

/**
 * @member {Boolean} remoteDebugEnabled
 */
CreateRemoteAccessSessionRequest.prototype['remoteDebugEnabled'] = undefined;

/**
 * @member {Boolean} remoteRecordEnabled
 */
CreateRemoteAccessSessionRequest.prototype['remoteRecordEnabled'] = undefined;

/**
 * @member {String} remoteRecordAppArn
 */
CreateRemoteAccessSessionRequest.prototype['remoteRecordAppArn'] = undefined;

/**
 * @member {String} name
 */
CreateRemoteAccessSessionRequest.prototype['name'] = undefined;

/**
 * @member {String} clientId
 */
CreateRemoteAccessSessionRequest.prototype['clientId'] = undefined;

/**
 * @member {module:model/CreateRemoteAccessSessionRequestConfiguration} configuration
 */
CreateRemoteAccessSessionRequest.prototype['configuration'] = undefined;

/**
 * @member {module:model/InteractionMode} interactionMode
 */
CreateRemoteAccessSessionRequest.prototype['interactionMode'] = undefined;

/**
 * @member {Boolean} skipAppResign
 */
CreateRemoteAccessSessionRequest.prototype['skipAppResign'] = undefined;






export default CreateRemoteAccessSessionRequest;

