/**
 * AWS Device Farm
 * <p>Welcome to the AWS Device Farm API documentation, which contains APIs for:</p> <ul> <li> <p>Testing on desktop browsers</p> <p> Device Farm makes it possible for you to test your web applications on desktop browsers using Selenium. The APIs for desktop browser testing contain <code>TestGrid</code> in their names. For more information, see <a href=\"https://docs.aws.amazon.com/devicefarm/latest/testgrid/\">Testing Web Applications on Selenium with Device Farm</a>.</p> </li> <li> <p>Testing on real mobile devices</p> <p>Device Farm makes it possible for you to test apps on physical phones, tablets, and other devices in the cloud. For more information, see the <a href=\"https://docs.aws.amazon.com/devicefarm/latest/developerguide/\">Device Farm Developer Guide</a>.</p> </li> </ul>
 *
 * The version of the OpenAPI document: 2015-06-23
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import UpdateNetworkProfileResultNetworkProfile from './UpdateNetworkProfileResultNetworkProfile';

/**
 * The UpdateNetworkProfileResult model module.
 * @module model/UpdateNetworkProfileResult
 * @version 2015-06-23
 */
class UpdateNetworkProfileResult {
    /**
     * Constructs a new <code>UpdateNetworkProfileResult</code>.
     * @alias module:model/UpdateNetworkProfileResult
     */
    constructor() { 
        
        UpdateNetworkProfileResult.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>UpdateNetworkProfileResult</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/UpdateNetworkProfileResult} obj Optional instance to populate.
     * @return {module:model/UpdateNetworkProfileResult} The populated <code>UpdateNetworkProfileResult</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new UpdateNetworkProfileResult();

            if (data.hasOwnProperty('networkProfile')) {
                obj['networkProfile'] = UpdateNetworkProfileResultNetworkProfile.constructFromObject(data['networkProfile']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>UpdateNetworkProfileResult</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>UpdateNetworkProfileResult</code>.
     */
    static validateJSON(data) {
        // validate the optional field `networkProfile`
        if (data['networkProfile']) { // data not null
          UpdateNetworkProfileResultNetworkProfile.validateJSON(data['networkProfile']);
        }

        return true;
    }


}



/**
 * @member {module:model/UpdateNetworkProfileResultNetworkProfile} networkProfile
 */
UpdateNetworkProfileResult.prototype['networkProfile'] = undefined;






export default UpdateNetworkProfileResult;

