/**
 * AWS Device Farm
 * <p>Welcome to the AWS Device Farm API documentation, which contains APIs for:</p> <ul> <li> <p>Testing on desktop browsers</p> <p> Device Farm makes it possible for you to test your web applications on desktop browsers using Selenium. The APIs for desktop browser testing contain <code>TestGrid</code> in their names. For more information, see <a href=\"https://docs.aws.amazon.com/devicefarm/latest/testgrid/\">Testing Web Applications on Selenium with Device Farm</a>.</p> </li> <li> <p>Testing on real mobile devices</p> <p>Device Farm makes it possible for you to test apps on physical phones, tablets, and other devices in the cloud. For more information, see the <a href=\"https://docs.aws.amazon.com/devicefarm/latest/developerguide/\">Device Farm Developer Guide</a>.</p> </li> </ul>
 *
 * The version of the OpenAPI document: 2015-06-23
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import CreateTestGridProjectRequestVpcConfig from './CreateTestGridProjectRequestVpcConfig';

/**
 * The UpdateTestGridProjectRequest model module.
 * @module model/UpdateTestGridProjectRequest
 * @version 2015-06-23
 */
class UpdateTestGridProjectRequest {
    /**
     * Constructs a new <code>UpdateTestGridProjectRequest</code>.
     * @alias module:model/UpdateTestGridProjectRequest
     * @param projectArn {String} 
     */
    constructor(projectArn) { 
        
        UpdateTestGridProjectRequest.initialize(this, projectArn);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, projectArn) { 
        obj['projectArn'] = projectArn;
    }

    /**
     * Constructs a <code>UpdateTestGridProjectRequest</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/UpdateTestGridProjectRequest} obj Optional instance to populate.
     * @return {module:model/UpdateTestGridProjectRequest} The populated <code>UpdateTestGridProjectRequest</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new UpdateTestGridProjectRequest();

            if (data.hasOwnProperty('projectArn')) {
                obj['projectArn'] = ApiClient.convertToType(data['projectArn'], 'String');
            }
            if (data.hasOwnProperty('name')) {
                obj['name'] = ApiClient.convertToType(data['name'], 'String');
            }
            if (data.hasOwnProperty('description')) {
                obj['description'] = ApiClient.convertToType(data['description'], 'String');
            }
            if (data.hasOwnProperty('vpcConfig')) {
                obj['vpcConfig'] = CreateTestGridProjectRequestVpcConfig.constructFromObject(data['vpcConfig']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>UpdateTestGridProjectRequest</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>UpdateTestGridProjectRequest</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of UpdateTestGridProjectRequest.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // validate the optional field `projectArn`
        if (data['projectArn']) { // data not null
          String.validateJSON(data['projectArn']);
        }
        // validate the optional field `name`
        if (data['name']) { // data not null
          String.validateJSON(data['name']);
        }
        // validate the optional field `description`
        if (data['description']) { // data not null
          String.validateJSON(data['description']);
        }
        // validate the optional field `vpcConfig`
        if (data['vpcConfig']) { // data not null
          CreateTestGridProjectRequestVpcConfig.validateJSON(data['vpcConfig']);
        }

        return true;
    }


}

UpdateTestGridProjectRequest.RequiredProperties = ["projectArn"];

/**
 * @member {String} projectArn
 */
UpdateTestGridProjectRequest.prototype['projectArn'] = undefined;

/**
 * @member {String} name
 */
UpdateTestGridProjectRequest.prototype['name'] = undefined;

/**
 * @member {String} description
 */
UpdateTestGridProjectRequest.prototype['description'] = undefined;

/**
 * @member {module:model/CreateTestGridProjectRequestVpcConfig} vpcConfig
 */
UpdateTestGridProjectRequest.prototype['vpcConfig'] = undefined;






export default UpdateTestGridProjectRequest;

