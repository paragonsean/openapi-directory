/**
 * AWS Device Farm
 * <p>Welcome to the AWS Device Farm API documentation, which contains APIs for:</p> <ul> <li> <p>Testing on desktop browsers</p> <p> Device Farm makes it possible for you to test your web applications on desktop browsers using Selenium. The APIs for desktop browser testing contain <code>TestGrid</code> in their names. For more information, see <a href=\"https://docs.aws.amazon.com/devicefarm/latest/testgrid/\">Testing Web Applications on Selenium with Device Farm</a>.</p> </li> <li> <p>Testing on real mobile devices</p> <p>Device Farm makes it possible for you to test apps on physical phones, tablets, and other devices in the cloud. For more information, see the <a href=\"https://docs.aws.amazon.com/devicefarm/latest/developerguide/\">Device Farm Developer Guide</a>.</p> </li> </ul>
 *
 * The version of the OpenAPI document: 2015-06-23
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import BillingMethod from './BillingMethod';
import ScheduleRunConfiguration from './ScheduleRunConfiguration';
import ScheduleRunConfigurationCustomerArtifactPaths from './ScheduleRunConfigurationCustomerArtifactPaths';
import ScheduleRunConfigurationLocation from './ScheduleRunConfigurationLocation';
import ScheduleRunConfigurationRadios from './ScheduleRunConfigurationRadios';

/**
 * The GetDevicePoolCompatibilityRequestConfiguration model module.
 * @module model/GetDevicePoolCompatibilityRequestConfiguration
 * @version 2015-06-23
 */
class GetDevicePoolCompatibilityRequestConfiguration {
    /**
     * Constructs a new <code>GetDevicePoolCompatibilityRequestConfiguration</code>.
     * @alias module:model/GetDevicePoolCompatibilityRequestConfiguration
     * @implements module:model/ScheduleRunConfiguration
     */
    constructor() { 
        ScheduleRunConfiguration.initialize(this);
        GetDevicePoolCompatibilityRequestConfiguration.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>GetDevicePoolCompatibilityRequestConfiguration</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/GetDevicePoolCompatibilityRequestConfiguration} obj Optional instance to populate.
     * @return {module:model/GetDevicePoolCompatibilityRequestConfiguration} The populated <code>GetDevicePoolCompatibilityRequestConfiguration</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new GetDevicePoolCompatibilityRequestConfiguration();
            ScheduleRunConfiguration.constructFromObject(data, obj);

            if (data.hasOwnProperty('extraDataPackageArn')) {
                obj['extraDataPackageArn'] = ApiClient.convertToType(data['extraDataPackageArn'], 'String');
            }
            if (data.hasOwnProperty('networkProfileArn')) {
                obj['networkProfileArn'] = ApiClient.convertToType(data['networkProfileArn'], 'String');
            }
            if (data.hasOwnProperty('locale')) {
                obj['locale'] = ApiClient.convertToType(data['locale'], 'String');
            }
            if (data.hasOwnProperty('location')) {
                obj['location'] = ScheduleRunConfigurationLocation.constructFromObject(data['location']);
            }
            if (data.hasOwnProperty('vpceConfigurationArns')) {
                obj['vpceConfigurationArns'] = ApiClient.convertToType(data['vpceConfigurationArns'], Array);
            }
            if (data.hasOwnProperty('customerArtifactPaths')) {
                obj['customerArtifactPaths'] = ScheduleRunConfigurationCustomerArtifactPaths.constructFromObject(data['customerArtifactPaths']);
            }
            if (data.hasOwnProperty('radios')) {
                obj['radios'] = ScheduleRunConfigurationRadios.constructFromObject(data['radios']);
            }
            if (data.hasOwnProperty('auxiliaryApps')) {
                obj['auxiliaryApps'] = ApiClient.convertToType(data['auxiliaryApps'], Array);
            }
            if (data.hasOwnProperty('billingMethod')) {
                obj['billingMethod'] = ApiClient.convertToType(data['billingMethod'], BillingMethod);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>GetDevicePoolCompatibilityRequestConfiguration</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>GetDevicePoolCompatibilityRequestConfiguration</code>.
     */
    static validateJSON(data) {
        // validate the optional field `extraDataPackageArn`
        if (data['extraDataPackageArn']) { // data not null
          String.validateJSON(data['extraDataPackageArn']);
        }
        // validate the optional field `networkProfileArn`
        if (data['networkProfileArn']) { // data not null
          String.validateJSON(data['networkProfileArn']);
        }
        // validate the optional field `locale`
        if (data['locale']) { // data not null
          String.validateJSON(data['locale']);
        }
        // validate the optional field `location`
        if (data['location']) { // data not null
          ScheduleRunConfigurationLocation.validateJSON(data['location']);
        }
        // validate the optional field `vpceConfigurationArns`
        if (data['vpceConfigurationArns']) { // data not null
          Array.validateJSON(data['vpceConfigurationArns']);
        }
        // validate the optional field `customerArtifactPaths`
        if (data['customerArtifactPaths']) { // data not null
          ScheduleRunConfigurationCustomerArtifactPaths.validateJSON(data['customerArtifactPaths']);
        }
        // validate the optional field `radios`
        if (data['radios']) { // data not null
          ScheduleRunConfigurationRadios.validateJSON(data['radios']);
        }
        // validate the optional field `auxiliaryApps`
        if (data['auxiliaryApps']) { // data not null
          Array.validateJSON(data['auxiliaryApps']);
        }
        // validate the optional field `billingMethod`
        if (data['billingMethod']) { // data not null
          BillingMethod.validateJSON(data['billingMethod']);
        }

        return true;
    }


}



/**
 * @member {String} extraDataPackageArn
 */
GetDevicePoolCompatibilityRequestConfiguration.prototype['extraDataPackageArn'] = undefined;

/**
 * @member {String} networkProfileArn
 */
GetDevicePoolCompatibilityRequestConfiguration.prototype['networkProfileArn'] = undefined;

/**
 * @member {String} locale
 */
GetDevicePoolCompatibilityRequestConfiguration.prototype['locale'] = undefined;

/**
 * @member {module:model/ScheduleRunConfigurationLocation} location
 */
GetDevicePoolCompatibilityRequestConfiguration.prototype['location'] = undefined;

/**
 * @member {Array} vpceConfigurationArns
 */
GetDevicePoolCompatibilityRequestConfiguration.prototype['vpceConfigurationArns'] = undefined;

/**
 * @member {module:model/ScheduleRunConfigurationCustomerArtifactPaths} customerArtifactPaths
 */
GetDevicePoolCompatibilityRequestConfiguration.prototype['customerArtifactPaths'] = undefined;

/**
 * @member {module:model/ScheduleRunConfigurationRadios} radios
 */
GetDevicePoolCompatibilityRequestConfiguration.prototype['radios'] = undefined;

/**
 * @member {Array} auxiliaryApps
 */
GetDevicePoolCompatibilityRequestConfiguration.prototype['auxiliaryApps'] = undefined;

/**
 * @member {module:model/BillingMethod} billingMethod
 */
GetDevicePoolCompatibilityRequestConfiguration.prototype['billingMethod'] = undefined;


// Implement ScheduleRunConfiguration interface:
/**
 * @member {String} extraDataPackageArn
 */
ScheduleRunConfiguration.prototype['extraDataPackageArn'] = undefined;
/**
 * @member {String} networkProfileArn
 */
ScheduleRunConfiguration.prototype['networkProfileArn'] = undefined;
/**
 * @member {String} locale
 */
ScheduleRunConfiguration.prototype['locale'] = undefined;
/**
 * @member {module:model/ScheduleRunConfigurationLocation} location
 */
ScheduleRunConfiguration.prototype['location'] = undefined;
/**
 * @member {Array} vpceConfigurationArns
 */
ScheduleRunConfiguration.prototype['vpceConfigurationArns'] = undefined;
/**
 * @member {module:model/ScheduleRunConfigurationCustomerArtifactPaths} customerArtifactPaths
 */
ScheduleRunConfiguration.prototype['customerArtifactPaths'] = undefined;
/**
 * @member {module:model/ScheduleRunConfigurationRadios} radios
 */
ScheduleRunConfiguration.prototype['radios'] = undefined;
/**
 * @member {Array} auxiliaryApps
 */
ScheduleRunConfiguration.prototype['auxiliaryApps'] = undefined;
/**
 * @member {module:model/BillingMethod} billingMethod
 */
ScheduleRunConfiguration.prototype['billingMethod'] = undefined;




export default GetDevicePoolCompatibilityRequestConfiguration;

