# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class RegisterClientResponse(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, client_id: str=None, client_secret: str=None, client_id_issued_at: int=None, client_secret_expires_at: int=None, authorization_endpoint: str=None, token_endpoint: str=None):
        """RegisterClientResponse - a model defined in OpenAPI

        :param client_id: The client_id of this RegisterClientResponse.
        :param client_secret: The client_secret of this RegisterClientResponse.
        :param client_id_issued_at: The client_id_issued_at of this RegisterClientResponse.
        :param client_secret_expires_at: The client_secret_expires_at of this RegisterClientResponse.
        :param authorization_endpoint: The authorization_endpoint of this RegisterClientResponse.
        :param token_endpoint: The token_endpoint of this RegisterClientResponse.
        """
        self.openapi_types = {
            'client_id': str,
            'client_secret': str,
            'client_id_issued_at': int,
            'client_secret_expires_at': int,
            'authorization_endpoint': str,
            'token_endpoint': str
        }

        self.attribute_map = {
            'client_id': 'clientId',
            'client_secret': 'clientSecret',
            'client_id_issued_at': 'clientIdIssuedAt',
            'client_secret_expires_at': 'clientSecretExpiresAt',
            'authorization_endpoint': 'authorizationEndpoint',
            'token_endpoint': 'tokenEndpoint'
        }

        self._client_id = client_id
        self._client_secret = client_secret
        self._client_id_issued_at = client_id_issued_at
        self._client_secret_expires_at = client_secret_expires_at
        self._authorization_endpoint = authorization_endpoint
        self._token_endpoint = token_endpoint

    @classmethod
    def from_dict(cls, dikt: dict) -> 'RegisterClientResponse':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The RegisterClientResponse of this RegisterClientResponse.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def client_id(self):
        """Gets the client_id of this RegisterClientResponse.


        :return: The client_id of this RegisterClientResponse.
        :rtype: str
        """
        return self._client_id

    @client_id.setter
    def client_id(self, client_id):
        """Sets the client_id of this RegisterClientResponse.


        :param client_id: The client_id of this RegisterClientResponse.
        :type client_id: str
        """

        self._client_id = client_id

    @property
    def client_secret(self):
        """Gets the client_secret of this RegisterClientResponse.


        :return: The client_secret of this RegisterClientResponse.
        :rtype: str
        """
        return self._client_secret

    @client_secret.setter
    def client_secret(self, client_secret):
        """Sets the client_secret of this RegisterClientResponse.


        :param client_secret: The client_secret of this RegisterClientResponse.
        :type client_secret: str
        """

        self._client_secret = client_secret

    @property
    def client_id_issued_at(self):
        """Gets the client_id_issued_at of this RegisterClientResponse.


        :return: The client_id_issued_at of this RegisterClientResponse.
        :rtype: int
        """
        return self._client_id_issued_at

    @client_id_issued_at.setter
    def client_id_issued_at(self, client_id_issued_at):
        """Sets the client_id_issued_at of this RegisterClientResponse.


        :param client_id_issued_at: The client_id_issued_at of this RegisterClientResponse.
        :type client_id_issued_at: int
        """

        self._client_id_issued_at = client_id_issued_at

    @property
    def client_secret_expires_at(self):
        """Gets the client_secret_expires_at of this RegisterClientResponse.


        :return: The client_secret_expires_at of this RegisterClientResponse.
        :rtype: int
        """
        return self._client_secret_expires_at

    @client_secret_expires_at.setter
    def client_secret_expires_at(self, client_secret_expires_at):
        """Sets the client_secret_expires_at of this RegisterClientResponse.


        :param client_secret_expires_at: The client_secret_expires_at of this RegisterClientResponse.
        :type client_secret_expires_at: int
        """

        self._client_secret_expires_at = client_secret_expires_at

    @property
    def authorization_endpoint(self):
        """Gets the authorization_endpoint of this RegisterClientResponse.


        :return: The authorization_endpoint of this RegisterClientResponse.
        :rtype: str
        """
        return self._authorization_endpoint

    @authorization_endpoint.setter
    def authorization_endpoint(self, authorization_endpoint):
        """Sets the authorization_endpoint of this RegisterClientResponse.


        :param authorization_endpoint: The authorization_endpoint of this RegisterClientResponse.
        :type authorization_endpoint: str
        """

        self._authorization_endpoint = authorization_endpoint

    @property
    def token_endpoint(self):
        """Gets the token_endpoint of this RegisterClientResponse.


        :return: The token_endpoint of this RegisterClientResponse.
        :rtype: str
        """
        return self._token_endpoint

    @token_endpoint.setter
    def token_endpoint(self, token_endpoint):
        """Sets the token_endpoint of this RegisterClientResponse.


        :param token_endpoint: The token_endpoint of this RegisterClientResponse.
        :type token_endpoint: str
        """

        self._token_endpoint = token_endpoint
