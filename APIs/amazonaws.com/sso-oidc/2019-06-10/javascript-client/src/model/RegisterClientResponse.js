/**
 * AWS SSO OIDC
 * <p>AWS IAM Identity Center (successor to AWS Single Sign-On) OpenID Connect (OIDC) is a web service that enables a client (such as AWS CLI or a native application) to register with IAM Identity Center. The service also enables the client to fetch the user’s access token upon successful authentication and authorization with IAM Identity Center.</p> <note> <p>Although AWS Single Sign-On was renamed, the <code>sso</code> and <code>identitystore</code> API namespaces will continue to retain their original name for backward compatibility purposes. For more information, see <a href=\"https://docs.aws.amazon.com/singlesignon/latest/userguide/what-is.html#renamed\">IAM Identity Center rename</a>.</p> </note> <p> <b>Considerations for Using This Guide</b> </p> <p>Before you begin using this guide, we recommend that you first review the following important information about how the IAM Identity Center OIDC service works.</p> <ul> <li> <p>The IAM Identity Center OIDC service currently implements only the portions of the OAuth 2.0 Device Authorization Grant standard (<a href=\"https://tools.ietf.org/html/rfc8628\">https://tools.ietf.org/html/rfc8628</a>) that are necessary to enable single sign-on authentication with the AWS CLI. Support for other OIDC flows frequently needed for native applications, such as Authorization Code Flow (+ PKCE), will be addressed in future releases.</p> </li> <li> <p>The service emits only OIDC access tokens, such that obtaining a new token (For example, token refresh) requires explicit user re-authentication.</p> </li> <li> <p>The access tokens provided by this service grant access to all AWS account entitlements assigned to an IAM Identity Center user, not just a particular application.</p> </li> <li> <p>The documentation in this guide does not describe the mechanism to convert the access token into AWS Auth (“sigv4”) credentials for use with IAM-protected AWS service endpoints. For more information, see <a href=\"https://docs.aws.amazon.com/singlesignon/latest/PortalAPIReference/API_GetRoleCredentials.html\">GetRoleCredentials</a> in the <i>IAM Identity Center Portal API Reference Guide</i>.</p> </li> </ul> <p>For general information about IAM Identity Center, see <a href=\"https://docs.aws.amazon.com/singlesignon/latest/userguide/what-is.html\">What is IAM Identity Center?</a> in the <i>IAM Identity Center User Guide</i>.</p>
 *
 * The version of the OpenAPI document: 2019-06-10
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The RegisterClientResponse model module.
 * @module model/RegisterClientResponse
 * @version 2019-06-10
 */
class RegisterClientResponse {
    /**
     * Constructs a new <code>RegisterClientResponse</code>.
     * @alias module:model/RegisterClientResponse
     */
    constructor() { 
        
        RegisterClientResponse.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>RegisterClientResponse</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/RegisterClientResponse} obj Optional instance to populate.
     * @return {module:model/RegisterClientResponse} The populated <code>RegisterClientResponse</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new RegisterClientResponse();

            if (data.hasOwnProperty('clientId')) {
                obj['clientId'] = ApiClient.convertToType(data['clientId'], 'String');
            }
            if (data.hasOwnProperty('clientSecret')) {
                obj['clientSecret'] = ApiClient.convertToType(data['clientSecret'], 'String');
            }
            if (data.hasOwnProperty('clientIdIssuedAt')) {
                obj['clientIdIssuedAt'] = ApiClient.convertToType(data['clientIdIssuedAt'], 'Number');
            }
            if (data.hasOwnProperty('clientSecretExpiresAt')) {
                obj['clientSecretExpiresAt'] = ApiClient.convertToType(data['clientSecretExpiresAt'], 'Number');
            }
            if (data.hasOwnProperty('authorizationEndpoint')) {
                obj['authorizationEndpoint'] = ApiClient.convertToType(data['authorizationEndpoint'], 'String');
            }
            if (data.hasOwnProperty('tokenEndpoint')) {
                obj['tokenEndpoint'] = ApiClient.convertToType(data['tokenEndpoint'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>RegisterClientResponse</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>RegisterClientResponse</code>.
     */
    static validateJSON(data) {
        // validate the optional field `clientId`
        if (data['clientId']) { // data not null
          String.validateJSON(data['clientId']);
        }
        // validate the optional field `clientSecret`
        if (data['clientSecret']) { // data not null
          String.validateJSON(data['clientSecret']);
        }
        // validate the optional field `clientIdIssuedAt`
        if (data['clientIdIssuedAt']) { // data not null
          Number.validateJSON(data['clientIdIssuedAt']);
        }
        // validate the optional field `clientSecretExpiresAt`
        if (data['clientSecretExpiresAt']) { // data not null
          Number.validateJSON(data['clientSecretExpiresAt']);
        }
        // validate the optional field `authorizationEndpoint`
        if (data['authorizationEndpoint']) { // data not null
          String.validateJSON(data['authorizationEndpoint']);
        }
        // validate the optional field `tokenEndpoint`
        if (data['tokenEndpoint']) { // data not null
          String.validateJSON(data['tokenEndpoint']);
        }

        return true;
    }


}



/**
 * @member {String} clientId
 */
RegisterClientResponse.prototype['clientId'] = undefined;

/**
 * @member {String} clientSecret
 */
RegisterClientResponse.prototype['clientSecret'] = undefined;

/**
 * @member {Number} clientIdIssuedAt
 */
RegisterClientResponse.prototype['clientIdIssuedAt'] = undefined;

/**
 * @member {Number} clientSecretExpiresAt
 */
RegisterClientResponse.prototype['clientSecretExpiresAt'] = undefined;

/**
 * @member {String} authorizationEndpoint
 */
RegisterClientResponse.prototype['authorizationEndpoint'] = undefined;

/**
 * @member {String} tokenEndpoint
 */
RegisterClientResponse.prototype['tokenEndpoint'] = undefined;






export default RegisterClientResponse;

