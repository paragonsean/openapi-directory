openapi: 3.0.0
info:
  contact:
    email: mike.ralphson@gmail.com
    name: Mike Ralphson
    url: https://github.com/mermade/aws2openapi
    x-twitter: PermittedSoc
  description: <p>You can use Amazon CloudWatch Evidently to safely validate new features
    by serving them to a specified percentage of your users while you roll out the
    feature. You can monitor the performance of the new feature to help you decide
    when to ramp up traffic to your users. This helps you reduce risk and identify
    unintended consequences before you fully launch the feature.</p> <p>You can also
    conduct A/B experiments to make feature design decisions based on evidence and
    data. An experiment can test as many as five variations at once. Evidently collects
    experiment data and analyzes it using statistical methods. It also provides clear
    recommendations about which variations perform better. You can test both user-facing
    features and backend features.</p>
  license:
    name: Apache 2.0 License
    url: http://www.apache.org/licenses/
  termsOfService: https://aws.amazon.com/service-terms/
  title: Amazon CloudWatch Evidently
  version: 2021-02-01
  x-release: v4
  x-logo:
    url: https://twitter.com/awscloud/profile_image?size=original
    backgroundColor: '#FFFFFF'
  x-providerName: amazonaws.com
  x-serviceName: evidently
  x-aws-signingName: evidently
  x-origin:
  - contentType: application/json
    url: https://raw.githubusercontent.com/aws/aws-sdk-js/master/apis/evidently-2021-02-01.normal.json
    converter:
      url: https://github.com/mermade/aws2openapi
      version: 1.0.0
    x-apisguru-driver: external
  x-apiClientRegistration:
    url: https://portal.aws.amazon.com/gp/aws/developer/registration/index.html?nc2=h_ct
  x-apisguru-categories:
  - cloud
  x-preferred: true
externalDocs:
  description: Amazon Web Services documentation
  url: https://docs.aws.amazon.com/evidently/
servers:
- description: The Amazon CloudWatch Evidently multi-region endpoint
  url: "http://evidently.{region}.amazonaws.com"
  variables:
    region:
      default: us-east-1
      description: The AWS region
      enum:
      - us-east-1
      - us-east-2
      - us-west-1
      - us-west-2
      - us-gov-west-1
      - us-gov-east-1
      - ca-central-1
      - eu-north-1
      - eu-west-1
      - eu-west-2
      - eu-west-3
      - eu-central-1
      - eu-south-1
      - af-south-1
      - ap-northeast-1
      - ap-northeast-2
      - ap-northeast-3
      - ap-southeast-1
      - ap-southeast-2
      - ap-east-1
      - ap-south-1
      - sa-east-1
      - me-south-1
- description: The Amazon CloudWatch Evidently multi-region endpoint
  url: "https://evidently.{region}.amazonaws.com"
  variables:
    region:
      default: us-east-1
      description: The AWS region
      enum:
      - us-east-1
      - us-east-2
      - us-west-1
      - us-west-2
      - us-gov-west-1
      - us-gov-east-1
      - ca-central-1
      - eu-north-1
      - eu-west-1
      - eu-west-2
      - eu-west-3
      - eu-central-1
      - eu-south-1
      - af-south-1
      - ap-northeast-1
      - ap-northeast-2
      - ap-northeast-3
      - ap-southeast-1
      - ap-southeast-2
      - ap-east-1
      - ap-south-1
      - sa-east-1
      - me-south-1
- description: The Amazon CloudWatch Evidently endpoint for China (Beijing) and China
    (Ningxia)
  url: "http://evidently.{region}.amazonaws.com.cn"
  variables:
    region:
      default: cn-north-1
      description: The AWS region
      enum:
      - cn-north-1
      - cn-northwest-1
- description: The Amazon CloudWatch Evidently endpoint for China (Beijing) and China
    (Ningxia)
  url: "https://evidently.{region}.amazonaws.com.cn"
  variables:
    region:
      default: cn-north-1
      description: The AWS region
      enum:
      - cn-north-1
      - cn-northwest-1
security:
- hmac: []
paths:
  /projects/{project}/evaluations:
    post:
      description: "<p>This operation assigns feature variation to user sessions.\
        \ For each user session, you pass in an <code>entityID</code> that represents\
        \ the user. Evidently then checks the evaluation rules and assigns the variation.</p>\
        \ <p>The first rules that are evaluated are the override rules. If the user's\
        \ <code>entityID</code> matches an override rule, the user is served the variation\
        \ specified by that rule.</p> <p>Next, if there is a launch of the feature,\
        \ the user might be assigned to a variation in the launch. The chance of this\
        \ depends on the percentage of users that are allocated to that launch. If\
        \ the user is enrolled in the launch, the variation they are served depends\
        \ on the allocation of the various feature variations used for the launch.</p>\
        \ <p>If the user is not assigned to a launch, and there is an ongoing experiment\
        \ for this feature, the user might be assigned to a variation in the experiment.\
        \ The chance of this depends on the percentage of users that are allocated\
        \ to that experiment. If the user is enrolled in the experiment, the variation\
        \ they are served depends on the allocation of the various feature variations\
        \ used for the experiment. </p> <p>If the user is not assigned to a launch\
        \ or experiment, they are served the default variation.</p>"
      operationId: BatchEvaluateFeature
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The name or ARN of the project that contains the feature being
          evaluated.
        explode: false
        in: path
        name: project
        required: true
        schema:
          maxLength: 2048
          minLength: 0
          pattern: "(^[a-zA-Z0-9._-]*$)|(arn:[^:]*:[^:]*:[^:]*:[^:]*:project/[a-zA-Z0-9._-]*)"
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BatchEvaluateFeature_request'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BatchEvaluateFeatureResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
      x-content-type: application/json
      x-accepts:
      - application/json
  /projects/{project}/experiments:
    get:
      description: Returns configuration details about all the experiments in the
        specified project.
      operationId: ListExperiments
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The maximum number of results to include in the response.
        explode: true
        in: query
        name: maxResults
        required: false
        schema:
          maximum: 100
          minimum: 1
          type: integer
        style: form
      - description: The token to use when requesting the next set of results. You
          received this token from a previous <code>ListExperiments</code> operation.
        explode: true
        in: query
        name: nextToken
        required: false
        schema:
          maxLength: 8192
          minLength: 1
          pattern: .*
          type: string
        style: form
      - description: The name or ARN of the project to return the experiment list
          from.
        explode: false
        in: path
        name: project
        required: true
        schema:
          maxLength: 2048
          minLength: 0
          pattern: "(^[a-zA-Z0-9._-]*$)|(arn:[^:]*:[^:]*:[^:]*:[^:]*:project/[a-zA-Z0-9._-]*)"
          type: string
        style: simple
      - description: Use this optional parameter to limit the returned results to
          only the experiments with the status that you specify here.
        explode: true
        in: query
        name: status
        required: false
        schema:
          enum:
          - CREATED
          - UPDATING
          - RUNNING
          - COMPLETED
          - CANCELLED
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListExperimentsResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
      x-accepts:
      - application/json
    post:
      description: "<p>Creates an Evidently <i>experiment</i>. Before you create an\
        \ experiment, you must create the feature to use for the experiment.</p> <p>An\
        \ experiment helps you make feature design decisions based on evidence and\
        \ data. An experiment can test as many as five variations at once. Evidently\
        \ collects experiment data and analyzes it by statistical methods, and provides\
        \ clear recommendations about which variations perform better.</p> <p>You\
        \ can optionally specify a <code>segment</code> to have the experiment consider\
        \ only certain audience types in the experiment, such as using only user sessions\
        \ from a certain location or who use a certain internet browser.</p> <p>Don't\
        \ use this operation to update an existing experiment. Instead, use <a href=\"\
        https://docs.aws.amazon.com/cloudwatchevidently/latest/APIReference/API_UpdateExperiment.html\"\
        >UpdateExperiment</a>. </p>"
      operationId: CreateExperiment
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The name or ARN of the project that you want to create the new
          experiment in.
        explode: false
        in: path
        name: project
        required: true
        schema:
          maxLength: 2048
          minLength: 0
          pattern: "(^[a-zA-Z0-9._-]*$)|(arn:[^:]*:[^:]*:[^:]*:[^:]*:project/[a-zA-Z0-9._-]*)"
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateExperiment_request'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateExperimentResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
          description: ConflictException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceQuotaExceededException'
          description: ServiceQuotaExceededException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
      x-content-type: application/json
      x-accepts:
      - application/json
  /projects/{project}/features:
    get:
      description: Returns configuration details about all the features in the specified
        project.
      operationId: ListFeatures
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The maximum number of results to include in the response.
        explode: true
        in: query
        name: maxResults
        required: false
        schema:
          maximum: 100
          minimum: 1
          type: integer
        style: form
      - description: The token to use when requesting the next set of results. You
          received this token from a previous <code>ListFeatures</code> operation.
        explode: true
        in: query
        name: nextToken
        required: false
        schema:
          maxLength: 8192
          minLength: 1
          pattern: .*
          type: string
        style: form
      - description: The name or ARN of the project to return the feature list from.
        explode: false
        in: path
        name: project
        required: true
        schema:
          maxLength: 2048
          minLength: 0
          pattern: "(^[a-zA-Z0-9._-]*$)|(arn:[^:]*:[^:]*:[^:]*:[^:]*:project/[a-zA-Z0-9._-]*)"
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListFeaturesResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
      x-accepts:
      - application/json
    post:
      description: "<p>Creates an Evidently <i>feature</i> that you want to launch\
        \ or test. You can define up to five variations of a feature, and use these\
        \ variations in your launches and experiments. A feature must be created in\
        \ a project. For information about creating a project, see <a href=\"https://docs.aws.amazon.com/cloudwatchevidently/latest/APIReference/API_CreateProject.html\"\
        >CreateProject</a>.</p> <p>Don't use this operation to update an existing\
        \ feature. Instead, use <a href=\"https://docs.aws.amazon.com/cloudwatchevidently/latest/APIReference/API_UpdateFeature.html\"\
        >UpdateFeature</a>. </p>"
      operationId: CreateFeature
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The name or ARN of the project that is to contain the new feature.
        explode: false
        in: path
        name: project
        required: true
        schema:
          maxLength: 2048
          minLength: 0
          pattern: "(^[a-zA-Z0-9._-]*$)|(arn:[^:]*:[^:]*:[^:]*:[^:]*:project/[a-zA-Z0-9._-]*)"
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateFeature_request'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateFeatureResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
          description: ConflictException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceQuotaExceededException'
          description: ServiceQuotaExceededException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
      x-content-type: application/json
      x-accepts:
      - application/json
  /projects/{project}/launches:
    get:
      description: Returns configuration details about all the launches in the specified
        project.
      operationId: ListLaunches
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The maximum number of results to include in the response.
        explode: true
        in: query
        name: maxResults
        required: false
        schema:
          maximum: 100
          minimum: 1
          type: integer
        style: form
      - description: The token to use when requesting the next set of results. You
          received this token from a previous <code>ListLaunches</code> operation.
        explode: true
        in: query
        name: nextToken
        required: false
        schema:
          maxLength: 8192
          minLength: 1
          pattern: .*
          type: string
        style: form
      - description: The name or ARN of the project to return the launch list from.
        explode: false
        in: path
        name: project
        required: true
        schema:
          maxLength: 2048
          minLength: 0
          pattern: "(^[a-zA-Z0-9._-]*$)|(arn:[^:]*:[^:]*:[^:]*:[^:]*:project/[a-zA-Z0-9._-]*)"
          type: string
        style: simple
      - description: Use this optional parameter to limit the returned results to
          only the launches with the status that you specify here.
        explode: true
        in: query
        name: status
        required: false
        schema:
          enum:
          - CREATED
          - UPDATING
          - RUNNING
          - COMPLETED
          - CANCELLED
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListLaunchesResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
      x-accepts:
      - application/json
    post:
      description: "<p>Creates a <i>launch</i> of a given feature. Before you create\
        \ a launch, you must create the feature to use for the launch.</p> <p>You\
        \ can use a launch to safely validate new features by serving them to a specified\
        \ percentage of your users while you roll out the feature. You can monitor\
        \ the performance of the new feature to help you decide when to ramp up traffic\
        \ to more users. This helps you reduce risk and identify unintended consequences\
        \ before you fully launch the feature.</p> <p>Don't use this operation to\
        \ update an existing launch. Instead, use <a href=\"https://docs.aws.amazon.com/cloudwatchevidently/latest/APIReference/API_UpdateLaunch.html\"\
        >UpdateLaunch</a>. </p>"
      operationId: CreateLaunch
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The name or ARN of the project that you want to create the launch
          in.
        explode: false
        in: path
        name: project
        required: true
        schema:
          maxLength: 2048
          minLength: 0
          pattern: "(^[a-zA-Z0-9._-]*$)|(arn:[^:]*:[^:]*:[^:]*:[^:]*:project/[a-zA-Z0-9._-]*)"
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateLaunch_request'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateLaunchResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
          description: ConflictException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceQuotaExceededException'
          description: ServiceQuotaExceededException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
      x-content-type: application/json
      x-accepts:
      - application/json
  /projects:
    get:
      description: Returns configuration details about all the projects in the current
        Region in your account.
      operationId: ListProjects
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The maximum number of results to include in the response.
        explode: true
        in: query
        name: maxResults
        required: false
        schema:
          maximum: 50
          minimum: 1
          type: integer
        style: form
      - description: The token to use when requesting the next set of results. You
          received this token from a previous <code>ListProjects</code> operation.
        explode: true
        in: query
        name: nextToken
        required: false
        schema:
          maxLength: 8192
          minLength: 1
          pattern: .*
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListProjectsResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
      x-accepts:
      - application/json
    post:
      description: "<p>Creates a project, which is the logical object in Evidently\
        \ that can contain features, launches, and experiments. Use projects to group\
        \ similar features together.</p> <p>To update an existing project, use <a\
        \ href=\"https://docs.aws.amazon.com/cloudwatchevidently/latest/APIReference/API_UpdateProject.html\"\
        >UpdateProject</a>.</p>"
      operationId: CreateProject
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateProject_request'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateProjectResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
          description: ConflictException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceQuotaExceededException'
          description: ServiceQuotaExceededException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
      x-content-type: application/json
      x-accepts:
      - application/json
  /segments:
    get:
      description: Returns a list of audience segments that you have created in your
        account in this Region.
      operationId: ListSegments
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: "The maximum number of results to include in the response. If\
          \ you omit this, the default of 50 is used."
        explode: true
        in: query
        name: maxResults
        required: false
        schema:
          maximum: 50
          minimum: 1
          type: integer
        style: form
      - description: The token to use when requesting the next set of results. You
          received this token from a previous <code>ListSegments</code> operation.
        explode: true
        in: query
        name: nextToken
        required: false
        schema:
          maxLength: 8192
          minLength: 1
          pattern: .*
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListSegmentsResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
      x-accepts:
      - application/json
    post:
      description: "<p>Use this operation to define a <i>segment</i> of your audience.\
        \ A segment is a portion of your audience that share one or more characteristics.\
        \ Examples could be Chrome browser users, users in Europe, or Firefox browser\
        \ users in Europe who also fit other criteria that your application collects,\
        \ such as age.</p> <p>Using a segment in an experiment limits that experiment\
        \ to evaluate only the users who match the segment criteria. Using one or\
        \ more segments in a launch allows you to define different traffic splits\
        \ for the different audience segments.</p> <p>For more information about segment\
        \ pattern syntax, see <a href=\"https://docs.aws.amazon.com/AmazonCloudWatch/latest/monitoring/CloudWatch-Evidently-segments.html#CloudWatch-Evidently-segments-syntax.html\"\
        > Segment rule pattern syntax</a>.</p> <p>The pattern that you define for\
        \ a segment is matched against the value of <code>evaluationContext</code>,\
        \ which is passed into Evidently in the <a href=\"https://docs.aws.amazon.com/cloudwatchevidently/latest/APIReference/API_EvaluateFeature.html\"\
        >EvaluateFeature</a> operation, when Evidently assigns a feature variation\
        \ to a user.</p>"
      operationId: CreateSegment
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateSegment_request'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateSegmentResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
          description: ConflictException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceQuotaExceededException'
          description: ServiceQuotaExceededException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
      x-content-type: application/json
      x-accepts:
      - application/json
  /projects/{project}/experiments/{experiment}:
    delete:
      description: "<p>Deletes an Evidently experiment. The feature used for the experiment\
        \ is not deleted.</p> <p>To stop an experiment without deleting it, use <a\
        \ href=\"https://docs.aws.amazon.com/cloudwatchevidently/latest/APIReference/API_StopExperiment.html\"\
        >StopExperiment</a>. </p>"
      operationId: DeleteExperiment
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The name of the experiment to delete.
        explode: false
        in: path
        name: experiment
        required: true
        schema:
          maxLength: 127
          minLength: 1
          pattern: "^[-a-zA-Z0-9._]*$"
          type: string
        style: simple
      - description: The name or ARN of the project that contains the experiment to
          delete.
        explode: false
        in: path
        name: project
        required: true
        schema:
          maxLength: 2048
          minLength: 0
          pattern: "(^[a-zA-Z0-9._-]*$)|(arn:[^:]*:[^:]*:[^:]*:[^:]*:project/[a-zA-Z0-9._-]*)"
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteExperimentResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
          description: ConflictException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
          description: ServiceUnavailableException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
      x-accepts:
      - application/json
    get:
      description: "Returns the details about one experiment. You must already know\
        \ the experiment name. To retrieve a list of experiments in your account,\
        \ use <a href=\"https://docs.aws.amazon.com/cloudwatchevidently/latest/APIReference/API_ListExperiments.html\"\
        >ListExperiments</a>."
      operationId: GetExperiment
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The name of the experiment that you want to see the details of.
        explode: false
        in: path
        name: experiment
        required: true
        schema:
          maxLength: 127
          minLength: 1
          pattern: "^[-a-zA-Z0-9._]*$"
          type: string
        style: simple
      - description: The name or ARN of the project that contains the experiment.
        explode: false
        in: path
        name: project
        required: true
        schema:
          maxLength: 2048
          minLength: 0
          pattern: "(^[a-zA-Z0-9._-]*$)|(arn:[^:]*:[^:]*:[^:]*:[^:]*:project/[a-zA-Z0-9._-]*)"
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetExperimentResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
      x-accepts:
      - application/json
    patch:
      description: "<p>Updates an Evidently experiment. </p> <p>Don't use this operation\
        \ to update an experiment's tag. Instead, use <a href=\"https://docs.aws.amazon.com/cloudwatchevidently/latest/APIReference/API_TagResource.html\"\
        >TagResource</a>. </p>"
      operationId: UpdateExperiment
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The name of the experiment to update.
        explode: false
        in: path
        name: experiment
        required: true
        schema:
          maxLength: 127
          minLength: 1
          pattern: "^[-a-zA-Z0-9._]*$"
          type: string
        style: simple
      - description: The name or ARN of the project that contains the experiment that
          you want to update.
        explode: false
        in: path
        name: project
        required: true
        schema:
          maxLength: 2048
          minLength: 0
          pattern: "(^[a-zA-Z0-9._-]*$)|(arn:[^:]*:[^:]*:[^:]*:[^:]*:project/[a-zA-Z0-9._-]*)"
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateExperiment_request'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateExperimentResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
          description: ConflictException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
      x-content-type: application/json
      x-accepts:
      - application/json
  /projects/{project}/features/{feature}:
    delete:
      description: Deletes an Evidently feature.
      operationId: DeleteFeature
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The name of the feature to delete.
        explode: false
        in: path
        name: feature
        required: true
        schema:
          maxLength: 127
          minLength: 1
          pattern: "^[-a-zA-Z0-9._]*$"
          type: string
        style: simple
      - description: The name or ARN of the project that contains the feature to delete.
        explode: false
        in: path
        name: project
        required: true
        schema:
          maxLength: 2048
          minLength: 0
          pattern: "(^[a-zA-Z0-9._-]*$)|(arn:[^:]*:[^:]*:[^:]*:[^:]*:project/[a-zA-Z0-9._-]*)"
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteFeatureResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
          description: ConflictException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
      x-accepts:
      - application/json
    get:
      description: "Returns the details about one feature. You must already know the\
        \ feature name. To retrieve a list of features in your account, use <a href=\"\
        https://docs.aws.amazon.com/cloudwatchevidently/latest/APIReference/API_ListFeatures.html\"\
        >ListFeatures</a>."
      operationId: GetFeature
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The name of the feature that you want to retrieve information
          for.
        explode: false
        in: path
        name: feature
        required: true
        schema:
          maxLength: 127
          minLength: 1
          pattern: "^[-a-zA-Z0-9._]*$"
          type: string
        style: simple
      - description: The name or ARN of the project that contains the feature.
        explode: false
        in: path
        name: project
        required: true
        schema:
          maxLength: 2048
          minLength: 0
          pattern: "(^[a-zA-Z0-9._-]*$)|(arn:[^:]*:[^:]*:[^:]*:[^:]*:project/[a-zA-Z0-9._-]*)"
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetFeatureResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
      x-accepts:
      - application/json
    patch:
      description: "<p>Updates an existing feature.</p> <p>You can't use this operation\
        \ to update the tags of an existing feature. Instead, use <a href=\"https://docs.aws.amazon.com/cloudwatchevidently/latest/APIReference/API_TagResource.html\"\
        >TagResource</a>. </p>"
      operationId: UpdateFeature
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The name of the feature to be updated.
        explode: false
        in: path
        name: feature
        required: true
        schema:
          maxLength: 127
          minLength: 1
          pattern: "^[-a-zA-Z0-9._]*$"
          type: string
        style: simple
      - description: The name or ARN of the project that contains the feature to be
          updated.
        explode: false
        in: path
        name: project
        required: true
        schema:
          maxLength: 2048
          minLength: 0
          pattern: "(^[a-zA-Z0-9._-]*$)|(arn:[^:]*:[^:]*:[^:]*:[^:]*:project/[a-zA-Z0-9._-]*)"
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateFeature_request'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateFeatureResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
          description: ConflictException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceQuotaExceededException'
          description: ServiceQuotaExceededException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
      x-content-type: application/json
      x-accepts:
      - application/json
  /projects/{project}/launches/{launch}:
    delete:
      description: "<p>Deletes an Evidently launch. The feature used for the launch\
        \ is not deleted.</p> <p>To stop a launch without deleting it, use <a href=\"\
        https://docs.aws.amazon.com/cloudwatchevidently/latest/APIReference/API_StopLaunch.html\"\
        >StopLaunch</a>. </p>"
      operationId: DeleteLaunch
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The name of the launch to delete.
        explode: false
        in: path
        name: launch
        required: true
        schema:
          maxLength: 127
          minLength: 1
          pattern: "^[-a-zA-Z0-9._]*$"
          type: string
        style: simple
      - description: The name or ARN of the project that contains the launch to delete.
        explode: false
        in: path
        name: project
        required: true
        schema:
          maxLength: 2048
          minLength: 0
          pattern: "(^[a-zA-Z0-9._-]*$)|(arn:[^:]*:[^:]*:[^:]*:[^:]*:project/[a-zA-Z0-9._-]*)"
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteLaunchResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
          description: ConflictException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
      x-accepts:
      - application/json
    get:
      description: "Returns the details about one launch. You must already know the\
        \ launch name. To retrieve a list of launches in your account, use <a href=\"\
        https://docs.aws.amazon.com/cloudwatchevidently/latest/APIReference/API_ListLaunches.html\"\
        >ListLaunches</a>."
      operationId: GetLaunch
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The name of the launch that you want to see the details of.
        explode: false
        in: path
        name: launch
        required: true
        schema:
          maxLength: 127
          minLength: 1
          pattern: "^[-a-zA-Z0-9._]*$"
          type: string
        style: simple
      - description: The name or ARN of the project that contains the launch.
        explode: false
        in: path
        name: project
        required: true
        schema:
          maxLength: 2048
          minLength: 0
          pattern: "(^[a-zA-Z0-9._-]*$)|(arn:[^:]*:[^:]*:[^:]*:[^:]*:project/[a-zA-Z0-9._-]*)"
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetLaunchResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
      x-accepts:
      - application/json
    patch:
      description: "<p>Updates a launch of a given feature. </p> <p>Don't use this\
        \ operation to update the tags of an existing launch. Instead, use <a href=\"\
        https://docs.aws.amazon.com/cloudwatchevidently/latest/APIReference/API_TagResource.html\"\
        >TagResource</a>. </p>"
      operationId: UpdateLaunch
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The name of the launch that is to be updated.
        explode: false
        in: path
        name: launch
        required: true
        schema:
          maxLength: 127
          minLength: 1
          pattern: "^[-a-zA-Z0-9._]*$"
          type: string
        style: simple
      - description: The name or ARN of the project that contains the launch that
          you want to update.
        explode: false
        in: path
        name: project
        required: true
        schema:
          maxLength: 2048
          minLength: 0
          pattern: "(^[a-zA-Z0-9._-]*$)|(arn:[^:]*:[^:]*:[^:]*:[^:]*:project/[a-zA-Z0-9._-]*)"
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateLaunch_request'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateLaunchResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
          description: ConflictException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
      x-content-type: application/json
      x-accepts:
      - application/json
  /projects/{project}:
    delete:
      description: "Deletes an Evidently project. Before you can delete a project,\
        \ you must delete all the features that the project contains. To delete a\
        \ feature, use <a href=\"https://docs.aws.amazon.com/cloudwatchevidently/latest/APIReference/API_DeleteFeature.html\"\
        >DeleteFeature</a>."
      operationId: DeleteProject
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The name or ARN of the project to delete.
        explode: false
        in: path
        name: project
        required: true
        schema:
          maxLength: 2048
          minLength: 0
          pattern: "(^[a-zA-Z0-9._-]*$)|(arn:[^:]*:[^:]*:[^:]*:[^:]*:project/[a-zA-Z0-9._-]*)"
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteProjectResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
          description: ConflictException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
      x-accepts:
      - application/json
    get:
      description: "Returns the details about one launch. You must already know the\
        \ project name. To retrieve a list of projects in your account, use <a href=\"\
        https://docs.aws.amazon.com/cloudwatchevidently/latest/APIReference/API_ListProjects.html\"\
        >ListProjects</a>."
      operationId: GetProject
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The name or ARN of the project that you want to see the details
          of.
        explode: false
        in: path
        name: project
        required: true
        schema:
          maxLength: 2048
          minLength: 0
          pattern: "(^[a-zA-Z0-9._-]*$)|(arn:[^:]*:[^:]*:[^:]*:[^:]*:project/[a-zA-Z0-9._-]*)"
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetProjectResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
      x-accepts:
      - application/json
    patch:
      description: "<p>Updates the description of an existing project.</p> <p>To create\
        \ a new project, use <a href=\"https://docs.aws.amazon.com/cloudwatchevidently/latest/APIReference/API_CreateProject.html\"\
        >CreateProject</a>.</p> <p>Don't use this operation to update the data storage\
        \ options of a project. Instead, use <a href=\"https://docs.aws.amazon.com/cloudwatchevidently/latest/APIReference/API_UpdateProjectDataDelivery.html\"\
        >UpdateProjectDataDelivery</a>. </p> <p>Don't use this operation to update\
        \ the tags of a project. Instead, use <a href=\"https://docs.aws.amazon.com/cloudwatchevidently/latest/APIReference/API_TagResource.html\"\
        >TagResource</a>. </p>"
      operationId: UpdateProject
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The name or ARN of the project to update.
        explode: false
        in: path
        name: project
        required: true
        schema:
          maxLength: 2048
          minLength: 0
          pattern: "(^[a-zA-Z0-9._-]*$)|(arn:[^:]*:[^:]*:[^:]*:[^:]*:project/[a-zA-Z0-9._-]*)"
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateProject_request'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateProjectResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
          description: ConflictException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceQuotaExceededException'
          description: ServiceQuotaExceededException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
      x-content-type: application/json
      x-accepts:
      - application/json
  /segments/{segment}:
    delete:
      description: "Deletes a segment. You can't delete a segment that is being used\
        \ in a launch or experiment, even if that launch or experiment is not currently\
        \ running."
      operationId: DeleteSegment
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: Specifies the segment to delete.
        explode: false
        in: path
        name: segment
        required: true
        schema:
          maxLength: 2048
          minLength: 0
          pattern: "(^[-a-zA-Z0-9._]*$)|(arn:[^:]*:[^:]*:[^:]*:[^:]*:segment/[-a-zA-Z0-9._]*)"
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteSegmentResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
          description: ConflictException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
      x-accepts:
      - application/json
    get:
      description: Returns information about the specified segment. Specify the segment
        you want to view by specifying its ARN.
      operationId: GetSegment
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The ARN of the segment to return information for.
        explode: false
        in: path
        name: segment
        required: true
        schema:
          maxLength: 2048
          minLength: 0
          pattern: "(^[-a-zA-Z0-9._]*$)|(arn:[^:]*:[^:]*:[^:]*:[^:]*:segment/[-a-zA-Z0-9._]*)"
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetSegmentResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
      x-accepts:
      - application/json
  /projects/{project}/evaluations/{feature}:
    post:
      description: "<p>This operation assigns a feature variation to one given user\
        \ session. You pass in an <code>entityID</code> that represents the user.\
        \ Evidently then checks the evaluation rules and assigns the variation.</p>\
        \ <p>The first rules that are evaluated are the override rules. If the user's\
        \ <code>entityID</code> matches an override rule, the user is served the variation\
        \ specified by that rule.</p> <p>If there is a current launch with this feature\
        \ that uses segment overrides, and if the user session's <code>evaluationContext</code>\
        \ matches a segment rule defined in a segment override, the configuration\
        \ in the segment overrides is used. For more information about segments, see\
        \ <a href=\"https://docs.aws.amazon.com/cloudwatchevidently/latest/APIReference/API_CreateSegment.html\"\
        >CreateSegment</a> and <a href=\"https://docs.aws.amazon.com/AmazonCloudWatch/latest/monitoring/CloudWatch-Evidently-segments.html\"\
        >Use segments to focus your audience</a>.</p> <p>If there is a launch with\
        \ no segment overrides, the user might be assigned to a variation in the launch.\
        \ The chance of this depends on the percentage of users that are allocated\
        \ to that launch. If the user is enrolled in the launch, the variation they\
        \ are served depends on the allocation of the various feature variations used\
        \ for the launch.</p> <p>If the user is not assigned to a launch, and there\
        \ is an ongoing experiment for this feature, the user might be assigned to\
        \ a variation in the experiment. The chance of this depends on the percentage\
        \ of users that are allocated to that experiment.</p> <p>If the experiment\
        \ uses a segment, then only user sessions with <code>evaluationContext</code>\
        \ values that match the segment rule are used in the experiment.</p> <p>If\
        \ the user is enrolled in the experiment, the variation they are served depends\
        \ on the allocation of the various feature variations used for the experiment.\
        \ </p> <p>If the user is not assigned to a launch or experiment, they are\
        \ served the default variation.</p>"
      operationId: EvaluateFeature
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The name of the feature being evaluated.
        explode: false
        in: path
        name: feature
        required: true
        schema:
          maxLength: 127
          minLength: 1
          pattern: "^[-a-zA-Z0-9._]*$"
          type: string
        style: simple
      - description: The name or ARN of the project that contains this feature.
        explode: false
        in: path
        name: project
        required: true
        schema:
          maxLength: 2048
          minLength: 0
          pattern: "(^[a-zA-Z0-9._-]*$)|(arn:[^:]*:[^:]*:[^:]*:[^:]*:project/[a-zA-Z0-9._-]*)"
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EvaluateFeature_request'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EvaluateFeatureResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
      x-content-type: application/json
      x-accepts:
      - application/json
  /projects/{project}/experiments/{experiment}/results:
    post:
      description: "<p>Retrieves the results of a running or completed experiment.\
        \ No results are available until there have been 100 events for each variation\
        \ and at least 10 minutes have passed since the start of the experiment. To\
        \ increase the statistical power, Evidently performs an additional offline\
        \ p-value analysis at the end of the experiment. Offline p-value analysis\
        \ can detect statistical significance in some cases where the anytime p-values\
        \ used during the experiment do not find statistical significance.</p> <p>Experiment\
        \ results are available up to 63 days after the start of the experiment. They\
        \ are not available after that because of CloudWatch data retention policies.</p>"
      operationId: GetExperimentResults
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The name of the experiment to retrieve the results of.
        explode: false
        in: path
        name: experiment
        required: true
        schema:
          maxLength: 127
          minLength: 1
          pattern: "^[-a-zA-Z0-9._]*$"
          type: string
        style: simple
      - description: The name or ARN of the project that contains the experiment that
          you want to see the results of.
        explode: false
        in: path
        name: project
        required: true
        schema:
          maxLength: 2048
          minLength: 0
          pattern: "(^[a-zA-Z0-9._-]*$)|(arn:[^:]*:[^:]*:[^:]*:[^:]*:project/[a-zA-Z0-9._-]*)"
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetExperimentResults_request'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetExperimentResultsResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
          description: ConflictException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
      x-content-type: application/json
      x-accepts:
      - application/json
  /segments/{segment}/references#type:
    get:
      description: Use this operation to find which experiments or launches are using
        a specified segment.
      operationId: ListSegmentReferences
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: "The maximum number of results to include in the response. If\
          \ you omit this, the default of 50 is used."
        explode: true
        in: query
        name: maxResults
        required: false
        schema:
          maximum: 100
          minimum: 1
          type: integer
        style: form
      - description: The token to use when requesting the next set of results. You
          received this token from a previous <code>ListSegmentReferences</code> operation.
        explode: true
        in: query
        name: nextToken
        required: false
        schema:
          maxLength: 8192
          minLength: 1
          pattern: .*
          type: string
        style: form
      - description: The ARN of the segment that you want to view information for.
        explode: false
        in: path
        name: segment
        required: true
        schema:
          maxLength: 2048
          minLength: 0
          pattern: "(^[-a-zA-Z0-9._]*$)|(arn:[^:]*:[^:]*:[^:]*:[^:]*:segment/[-a-zA-Z0-9._]*)"
          type: string
        style: simple
      - description: Specifies whether to return information about launches or experiments
          that use this segment.
        explode: true
        in: query
        name: type
        required: true
        schema:
          enum:
          - EXPERIMENT
          - LAUNCH
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListSegmentReferencesResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
      x-accepts:
      - application/json
  /tags/{resourceArn}:
    get:
      description: Displays the tags associated with an Evidently resource.
      operationId: ListTagsForResource
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The ARN of the resource that you want to see the tags of.
        explode: false
        in: path
        name: resourceArn
        required: true
        schema:
          maxLength: 2048
          minLength: 0
          pattern: "arn:[^:]*:[^:]*:[^:]*:[^:]*:.*"
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListTagsForResourceResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
          description: ConflictException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
      x-accepts:
      - application/json
    post:
      description: "<p>Assigns one or more tags (key-value pairs) to the specified\
        \ CloudWatch Evidently resource. Projects, features, launches, and experiments\
        \ can be tagged.</p> <p>Tags can help you organize and categorize your resources.\
        \ You can also use them to scope user permissions by granting a user permission\
        \ to access or change only resources with certain tag values.</p> <p>Tags\
        \ don't have any semantic meaning to Amazon Web Services and are interpreted\
        \ strictly as strings of characters.</p> <p>You can use the <code>TagResource</code>\
        \ action with a resource that already has tags. If you specify a new tag key\
        \ for the resource, this tag is appended to the list of tags associated with\
        \ the alarm. If you specify a tag key that is already associated with the\
        \ resource, the new tag value that you specify replaces the previous value\
        \ for that tag.</p> <p>You can associate as many as 50 tags with a resource.</p>\
        \ <p>For more information, see <a href=\"https://docs.aws.amazon.com/general/latest/gr/aws_tagging.html\"\
        >Tagging Amazon Web Services resources</a>.</p>"
      operationId: TagResource
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The ARN of the CloudWatch Evidently resource that you're adding
          tags to.
        explode: false
        in: path
        name: resourceArn
        required: true
        schema:
          maxLength: 2048
          minLength: 0
          pattern: "arn:[^:]*:[^:]*:[^:]*:[^:]*:.*"
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TagResource_request'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TagResourceResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
          description: ConflictException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
      x-content-type: application/json
      x-accepts:
      - application/json
  /events/projects/{project}:
    post:
      description: Sends performance events to Evidently. These events can be used
        to evaluate a launch or an experiment.
      operationId: PutProjectEvents
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The name or ARN of the project to write the events to.
        explode: false
        in: path
        name: project
        required: true
        schema:
          maxLength: 2048
          minLength: 0
          pattern: "(^[a-zA-Z0-9._-]*$)|(arn:[^:]*:[^:]*:[^:]*:[^:]*:project/[a-zA-Z0-9._-]*)"
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PutProjectEvents_request'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PutProjectEventsResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
      x-content-type: application/json
      x-accepts:
      - application/json
  /projects/{project}/experiments/{experiment}/start:
    post:
      description: "Starts an existing experiment. To create an experiment, use <a\
        \ href=\"https://docs.aws.amazon.com/cloudwatchevidently/latest/APIReference/API_CreateExperiment.html\"\
        >CreateExperiment</a>."
      operationId: StartExperiment
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The name of the experiment to start.
        explode: false
        in: path
        name: experiment
        required: true
        schema:
          maxLength: 127
          minLength: 1
          pattern: "^[-a-zA-Z0-9._]*$"
          type: string
        style: simple
      - description: The name or ARN of the project that contains the experiment to
          start.
        explode: false
        in: path
        name: project
        required: true
        schema:
          maxLength: 2048
          minLength: 0
          pattern: "(^[a-zA-Z0-9._-]*$)|(arn:[^:]*:[^:]*:[^:]*:[^:]*:project/[a-zA-Z0-9._-]*)"
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StartExperiment_request'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StartExperimentResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
          description: ConflictException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceQuotaExceededException'
          description: ServiceQuotaExceededException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
      x-content-type: application/json
      x-accepts:
      - application/json
  /projects/{project}/launches/{launch}/start:
    post:
      description: "Starts an existing launch. To create a launch, use <a href=\"\
        https://docs.aws.amazon.com/cloudwatchevidently/latest/APIReference/API_CreateLaunch.html\"\
        >CreateLaunch</a>."
      operationId: StartLaunch
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The name of the launch to start.
        explode: false
        in: path
        name: launch
        required: true
        schema:
          maxLength: 127
          minLength: 1
          pattern: "^[-a-zA-Z0-9._]*$"
          type: string
        style: simple
      - description: The name or ARN of the project that contains the launch to start.
        explode: false
        in: path
        name: project
        required: true
        schema:
          maxLength: 2048
          minLength: 0
          pattern: "(^[a-zA-Z0-9._-]*$)|(arn:[^:]*:[^:]*:[^:]*:[^:]*:project/[a-zA-Z0-9._-]*)"
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StartLaunchResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
          description: ConflictException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceQuotaExceededException'
          description: ServiceQuotaExceededException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
      x-accepts:
      - application/json
  /projects/{project}/experiments/{experiment}/cancel:
    post:
      description: "Stops an experiment that is currently running. If you stop an\
        \ experiment, you can't resume it or restart it."
      operationId: StopExperiment
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The name of the experiment to stop.
        explode: false
        in: path
        name: experiment
        required: true
        schema:
          maxLength: 127
          minLength: 1
          pattern: "^[-a-zA-Z0-9._]*$"
          type: string
        style: simple
      - description: The name or ARN of the project that contains the experiment to
          stop.
        explode: false
        in: path
        name: project
        required: true
        schema:
          maxLength: 2048
          minLength: 0
          pattern: "(^[a-zA-Z0-9._-]*$)|(arn:[^:]*:[^:]*:[^:]*:[^:]*:project/[a-zA-Z0-9._-]*)"
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StopExperiment_request'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StopExperimentResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
          description: ConflictException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceQuotaExceededException'
          description: ServiceQuotaExceededException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
      x-content-type: application/json
      x-accepts:
      - application/json
  /projects/{project}/launches/{launch}/cancel:
    post:
      description: "Stops a launch that is currently running. After you stop a launch,\
        \ you will not be able to resume it or restart it. Also, it will not be evaluated\
        \ as a rule for traffic allocation, and the traffic that was allocated to\
        \ the launch will instead be available to the feature's experiment, if there\
        \ is one. Otherwise, all traffic will be served the default variation after\
        \ the launch is stopped."
      operationId: StopLaunch
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The name of the launch to stop.
        explode: false
        in: path
        name: launch
        required: true
        schema:
          maxLength: 127
          minLength: 1
          pattern: "^[-a-zA-Z0-9._]*$"
          type: string
        style: simple
      - description: The name or ARN of the project that contains the launch that
          you want to stop.
        explode: false
        in: path
        name: project
        required: true
        schema:
          maxLength: 2048
          minLength: 0
          pattern: "(^[a-zA-Z0-9._-]*$)|(arn:[^:]*:[^:]*:[^:]*:[^:]*:project/[a-zA-Z0-9._-]*)"
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StopLaunch_request'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StopLaunchResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
      x-content-type: application/json
      x-accepts:
      - application/json
  /test-segment-pattern:
    post:
      description: "Use this operation to test a rules pattern that you plan to use\
        \ to create an audience segment. For more information about segments, see\
        \ <a href=\"https://docs.aws.amazon.com/cloudwatchevidently/latest/APIReference/API_CreateSegment.html\"\
        >CreateSegment</a>."
      operationId: TestSegmentPattern
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TestSegmentPattern_request'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TestSegmentPatternResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
      x-content-type: application/json
      x-accepts:
      - application/json
  /tags/{resourceArn}#tagKeys:
    delete:
      description: Removes one or more tags from the specified resource.
      operationId: UntagResource
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The ARN of the CloudWatch Evidently resource that you're removing
          tags from.
        explode: false
        in: path
        name: resourceArn
        required: true
        schema:
          maxLength: 2048
          minLength: 0
          pattern: "arn:[^:]*:[^:]*:[^:]*:[^:]*:.*"
          type: string
        style: simple
      - description: The list of tag keys to remove from the resource.
        explode: true
        in: query
        name: tagKeys
        required: true
        schema:
          items:
            $ref: '#/components/schemas/TagKey'
          maxItems: 50
          minItems: 0
          type: array
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UntagResourceResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
          description: ConflictException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
      x-accepts:
      - application/json
  /projects/{project}/data-delivery:
    patch:
      description: "<p>Updates the data storage options for this project. If you store\
        \ evaluation events, you an keep them and analyze them on your own. If you\
        \ choose not to store evaluation events, Evidently deletes them after using\
        \ them to produce metrics and other experiment results that you can view.</p>\
        \ <p>You can't specify both <code>cloudWatchLogs</code> and <code>s3Destination</code>\
        \ in the same operation.</p>"
      operationId: UpdateProjectDataDelivery
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The name or ARN of the project that you want to modify the data
          storage options for.
        explode: false
        in: path
        name: project
        required: true
        schema:
          maxLength: 2048
          minLength: 0
          pattern: "(^[a-zA-Z0-9._-]*$)|(arn:[^:]*:[^:]*:[^:]*:[^:]*:project/[a-zA-Z0-9._-]*)"
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateProjectDataDelivery_request'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateProjectDataDeliveryResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
          description: ConflictException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceQuotaExceededException'
          description: ServiceQuotaExceededException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
      x-content-type: application/json
      x-accepts:
      - application/json
components:
  parameters:
    X-Amz-Content-Sha256:
      explode: false
      in: header
      name: X-Amz-Content-Sha256
      required: false
      schema:
        type: string
      style: simple
    X-Amz-Date:
      explode: false
      in: header
      name: X-Amz-Date
      required: false
      schema:
        type: string
      style: simple
    X-Amz-Algorithm:
      explode: false
      in: header
      name: X-Amz-Algorithm
      required: false
      schema:
        type: string
      style: simple
    X-Amz-Credential:
      explode: false
      in: header
      name: X-Amz-Credential
      required: false
      schema:
        type: string
      style: simple
    X-Amz-Security-Token:
      explode: false
      in: header
      name: X-Amz-Security-Token
      required: false
      schema:
        type: string
      style: simple
    X-Amz-Signature:
      explode: false
      in: header
      name: X-Amz-Signature
      required: false
      schema:
        type: string
      style: simple
    X-Amz-SignedHeaders:
      explode: false
      in: header
      name: X-Amz-SignedHeaders
      required: false
      schema:
        type: string
      style: simple
  schemas:
    BatchEvaluateFeatureResponse:
      example:
        results: ""
      properties:
        results:
          allOf:
          - $ref: '#/components/schemas/EvaluationResultsList'
          - description: "An array of structures, where each structure displays the\
              \ results of one feature evaluation assignment to one user session."
      type: object
    EvaluationRequest:
      description: This structure assigns a feature variation to one user session.
      properties:
        entityId:
          allOf:
          - $ref: '#/components/schemas/EntityId'
          - description: An internal ID that represents a unique user session of the
              application. This <code>entityID</code> is checked against any override
              rules assigned for this feature.
        evaluationContext:
          allOf:
          - $ref: '#/components/schemas/JsonValue'
          - description: 'A JSON block of attributes that you can optionally pass
              in. This JSON block is included in the evaluation events sent to Evidently
              from the user session. '
        feature:
          allOf:
          - $ref: '#/components/schemas/FeatureName'
          - description: The name of the feature being evaluated.
      required:
      - entityId
      - feature
      type: object
    ThrottlingException: {}
    ValidationException: {}
    ResourceNotFoundException: {}
    AccessDeniedException: {}
    CreateExperimentResponse:
      example:
        experiment:
          onlineAbDefinition:
            controlTreatmentName: ""
            treatmentWeights: ""
          execution:
            startedTime: ""
            endedTime: ""
          description: ""
          project: ""
          metricGoals: ""
          type: ""
          treatments: ""
          randomizationSalt: ""
          tags: ""
          schedule:
            analysisCompleteTime: ""
          statusReason: ""
          segment: ""
          name: ""
          samplingRate: ""
          createdTime: ""
          lastUpdatedTime: ""
          arn: ""
          status: ""
      properties:
        experiment:
          $ref: '#/components/schemas/CreateExperimentResponse_experiment'
      required:
      - experiment
      type: object
    MetricGoalConfig:
      description: Use this structure to tell Evidently whether higher or lower values
        are desired for a metric that is used in an experiment.
      properties:
        desiredChange:
          allOf:
          - $ref: '#/components/schemas/ChangeDirectionEnum'
          - description: <p> <code>INCREASE</code> means that a variation with a higher
              number for this metric is performing better.</p> <p> <code>DECREASE</code>
              means that a variation with a lower number for this metric is performing
              better.</p>
        metricDefinition:
          $ref: '#/components/schemas/MetricGoalConfig_metricDefinition'
      required:
      - metricDefinition
      type: object
    TreatmentName:
      maxLength: 127
      minLength: 1
      pattern: "^[-a-zA-Z0-9._]*$"
      type: string
    TreatmentToWeightMap:
      additionalProperties:
        $ref: '#/components/schemas/SplitWeight'
      type: object
    TagValue:
      maxLength: 256
      minLength: 0
      type: string
    TreatmentConfig:
      description: A structure that defines one treatment in an experiment. A treatment
        is a variation of the feature that you are including in the experiment.
      properties:
        description:
          allOf:
          - $ref: '#/components/schemas/Description'
          - description: A description for this treatment.
        feature:
          allOf:
          - $ref: '#/components/schemas/FeatureName'
          - description: The feature that this experiment is testing.
        name:
          allOf:
          - $ref: '#/components/schemas/TreatmentName'
          - description: A name for this treatment.
        variation:
          allOf:
          - $ref: '#/components/schemas/VariationName'
          - description: The name of the variation to use as this treatment in the
              experiment.
      required:
      - feature
      - name
      - variation
      type: object
    ConflictException: {}
    ServiceQuotaExceededException: {}
    CreateFeatureResponse:
      example:
        feature:
          defaultVariation: ""
          evaluationRules: ""
          evaluationStrategy: ""
          description: ""
          project: ""
          entityOverrides: ""
          tags: ""
          variations: ""
          valueType: ""
          name: ""
          createdTime: ""
          lastUpdatedTime: ""
          arn: ""
          status: ""
      properties:
        feature:
          $ref: '#/components/schemas/CreateFeatureResponse_feature'
      type: object
    VariationName:
      maxLength: 127
      minLength: 1
      pattern: "^[-a-zA-Z0-9._]*$"
      type: string
    VariationConfig:
      description: This structure contains the name and variation value of one variation
        of a feature.
      properties:
        name:
          allOf:
          - $ref: '#/components/schemas/VariationName'
          - description: The name of the variation.
        value:
          $ref: '#/components/schemas/VariationConfig_value'
      required:
      - name
      - value
      type: object
    CreateLaunchResponse:
      example:
        launch:
          execution:
            startedTime: ""
            endedTime: ""
          metricMonitors: ""
          description: ""
          groups: ""
          project: ""
          type: ""
          randomizationSalt: ""
          tags: ""
          statusReason: ""
          name: ""
          createdTime: ""
          lastUpdatedTime: ""
          arn: ""
          scheduledSplitsDefinition:
            steps: ""
          status: ""
      properties:
        launch:
          $ref: '#/components/schemas/CreateLaunchResponse_launch'
      required:
      - launch
      type: object
    LaunchGroupConfig:
      description: A structure that defines one launch group in a launch. A launch
        group is a variation of the feature that you are including in the launch.
      properties:
        description:
          allOf:
          - $ref: '#/components/schemas/Description'
          - description: A description of the launch group.
        feature:
          allOf:
          - $ref: '#/components/schemas/FeatureName'
          - description: The feature that this launch is using.
        name:
          allOf:
          - $ref: '#/components/schemas/GroupName'
          - description: A name for this launch group.
        variation:
          allOf:
          - $ref: '#/components/schemas/VariationName'
          - description: The feature variation to use for this launch group.
      required:
      - feature
      - name
      - variation
      type: object
    MetricMonitorConfig:
      description: A structure that defines a metric to be used to monitor performance
        of the variations during a launch.
      properties:
        metricDefinition:
          $ref: '#/components/schemas/MetricMonitorConfig_metricDefinition'
      required:
      - metricDefinition
      type: object
    ScheduledSplitConfigList:
      items:
        $ref: '#/components/schemas/ScheduledSplitConfig'
      maxItems: 6
      minItems: 1
      type: array
    CreateProjectResponse:
      example:
        project:
          launchCount: ""
          description: ""
          activeExperimentCount: ""
          dataDelivery:
            s3Destination:
              bucket: ""
              prefix: ""
            cloudWatchLogs:
              logGroup: ""
          tags: ""
          experimentCount: ""
          name: ""
          createdTime: ""
          lastUpdatedTime: ""
          appConfigResource:
            environmentId: ""
            configurationProfileId: ""
            applicationId: ""
          arn: ""
          activeLaunchCount: ""
          featureCount: ""
          status: ""
      properties:
        project:
          $ref: '#/components/schemas/CreateProjectResponse_project'
      required:
      - project
      type: object
    AppConfigResourceId:
      pattern: "[a-z0-9]{4,7}"
      type: string
    CloudWatchLogsDestinationConfig:
      description: A structure containing the CloudWatch Logs log group where the
        project stores evaluation events.
      properties:
        logGroup:
          allOf:
          - $ref: '#/components/schemas/CwLogGroupSafeName'
          - description: The name of the log group where the project stores evaluation
              events.
      type: object
    S3DestinationConfig:
      description: "If the project stores evaluation events in an Amazon S3 bucket,\
        \ this structure stores the bucket name and bucket prefix."
      properties:
        bucket:
          allOf:
          - $ref: '#/components/schemas/S3BucketSafeName'
          - description: The name of the bucket in which Evidently stores evaluation
              events.
        prefix:
          allOf:
          - $ref: '#/components/schemas/S3PrefixSafeName'
          - description: The bucket prefix in which Evidently stores evaluation events.
      type: object
    CreateSegmentResponse:
      example:
        segment:
          launchCount: ""
          experimentCount: ""
          name: ""
          pattern: ""
          createdTime: ""
          description: ""
          lastUpdatedTime: ""
          arn: ""
          tags: ""
      properties:
        segment:
          $ref: '#/components/schemas/CreateSegmentResponse_segment'
      required:
      - segment
      type: object
    DeleteExperimentResponse:
      properties: {}
      type: object
    InternalServerException: {}
    ServiceUnavailableException: {}
    DeleteFeatureResponse:
      properties: {}
      type: object
    DeleteLaunchResponse:
      properties: {}
      type: object
    DeleteProjectResponse:
      properties: {}
      type: object
    DeleteSegmentResponse:
      properties: {}
      type: object
    EvaluateFeatureResponse:
      example:
        reason: ""
        details: ""
        value:
          stringValue: ""
          boolValue: ""
          doubleValue: ""
          longValue: ""
        variation: ""
      properties:
        details:
          allOf:
          - $ref: '#/components/schemas/JsonValue'
          - description: "If this user was assigned to a launch or experiment, this\
              \ field lists the launch or experiment name."
        reason:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: "Specifies the reason that the user session was assigned\
              \ this variation. Possible values include <code>DEFAULT</code>, meaning\
              \ the user was served the default variation; <code>LAUNCH_RULE_MATCH</code>,\
              \ if the user session was enrolled in a launch; <code>EXPERIMENT_RULE_MATCH</code>,\
              \ if the user session was enrolled in an experiment; or <code>ENTITY_OVERRIDES_MATCH</code>,\
              \ if the user's <code>entityId</code> matches an override rule."
        value:
          $ref: '#/components/schemas/EvaluateFeatureResponse_value'
        variation:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The name of the variation that was served to the user session.
      type: object
    GetExperimentResponse:
      example:
        experiment:
          onlineAbDefinition:
            controlTreatmentName: ""
            treatmentWeights: ""
          execution:
            startedTime: ""
            endedTime: ""
          description: ""
          project: ""
          metricGoals: ""
          type: ""
          treatments: ""
          randomizationSalt: ""
          tags: ""
          schedule:
            analysisCompleteTime: ""
          statusReason: ""
          segment: ""
          name: ""
          samplingRate: ""
          createdTime: ""
          lastUpdatedTime: ""
          arn: ""
          status: ""
      properties:
        experiment:
          $ref: '#/components/schemas/GetExperimentResponse_experiment'
      type: object
    GetExperimentResultsResponse:
      example:
        resultsData: ""
        reports: ""
        timestamps: ""
        details: ""
      properties:
        details:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: "If the experiment doesn't yet have enough events to provide\
              \ valid results, this field is returned with the message <code>Not enough\
              \ events to generate results</code>. If there are enough events to provide\
              \ valid results, this field is not returned."
        reports:
          allOf:
          - $ref: '#/components/schemas/ExperimentReportList'
          - description: An array of structures that include the reports that you
              requested.
        resultsData:
          allOf:
          - $ref: '#/components/schemas/ExperimentResultsDataList'
          - description: 'An array of structures that include experiment results including
              metric names and values. '
        timestamps:
          allOf:
          - $ref: '#/components/schemas/TimestampList'
          - description: The timestamps of each result returned.
      type: object
    CwDimensionSafeName:
      maxLength: 255
      minLength: 1
      pattern: "^[\\S]+$"
      type: string
    ExperimentReportName:
      enum:
      - BayesianInference
      type: string
    ExperimentResultRequestType:
      enum:
      - BaseStat
      - TreatmentEffect
      - ConfidenceInterval
      - PValue
      type: string
    GetFeatureResponse:
      example:
        feature:
          defaultVariation: ""
          evaluationRules: ""
          evaluationStrategy: ""
          description: ""
          project: ""
          entityOverrides: ""
          tags: ""
          variations: ""
          valueType: ""
          name: ""
          createdTime: ""
          lastUpdatedTime: ""
          arn: ""
          status: ""
      properties:
        feature:
          $ref: '#/components/schemas/GetFeatureResponse_feature'
      required:
      - feature
      type: object
    GetLaunchResponse:
      example:
        launch:
          execution:
            startedTime: ""
            endedTime: ""
          metricMonitors: ""
          description: ""
          groups: ""
          project: ""
          type: ""
          randomizationSalt: ""
          tags: ""
          statusReason: ""
          name: ""
          createdTime: ""
          lastUpdatedTime: ""
          arn: ""
          scheduledSplitsDefinition:
            steps: ""
          status: ""
      properties:
        launch:
          $ref: '#/components/schemas/GetLaunchResponse_launch'
      type: object
    GetProjectResponse:
      example:
        project:
          launchCount: ""
          description: ""
          activeExperimentCount: ""
          dataDelivery:
            s3Destination:
              bucket: ""
              prefix: ""
            cloudWatchLogs:
              logGroup: ""
          tags: ""
          experimentCount: ""
          name: ""
          createdTime: ""
          lastUpdatedTime: ""
          appConfigResource:
            environmentId: ""
            configurationProfileId: ""
            applicationId: ""
          arn: ""
          activeLaunchCount: ""
          featureCount: ""
          status: ""
      properties:
        project:
          $ref: '#/components/schemas/GetProjectResponse_project'
      required:
      - project
      type: object
    GetSegmentResponse:
      example:
        segment:
          launchCount: ""
          experimentCount: ""
          name: ""
          pattern: ""
          createdTime: ""
          description: ""
          lastUpdatedTime: ""
          arn: ""
          tags: ""
      properties:
        segment:
          $ref: '#/components/schemas/GetSegmentResponse_segment'
      required:
      - segment
      type: object
    ListExperimentsResponse:
      example:
        nextToken: ""
        experiments: ""
      properties:
        experiments:
          allOf:
          - $ref: '#/components/schemas/ExperimentList'
          - description: An array of structures that contain the configuration details
              of the experiments in the specified project.
        nextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          - description: The token to use in a subsequent <code>ListExperiments</code>
              operation to return the next set of results.
      type: object
    ListFeaturesResponse:
      example:
        features: ""
        nextToken: ""
      properties:
        features:
          allOf:
          - $ref: '#/components/schemas/FeatureSummariesList'
          - description: An array of structures that contain the configuration details
              of the features in the specified project.
        nextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          - description: The token to use in a subsequent <code>ListFeatures</code>
              operation to return the next set of results.
      type: object
    ListLaunchesResponse:
      example:
        nextToken: ""
        launches: ""
      properties:
        launches:
          allOf:
          - $ref: '#/components/schemas/LaunchesList'
          - description: An array of structures that contain the configuration details
              of the launches in the specified project.
        nextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          - description: The token to use in a subsequent <code>ListLaunches</code>
              operation to return the next set of results.
      type: object
    ListProjectsResponse:
      example:
        projects: ""
        nextToken: ""
      properties:
        nextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          - description: The token to use in a subsequent <code>ListProjects</code>
              operation to return the next set of results.
        projects:
          allOf:
          - $ref: '#/components/schemas/ProjectSummariesList'
          - description: An array of structures that contain the configuration details
              of the projects in the Region.
      type: object
    ListSegmentReferencesResponse:
      example:
        nextToken: ""
        referencedBy: ""
      properties:
        nextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          - description: The token to use in a subsequent <code>ListSegmentReferences</code>
              operation to return the next set of results.
        referencedBy:
          allOf:
          - $ref: '#/components/schemas/RefResourceList'
          - description: "An array of structures, where each structure contains information\
              \ about one experiment or launch that uses this segment. "
      type: object
    ListSegmentsResponse:
      example:
        nextToken: ""
        segments: ""
      properties:
        nextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          - description: The token to use in a subsequent <code>ListSegments</code>
              operation to return the next set of results.
        segments:
          allOf:
          - $ref: '#/components/schemas/SegmentList'
          - description: An array of structures that contain information about the
              segments in this Region.
      type: object
    ListTagsForResourceResponse:
      example:
        tags: ""
      properties:
        tags:
          allOf:
          - $ref: '#/components/schemas/TagMap'
          - description: The list of tag keys and values associated with the resource
              you specified.
      type: object
    PutProjectEventsResponse:
      example:
        eventResults: ""
        failedEventCount: ""
      properties:
        eventResults:
          allOf:
          - $ref: '#/components/schemas/PutProjectEventsResultEntryList'
          - description: "A structure that contains Evidently's response to the sent\
              \ events, including an event ID and error codes, if any."
        failedEventCount:
          allOf:
          - $ref: '#/components/schemas/Integer'
          - description: The number of events in the operation that could not be used
              by Evidently.
      type: object
    Event:
      description: "A structure that contains the information about one evaluation\
        \ event or custom event sent to Evidently. This is a JSON payload. If this\
        \ event specifies a pre-defined event type, the payload must follow the defined\
        \ event schema."
      properties:
        data:
          allOf:
          - $ref: '#/components/schemas/JsonValue'
          - description: The event data.
        timestamp:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          - description: The timestamp of the event.
        type:
          allOf:
          - $ref: '#/components/schemas/EventType'
          - description: " <code>aws.evidently.evaluation</code> specifies an evaluation\
              \ event, which determines which feature variation that a user sees.\
              \ <code>aws.evidently.custom</code> specifies a custom event, which\
              \ generates metrics from user actions such as clicks and checkouts."
      required:
      - data
      - timestamp
      - type
      type: object
    StartExperimentResponse:
      example:
        startedTime: ""
      properties:
        startedTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          - description: A timestamp that indicates when the experiment started.
      type: object
    StartLaunchResponse:
      example:
        launch:
          execution:
            startedTime: ""
            endedTime: ""
          metricMonitors: ""
          description: ""
          groups: ""
          project: ""
          type: ""
          randomizationSalt: ""
          tags: ""
          statusReason: ""
          name: ""
          createdTime: ""
          lastUpdatedTime: ""
          arn: ""
          scheduledSplitsDefinition:
            steps: ""
          status: ""
      properties:
        launch:
          $ref: '#/components/schemas/StartLaunchResponse_launch'
      required:
      - launch
      type: object
    StopExperimentResponse:
      example:
        endedTime: ""
      properties:
        endedTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          - description: The date and time that the experiment stopped.
      type: object
    StopLaunchResponse:
      example:
        endedTime: ""
      properties:
        endedTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          - description: The date and time that the launch stopped.
      type: object
    TagResourceResponse:
      properties: {}
      type: object
    TestSegmentPatternResponse:
      example:
        match: ""
      properties:
        match:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          - description: Returns <code>true</code> if the pattern matches the payload.
      required:
      - match
      type: object
    UntagResourceResponse:
      properties: {}
      type: object
    TagKey:
      maxLength: 128
      minLength: 1
      pattern: "^(?!aws:)[a-zA-Z+-=._:/]+$"
      type: string
    UpdateExperimentResponse:
      example:
        experiment:
          onlineAbDefinition:
            controlTreatmentName: ""
            treatmentWeights: ""
          execution:
            startedTime: ""
            endedTime: ""
          description: ""
          project: ""
          metricGoals: ""
          type: ""
          treatments: ""
          randomizationSalt: ""
          tags: ""
          schedule:
            analysisCompleteTime: ""
          statusReason: ""
          segment: ""
          name: ""
          samplingRate: ""
          createdTime: ""
          lastUpdatedTime: ""
          arn: ""
          status: ""
      properties:
        experiment:
          $ref: '#/components/schemas/UpdateExperimentResponse_experiment'
      required:
      - experiment
      type: object
    UpdateFeatureResponse:
      example:
        feature:
          defaultVariation: ""
          evaluationRules: ""
          evaluationStrategy: ""
          description: ""
          project: ""
          entityOverrides: ""
          tags: ""
          variations: ""
          valueType: ""
          name: ""
          createdTime: ""
          lastUpdatedTime: ""
          arn: ""
          status: ""
      properties:
        feature:
          $ref: '#/components/schemas/UpdateFeatureResponse_feature'
      required:
      - feature
      type: object
    UpdateLaunchResponse:
      example:
        launch:
          execution:
            startedTime: ""
            endedTime: ""
          metricMonitors: ""
          description: ""
          groups: ""
          project: ""
          type: ""
          randomizationSalt: ""
          tags: ""
          statusReason: ""
          name: ""
          createdTime: ""
          lastUpdatedTime: ""
          arn: ""
          scheduledSplitsDefinition:
            steps: ""
          status: ""
      properties:
        launch:
          $ref: '#/components/schemas/UpdateLaunchResponse_launch'
      required:
      - launch
      type: object
    UpdateProjectResponse:
      example:
        project:
          launchCount: ""
          description: ""
          activeExperimentCount: ""
          dataDelivery:
            s3Destination:
              bucket: ""
              prefix: ""
            cloudWatchLogs:
              logGroup: ""
          tags: ""
          experimentCount: ""
          name: ""
          createdTime: ""
          lastUpdatedTime: ""
          appConfigResource:
            environmentId: ""
            configurationProfileId: ""
            applicationId: ""
          arn: ""
          activeLaunchCount: ""
          featureCount: ""
          status: ""
      properties:
        project:
          $ref: '#/components/schemas/UpdateProjectResponse_project'
      required:
      - project
      type: object
    UpdateProjectDataDeliveryResponse:
      example:
        project:
          launchCount: ""
          description: ""
          activeExperimentCount: ""
          dataDelivery:
            s3Destination:
              bucket: ""
              prefix: ""
            cloudWatchLogs:
              logGroup: ""
          tags: ""
          experimentCount: ""
          name: ""
          createdTime: ""
          lastUpdatedTime: ""
          appConfigResource:
            environmentId: ""
            configurationProfileId: ""
            applicationId: ""
          arn: ""
          activeLaunchCount: ""
          featureCount: ""
          status: ""
      properties:
        project:
          $ref: '#/components/schemas/UpdateProjectDataDeliveryResponse_project'
      required:
      - project
      type: object
    CwLogGroupSafeName:
      maxLength: 512
      minLength: 1
      pattern: "^[-a-zA-Z0-9._/]+$"
      type: string
    S3BucketSafeName:
      maxLength: 63
      minLength: 3
      pattern: "^[a-z0-9][-a-z0-9]*[a-z0-9]$"
      type: string
    S3PrefixSafeName:
      maxLength: 1024
      minLength: 1
      pattern: "^[-a-zA-Z0-9!_.*'()/]*$"
      type: string
    Arn:
      maxLength: 2048
      minLength: 0
      pattern: "arn:[^:]*:[^:]*:[^:]*:[^:]*:.*"
      type: string
    ProjectRef:
      maxLength: 2048
      minLength: 0
      pattern: "(^[a-zA-Z0-9._-]*$)|(arn:[^:]*:[^:]*:[^:]*:[^:]*:project/[a-zA-Z0-9._-]*)"
      type: string
    EvaluationRequestsList:
      items:
        $ref: '#/components/schemas/EvaluationRequest'
      maxItems: 20
      minItems: 1
      type: array
    BatchEvaluateFeatureRequest:
      example:
        requests: ""
      properties:
        requests:
          allOf:
          - $ref: '#/components/schemas/EvaluationRequestsList'
          - description: "An array of structures, where each structure assigns a feature\
              \ variation to one user session."
      required:
      - requests
      title: BatchEvaluateFeatureRequest
      type: object
    EvaluationResultsList:
      items:
        $ref: '#/components/schemas/EvaluationResult'
      type: array
    Boolean:
      type: boolean
    ChangeDirectionEnum:
      enum:
      - INCREASE
      - DECREASE
      type: string
    CloudWatchLogsDestination:
      description: A structure containing the CloudWatch Logs log group where the
        project stores evaluation events.
      properties:
        logGroup:
          allOf:
          - $ref: '#/components/schemas/CwLogGroupSafeName'
          - description: The name of the log group where the project stores evaluation
              events.
      type: object
    Description:
      maxLength: 160
      minLength: 0
      pattern: .*
      type: string
    MetricGoalConfigList:
      items:
        $ref: '#/components/schemas/MetricGoalConfig'
      maxItems: 3
      minItems: 1
      type: array
    ExperimentName:
      maxLength: 127
      minLength: 1
      pattern: "^[-a-zA-Z0-9._]*$"
      type: string
    OnlineAbConfig:
      description: A structure that contains the configuration of which variation
        to use as the "control" version. The "control" version is used for comparison
        with other variations. This structure also specifies how much experiment traffic
        is allocated to each variation.
      properties:
        controlTreatmentName:
          allOf:
          - $ref: '#/components/schemas/TreatmentName'
          - description: The name of the variation that is to be the default variation
              that the other variations are compared to.
        treatmentWeights:
          allOf:
          - $ref: '#/components/schemas/TreatmentToWeightMap'
          - description: "A set of key-value pairs. The keys are variation names,\
              \ and the values are the portion of experiment traffic to be assigned\
              \ to that variation. Specify the traffic portion in thousandths of a\
              \ percent, so 20,000 for a variation would allocate 20% of the experiment\
              \ traffic to that variation."
      type: object
    RandomizationSalt:
      maxLength: 127
      minLength: 0
      pattern: .*
      type: string
    SplitWeight:
      maximum: 100000
      minimum: 0
      type: integer
    SegmentRef:
      maxLength: 2048
      minLength: 0
      pattern: "(^[-a-zA-Z0-9._]*$)|(arn:[^:]*:[^:]*:[^:]*:[^:]*:segment/[-a-zA-Z0-9._]*)"
      type: string
    TagMap:
      additionalProperties:
        $ref: '#/components/schemas/TagValue'
      type: object
    TreatmentConfigList:
      items:
        $ref: '#/components/schemas/TreatmentConfig'
      maxItems: 5
      minItems: 0
      type: array
    CreateExperimentRequest:
      example:
        segment: ""
        name: ""
        samplingRate: ""
        description: ""
        metricGoals: ""
        onlineAbConfig:
          controlTreatmentName: ""
          treatmentWeights: ""
        treatments: ""
        randomizationSalt: ""
        tags: ""
      properties:
        description:
          allOf:
          - $ref: '#/components/schemas/Description'
          - description: An optional description of the experiment.
        metricGoals:
          allOf:
          - $ref: '#/components/schemas/MetricGoalConfigList'
          - description: "An array of structures that defines the metrics used for\
              \ the experiment, and whether a higher or lower value for each metric\
              \ is the goal."
        name:
          allOf:
          - $ref: '#/components/schemas/ExperimentName'
          - description: A name for the new experiment.
        onlineAbConfig:
          $ref: '#/components/schemas/CreateExperimentRequest_onlineAbConfig'
        randomizationSalt:
          allOf:
          - $ref: '#/components/schemas/RandomizationSalt'
          - description: "When Evidently assigns a particular user session to an experiment,\
              \ it must use a randomization ID to determine which variation the user\
              \ session is served. This randomization ID is a combination of the entity\
              \ ID and <code>randomizationSalt</code>. If you omit <code>randomizationSalt</code>,\
              \ Evidently uses the experiment name as the <code>randomizationSalt</code>."
        samplingRate:
          allOf:
          - $ref: '#/components/schemas/SplitWeight'
          - description: "<p>The portion of the available audience that you want to\
              \ allocate to this experiment, in thousandths of a percent. The available\
              \ audience is the total audience minus the audience that you have allocated\
              \ to overrides or current launches of this feature.</p> <p>This is represented\
              \ in thousandths of a percent. For example, specify 10,000 to allocate\
              \ 10% of the available audience.</p>"
        segment:
          allOf:
          - $ref: '#/components/schemas/SegmentRef'
          - description: "Specifies an audience <i>segment</i> to use in the experiment.\
              \ When a segment is used in an experiment, only user sessions that match\
              \ the segment pattern are used in the experiment."
        tags:
          allOf:
          - $ref: '#/components/schemas/TagMap'
          - description: "<p>Assigns one or more tags (key-value pairs) to the experiment.</p>\
              \ <p>Tags can help you organize and categorize your resources. You can\
              \ also use them to scope user permissions by granting a user permission\
              \ to access or change only resources with certain tag values.</p> <p>Tags\
              \ don't have any semantic meaning to Amazon Web Services and are interpreted\
              \ strictly as strings of characters.</p> <p>You can associate as many\
              \ as 50 tags with an experiment.</p> <p>For more information, see <a\
              \ href=\"https://docs.aws.amazon.com/general/latest/gr/aws_tagging.html\"\
              >Tagging Amazon Web Services resources</a>.</p>"
        treatments:
          allOf:
          - $ref: '#/components/schemas/TreatmentConfigList'
          - description: An array of structures that describe the configuration of
              each feature variation used in the experiment.
      required:
      - metricGoals
      - name
      - treatments
      title: CreateExperimentRequest
      type: object
    Experiment:
      description: A structure containing the configuration details of an experiment.
      properties:
        arn:
          allOf:
          - $ref: '#/components/schemas/ExperimentArn'
          - description: The ARN of the experiment.
        createdTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          - description: The date and time that the experiment is first created.
        description:
          allOf:
          - $ref: '#/components/schemas/Description'
          - description: A description of the experiment.
        execution:
          $ref: '#/components/schemas/Experiment_execution'
        lastUpdatedTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          - description: The date and time that the experiment was most recently updated.
        metricGoals:
          allOf:
          - $ref: '#/components/schemas/MetricGoalsList'
          - description: "An array of structures that defines the metrics used for\
              \ the experiment, and whether a higher or lower value for each metric\
              \ is the goal."
        name:
          allOf:
          - $ref: '#/components/schemas/ExperimentName'
          - description: The name of the experiment.
        onlineAbDefinition:
          $ref: '#/components/schemas/Experiment_onlineAbDefinition'
        project:
          allOf:
          - $ref: '#/components/schemas/ProjectArn'
          - description: The name or ARN of the project that contains this experiment.
        randomizationSalt:
          allOf:
          - $ref: '#/components/schemas/RandomizationSalt'
          - description: This value is used when Evidently assigns a particular user
              session to the experiment. It helps create a randomization ID to determine
              which variation the user session is served. This randomization ID is
              a combination of the entity ID and <code>randomizationSalt</code>.
        samplingRate:
          allOf:
          - $ref: '#/components/schemas/SplitWeight'
          - description: "<p>In thousandths of a percent, the amount of the available\
              \ audience that is allocated to this experiment. The available audience\
              \ is the total audience minus the audience that you have allocated to\
              \ overrides or current launches of this feature.</p> <p>This is represented\
              \ in thousandths of a percent, so a value of 10,000 is 10% of the available\
              \ audience.</p>"
        schedule:
          $ref: '#/components/schemas/Experiment_schedule'
        segment:
          allOf:
          - $ref: '#/components/schemas/SegmentArn'
          - description: "The audience segment being used for the experiment, if a\
              \ segment is being used."
        status:
          allOf:
          - $ref: '#/components/schemas/ExperimentStatus'
          - description: The current state of the experiment.
        statusReason:
          allOf:
          - $ref: '#/components/schemas/Description'
          - description: "If the experiment was stopped, this is the string that was\
              \ entered by the person who stopped the experiment, to explain why it\
              \ was stopped."
        tags:
          allOf:
          - $ref: '#/components/schemas/TagMap'
          - description: The list of tag keys and values associated with this experiment.
        treatments:
          allOf:
          - $ref: '#/components/schemas/TreatmentList'
          - description: An array of structures that describe the configuration of
              each feature variation used in the experiment.
        type:
          allOf:
          - $ref: '#/components/schemas/ExperimentType'
          - description: "The type of this experiment. Currently, this value must\
              \ be <code>aws.experiment.onlineab</code>."
      required:
      - arn
      - createdTime
      - lastUpdatedTime
      - name
      - status
      - type
      type: object
    EntityOverrideMap:
      additionalProperties:
        $ref: '#/components/schemas/VariationName'
      maxProperties: 2500
      minProperties: 0
      type: object
    FeatureEvaluationStrategy:
      enum:
      - ALL_RULES
      - DEFAULT_VARIATION
      type: string
    FeatureName:
      maxLength: 127
      minLength: 1
      pattern: "^[-a-zA-Z0-9._]*$"
      type: string
    VariationConfigsList:
      items:
        $ref: '#/components/schemas/VariationConfig'
      maxItems: 5
      minItems: 1
      type: array
    CreateFeatureRequest:
      example:
        defaultVariation: ""
        evaluationStrategy: ""
        variations: ""
        name: ""
        description: ""
        entityOverrides: ""
        tags: ""
      properties:
        defaultVariation:
          allOf:
          - $ref: '#/components/schemas/VariationName'
          - description: "<p>The name of the variation to use as the default variation.\
              \ The default variation is served to users who are not allocated to\
              \ any ongoing launches or experiments of this feature.</p> <p>This variation\
              \ must also be listed in the <code>variations</code> structure.</p>\
              \ <p>If you omit <code>defaultVariation</code>, the first variation\
              \ listed in the <code>variations</code> structure is used as the default\
              \ variation.</p>"
        description:
          allOf:
          - $ref: '#/components/schemas/Description'
          - description: An optional description of the feature.
        entityOverrides:
          allOf:
          - $ref: '#/components/schemas/EntityOverrideMap'
          - description: "<p>Specify users that should always be served a specific\
              \ variation of a feature. Each user is specified by a key-value pair\
              \ . For each key, specify a user by entering their user ID, account\
              \ ID, or some other identifier. For the value, specify the name of the\
              \ variation that they are to be served.</p> <p>This parameter is limited\
              \ to 2500 overrides or a total of 40KB. The 40KB limit includes an overhead\
              \ of 6 bytes per override.</p>"
        evaluationStrategy:
          allOf:
          - $ref: '#/components/schemas/FeatureEvaluationStrategy'
          - description: Specify <code>ALL_RULES</code> to activate the traffic allocation
              specified by any ongoing launches or experiments. Specify <code>DEFAULT_VARIATION</code>
              to serve the default variation to all users instead.
        name:
          allOf:
          - $ref: '#/components/schemas/FeatureName'
          - description: The name for the new feature.
        tags:
          allOf:
          - $ref: '#/components/schemas/TagMap'
          - description: "<p>Assigns one or more tags (key-value pairs) to the feature.</p>\
              \ <p>Tags can help you organize and categorize your resources. You can\
              \ also use them to scope user permissions by granting a user permission\
              \ to access or change only resources with certain tag values.</p> <p>Tags\
              \ don't have any semantic meaning to Amazon Web Services and are interpreted\
              \ strictly as strings of characters.</p> <p>You can associate as many\
              \ as 50 tags with a feature.</p> <p>For more information, see <a href=\"\
              https://docs.aws.amazon.com/general/latest/gr/aws_tagging.html\">Tagging\
              \ Amazon Web Services resources</a>.</p>"
        variations:
          allOf:
          - $ref: '#/components/schemas/VariationConfigsList'
          - description: An array of structures that contain the configuration of
              the feature's different variations.
      required:
      - name
      - variations
      title: CreateFeatureRequest
      type: object
    Feature:
      description: This structure contains information about one Evidently feature
        in your account.
      properties:
        arn:
          allOf:
          - $ref: '#/components/schemas/FeatureArn'
          - description: The ARN of the feature.
        createdTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          - description: The date and time that the feature is created.
        defaultVariation:
          allOf:
          - $ref: '#/components/schemas/VariationName'
          - description: "<p>The name of the variation that is used as the default\
              \ variation. The default variation is served to users who are not allocated\
              \ to any ongoing launches or experiments of this feature.</p> <p>This\
              \ variation must also be listed in the <code>variations</code> structure.</p>\
              \ <p>If you omit <code>defaultVariation</code>, the first variation\
              \ listed in the <code>variations</code> structure is used as the default\
              \ variation.</p>"
        description:
          allOf:
          - $ref: '#/components/schemas/Description'
          - description: The description of the feature.
        entityOverrides:
          allOf:
          - $ref: '#/components/schemas/EntityOverrideMap'
          - description: "<p>A set of key-value pairs that specify users who should\
              \ always be served a specific variation of a feature. Each key specifies\
              \ a user using their user ID, account ID, or some other identifier.\
              \ The value specifies the name of the variation that the user is to\
              \ be served.</p> <p>For the override to be successful, the value of\
              \ the key must match the <code>entityId</code> used in the <a href=\"\
              https://docs.aws.amazon.com/cloudwatchevidently/latest/APIReference/API_EvaluateFeature.html\"\
              >EvaluateFeature</a> operation.</p>"
        evaluationRules:
          allOf:
          - $ref: '#/components/schemas/EvaluationRulesList'
          - description: An array of structures that define the evaluation rules for
              the feature.
        evaluationStrategy:
          allOf:
          - $ref: '#/components/schemas/FeatureEvaluationStrategy'
          - description: "If this value is <code>ALL_RULES</code>, the traffic allocation\
              \ specified by any ongoing launches or experiments is being used. If\
              \ this is <code>DEFAULT_VARIATION</code>, the default variation is being\
              \ served to all users."
        lastUpdatedTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          - description: The date and time that the feature was most recently updated.
        name:
          allOf:
          - $ref: '#/components/schemas/FeatureName'
          - description: The name of the feature.
        project:
          allOf:
          - $ref: '#/components/schemas/ProjectArn'
          - description: The name or ARN of the project that contains the feature.
        status:
          allOf:
          - $ref: '#/components/schemas/FeatureStatus'
          - description: The current state of the feature.
        tags:
          allOf:
          - $ref: '#/components/schemas/TagMap'
          - description: The list of tag keys and values associated with this feature.
        valueType:
          allOf:
          - $ref: '#/components/schemas/VariationValueType'
          - description: "Defines the type of value used to define the different feature\
              \ variations. For more information, see <a href=\"https://docs.aws.amazon.com/AmazonCloudWatch/latest/monitoring/CloudWatch-Evidently-variationtypes.html\"\
              >Variation types</a> "
        variations:
          allOf:
          - $ref: '#/components/schemas/VariationsList'
          - description: An array of structures that contain the configuration of
              the feature's different variations.
      required:
      - arn
      - createdTime
      - evaluationStrategy
      - lastUpdatedTime
      - name
      - status
      - valueType
      - variations
      type: object
    LaunchGroupConfigList:
      items:
        $ref: '#/components/schemas/LaunchGroupConfig'
      maxItems: 5
      minItems: 1
      type: array
    MetricMonitorConfigList:
      items:
        $ref: '#/components/schemas/MetricMonitorConfig'
      maxItems: 3
      minItems: 0
      type: array
    LaunchName:
      maxLength: 127
      minLength: 1
      pattern: "^[-a-zA-Z0-9._]*$"
      type: string
    ScheduledSplitsLaunchConfig:
      description: An array of structures that define the traffic allocation percentages
        among the feature variations during each step of a launch. This also defines
        the start time of each step.
      properties:
        steps:
          allOf:
          - $ref: '#/components/schemas/ScheduledSplitConfigList'
          - description: An array of structures that define the traffic allocation
              percentages among the feature variations during each step of the launch.
              This also defines the start time of each step.
      required:
      - steps
      type: object
    CreateLaunchRequest:
      example:
        metricMonitors: ""
        name: ""
        description: ""
        groups: ""
        scheduledSplitsConfig:
          steps: ""
        randomizationSalt: ""
        tags: ""
      properties:
        description:
          allOf:
          - $ref: '#/components/schemas/Description'
          - description: An optional description for the launch.
        groups:
          allOf:
          - $ref: '#/components/schemas/LaunchGroupConfigList'
          - description: An array of structures that contains the feature and variations
              that are to be used for the launch.
        metricMonitors:
          allOf:
          - $ref: '#/components/schemas/MetricMonitorConfigList'
          - description: An array of structures that define the metrics that will
              be used to monitor the launch performance.
        name:
          allOf:
          - $ref: '#/components/schemas/LaunchName'
          - description: The name for the new launch.
        randomizationSalt:
          allOf:
          - $ref: '#/components/schemas/RandomizationSalt'
          - description: "When Evidently assigns a particular user session to a launch,\
              \ it must use a randomization ID to determine which variation the user\
              \ session is served. This randomization ID is a combination of the entity\
              \ ID and <code>randomizationSalt</code>. If you omit <code>randomizationSalt</code>,\
              \ Evidently uses the launch name as the <code>randomizationSalt</code>."
        scheduledSplitsConfig:
          $ref: '#/components/schemas/CreateLaunchRequest_scheduledSplitsConfig'
        tags:
          allOf:
          - $ref: '#/components/schemas/TagMap'
          - description: "<p>Assigns one or more tags (key-value pairs) to the launch.</p>\
              \ <p>Tags can help you organize and categorize your resources. You can\
              \ also use them to scope user permissions by granting a user permission\
              \ to access or change only resources with certain tag values.</p> <p>Tags\
              \ don't have any semantic meaning to Amazon Web Services and are interpreted\
              \ strictly as strings of characters.</p> <p>You can associate as many\
              \ as 50 tags with a launch.</p> <p>For more information, see <a href=\"\
              https://docs.aws.amazon.com/general/latest/gr/aws_tagging.html\">Tagging\
              \ Amazon Web Services resources</a>.</p>"
      required:
      - groups
      - name
      title: CreateLaunchRequest
      type: object
    Launch:
      description: This structure contains the configuration details of one Evidently
        launch.
      properties:
        arn:
          allOf:
          - $ref: '#/components/schemas/LaunchArn'
          - description: The ARN of the launch.
        createdTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          - description: The date and time that the launch is created.
        description:
          allOf:
          - $ref: '#/components/schemas/Description'
          - description: The description of the launch.
        execution:
          $ref: '#/components/schemas/Launch_execution'
        groups:
          allOf:
          - $ref: '#/components/schemas/LaunchGroupList'
          - description: An array of structures that define the feature variations
              that are being used in the launch.
        lastUpdatedTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          - description: The date and time that the launch was most recently updated.
        metricMonitors:
          allOf:
          - $ref: '#/components/schemas/MetricMonitorList'
          - description: An array of structures that define the metrics that are being
              used to monitor the launch performance.
        name:
          allOf:
          - $ref: '#/components/schemas/LaunchName'
          - description: The name of the launch.
        project:
          allOf:
          - $ref: '#/components/schemas/ProjectRef'
          - description: The name or ARN of the project that contains the launch.
        randomizationSalt:
          allOf:
          - $ref: '#/components/schemas/RandomizationSalt'
          - description: "This value is used when Evidently assigns a particular user\
              \ session to the launch, to help create a randomization ID to determine\
              \ which variation the user session is served. This randomization ID\
              \ is a combination of the entity ID and <code>randomizationSalt</code>."
        scheduledSplitsDefinition:
          $ref: '#/components/schemas/Launch_scheduledSplitsDefinition'
        status:
          allOf:
          - $ref: '#/components/schemas/LaunchStatus'
          - description: The current state of the launch.
        statusReason:
          allOf:
          - $ref: '#/components/schemas/Description'
          - description: "If the launch was stopped, this is the string that was entered\
              \ by the person who stopped the launch, to explain why it was stopped."
        tags:
          allOf:
          - $ref: '#/components/schemas/TagMap'
          - description: The list of tag keys and values associated with this launch.
        type:
          allOf:
          - $ref: '#/components/schemas/LaunchType'
          - description: The type of launch.
      required:
      - arn
      - createdTime
      - lastUpdatedTime
      - name
      - status
      - type
      type: object
    ProjectAppConfigResourceConfig:
      description: <p>Use this parameter to configure client-side evaluation for your
        project. Client-side evaluation allows your application to assign variations
        to user sessions locally instead of by calling the <a href="https://docs.aws.amazon.com/cloudwatchevidently/latest/APIReference/API_EvaluateFeature.html">EvaluateFeature</a>
        operation to assign the variations. This mitigates the latency and availability
        risks that come with an API call.</p> <p> <code>ProjectAppConfigResource</code>
        is a structure that defines the configuration of how your application integrates
        with AppConfig to run client-side evaluation.</p>
      properties:
        applicationId:
          allOf:
          - $ref: '#/components/schemas/AppConfigResourceId'
          - description: 'The ID of the AppConfig application to use for client-side
              evaluation. '
        environmentId:
          allOf:
          - $ref: '#/components/schemas/AppConfigResourceId'
          - description: The ID of the AppConfig environment to use for client-side
              evaluation. This must be an environment that is within the application
              that you specify for <code>applicationId</code>.
      type: object
    ProjectDataDeliveryConfig:
      description: A structure that contains information about where Evidently is
        to store evaluation events for longer term storage.
      properties:
        cloudWatchLogs:
          $ref: '#/components/schemas/CreateProject_request_dataDelivery_cloudWatchLogs'
        s3Destination:
          $ref: '#/components/schemas/CreateProject_request_dataDelivery_s3Destination'
      type: object
    ProjectName:
      maxLength: 127
      minLength: 1
      pattern: "^[-a-zA-Z0-9._]*$"
      type: string
    CreateProjectRequest:
      example:
        name: ""
        description: ""
        appConfigResource:
          environmentId: ""
          applicationId: ""
        dataDelivery:
          s3Destination:
            bucket: ""
            prefix: ""
          cloudWatchLogs:
            logGroup: ""
        tags: ""
      properties:
        appConfigResource:
          $ref: '#/components/schemas/CreateProjectRequest_appConfigResource'
        dataDelivery:
          $ref: '#/components/schemas/CreateProjectRequest_dataDelivery'
        description:
          allOf:
          - $ref: '#/components/schemas/Description'
          - description: An optional description of the project.
        name:
          allOf:
          - $ref: '#/components/schemas/ProjectName'
          - description: The name for the project.
        tags:
          allOf:
          - $ref: '#/components/schemas/TagMap'
          - description: "<p>Assigns one or more tags (key-value pairs) to the project.</p>\
              \ <p>Tags can help you organize and categorize your resources. You can\
              \ also use them to scope user permissions by granting a user permission\
              \ to access or change only resources with certain tag values.</p> <p>Tags\
              \ don't have any semantic meaning to Amazon Web Services and are interpreted\
              \ strictly as strings of characters.</p> <p>You can associate as many\
              \ as 50 tags with a project.</p> <p>For more information, see <a href=\"\
              https://docs.aws.amazon.com/general/latest/gr/aws_tagging.html\">Tagging\
              \ Amazon Web Services resources</a>.</p>"
      required:
      - name
      title: CreateProjectRequest
      type: object
    Project:
      description: "This structure defines a project, which is the logical object\
        \ in Evidently that can contain features, launches, and experiments. Use projects\
        \ to group similar features together."
      properties:
        activeExperimentCount:
          allOf:
          - $ref: '#/components/schemas/Long'
          - description: The number of ongoing experiments currently in the project.
        activeLaunchCount:
          allOf:
          - $ref: '#/components/schemas/Long'
          - description: The number of ongoing launches currently in the project.
        appConfigResource:
          $ref: '#/components/schemas/Project_appConfigResource'
        arn:
          allOf:
          - $ref: '#/components/schemas/ProjectArn'
          - description: The name or ARN of the project.
        createdTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          - description: The date and time that the project is created.
        dataDelivery:
          $ref: '#/components/schemas/Project_dataDelivery'
        description:
          allOf:
          - $ref: '#/components/schemas/Description'
          - description: The user-entered description of the project.
        experimentCount:
          allOf:
          - $ref: '#/components/schemas/Long'
          - description: "The number of experiments currently in the project. This\
              \ includes all experiments that have been created and not deleted, whether\
              \ they are ongoing or not."
        featureCount:
          allOf:
          - $ref: '#/components/schemas/Long'
          - description: The number of features currently in the project.
        lastUpdatedTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          - description: The date and time that the project was most recently updated.
        launchCount:
          allOf:
          - $ref: '#/components/schemas/Long'
          - description: "The number of launches currently in the project. This includes\
              \ all launches that have been created and not deleted, whether they\
              \ are ongoing or not."
        name:
          allOf:
          - $ref: '#/components/schemas/ProjectName'
          - description: The name of the project.
        status:
          allOf:
          - $ref: '#/components/schemas/ProjectStatus'
          - description: The current state of the project.
        tags:
          allOf:
          - $ref: '#/components/schemas/TagMap'
          - description: The list of tag keys and values associated with this project.
      required:
      - arn
      - createdTime
      - lastUpdatedTime
      - name
      - status
      type: object
    SegmentName:
      maxLength: 64
      minLength: 1
      pattern: "^[-a-zA-Z0-9._]*$"
      type: string
    SegmentPattern:
      maxLength: 1024
      minLength: 1
      type: string
    CreateSegmentRequest:
      example:
        name: ""
        pattern: ""
        description: ""
        tags: ""
      properties:
        description:
          allOf:
          - $ref: '#/components/schemas/Description'
          - description: An optional description for this segment.
        name:
          allOf:
          - $ref: '#/components/schemas/SegmentName'
          - description: A name for the segment.
        pattern:
          allOf:
          - $ref: '#/components/schemas/SegmentPattern'
          - description: "The pattern to use for the segment. For more information\
              \ about pattern syntax, see <a href=\"https://docs.aws.amazon.com/AmazonCloudWatch/latest/monitoring/CloudWatch-Evidently-segments.html#CloudWatch-Evidently-segments-syntax.html\"\
              > Segment rule pattern syntax</a>."
        tags:
          allOf:
          - $ref: '#/components/schemas/TagMap'
          - description: "<p>Assigns one or more tags (key-value pairs) to the segment.</p>\
              \ <p>Tags can help you organize and categorize your resources. You can\
              \ also use them to scope user permissions by granting a user permission\
              \ to access or change only resources with certain tag values.</p> <p>Tags\
              \ don't have any semantic meaning to Amazon Web Services and are interpreted\
              \ strictly as strings of characters.</p> <p>You can associate as many\
              \ as 50 tags with a segment.</p> <p>For more information, see <a href=\"\
              https://docs.aws.amazon.com/general/latest/gr/aws_tagging.html\">Tagging\
              \ Amazon Web Services resources</a>.</p>"
      required:
      - name
      - pattern
      title: CreateSegmentRequest
      type: object
    Segment:
      description: This structure contains information about one audience <i>segment</i>.
        You can use segments in your experiments and launches to narrow the user sessions
        used for experiment or launch to only the user sessions that match one or
        more criteria.
      properties:
        arn:
          allOf:
          - $ref: '#/components/schemas/SegmentArn'
          - description: The ARN of the segment.
        createdTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          - description: The date and time that this segment was created.
        description:
          allOf:
          - $ref: '#/components/schemas/Description'
          - description: The customer-created description for this segment.
        experimentCount:
          allOf:
          - $ref: '#/components/schemas/Long'
          - description: "The number of experiments that this segment is used in.\
              \ This count includes all current experiments, not just those that are\
              \ currently running."
        lastUpdatedTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          - description: The date and time that this segment was most recently updated.
        launchCount:
          allOf:
          - $ref: '#/components/schemas/Long'
          - description: "The number of launches that this segment is used in. This\
              \ count includes all current launches, not just those that are currently\
              \ running."
        name:
          allOf:
          - $ref: '#/components/schemas/SegmentName'
          - description: The name of the segment.
        pattern:
          allOf:
          - $ref: '#/components/schemas/SegmentPattern'
          - description: "The pattern that defines the attributes to use to evalute\
              \ whether a user session will be in the segment. For more information\
              \ about the pattern syntax, see <a href=\"https://docs.aws.amazon.com/AmazonCloudWatch/latest/monitoring/CloudWatch-Evidently-segments.html\"\
              >Segment rule pattern syntax</a>."
        tags:
          allOf:
          - $ref: '#/components/schemas/TagMap'
          - description: The list of tag keys and values associated with this launch.
      required:
      - arn
      - createdTime
      - lastUpdatedTime
      - name
      - pattern
      type: object
    DeleteExperimentRequest:
      properties: {}
      title: DeleteExperimentRequest
      type: object
    DeleteFeatureRequest:
      properties: {}
      title: DeleteFeatureRequest
      type: object
    DeleteLaunchRequest:
      properties: {}
      title: DeleteLaunchRequest
      type: object
    DeleteProjectRequest:
      properties: {}
      title: DeleteProjectRequest
      type: object
    DeleteSegmentRequest:
      properties: {}
      title: DeleteSegmentRequest
      type: object
    Double:
      format: double
      type: number
    DoubleValueList:
      items:
        $ref: '#/components/schemas/Double'
      maxItems: 100800
      minItems: 0
      type: array
    EntityId:
      maxLength: 512
      minLength: 1
      pattern: .*
      type: string
    ErrorCodeEnum:
      description: "Recommended errors from AWS API standards: https://w.amazon.com/bin/view/AWS/API_Standards/Exceptions\
        \ ErrorCode = &quot;ValidationException&quot;|&quot;ServiceQuotaExceededException&quot;|&quot;AccessDeniedException&quot;|&quot;ResourceNotFoundException&quot;|&quot;ConflictException&quot;|&quot;ThrottlingException&quot;|&quot;InternalServerException&quot;|string;"
      maxLength: 64
      minLength: 1
      type: string
    ErrorMessage:
      maxLength: 1024
      minLength: 1
      pattern: .*
      type: string
    JsonValue:
      type: string
    EvaluateFeatureRequest:
      example:
        evaluationContext: ""
        entityId: ""
      properties:
        entityId:
          allOf:
          - $ref: '#/components/schemas/EntityId'
          - description: An internal ID that represents a unique user of the application.
              This <code>entityID</code> is checked against any override rules assigned
              for this feature.
        evaluationContext:
          allOf:
          - $ref: '#/components/schemas/JsonValue'
          - description: "<p>A JSON object of attributes that you can optionally pass\
              \ in as part of the evaluation event sent to Evidently from the user\
              \ session. Evidently can use this value to match user sessions with\
              \ defined audience segments. For more information, see <a href=\"https://docs.aws.amazon.com/AmazonCloudWatch/latest/monitoring/CloudWatch-Evidently-segments.html\"\
              >Use segments to focus your audience</a>.</p> <p>If you include this\
              \ parameter, the value must be a JSON object. A JSON array is not supported.</p>"
      required:
      - entityId
      title: EvaluateFeatureRequest
      type: object
    String:
      type: string
    VariableValue:
      description: "The value assigned to a feature variation. This structure must\
        \ contain exactly one field. It can be <code>boolValue</code>, <code>doubleValue</code>,\
        \ <code>longValue</code>, or <code>stringValue</code>."
      properties:
        boolValue:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          - description: "If this feature uses the Boolean variation type, this field\
              \ contains the Boolean value of this variation."
        doubleValue:
          allOf:
          - $ref: '#/components/schemas/Double'
          - description: "If this feature uses the double integer variation type,\
              \ this field contains the double integer value of this variation."
        longValue:
          allOf:
          - $ref: '#/components/schemas/VariableValueLongValueLong'
          - description: "If this feature uses the long variation type, this field\
              \ contains the long value of this variation."
        stringValue:
          allOf:
          - $ref: '#/components/schemas/VariableValueStringValueString'
          - description: "If this feature uses the string variation type, this field\
              \ contains the string value of this variation."
      type: object
    EvaluationResult:
      description: This structure displays the results of one feature evaluation assignment
        to one user session.
      properties:
        details:
          allOf:
          - $ref: '#/components/schemas/JsonValue'
          - description: "If this user was assigned to a launch or experiment, this\
              \ field lists the launch or experiment name."
        entityId:
          allOf:
          - $ref: '#/components/schemas/EntityId'
          - description: An internal ID that represents a unique user session of the
              application.
        feature:
          allOf:
          - $ref: '#/components/schemas/FeatureName'
          - description: The name of the feature being evaluated.
        project:
          allOf:
          - $ref: '#/components/schemas/Arn'
          - description: The name or ARN of the project that contains the feature
              being evaluated.
        reason:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: "Specifies the reason that the user session was assigned\
              \ this variation. Possible values include <code>DEFAULT</code>, meaning\
              \ the user was served the default variation; <code>LAUNCH_RULE_MATCH</code>,\
              \ if the user session was enrolled in a launch; or <code>EXPERIMENT_RULE_MATCH</code>,\
              \ if the user session was enrolled in an experiment."
        value:
          $ref: '#/components/schemas/EvaluateFeatureResponse_value'
        variation:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The name of the variation that was served to the user session.
      required:
      - entityId
      - feature
      type: object
    RuleName:
      maxLength: 1024
      minLength: 0
      type: string
    RuleType:
      maxLength: 1024
      minLength: 0
      type: string
    EvaluationRule:
      description: "A structure that contains the information about an evaluation\
        \ rule for this feature, if it is used in a launch or experiment."
      properties:
        name:
          allOf:
          - $ref: '#/components/schemas/RuleName'
          - description: The name of the experiment or launch.
        type:
          allOf:
          - $ref: '#/components/schemas/RuleType'
          - description: "This value is <code>aws.evidently.splits</code> if this\
              \ is an evaluation rule for a launch, and it is <code>aws.evidently.onlineab</code>\
              \ if this is an evaluation rule for an experiment."
      required:
      - type
      type: object
    EvaluationRulesList:
      items:
        $ref: '#/components/schemas/EvaluationRule'
      type: array
    Timestamp:
      format: date-time
      type: string
    EventType:
      enum:
      - aws.evidently.evaluation
      - aws.evidently.custom
      type: string
    EventList:
      items:
        $ref: '#/components/schemas/Event'
      maxItems: 50
      minItems: 0
      type: array
    ExperimentArn:
      maxLength: 2048
      minLength: 0
      pattern: "arn:[^:]*:[^:]*:[^:]*:[^:]*:project/[-a-zA-Z0-9._]*/experiment/[-a-zA-Z0-9._]*"
      type: string
    ExperimentExecution:
      description: This structure contains the date and time that the experiment started
        and ended.
      properties:
        endedTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          - description: The date and time that the experiment ended.
        startedTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          - description: The date and time that the experiment started.
      type: object
    MetricGoalsList:
      items:
        $ref: '#/components/schemas/MetricGoal'
      maxItems: 3
      minItems: 1
      type: array
    OnlineAbDefinition:
      description: A structure that contains the configuration of which variation
        to use as the "control" version. The "control" version is used for comparison
        with other variations. This structure also specifies how much experiment traffic
        is allocated to each variation.
      properties:
        controlTreatmentName:
          allOf:
          - $ref: '#/components/schemas/TreatmentName'
          - description: The name of the variation that is the default variation that
              the other variations are compared to.
        treatmentWeights:
          allOf:
          - $ref: '#/components/schemas/TreatmentToWeightMap'
          - description: "A set of key-value pairs. The keys are variation names,\
              \ and the values are the portion of experiment traffic to be assigned\
              \ to that variation. The traffic portion is specified in thousandths\
              \ of a percent, so 20,000 for a variation would allocate 20% of the\
              \ experiment traffic to that variation."
      type: object
    ProjectArn:
      maxLength: 2048
      minLength: 0
      pattern: "arn:[^:]*:[^:]*:[^:]*:[^:]*:project/[-a-zA-Z0-9._]*"
      type: string
    ExperimentSchedule:
      description: This structure contains the time and date that Evidently completed
        the analysis of the experiment.
      properties:
        analysisCompleteTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          - description: The time and date that Evidently completed the analysis of
              the experiment.
      type: object
    SegmentArn:
      maxLength: 2048
      minLength: 0
      pattern: "arn:[^:]*:[^:]*:[^:]*:[^:]*:segment/[-a-zA-Z0-9._]*"
      type: string
    ExperimentStatus:
      enum:
      - CREATED
      - UPDATING
      - RUNNING
      - COMPLETED
      - CANCELLED
      type: string
    TreatmentList:
      items:
        $ref: '#/components/schemas/Treatment'
      maxItems: 5
      minItems: 2
      type: array
    ExperimentType:
      enum:
      - aws.evidently.onlineab
      type: string
    ExperimentBaseStat:
      enum:
      - Mean
      type: string
    ExperimentList:
      items:
        $ref: '#/components/schemas/Experiment'
      type: array
    ExperimentReport:
      description: A structure that contains results of an experiment.
      properties:
        content:
          allOf:
          - $ref: '#/components/schemas/JsonValue'
          - description: The content of the report.
        metricName:
          allOf:
          - $ref: '#/components/schemas/CwDimensionSafeName'
          - description: The name of the metric that is analyzed in this experiment
              report.
        reportName:
          allOf:
          - $ref: '#/components/schemas/ExperimentReportName'
          - description: The type of analysis used for this report.
        treatmentName:
          allOf:
          - $ref: '#/components/schemas/TreatmentName'
          - description: The name of the variation that this report pertains to.
      type: object
    ExperimentReportList:
      items:
        $ref: '#/components/schemas/ExperimentReport'
      maxItems: 1000
      minItems: 0
      type: array
    ExperimentReportNameList:
      items:
        $ref: '#/components/schemas/ExperimentReportName'
      maxItems: 5
      minItems: 0
      type: array
    ExperimentResultRequestTypeList:
      items:
        $ref: '#/components/schemas/ExperimentResultRequestType'
      maxItems: 5
      minItems: 0
      type: array
    ExperimentResultResponseType:
      enum:
      - Mean
      - TreatmentEffect
      - ConfidenceIntervalUpperBound
      - ConfidenceIntervalLowerBound
      - PValue
      type: string
    ExperimentResultsData:
      description: A structure that contains experiment results for one metric that
        is monitored in the experiment.
      properties:
        metricName:
          allOf:
          - $ref: '#/components/schemas/CwDimensionSafeName'
          - description: The name of the metric.
        resultStat:
          allOf:
          - $ref: '#/components/schemas/ExperimentResultResponseType'
          - description: The experiment statistic that these results pertain to.
        treatmentName:
          allOf:
          - $ref: '#/components/schemas/TreatmentName'
          - description: "The treatment, or variation, that returned the <code>values</code>\
              \ in this structure."
        values:
          allOf:
          - $ref: '#/components/schemas/DoubleValueList'
          - description: The values for the <code>metricName</code> that were recorded
              in the experiment.
      type: object
    ExperimentResultsDataList:
      items:
        $ref: '#/components/schemas/ExperimentResultsData'
      maxItems: 1000
      minItems: 0
      type: array
    ExperimentStopDesiredState:
      enum:
      - COMPLETED
      - CANCELLED
      type: string
    FeatureArn:
      maxLength: 2048
      minLength: 0
      pattern: "arn:[^:]*:[^:]*:[^:]*:[^:]*:project/[-a-zA-Z0-9._]*/feature/[-a-zA-Z0-9._]*"
      type: string
    FeatureStatus:
      enum:
      - AVAILABLE
      - UPDATING
      type: string
    VariationValueType:
      enum:
      - STRING
      - LONG
      - DOUBLE
      - BOOLEAN
      type: string
    VariationsList:
      items:
        $ref: '#/components/schemas/Variation'
      type: array
    FeatureSummary:
      description: This structure contains information about one Evidently feature
        in your account.
      properties:
        arn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          - description: The ARN of the feature.
        createdTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          - description: The date and time that the feature is created.
        defaultVariation:
          allOf:
          - $ref: '#/components/schemas/VariationName'
          - description: The name of the variation that is used as the default variation.
              The default variation is served to users who are not allocated to any
              ongoing launches or experiments of this feature.
        evaluationRules:
          allOf:
          - $ref: '#/components/schemas/EvaluationRulesList'
          - description: An array of structures that define
        evaluationStrategy:
          allOf:
          - $ref: '#/components/schemas/FeatureEvaluationStrategy'
          - description: "If this value is <code>ALL_RULES</code>, the traffic allocation\
              \ specified by any ongoing launches or experiments is being used. If\
              \ this is <code>DEFAULT_VARIATION</code>, the default variation is being\
              \ served to all users."
        lastUpdatedTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          - description: The date and time that the feature was most recently updated.
        name:
          allOf:
          - $ref: '#/components/schemas/FeatureName'
          - description: The name of the feature.
        project:
          allOf:
          - $ref: '#/components/schemas/ProjectRef'
          - description: The name or ARN of the project that contains the feature.
        status:
          allOf:
          - $ref: '#/components/schemas/FeatureStatus'
          - description: The current state of the feature.
        tags:
          allOf:
          - $ref: '#/components/schemas/TagMap'
          - description: The list of tag keys and values associated with this feature.
      required:
      - arn
      - createdTime
      - evaluationStrategy
      - lastUpdatedTime
      - name
      - status
      type: object
    FeatureSummariesList:
      items:
        $ref: '#/components/schemas/FeatureSummary'
      type: array
    FeatureToVariationMap:
      additionalProperties:
        $ref: '#/components/schemas/VariationName'
      type: object
    GetExperimentRequest:
      properties: {}
      title: GetExperimentRequest
      type: object
    MetricNameList:
      items:
        $ref: '#/components/schemas/CwDimensionSafeName'
      maxItems: 1
      minItems: 1
      type: array
    ResultsPeriod:
      maximum: 90000
      minimum: 300
      type: integer
    TreatmentNameList:
      items:
        $ref: '#/components/schemas/TreatmentName'
      maxItems: 5
      minItems: 1
      type: array
    GetExperimentResultsRequest:
      example:
        metricNames: ""
        reportNames: ""
        resultStats: ""
        period: ""
        baseStat: ""
        startTime: ""
        endTime: ""
        treatmentNames: ""
      properties:
        baseStat:
          allOf:
          - $ref: '#/components/schemas/ExperimentBaseStat'
          - description: "The statistic used to calculate experiment results. Currently\
              \ the only valid value is <code>mean</code>, which uses the mean of\
              \ the collected values as the statistic."
        endTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          - description: "The date and time that the experiment ended, if it is completed.\
              \ This must be no longer than 30 days after the experiment start time."
        metricNames:
          allOf:
          - $ref: '#/components/schemas/MetricNameList'
          - description: The names of the experiment metrics that you want to see
              the results of.
        period:
          allOf:
          - $ref: '#/components/schemas/ResultsPeriod'
          - description: "In seconds, the amount of time to aggregate results together. "
        reportNames:
          allOf:
          - $ref: '#/components/schemas/ExperimentReportNameList'
          - description: "The names of the report types that you want to see. Currently,\
              \ <code>BayesianInference</code> is the only valid value."
        resultStats:
          allOf:
          - $ref: '#/components/schemas/ExperimentResultRequestTypeList'
          - description: "<p>The statistics that you want to see in the returned results.</p>\
              \ <ul> <li> <p> <code>PValue</code> specifies to use p-values for the\
              \ results. A p-value is used in hypothesis testing to measure how often\
              \ you are willing to make a mistake in rejecting the null hypothesis.\
              \ A general practice is to reject the null hypothesis and declare that\
              \ the results are statistically significant when the p-value is less\
              \ than 0.05.</p> </li> <li> <p> <code>ConfidenceInterval</code> specifies\
              \ a confidence interval for the results. The confidence interval represents\
              \ the range of values for the chosen metric that is likely to contain\
              \ the true difference between the <code>baseStat</code> of a variation\
              \ and the baseline. Evidently returns the 95% confidence interval. </p>\
              \ </li> <li> <p> <code>TreatmentEffect</code> is the difference in the\
              \ statistic specified by the <code>baseStat</code> parameter between\
              \ each variation and the default variation. </p> </li> <li> <p> <code>BaseStat</code>\
              \ returns the statistical values collected for the metric for each variation.\
              \ The statistic uses the same statistic specified in the <code>baseStat</code>\
              \ parameter. Therefore, if <code>baseStat</code> is <code>mean</code>,\
              \ this returns the mean of the values collected for each variation.</p>\
              \ </li> </ul>"
        startTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          - description: The date and time that the experiment started.
        treatmentNames:
          allOf:
          - $ref: '#/components/schemas/TreatmentNameList'
          - description: The names of the experiment treatments that you want to see
              the results for.
      required:
      - metricNames
      - treatmentNames
      title: GetExperimentResultsRequest
      type: object
    TimestampList:
      items:
        $ref: '#/components/schemas/Timestamp'
      maxItems: 100800
      minItems: 0
      type: array
    GetFeatureRequest:
      properties: {}
      title: GetFeatureRequest
      type: object
    GetLaunchRequest:
      properties: {}
      title: GetLaunchRequest
      type: object
    GetProjectRequest:
      properties: {}
      title: GetProjectRequest
      type: object
    GetSegmentRequest:
      properties: {}
      title: GetSegmentRequest
      type: object
    GroupName:
      maxLength: 127
      minLength: 1
      pattern: "^[-a-zA-Z0-9._]*$"
      type: string
    GroupToWeightMap:
      additionalProperties:
        $ref: '#/components/schemas/SplitWeight'
      maxProperties: 5
      minProperties: 0
      type: object
    Integer:
      type: integer
    JsonPath:
      maxLength: 256
      minLength: 1
      pattern: .*
      type: string
    LaunchArn:
      maxLength: 2048
      minLength: 0
      pattern: "arn:[^:]*:[^:]*:[^:]*:[^:]*:project/[-a-zA-Z0-9._]*/launch/[-a-zA-Z0-9._]*"
      type: string
    LaunchExecution:
      description: This structure contains information about the start and end times
        of the launch.
      properties:
        endedTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          - description: The date and time that the launch ended.
        startedTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          - description: The date and time that the launch started.
      type: object
    LaunchGroupList:
      items:
        $ref: '#/components/schemas/LaunchGroup'
      type: array
    MetricMonitorList:
      items:
        $ref: '#/components/schemas/MetricMonitor'
      maxItems: 3
      minItems: 0
      type: array
    ScheduledSplitsLaunchDefinition:
      description: An array of structures that define the traffic allocation percentages
        among the feature variations during each step of a launch. This also defines
        the start time of each step.
      properties:
        steps:
          allOf:
          - $ref: '#/components/schemas/ScheduledStepList'
          - description: An array of structures that define the traffic allocation
              percentages among the feature variations during each step of the launch.
              This also defines the start time of each step.
      type: object
    LaunchStatus:
      enum:
      - CREATED
      - UPDATING
      - RUNNING
      - COMPLETED
      - CANCELLED
      type: string
    LaunchType:
      enum:
      - aws.evidently.splits
      type: string
    LaunchGroup:
      description: A structure that defines one launch group in a launch. A launch
        group is a variation of the feature that you are including in the launch.
      properties:
        description:
          allOf:
          - $ref: '#/components/schemas/Description'
          - description: A description of the launch group.
        featureVariations:
          allOf:
          - $ref: '#/components/schemas/FeatureToVariationMap'
          - description: The feature variation for this launch group. This is a key-value
              pair.
        name:
          allOf:
          - $ref: '#/components/schemas/GroupName'
          - description: The name of the launch group.
      required:
      - featureVariations
      - name
      type: object
    LaunchStopDesiredState:
      enum:
      - COMPLETED
      - CANCELLED
      type: string
    LaunchesList:
      items:
        $ref: '#/components/schemas/Launch'
      type: array
    MaxExperiments:
      maximum: 100
      minimum: 1
      type: integer
    NextToken:
      maxLength: 8192
      minLength: 1
      pattern: .*
      type: string
    ListExperimentsRequest:
      properties: {}
      title: ListExperimentsRequest
      type: object
    MaxFeatures:
      maximum: 100
      minimum: 1
      type: integer
    ListFeaturesRequest:
      properties: {}
      title: ListFeaturesRequest
      type: object
    MaxLaunches:
      maximum: 100
      minimum: 1
      type: integer
    ListLaunchesRequest:
      properties: {}
      title: ListLaunchesRequest
      type: object
    MaxProjects:
      maximum: 50
      minimum: 1
      type: integer
    ListProjectsRequest:
      properties: {}
      title: ListProjectsRequest
      type: object
    ProjectSummariesList:
      items:
        $ref: '#/components/schemas/ProjectSummary'
      type: array
    MaxReferences:
      maximum: 100
      minimum: 1
      type: integer
    SegmentReferenceResourceType:
      enum:
      - EXPERIMENT
      - LAUNCH
      type: string
    ListSegmentReferencesRequest:
      properties: {}
      title: ListSegmentReferencesRequest
      type: object
    RefResourceList:
      items:
        $ref: '#/components/schemas/RefResource'
      type: array
    MaxSegments:
      maximum: 50
      minimum: 1
      type: integer
    ListSegmentsRequest:
      properties: {}
      title: ListSegmentsRequest
      type: object
    SegmentList:
      items:
        $ref: '#/components/schemas/Segment'
      type: array
    ListTagsForResourceRequest:
      properties: {}
      title: ListTagsForResourceRequest
      type: object
    Long:
      type: integer
    MetricUnitLabel:
      maxLength: 256
      minLength: 1
      pattern: .*
      type: string
    MetricDefinition:
      description: This structure defines a metric that is being used to evaluate
        the variations during a launch or experiment.
      properties:
        entityIdKey:
          allOf:
          - $ref: '#/components/schemas/JsonPath'
          - description: "The entity, such as a user or session, that does an action\
              \ that causes a metric value to be recorded."
        eventPattern:
          allOf:
          - $ref: '#/components/schemas/JsonValue'
          - description: "<p>The EventBridge event pattern that defines how the metric\
              \ is recorded.</p> <p>For more information about EventBridge event patterns,\
              \ see <a href=\"https://docs.aws.amazon.com/eventbridge/latest/userguide/eb-event-patterns.html\"\
              >Amazon EventBridge event patterns</a>.</p>"
        name:
          allOf:
          - $ref: '#/components/schemas/CwDimensionSafeName'
          - description: The name of the metric.
        unitLabel:
          allOf:
          - $ref: '#/components/schemas/MetricUnitLabel'
          - description: The label for the units that the metric is measuring.
        valueKey:
          allOf:
          - $ref: '#/components/schemas/JsonPath'
          - description: The value that is tracked to produce the metric.
      type: object
    MetricDefinitionConfigEventPatternString:
      maxLength: 1024
      minLength: 0
      type: string
    MetricDefinitionConfig:
      description: This structure defines a metric that you want to use to evaluate
        the variations during a launch or experiment.
      properties:
        entityIdKey:
          allOf:
          - $ref: '#/components/schemas/JsonPath'
          - description: "The entity, such as a user or session, that does an action\
              \ that causes a metric value to be recorded. An example is <code>userDetails.userID</code>."
        eventPattern:
          allOf:
          - $ref: '#/components/schemas/MetricDefinitionConfigEventPatternString'
          - description: "<p>The EventBridge event pattern that defines how the metric\
              \ is recorded.</p> <p>For more information about EventBridge event patterns,\
              \ see <a href=\"https://docs.aws.amazon.com/eventbridge/latest/userguide/eb-event-patterns.html\"\
              >Amazon EventBridge event patterns</a>.</p>"
        name:
          allOf:
          - $ref: '#/components/schemas/CwDimensionSafeName'
          - description: A name for the metric.
        unitLabel:
          allOf:
          - $ref: '#/components/schemas/MetricUnitLabel'
          - description: A label for the units that the metric is measuring.
        valueKey:
          allOf:
          - $ref: '#/components/schemas/JsonPath'
          - description: The value that is tracked to produce the metric.
      required:
      - entityIdKey
      - name
      - valueKey
      type: object
    MetricGoal:
      description: A structure that tells Evidently whether higher or lower values
        are desired for a metric that is used in an experiment.
      properties:
        desiredChange:
          allOf:
          - $ref: '#/components/schemas/ChangeDirectionEnum'
          - description: <p> <code>INCREASE</code> means that a variation with a higher
              number for this metric is performing better.</p> <p> <code>DECREASE</code>
              means that a variation with a lower number for this metric is performing
              better.</p>
        metricDefinition:
          $ref: '#/components/schemas/MetricGoal_metricDefinition'
      required:
      - metricDefinition
      type: object
    MetricMonitor:
      description: A structure that defines a metric to be used to monitor performance
        of the variations during a launch.
      properties:
        metricDefinition:
          $ref: '#/components/schemas/MetricMonitor_metricDefinition'
      required:
      - metricDefinition
      type: object
    PrimitiveBoolean:
      type: boolean
    ProjectAppConfigResource:
      description: This is a structure that defines the configuration of how your
        application integrates with AppConfig to run client-side evaluation.
      properties:
        applicationId:
          allOf:
          - $ref: '#/components/schemas/AppConfigResourceId'
          - description: 'The ID of the AppConfig application to use for client-side
              evaluation. '
        configurationProfileId:
          allOf:
          - $ref: '#/components/schemas/AppConfigResourceId'
          - description: 'The ID of the AppConfig profile to use for client-side evaluation. '
        environmentId:
          allOf:
          - $ref: '#/components/schemas/AppConfigResourceId'
          - description: The ID of the AppConfig environment to use for client-side
              evaluation. This must be an environment that is within the application
              that you specify for <code>applicationId</code>.
      required:
      - applicationId
      - configurationProfileId
      - environmentId
      type: object
    ProjectDataDelivery:
      description: A structure that contains information about where Evidently is
        to store evaluation events for longer term storage.
      properties:
        cloudWatchLogs:
          $ref: '#/components/schemas/ProjectDataDelivery_cloudWatchLogs'
        s3Destination:
          $ref: '#/components/schemas/ProjectDataDelivery_s3Destination'
      type: object
    ProjectStatus:
      enum:
      - AVAILABLE
      - UPDATING
      type: string
    S3Destination:
      description: "If the project stores evaluation events in an Amazon S3 bucket,\
        \ this structure stores the bucket name and bucket prefix."
      properties:
        bucket:
          allOf:
          - $ref: '#/components/schemas/S3BucketSafeName'
          - description: The name of the bucket in which Evidently stores evaluation
              events.
        prefix:
          allOf:
          - $ref: '#/components/schemas/S3PrefixSafeName'
          - description: The bucket prefix in which Evidently stores evaluation events.
      type: object
    ProjectSummary:
      description: A structure that contains configuration information about an Evidently
        project.
      properties:
        activeExperimentCount:
          allOf:
          - $ref: '#/components/schemas/Long'
          - description: The number of experiments currently in the project.
        activeLaunchCount:
          allOf:
          - $ref: '#/components/schemas/Long'
          - description: The number of ongoing launches currently in the project.
        arn:
          allOf:
          - $ref: '#/components/schemas/ProjectArn'
          - description: The name or ARN of the project.
        createdTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          - description: The date and time that the project is created.
        description:
          allOf:
          - $ref: '#/components/schemas/Description'
          - description: The description of the project.
        experimentCount:
          allOf:
          - $ref: '#/components/schemas/Long'
          - description: The number of experiments currently in the project.
        featureCount:
          allOf:
          - $ref: '#/components/schemas/Long'
          - description: The number of features currently in the project.
        lastUpdatedTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          - description: The date and time that the project was most recently updated.
        launchCount:
          allOf:
          - $ref: '#/components/schemas/Long'
          - description: "The number of launches currently in the project, including\
              \ launches that are ongoing, completed, and not started yet."
        name:
          allOf:
          - $ref: '#/components/schemas/ProjectName'
          - description: The name of the project.
        status:
          allOf:
          - $ref: '#/components/schemas/ProjectStatus'
          - description: The current state of the project.
        tags:
          allOf:
          - $ref: '#/components/schemas/TagMap'
          - description: The list of tag keys and values associated with this project.
      required:
      - arn
      - createdTime
      - lastUpdatedTime
      - name
      - status
      type: object
    PutProjectEventsRequest:
      example:
        events: ""
      properties:
        events:
          allOf:
          - $ref: '#/components/schemas/EventList'
          - description: An array of event structures that contain the performance
              data that is being sent to Evidently.
      required:
      - events
      title: PutProjectEventsRequest
      type: object
    PutProjectEventsResultEntryList:
      items:
        $ref: '#/components/schemas/PutProjectEventsResultEntry'
      type: array
    Uuid:
      maxLength: 36
      minLength: 36
      pattern: "[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12}"
      type: string
    PutProjectEventsResultEntry:
      description: "A structure that contains Evidently's response to the sent events,\
        \ including an event ID and error codes, if any. "
      properties:
        errorCode:
          allOf:
          - $ref: '#/components/schemas/ErrorCodeEnum'
          - description: "If the <code>PutProjectEvents</code> operation has an error,\
              \ the error code is returned here."
        errorMessage:
          allOf:
          - $ref: '#/components/schemas/ErrorMessage'
          - description: "If the <code>PutProjectEvents</code> operation has an error,\
              \ the error message is returned here."
        eventId:
          allOf:
          - $ref: '#/components/schemas/Uuid'
          - description: 'A unique ID assigned to this <code>PutProjectEvents</code>
              operation. '
      type: object
    RefResource:
      description: 'A structure that contains information about one experiment or
        launch that uses the specified segment. '
      properties:
        arn:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The ARN of the experiment or launch.
        endTime:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The day and time that this experiment or launch ended.
        lastUpdatedOn:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The day and time that this experiment or launch was most
              recently updated.
        name:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The name of the experiment or launch.
        startTime:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The day and time that this experiment or launch started.
        status:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The status of the experiment or launch.
        type:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: Specifies whether the resource that this structure contains
              information about is an experiment or a launch.
      required:
      - name
      - type
      type: object
    SegmentOverridesList:
      items:
        $ref: '#/components/schemas/SegmentOverride'
      maxItems: 6
      minItems: 0
      type: array
    ScheduledSplit:
      description: "This structure defines the traffic allocation percentages among\
        \ the feature variations during one step of a launch, and the start time of\
        \ that step."
      properties:
        groupWeights:
          allOf:
          - $ref: '#/components/schemas/GroupToWeightMap'
          - description: "<p>The traffic allocation percentages among the feature\
              \ variations during one step of a launch. This is a set of key-value\
              \ pairs. The keys are variation names. The values represent the percentage\
              \ of traffic to allocate to that variation during this step.</p> <p>The\
              \ values is expressed in thousandths of a percent, so assigning a weight\
              \ of 50000 assigns 50% of traffic to that variation.</p> <p>If the sum\
              \ of the weights for all the variations in a segment override does not\
              \ add up to 100,000, then the remaining traffic that matches this segment\
              \ is not assigned by this segment override, and instead moves on to\
              \ the next segment override or the default traffic split.</p>"
        segmentOverrides:
          allOf:
          - $ref: '#/components/schemas/SegmentOverridesList'
          - description: "<p>Use this parameter to specify different traffic splits\
              \ for one or more audience <i>segments</i>. A segment is a portion of\
              \ your audience that share one or more characteristics. Examples could\
              \ be Chrome browser users, users in Europe, or Firefox browser users\
              \ in Europe who also fit other criteria that your application collects,\
              \ such as age.</p> <p>This parameter is an array of up to six segment\
              \ override objects. Each of these objects specifies a segment that you\
              \ have already created, and defines the traffic split for that segment.</p>"
        startTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          - description: The date and time that this step of the launch starts.
      required:
      - startTime
      type: object
    ScheduledSplitConfig:
      description: "This structure defines the traffic allocation percentages among\
        \ the feature variations during one step of a launch, and the start time of\
        \ that step."
      properties:
        groupWeights:
          allOf:
          - $ref: '#/components/schemas/GroupToWeightMap'
          - description: "<p>The traffic allocation percentages among the feature\
              \ variations during one step of a launch. This is a set of key-value\
              \ pairs. The keys are variation names. The values represent the percentage\
              \ of traffic to allocate to that variation during this step.</p> <p>The\
              \ values is expressed in thousandths of a percent, so assigning a weight\
              \ of 50000 assigns 50% of traffic to that variation.</p> <p>If the sum\
              \ of the weights for all the variations in a segment override does not\
              \ add up to 100,000, then the remaining traffic that matches this segment\
              \ is not assigned by this segment override, and instead moves on to\
              \ the next segment override or the default traffic split.</p>"
        segmentOverrides:
          allOf:
          - $ref: '#/components/schemas/SegmentOverridesList'
          - description: "<p>Use this parameter to specify different traffic splits\
              \ for one or more audience <i>segments</i>. A segment is a portion of\
              \ your audience that share one or more characteristics. Examples could\
              \ be Chrome browser users, users in Europe, or Firefox browser users\
              \ in Europe who also fit other criteria that your application collects,\
              \ such as age.</p> <p>This parameter is an array of up to six segment\
              \ override objects. Each of these objects specifies a segment that you\
              \ have already created, and defines the traffic split for that segment.</p>"
        startTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          - description: The date and time that this step of the launch starts.
      required:
      - groupWeights
      - startTime
      type: object
    ScheduledStepList:
      items:
        $ref: '#/components/schemas/ScheduledSplit'
      maxItems: 6
      minItems: 1
      type: array
    SegmentOverride:
      description: "This structure specifies a segment that you have already created,\
        \ and defines the traffic split for that segment to be used in a launch."
      properties:
        evaluationOrder:
          allOf:
          - $ref: '#/components/schemas/Long'
          - description: "A number indicating the order to use to evaluate segment\
              \ overrides, if there are more than one. Segment overrides with lower\
              \ numbers are evaluated first."
        segment:
          allOf:
          - $ref: '#/components/schemas/SegmentRef'
          - description: The ARN of the segment to use.
        weights:
          allOf:
          - $ref: '#/components/schemas/GroupToWeightMap'
          - description: "The traffic allocation percentages among the feature variations\
              \ to assign to this segment. This is a set of key-value pairs. The keys\
              \ are variation names. The values represent the amount of traffic to\
              \ allocate to that variation for this segment. This is expressed in\
              \ thousandths of a percent, so a weight of 50000 represents 50% of traffic."
      required:
      - evaluationOrder
      - segment
      - weights
      type: object
    StartExperimentRequest:
      example:
        analysisCompleteTime: ""
      properties:
        analysisCompleteTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          - description: The date and time to end the experiment. This must be no
              more than 30 days after the experiment starts.
      required:
      - analysisCompleteTime
      title: StartExperimentRequest
      type: object
    StartLaunchRequest:
      properties: {}
      title: StartLaunchRequest
      type: object
    StopExperimentRequest:
      example:
        desiredState: ""
        reason: ""
      properties:
        desiredState:
          allOf:
          - $ref: '#/components/schemas/ExperimentStopDesiredState'
          - description: Specify whether the experiment is to be considered <code>COMPLETED</code>
              or <code>CANCELLED</code> after it stops.
        reason:
          allOf:
          - $ref: '#/components/schemas/Description'
          - description: A string that describes why you are stopping the experiment.
      title: StopExperimentRequest
      type: object
    StopLaunchRequest:
      example:
        desiredState: ""
        reason: ""
      properties:
        desiredState:
          allOf:
          - $ref: '#/components/schemas/LaunchStopDesiredState'
          - description: Specify whether to consider the launch as <code>COMPLETED</code>
              or <code>CANCELLED</code> after it stops.
        reason:
          allOf:
          - $ref: '#/components/schemas/Description'
          - description: A string that describes why you are stopping the launch.
      title: StopLaunchRequest
      type: object
    TagKeyList:
      items:
        $ref: '#/components/schemas/TagKey'
      maxItems: 50
      minItems: 0
      type: array
    TagResourceRequest:
      example:
        tags: ""
      properties:
        tags:
          allOf:
          - $ref: '#/components/schemas/TagMap'
          - description: The list of key-value pairs to associate with the resource.
      required:
      - tags
      title: TagResourceRequest
      type: object
    TestSegmentPatternRequest:
      example:
        payload: ""
        pattern: ""
      properties:
        pattern:
          allOf:
          - $ref: '#/components/schemas/SegmentPattern'
          - description: The pattern to test.
        payload:
          allOf:
          - $ref: '#/components/schemas/JsonValue'
          - description: A sample <code>evaluationContext</code> JSON block to test
              against the specified pattern.
      required:
      - pattern
      - payload
      title: TestSegmentPatternRequest
      type: object
    Treatment:
      description: A structure that defines one treatment in an experiment. A treatment
        is a variation of the feature that you are including in the experiment.
      properties:
        description:
          allOf:
          - $ref: '#/components/schemas/Description'
          - description: The description of the treatment.
        featureVariations:
          allOf:
          - $ref: '#/components/schemas/FeatureToVariationMap'
          - description: "The feature variation used for this treatment. This is a\
              \ key-value pair. The key is the feature name, and the value is the\
              \ variation name."
        name:
          allOf:
          - $ref: '#/components/schemas/TreatmentName'
          - description: The name of this treatment.
      required:
      - name
      type: object
    UntagResourceRequest:
      properties: {}
      title: UntagResourceRequest
      type: object
    UpdateExperimentRequest:
      example:
        segment: ""
        samplingRate: ""
        description: ""
        removeSegment: ""
        metricGoals: ""
        onlineAbConfig:
          controlTreatmentName: ""
          treatmentWeights: ""
        treatments: ""
        randomizationSalt: ""
      properties:
        description:
          allOf:
          - $ref: '#/components/schemas/Description'
          - description: An optional description of the experiment.
        metricGoals:
          allOf:
          - $ref: '#/components/schemas/MetricGoalConfigList'
          - description: "An array of structures that defines the metrics used for\
              \ the experiment, and whether a higher or lower value for each metric\
              \ is the goal."
        onlineAbConfig:
          $ref: '#/components/schemas/UpdateExperimentRequest_onlineAbConfig'
        randomizationSalt:
          allOf:
          - $ref: '#/components/schemas/RandomizationSalt'
          - description: "When Evidently assigns a particular user session to an experiment,\
              \ it must use a randomization ID to determine which variation the user\
              \ session is served. This randomization ID is a combination of the entity\
              \ ID and <code>randomizationSalt</code>. If you omit <code>randomizationSalt</code>,\
              \ Evidently uses the experiment name as the <code>randomizationSalt</code>."
        removeSegment:
          allOf:
          - $ref: '#/components/schemas/PrimitiveBoolean'
          - description: Removes a segment from being used in an experiment. You can't
              use this parameter if the experiment is currently running.
        samplingRate:
          allOf:
          - $ref: '#/components/schemas/SplitWeight'
          - description: "<p>The portion of the available audience that you want to\
              \ allocate to this experiment, in thousandths of a percent. The available\
              \ audience is the total audience minus the audience that you have allocated\
              \ to overrides or current launches of this feature.</p> <p>This is represented\
              \ in thousandths of a percent. For example, specify 20,000 to allocate\
              \ 20% of the available audience.</p>"
        segment:
          allOf:
          - $ref: '#/components/schemas/SegmentRef'
          - description: "Adds an audience <i>segment</i> to an experiment. When a\
              \ segment is used in an experiment, only user sessions that match the\
              \ segment pattern are used in the experiment. You can't use this parameter\
              \ if the experiment is currently running."
        treatments:
          allOf:
          - $ref: '#/components/schemas/TreatmentConfigList'
          - description: An array of structures that define the variations being tested
              in the experiment.
      title: UpdateExperimentRequest
      type: object
    VariationNameList:
      items:
        $ref: '#/components/schemas/VariationName'
      maxItems: 5
      minItems: 0
      type: array
    UpdateFeatureRequest:
      example:
        defaultVariation: ""
        addOrUpdateVariations: ""
        evaluationStrategy: ""
        description: ""
        entityOverrides: ""
        removeVariations: ""
      properties:
        addOrUpdateVariations:
          allOf:
          - $ref: '#/components/schemas/VariationConfigsList'
          - description: "To update variation configurations for this feature, or\
              \ add new ones, specify this structure. In this array, include any variations\
              \ that you want to add or update. If the array includes a variation\
              \ name that already exists for this feature, it is updated. If it includes\
              \ a new variation name, it is added as a new variation."
        defaultVariation:
          allOf:
          - $ref: '#/components/schemas/VariationName'
          - description: The name of the variation to use as the default variation.
              The default variation is served to users who are not allocated to any
              ongoing launches or experiments of this feature.
        description:
          allOf:
          - $ref: '#/components/schemas/Description'
          - description: An optional description of the feature.
        entityOverrides:
          allOf:
          - $ref: '#/components/schemas/EntityOverrideMap'
          - description: "<p>Specified users that should always be served a specific\
              \ variation of a feature. Each user is specified by a key-value pair\
              \ . For each key, specify a user by entering their user ID, account\
              \ ID, or some other identifier. For the value, specify the name of the\
              \ variation that they are to be served.</p> <p>This parameter is limited\
              \ to 2500 overrides or a total of 40KB. The 40KB limit includes an overhead\
              \ of 6 bytes per override.</p>"
        evaluationStrategy:
          allOf:
          - $ref: '#/components/schemas/FeatureEvaluationStrategy'
          - description: Specify <code>ALL_RULES</code> to activate the traffic allocation
              specified by any ongoing launches or experiments. Specify <code>DEFAULT_VARIATION</code>
              to serve the default variation to all users instead.
        removeVariations:
          allOf:
          - $ref: '#/components/schemas/VariationNameList'
          - description: "<p>Removes a variation from the feature. If the variation\
              \ you specify doesn't exist, then this makes no change and does not\
              \ report an error.</p> <p>This operation fails if you try to remove\
              \ a variation that is part of an ongoing launch or experiment.</p>"
      title: UpdateFeatureRequest
      type: object
    UpdateLaunchRequest:
      example:
        metricMonitors: ""
        description: ""
        groups: ""
        scheduledSplitsConfig:
          steps: ""
        randomizationSalt: ""
      properties:
        description:
          allOf:
          - $ref: '#/components/schemas/Description'
          - description: An optional description for the launch.
        groups:
          allOf:
          - $ref: '#/components/schemas/LaunchGroupConfigList'
          - description: An array of structures that contains the feature and variations
              that are to be used for the launch.
        metricMonitors:
          allOf:
          - $ref: '#/components/schemas/MetricMonitorConfigList'
          - description: An array of structures that define the metrics that will
              be used to monitor the launch performance.
        randomizationSalt:
          allOf:
          - $ref: '#/components/schemas/RandomizationSalt'
          - description: "When Evidently assigns a particular user session to a launch,\
              \ it must use a randomization ID to determine which variation the user\
              \ session is served. This randomization ID is a combination of the entity\
              \ ID and <code>randomizationSalt</code>. If you omit <code>randomizationSalt</code>,\
              \ Evidently uses the launch name as the <code>randomizationSalt</code>."
        scheduledSplitsConfig:
          $ref: '#/components/schemas/CreateLaunchRequest_scheduledSplitsConfig'
      title: UpdateLaunchRequest
      type: object
    UpdateProjectDataDeliveryRequest:
      example:
        s3Destination:
          bucket: ""
          prefix: ""
        cloudWatchLogs:
          logGroup: ""
      properties:
        cloudWatchLogs:
          $ref: '#/components/schemas/UpdateProjectDataDeliveryRequest_cloudWatchLogs'
        s3Destination:
          $ref: '#/components/schemas/UpdateProjectDataDeliveryRequest_s3Destination'
      title: UpdateProjectDataDeliveryRequest
      type: object
    UpdateProjectRequest:
      example:
        description: ""
        appConfigResource:
          environmentId: ""
          applicationId: ""
      properties:
        appConfigResource:
          $ref: '#/components/schemas/UpdateProjectRequest_appConfigResource'
        description:
          allOf:
          - $ref: '#/components/schemas/Description'
          - description: An optional description of the project.
      title: UpdateProjectRequest
      type: object
    VariableValueLongValueLong:
      maximum: 9007199254740991
      minimum: -9007199254740991
      type: integer
    VariableValueStringValueString:
      maxLength: 512
      minLength: 0
      type: string
    Variation:
      description: This structure contains the name and variation value of one variation
        of a feature.
      properties:
        name:
          allOf:
          - $ref: '#/components/schemas/VariationName'
          - description: The name of the variation.
        value:
          $ref: '#/components/schemas/VariationConfig_value'
      type: object
    BatchEvaluateFeature_request:
      properties:
        requests:
          description: "An array of structures, where each structure assigns a feature\
            \ variation to one user session."
          items:
            $ref: '#/components/schemas/EvaluationRequest'
          maxItems: 20
          minItems: 1
          type: array
      required:
      - requests
      type: object
    CreateExperiment_request_onlineAbConfig:
      description: A structure that contains the configuration of which variation
        to use as the "control" version. The "control" version is used for comparison
        with other variations. This structure also specifies how much experiment traffic
        is allocated to each variation.
      properties:
        controlTreatmentName:
          allOf:
          - $ref: '#/components/schemas/TreatmentName'
          - description: The name of the variation that is to be the default variation
              that the other variations are compared to.
        treatmentWeights:
          allOf:
          - $ref: '#/components/schemas/TreatmentToWeightMap'
          - description: "A set of key-value pairs. The keys are variation names,\
              \ and the values are the portion of experiment traffic to be assigned\
              \ to that variation. Specify the traffic portion in thousandths of a\
              \ percent, so 20,000 for a variation would allocate 20% of the experiment\
              \ traffic to that variation."
      type: object
    CreateExperiment_request:
      properties:
        description:
          description: An optional description of the experiment.
          maxLength: 160
          minLength: 0
          pattern: .*
          type: string
        metricGoals:
          description: "An array of structures that defines the metrics used for the\
            \ experiment, and whether a higher or lower value for each metric is the\
            \ goal."
          items:
            $ref: '#/components/schemas/MetricGoalConfig'
          maxItems: 3
          minItems: 1
          type: array
        name:
          description: A name for the new experiment.
          maxLength: 127
          minLength: 1
          pattern: "^[-a-zA-Z0-9._]*$"
          type: string
        onlineAbConfig:
          $ref: '#/components/schemas/CreateExperiment_request_onlineAbConfig'
        randomizationSalt:
          description: "When Evidently assigns a particular user session to an experiment,\
            \ it must use a randomization ID to determine which variation the user\
            \ session is served. This randomization ID is a combination of the entity\
            \ ID and <code>randomizationSalt</code>. If you omit <code>randomizationSalt</code>,\
            \ Evidently uses the experiment name as the <code>randomizationSalt</code>."
          maxLength: 127
          minLength: 0
          pattern: .*
          type: string
        samplingRate:
          description: "<p>The portion of the available audience that you want to\
            \ allocate to this experiment, in thousandths of a percent. The available\
            \ audience is the total audience minus the audience that you have allocated\
            \ to overrides or current launches of this feature.</p> <p>This is represented\
            \ in thousandths of a percent. For example, specify 10,000 to allocate\
            \ 10% of the available audience.</p>"
          maximum: 100000
          minimum: 0
          type: integer
        segment:
          description: "Specifies an audience <i>segment</i> to use in the experiment.\
            \ When a segment is used in an experiment, only user sessions that match\
            \ the segment pattern are used in the experiment."
          maxLength: 2048
          minLength: 0
          pattern: "(^[-a-zA-Z0-9._]*$)|(arn:[^:]*:[^:]*:[^:]*:[^:]*:segment/[-a-zA-Z0-9._]*)"
          type: string
        tags:
          additionalProperties:
            $ref: '#/components/schemas/TagValue'
          description: "<p>Assigns one or more tags (key-value pairs) to the experiment.</p>\
            \ <p>Tags can help you organize and categorize your resources. You can\
            \ also use them to scope user permissions by granting a user permission\
            \ to access or change only resources with certain tag values.</p> <p>Tags\
            \ don't have any semantic meaning to Amazon Web Services and are interpreted\
            \ strictly as strings of characters.</p> <p>You can associate as many\
            \ as 50 tags with an experiment.</p> <p>For more information, see <a href=\"\
            https://docs.aws.amazon.com/general/latest/gr/aws_tagging.html\">Tagging\
            \ Amazon Web Services resources</a>.</p>"
          type: object
        treatments:
          description: An array of structures that describe the configuration of each
            feature variation used in the experiment.
          items:
            $ref: '#/components/schemas/TreatmentConfig'
          maxItems: 5
          minItems: 0
          type: array
      required:
      - metricGoals
      - name
      - treatments
      type: object
    CreateFeature_request:
      properties:
        defaultVariation:
          description: "<p>The name of the variation to use as the default variation.\
            \ The default variation is served to users who are not allocated to any\
            \ ongoing launches or experiments of this feature.</p> <p>This variation\
            \ must also be listed in the <code>variations</code> structure.</p> <p>If\
            \ you omit <code>defaultVariation</code>, the first variation listed in\
            \ the <code>variations</code> structure is used as the default variation.</p>"
          maxLength: 127
          minLength: 1
          pattern: "^[-a-zA-Z0-9._]*$"
          type: string
        description:
          description: An optional description of the feature.
          maxLength: 160
          minLength: 0
          pattern: .*
          type: string
        entityOverrides:
          additionalProperties:
            $ref: '#/components/schemas/VariationName'
          description: "<p>Specify users that should always be served a specific variation\
            \ of a feature. Each user is specified by a key-value pair . For each\
            \ key, specify a user by entering their user ID, account ID, or some other\
            \ identifier. For the value, specify the name of the variation that they\
            \ are to be served.</p> <p>This parameter is limited to 2500 overrides\
            \ or a total of 40KB. The 40KB limit includes an overhead of 6 bytes per\
            \ override.</p>"
          maxProperties: 2500
          minProperties: 0
          type: object
        evaluationStrategy:
          description: Specify <code>ALL_RULES</code> to activate the traffic allocation
            specified by any ongoing launches or experiments. Specify <code>DEFAULT_VARIATION</code>
            to serve the default variation to all users instead.
          enum:
          - ALL_RULES
          - DEFAULT_VARIATION
          type: string
        name:
          description: The name for the new feature.
          maxLength: 127
          minLength: 1
          pattern: "^[-a-zA-Z0-9._]*$"
          type: string
        tags:
          additionalProperties:
            $ref: '#/components/schemas/TagValue'
          description: "<p>Assigns one or more tags (key-value pairs) to the feature.</p>\
            \ <p>Tags can help you organize and categorize your resources. You can\
            \ also use them to scope user permissions by granting a user permission\
            \ to access or change only resources with certain tag values.</p> <p>Tags\
            \ don't have any semantic meaning to Amazon Web Services and are interpreted\
            \ strictly as strings of characters.</p> <p>You can associate as many\
            \ as 50 tags with a feature.</p> <p>For more information, see <a href=\"\
            https://docs.aws.amazon.com/general/latest/gr/aws_tagging.html\">Tagging\
            \ Amazon Web Services resources</a>.</p>"
          type: object
        variations:
          description: An array of structures that contain the configuration of the
            feature's different variations.
          items:
            $ref: '#/components/schemas/VariationConfig'
          maxItems: 5
          minItems: 1
          type: array
      required:
      - name
      - variations
      type: object
    CreateLaunch_request_scheduledSplitsConfig:
      description: An array of structures that define the traffic allocation percentages
        among the feature variations during each step of a launch. This also defines
        the start time of each step.
      properties:
        steps:
          allOf:
          - $ref: '#/components/schemas/ScheduledSplitConfigList'
          - description: An array of structures that define the traffic allocation
              percentages among the feature variations during each step of the launch.
              This also defines the start time of each step.
      type: object
    CreateLaunch_request:
      properties:
        description:
          description: An optional description for the launch.
          maxLength: 160
          minLength: 0
          pattern: .*
          type: string
        groups:
          description: An array of structures that contains the feature and variations
            that are to be used for the launch.
          items:
            $ref: '#/components/schemas/LaunchGroupConfig'
          maxItems: 5
          minItems: 1
          type: array
        metricMonitors:
          description: An array of structures that define the metrics that will be
            used to monitor the launch performance.
          items:
            $ref: '#/components/schemas/MetricMonitorConfig'
          maxItems: 3
          minItems: 0
          type: array
        name:
          description: The name for the new launch.
          maxLength: 127
          minLength: 1
          pattern: "^[-a-zA-Z0-9._]*$"
          type: string
        randomizationSalt:
          description: "When Evidently assigns a particular user session to a launch,\
            \ it must use a randomization ID to determine which variation the user\
            \ session is served. This randomization ID is a combination of the entity\
            \ ID and <code>randomizationSalt</code>. If you omit <code>randomizationSalt</code>,\
            \ Evidently uses the launch name as the <code>randomizationSalt</code>."
          maxLength: 127
          minLength: 0
          pattern: .*
          type: string
        scheduledSplitsConfig:
          $ref: '#/components/schemas/CreateLaunch_request_scheduledSplitsConfig'
        tags:
          additionalProperties:
            $ref: '#/components/schemas/TagValue'
          description: "<p>Assigns one or more tags (key-value pairs) to the launch.</p>\
            \ <p>Tags can help you organize and categorize your resources. You can\
            \ also use them to scope user permissions by granting a user permission\
            \ to access or change only resources with certain tag values.</p> <p>Tags\
            \ don't have any semantic meaning to Amazon Web Services and are interpreted\
            \ strictly as strings of characters.</p> <p>You can associate as many\
            \ as 50 tags with a launch.</p> <p>For more information, see <a href=\"\
            https://docs.aws.amazon.com/general/latest/gr/aws_tagging.html\">Tagging\
            \ Amazon Web Services resources</a>.</p>"
          type: object
      required:
      - groups
      - name
      type: object
    CreateProject_request_appConfigResource:
      description: <p>Use this parameter to configure client-side evaluation for your
        project. Client-side evaluation allows your application to assign variations
        to user sessions locally instead of by calling the <a href="https://docs.aws.amazon.com/cloudwatchevidently/latest/APIReference/API_EvaluateFeature.html">EvaluateFeature</a>
        operation to assign the variations. This mitigates the latency and availability
        risks that come with an API call.</p> <p> <code>ProjectAppConfigResource</code>
        is a structure that defines the configuration of how your application integrates
        with AppConfig to run client-side evaluation.</p>
      properties:
        applicationId:
          allOf:
          - $ref: '#/components/schemas/AppConfigResourceId'
          - description: 'The ID of the AppConfig application to use for client-side
              evaluation. '
        environmentId:
          allOf:
          - $ref: '#/components/schemas/AppConfigResourceId'
          - description: The ID of the AppConfig environment to use for client-side
              evaluation. This must be an environment that is within the application
              that you specify for <code>applicationId</code>.
      type: object
    CreateProject_request_dataDelivery_cloudWatchLogs:
      allOf:
      - $ref: '#/components/schemas/CloudWatchLogsDestinationConfig'
      - description: "If the project stores evaluation events in CloudWatch Logs,\
          \ this structure stores the log group name."
      example:
        logGroup: ""
    CreateProject_request_dataDelivery_s3Destination:
      allOf:
      - $ref: '#/components/schemas/S3DestinationConfig'
      - description: "If the project stores evaluation events in an Amazon S3 bucket,\
          \ this structure stores the bucket name and bucket prefix."
      example:
        bucket: ""
        prefix: ""
    CreateProject_request_dataDelivery:
      description: A structure that contains information about where Evidently is
        to store evaluation events for longer term storage.
      properties:
        cloudWatchLogs:
          $ref: '#/components/schemas/CreateProject_request_dataDelivery_cloudWatchLogs'
        s3Destination:
          $ref: '#/components/schemas/CreateProject_request_dataDelivery_s3Destination'
      type: object
    CreateProject_request:
      properties:
        appConfigResource:
          $ref: '#/components/schemas/CreateProject_request_appConfigResource'
        dataDelivery:
          $ref: '#/components/schemas/CreateProject_request_dataDelivery'
        description:
          description: An optional description of the project.
          maxLength: 160
          minLength: 0
          pattern: .*
          type: string
        name:
          description: The name for the project.
          maxLength: 127
          minLength: 1
          pattern: "^[-a-zA-Z0-9._]*$"
          type: string
        tags:
          additionalProperties:
            $ref: '#/components/schemas/TagValue'
          description: "<p>Assigns one or more tags (key-value pairs) to the project.</p>\
            \ <p>Tags can help you organize and categorize your resources. You can\
            \ also use them to scope user permissions by granting a user permission\
            \ to access or change only resources with certain tag values.</p> <p>Tags\
            \ don't have any semantic meaning to Amazon Web Services and are interpreted\
            \ strictly as strings of characters.</p> <p>You can associate as many\
            \ as 50 tags with a project.</p> <p>For more information, see <a href=\"\
            https://docs.aws.amazon.com/general/latest/gr/aws_tagging.html\">Tagging\
            \ Amazon Web Services resources</a>.</p>"
          type: object
      required:
      - name
      type: object
    CreateSegment_request:
      properties:
        description:
          description: An optional description for this segment.
          maxLength: 160
          minLength: 0
          pattern: .*
          type: string
        name:
          description: A name for the segment.
          maxLength: 64
          minLength: 1
          pattern: "^[-a-zA-Z0-9._]*$"
          type: string
        pattern:
          description: "The pattern to use for the segment. For more information about\
            \ pattern syntax, see <a href=\"https://docs.aws.amazon.com/AmazonCloudWatch/latest/monitoring/CloudWatch-Evidently-segments.html#CloudWatch-Evidently-segments-syntax.html\"\
            > Segment rule pattern syntax</a>."
          maxLength: 1024
          minLength: 1
          type: string
        tags:
          additionalProperties:
            $ref: '#/components/schemas/TagValue'
          description: "<p>Assigns one or more tags (key-value pairs) to the segment.</p>\
            \ <p>Tags can help you organize and categorize your resources. You can\
            \ also use them to scope user permissions by granting a user permission\
            \ to access or change only resources with certain tag values.</p> <p>Tags\
            \ don't have any semantic meaning to Amazon Web Services and are interpreted\
            \ strictly as strings of characters.</p> <p>You can associate as many\
            \ as 50 tags with a segment.</p> <p>For more information, see <a href=\"\
            https://docs.aws.amazon.com/general/latest/gr/aws_tagging.html\">Tagging\
            \ Amazon Web Services resources</a>.</p>"
          type: object
      required:
      - name
      - pattern
      type: object
    UpdateExperiment_request:
      properties:
        description:
          description: An optional description of the experiment.
          maxLength: 160
          minLength: 0
          pattern: .*
          type: string
        metricGoals:
          description: "An array of structures that defines the metrics used for the\
            \ experiment, and whether a higher or lower value for each metric is the\
            \ goal."
          items:
            $ref: '#/components/schemas/MetricGoalConfig'
          maxItems: 3
          minItems: 1
          type: array
        onlineAbConfig:
          $ref: '#/components/schemas/CreateExperiment_request_onlineAbConfig'
        randomizationSalt:
          description: "When Evidently assigns a particular user session to an experiment,\
            \ it must use a randomization ID to determine which variation the user\
            \ session is served. This randomization ID is a combination of the entity\
            \ ID and <code>randomizationSalt</code>. If you omit <code>randomizationSalt</code>,\
            \ Evidently uses the experiment name as the <code>randomizationSalt</code>."
          maxLength: 127
          minLength: 0
          pattern: .*
          type: string
        removeSegment:
          description: Removes a segment from being used in an experiment. You can't
            use this parameter if the experiment is currently running.
          type: boolean
        samplingRate:
          description: "<p>The portion of the available audience that you want to\
            \ allocate to this experiment, in thousandths of a percent. The available\
            \ audience is the total audience minus the audience that you have allocated\
            \ to overrides or current launches of this feature.</p> <p>This is represented\
            \ in thousandths of a percent. For example, specify 20,000 to allocate\
            \ 20% of the available audience.</p>"
          maximum: 100000
          minimum: 0
          type: integer
        segment:
          description: "Adds an audience <i>segment</i> to an experiment. When a segment\
            \ is used in an experiment, only user sessions that match the segment\
            \ pattern are used in the experiment. You can't use this parameter if\
            \ the experiment is currently running."
          maxLength: 2048
          minLength: 0
          pattern: "(^[-a-zA-Z0-9._]*$)|(arn:[^:]*:[^:]*:[^:]*:[^:]*:segment/[-a-zA-Z0-9._]*)"
          type: string
        treatments:
          description: An array of structures that define the variations being tested
            in the experiment.
          items:
            $ref: '#/components/schemas/TreatmentConfig'
          maxItems: 5
          minItems: 0
          type: array
      type: object
    UpdateFeature_request:
      properties:
        addOrUpdateVariations:
          description: "To update variation configurations for this feature, or add\
            \ new ones, specify this structure. In this array, include any variations\
            \ that you want to add or update. If the array includes a variation name\
            \ that already exists for this feature, it is updated. If it includes\
            \ a new variation name, it is added as a new variation."
          items:
            $ref: '#/components/schemas/VariationConfig'
          maxItems: 5
          minItems: 1
          type: array
        defaultVariation:
          description: The name of the variation to use as the default variation.
            The default variation is served to users who are not allocated to any
            ongoing launches or experiments of this feature.
          maxLength: 127
          minLength: 1
          pattern: "^[-a-zA-Z0-9._]*$"
          type: string
        description:
          description: An optional description of the feature.
          maxLength: 160
          minLength: 0
          pattern: .*
          type: string
        entityOverrides:
          additionalProperties:
            $ref: '#/components/schemas/VariationName'
          description: "<p>Specified users that should always be served a specific\
            \ variation of a feature. Each user is specified by a key-value pair .\
            \ For each key, specify a user by entering their user ID, account ID,\
            \ or some other identifier. For the value, specify the name of the variation\
            \ that they are to be served.</p> <p>This parameter is limited to 2500\
            \ overrides or a total of 40KB. The 40KB limit includes an overhead of\
            \ 6 bytes per override.</p>"
          maxProperties: 2500
          minProperties: 0
          type: object
        evaluationStrategy:
          description: Specify <code>ALL_RULES</code> to activate the traffic allocation
            specified by any ongoing launches or experiments. Specify <code>DEFAULT_VARIATION</code>
            to serve the default variation to all users instead.
          enum:
          - ALL_RULES
          - DEFAULT_VARIATION
          type: string
        removeVariations:
          description: "<p>Removes a variation from the feature. If the variation\
            \ you specify doesn't exist, then this makes no change and does not report\
            \ an error.</p> <p>This operation fails if you try to remove a variation\
            \ that is part of an ongoing launch or experiment.</p>"
          items:
            $ref: '#/components/schemas/VariationName'
          maxItems: 5
          minItems: 0
          type: array
      type: object
    UpdateLaunch_request:
      properties:
        description:
          description: An optional description for the launch.
          maxLength: 160
          minLength: 0
          pattern: .*
          type: string
        groups:
          description: An array of structures that contains the feature and variations
            that are to be used for the launch.
          items:
            $ref: '#/components/schemas/LaunchGroupConfig'
          maxItems: 5
          minItems: 1
          type: array
        metricMonitors:
          description: An array of structures that define the metrics that will be
            used to monitor the launch performance.
          items:
            $ref: '#/components/schemas/MetricMonitorConfig'
          maxItems: 3
          minItems: 0
          type: array
        randomizationSalt:
          description: "When Evidently assigns a particular user session to a launch,\
            \ it must use a randomization ID to determine which variation the user\
            \ session is served. This randomization ID is a combination of the entity\
            \ ID and <code>randomizationSalt</code>. If you omit <code>randomizationSalt</code>,\
            \ Evidently uses the launch name as the <code>randomizationSalt</code>."
          maxLength: 127
          minLength: 0
          pattern: .*
          type: string
        scheduledSplitsConfig:
          $ref: '#/components/schemas/CreateLaunch_request_scheduledSplitsConfig'
      type: object
    UpdateProject_request:
      properties:
        appConfigResource:
          $ref: '#/components/schemas/CreateProject_request_appConfigResource'
        description:
          description: An optional description of the project.
          maxLength: 160
          minLength: 0
          pattern: .*
          type: string
      type: object
    EvaluateFeature_request:
      properties:
        entityId:
          description: An internal ID that represents a unique user of the application.
            This <code>entityID</code> is checked against any override rules assigned
            for this feature.
          maxLength: 512
          minLength: 1
          pattern: .*
          type: string
        evaluationContext:
          description: "<p>A JSON object of attributes that you can optionally pass\
            \ in as part of the evaluation event sent to Evidently from the user session.\
            \ Evidently can use this value to match user sessions with defined audience\
            \ segments. For more information, see <a href=\"https://docs.aws.amazon.com/AmazonCloudWatch/latest/monitoring/CloudWatch-Evidently-segments.html\"\
            >Use segments to focus your audience</a>.</p> <p>If you include this parameter,\
            \ the value must be a JSON object. A JSON array is not supported.</p>"
          type: string
      required:
      - entityId
      type: object
    GetExperimentResults_request:
      properties:
        baseStat:
          description: "The statistic used to calculate experiment results. Currently\
            \ the only valid value is <code>mean</code>, which uses the mean of the\
            \ collected values as the statistic."
          enum:
          - Mean
          type: string
        endTime:
          description: "The date and time that the experiment ended, if it is completed.\
            \ This must be no longer than 30 days after the experiment start time."
          format: date-time
          type: string
        metricNames:
          description: The names of the experiment metrics that you want to see the
            results of.
          items:
            $ref: '#/components/schemas/CwDimensionSafeName'
          maxItems: 1
          minItems: 1
          type: array
        period:
          description: "In seconds, the amount of time to aggregate results together. "
          maximum: 90000
          minimum: 300
          type: integer
        reportNames:
          description: "The names of the report types that you want to see. Currently,\
            \ <code>BayesianInference</code> is the only valid value."
          items:
            $ref: '#/components/schemas/ExperimentReportName'
          maxItems: 5
          minItems: 0
          type: array
        resultStats:
          description: "<p>The statistics that you want to see in the returned results.</p>\
            \ <ul> <li> <p> <code>PValue</code> specifies to use p-values for the\
            \ results. A p-value is used in hypothesis testing to measure how often\
            \ you are willing to make a mistake in rejecting the null hypothesis.\
            \ A general practice is to reject the null hypothesis and declare that\
            \ the results are statistically significant when the p-value is less than\
            \ 0.05.</p> </li> <li> <p> <code>ConfidenceInterval</code> specifies a\
            \ confidence interval for the results. The confidence interval represents\
            \ the range of values for the chosen metric that is likely to contain\
            \ the true difference between the <code>baseStat</code> of a variation\
            \ and the baseline. Evidently returns the 95% confidence interval. </p>\
            \ </li> <li> <p> <code>TreatmentEffect</code> is the difference in the\
            \ statistic specified by the <code>baseStat</code> parameter between each\
            \ variation and the default variation. </p> </li> <li> <p> <code>BaseStat</code>\
            \ returns the statistical values collected for the metric for each variation.\
            \ The statistic uses the same statistic specified in the <code>baseStat</code>\
            \ parameter. Therefore, if <code>baseStat</code> is <code>mean</code>,\
            \ this returns the mean of the values collected for each variation.</p>\
            \ </li> </ul>"
          items:
            $ref: '#/components/schemas/ExperimentResultRequestType'
          maxItems: 5
          minItems: 0
          type: array
        startTime:
          description: The date and time that the experiment started.
          format: date-time
          type: string
        treatmentNames:
          description: The names of the experiment treatments that you want to see
            the results for.
          items:
            $ref: '#/components/schemas/TreatmentName'
          maxItems: 5
          minItems: 1
          type: array
      required:
      - metricNames
      - treatmentNames
      type: object
    TagResource_request:
      properties:
        tags:
          additionalProperties:
            $ref: '#/components/schemas/TagValue'
          description: The list of key-value pairs to associate with the resource.
          type: object
      required:
      - tags
      type: object
    PutProjectEvents_request:
      properties:
        events:
          description: An array of event structures that contain the performance data
            that is being sent to Evidently.
          items:
            $ref: '#/components/schemas/Event'
          maxItems: 50
          minItems: 0
          type: array
      required:
      - events
      type: object
    StartExperiment_request:
      properties:
        analysisCompleteTime:
          description: The date and time to end the experiment. This must be no more
            than 30 days after the experiment starts.
          format: date-time
          type: string
      required:
      - analysisCompleteTime
      type: object
    StopExperiment_request:
      properties:
        desiredState:
          description: Specify whether the experiment is to be considered <code>COMPLETED</code>
            or <code>CANCELLED</code> after it stops.
          enum:
          - COMPLETED
          - CANCELLED
          type: string
        reason:
          description: A string that describes why you are stopping the experiment.
          maxLength: 160
          minLength: 0
          pattern: .*
          type: string
      type: object
    StopLaunch_request:
      properties:
        desiredState:
          description: Specify whether to consider the launch as <code>COMPLETED</code>
            or <code>CANCELLED</code> after it stops.
          enum:
          - COMPLETED
          - CANCELLED
          type: string
        reason:
          description: A string that describes why you are stopping the launch.
          maxLength: 160
          minLength: 0
          pattern: .*
          type: string
      type: object
    TestSegmentPattern_request:
      properties:
        pattern:
          description: The pattern to test.
          maxLength: 1024
          minLength: 1
          type: string
        payload:
          description: A sample <code>evaluationContext</code> JSON block to test
            against the specified pattern.
          type: string
      required:
      - pattern
      - payload
      type: object
    UpdateProjectDataDelivery_request_cloudWatchLogs:
      description: A structure containing the CloudWatch Logs log group where the
        project stores evaluation events.
      properties:
        logGroup:
          allOf:
          - $ref: '#/components/schemas/CwLogGroupSafeName'
          - description: The name of the log group where the project stores evaluation
              events.
      type: object
    UpdateProjectDataDelivery_request_s3Destination:
      description: "If the project stores evaluation events in an Amazon S3 bucket,\
        \ this structure stores the bucket name and bucket prefix."
      properties:
        bucket:
          allOf:
          - $ref: '#/components/schemas/S3BucketSafeName'
          - description: The name of the bucket in which Evidently stores evaluation
              events.
        prefix:
          allOf:
          - $ref: '#/components/schemas/S3PrefixSafeName'
          - description: The bucket prefix in which Evidently stores evaluation events.
      type: object
    UpdateProjectDataDelivery_request:
      properties:
        cloudWatchLogs:
          $ref: '#/components/schemas/UpdateProjectDataDelivery_request_cloudWatchLogs'
        s3Destination:
          $ref: '#/components/schemas/UpdateProjectDataDelivery_request_s3Destination'
      type: object
    CreateExperimentResponse_experiment:
      allOf:
      - $ref: '#/components/schemas/Experiment'
      - description: A structure containing the configuration details of the experiment
          that you created.
      example:
        onlineAbDefinition:
          controlTreatmentName: ""
          treatmentWeights: ""
        execution:
          startedTime: ""
          endedTime: ""
        description: ""
        project: ""
        metricGoals: ""
        type: ""
        treatments: ""
        randomizationSalt: ""
        tags: ""
        schedule:
          analysisCompleteTime: ""
        statusReason: ""
        segment: ""
        name: ""
        samplingRate: ""
        createdTime: ""
        lastUpdatedTime: ""
        arn: ""
        status: ""
    MetricGoalConfig_metricDefinition:
      allOf:
      - $ref: '#/components/schemas/MetricDefinitionConfig'
      - description: A structure that contains details about the metric.
    CreateFeatureResponse_feature:
      allOf:
      - $ref: '#/components/schemas/Feature'
      - description: A structure that contains information about the new feature.
      example:
        defaultVariation: ""
        evaluationRules: ""
        evaluationStrategy: ""
        description: ""
        project: ""
        entityOverrides: ""
        tags: ""
        variations: ""
        valueType: ""
        name: ""
        createdTime: ""
        lastUpdatedTime: ""
        arn: ""
        status: ""
    VariationConfig_value:
      allOf:
      - $ref: '#/components/schemas/VariableValue'
      - description: The value assigned to this variation.
    CreateLaunchResponse_launch:
      allOf:
      - $ref: '#/components/schemas/Launch'
      - description: A structure that contains the configuration of the launch that
          was created.
      example:
        execution:
          startedTime: ""
          endedTime: ""
        metricMonitors: ""
        description: ""
        groups: ""
        project: ""
        type: ""
        randomizationSalt: ""
        tags: ""
        statusReason: ""
        name: ""
        createdTime: ""
        lastUpdatedTime: ""
        arn: ""
        scheduledSplitsDefinition:
          steps: ""
        status: ""
    MetricMonitorConfig_metricDefinition:
      allOf:
      - $ref: '#/components/schemas/MetricDefinitionConfig'
      - description: A structure that defines the metric.
    CreateProjectResponse_project:
      allOf:
      - $ref: '#/components/schemas/Project'
      - description: A structure that contains information about the created project.
      example:
        launchCount: ""
        description: ""
        activeExperimentCount: ""
        dataDelivery:
          s3Destination:
            bucket: ""
            prefix: ""
          cloudWatchLogs:
            logGroup: ""
        tags: ""
        experimentCount: ""
        name: ""
        createdTime: ""
        lastUpdatedTime: ""
        appConfigResource:
          environmentId: ""
          configurationProfileId: ""
          applicationId: ""
        arn: ""
        activeLaunchCount: ""
        featureCount: ""
        status: ""
    CreateSegmentResponse_segment:
      allOf:
      - $ref: '#/components/schemas/Segment'
      - description: A structure that contains the complete information about the
          segment that was just created.
      example:
        launchCount: ""
        experimentCount: ""
        name: ""
        pattern: ""
        createdTime: ""
        description: ""
        lastUpdatedTime: ""
        arn: ""
        tags: ""
    EvaluateFeatureResponse_value:
      allOf:
      - $ref: '#/components/schemas/VariableValue'
      - description: The value assigned to this variation to differentiate it from
          the other variations of this feature.
      example:
        stringValue: ""
        boolValue: ""
        doubleValue: ""
        longValue: ""
    GetExperimentResponse_experiment:
      allOf:
      - $ref: '#/components/schemas/Experiment'
      - description: A structure containing the configuration details of the experiment.
      example:
        onlineAbDefinition:
          controlTreatmentName: ""
          treatmentWeights: ""
        execution:
          startedTime: ""
          endedTime: ""
        description: ""
        project: ""
        metricGoals: ""
        type: ""
        treatments: ""
        randomizationSalt: ""
        tags: ""
        schedule:
          analysisCompleteTime: ""
        statusReason: ""
        segment: ""
        name: ""
        samplingRate: ""
        createdTime: ""
        lastUpdatedTime: ""
        arn: ""
        status: ""
    GetFeatureResponse_feature:
      allOf:
      - $ref: '#/components/schemas/Feature'
      - description: A structure containing the configuration details of the feature.
      example:
        defaultVariation: ""
        evaluationRules: ""
        evaluationStrategy: ""
        description: ""
        project: ""
        entityOverrides: ""
        tags: ""
        variations: ""
        valueType: ""
        name: ""
        createdTime: ""
        lastUpdatedTime: ""
        arn: ""
        status: ""
    GetLaunchResponse_launch:
      allOf:
      - $ref: '#/components/schemas/Launch'
      - description: A structure containing the configuration details of the launch.
      example:
        execution:
          startedTime: ""
          endedTime: ""
        metricMonitors: ""
        description: ""
        groups: ""
        project: ""
        type: ""
        randomizationSalt: ""
        tags: ""
        statusReason: ""
        name: ""
        createdTime: ""
        lastUpdatedTime: ""
        arn: ""
        scheduledSplitsDefinition:
          steps: ""
        status: ""
    GetProjectResponse_project:
      allOf:
      - $ref: '#/components/schemas/Project'
      - description: A structure containing the configuration details of the project.
      example:
        launchCount: ""
        description: ""
        activeExperimentCount: ""
        dataDelivery:
          s3Destination:
            bucket: ""
            prefix: ""
          cloudWatchLogs:
            logGroup: ""
        tags: ""
        experimentCount: ""
        name: ""
        createdTime: ""
        lastUpdatedTime: ""
        appConfigResource:
          environmentId: ""
          configurationProfileId: ""
          applicationId: ""
        arn: ""
        activeLaunchCount: ""
        featureCount: ""
        status: ""
    GetSegmentResponse_segment:
      allOf:
      - $ref: '#/components/schemas/Segment'
      - description: A structure that contains the complete information about the
          segment.
      example:
        launchCount: ""
        experimentCount: ""
        name: ""
        pattern: ""
        createdTime: ""
        description: ""
        lastUpdatedTime: ""
        arn: ""
        tags: ""
    StartLaunchResponse_launch:
      allOf:
      - $ref: '#/components/schemas/Launch'
      - description: A structure that contains information about the launch that was
          started.
      example:
        execution:
          startedTime: ""
          endedTime: ""
        metricMonitors: ""
        description: ""
        groups: ""
        project: ""
        type: ""
        randomizationSalt: ""
        tags: ""
        statusReason: ""
        name: ""
        createdTime: ""
        lastUpdatedTime: ""
        arn: ""
        scheduledSplitsDefinition:
          steps: ""
        status: ""
    UpdateExperimentResponse_experiment:
      allOf:
      - $ref: '#/components/schemas/Experiment'
      - description: A structure containing the configuration details of the experiment
          that was updated.
      example:
        onlineAbDefinition:
          controlTreatmentName: ""
          treatmentWeights: ""
        execution:
          startedTime: ""
          endedTime: ""
        description: ""
        project: ""
        metricGoals: ""
        type: ""
        treatments: ""
        randomizationSalt: ""
        tags: ""
        schedule:
          analysisCompleteTime: ""
        statusReason: ""
        segment: ""
        name: ""
        samplingRate: ""
        createdTime: ""
        lastUpdatedTime: ""
        arn: ""
        status: ""
    UpdateFeatureResponse_feature:
      allOf:
      - $ref: '#/components/schemas/Feature'
      - description: A structure that contains information about the updated feature.
      example:
        defaultVariation: ""
        evaluationRules: ""
        evaluationStrategy: ""
        description: ""
        project: ""
        entityOverrides: ""
        tags: ""
        variations: ""
        valueType: ""
        name: ""
        createdTime: ""
        lastUpdatedTime: ""
        arn: ""
        status: ""
    UpdateLaunchResponse_launch:
      allOf:
      - $ref: '#/components/schemas/Launch'
      - description: A structure that contains the new configuration of the launch
          that was updated.
      example:
        execution:
          startedTime: ""
          endedTime: ""
        metricMonitors: ""
        description: ""
        groups: ""
        project: ""
        type: ""
        randomizationSalt: ""
        tags: ""
        statusReason: ""
        name: ""
        createdTime: ""
        lastUpdatedTime: ""
        arn: ""
        scheduledSplitsDefinition:
          steps: ""
        status: ""
    UpdateProjectResponse_project:
      allOf:
      - $ref: '#/components/schemas/Project'
      - description: A structure containing information about the updated project.
      example:
        launchCount: ""
        description: ""
        activeExperimentCount: ""
        dataDelivery:
          s3Destination:
            bucket: ""
            prefix: ""
          cloudWatchLogs:
            logGroup: ""
        tags: ""
        experimentCount: ""
        name: ""
        createdTime: ""
        lastUpdatedTime: ""
        appConfigResource:
          environmentId: ""
          configurationProfileId: ""
          applicationId: ""
        arn: ""
        activeLaunchCount: ""
        featureCount: ""
        status: ""
    UpdateProjectDataDeliveryResponse_project:
      allOf:
      - $ref: '#/components/schemas/Project'
      - description: A structure containing details about the project that you updated.
      example:
        launchCount: ""
        description: ""
        activeExperimentCount: ""
        dataDelivery:
          s3Destination:
            bucket: ""
            prefix: ""
          cloudWatchLogs:
            logGroup: ""
        tags: ""
        experimentCount: ""
        name: ""
        createdTime: ""
        lastUpdatedTime: ""
        appConfigResource:
          environmentId: ""
          configurationProfileId: ""
          applicationId: ""
        arn: ""
        activeLaunchCount: ""
        featureCount: ""
        status: ""
    CreateExperimentRequest_onlineAbConfig:
      allOf:
      - $ref: '#/components/schemas/OnlineAbConfig'
      - description: A structure that contains the configuration of which variation
          to use as the "control" version. tThe "control" version is used for comparison
          with other variations. This structure also specifies how much experiment
          traffic is allocated to each variation.
      example:
        controlTreatmentName: ""
        treatmentWeights: ""
    Experiment_execution:
      allOf:
      - $ref: '#/components/schemas/ExperimentExecution'
      - description: A structure that contains the date and time that the experiment
          started and ended.
      example:
        startedTime: ""
        endedTime: ""
    Experiment_onlineAbDefinition:
      allOf:
      - $ref: '#/components/schemas/OnlineAbDefinition'
      - description: A structure that contains the configuration of which variation
          to use as the "control" version. The "control" version is used for comparison
          with other variations. This structure also specifies how much experiment
          traffic is allocated to each variation.
      example:
        controlTreatmentName: ""
        treatmentWeights: ""
    Experiment_schedule:
      allOf:
      - $ref: '#/components/schemas/ExperimentSchedule'
      - description: A structure that contains the time and date that Evidently completed
          the analysis of the experiment.
      example:
        analysisCompleteTime: ""
    CreateLaunchRequest_scheduledSplitsConfig:
      allOf:
      - $ref: '#/components/schemas/ScheduledSplitsLaunchConfig'
      - description: An array of structures that define the traffic allocation percentages
          among the feature variations during each step of the launch.
      example:
        steps: ""
    Launch_execution:
      allOf:
      - $ref: '#/components/schemas/LaunchExecution'
      - description: A structure that contains information about the start and end
          times of the launch.
      example:
        startedTime: ""
        endedTime: ""
    Launch_scheduledSplitsDefinition:
      allOf:
      - $ref: '#/components/schemas/ScheduledSplitsLaunchDefinition'
      - description: An array of structures that define the traffic allocation percentages
          among the feature variations during each step of the launch.
      example:
        steps: ""
    CreateProjectRequest_appConfigResource:
      allOf:
      - $ref: '#/components/schemas/ProjectAppConfigResourceConfig'
      - description: "<p>Use this parameter if the project will use <i>client-side\
          \ evaluation powered by AppConfig</i>. Client-side evaluation allows your\
          \ application to assign variations to user sessions locally instead of by\
          \ calling the <a href=\"https://docs.aws.amazon.com/cloudwatchevidently/latest/APIReference/API_EvaluateFeature.html\"\
          >EvaluateFeature</a> operation. This mitigates the latency and availability\
          \ risks that come with an API call. For more information, see <a href=\"\
          https://docs.aws.amazon.com/AmazonCloudWatch/latest/monitoring/CloudWatch-Evidently-client-side-evaluation.html\"\
          > Client-side evaluation - powered by AppConfig.</a> </p> <p>This parameter\
          \ is a structure that contains information about the AppConfig application\
          \ and environment that will be used as for client-side evaluation.</p> <p>To\
          \ create a project that uses client-side evaluation, you must have the <code>evidently:ExportProjectAsConfiguration</code>\
          \ permission.</p>"
      example:
        environmentId: ""
        applicationId: ""
    CreateProjectRequest_dataDelivery:
      allOf:
      - $ref: '#/components/schemas/ProjectDataDeliveryConfig'
      - description: "A structure that contains information about where Evidently\
          \ is to store evaluation events for longer term storage, if you choose to\
          \ do so. If you choose not to store these events, Evidently deletes them\
          \ after using them to produce metrics and other experiment results that\
          \ you can view."
      example:
        s3Destination:
          bucket: ""
          prefix: ""
        cloudWatchLogs:
          logGroup: ""
    Project_appConfigResource:
      allOf:
      - $ref: '#/components/schemas/ProjectAppConfigResource'
      - description: This structure defines the configuration of how your application
          integrates with AppConfig to run client-side evaluation.
      example:
        environmentId: ""
        configurationProfileId: ""
        applicationId: ""
    Project_dataDelivery:
      allOf:
      - $ref: '#/components/schemas/ProjectDataDelivery'
      - description: A structure that contains information about where Evidently is
          to store evaluation events for longer term storage.
      example:
        s3Destination:
          bucket: ""
          prefix: ""
        cloudWatchLogs:
          logGroup: ""
    MetricGoal_metricDefinition:
      allOf:
      - $ref: '#/components/schemas/MetricDefinition'
      - description: A structure that contains details about the metric.
    MetricMonitor_metricDefinition:
      allOf:
      - $ref: '#/components/schemas/MetricDefinition'
      - description: A structure that defines the metric.
    ProjectDataDelivery_cloudWatchLogs:
      allOf:
      - $ref: '#/components/schemas/CloudWatchLogsDestination'
      - description: "If the project stores evaluation events in CloudWatch Logs,\
          \ this structure stores the log group name."
      example:
        logGroup: ""
    ProjectDataDelivery_s3Destination:
      allOf:
      - $ref: '#/components/schemas/S3Destination'
      - description: "If the project stores evaluation events in an Amazon S3 bucket,\
          \ this structure stores the bucket name and bucket prefix."
      example:
        bucket: ""
        prefix: ""
    UpdateExperimentRequest_onlineAbConfig:
      allOf:
      - $ref: '#/components/schemas/OnlineAbConfig'
      - description: A structure that contains the configuration of which variation
          o use as the "control" version. The "control" version is used for comparison
          with other variations. This structure also specifies how much experiment
          traffic is allocated to each variation.
      example:
        controlTreatmentName: ""
        treatmentWeights: ""
    UpdateProjectDataDeliveryRequest_cloudWatchLogs:
      allOf:
      - $ref: '#/components/schemas/CloudWatchLogsDestinationConfig'
      - description: A structure containing the CloudWatch Logs log group where you
          want to store evaluation events.
      example:
        logGroup: ""
    UpdateProjectDataDeliveryRequest_s3Destination:
      allOf:
      - $ref: '#/components/schemas/S3DestinationConfig'
      - description: A structure containing the S3 bucket name and bucket prefix where
          you want to store evaluation events.
      example:
        bucket: ""
        prefix: ""
    UpdateProjectRequest_appConfigResource:
      allOf:
      - $ref: '#/components/schemas/ProjectAppConfigResourceConfig'
      - description: <p>Use this parameter if the project will use client-side evaluation
          powered by AppConfig. Client-side evaluation allows your application to
          assign variations to user sessions locally instead of by calling the <a
          href="https://docs.aws.amazon.com/cloudwatchevidently/latest/APIReference/API_EvaluateFeature.html">EvaluateFeature</a>
          operation. This mitigates the latency and availability risks that come with
          an API call. allows you to</p> <p>This parameter is a structure that contains
          information about the AppConfig application that will be used for client-side
          evaluation.</p>
      example:
        environmentId: ""
        applicationId: ""
  securitySchemes:
    hmac:
      description: Amazon Signature authorization v4
      in: header
      name: Authorization
      type: apiKey
      x-amazon-apigateway-authtype: awsSigv4
x-hasEquivalentPaths: true

