# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class RefResource(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, arn: str=None, end_time: str=None, last_updated_on: str=None, name: str=None, start_time: str=None, status: str=None, type: str=None):
        """RefResource - a model defined in OpenAPI

        :param arn: The arn of this RefResource.
        :param end_time: The end_time of this RefResource.
        :param last_updated_on: The last_updated_on of this RefResource.
        :param name: The name of this RefResource.
        :param start_time: The start_time of this RefResource.
        :param status: The status of this RefResource.
        :param type: The type of this RefResource.
        """
        self.openapi_types = {
            'arn': str,
            'end_time': str,
            'last_updated_on': str,
            'name': str,
            'start_time': str,
            'status': str,
            'type': str
        }

        self.attribute_map = {
            'arn': 'arn',
            'end_time': 'endTime',
            'last_updated_on': 'lastUpdatedOn',
            'name': 'name',
            'start_time': 'startTime',
            'status': 'status',
            'type': 'type'
        }

        self._arn = arn
        self._end_time = end_time
        self._last_updated_on = last_updated_on
        self._name = name
        self._start_time = start_time
        self._status = status
        self._type = type

    @classmethod
    def from_dict(cls, dikt: dict) -> 'RefResource':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The RefResource of this RefResource.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def arn(self):
        """Gets the arn of this RefResource.


        :return: The arn of this RefResource.
        :rtype: str
        """
        return self._arn

    @arn.setter
    def arn(self, arn):
        """Sets the arn of this RefResource.


        :param arn: The arn of this RefResource.
        :type arn: str
        """

        self._arn = arn

    @property
    def end_time(self):
        """Gets the end_time of this RefResource.


        :return: The end_time of this RefResource.
        :rtype: str
        """
        return self._end_time

    @end_time.setter
    def end_time(self, end_time):
        """Sets the end_time of this RefResource.


        :param end_time: The end_time of this RefResource.
        :type end_time: str
        """

        self._end_time = end_time

    @property
    def last_updated_on(self):
        """Gets the last_updated_on of this RefResource.


        :return: The last_updated_on of this RefResource.
        :rtype: str
        """
        return self._last_updated_on

    @last_updated_on.setter
    def last_updated_on(self, last_updated_on):
        """Sets the last_updated_on of this RefResource.


        :param last_updated_on: The last_updated_on of this RefResource.
        :type last_updated_on: str
        """

        self._last_updated_on = last_updated_on

    @property
    def name(self):
        """Gets the name of this RefResource.


        :return: The name of this RefResource.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this RefResource.


        :param name: The name of this RefResource.
        :type name: str
        """
        if name is None:
            raise ValueError("Invalid value for `name`, must not be `None`")

        self._name = name

    @property
    def start_time(self):
        """Gets the start_time of this RefResource.


        :return: The start_time of this RefResource.
        :rtype: str
        """
        return self._start_time

    @start_time.setter
    def start_time(self, start_time):
        """Sets the start_time of this RefResource.


        :param start_time: The start_time of this RefResource.
        :type start_time: str
        """

        self._start_time = start_time

    @property
    def status(self):
        """Gets the status of this RefResource.


        :return: The status of this RefResource.
        :rtype: str
        """
        return self._status

    @status.setter
    def status(self, status):
        """Sets the status of this RefResource.


        :param status: The status of this RefResource.
        :type status: str
        """

        self._status = status

    @property
    def type(self):
        """Gets the type of this RefResource.


        :return: The type of this RefResource.
        :rtype: str
        """
        return self._type

    @type.setter
    def type(self, type):
        """Sets the type of this RefResource.


        :param type: The type of this RefResource.
        :type type: str
        """
        if type is None:
            raise ValueError("Invalid value for `type`, must not be `None`")

        self._type = type
