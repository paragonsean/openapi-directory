# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class ExperimentSchedule(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, analysis_complete_time: datetime=None):
        """ExperimentSchedule - a model defined in OpenAPI

        :param analysis_complete_time: The analysis_complete_time of this ExperimentSchedule.
        """
        self.openapi_types = {
            'analysis_complete_time': datetime
        }

        self.attribute_map = {
            'analysis_complete_time': 'analysisCompleteTime'
        }

        self._analysis_complete_time = analysis_complete_time

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ExperimentSchedule':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Experiment_schedule of this ExperimentSchedule.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def analysis_complete_time(self):
        """Gets the analysis_complete_time of this ExperimentSchedule.


        :return: The analysis_complete_time of this ExperimentSchedule.
        :rtype: datetime
        """
        return self._analysis_complete_time

    @analysis_complete_time.setter
    def analysis_complete_time(self, analysis_complete_time):
        """Sets the analysis_complete_time of this ExperimentSchedule.


        :param analysis_complete_time: The analysis_complete_time of this ExperimentSchedule.
        :type analysis_complete_time: datetime
        """

        self._analysis_complete_time = analysis_complete_time
