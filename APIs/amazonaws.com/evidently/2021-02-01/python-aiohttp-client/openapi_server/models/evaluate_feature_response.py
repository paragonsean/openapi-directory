# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.evaluate_feature_response_value import EvaluateFeatureResponseValue
from openapi_server import util


class EvaluateFeatureResponse(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, details: str=None, reason: str=None, value: EvaluateFeatureResponseValue=None, variation: str=None):
        """EvaluateFeatureResponse - a model defined in OpenAPI

        :param details: The details of this EvaluateFeatureResponse.
        :param reason: The reason of this EvaluateFeatureResponse.
        :param value: The value of this EvaluateFeatureResponse.
        :param variation: The variation of this EvaluateFeatureResponse.
        """
        self.openapi_types = {
            'details': str,
            'reason': str,
            'value': EvaluateFeatureResponseValue,
            'variation': str
        }

        self.attribute_map = {
            'details': 'details',
            'reason': 'reason',
            'value': 'value',
            'variation': 'variation'
        }

        self._details = details
        self._reason = reason
        self._value = value
        self._variation = variation

    @classmethod
    def from_dict(cls, dikt: dict) -> 'EvaluateFeatureResponse':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The EvaluateFeatureResponse of this EvaluateFeatureResponse.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def details(self):
        """Gets the details of this EvaluateFeatureResponse.


        :return: The details of this EvaluateFeatureResponse.
        :rtype: str
        """
        return self._details

    @details.setter
    def details(self, details):
        """Sets the details of this EvaluateFeatureResponse.


        :param details: The details of this EvaluateFeatureResponse.
        :type details: str
        """

        self._details = details

    @property
    def reason(self):
        """Gets the reason of this EvaluateFeatureResponse.


        :return: The reason of this EvaluateFeatureResponse.
        :rtype: str
        """
        return self._reason

    @reason.setter
    def reason(self, reason):
        """Sets the reason of this EvaluateFeatureResponse.


        :param reason: The reason of this EvaluateFeatureResponse.
        :type reason: str
        """

        self._reason = reason

    @property
    def value(self):
        """Gets the value of this EvaluateFeatureResponse.


        :return: The value of this EvaluateFeatureResponse.
        :rtype: EvaluateFeatureResponseValue
        """
        return self._value

    @value.setter
    def value(self, value):
        """Sets the value of this EvaluateFeatureResponse.


        :param value: The value of this EvaluateFeatureResponse.
        :type value: EvaluateFeatureResponseValue
        """

        self._value = value

    @property
    def variation(self):
        """Gets the variation of this EvaluateFeatureResponse.


        :return: The variation of this EvaluateFeatureResponse.
        :rtype: str
        """
        return self._variation

    @variation.setter
    def variation(self, variation):
        """Sets the variation of this EvaluateFeatureResponse.


        :param variation: The variation of this EvaluateFeatureResponse.
        :type variation: str
        """

        self._variation = variation
