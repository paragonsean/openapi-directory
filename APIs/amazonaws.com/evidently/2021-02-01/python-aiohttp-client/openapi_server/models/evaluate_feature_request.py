# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
import re
from openapi_server import util


class EvaluateFeatureRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, entity_id: str=None, evaluation_context: str=None):
        """EvaluateFeatureRequest - a model defined in OpenAPI

        :param entity_id: The entity_id of this EvaluateFeatureRequest.
        :param evaluation_context: The evaluation_context of this EvaluateFeatureRequest.
        """
        self.openapi_types = {
            'entity_id': str,
            'evaluation_context': str
        }

        self.attribute_map = {
            'entity_id': 'entityId',
            'evaluation_context': 'evaluationContext'
        }

        self._entity_id = entity_id
        self._evaluation_context = evaluation_context

    @classmethod
    def from_dict(cls, dikt: dict) -> 'EvaluateFeatureRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The EvaluateFeature_request of this EvaluateFeatureRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def entity_id(self):
        """Gets the entity_id of this EvaluateFeatureRequest.

        An internal ID that represents a unique user of the application. This <code>entityID</code> is checked against any override rules assigned for this feature.

        :return: The entity_id of this EvaluateFeatureRequest.
        :rtype: str
        """
        return self._entity_id

    @entity_id.setter
    def entity_id(self, entity_id):
        """Sets the entity_id of this EvaluateFeatureRequest.

        An internal ID that represents a unique user of the application. This <code>entityID</code> is checked against any override rules assigned for this feature.

        :param entity_id: The entity_id of this EvaluateFeatureRequest.
        :type entity_id: str
        """
        if entity_id is None:
            raise ValueError("Invalid value for `entity_id`, must not be `None`")
        if entity_id is not None and len(entity_id) > 512:
            raise ValueError("Invalid value for `entity_id`, length must be less than or equal to `512`")
        if entity_id is not None and len(entity_id) < 1:
            raise ValueError("Invalid value for `entity_id`, length must be greater than or equal to `1`")
        if entity_id is not None and not re.search(r'.*', entity_id):
            raise ValueError("Invalid value for `entity_id`, must be a follow pattern or equal to `/.*/`")

        self._entity_id = entity_id

    @property
    def evaluation_context(self):
        """Gets the evaluation_context of this EvaluateFeatureRequest.

        <p>A JSON object of attributes that you can optionally pass in as part of the evaluation event sent to Evidently from the user session. Evidently can use this value to match user sessions with defined audience segments. For more information, see <a href=\"https://docs.aws.amazon.com/AmazonCloudWatch/latest/monitoring/CloudWatch-Evidently-segments.html\">Use segments to focus your audience</a>.</p> <p>If you include this parameter, the value must be a JSON object. A JSON array is not supported.</p>

        :return: The evaluation_context of this EvaluateFeatureRequest.
        :rtype: str
        """
        return self._evaluation_context

    @evaluation_context.setter
    def evaluation_context(self, evaluation_context):
        """Sets the evaluation_context of this EvaluateFeatureRequest.

        <p>A JSON object of attributes that you can optionally pass in as part of the evaluation event sent to Evidently from the user session. Evidently can use this value to match user sessions with defined audience segments. For more information, see <a href=\"https://docs.aws.amazon.com/AmazonCloudWatch/latest/monitoring/CloudWatch-Evidently-segments.html\">Use segments to focus your audience</a>.</p> <p>If you include this parameter, the value must be a JSON object. A JSON array is not supported.</p>

        :param evaluation_context: The evaluation_context of this EvaluateFeatureRequest.
        :type evaluation_context: str
        """

        self._evaluation_context = evaluation_context
