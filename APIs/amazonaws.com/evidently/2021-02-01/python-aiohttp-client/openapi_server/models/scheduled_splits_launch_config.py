# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class ScheduledSplitsLaunchConfig(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, steps: List=None):
        """ScheduledSplitsLaunchConfig - a model defined in OpenAPI

        :param steps: The steps of this ScheduledSplitsLaunchConfig.
        """
        self.openapi_types = {
            'steps': List
        }

        self.attribute_map = {
            'steps': 'steps'
        }

        self._steps = steps

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ScheduledSplitsLaunchConfig':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ScheduledSplitsLaunchConfig of this ScheduledSplitsLaunchConfig.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def steps(self):
        """Gets the steps of this ScheduledSplitsLaunchConfig.


        :return: The steps of this ScheduledSplitsLaunchConfig.
        :rtype: List
        """
        return self._steps

    @steps.setter
    def steps(self, steps):
        """Sets the steps of this ScheduledSplitsLaunchConfig.


        :param steps: The steps of this ScheduledSplitsLaunchConfig.
        :type steps: List
        """
        if steps is None:
            raise ValueError("Invalid value for `steps`, must not be `None`")

        self._steps = steps
