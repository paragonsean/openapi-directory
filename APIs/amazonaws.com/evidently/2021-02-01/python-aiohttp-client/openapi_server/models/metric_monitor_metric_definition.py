# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class MetricMonitorMetricDefinition(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, entity_id_key: str=None, event_pattern: str=None, name: str=None, unit_label: str=None, value_key: str=None):
        """MetricMonitorMetricDefinition - a model defined in OpenAPI

        :param entity_id_key: The entity_id_key of this MetricMonitorMetricDefinition.
        :param event_pattern: The event_pattern of this MetricMonitorMetricDefinition.
        :param name: The name of this MetricMonitorMetricDefinition.
        :param unit_label: The unit_label of this MetricMonitorMetricDefinition.
        :param value_key: The value_key of this MetricMonitorMetricDefinition.
        """
        self.openapi_types = {
            'entity_id_key': str,
            'event_pattern': str,
            'name': str,
            'unit_label': str,
            'value_key': str
        }

        self.attribute_map = {
            'entity_id_key': 'entityIdKey',
            'event_pattern': 'eventPattern',
            'name': 'name',
            'unit_label': 'unitLabel',
            'value_key': 'valueKey'
        }

        self._entity_id_key = entity_id_key
        self._event_pattern = event_pattern
        self._name = name
        self._unit_label = unit_label
        self._value_key = value_key

    @classmethod
    def from_dict(cls, dikt: dict) -> 'MetricMonitorMetricDefinition':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The MetricMonitor_metricDefinition of this MetricMonitorMetricDefinition.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def entity_id_key(self):
        """Gets the entity_id_key of this MetricMonitorMetricDefinition.


        :return: The entity_id_key of this MetricMonitorMetricDefinition.
        :rtype: str
        """
        return self._entity_id_key

    @entity_id_key.setter
    def entity_id_key(self, entity_id_key):
        """Sets the entity_id_key of this MetricMonitorMetricDefinition.


        :param entity_id_key: The entity_id_key of this MetricMonitorMetricDefinition.
        :type entity_id_key: str
        """

        self._entity_id_key = entity_id_key

    @property
    def event_pattern(self):
        """Gets the event_pattern of this MetricMonitorMetricDefinition.


        :return: The event_pattern of this MetricMonitorMetricDefinition.
        :rtype: str
        """
        return self._event_pattern

    @event_pattern.setter
    def event_pattern(self, event_pattern):
        """Sets the event_pattern of this MetricMonitorMetricDefinition.


        :param event_pattern: The event_pattern of this MetricMonitorMetricDefinition.
        :type event_pattern: str
        """

        self._event_pattern = event_pattern

    @property
    def name(self):
        """Gets the name of this MetricMonitorMetricDefinition.


        :return: The name of this MetricMonitorMetricDefinition.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this MetricMonitorMetricDefinition.


        :param name: The name of this MetricMonitorMetricDefinition.
        :type name: str
        """

        self._name = name

    @property
    def unit_label(self):
        """Gets the unit_label of this MetricMonitorMetricDefinition.


        :return: The unit_label of this MetricMonitorMetricDefinition.
        :rtype: str
        """
        return self._unit_label

    @unit_label.setter
    def unit_label(self, unit_label):
        """Sets the unit_label of this MetricMonitorMetricDefinition.


        :param unit_label: The unit_label of this MetricMonitorMetricDefinition.
        :type unit_label: str
        """

        self._unit_label = unit_label

    @property
    def value_key(self):
        """Gets the value_key of this MetricMonitorMetricDefinition.


        :return: The value_key of this MetricMonitorMetricDefinition.
        :rtype: str
        """
        return self._value_key

    @value_key.setter
    def value_key(self, value_key):
        """Sets the value_key of this MetricMonitorMetricDefinition.


        :param value_key: The value_key of this MetricMonitorMetricDefinition.
        :type value_key: str
        """

        self._value_key = value_key
