# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.experiment_report_name import ExperimentReportName
from openapi_server import util


class ExperimentReport(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, content: str=None, metric_name: str=None, report_name: ExperimentReportName=None, treatment_name: str=None):
        """ExperimentReport - a model defined in OpenAPI

        :param content: The content of this ExperimentReport.
        :param metric_name: The metric_name of this ExperimentReport.
        :param report_name: The report_name of this ExperimentReport.
        :param treatment_name: The treatment_name of this ExperimentReport.
        """
        self.openapi_types = {
            'content': str,
            'metric_name': str,
            'report_name': ExperimentReportName,
            'treatment_name': str
        }

        self.attribute_map = {
            'content': 'content',
            'metric_name': 'metricName',
            'report_name': 'reportName',
            'treatment_name': 'treatmentName'
        }

        self._content = content
        self._metric_name = metric_name
        self._report_name = report_name
        self._treatment_name = treatment_name

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ExperimentReport':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ExperimentReport of this ExperimentReport.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def content(self):
        """Gets the content of this ExperimentReport.


        :return: The content of this ExperimentReport.
        :rtype: str
        """
        return self._content

    @content.setter
    def content(self, content):
        """Sets the content of this ExperimentReport.


        :param content: The content of this ExperimentReport.
        :type content: str
        """

        self._content = content

    @property
    def metric_name(self):
        """Gets the metric_name of this ExperimentReport.


        :return: The metric_name of this ExperimentReport.
        :rtype: str
        """
        return self._metric_name

    @metric_name.setter
    def metric_name(self, metric_name):
        """Sets the metric_name of this ExperimentReport.


        :param metric_name: The metric_name of this ExperimentReport.
        :type metric_name: str
        """

        self._metric_name = metric_name

    @property
    def report_name(self):
        """Gets the report_name of this ExperimentReport.


        :return: The report_name of this ExperimentReport.
        :rtype: ExperimentReportName
        """
        return self._report_name

    @report_name.setter
    def report_name(self, report_name):
        """Sets the report_name of this ExperimentReport.


        :param report_name: The report_name of this ExperimentReport.
        :type report_name: ExperimentReportName
        """

        self._report_name = report_name

    @property
    def treatment_name(self):
        """Gets the treatment_name of this ExperimentReport.


        :return: The treatment_name of this ExperimentReport.
        :rtype: str
        """
        return self._treatment_name

    @treatment_name.setter
    def treatment_name(self, treatment_name):
        """Sets the treatment_name of this ExperimentReport.


        :param treatment_name: The treatment_name of this ExperimentReport.
        :type treatment_name: str
        """

        self._treatment_name = treatment_name
