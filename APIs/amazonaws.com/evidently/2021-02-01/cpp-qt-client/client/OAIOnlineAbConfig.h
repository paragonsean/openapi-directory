/**
 * Amazon CloudWatch Evidently
 * <p>You can use Amazon CloudWatch Evidently to safely validate new features by serving them to a specified percentage of your users while you roll out the feature. You can monitor the performance of the new feature to help you decide when to ramp up traffic to your users. This helps you reduce risk and identify unintended consequences before you fully launch the feature.</p> <p>You can also conduct A/B experiments to make feature design decisions based on evidence and data. An experiment can test as many as five variations at once. Evidently collects experiment data and analyzes it using statistical methods. It also provides clear recommendations about which variations perform better. You can test both user-facing features and backend features.</p>
 *
 * The version of the OpenAPI document: 2021-02-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIOnlineAbConfig.h
 *
 * A structure that contains the configuration of which variation to use as the \&quot;control\&quot; version. The \&quot;control\&quot; version is used for comparison with other variations. This structure also specifies how much experiment traffic is allocated to each variation.
 */

#ifndef OAIOnlineAbConfig_H
#define OAIOnlineAbConfig_H

#include <QJsonObject>

#include <QMap>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIOnlineAbConfig : public OAIObject {
public:
    OAIOnlineAbConfig();
    OAIOnlineAbConfig(QString json);
    ~OAIOnlineAbConfig() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getControlTreatmentName() const;
    void setControlTreatmentName(const QString &control_treatment_name);
    bool is_control_treatment_name_Set() const;
    bool is_control_treatment_name_Valid() const;

    QMap getTreatmentWeights() const;
    void setTreatmentWeights(const QMap &treatment_weights);
    bool is_treatment_weights_Set() const;
    bool is_treatment_weights_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_control_treatment_name;
    bool m_control_treatment_name_isSet;
    bool m_control_treatment_name_isValid;

    QMap m_treatment_weights;
    bool m_treatment_weights_isSet;
    bool m_treatment_weights_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIOnlineAbConfig)

#endif // OAIOnlineAbConfig_H
