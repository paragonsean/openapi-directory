/**
 * Amazon CloudWatch Evidently
 * <p>You can use Amazon CloudWatch Evidently to safely validate new features by serving them to a specified percentage of your users while you roll out the feature. You can monitor the performance of the new feature to help you decide when to ramp up traffic to your users. This helps you reduce risk and identify unintended consequences before you fully launch the feature.</p> <p>You can also conduct A/B experiments to make feature design decisions based on evidence and data. An experiment can test as many as five variations at once. Evidently collects experiment data and analyzes it using statistical methods. It also provides clear recommendations about which variations perform better. You can test both user-facing features and backend features.</p>
 *
 * The version of the OpenAPI document: 2021-02-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAICreateProject_request_appConfigResource.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAICreateProject_request_appConfigResource::OAICreateProject_request_appConfigResource(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAICreateProject_request_appConfigResource::OAICreateProject_request_appConfigResource() {
    this->initializeModel();
}

OAICreateProject_request_appConfigResource::~OAICreateProject_request_appConfigResource() {}

void OAICreateProject_request_appConfigResource::initializeModel() {

    m_application_id_isSet = false;
    m_application_id_isValid = false;

    m_environment_id_isSet = false;
    m_environment_id_isValid = false;
}

void OAICreateProject_request_appConfigResource::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAICreateProject_request_appConfigResource::fromJsonObject(QJsonObject json) {

    m_application_id_isValid = ::OpenAPI::fromJsonValue(m_application_id, json[QString("applicationId")]);
    m_application_id_isSet = !json[QString("applicationId")].isNull() && m_application_id_isValid;

    m_environment_id_isValid = ::OpenAPI::fromJsonValue(m_environment_id, json[QString("environmentId")]);
    m_environment_id_isSet = !json[QString("environmentId")].isNull() && m_environment_id_isValid;
}

QString OAICreateProject_request_appConfigResource::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAICreateProject_request_appConfigResource::asJsonObject() const {
    QJsonObject obj;
    if (m_application_id_isSet) {
        obj.insert(QString("applicationId"), ::OpenAPI::toJsonValue(m_application_id));
    }
    if (m_environment_id_isSet) {
        obj.insert(QString("environmentId"), ::OpenAPI::toJsonValue(m_environment_id));
    }
    return obj;
}

QString OAICreateProject_request_appConfigResource::getApplicationId() const {
    return m_application_id;
}
void OAICreateProject_request_appConfigResource::setApplicationId(const QString &application_id) {
    m_application_id = application_id;
    m_application_id_isSet = true;
}

bool OAICreateProject_request_appConfigResource::is_application_id_Set() const{
    return m_application_id_isSet;
}

bool OAICreateProject_request_appConfigResource::is_application_id_Valid() const{
    return m_application_id_isValid;
}

QString OAICreateProject_request_appConfigResource::getEnvironmentId() const {
    return m_environment_id;
}
void OAICreateProject_request_appConfigResource::setEnvironmentId(const QString &environment_id) {
    m_environment_id = environment_id;
    m_environment_id_isSet = true;
}

bool OAICreateProject_request_appConfigResource::is_environment_id_Set() const{
    return m_environment_id_isSet;
}

bool OAICreateProject_request_appConfigResource::is_environment_id_Valid() const{
    return m_environment_id_isValid;
}

bool OAICreateProject_request_appConfigResource::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_application_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_environment_id_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAICreateProject_request_appConfigResource::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
