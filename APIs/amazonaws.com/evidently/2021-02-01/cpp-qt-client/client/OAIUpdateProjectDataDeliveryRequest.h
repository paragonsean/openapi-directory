/**
 * Amazon CloudWatch Evidently
 * <p>You can use Amazon CloudWatch Evidently to safely validate new features by serving them to a specified percentage of your users while you roll out the feature. You can monitor the performance of the new feature to help you decide when to ramp up traffic to your users. This helps you reduce risk and identify unintended consequences before you fully launch the feature.</p> <p>You can also conduct A/B experiments to make feature design decisions based on evidence and data. An experiment can test as many as five variations at once. Evidently collects experiment data and analyzes it using statistical methods. It also provides clear recommendations about which variations perform better. You can test both user-facing features and backend features.</p>
 *
 * The version of the OpenAPI document: 2021-02-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIUpdateProjectDataDeliveryRequest.h
 *
 * 
 */

#ifndef OAIUpdateProjectDataDeliveryRequest_H
#define OAIUpdateProjectDataDeliveryRequest_H

#include <QJsonObject>

#include "OAIUpdateProjectDataDeliveryRequest_cloudWatchLogs.h"
#include "OAIUpdateProjectDataDeliveryRequest_s3Destination.h"

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIUpdateProjectDataDeliveryRequest_cloudWatchLogs;
class OAIUpdateProjectDataDeliveryRequest_s3Destination;

class OAIUpdateProjectDataDeliveryRequest : public OAIObject {
public:
    OAIUpdateProjectDataDeliveryRequest();
    OAIUpdateProjectDataDeliveryRequest(QString json);
    ~OAIUpdateProjectDataDeliveryRequest() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAIUpdateProjectDataDeliveryRequest_cloudWatchLogs getCloudWatchLogs() const;
    void setCloudWatchLogs(const OAIUpdateProjectDataDeliveryRequest_cloudWatchLogs &cloud_watch_logs);
    bool is_cloud_watch_logs_Set() const;
    bool is_cloud_watch_logs_Valid() const;

    OAIUpdateProjectDataDeliveryRequest_s3Destination getS3Destination() const;
    void setS3Destination(const OAIUpdateProjectDataDeliveryRequest_s3Destination &s3_destination);
    bool is_s3_destination_Set() const;
    bool is_s3_destination_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAIUpdateProjectDataDeliveryRequest_cloudWatchLogs m_cloud_watch_logs;
    bool m_cloud_watch_logs_isSet;
    bool m_cloud_watch_logs_isValid;

    OAIUpdateProjectDataDeliveryRequest_s3Destination m_s3_destination;
    bool m_s3_destination_isSet;
    bool m_s3_destination_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIUpdateProjectDataDeliveryRequest)

#endif // OAIUpdateProjectDataDeliveryRequest_H
