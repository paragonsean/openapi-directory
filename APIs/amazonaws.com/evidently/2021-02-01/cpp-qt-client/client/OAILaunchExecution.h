/**
 * Amazon CloudWatch Evidently
 * <p>You can use Amazon CloudWatch Evidently to safely validate new features by serving them to a specified percentage of your users while you roll out the feature. You can monitor the performance of the new feature to help you decide when to ramp up traffic to your users. This helps you reduce risk and identify unintended consequences before you fully launch the feature.</p> <p>You can also conduct A/B experiments to make feature design decisions based on evidence and data. An experiment can test as many as five variations at once. Evidently collects experiment data and analyzes it using statistical methods. It also provides clear recommendations about which variations perform better. You can test both user-facing features and backend features.</p>
 *
 * The version of the OpenAPI document: 2021-02-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAILaunchExecution.h
 *
 * This structure contains information about the start and end times of the launch.
 */

#ifndef OAILaunchExecution_H
#define OAILaunchExecution_H

#include <QJsonObject>

#include <QDateTime>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAILaunchExecution : public OAIObject {
public:
    OAILaunchExecution();
    OAILaunchExecution(QString json);
    ~OAILaunchExecution() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QDateTime getEndedTime() const;
    void setEndedTime(const QDateTime &ended_time);
    bool is_ended_time_Set() const;
    bool is_ended_time_Valid() const;

    QDateTime getStartedTime() const;
    void setStartedTime(const QDateTime &started_time);
    bool is_started_time_Set() const;
    bool is_started_time_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QDateTime m_ended_time;
    bool m_ended_time_isSet;
    bool m_ended_time_isValid;

    QDateTime m_started_time;
    bool m_started_time_isSet;
    bool m_started_time_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAILaunchExecution)

#endif // OAILaunchExecution_H
