/**
 * Amazon CloudWatch Evidently
 * <p>You can use Amazon CloudWatch Evidently to safely validate new features by serving them to a specified percentage of your users while you roll out the feature. You can monitor the performance of the new feature to help you decide when to ramp up traffic to your users. This helps you reduce risk and identify unintended consequences before you fully launch the feature.</p> <p>You can also conduct A/B experiments to make feature design decisions based on evidence and data. An experiment can test as many as five variations at once. Evidently collects experiment data and analyzes it using statistical methods. It also provides clear recommendations about which variations perform better. You can test both user-facing features and backend features.</p>
 *
 * The version of the OpenAPI document: 2021-02-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAISegmentOverride.h
 *
 * This structure specifies a segment that you have already created, and defines the traffic split for that segment to be used in a launch.
 */

#ifndef OAISegmentOverride_H
#define OAISegmentOverride_H

#include <QJsonObject>

#include <QMap>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAISegmentOverride : public OAIObject {
public:
    OAISegmentOverride();
    OAISegmentOverride(QString json);
    ~OAISegmentOverride() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    qint32 getEvaluationOrder() const;
    void setEvaluationOrder(const qint32 &evaluation_order);
    bool is_evaluation_order_Set() const;
    bool is_evaluation_order_Valid() const;

    QString getSegment() const;
    void setSegment(const QString &segment);
    bool is_segment_Set() const;
    bool is_segment_Valid() const;

    QMap getWeights() const;
    void setWeights(const QMap &weights);
    bool is_weights_Set() const;
    bool is_weights_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    qint32 m_evaluation_order;
    bool m_evaluation_order_isSet;
    bool m_evaluation_order_isValid;

    QString m_segment;
    bool m_segment_isSet;
    bool m_segment_isValid;

    QMap m_weights;
    bool m_weights_isSet;
    bool m_weights_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAISegmentOverride)

#endif // OAISegmentOverride_H
