/**
 * Amazon CloudWatch Evidently
 * <p>You can use Amazon CloudWatch Evidently to safely validate new features by serving them to a specified percentage of your users while you roll out the feature. You can monitor the performance of the new feature to help you decide when to ramp up traffic to your users. This helps you reduce risk and identify unintended consequences before you fully launch the feature.</p> <p>You can also conduct A/B experiments to make feature design decisions based on evidence and data. An experiment can test as many as five variations at once. Evidently collects experiment data and analyzes it using statistical methods. It also provides clear recommendations about which variations perform better. You can test both user-facing features and backend features.</p>
 *
 * The version of the OpenAPI document: 2021-02-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIStopExperimentRequest.h
 *
 * 
 */

#ifndef OAIStopExperimentRequest_H
#define OAIStopExperimentRequest_H

#include <QJsonObject>

#include "OAIExperimentStopDesiredState.h"
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIStopExperimentRequest : public OAIObject {
public:
    OAIStopExperimentRequest();
    OAIStopExperimentRequest(QString json);
    ~OAIStopExperimentRequest() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAIExperimentStopDesiredState getDesiredState() const;
    void setDesiredState(const OAIExperimentStopDesiredState &desired_state);
    bool is_desired_state_Set() const;
    bool is_desired_state_Valid() const;

    QString getReason() const;
    void setReason(const QString &reason);
    bool is_reason_Set() const;
    bool is_reason_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAIExperimentStopDesiredState m_desired_state;
    bool m_desired_state_isSet;
    bool m_desired_state_isValid;

    QString m_reason;
    bool m_reason_isSet;
    bool m_reason_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIStopExperimentRequest)

#endif // OAIStopExperimentRequest_H
