openapi: 3.0.0
info:
  contact:
    email: mike.ralphson@gmail.com
    name: Mike Ralphson
    url: https://github.com/mermade/aws2openapi
    x-twitter: PermittedSoc
  description: <fullname>Amazon Mechanical Turk API Reference</fullname>
  license:
    name: Apache 2.0 License
    url: http://www.apache.org/licenses/
  termsOfService: https://aws.amazon.com/service-terms/
  title: Amazon Mechanical Turk
  version: 2017-01-17
  x-release: v4
  x-logo:
    url: https://twitter.com/awscloud/profile_image?size=original
    backgroundColor: '#FFFFFF'
  x-providerName: amazonaws.com
  x-serviceName: mturk-requester
  x-origin:
  - contentType: application/json
    url: https://raw.githubusercontent.com/aws/aws-sdk-js/master/apis/mturk-requester-2017-01-17.normal.json
    converter:
      url: https://github.com/mermade/aws2openapi
      version: 1.0.0
    x-apisguru-driver: external
  x-apiClientRegistration:
    url: https://portal.aws.amazon.com/gp/aws/developer/registration/index.html?nc2=h_ct
  x-apisguru-categories:
  - cloud
  x-preferred: true
externalDocs:
  description: Amazon Web Services documentation
  url: https://docs.aws.amazon.com/mturk-requester/
servers:
- description: The Amazon MTurk multi-region endpoint
  url: "http://mturk-requester.{region}.amazonaws.com"
  variables:
    region:
      default: us-east-1
      description: The AWS region
      enum:
      - us-east-1
      - us-east-2
      - us-west-1
      - us-west-2
      - us-gov-west-1
      - us-gov-east-1
      - ca-central-1
      - eu-north-1
      - eu-west-1
      - eu-west-2
      - eu-west-3
      - eu-central-1
      - eu-south-1
      - af-south-1
      - ap-northeast-1
      - ap-northeast-2
      - ap-northeast-3
      - ap-southeast-1
      - ap-southeast-2
      - ap-east-1
      - ap-south-1
      - sa-east-1
      - me-south-1
- description: The Amazon MTurk multi-region endpoint
  url: "https://mturk-requester.{region}.amazonaws.com"
  variables:
    region:
      default: us-east-1
      description: The AWS region
      enum:
      - us-east-1
      - us-east-2
      - us-west-1
      - us-west-2
      - us-gov-west-1
      - us-gov-east-1
      - ca-central-1
      - eu-north-1
      - eu-west-1
      - eu-west-2
      - eu-west-3
      - eu-central-1
      - eu-south-1
      - af-south-1
      - ap-northeast-1
      - ap-northeast-2
      - ap-northeast-3
      - ap-southeast-1
      - ap-southeast-2
      - ap-east-1
      - ap-south-1
      - sa-east-1
      - me-south-1
- description: The Amazon MTurk endpoint for China (Beijing) and China (Ningxia)
  url: "http://mturk-requester.{region}.amazonaws.com.cn"
  variables:
    region:
      default: cn-north-1
      description: The AWS region
      enum:
      - cn-north-1
      - cn-northwest-1
- description: The Amazon MTurk endpoint for China (Beijing) and China (Ningxia)
  url: "https://mturk-requester.{region}.amazonaws.com.cn"
  variables:
    region:
      default: cn-north-1
      description: The AWS region
      enum:
      - cn-north-1
      - cn-northwest-1
security:
- hmac: []
paths:
  /#X-Amz-Target=MTurkRequesterServiceV20170117.AcceptQualificationRequest:
    post:
      description: <p> The <code>AcceptQualificationRequest</code> operation approves
        a Worker's request for a Qualification. </p> <p> Only the owner of the Qualification
        type can grant a Qualification request for that type. </p> <p> A successful
        request for the <code>AcceptQualificationRequest</code> operation returns
        with no errors and an empty body. </p>
      operationId: AcceptQualificationRequest
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - MTurkRequesterServiceV20170117.AcceptQualificationRequest
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AcceptQualificationRequestRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AcceptQualificationRequestResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceFault'
          description: ServiceFault
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RequestError'
          description: RequestError
      x-content-type: application/json
      x-accepts:
      - application/json
  /#X-Amz-Target=MTurkRequesterServiceV20170117.ApproveAssignment:
    post:
      description: "<p> The <code>ApproveAssignment</code> operation approves the\
        \ results of a completed assignment. </p> <p> Approving an assignment initiates\
        \ two payments from the Requester's Amazon.com account </p> <ul> <li> <p>\
        \ The Worker who submitted the results is paid the reward specified in the\
        \ HIT. </p> </li> <li> <p> Amazon Mechanical Turk fees are debited. </p> </li>\
        \ </ul> <p> If the Requester's account does not have adequate funds for these\
        \ payments, the call to ApproveAssignment returns an exception, and the approval\
        \ is not processed. You can include an optional feedback message with the\
        \ approval, which the Worker can see in the Status section of the web site.\
        \ </p> <p> You can also call this operation for assignments that were previous\
        \ rejected and approve them by explicitly overriding the previous rejection.\
        \ This only works on rejected assignments that were submitted within the previous\
        \ 30 days and only if the assignment's related HIT has not been deleted. </p>"
      operationId: ApproveAssignment
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - MTurkRequesterServiceV20170117.ApproveAssignment
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ApproveAssignmentRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApproveAssignmentResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceFault'
          description: ServiceFault
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RequestError'
          description: RequestError
      x-content-type: application/json
      x-accepts:
      - application/json
  /#X-Amz-Target=MTurkRequesterServiceV20170117.AssociateQualificationWithWorker:
    post:
      description: "<p> The <code>AssociateQualificationWithWorker</code> operation\
        \ gives a Worker a Qualification. <code>AssociateQualificationWithWorker</code>\
        \ does not require that the Worker submit a Qualification request. It gives\
        \ the Qualification directly to the Worker. </p> <p> You can only assign a\
        \ Qualification of a Qualification type that you created (using the <code>CreateQualificationType</code>\
        \ operation). </p> <note> <p> Note: <code>AssociateQualificationWithWorker</code>\
        \ does not affect any pending Qualification requests for the Qualification\
        \ by the Worker. If you assign a Qualification to a Worker, then later grant\
        \ a Qualification request made by the Worker, the granting of the request\
        \ may modify the Qualification score. To resolve a pending Qualification request\
        \ without affecting the Qualification the Worker already has, reject the request\
        \ with the <code>RejectQualificationRequest</code> operation. </p> </note>"
      operationId: AssociateQualificationWithWorker
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - MTurkRequesterServiceV20170117.AssociateQualificationWithWorker
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AssociateQualificationWithWorkerRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AssociateQualificationWithWorkerResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceFault'
          description: ServiceFault
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RequestError'
          description: RequestError
      x-content-type: application/json
      x-accepts:
      - application/json
  /#X-Amz-Target=MTurkRequesterServiceV20170117.CreateAdditionalAssignmentsForHIT:
    post:
      description: "<p> The <code>CreateAdditionalAssignmentsForHIT</code> operation\
        \ increases the maximum number of assignments of an existing HIT. </p> <p>\
        \ To extend the maximum number of assignments, specify the number of additional\
        \ assignments.</p> <note> <ul> <li> <p>HITs created with fewer than 10 assignments\
        \ cannot be extended to have 10 or more assignments. Attempting to add assignments\
        \ in a way that brings the total number of assignments for a HIT from fewer\
        \ than 10 assignments to 10 or more assignments will result in an <code>AWS.MechanicalTurk.InvalidMaximumAssignmentsIncrease</code>\
        \ exception.</p> </li> <li> <p>HITs that were created before July 22, 2015\
        \ cannot be extended. Attempting to extend HITs that were created before July\
        \ 22, 2015 will result in an <code>AWS.MechanicalTurk.HITTooOldForExtension</code>\
        \ exception. </p> </li> </ul> </note>"
      operationId: CreateAdditionalAssignmentsForHIT
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - MTurkRequesterServiceV20170117.CreateAdditionalAssignmentsForHIT
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateAdditionalAssignmentsForHITRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateAdditionalAssignmentsForHITResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceFault'
          description: ServiceFault
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RequestError'
          description: RequestError
      x-content-type: application/json
      x-accepts:
      - application/json
  /#X-Amz-Target=MTurkRequesterServiceV20170117.CreateHIT:
    post:
      description: "<p>The <code>CreateHIT</code> operation creates a new Human Intelligence\
        \ Task (HIT). The new HIT is made available for Workers to find and accept\
        \ on the Amazon Mechanical Turk website. </p> <p> This operation allows you\
        \ to specify a new HIT by passing in values for the properties of the HIT,\
        \ such as its title, reward amount and number of assignments. When you pass\
        \ these values to <code>CreateHIT</code>, a new HIT is created for you, with\
        \ a new <code>HITTypeID</code>. The HITTypeID can be used to create additional\
        \ HITs in the future without needing to specify common parameters such as\
        \ the title, description and reward amount each time.</p> <p> An alternative\
        \ way to create HITs is to first generate a HITTypeID using the <code>CreateHITType</code>\
        \ operation and then call the <code>CreateHITWithHITType</code> operation.\
        \ This is the recommended best practice for Requesters who are creating large\
        \ numbers of HITs. </p> <p>CreateHIT also supports several ways to provide\
        \ question data: by providing a value for the <code>Question</code> parameter\
        \ that fully specifies the contents of the HIT, or by providing a <code>HitLayoutId</code>\
        \ and associated <code>HitLayoutParameters</code>. </p> <note> <p> If a HIT\
        \ is created with 10 or more maximum assignments, there is an additional fee.\
        \ For more information, see <a href=\"https://requester.mturk.com/pricing\"\
        >Amazon Mechanical Turk Pricing</a>.</p> </note>"
      operationId: CreateHIT
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - MTurkRequesterServiceV20170117.CreateHIT
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateHITRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateHITResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceFault'
          description: ServiceFault
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RequestError'
          description: RequestError
      x-content-type: application/json
      x-accepts:
      - application/json
  /#X-Amz-Target=MTurkRequesterServiceV20170117.CreateHITType:
    post:
      description: " The <code>CreateHITType</code> operation creates a new HIT type.\
        \ This operation allows you to define a standard set of HIT properties to\
        \ use when creating HITs. If you register a HIT type with values that match\
        \ an existing HIT type, the HIT type ID of the existing type will be returned. "
      operationId: CreateHITType
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - MTurkRequesterServiceV20170117.CreateHITType
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateHITTypeRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateHITTypeResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceFault'
          description: ServiceFault
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RequestError'
          description: RequestError
      x-content-type: application/json
      x-accepts:
      - application/json
  /#X-Amz-Target=MTurkRequesterServiceV20170117.CreateHITWithHITType:
    post:
      description: "<p> The <code>CreateHITWithHITType</code> operation creates a\
        \ new Human Intelligence Task (HIT) using an existing HITTypeID generated\
        \ by the <code>CreateHITType</code> operation. </p> <p> This is an alternative\
        \ way to create HITs from the <code>CreateHIT</code> operation. This is the\
        \ recommended best practice for Requesters who are creating large numbers\
        \ of HITs. </p> <p>CreateHITWithHITType also supports several ways to provide\
        \ question data: by providing a value for the <code>Question</code> parameter\
        \ that fully specifies the contents of the HIT, or by providing a <code>HitLayoutId</code>\
        \ and associated <code>HitLayoutParameters</code>. </p> <note> <p> If a HIT\
        \ is created with 10 or more maximum assignments, there is an additional fee.\
        \ For more information, see <a href=\"https://requester.mturk.com/pricing\"\
        >Amazon Mechanical Turk Pricing</a>. </p> </note>"
      operationId: CreateHITWithHITType
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - MTurkRequesterServiceV20170117.CreateHITWithHITType
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateHITWithHITTypeRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateHITWithHITTypeResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceFault'
          description: ServiceFault
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RequestError'
          description: RequestError
      x-content-type: application/json
      x-accepts:
      - application/json
  /#X-Amz-Target=MTurkRequesterServiceV20170117.CreateQualificationType:
    post:
      description: " The <code>CreateQualificationType</code> operation creates a\
        \ new Qualification type, which is represented by a <code>QualificationType</code>\
        \ data structure. "
      operationId: CreateQualificationType
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - MTurkRequesterServiceV20170117.CreateQualificationType
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateQualificationTypeRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateQualificationTypeResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceFault'
          description: ServiceFault
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RequestError'
          description: RequestError
      x-content-type: application/json
      x-accepts:
      - application/json
  /#X-Amz-Target=MTurkRequesterServiceV20170117.CreateWorkerBlock:
    post:
      description: "The <code>CreateWorkerBlock</code> operation allows you to prevent\
        \ a Worker from working on your HITs. For example, you can block a Worker\
        \ who is producing poor quality work. You can block up to 100,000 Workers."
      operationId: CreateWorkerBlock
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - MTurkRequesterServiceV20170117.CreateWorkerBlock
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateWorkerBlockRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateWorkerBlockResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceFault'
          description: ServiceFault
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RequestError'
          description: RequestError
      x-content-type: application/json
      x-accepts:
      - application/json
  /#X-Amz-Target=MTurkRequesterServiceV20170117.DeleteHIT:
    post:
      description: "<p> The <code>DeleteHIT</code> operation is used to delete HIT\
        \ that is no longer needed. Only the Requester who created the HIT can delete\
        \ it. </p> <p> You can only dispose of HITs that are in the <code>Reviewable</code>\
        \ state, with all of their submitted assignments already either approved or\
        \ rejected. If you call the DeleteHIT operation on a HIT that is not in the\
        \ <code>Reviewable</code> state (for example, that has not expired, or still\
        \ has active assignments), or on a HIT that is Reviewable but without all\
        \ of its submitted assignments already approved or rejected, the service will\
        \ return an error. </p> <note> <ul> <li> <p> HITs are automatically disposed\
        \ of after 120 days. </p> </li> <li> <p> After you dispose of a HIT, you can\
        \ no longer approve the HIT's rejected assignments. </p> </li> <li> <p> Disposed\
        \ HITs are not returned in results for the ListHITs operation. </p> </li>\
        \ <li> <p> Disposing HITs can improve the performance of operations such as\
        \ ListReviewableHITs and ListHITs. </p> </li> </ul> </note>"
      operationId: DeleteHIT
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - MTurkRequesterServiceV20170117.DeleteHIT
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeleteHITRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteHITResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceFault'
          description: ServiceFault
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RequestError'
          description: RequestError
      x-content-type: application/json
      x-accepts:
      - application/json
  /#X-Amz-Target=MTurkRequesterServiceV20170117.DeleteQualificationType:
    post:
      description: "<p> The <code>DeleteQualificationType</code> deletes a Qualification\
        \ type and deletes any HIT types that are associated with the Qualification\
        \ type. </p> <p>This operation does not revoke Qualifications already assigned\
        \ to Workers because the Qualifications might be needed for active HITs. If\
        \ there are any pending requests for the Qualification type, Amazon Mechanical\
        \ Turk rejects those requests. After you delete a Qualification type, you\
        \ can no longer use it to create HITs or HIT types.</p> <note> <p>DeleteQualificationType\
        \ must wait for all the HITs that use the deleted Qualification type to be\
        \ deleted before completing. It may take up to 48 hours before DeleteQualificationType\
        \ completes and the unique name of the Qualification type is available for\
        \ reuse with CreateQualificationType.</p> </note>"
      operationId: DeleteQualificationType
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - MTurkRequesterServiceV20170117.DeleteQualificationType
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeleteQualificationTypeRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteQualificationTypeResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceFault'
          description: ServiceFault
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RequestError'
          description: RequestError
      x-content-type: application/json
      x-accepts:
      - application/json
  /#X-Amz-Target=MTurkRequesterServiceV20170117.DeleteWorkerBlock:
    post:
      description: "The <code>DeleteWorkerBlock</code> operation allows you to reinstate\
        \ a blocked Worker to work on your HITs. This operation reverses the effects\
        \ of the CreateWorkerBlock operation. You need the Worker ID to use this operation.\
        \ If the Worker ID is missing or invalid, this operation fails and returns\
        \ the message “WorkerId is invalid.” If the specified Worker is not blocked,\
        \ this operation returns successfully."
      operationId: DeleteWorkerBlock
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - MTurkRequesterServiceV20170117.DeleteWorkerBlock
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeleteWorkerBlockRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteWorkerBlockResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceFault'
          description: ServiceFault
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RequestError'
          description: RequestError
      x-content-type: application/json
      x-accepts:
      - application/json
  /#X-Amz-Target=MTurkRequesterServiceV20170117.DisassociateQualificationFromWorker:
    post:
      description: <p> The <code>DisassociateQualificationFromWorker</code> revokes
        a previously granted Qualification from a user. </p> <p> You can provide a
        text message explaining why the Qualification was revoked. The user who had
        the Qualification can see this message. </p>
      operationId: DisassociateQualificationFromWorker
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - MTurkRequesterServiceV20170117.DisassociateQualificationFromWorker
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DisassociateQualificationFromWorkerRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DisassociateQualificationFromWorkerResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceFault'
          description: ServiceFault
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RequestError'
          description: RequestError
      x-content-type: application/json
      x-accepts:
      - application/json
  /#X-Amz-Target=MTurkRequesterServiceV20170117.GetAccountBalance:
    post:
      description: "The <code>GetAccountBalance</code> operation retrieves the Prepaid\
        \ HITs balance in your Amazon Mechanical Turk account if you are a Prepaid\
        \ Requester. Alternatively, this operation will retrieve the remaining available\
        \ AWS Billing usage if you have enabled AWS Billing. Note: If you have enabled\
        \ AWS Billing and still have a remaining Prepaid HITs balance, this balance\
        \ can be viewed on the My Account page in the Requester console."
      operationId: GetAccountBalance
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - MTurkRequesterServiceV20170117.GetAccountBalance
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetAccountBalanceRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetAccountBalanceResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceFault'
          description: ServiceFault
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RequestError'
          description: RequestError
      x-content-type: application/json
      x-accepts:
      - application/json
  /#X-Amz-Target=MTurkRequesterServiceV20170117.GetAssignment:
    post:
      description: ' The <code>GetAssignment</code> operation retrieves the details
        of the specified Assignment. '
      operationId: GetAssignment
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - MTurkRequesterServiceV20170117.GetAssignment
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetAssignmentRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetAssignmentResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceFault'
          description: ServiceFault
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RequestError'
          description: RequestError
      x-content-type: application/json
      x-accepts:
      - application/json
  /#X-Amz-Target=MTurkRequesterServiceV20170117.GetFileUploadURL:
    post:
      description: " The <code>GetFileUploadURL</code> operation generates and returns\
        \ a temporary URL. You use the temporary URL to retrieve a file uploaded by\
        \ a Worker as an answer to a FileUploadAnswer question for a HIT. The temporary\
        \ URL is generated the instant the GetFileUploadURL operation is called, and\
        \ is valid for 60 seconds. You can get a temporary file upload URL any time\
        \ until the HIT is disposed. After the HIT is disposed, any uploaded files\
        \ are deleted, and cannot be retrieved. Pending Deprecation on December 12,\
        \ 2017. The Answer Specification structure will no longer support the <code>FileUploadAnswer</code>\
        \ element to be used for the QuestionForm data structure. Instead, we recommend\
        \ that Requesters who want to create HITs asking Workers to upload files to\
        \ use Amazon S3. "
      operationId: GetFileUploadURL
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - MTurkRequesterServiceV20170117.GetFileUploadURL
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetFileUploadURLRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetFileUploadURLResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceFault'
          description: ServiceFault
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RequestError'
          description: RequestError
      x-content-type: application/json
      x-accepts:
      - application/json
  /#X-Amz-Target=MTurkRequesterServiceV20170117.GetHIT:
    post:
      description: ' The <code>GetHIT</code> operation retrieves the details of the
        specified HIT. '
      operationId: GetHIT
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - MTurkRequesterServiceV20170117.GetHIT
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetHITRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetHITResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceFault'
          description: ServiceFault
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RequestError'
          description: RequestError
      x-content-type: application/json
      x-accepts:
      - application/json
  /#X-Amz-Target=MTurkRequesterServiceV20170117.GetQualificationScore:
    post:
      description: "<p> The <code>GetQualificationScore</code> operation returns the\
        \ value of a Worker's Qualification for a given Qualification type. </p> <p>\
        \ To get a Worker's Qualification, you must know the Worker's ID. The Worker's\
        \ ID is included in the assignment data returned by the <code>ListAssignmentsForHIT</code>\
        \ operation. </p> <p>Only the owner of a Qualification type can query the\
        \ value of a Worker's Qualification of that type.</p>"
      operationId: GetQualificationScore
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - MTurkRequesterServiceV20170117.GetQualificationScore
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetQualificationScoreRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetQualificationScoreResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceFault'
          description: ServiceFault
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RequestError'
          description: RequestError
      x-content-type: application/json
      x-accepts:
      - application/json
  /#X-Amz-Target=MTurkRequesterServiceV20170117.GetQualificationType:
    post:
      description: ' The <code>GetQualificationType</code>operation retrieves information
        about a Qualification type using its ID. '
      operationId: GetQualificationType
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - MTurkRequesterServiceV20170117.GetQualificationType
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetQualificationTypeRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetQualificationTypeResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceFault'
          description: ServiceFault
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RequestError'
          description: RequestError
      x-content-type: application/json
      x-accepts:
      - application/json
  /#X-Amz-Target=MTurkRequesterServiceV20170117.ListAssignmentsForHIT:
    post:
      description: "<p> The <code>ListAssignmentsForHIT</code> operation retrieves\
        \ completed assignments for a HIT. You can use this operation to retrieve\
        \ the results for a HIT. </p> <p> You can get assignments for a HIT at any\
        \ time, even if the HIT is not yet Reviewable. If a HIT requested multiple\
        \ assignments, and has received some results but has not yet become Reviewable,\
        \ you can still retrieve the partial results with this operation. </p> <p>\
        \ Use the AssignmentStatus parameter to control which set of assignments for\
        \ a HIT are returned. The ListAssignmentsForHIT operation can return submitted\
        \ assignments awaiting approval, or it can return assignments that have already\
        \ been approved or rejected. You can set AssignmentStatus=Approved,Rejected\
        \ to get assignments that have already been approved and rejected together\
        \ in one result set. </p> <p> Only the Requester who created the HIT can retrieve\
        \ the assignments for that HIT. </p> <p> Results are sorted and divided into\
        \ numbered pages and the operation returns a single page of results. You can\
        \ use the parameters of the operation to control sorting and pagination. </p>"
      operationId: ListAssignmentsForHIT
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: Pagination limit
        explode: true
        in: query
        name: MaxResults
        required: false
        schema:
          type: string
        style: form
      - description: Pagination token
        explode: true
        in: query
        name: NextToken
        required: false
        schema:
          type: string
        style: form
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - MTurkRequesterServiceV20170117.ListAssignmentsForHIT
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ListAssignmentsForHITRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListAssignmentsForHITResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceFault'
          description: ServiceFault
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RequestError'
          description: RequestError
      x-content-type: application/json
      x-accepts:
      - application/json
  /#X-Amz-Target=MTurkRequesterServiceV20170117.ListBonusPayments:
    post:
      description: ' The <code>ListBonusPayments</code> operation retrieves the amounts
        of bonuses you have paid to Workers for a given HIT or assignment. '
      operationId: ListBonusPayments
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: Pagination limit
        explode: true
        in: query
        name: MaxResults
        required: false
        schema:
          type: string
        style: form
      - description: Pagination token
        explode: true
        in: query
        name: NextToken
        required: false
        schema:
          type: string
        style: form
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - MTurkRequesterServiceV20170117.ListBonusPayments
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ListBonusPaymentsRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListBonusPaymentsResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceFault'
          description: ServiceFault
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RequestError'
          description: RequestError
      x-content-type: application/json
      x-accepts:
      - application/json
  /#X-Amz-Target=MTurkRequesterServiceV20170117.ListHITs:
    post:
      description: " The <code>ListHITs</code> operation returns all of a Requester's\
        \ HITs. The operation returns HITs of any status, except for HITs that have\
        \ been deleted of with the DeleteHIT operation or that have been auto-deleted. "
      operationId: ListHITs
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: Pagination limit
        explode: true
        in: query
        name: MaxResults
        required: false
        schema:
          type: string
        style: form
      - description: Pagination token
        explode: true
        in: query
        name: NextToken
        required: false
        schema:
          type: string
        style: form
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - MTurkRequesterServiceV20170117.ListHITs
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ListHITsRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListHITsResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceFault'
          description: ServiceFault
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RequestError'
          description: RequestError
      x-content-type: application/json
      x-accepts:
      - application/json
  /#X-Amz-Target=MTurkRequesterServiceV20170117.ListHITsForQualificationType:
    post:
      description: " The <code>ListHITsForQualificationType</code> operation returns\
        \ the HITs that use the given Qualification type for a Qualification requirement.\
        \ The operation returns HITs of any status, except for HITs that have been\
        \ deleted with the <code>DeleteHIT</code> operation or that have been auto-deleted. "
      operationId: ListHITsForQualificationType
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: Pagination limit
        explode: true
        in: query
        name: MaxResults
        required: false
        schema:
          type: string
        style: form
      - description: Pagination token
        explode: true
        in: query
        name: NextToken
        required: false
        schema:
          type: string
        style: form
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - MTurkRequesterServiceV20170117.ListHITsForQualificationType
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ListHITsForQualificationTypeRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListHITsForQualificationTypeResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceFault'
          description: ServiceFault
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RequestError'
          description: RequestError
      x-content-type: application/json
      x-accepts:
      - application/json
  /#X-Amz-Target=MTurkRequesterServiceV20170117.ListQualificationRequests:
    post:
      description: " The <code>ListQualificationRequests</code> operation retrieves\
        \ requests for Qualifications of a particular Qualification type. The owner\
        \ of the Qualification type calls this operation to poll for pending requests,\
        \ and accepts them using the AcceptQualification operation. "
      operationId: ListQualificationRequests
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: Pagination limit
        explode: true
        in: query
        name: MaxResults
        required: false
        schema:
          type: string
        style: form
      - description: Pagination token
        explode: true
        in: query
        name: NextToken
        required: false
        schema:
          type: string
        style: form
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - MTurkRequesterServiceV20170117.ListQualificationRequests
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ListQualificationRequestsRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListQualificationRequestsResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceFault'
          description: ServiceFault
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RequestError'
          description: RequestError
      x-content-type: application/json
      x-accepts:
      - application/json
  /#X-Amz-Target=MTurkRequesterServiceV20170117.ListQualificationTypes:
    post:
      description: " The <code>ListQualificationTypes</code> operation returns a list\
        \ of Qualification types, filtered by an optional search term. "
      operationId: ListQualificationTypes
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: Pagination limit
        explode: true
        in: query
        name: MaxResults
        required: false
        schema:
          type: string
        style: form
      - description: Pagination token
        explode: true
        in: query
        name: NextToken
        required: false
        schema:
          type: string
        style: form
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - MTurkRequesterServiceV20170117.ListQualificationTypes
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ListQualificationTypesRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListQualificationTypesResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceFault'
          description: ServiceFault
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RequestError'
          description: RequestError
      x-content-type: application/json
      x-accepts:
      - application/json
  /#X-Amz-Target=MTurkRequesterServiceV20170117.ListReviewPolicyResultsForHIT:
    post:
      description: " The <code>ListReviewPolicyResultsForHIT</code> operation retrieves\
        \ the computed results and the actions taken in the course of executing your\
        \ Review Policies for a given HIT. For information about how to specify Review\
        \ Policies when you call CreateHIT, see Review Policies. The ListReviewPolicyResultsForHIT\
        \ operation can return results for both Assignment-level and HIT-level review\
        \ results. "
      operationId: ListReviewPolicyResultsForHIT
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: Pagination limit
        explode: true
        in: query
        name: MaxResults
        required: false
        schema:
          type: string
        style: form
      - description: Pagination token
        explode: true
        in: query
        name: NextToken
        required: false
        schema:
          type: string
        style: form
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - MTurkRequesterServiceV20170117.ListReviewPolicyResultsForHIT
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ListReviewPolicyResultsForHITRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListReviewPolicyResultsForHITResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceFault'
          description: ServiceFault
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RequestError'
          description: RequestError
      x-content-type: application/json
      x-accepts:
      - application/json
  /#X-Amz-Target=MTurkRequesterServiceV20170117.ListReviewableHITs:
    post:
      description: ' The <code>ListReviewableHITs</code> operation retrieves the HITs
        with Status equal to Reviewable or Status equal to Reviewing that belong to
        the Requester calling the operation. '
      operationId: ListReviewableHITs
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: Pagination limit
        explode: true
        in: query
        name: MaxResults
        required: false
        schema:
          type: string
        style: form
      - description: Pagination token
        explode: true
        in: query
        name: NextToken
        required: false
        schema:
          type: string
        style: form
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - MTurkRequesterServiceV20170117.ListReviewableHITs
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ListReviewableHITsRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListReviewableHITsResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceFault'
          description: ServiceFault
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RequestError'
          description: RequestError
      x-content-type: application/json
      x-accepts:
      - application/json
  /#X-Amz-Target=MTurkRequesterServiceV20170117.ListWorkerBlocks:
    post:
      description: The <code>ListWorkersBlocks</code> operation retrieves a list of
        Workers who are blocked from working on your HITs.
      operationId: ListWorkerBlocks
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: Pagination limit
        explode: true
        in: query
        name: MaxResults
        required: false
        schema:
          type: string
        style: form
      - description: Pagination token
        explode: true
        in: query
        name: NextToken
        required: false
        schema:
          type: string
        style: form
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - MTurkRequesterServiceV20170117.ListWorkerBlocks
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ListWorkerBlocksRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListWorkerBlocksResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceFault'
          description: ServiceFault
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RequestError'
          description: RequestError
      x-content-type: application/json
      x-accepts:
      - application/json
  /#X-Amz-Target=MTurkRequesterServiceV20170117.ListWorkersWithQualificationType:
    post:
      description: ' The <code>ListWorkersWithQualificationType</code> operation returns
        all of the Workers that have been associated with a given Qualification type. '
      operationId: ListWorkersWithQualificationType
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: Pagination limit
        explode: true
        in: query
        name: MaxResults
        required: false
        schema:
          type: string
        style: form
      - description: Pagination token
        explode: true
        in: query
        name: NextToken
        required: false
        schema:
          type: string
        style: form
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - MTurkRequesterServiceV20170117.ListWorkersWithQualificationType
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ListWorkersWithQualificationTypeRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListWorkersWithQualificationTypeResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceFault'
          description: ServiceFault
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RequestError'
          description: RequestError
      x-content-type: application/json
      x-accepts:
      - application/json
  /#X-Amz-Target=MTurkRequesterServiceV20170117.NotifyWorkers:
    post:
      description: ' The <code>NotifyWorkers</code> operation sends an email to one
        or more Workers that you specify with the Worker ID. You can specify up to
        100 Worker IDs to send the same message with a single call to the NotifyWorkers
        operation. The NotifyWorkers operation will send a notification email to a
        Worker only if you have previously approved or rejected work from the Worker. '
      operationId: NotifyWorkers
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - MTurkRequesterServiceV20170117.NotifyWorkers
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NotifyWorkersRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotifyWorkersResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceFault'
          description: ServiceFault
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RequestError'
          description: RequestError
      x-content-type: application/json
      x-accepts:
      - application/json
  /#X-Amz-Target=MTurkRequesterServiceV20170117.RejectAssignment:
    post:
      description: "<p> The <code>RejectAssignment</code> operation rejects the results\
        \ of a completed assignment. </p> <p> You can include an optional feedback\
        \ message with the rejection, which the Worker can see in the Status section\
        \ of the web site. When you include a feedback message with the rejection,\
        \ it helps the Worker understand why the assignment was rejected, and can\
        \ improve the quality of the results the Worker submits in the future. </p>\
        \ <p> Only the Requester who created the HIT can reject an assignment for\
        \ the HIT. </p>"
      operationId: RejectAssignment
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - MTurkRequesterServiceV20170117.RejectAssignment
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RejectAssignmentRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RejectAssignmentResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceFault'
          description: ServiceFault
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RequestError'
          description: RequestError
      x-content-type: application/json
      x-accepts:
      - application/json
  /#X-Amz-Target=MTurkRequesterServiceV20170117.RejectQualificationRequest:
    post:
      description: <p> The <code>RejectQualificationRequest</code> operation rejects
        a user's request for a Qualification. </p> <p> You can provide a text message
        explaining why the request was rejected. The Worker who made the request can
        see this message.</p>
      operationId: RejectQualificationRequest
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - MTurkRequesterServiceV20170117.RejectQualificationRequest
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RejectQualificationRequestRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RejectQualificationRequestResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceFault'
          description: ServiceFault
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RequestError'
          description: RequestError
      x-content-type: application/json
      x-accepts:
      - application/json
  /#X-Amz-Target=MTurkRequesterServiceV20170117.SendBonus:
    post:
      description: " The <code>SendBonus</code> operation issues a payment of money\
        \ from your account to a Worker. This payment happens separately from the\
        \ reward you pay to the Worker when you approve the Worker's assignment. The\
        \ SendBonus operation requires the Worker's ID and the assignment ID as parameters\
        \ to initiate payment of the bonus. You must include a message that explains\
        \ the reason for the bonus payment, as the Worker may not be expecting the\
        \ payment. Amazon Mechanical Turk collects a fee for bonus payments, similar\
        \ to the HIT listing fee. This operation fails if your account does not have\
        \ enough funds to pay for both the bonus and the fees. "
      operationId: SendBonus
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - MTurkRequesterServiceV20170117.SendBonus
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SendBonusRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SendBonusResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceFault'
          description: ServiceFault
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RequestError'
          description: RequestError
      x-content-type: application/json
      x-accepts:
      - application/json
  /#X-Amz-Target=MTurkRequesterServiceV20170117.SendTestEventNotification:
    post:
      description: " The <code>SendTestEventNotification</code> operation causes Amazon\
        \ Mechanical Turk to send a notification message as if a HIT event occurred,\
        \ according to the provided notification specification. This allows you to\
        \ test notifications without setting up notifications for a real HIT type\
        \ and trying to trigger them using the website. When you call this operation,\
        \ the service attempts to send the test notification immediately. "
      operationId: SendTestEventNotification
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - MTurkRequesterServiceV20170117.SendTestEventNotification
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SendTestEventNotificationRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SendTestEventNotificationResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceFault'
          description: ServiceFault
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RequestError'
          description: RequestError
      x-content-type: application/json
      x-accepts:
      - application/json
  /#X-Amz-Target=MTurkRequesterServiceV20170117.UpdateExpirationForHIT:
    post:
      description: " The <code>UpdateExpirationForHIT</code> operation allows you\
        \ update the expiration time of a HIT. If you update it to a time in the past,\
        \ the HIT will be immediately expired. "
      operationId: UpdateExpirationForHIT
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - MTurkRequesterServiceV20170117.UpdateExpirationForHIT
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateExpirationForHITRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateExpirationForHITResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceFault'
          description: ServiceFault
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RequestError'
          description: RequestError
      x-content-type: application/json
      x-accepts:
      - application/json
  /#X-Amz-Target=MTurkRequesterServiceV20170117.UpdateHITReviewStatus:
    post:
      description: " The <code>UpdateHITReviewStatus</code> operation updates the\
        \ status of a HIT. If the status is Reviewable, this operation can update\
        \ the status to Reviewing, or it can revert a Reviewing HIT back to the Reviewable\
        \ status. "
      operationId: UpdateHITReviewStatus
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - MTurkRequesterServiceV20170117.UpdateHITReviewStatus
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateHITReviewStatusRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateHITReviewStatusResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceFault'
          description: ServiceFault
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RequestError'
          description: RequestError
      x-content-type: application/json
      x-accepts:
      - application/json
  /#X-Amz-Target=MTurkRequesterServiceV20170117.UpdateHITTypeOfHIT:
    post:
      description: ' The <code>UpdateHITTypeOfHIT</code> operation allows you to change
        the HITType properties of a HIT. This operation disassociates the HIT from
        its old HITType properties and associates it with the new HITType properties.
        The HIT takes on the properties of the new HITType in place of the old ones. '
      operationId: UpdateHITTypeOfHIT
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - MTurkRequesterServiceV20170117.UpdateHITTypeOfHIT
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateHITTypeOfHITRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateHITTypeOfHITResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceFault'
          description: ServiceFault
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RequestError'
          description: RequestError
      x-content-type: application/json
      x-accepts:
      - application/json
  /#X-Amz-Target=MTurkRequesterServiceV20170117.UpdateNotificationSettings:
    post:
      description: " The <code>UpdateNotificationSettings</code> operation creates,\
        \ updates, disables or re-enables notifications for a HIT type. If you call\
        \ the UpdateNotificationSettings operation for a HIT type that already has\
        \ a notification specification, the operation replaces the old specification\
        \ with a new one. You can call the UpdateNotificationSettings operation to\
        \ enable or disable notifications for the HIT type, without having to modify\
        \ the notification specification itself by providing updates to the Active\
        \ status without specifying a new notification specification. To change the\
        \ Active status of a HIT type's notifications, the HIT type must already have\
        \ a notification specification, or one must be provided in the same call to\
        \ <code>UpdateNotificationSettings</code>. "
      operationId: UpdateNotificationSettings
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - MTurkRequesterServiceV20170117.UpdateNotificationSettings
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateNotificationSettingsRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateNotificationSettingsResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceFault'
          description: ServiceFault
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RequestError'
          description: RequestError
      x-content-type: application/json
      x-accepts:
      - application/json
  /#X-Amz-Target=MTurkRequesterServiceV20170117.UpdateQualificationType:
    post:
      description: "<p> The <code>UpdateQualificationType</code> operation modifies\
        \ the attributes of an existing Qualification type, which is represented by\
        \ a QualificationType data structure. Only the owner of a Qualification type\
        \ can modify its attributes. </p> <p> Most attributes of a Qualification type\
        \ can be changed after the type has been created. However, the Name and Keywords\
        \ fields cannot be modified. The RetryDelayInSeconds parameter can be modified\
        \ or added to change the delay or to enable retries, but RetryDelayInSeconds\
        \ cannot be used to disable retries. </p> <p> You can use this operation to\
        \ update the test for a Qualification type. The test is updated based on the\
        \ values specified for the Test, TestDurationInSeconds and AnswerKey parameters.\
        \ All three parameters specify the updated test. If you are updating the test\
        \ for a type, you must specify the Test and TestDurationInSeconds parameters.\
        \ The AnswerKey parameter is optional; omitting it specifies that the updated\
        \ test does not have an answer key. </p> <p> If you omit the Test parameter,\
        \ the test for the Qualification type is unchanged. There is no way to remove\
        \ a test from a Qualification type that has one. If the type already has a\
        \ test, you cannot update it to be AutoGranted. If the Qualification type\
        \ does not have a test and one is provided by an update, the type will henceforth\
        \ have a test. </p> <p> If you want to update the test duration or answer\
        \ key for an existing test without changing the questions, you must specify\
        \ a Test parameter with the original questions, along with the updated values.\
        \ </p> <p> If you provide an updated Test but no AnswerKey, the new test will\
        \ not have an answer key. Requests for such Qualifications must be granted\
        \ manually. </p> <p> You can also update the AutoGranted and AutoGrantedValue\
        \ attributes of the Qualification type.</p>"
      operationId: UpdateQualificationType
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - MTurkRequesterServiceV20170117.UpdateQualificationType
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateQualificationTypeRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateQualificationTypeResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceFault'
          description: ServiceFault
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RequestError'
          description: RequestError
      x-content-type: application/json
      x-accepts:
      - application/json
components:
  parameters:
    X-Amz-Content-Sha256:
      explode: false
      in: header
      name: X-Amz-Content-Sha256
      required: false
      schema:
        type: string
      style: simple
    X-Amz-Date:
      explode: false
      in: header
      name: X-Amz-Date
      required: false
      schema:
        type: string
      style: simple
    X-Amz-Algorithm:
      explode: false
      in: header
      name: X-Amz-Algorithm
      required: false
      schema:
        type: string
      style: simple
    X-Amz-Credential:
      explode: false
      in: header
      name: X-Amz-Credential
      required: false
      schema:
        type: string
      style: simple
    X-Amz-Security-Token:
      explode: false
      in: header
      name: X-Amz-Security-Token
      required: false
      schema:
        type: string
      style: simple
    X-Amz-Signature:
      explode: false
      in: header
      name: X-Amz-Signature
      required: false
      schema:
        type: string
      style: simple
    X-Amz-SignedHeaders:
      explode: false
      in: header
      name: X-Amz-SignedHeaders
      required: false
      schema:
        type: string
      style: simple
  schemas:
    AcceptQualificationRequestResponse:
      properties: {}
      type: object
    AcceptQualificationRequestRequest:
      example:
        QualificationRequestId: ""
        IntegerValue: ""
      properties:
        QualificationRequestId:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: "The ID of the Qualification request, as returned by the\
              \ <code>GetQualificationRequests</code> operation."
        IntegerValue:
          allOf:
          - $ref: '#/components/schemas/Integer'
          - description: ' The value of the Qualification. You can omit this value
              if you are using the presence or absence of the Qualification as the
              basis for a HIT requirement. '
      required:
      - QualificationRequestId
      title: AcceptQualificationRequestRequest
      type: object
    ServiceFault: {}
    RequestError: {}
    ApproveAssignmentResponse:
      properties: {}
      type: object
    ApproveAssignmentRequest:
      example:
        OverrideRejection: ""
        AssignmentId: ""
        RequesterFeedback: ""
      properties:
        AssignmentId:
          allOf:
          - $ref: '#/components/schemas/EntityId'
          - description: ' The ID of the assignment. The assignment must correspond
              to a HIT created by the Requester. '
        RequesterFeedback:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: " A message for the Worker, which the Worker can see in the\
              \ Status section of the web site. "
        OverrideRejection:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          - description: ' A flag indicating that an assignment should be approved
              even if it was previously rejected. Defaults to <code>False</code>. '
      required:
      - AssignmentId
      title: ApproveAssignmentRequest
      type: object
    AssociateQualificationWithWorkerResponse:
      properties: {}
      type: object
    AssociateQualificationWithWorkerRequest:
      example:
        IntegerValue: ""
        QualificationTypeId: ""
        WorkerId: ""
        SendNotification: ""
      properties:
        QualificationTypeId:
          allOf:
          - $ref: '#/components/schemas/EntityId'
          - description: The ID of the Qualification type to use for the assigned
              Qualification.
        WorkerId:
          allOf:
          - $ref: '#/components/schemas/CustomerId'
          - description: ' The ID of the Worker to whom the Qualification is being
              assigned. Worker IDs are included with submitted HIT assignments and
              Qualification requests. '
        IntegerValue:
          allOf:
          - $ref: '#/components/schemas/Integer'
          - description: The value of the Qualification to assign.
        SendNotification:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          - description: " Specifies whether to send a notification email message\
              \ to the Worker saying that the qualification was assigned to the Worker.\
              \ Note: this is true by default. "
      required:
      - QualificationTypeId
      - WorkerId
      title: AssociateQualificationWithWorkerRequest
      type: object
    CreateAdditionalAssignmentsForHITResponse:
      properties: {}
      type: object
    CreateAdditionalAssignmentsForHITRequest:
      example:
        HITId: ""
        UniqueRequestToken: ""
        NumberOfAdditionalAssignments: ""
      properties:
        HITId:
          allOf:
          - $ref: '#/components/schemas/EntityId'
          - description: The ID of the HIT to extend.
        NumberOfAdditionalAssignments:
          allOf:
          - $ref: '#/components/schemas/Integer'
          - description: The number of additional assignments to request for this
              HIT.
        UniqueRequestToken:
          allOf:
          - $ref: '#/components/schemas/IdempotencyToken'
          - description: " A unique identifier for this request, which allows you\
              \ to retry the call on error without extending the HIT multiple times.\
              \ This is useful in cases such as network timeouts where it is unclear\
              \ whether or not the call succeeded on the server. If the extend HIT\
              \ already exists in the system from a previous call using the same <code>UniqueRequestToken</code>,\
              \ subsequent calls will return an error with a message containing the\
              \ request ID. "
      required:
      - HITId
      - NumberOfAdditionalAssignments
      title: CreateAdditionalAssignmentsForHITRequest
      type: object
    CreateHITResponse:
      example:
        HIT:
          NumberOfAssignmentsAvailable: ""
          HITGroupId: ""
          HITLayoutId: ""
          Description: ""
          Keywords: ""
          NumberOfAssignmentsCompleted: ""
          Expiration: ""
          Title: ""
          RequesterAnnotation: ""
          MaxAssignments: ""
          HITReviewStatus: ""
          AutoApprovalDelayInSeconds: ""
          HITStatus: ""
          HITId: ""
          CreationTime: ""
          Question: ""
          NumberOfAssignmentsPending: ""
          Reward: Reward
          HITTypeId: ""
          QualificationRequirements: ""
          AssignmentDurationInSeconds: ""
      properties:
        HIT:
          $ref: '#/components/schemas/CreateHITResponse_HIT'
      type: object
    CreateHITRequest:
      example:
        Keywords: ""
        Description: ""
        HITLayoutId: ""
        Title: ""
        RequesterAnnotation: ""
        MaxAssignments: ""
        HITReviewPolicy:
          Parameters: ""
          PolicyName: ""
        AutoApprovalDelayInSeconds: ""
        AssignmentReviewPolicy:
          Parameters: ""
          PolicyName: ""
        HITLayoutParameters: ""
        Question: ""
        Reward: ""
        QualificationRequirements: ""
        UniqueRequestToken: ""
        LifetimeInSeconds: ""
        AssignmentDurationInSeconds: ""
      properties:
        MaxAssignments:
          allOf:
          - $ref: '#/components/schemas/Integer'
          - description: ' The number of times the HIT can be accepted and completed
              before the HIT becomes unavailable. '
        AutoApprovalDelayInSeconds:
          allOf:
          - $ref: '#/components/schemas/Long'
          - description: " The number of seconds after an assignment for the HIT has\
              \ been submitted, after which the assignment is considered Approved\
              \ automatically unless the Requester explicitly rejects it. "
        LifetimeInSeconds:
          allOf:
          - $ref: '#/components/schemas/Long'
          - description: " An amount of time, in seconds, after which the HIT is no\
              \ longer available for users to accept. After the lifetime of the HIT\
              \ elapses, the HIT no longer appears in HIT searches, even if not all\
              \ of the assignments for the HIT have been accepted. "
        AssignmentDurationInSeconds:
          allOf:
          - $ref: '#/components/schemas/Long'
          - description: " The amount of time, in seconds, that a Worker has to complete\
              \ the HIT after accepting it. If a Worker does not complete the assignment\
              \ within the specified duration, the assignment is considered abandoned.\
              \ If the HIT is still active (that is, its lifetime has not elapsed),\
              \ the assignment becomes available for other users to find and accept. "
        Reward:
          allOf:
          - $ref: '#/components/schemas/CurrencyAmount'
          - description: ' The amount of money the Requester will pay a Worker for
              successfully completing the HIT. '
        Title:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: " The title of the HIT. A title should be short and descriptive\
              \ about the kind of task the HIT contains. On the Amazon Mechanical\
              \ Turk web site, the HIT title appears in search results, and everywhere\
              \ the HIT is mentioned. "
        Keywords:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: " One or more words or phrases that describe the HIT, separated\
              \ by commas. These words are used in searches to find HITs. "
        Description:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: " A general description of the HIT. A description includes\
              \ detailed information about the kind of task the HIT contains. On the\
              \ Amazon Mechanical Turk web site, the HIT description appears in the\
              \ expanded view of search results, and in the HIT and assignment screens.\
              \ A good description gives the user enough information to evaluate the\
              \ HIT before accepting it. "
        Question:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: "<p> The data the person completing the HIT uses to produce\
              \ the results. </p> <p> Constraints: Must be a QuestionForm data structure,\
              \ an ExternalQuestion data structure, or an HTMLQuestion data structure.\
              \ The XML question data must not be larger than 64 kilobytes (65,535\
              \ bytes) in size, including whitespace. </p> <p>Either a Question parameter\
              \ or a HITLayoutId parameter must be provided.</p>"
        RequesterAnnotation:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: "<p> An arbitrary data field. The RequesterAnnotation parameter\
              \ lets your application attach arbitrary data to the HIT for tracking\
              \ purposes. For example, this parameter could be an identifier internal\
              \ to the Requester's application that corresponds with the HIT. </p>\
              \ <p> The RequesterAnnotation parameter for a HIT is only visible to\
              \ the Requester who created the HIT. It is not shown to the Worker,\
              \ or any other Requester. </p> <p> The RequesterAnnotation parameter\
              \ may be different for each HIT you submit. It does not affect how your\
              \ HITs are grouped. </p>"
        QualificationRequirements:
          allOf:
          - $ref: '#/components/schemas/QualificationRequirementList'
          - description: " Conditions that a Worker's Qualifications must meet in\
              \ order to accept the HIT. A HIT can have between zero and ten Qualification\
              \ requirements. All requirements must be met in order for a Worker to\
              \ accept the HIT. Additionally, other actions can be restricted using\
              \ the <code>ActionsGuarded</code> field on each <code>QualificationRequirement</code>\
              \ structure. "
        UniqueRequestToken:
          allOf:
          - $ref: '#/components/schemas/IdempotencyToken'
          - description: "<p> A unique identifier for this request which allows you\
              \ to retry the call on error without creating duplicate HITs. This is\
              \ useful in cases such as network timeouts where it is unclear whether\
              \ or not the call succeeded on the server. If the HIT already exists\
              \ in the system from a previous call using the same UniqueRequestToken,\
              \ subsequent calls will return a AWS.MechanicalTurk.HitAlreadyExists\
              \ error with a message containing the HITId. </p> <note> <p> Note: It\
              \ is your responsibility to ensure uniqueness of the token. The unique\
              \ token expires after 24 hours. Subsequent calls using the same UniqueRequestToken\
              \ made after the 24 hour limit could create duplicate HITs. </p> </note>"
        AssignmentReviewPolicy:
          $ref: '#/components/schemas/CreateHITRequest_AssignmentReviewPolicy'
        HITReviewPolicy:
          $ref: '#/components/schemas/CreateHITRequest_HITReviewPolicy'
        HITLayoutId:
          allOf:
          - $ref: '#/components/schemas/EntityId'
          - description: "<p> The HITLayoutId allows you to use a pre-existing HIT\
              \ design with placeholder values and create an additional HIT by providing\
              \ those values as HITLayoutParameters. </p> <p> Constraints: Either\
              \ a Question parameter or a HITLayoutId parameter must be provided.\
              \ </p>"
        HITLayoutParameters:
          allOf:
          - $ref: '#/components/schemas/HITLayoutParameterList'
          - description: " If the HITLayoutId is provided, any placeholder values\
              \ must be filled in with values using the HITLayoutParameter structure.\
              \ For more information, see HITLayout. "
      required:
      - AssignmentDurationInSeconds
      - Description
      - LifetimeInSeconds
      - Reward
      - Title
      title: CreateHITRequest
      type: object
    CreateHITTypeResponse:
      example:
        HITTypeId: ""
      properties:
        HITTypeId:
          allOf:
          - $ref: '#/components/schemas/EntityId'
          - description: ' The ID of the newly registered HIT type.'
      type: object
    CreateHITTypeRequest:
      example:
        Keywords: ""
        Description: ""
        AutoApprovalDelayInSeconds: ""
        Title: ""
        Reward: ""
        QualificationRequirements: ""
        AssignmentDurationInSeconds: ""
      properties:
        AutoApprovalDelayInSeconds:
          allOf:
          - $ref: '#/components/schemas/Long'
          - description: " The number of seconds after an assignment for the HIT has\
              \ been submitted, after which the assignment is considered Approved\
              \ automatically unless the Requester explicitly rejects it. "
        AssignmentDurationInSeconds:
          allOf:
          - $ref: '#/components/schemas/Long'
          - description: " The amount of time, in seconds, that a Worker has to complete\
              \ the HIT after accepting it. If a Worker does not complete the assignment\
              \ within the specified duration, the assignment is considered abandoned.\
              \ If the HIT is still active (that is, its lifetime has not elapsed),\
              \ the assignment becomes available for other users to find and accept. "
        Reward:
          allOf:
          - $ref: '#/components/schemas/CurrencyAmount'
          - description: ' The amount of money the Requester will pay a Worker for
              successfully completing the HIT. '
        Title:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: " The title of the HIT. A title should be short and descriptive\
              \ about the kind of task the HIT contains. On the Amazon Mechanical\
              \ Turk web site, the HIT title appears in search results, and everywhere\
              \ the HIT is mentioned. "
        Keywords:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: " One or more words or phrases that describe the HIT, separated\
              \ by commas. These words are used in searches to find HITs. "
        Description:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: " A general description of the HIT. A description includes\
              \ detailed information about the kind of task the HIT contains. On the\
              \ Amazon Mechanical Turk web site, the HIT description appears in the\
              \ expanded view of search results, and in the HIT and assignment screens.\
              \ A good description gives the user enough information to evaluate the\
              \ HIT before accepting it. "
        QualificationRequirements:
          allOf:
          - $ref: '#/components/schemas/QualificationRequirementList'
          - description: " Conditions that a Worker's Qualifications must meet in\
              \ order to accept the HIT. A HIT can have between zero and ten Qualification\
              \ requirements. All requirements must be met in order for a Worker to\
              \ accept the HIT. Additionally, other actions can be restricted using\
              \ the <code>ActionsGuarded</code> field on each <code>QualificationRequirement</code>\
              \ structure. "
      required:
      - AssignmentDurationInSeconds
      - Description
      - Reward
      - Title
      title: CreateHITTypeRequest
      type: object
    CreateHITWithHITTypeResponse:
      example:
        HIT:
          NumberOfAssignmentsAvailable: ""
          HITGroupId: ""
          HITLayoutId: ""
          Description: ""
          Keywords: ""
          NumberOfAssignmentsCompleted: ""
          Expiration: ""
          Title: ""
          RequesterAnnotation: ""
          MaxAssignments: ""
          HITReviewStatus: ""
          AutoApprovalDelayInSeconds: ""
          HITStatus: ""
          HITId: ""
          CreationTime: ""
          Question: ""
          NumberOfAssignmentsPending: ""
          Reward: Reward
          HITTypeId: ""
          QualificationRequirements: ""
          AssignmentDurationInSeconds: ""
      properties:
        HIT:
          $ref: '#/components/schemas/CreateHITResponse_HIT'
      type: object
    CreateHITWithHITTypeRequest:
      example:
        HITReviewPolicy:
          Parameters: ""
          PolicyName: ""
        HITLayoutId: ""
        AssignmentReviewPolicy:
          Parameters: ""
          PolicyName: ""
        HITLayoutParameters: ""
        Question: ""
        RequesterAnnotation: ""
        HITTypeId: ""
        MaxAssignments: ""
        UniqueRequestToken: ""
        LifetimeInSeconds: ""
      properties:
        HITTypeId:
          allOf:
          - $ref: '#/components/schemas/EntityId'
          - description: The HIT type ID you want to create this HIT with.
        MaxAssignments:
          allOf:
          - $ref: '#/components/schemas/Integer'
          - description: ' The number of times the HIT can be accepted and completed
              before the HIT becomes unavailable. '
        LifetimeInSeconds:
          allOf:
          - $ref: '#/components/schemas/Long'
          - description: " An amount of time, in seconds, after which the HIT is no\
              \ longer available for users to accept. After the lifetime of the HIT\
              \ elapses, the HIT no longer appears in HIT searches, even if not all\
              \ of the assignments for the HIT have been accepted. "
        Question:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: "<p> The data the person completing the HIT uses to produce\
              \ the results. </p> <p> Constraints: Must be a QuestionForm data structure,\
              \ an ExternalQuestion data structure, or an HTMLQuestion data structure.\
              \ The XML question data must not be larger than 64 kilobytes (65,535\
              \ bytes) in size, including whitespace. </p> <p>Either a Question parameter\
              \ or a HITLayoutId parameter must be provided.</p>"
        RequesterAnnotation:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: "<p> An arbitrary data field. The RequesterAnnotation parameter\
              \ lets your application attach arbitrary data to the HIT for tracking\
              \ purposes. For example, this parameter could be an identifier internal\
              \ to the Requester's application that corresponds with the HIT. </p>\
              \ <p> The RequesterAnnotation parameter for a HIT is only visible to\
              \ the Requester who created the HIT. It is not shown to the Worker,\
              \ or any other Requester. </p> <p> The RequesterAnnotation parameter\
              \ may be different for each HIT you submit. It does not affect how your\
              \ HITs are grouped. </p>"
        UniqueRequestToken:
          allOf:
          - $ref: '#/components/schemas/IdempotencyToken'
          - description: "<p> A unique identifier for this request which allows you\
              \ to retry the call on error without creating duplicate HITs. This is\
              \ useful in cases such as network timeouts where it is unclear whether\
              \ or not the call succeeded on the server. If the HIT already exists\
              \ in the system from a previous call using the same UniqueRequestToken,\
              \ subsequent calls will return a AWS.MechanicalTurk.HitAlreadyExists\
              \ error with a message containing the HITId. </p> <note> <p> Note: It\
              \ is your responsibility to ensure uniqueness of the token. The unique\
              \ token expires after 24 hours. Subsequent calls using the same UniqueRequestToken\
              \ made after the 24 hour limit could create duplicate HITs. </p> </note>"
        AssignmentReviewPolicy:
          $ref: '#/components/schemas/CreateHITRequest_AssignmentReviewPolicy'
        HITReviewPolicy:
          $ref: '#/components/schemas/CreateHITRequest_HITReviewPolicy'
        HITLayoutId:
          allOf:
          - $ref: '#/components/schemas/EntityId'
          - description: "<p> The HITLayoutId allows you to use a pre-existing HIT\
              \ design with placeholder values and create an additional HIT by providing\
              \ those values as HITLayoutParameters. </p> <p> Constraints: Either\
              \ a Question parameter or a HITLayoutId parameter must be provided.\
              \ </p>"
        HITLayoutParameters:
          allOf:
          - $ref: '#/components/schemas/HITLayoutParameterList'
          - description: " If the HITLayoutId is provided, any placeholder values\
              \ must be filled in with values using the HITLayoutParameter structure.\
              \ For more information, see HITLayout. "
      required:
      - HITTypeId
      - LifetimeInSeconds
      title: CreateHITWithHITTypeRequest
      type: object
    CreateQualificationTypeResponse:
      example:
        QualificationType:
          TestDurationInSeconds: ""
          AutoGrantedValue: ""
          AnswerKey: ""
          Description: ""
          Keywords: ""
          RetryDelayInSeconds: ""
          QualificationTypeId: ""
          Name: ""
          QualificationTypeStatus: ""
          Test: ""
          CreationTime: ""
          AutoGranted: ""
          IsRequestable: ""
      properties:
        QualificationType:
          $ref: '#/components/schemas/CreateQualificationTypeResponse_QualificationType'
      type: object
    CreateQualificationTypeRequest:
      example:
        QualificationTypeStatus: ""
        TestDurationInSeconds: ""
        AutoGrantedValue: ""
        AnswerKey: ""
        Keywords: ""
        Description: ""
        RetryDelayInSeconds: ""
        Test: ""
        AutoGranted: ""
        Name: ""
      properties:
        Name:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: " The name you give to the Qualification type. The type name\
              \ is used to represent the Qualification to Workers, and to find the\
              \ type using a Qualification type search. It must be unique across all\
              \ of your Qualification types."
        Keywords:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: "One or more words or phrases that describe the Qualification\
              \ type, separated by commas. The keywords of a type make the type easier\
              \ to find during a search."
        Description:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: "A long description for the Qualification type. On the Amazon\
              \ Mechanical Turk website, the long description is displayed when a\
              \ Worker examines a Qualification type."
        QualificationTypeStatus:
          allOf:
          - $ref: '#/components/schemas/QualificationTypeStatus'
          - description: "<p>The initial status of the Qualification type.</p> <p>Constraints:\
              \ Valid values are: Active | Inactive</p>"
        RetryDelayInSeconds:
          allOf:
          - $ref: '#/components/schemas/Long'
          - description: "<p>The number of seconds that a Worker must wait after requesting\
              \ a Qualification of the Qualification type before the worker can retry\
              \ the Qualification request.</p> <p>Constraints: None. If not specified,\
              \ retries are disabled and Workers can request a Qualification of this\
              \ type only once, even if the Worker has not been granted the Qualification.\
              \ It is not possible to disable retries for a Qualification type after\
              \ it has been created with retries enabled. If you want to disable retries,\
              \ you must delete existing retry-enabled Qualification type and then\
              \ create a new Qualification type with retries disabled.</p>"
        Test:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: "<p> The questions for the Qualification test a Worker must\
              \ answer correctly to obtain a Qualification of this type. If this parameter\
              \ is specified, <code>TestDurationInSeconds</code> must also be specified.\
              \ </p> <p>Constraints: Must not be longer than 65535 bytes. Must be\
              \ a QuestionForm data structure. This parameter cannot be specified\
              \ if AutoGranted is true.</p> <p>Constraints: None. If not specified,\
              \ the Worker may request the Qualification without answering any questions.</p>"
        AnswerKey:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: "<p>The answers to the Qualification test specified in the\
              \ Test parameter, in the form of an AnswerKey data structure.</p> <p>Constraints:\
              \ Must not be longer than 65535 bytes.</p> <p>Constraints: None. If\
              \ not specified, you must process Qualification requests manually.</p>"
        TestDurationInSeconds:
          allOf:
          - $ref: '#/components/schemas/Long'
          - description: "The number of seconds the Worker has to complete the Qualification\
              \ test, starting from the time the Worker requests the Qualification."
        AutoGranted:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          - description: "<p>Specifies whether requests for the Qualification type\
              \ are granted immediately, without prompting the Worker with a Qualification\
              \ test.</p> <p>Constraints: If the Test parameter is specified, this\
              \ parameter cannot be true.</p>"
        AutoGrantedValue:
          allOf:
          - $ref: '#/components/schemas/Integer'
          - description: The Qualification value to use for automatically granted
              Qualifications. This parameter is used only if the AutoGranted parameter
              is true.
      required:
      - Description
      - Name
      - QualificationTypeStatus
      title: CreateQualificationTypeRequest
      type: object
    CreateWorkerBlockResponse:
      properties: {}
      type: object
    CreateWorkerBlockRequest:
      example:
        WorkerId: ""
        Reason: ""
      properties:
        WorkerId:
          allOf:
          - $ref: '#/components/schemas/CustomerId'
          - description: The ID of the Worker to block.
        Reason:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: A message explaining the reason for blocking the Worker.
              This parameter enables you to keep track of your Workers. The Worker
              does not see this message.
      required:
      - Reason
      - WorkerId
      title: CreateWorkerBlockRequest
      type: object
    DeleteHITResponse:
      properties: {}
      type: object
    DeleteHITRequest:
      example:
        HITId: ""
      properties:
        HITId:
          allOf:
          - $ref: '#/components/schemas/EntityId'
          - description: The ID of the HIT to be deleted.
      required:
      - HITId
      title: DeleteHITRequest
      type: object
    DeleteQualificationTypeResponse:
      properties: {}
      type: object
    DeleteQualificationTypeRequest:
      example:
        QualificationTypeId: ""
      properties:
        QualificationTypeId:
          allOf:
          - $ref: '#/components/schemas/EntityId'
          - description: The ID of the QualificationType to dispose.
      required:
      - QualificationTypeId
      title: DeleteQualificationTypeRequest
      type: object
    DeleteWorkerBlockResponse:
      properties: {}
      type: object
    DeleteWorkerBlockRequest:
      example:
        WorkerId: ""
        Reason: ""
      properties:
        WorkerId:
          allOf:
          - $ref: '#/components/schemas/CustomerId'
          - description: The ID of the Worker to unblock.
        Reason:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: A message that explains the reason for unblocking the Worker.
              The Worker does not see this message.
      required:
      - WorkerId
      title: DeleteWorkerBlockRequest
      type: object
    DisassociateQualificationFromWorkerResponse:
      properties: {}
      type: object
    DisassociateQualificationFromWorkerRequest:
      example:
        QualificationTypeId: ""
        WorkerId: ""
        Reason: ""
      properties:
        WorkerId:
          allOf:
          - $ref: '#/components/schemas/CustomerId'
          - description: The ID of the Worker who possesses the Qualification to be
              revoked.
        QualificationTypeId:
          allOf:
          - $ref: '#/components/schemas/EntityId'
          - description: The ID of the Qualification type of the Qualification to
              be revoked.
        Reason:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: A text message that explains why the Qualification was revoked.
              The user who had the Qualification sees this message.
      required:
      - QualificationTypeId
      - WorkerId
      title: DisassociateQualificationFromWorkerRequest
      type: object
    GetAccountBalanceResponse:
      example:
        AvailableBalance: AvailableBalance
        OnHoldBalance: OnHoldBalance
      properties:
        AvailableBalance:
          description: A string representing a currency amount.
          pattern: "^[0-9]+(\\.)?[0-9]{0,2}$"
          type: string
        OnHoldBalance:
          description: A string representing a currency amount.
          pattern: "^[0-9]+(\\.)?[0-9]{0,2}$"
          type: string
      type: object
    GetAccountBalanceRequest:
      properties: {}
      title: GetAccountBalanceRequest
      type: object
    GetAssignmentResponse:
      example:
        Assignment:
          RejectionTime: ""
          Answer: ""
          ApprovalTime: ""
          HITId: ""
          Deadline: ""
          AssignmentId: ""
          AutoApprovalTime: ""
          AcceptTime: ""
          WorkerId: ""
          AssignmentStatus: ""
          SubmitTime: ""
          RequesterFeedback: ""
        HIT:
          NumberOfAssignmentsAvailable: ""
          HITGroupId: ""
          HITLayoutId: ""
          Description: ""
          Keywords: ""
          NumberOfAssignmentsCompleted: ""
          Expiration: ""
          Title: ""
          RequesterAnnotation: ""
          MaxAssignments: ""
          HITReviewStatus: ""
          AutoApprovalDelayInSeconds: ""
          HITStatus: ""
          HITId: ""
          CreationTime: ""
          Question: ""
          NumberOfAssignmentsPending: ""
          Reward: Reward
          HITTypeId: ""
          QualificationRequirements: ""
          AssignmentDurationInSeconds: ""
      properties:
        Assignment:
          $ref: '#/components/schemas/GetAssignmentResponse_Assignment'
        HIT:
          $ref: '#/components/schemas/GetAssignmentResponse_HIT'
      type: object
    GetAssignmentRequest:
      example:
        AssignmentId: ""
      properties:
        AssignmentId:
          allOf:
          - $ref: '#/components/schemas/EntityId'
          - description: The ID of the Assignment to be retrieved.
      required:
      - AssignmentId
      title: GetAssignmentRequest
      type: object
    GetFileUploadURLResponse:
      example:
        FileUploadURL: ""
      properties:
        FileUploadURL:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: ' A temporary URL for the file that the Worker uploaded for
              the answer. '
      type: object
    GetFileUploadURLRequest:
      example:
        QuestionIdentifier: ""
        AssignmentId: ""
      properties:
        AssignmentId:
          allOf:
          - $ref: '#/components/schemas/EntityId'
          - description: The ID of the assignment that contains the question with
              a FileUploadAnswer.
        QuestionIdentifier:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: "The identifier of the question with a FileUploadAnswer,\
              \ as specified in the QuestionForm of the HIT."
      required:
      - AssignmentId
      - QuestionIdentifier
      title: GetFileUploadURLRequest
      type: object
    GetHITResponse:
      example:
        HIT:
          NumberOfAssignmentsAvailable: ""
          HITGroupId: ""
          HITLayoutId: ""
          Description: ""
          Keywords: ""
          NumberOfAssignmentsCompleted: ""
          Expiration: ""
          Title: ""
          RequesterAnnotation: ""
          MaxAssignments: ""
          HITReviewStatus: ""
          AutoApprovalDelayInSeconds: ""
          HITStatus: ""
          HITId: ""
          CreationTime: ""
          Question: ""
          NumberOfAssignmentsPending: ""
          Reward: Reward
          HITTypeId: ""
          QualificationRequirements: ""
          AssignmentDurationInSeconds: ""
      properties:
        HIT:
          $ref: '#/components/schemas/GetHITResponse_HIT'
      type: object
    GetHITRequest:
      example:
        HITId: ""
      properties:
        HITId:
          allOf:
          - $ref: '#/components/schemas/EntityId'
          - description: The ID of the HIT to be retrieved.
      required:
      - HITId
      title: GetHITRequest
      type: object
    GetQualificationScoreResponse:
      example:
        Qualification:
          Status: ""
          GrantTime: ""
          IntegerValue: ""
          QualificationTypeId: ""
          WorkerId: ""
          LocaleValue:
            Country: ""
            Subdivision: ""
      properties:
        Qualification:
          $ref: '#/components/schemas/GetQualificationScoreResponse_Qualification'
      type: object
    GetQualificationScoreRequest:
      example:
        QualificationTypeId: ""
        WorkerId: ""
      properties:
        QualificationTypeId:
          allOf:
          - $ref: '#/components/schemas/EntityId'
          - description: The ID of the QualificationType.
        WorkerId:
          allOf:
          - $ref: '#/components/schemas/CustomerId'
          - description: The ID of the Worker whose Qualification is being updated.
      required:
      - QualificationTypeId
      - WorkerId
      title: GetQualificationScoreRequest
      type: object
    GetQualificationTypeResponse:
      example:
        QualificationType:
          TestDurationInSeconds: ""
          AutoGrantedValue: ""
          AnswerKey: ""
          Description: ""
          Keywords: ""
          RetryDelayInSeconds: ""
          QualificationTypeId: ""
          Name: ""
          QualificationTypeStatus: ""
          Test: ""
          CreationTime: ""
          AutoGranted: ""
          IsRequestable: ""
      properties:
        QualificationType:
          $ref: '#/components/schemas/GetQualificationTypeResponse_QualificationType'
      type: object
    GetQualificationTypeRequest:
      example:
        QualificationTypeId: ""
      properties:
        QualificationTypeId:
          allOf:
          - $ref: '#/components/schemas/EntityId'
          - description: The ID of the QualificationType.
      required:
      - QualificationTypeId
      title: GetQualificationTypeRequest
      type: object
    ListAssignmentsForHITResponse:
      example:
        NextToken: NextToken
        Assignments: ""
        NumResults: ""
      properties:
        NextToken:
          description: "If the previous response was incomplete (because there is\
            \ more data to retrieve), Amazon Mechanical Turk returns a pagination\
            \ token in the response. You can use this pagination token to retrieve\
            \ the next set of results. "
          maxLength: 255
          minLength: 1
          type: string
        NumResults:
          allOf:
          - $ref: '#/components/schemas/Integer'
          - description: " The number of assignments on the page in the filtered results\
              \ list, equivalent to the number of assignments returned by this call."
        Assignments:
          allOf:
          - $ref: '#/components/schemas/AssignmentList'
          - description: ' The collection of Assignment data structures returned by
              this call.'
      type: object
    ListAssignmentsForHITRequest:
      example:
        NextToken: ""
        HITId: ""
        MaxResults: 8
        AssignmentStatuses: ""
      properties:
        HITId:
          allOf:
          - $ref: '#/components/schemas/EntityId'
          - description: The ID of the HIT.
        NextToken:
          allOf:
          - $ref: '#/components/schemas/PaginationToken'
          - description: Pagination token
        MaxResults:
          maximum: 100
          minimum: 1
          type: integer
        AssignmentStatuses:
          allOf:
          - $ref: '#/components/schemas/AssignmentStatusList'
          - description: "The status of the assignments to return: Submitted | Approved\
              \ | Rejected"
      required:
      - HITId
      title: ListAssignmentsForHITRequest
      type: object
    ListBonusPaymentsResponse:
      example:
        NextToken: NextToken
        BonusPayments: ""
        NumResults: ""
      properties:
        NumResults:
          allOf:
          - $ref: '#/components/schemas/Integer'
          - description: "The number of bonus payments on this page in the filtered\
              \ results list, equivalent to the number of bonus payments being returned\
              \ by this call. "
        NextToken:
          description: "If the previous response was incomplete (because there is\
            \ more data to retrieve), Amazon Mechanical Turk returns a pagination\
            \ token in the response. You can use this pagination token to retrieve\
            \ the next set of results. "
          maxLength: 255
          minLength: 1
          type: string
        BonusPayments:
          allOf:
          - $ref: '#/components/schemas/BonusPaymentList'
          - description: 'A successful request to the ListBonusPayments operation
              returns a list of BonusPayment objects. '
      type: object
    ListBonusPaymentsRequest:
      example:
        NextToken: ""
        HITId: ""
        MaxResults: 8
        AssignmentId: ""
      properties:
        HITId:
          allOf:
          - $ref: '#/components/schemas/EntityId'
          - description: "The ID of the HIT associated with the bonus payments to\
              \ retrieve. If not specified, all bonus payments for all assignments\
              \ for the given HIT are returned. Either the HITId parameter or the\
              \ AssignmentId parameter must be specified"
        AssignmentId:
          allOf:
          - $ref: '#/components/schemas/EntityId'
          - description: "The ID of the assignment associated with the bonus payments\
              \ to retrieve. If specified, only bonus payments for the given assignment\
              \ are returned. Either the HITId parameter or the AssignmentId parameter\
              \ must be specified"
        NextToken:
          allOf:
          - $ref: '#/components/schemas/PaginationToken'
          - description: Pagination token
        MaxResults:
          maximum: 100
          minimum: 1
          type: integer
      title: ListBonusPaymentsRequest
      type: object
    ListHITsResponse:
      example:
        HITs: ""
        NextToken: NextToken
        NumResults: ""
      properties:
        NextToken:
          description: "If the previous response was incomplete (because there is\
            \ more data to retrieve), Amazon Mechanical Turk returns a pagination\
            \ token in the response. You can use this pagination token to retrieve\
            \ the next set of results. "
          maxLength: 255
          minLength: 1
          type: string
        NumResults:
          allOf:
          - $ref: '#/components/schemas/Integer'
          - description: "The number of HITs on this page in the filtered results\
              \ list, equivalent to the number of HITs being returned by this call."
        HITs:
          allOf:
          - $ref: '#/components/schemas/HITList'
          - description: ' The list of HIT elements returned by the query.'
      type: object
    ListHITsRequest:
      example:
        NextToken: ""
        MaxResults: 8
      properties:
        NextToken:
          allOf:
          - $ref: '#/components/schemas/PaginationToken'
          - description: Pagination token
        MaxResults:
          maximum: 100
          minimum: 1
          type: integer
      title: ListHITsRequest
      type: object
    ListHITsForQualificationTypeResponse:
      example:
        HITs: ""
        NextToken: NextToken
        NumResults: ""
      properties:
        NextToken:
          description: "If the previous response was incomplete (because there is\
            \ more data to retrieve), Amazon Mechanical Turk returns a pagination\
            \ token in the response. You can use this pagination token to retrieve\
            \ the next set of results. "
          maxLength: 255
          minLength: 1
          type: string
        NumResults:
          allOf:
          - $ref: '#/components/schemas/Integer'
          - description: " The number of HITs on this page in the filtered results\
              \ list, equivalent to the number of HITs being returned by this call. "
        HITs:
          allOf:
          - $ref: '#/components/schemas/HITList'
          - description: ' The list of HIT elements returned by the query.'
      type: object
    ListHITsForQualificationTypeRequest:
      example:
        NextToken: ""
        MaxResults: ""
        QualificationTypeId: ""
      properties:
        QualificationTypeId:
          allOf:
          - $ref: '#/components/schemas/EntityId'
          - description: ' The ID of the Qualification type to use when querying HITs. '
        NextToken:
          allOf:
          - $ref: '#/components/schemas/PaginationToken'
          - description: Pagination Token
        MaxResults:
          allOf:
          - $ref: '#/components/schemas/ResultSize'
          - description: ' Limit the number of results returned. '
      required:
      - QualificationTypeId
      title: ListHITsForQualificationTypeRequest
      type: object
    ListQualificationRequestsResponse:
      example:
        QualificationRequests: ""
        NextToken: NextToken
        NumResults: ""
      properties:
        NumResults:
          allOf:
          - $ref: '#/components/schemas/Integer'
          - description: "The number of Qualification requests on this page in the\
              \ filtered results list, equivalent to the number of Qualification requests\
              \ being returned by this call."
        NextToken:
          description: "If the previous response was incomplete (because there is\
            \ more data to retrieve), Amazon Mechanical Turk returns a pagination\
            \ token in the response. You can use this pagination token to retrieve\
            \ the next set of results. "
          maxLength: 255
          minLength: 1
          type: string
        QualificationRequests:
          allOf:
          - $ref: '#/components/schemas/QualificationRequestList'
          - description: The Qualification request. The response includes one QualificationRequest
              element for each Qualification request returned by the query.
      type: object
    ListQualificationRequestsRequest:
      example:
        NextToken: NextToken
        MaxResults: ""
        QualificationTypeId: ""
      properties:
        QualificationTypeId:
          allOf:
          - $ref: '#/components/schemas/EntityId'
          - description: The ID of the QualificationType.
        NextToken:
          description: "If the previous response was incomplete (because there is\
            \ more data to retrieve), Amazon Mechanical Turk returns a pagination\
            \ token in the response. You can use this pagination token to retrieve\
            \ the next set of results. "
          maxLength: 255
          minLength: 1
          type: string
        MaxResults:
          allOf:
          - $ref: '#/components/schemas/ResultSize'
          - description: ' The maximum number of results to return in a single call. '
      title: ListQualificationRequestsRequest
      type: object
    ListQualificationTypesResponse:
      example:
        NextToken: NextToken
        QualificationTypes: ""
        NumResults: ""
      properties:
        NumResults:
          allOf:
          - $ref: '#/components/schemas/Integer'
          - description: " The number of Qualification types on this page in the filtered\
              \ results list, equivalent to the number of types this operation returns. "
        NextToken:
          description: "If the previous response was incomplete (because there is\
            \ more data to retrieve), Amazon Mechanical Turk returns a pagination\
            \ token in the response. You can use this pagination token to retrieve\
            \ the next set of results. "
          maxLength: 255
          minLength: 1
          type: string
        QualificationTypes:
          allOf:
          - $ref: '#/components/schemas/QualificationTypeList'
          - description: ' The list of QualificationType elements returned by the
              query. '
      type: object
    ListQualificationTypesRequest:
      example:
        MustBeRequestable: ""
        Query: ""
        MustBeOwnedByCaller: ""
        NextToken: NextToken
        MaxResults: ""
      properties:
        Query:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: ' A text query against all of the searchable attributes of
              Qualification types. '
        MustBeRequestable:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          - description: "Specifies that only Qualification types that a user can\
              \ request through the Amazon Mechanical Turk web site, such as by taking\
              \ a Qualification test, are returned as results of the search. Some\
              \ Qualification types, such as those assigned automatically by the system,\
              \ cannot be requested directly by users. If false, all Qualification\
              \ types, including those managed by the system, are considered. Valid\
              \ values are True | False. "
        MustBeOwnedByCaller:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          - description: " Specifies that only Qualification types that the Requester\
              \ created are returned. If false, the operation returns all Qualification\
              \ types. "
        NextToken:
          description: "If the previous response was incomplete (because there is\
            \ more data to retrieve), Amazon Mechanical Turk returns a pagination\
            \ token in the response. You can use this pagination token to retrieve\
            \ the next set of results. "
          maxLength: 255
          minLength: 1
          type: string
        MaxResults:
          allOf:
          - $ref: '#/components/schemas/ResultSize'
          - description: ' The maximum number of results to return in a single call. '
      required:
      - MustBeRequestable
      title: ListQualificationTypesRequest
      type: object
    ListReviewPolicyResultsForHITResponse:
      example:
        HITReviewReport:
          ReviewResults: ""
          ReviewActions: ""
        HITReviewPolicy:
          Parameters: ""
          PolicyName: ""
        AssignmentReviewPolicy:
          Parameters: ""
          PolicyName: ""
        NextToken: NextToken
        HITId: ""
        AssignmentReviewReport:
          ReviewResults: ""
          ReviewActions: ""
      properties:
        HITId:
          allOf:
          - $ref: '#/components/schemas/EntityId'
          - description: The HITId of the HIT for which results have been returned.
        AssignmentReviewPolicy:
          $ref: '#/components/schemas/ListReviewPolicyResultsForHITResponse_AssignmentReviewPolicy'
        HITReviewPolicy:
          $ref: '#/components/schemas/ListReviewPolicyResultsForHITResponse_HITReviewPolicy'
        AssignmentReviewReport:
          $ref: '#/components/schemas/ListReviewPolicyResultsForHITResponse_AssignmentReviewReport'
        HITReviewReport:
          $ref: '#/components/schemas/ListReviewPolicyResultsForHITResponse_HITReviewReport'
        NextToken:
          description: "If the previous response was incomplete (because there is\
            \ more data to retrieve), Amazon Mechanical Turk returns a pagination\
            \ token in the response. You can use this pagination token to retrieve\
            \ the next set of results. "
          maxLength: 255
          minLength: 1
          type: string
      type: object
    ListReviewPolicyResultsForHITRequest:
      example:
        NextToken: ""
        RetrieveActions: ""
        RetrieveResults: ""
        PolicyLevels: ""
        HITId: ""
        MaxResults: ""
      properties:
        HITId:
          allOf:
          - $ref: '#/components/schemas/EntityId'
          - description: The unique identifier of the HIT to retrieve review results
              for.
        PolicyLevels:
          allOf:
          - $ref: '#/components/schemas/ReviewPolicyLevelList'
          - description: " The Policy Level(s) to retrieve review results for - HIT\
              \ or Assignment. If omitted, the default behavior is to retrieve all\
              \ data for both policy levels. For a list of all the described policies,\
              \ see Review Policies. "
        RetrieveActions:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          - description: ' Specify if the operation should retrieve a list of the
              actions taken executing the Review Policies and their outcomes. '
        RetrieveResults:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          - description: ' Specify if the operation should retrieve a list of the
              results computed by the Review Policies. '
        NextToken:
          allOf:
          - $ref: '#/components/schemas/PaginationToken'
          - description: Pagination token
        MaxResults:
          allOf:
          - $ref: '#/components/schemas/ResultSize'
          - description: Limit the number of results returned.
      required:
      - HITId
      title: ListReviewPolicyResultsForHITRequest
      type: object
    ListReviewableHITsResponse:
      example:
        HITs: ""
        NextToken: NextToken
        NumResults: ""
      properties:
        NextToken:
          description: "If the previous response was incomplete (because there is\
            \ more data to retrieve), Amazon Mechanical Turk returns a pagination\
            \ token in the response. You can use this pagination token to retrieve\
            \ the next set of results. "
          maxLength: 255
          minLength: 1
          type: string
        NumResults:
          allOf:
          - $ref: '#/components/schemas/Integer'
          - description: " The number of HITs on this page in the filtered results\
              \ list, equivalent to the number of HITs being returned by this call. "
        HITs:
          allOf:
          - $ref: '#/components/schemas/HITList'
          - description: ' The list of HIT elements returned by the query.'
      type: object
    ListReviewableHITsRequest:
      example:
        Status: ""
        NextToken: ""
        MaxResults: ""
        HITTypeId: ""
      properties:
        HITTypeId:
          allOf:
          - $ref: '#/components/schemas/EntityId'
          - description: " The ID of the HIT type of the HITs to consider for the\
              \ query. If not specified, all HITs for the Reviewer are considered "
        Status:
          allOf:
          - $ref: '#/components/schemas/ReviewableHITStatus'
          - description: ' Can be either <code>Reviewable</code> or <code>Reviewing</code>.
              Reviewable is the default value. '
        NextToken:
          allOf:
          - $ref: '#/components/schemas/PaginationToken'
          - description: Pagination Token
        MaxResults:
          allOf:
          - $ref: '#/components/schemas/ResultSize'
          - description: ' Limit the number of results returned. '
      title: ListReviewableHITsRequest
      type: object
    ListWorkerBlocksResponse:
      example:
        NextToken: NextToken
        NumResults: ""
        WorkerBlocks: ""
      properties:
        NextToken:
          description: "If the previous response was incomplete (because there is\
            \ more data to retrieve), Amazon Mechanical Turk returns a pagination\
            \ token in the response. You can use this pagination token to retrieve\
            \ the next set of results. "
          maxLength: 255
          minLength: 1
          type: string
        NumResults:
          allOf:
          - $ref: '#/components/schemas/Integer'
          - description: " The number of assignments on the page in the filtered results\
              \ list, equivalent to the number of assignments returned by this call."
        WorkerBlocks:
          allOf:
          - $ref: '#/components/schemas/WorkerBlockList'
          - description: " The list of WorkerBlocks, containing the collection of\
              \ Worker IDs and reasons for blocking."
      type: object
    ListWorkerBlocksRequest:
      example:
        NextToken: ""
        MaxResults: 8
      properties:
        NextToken:
          allOf:
          - $ref: '#/components/schemas/PaginationToken'
          - description: Pagination token
        MaxResults:
          maximum: 100
          minimum: 1
          type: integer
      title: ListWorkerBlocksRequest
      type: object
    ListWorkersWithQualificationTypeResponse:
      example:
        NextToken: NextToken
        NumResults: ""
        Qualifications: ""
      properties:
        NextToken:
          description: "If the previous response was incomplete (because there is\
            \ more data to retrieve), Amazon Mechanical Turk returns a pagination\
            \ token in the response. You can use this pagination token to retrieve\
            \ the next set of results. "
          maxLength: 255
          minLength: 1
          type: string
        NumResults:
          allOf:
          - $ref: '#/components/schemas/Integer'
          - description: " The number of Qualifications on this page in the filtered\
              \ results list, equivalent to the number of Qualifications being returned\
              \ by this call."
        Qualifications:
          allOf:
          - $ref: '#/components/schemas/QualificationList'
          - description: ' The list of Qualification elements returned by this call. '
      type: object
    ListWorkersWithQualificationTypeRequest:
      example:
        Status: ""
        NextToken: ""
        MaxResults: ""
        QualificationTypeId: ""
      properties:
        QualificationTypeId:
          allOf:
          - $ref: '#/components/schemas/EntityId'
          - description: The ID of the Qualification type of the Qualifications to
              return.
        Status:
          allOf:
          - $ref: '#/components/schemas/QualificationStatus'
          - description: ' The status of the Qualifications to return. Can be <code>Granted
              | Revoked</code>. '
        NextToken:
          allOf:
          - $ref: '#/components/schemas/PaginationToken'
          - description: Pagination Token
        MaxResults:
          allOf:
          - $ref: '#/components/schemas/ResultSize'
          - description: ' Limit the number of results returned. '
      required:
      - QualificationTypeId
      title: ListWorkersWithQualificationTypeRequest
      type: object
    NotifyWorkersResponse:
      example:
        NotifyWorkersFailureStatuses: ""
      properties:
        NotifyWorkersFailureStatuses:
          allOf:
          - $ref: '#/components/schemas/NotifyWorkersFailureStatusList'
          - description: " When MTurk sends notifications to the list of Workers,\
              \ it returns back any failures it encounters in this list of NotifyWorkersFailureStatus\
              \ objects. "
      type: object
    NotifyWorkersRequest:
      example:
        MessageText: ""
        Subject: ""
        WorkerIds: ""
      properties:
        Subject:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The subject line of the email message to send. Can include
              up to 200 characters.
        MessageText:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: "The text of the email message to send. Can include up to\
              \ 4,096 characters"
        WorkerIds:
          allOf:
          - $ref: '#/components/schemas/CustomerIdList'
          - description: A list of Worker IDs you wish to notify. You can notify upto
              100 Workers at a time.
      required:
      - MessageText
      - Subject
      - WorkerIds
      title: NotifyWorkersRequest
      type: object
    RejectAssignmentResponse:
      properties: {}
      type: object
    RejectAssignmentRequest:
      example:
        AssignmentId: ""
        RequesterFeedback: ""
      properties:
        AssignmentId:
          allOf:
          - $ref: '#/components/schemas/EntityId'
          - description: ' The ID of the assignment. The assignment must correspond
              to a HIT created by the Requester. '
        RequesterFeedback:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: " A message for the Worker, which the Worker can see in the\
              \ Status section of the web site. "
      required:
      - AssignmentId
      - RequesterFeedback
      title: RejectAssignmentRequest
      type: object
    RejectQualificationRequestResponse:
      properties: {}
      type: object
    RejectQualificationRequestRequest:
      example:
        QualificationRequestId: ""
        Reason: ""
      properties:
        QualificationRequestId:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: " The ID of the Qualification request, as returned by the\
              \ <code>ListQualificationRequests</code> operation. "
        Reason:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: "A text message explaining why the request was rejected,\
              \ to be shown to the Worker who made the request."
      required:
      - QualificationRequestId
      title: RejectQualificationRequestRequest
      type: object
    SendBonusResponse:
      properties: {}
      type: object
    SendBonusRequest:
      example:
        AssignmentId: ""
        WorkerId: ""
        BonusAmount: ""
        UniqueRequestToken: ""
        Reason: ""
      properties:
        WorkerId:
          allOf:
          - $ref: '#/components/schemas/CustomerId'
          - description: The ID of the Worker being paid the bonus.
        BonusAmount:
          allOf:
          - $ref: '#/components/schemas/CurrencyAmount'
          - description: " The Bonus amount is a US Dollar amount specified using\
              \ a string (for example, \"5\" represents $5.00 USD and \"101.42\" represents\
              \ $101.42 USD). Do not include currency symbols or currency codes. "
        AssignmentId:
          allOf:
          - $ref: '#/components/schemas/EntityId'
          - description: The ID of the assignment for which this bonus is paid.
        Reason:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: A message that explains the reason for the bonus payment.
              The Worker receiving the bonus can see this message.
        UniqueRequestToken:
          allOf:
          - $ref: '#/components/schemas/IdempotencyToken'
          - description: "A unique identifier for this request, which allows you to\
              \ retry the call on error without granting multiple bonuses. This is\
              \ useful in cases such as network timeouts where it is unclear whether\
              \ or not the call succeeded on the server. If the bonus already exists\
              \ in the system from a previous call using the same UniqueRequestToken,\
              \ subsequent calls will return an error with a message containing the\
              \ request ID."
      required:
      - AssignmentId
      - BonusAmount
      - Reason
      - WorkerId
      title: SendBonusRequest
      type: object
    SendTestEventNotificationResponse:
      properties: {}
      type: object
    SendTestEventNotificationRequest:
      example:
        TestEventType: ""
        Notification:
          Destination: ""
          Version: ""
          EventTypes: ""
          Transport: ""
      properties:
        Notification:
          $ref: '#/components/schemas/SendTestEventNotificationRequest_Notification'
        TestEventType:
          allOf:
          - $ref: '#/components/schemas/EventType'
          - description: ' The event to simulate to test the notification specification.
              This event is included in the test message even if the notification
              specification does not include the event type. The notification specification
              does not filter out the test event. '
      required:
      - Notification
      - TestEventType
      title: SendTestEventNotificationRequest
      type: object
    UpdateExpirationForHITResponse:
      properties: {}
      type: object
    UpdateExpirationForHITRequest:
      example:
        HITId: ""
        ExpireAt: ""
      properties:
        HITId:
          allOf:
          - $ref: '#/components/schemas/EntityId'
          - description: ' The HIT to update. '
        ExpireAt:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          - description: ' The date and time at which you want the HIT to expire '
      required:
      - ExpireAt
      - HITId
      title: UpdateExpirationForHITRequest
      type: object
    UpdateHITReviewStatusResponse:
      properties: {}
      type: object
    UpdateHITReviewStatusRequest:
      example:
        HITId: ""
        Revert: ""
      properties:
        HITId:
          allOf:
          - $ref: '#/components/schemas/EntityId'
          - description: ' The ID of the HIT to update. '
        Revert:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          - description: <p> Specifies how to update the HIT status. Default is <code>False</code>.
              </p> <ul> <li> <p> Setting this to false will only transition a HIT
              from <code>Reviewable</code> to <code>Reviewing</code> </p> </li> <li>
              <p> Setting this to true will only transition a HIT from <code>Reviewing</code>
              to <code>Reviewable</code> </p> </li> </ul>
      required:
      - HITId
      title: UpdateHITReviewStatusRequest
      type: object
    UpdateHITTypeOfHITResponse:
      properties: {}
      type: object
    UpdateHITTypeOfHITRequest:
      example:
        HITId: ""
        HITTypeId: ""
      properties:
        HITId:
          allOf:
          - $ref: '#/components/schemas/EntityId'
          - description: The HIT to update.
        HITTypeId:
          allOf:
          - $ref: '#/components/schemas/EntityId'
          - description: The ID of the new HIT type.
      required:
      - HITId
      - HITTypeId
      title: UpdateHITTypeOfHITRequest
      type: object
    UpdateNotificationSettingsResponse:
      properties: {}
      type: object
    UpdateNotificationSettingsRequest:
      example:
        Active: ""
        HITTypeId: ""
        Notification:
          Destination: ""
          Version: ""
          EventTypes: ""
          Transport: ""
      properties:
        HITTypeId:
          allOf:
          - $ref: '#/components/schemas/EntityId'
          - description: ' The ID of the HIT type whose notification specification
              is being updated. '
        Notification:
          $ref: '#/components/schemas/UpdateNotificationSettingsRequest_Notification'
        Active:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          - description: " Specifies whether notifications are sent for HITs of this\
              \ HIT type, according to the notification specification. You must specify\
              \ either the Notification parameter or the Active parameter for the\
              \ call to UpdateNotificationSettings to succeed. "
      required:
      - HITTypeId
      title: UpdateNotificationSettingsRequest
      type: object
    UpdateQualificationTypeResponse:
      example:
        QualificationType:
          TestDurationInSeconds: ""
          AutoGrantedValue: ""
          AnswerKey: ""
          Description: ""
          Keywords: ""
          RetryDelayInSeconds: ""
          QualificationTypeId: ""
          Name: ""
          QualificationTypeStatus: ""
          Test: ""
          CreationTime: ""
          AutoGranted: ""
          IsRequestable: ""
      properties:
        QualificationType:
          $ref: '#/components/schemas/UpdateQualificationTypeResponse_QualificationType'
      type: object
    UpdateQualificationTypeRequest:
      example:
        QualificationTypeStatus: ""
        TestDurationInSeconds: ""
        AutoGrantedValue: ""
        AnswerKey: ""
        Description: ""
        Test: ""
        RetryDelayInSeconds: ""
        AutoGranted: ""
        QualificationTypeId: ""
      properties:
        QualificationTypeId:
          allOf:
          - $ref: '#/components/schemas/EntityId'
          - description: The ID of the Qualification type to update.
        Description:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The new description of the Qualification type.
        QualificationTypeStatus:
          allOf:
          - $ref: '#/components/schemas/QualificationTypeStatus'
          - description: The new status of the Qualification type - Active | Inactive
        Test:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: "<p>The questions for the Qualification test a Worker must\
              \ answer correctly to obtain a Qualification of this type. If this parameter\
              \ is specified, <code>TestDurationInSeconds</code> must also be specified.</p>\
              \ <p>Constraints: Must not be longer than 65535 bytes. Must be a QuestionForm\
              \ data structure. This parameter cannot be specified if AutoGranted\
              \ is true.</p> <p>Constraints: None. If not specified, the Worker may\
              \ request the Qualification without answering any questions.</p>"
        AnswerKey:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: "The answers to the Qualification test specified in the Test\
              \ parameter, in the form of an AnswerKey data structure."
        TestDurationInSeconds:
          allOf:
          - $ref: '#/components/schemas/Long'
          - description: "The number of seconds the Worker has to complete the Qualification\
              \ test, starting from the time the Worker requests the Qualification."
        RetryDelayInSeconds:
          allOf:
          - $ref: '#/components/schemas/Long'
          - description: "The amount of time, in seconds, that Workers must wait after\
              \ requesting a Qualification of the specified Qualification type before\
              \ they can retry the Qualification request. It is not possible to disable\
              \ retries for a Qualification type after it has been created with retries\
              \ enabled. If you want to disable retries, you must dispose of the existing\
              \ retry-enabled Qualification type using DisposeQualificationType and\
              \ then create a new Qualification type with retries disabled using CreateQualificationType."
        AutoGranted:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          - description: "<p>Specifies whether requests for the Qualification type\
              \ are granted immediately, without prompting the Worker with a Qualification\
              \ test.</p> <p>Constraints: If the Test parameter is specified, this\
              \ parameter cannot be true.</p>"
        AutoGrantedValue:
          allOf:
          - $ref: '#/components/schemas/Integer'
          - description: The Qualification value to use for automatically granted
              Qualifications. This parameter is used only if the AutoGranted parameter
              is true.
      required:
      - QualificationTypeId
      title: UpdateQualificationTypeRequest
      type: object
    String:
      type: string
    Integer:
      type: integer
    EntityId:
      maxLength: 64
      minLength: 1
      pattern: "^[A-Z0-9]+$"
      type: string
    Boolean:
      type: boolean
    CustomerId:
      maxLength: 64
      minLength: 1
      pattern: "^A[A-Z0-9]+$"
      type: string
    AssignmentStatus:
      enum:
      - Submitted
      - Approved
      - Rejected
      type: string
    Timestamp:
      format: date-time
      type: string
    Assignment:
      description: " The Assignment data structure represents a single assignment\
        \ of a HIT to a Worker. The assignment tracks the Worker's efforts to complete\
        \ the HIT, and contains the results for later retrieval. "
      properties:
        AssignmentId:
          allOf:
          - $ref: '#/components/schemas/EntityId'
          - description: ' A unique identifier for the assignment.'
        WorkerId:
          allOf:
          - $ref: '#/components/schemas/CustomerId'
          - description: ' The ID of the Worker who accepted the HIT.'
        HITId:
          allOf:
          - $ref: '#/components/schemas/EntityId'
          - description: ' The ID of the HIT.'
        AssignmentStatus:
          allOf:
          - $ref: '#/components/schemas/AssignmentStatus'
          - description: ' The status of the assignment.'
        AutoApprovalTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          - description: " If results have been submitted, AutoApprovalTime is the\
              \ date and time the results of the assignment results are considered\
              \ Approved automatically if they have not already been explicitly approved\
              \ or rejected by the Requester. This value is derived from the auto-approval\
              \ delay specified by the Requester in the HIT. This value is omitted\
              \ from the assignment if the Worker has not yet submitted results."
        AcceptTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          - description: ' The date and time the Worker accepted the assignment.'
        SubmitTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          - description: " If the Worker has submitted results, SubmitTime is the\
              \ date and time the assignment was submitted. This value is omitted\
              \ from the assignment if the Worker has not yet submitted results."
        ApprovalTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          - description: " If the Worker has submitted results and the Requester has\
              \ approved the results, ApprovalTime is the date and time the Requester\
              \ approved the results. This value is omitted from the assignment if\
              \ the Requester has not yet approved the results."
        RejectionTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          - description: " If the Worker has submitted results and the Requester has\
              \ rejected the results, RejectionTime is the date and time the Requester\
              \ rejected the results."
        Deadline:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          - description: ' The date and time of the deadline for the assignment. This
              value is derived from the deadline specification for the HIT and the
              date and time the Worker accepted the HIT.'
        Answer:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: " The Worker's answers submitted for the HIT contained in\
              \ a QuestionFormAnswers document, if the Worker provides an answer.\
              \ If the Worker does not provide any answers, Answer may contain a QuestionFormAnswers\
              \ document, or Answer may be empty."
        RequesterFeedback:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: " The feedback string included with the call to the ApproveAssignment\
              \ operation or the RejectAssignment operation, if the Requester approved\
              \ or rejected the assignment and specified feedback."
      type: object
    AssignmentList:
      items:
        $ref: '#/components/schemas/Assignment'
      type: array
    AssignmentStatusList:
      items:
        $ref: '#/components/schemas/AssignmentStatus'
      type: array
    CurrencyAmount:
      description: A string representing a currency amount.
      pattern: "^[0-9]+(\\.)?[0-9]{0,2}$"
      type: string
    BonusPayment:
      description: An object representing a Bonus payment paid to a Worker.
      properties:
        WorkerId:
          allOf:
          - $ref: '#/components/schemas/CustomerId'
          - description: The ID of the Worker to whom the bonus was paid.
        BonusAmount:
          description: A string representing a currency amount.
          pattern: "^[0-9]+(\\.)?[0-9]{0,2}$"
          type: string
        AssignmentId:
          allOf:
          - $ref: '#/components/schemas/EntityId'
          - description: The ID of the assignment associated with this bonus payment.
        Reason:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: "The Reason text given when the bonus was granted, if any."
        GrantTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          - description: The date and time of when the bonus was granted.
      type: object
    BonusPaymentList:
      items:
        $ref: '#/components/schemas/BonusPayment'
      type: array
    Comparator:
      enum:
      - LessThan
      - LessThanOrEqualTo
      - GreaterThan
      - GreaterThanOrEqualTo
      - EqualTo
      - NotEqualTo
      - Exists
      - DoesNotExist
      - In
      - NotIn
      type: string
    CountryParameters:
      maxLength: 2
      minLength: 2
      type: string
    IdempotencyToken:
      maxLength: 64
      minLength: 1
      type: string
    Long:
      type: integer
    QualificationRequirementList:
      items:
        $ref: '#/components/schemas/QualificationRequirement'
      type: array
    ReviewPolicy:
      description: " HIT Review Policy data structures represent HIT review policies,\
        \ which you specify when you create a HIT. "
      properties:
        PolicyName:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: " Name of a Review Policy: SimplePlurality/2011-09-01 or\
              \ ScoreMyKnownAnswers/2011-09-01 "
        Parameters:
          allOf:
          - $ref: '#/components/schemas/PolicyParameterList'
          - description: Name of the parameter from the Review policy.
      required:
      - PolicyName
      type: object
    HITLayoutParameterList:
      items:
        $ref: '#/components/schemas/HITLayoutParameter'
      type: array
    HIT:
      description: " The HIT data structure represents a single HIT, including all\
        \ the information necessary for a Worker to accept and complete the HIT."
      properties:
        HITId:
          allOf:
          - $ref: '#/components/schemas/EntityId'
          - description: ' A unique identifier for the HIT.'
        HITTypeId:
          allOf:
          - $ref: '#/components/schemas/EntityId'
          - description: The ID of the HIT type of this HIT
        HITGroupId:
          allOf:
          - $ref: '#/components/schemas/EntityId'
          - description: ' The ID of the HIT Group of this HIT.'
        HITLayoutId:
          allOf:
          - $ref: '#/components/schemas/EntityId'
          - description: ' The ID of the HIT Layout of this HIT.'
        CreationTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          - description: ' The date and time the HIT was created.'
        Title:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: ' The title of the HIT.'
        Description:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: ' A general description of the HIT.'
        Question:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: " The data the Worker completing the HIT uses produce the\
              \ results. This is either either a QuestionForm, HTMLQuestion or an\
              \ ExternalQuestion data structure."
        Keywords:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: " One or more words or phrases that describe the HIT, separated\
              \ by commas. Search terms similar to the keywords of a HIT are more\
              \ likely to have the HIT in the search results."
        HITStatus:
          allOf:
          - $ref: '#/components/schemas/HITStatus'
          - description: 'The status of the HIT and its assignments. Valid Values
              are Assignable | Unassignable | Reviewable | Reviewing | Disposed. '
        MaxAssignments:
          allOf:
          - $ref: '#/components/schemas/Integer'
          - description: 'The number of times the HIT can be accepted and completed
              before the HIT becomes unavailable. '
        Reward:
          description: A string representing a currency amount.
          pattern: "^[0-9]+(\\.)?[0-9]{0,2}$"
          type: string
        AutoApprovalDelayInSeconds:
          allOf:
          - $ref: '#/components/schemas/Long'
          - description: "The amount of time, in seconds, after the Worker submits\
              \ an assignment for the HIT that the results are automatically approved\
              \ by Amazon Mechanical Turk. This is the amount of time the Requester\
              \ has to reject an assignment submitted by a Worker before the assignment\
              \ is auto-approved and the Worker is paid. "
        Expiration:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          - description: The date and time the HIT expires.
        AssignmentDurationInSeconds:
          allOf:
          - $ref: '#/components/schemas/Long'
          - description: " The length of time, in seconds, that a Worker has to complete\
              \ the HIT after accepting it."
        RequesterAnnotation:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: ' An arbitrary data field the Requester who created the HIT
              can use. This field is visible only to the creator of the HIT.'
        QualificationRequirements:
          allOf:
          - $ref: '#/components/schemas/QualificationRequirementList'
          - description: " Conditions that a Worker's Qualifications must meet in\
              \ order to accept the HIT. A HIT can have between zero and ten Qualification\
              \ requirements. All requirements must be met in order for a Worker to\
              \ accept the HIT. Additionally, other actions can be restricted using\
              \ the <code>ActionsGuarded</code> field on each <code>QualificationRequirement</code>\
              \ structure. "
        HITReviewStatus:
          allOf:
          - $ref: '#/components/schemas/HITReviewStatus'
          - description: ' Indicates the review status of the HIT. Valid Values are
              NotReviewed | MarkedForReview | ReviewedAppropriate | ReviewedInappropriate.'
        NumberOfAssignmentsPending:
          allOf:
          - $ref: '#/components/schemas/Integer'
          - description: " The number of assignments for this HIT that are being previewed\
              \ or have been accepted by Workers, but have not yet been submitted,\
              \ returned, or abandoned."
        NumberOfAssignmentsAvailable:
          allOf:
          - $ref: '#/components/schemas/Integer'
          - description: ' The number of assignments for this HIT that are available
              for Workers to accept.'
        NumberOfAssignmentsCompleted:
          allOf:
          - $ref: '#/components/schemas/Integer'
          - description: ' The number of assignments for this HIT that have been approved
              or rejected.'
      type: object
    QualificationTypeStatus:
      enum:
      - Active
      - Inactive
      type: string
    QualificationType:
      description: " The QualificationType data structure represents a Qualification\
        \ type, a description of a property of a Worker that must match the requirements\
        \ of a HIT for the Worker to be able to accept the HIT. The type also describes\
        \ how a Worker can obtain a Qualification of that type, such as through a\
        \ Qualification test. "
      properties:
        QualificationTypeId:
          allOf:
          - $ref: '#/components/schemas/EntityId'
          - description: ' A unique identifier for the Qualification type. A Qualification
              type is given a Qualification type ID when you call the CreateQualificationType
              operation. '
        CreationTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          - description: ' The date and time the Qualification type was created. '
        Name:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: " The name of the Qualification type. The type name is used\
              \ to identify the type, and to find the type using a Qualification type\
              \ search. "
        Description:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: ' A long description for the Qualification type. '
        Keywords:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: " One or more words or phrases that describe theQualification\
              \ type, separated by commas. The Keywords make the type easier to find\
              \ using a search. "
        QualificationTypeStatus:
          allOf:
          - $ref: '#/components/schemas/QualificationTypeStatus'
          - description: " The status of the Qualification type. A Qualification type's\
              \ status determines if users can apply to receive a Qualification of\
              \ this type, and if HITs can be created with requirements based on this\
              \ type. Valid values are Active | Inactive. "
        Test:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: ' The questions for a Qualification test associated with
              this Qualification type that a user can take to obtain a Qualification
              of this type. This parameter must be specified if AnswerKey is present.
              A Qualification type cannot have both a specified Test parameter and
              an AutoGranted value of true. '
        TestDurationInSeconds:
          allOf:
          - $ref: '#/components/schemas/Long'
          - description: " The amount of time, in seconds, given to a Worker to complete\
              \ the Qualification test, beginning from the time the Worker requests\
              \ the Qualification. "
        AnswerKey:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The answers to the Qualification test specified in the Test
              parameter.
        RetryDelayInSeconds:
          allOf:
          - $ref: '#/components/schemas/Long'
          - description: " The amount of time, in seconds, Workers must wait after\
              \ taking the Qualification test before they can take it again. Workers\
              \ can take a Qualification test multiple times if they were not granted\
              \ the Qualification from a previous attempt, or if the test offers a\
              \ gradient score and they want a better score. If not specified, retries\
              \ are disabled and Workers can request a Qualification only once. "
        IsRequestable:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          - description: " Specifies whether the Qualification type is one that a\
              \ user can request through the Amazon Mechanical Turk web site, such\
              \ as by taking a Qualification test. This value is False for Qualifications\
              \ assigned automatically by the system. Valid values are True | False. "
        AutoGranted:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          - description: "Specifies that requests for the Qualification type are granted\
              \ immediately, without prompting the Worker with a Qualification test.\
              \ Valid values are True | False."
        AutoGrantedValue:
          allOf:
          - $ref: '#/components/schemas/Integer'
          - description: " The Qualification integer value to use for automatically\
              \ granted Qualifications, if AutoGranted is true. This is 1 by default. "
      type: object
    CustomerIdList:
      items:
        $ref: '#/components/schemas/CustomerId'
      type: array
    EventType:
      enum:
      - AssignmentAccepted
      - AssignmentAbandoned
      - AssignmentReturned
      - AssignmentSubmitted
      - AssignmentRejected
      - AssignmentApproved
      - HITCreated
      - HITExpired
      - HITReviewable
      - HITExtended
      - HITDisposed
      - Ping
      type: string
    EventTypeList:
      items:
        $ref: '#/components/schemas/EventType'
      type: array
    Qualification:
      description: "The Qualification data structure represents a Qualification assigned\
        \ to a user, including the Qualification type and the value (score)."
      properties:
        QualificationTypeId:
          allOf:
          - $ref: '#/components/schemas/EntityId'
          - description: ' The ID of the Qualification type for the Qualification.'
        WorkerId:
          allOf:
          - $ref: '#/components/schemas/CustomerId'
          - description: ' The ID of the Worker who possesses the Qualification. '
        GrantTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          - description: " The date and time the Qualification was granted to the\
              \ Worker. If the Worker's Qualification was revoked, and then re-granted\
              \ based on a new Qualification request, GrantTime is the date and time\
              \ of the last call to the AcceptQualificationRequest operation."
        IntegerValue:
          allOf:
          - $ref: '#/components/schemas/Integer'
          - description: " The value (score) of the Qualification, if the Qualification\
              \ has an integer value."
        LocaleValue:
          $ref: '#/components/schemas/Locale'
        Status:
          allOf:
          - $ref: '#/components/schemas/QualificationStatus'
          - description: ' The status of the Qualification. Valid values are Granted
              | Revoked.'
      type: object
    HITStatus:
      enum:
      - Assignable
      - Unassignable
      - Reviewable
      - Reviewing
      - Disposed
      type: string
    HITReviewStatus:
      enum:
      - NotReviewed
      - MarkedForReview
      - ReviewedAppropriate
      - ReviewedInappropriate
      type: string
    HITAccessActions:
      enum:
      - Accept
      - PreviewAndAccept
      - DiscoverPreviewAndAccept
      type: string
    HITLayoutParameter:
      description: ' The HITLayoutParameter data structure defines parameter values
        used with a HITLayout. A HITLayout is a reusable Amazon Mechanical Turk project
        template used to provide Human Intelligence Task (HIT) question data for CreateHIT. '
      properties:
        Name:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: ' The name of the parameter in the HITLayout. '
        Value:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: 'The value substituted for the parameter referenced in the
              HITLayout. '
      required:
      - Name
      - Value
      type: object
    HITList:
      items:
        $ref: '#/components/schemas/HIT'
      type: array
    IntegerList:
      items:
        $ref: '#/components/schemas/Integer'
      type: array
    PaginationToken:
      description: "If the previous response was incomplete (because there is more\
        \ data to retrieve), Amazon Mechanical Turk returns a pagination token in\
        \ the response. You can use this pagination token to retrieve the next set\
        \ of results. "
      maxLength: 255
      minLength: 1
      type: string
    ResultSize:
      maximum: 100
      minimum: 1
      type: integer
    QualificationRequestList:
      items:
        $ref: '#/components/schemas/QualificationRequest'
      type: array
    QualificationTypeList:
      items:
        $ref: '#/components/schemas/QualificationType'
      type: array
    ReviewPolicyLevelList:
      items:
        $ref: '#/components/schemas/ReviewPolicyLevel'
      type: array
    ReviewReport:
      description: ' Contains both ReviewResult and ReviewAction elements for a particular
        HIT. '
      properties:
        ReviewResults:
          allOf:
          - $ref: '#/components/schemas/ReviewResultDetailList'
          - description: ' A list of ReviewResults objects for each action specified
              in the Review Policy. '
        ReviewActions:
          allOf:
          - $ref: '#/components/schemas/ReviewActionDetailList'
          - description: ' A list of ReviewAction objects for each action specified
              in the Review Policy. '
      type: object
    ReviewableHITStatus:
      enum:
      - Reviewable
      - Reviewing
      type: string
    WorkerBlockList:
      items:
        $ref: '#/components/schemas/WorkerBlock'
      type: array
    QualificationStatus:
      enum:
      - Granted
      - Revoked
      type: string
    QualificationList:
      items:
        $ref: '#/components/schemas/Qualification'
      type: array
    Locale:
      description: The Locale data structure represents a geographical region or location.
      example:
        Country: ""
        Subdivision: ""
      properties:
        Country:
          allOf:
          - $ref: '#/components/schemas/CountryParameters'
          - description: " The country of the locale. Must be a valid ISO 3166 country\
              \ code. For example, the code US refers to the United States of America. "
        Subdivision:
          allOf:
          - $ref: '#/components/schemas/CountryParameters'
          - description: "The state or subdivision of the locale. A valid ISO 3166-2\
              \ subdivision code. For example, the code WA refers to the state of\
              \ Washington."
      required:
      - Country
      type: object
    LocaleList:
      items:
        $ref: '#/components/schemas/Locale'
      type: array
    NotificationTransport:
      enum:
      - Email
      - SQS
      - SNS
      type: string
    NotificationSpecification:
      description: The NotificationSpecification data structure describes a HIT event
        notification for a HIT type.
      properties:
        Destination:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: "<p> The target for notification messages. The Destination’\
              s format is determined by the specified Transport: </p> <ul> <li> <p>When\
              \ Transport is Email, the Destination is your email address.</p> </li>\
              \ <li> <p>When Transport is SQS, the Destination is your queue URL.</p>\
              \ </li> <li> <p>When Transport is SNS, the Destination is the ARN of\
              \ your topic.</p> </li> </ul>"
        Transport:
          allOf:
          - $ref: '#/components/schemas/NotificationTransport'
          - description: " The method Amazon Mechanical Turk uses to send the notification.\
              \ Valid Values: Email | SQS | SNS. "
        Version:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The version of the Notification API to use. Valid value is
              2006-05-05.
        EventTypes:
          allOf:
          - $ref: '#/components/schemas/EventTypeList'
          - description: " The list of events that should cause notifications to be\
              \ sent. Valid Values: AssignmentAccepted | AssignmentAbandoned | AssignmentReturned\
              \ | AssignmentSubmitted | AssignmentRejected | AssignmentApproved |\
              \ HITCreated | HITExtended | HITDisposed | HITReviewable | HITExpired\
              \ | Ping. The Ping event is only valid for the SendTestEventNotification\
              \ operation. "
      required:
      - Destination
      - EventTypes
      - Transport
      - Version
      type: object
    NotifyWorkersFailureCode:
      enum:
      - SoftFailure
      - HardFailure
      type: string
    NotifyWorkersFailureStatus:
      description: " When MTurk encounters an issue with notifying the Workers you\
        \ specified, it returns back this object with failure details. "
      properties:
        NotifyWorkersFailureCode:
          allOf:
          - $ref: '#/components/schemas/NotifyWorkersFailureCode'
          - description: ' Encoded value for the failure type. '
        NotifyWorkersFailureMessage:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: ' A message detailing the reason the Worker could not be
              notified. '
        WorkerId:
          allOf:
          - $ref: '#/components/schemas/CustomerId'
          - description: ' The ID of the Worker.'
      type: object
    NotifyWorkersFailureStatusList:
      items:
        $ref: '#/components/schemas/NotifyWorkersFailureStatus'
      type: array
    StringList:
      items:
        $ref: '#/components/schemas/String'
      type: array
    ParameterMapEntry:
      description: ' This data structure is the data type for the AnswerKey parameter
        of the ScoreMyKnownAnswers/2011-09-01 Review Policy. '
      properties:
        Key:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: ' The QuestionID from the HIT that is used to identify which
              question requires Mechanical Turk to score as part of the ScoreMyKnownAnswers/2011-09-01
              Review Policy. '
        Values:
          allOf:
          - $ref: '#/components/schemas/StringList'
          - description: ' The list of answers to the question specified in the MapEntry
              Key element. The Worker must match all values in order for the answer
              to be scored correctly. '
      type: object
    ParameterMapEntryList:
      items:
        $ref: '#/components/schemas/ParameterMapEntry'
      type: array
    PolicyParameter:
      description: ' Name of the parameter from the Review policy. '
      properties:
        Key:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: ' Name of the parameter from the list of Review Polices. '
        Values:
          allOf:
          - $ref: '#/components/schemas/StringList'
          - description: ' The list of values of the Parameter'
        MapEntries:
          allOf:
          - $ref: '#/components/schemas/ParameterMapEntryList'
          - description: ' List of ParameterMapEntry objects. '
      type: object
    PolicyParameterList:
      items:
        $ref: '#/components/schemas/PolicyParameter'
      type: array
    QualificationRequest:
      description: ' The QualificationRequest data structure represents a request
        a Worker has made for a Qualification. '
      properties:
        QualificationRequestId:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: "The ID of the Qualification request, a unique identifier\
              \ generated when the request was submitted. "
        QualificationTypeId:
          allOf:
          - $ref: '#/components/schemas/EntityId'
          - description: " The ID of the Qualification type the Worker is requesting,\
              \ as returned by the CreateQualificationType operation. "
        WorkerId:
          allOf:
          - $ref: '#/components/schemas/CustomerId'
          - description: ' The ID of the Worker requesting the Qualification.'
        Test:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: " The contents of the Qualification test that was presented\
              \ to the Worker, if the type has a test and the Worker has submitted\
              \ answers. This value is identical to the QuestionForm associated with\
              \ the Qualification type at the time the Worker requests the Qualification."
        Answer:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: " The Worker's answers for the Qualification type's test\
              \ contained in a QuestionFormAnswers document, if the type has a test\
              \ and the Worker has submitted answers. If the Worker does not provide\
              \ any answers, Answer may be empty. "
        SubmitTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          - description: "The date and time the Qualification request had a status\
              \ of Submitted. This is either the time the Worker submitted answers\
              \ for a Qualification test, or the time the Worker requested the Qualification\
              \ if the Qualification type does not have a test. "
      type: object
    QualificationRequirement:
      description: " The QualificationRequirement data structure describes a Qualification\
        \ that a Worker must have before the Worker is allowed to accept a HIT. A\
        \ requirement may optionally state that a Worker must have the Qualification\
        \ in order to preview the HIT, or see the HIT in search results. "
      properties:
        QualificationTypeId:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: ' The ID of the Qualification type for the requirement.'
        Comparator:
          allOf:
          - $ref: '#/components/schemas/Comparator'
          - description: "The kind of comparison to make against a Qualification's\
              \ value. You can compare a Qualification's value to an IntegerValue\
              \ to see if it is LessThan, LessThanOrEqualTo, GreaterThan, GreaterThanOrEqualTo,\
              \ EqualTo, or NotEqualTo the IntegerValue. You can compare it to a LocaleValue\
              \ to see if it is EqualTo, or NotEqualTo the LocaleValue. You can check\
              \ to see if the value is In or NotIn a set of IntegerValue or LocaleValue\
              \ values. Lastly, a Qualification requirement can also test if a Qualification\
              \ Exists or DoesNotExist in the user's profile, regardless of its value. "
        IntegerValues:
          allOf:
          - $ref: '#/components/schemas/IntegerList'
          - description: " The integer value to compare against the Qualification's\
              \ value. IntegerValue must not be present if Comparator is Exists or\
              \ DoesNotExist. IntegerValue can only be used if the Qualification type\
              \ has an integer value; it cannot be used with the Worker_Locale QualificationType\
              \ ID. When performing a set comparison by using the In or the NotIn\
              \ comparator, you can use up to 15 IntegerValue elements in a QualificationRequirement\
              \ data structure. "
        LocaleValues:
          allOf:
          - $ref: '#/components/schemas/LocaleList'
          - description: " The locale value to compare against the Qualification's\
              \ value. The local value must be a valid ISO 3166 country code or supports\
              \ ISO 3166-2 subdivisions. LocaleValue can only be used with a Worker_Locale\
              \ QualificationType ID. LocaleValue can only be used with the EqualTo,\
              \ NotEqualTo, In, and NotIn comparators. You must only use a single\
              \ LocaleValue element when using the EqualTo or NotEqualTo comparators.\
              \ When performing a set comparison by using the In or the NotIn comparator,\
              \ you can use up to 30 LocaleValue elements in a QualificationRequirement\
              \ data structure. "
        RequiredToPreview:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          - deprecated: true
            description: " DEPRECATED: Use the <code>ActionsGuarded</code> field instead.\
              \ If RequiredToPreview is true, the question data for the HIT will not\
              \ be shown when a Worker whose Qualifications do not meet this requirement\
              \ tries to preview the HIT. That is, a Worker's Qualifications must\
              \ meet all of the requirements for which RequiredToPreview is true in\
              \ order to preview the HIT. If a Worker meets all of the requirements\
              \ where RequiredToPreview is true (or if there are no such requirements),\
              \ but does not meet all of the requirements for the HIT, the Worker\
              \ will be allowed to preview the HIT's question data, but will not be\
              \ allowed to accept and complete the HIT. The default is false. This\
              \ should not be used in combination with the <code>ActionsGuarded</code>\
              \ field. "
        ActionsGuarded:
          allOf:
          - $ref: '#/components/schemas/HITAccessActions'
          - description: " Setting this attribute prevents Workers whose Qualifications\
              \ do not meet this QualificationRequirement from taking the specified\
              \ action. Valid arguments include \"Accept\" (Worker cannot accept the\
              \ HIT, but can preview the HIT and see it in their search results),\
              \ \"PreviewAndAccept\" (Worker cannot accept or preview the HIT, but\
              \ can see the HIT in their search results), and \"DiscoverPreviewAndAccept\"\
              \ (Worker cannot accept, preview, or see the HIT in their search results).\
              \ It's possible for you to create a HIT with multiple QualificationRequirements\
              \ (which can have different values for the ActionGuarded attribute).\
              \ In this case, the Worker is only permitted to perform an action when\
              \ they have met all QualificationRequirements guarding the action. The\
              \ actions in the order of least restrictive to most restrictive are\
              \ Discover, Preview and Accept. For example, if a Worker meets all QualificationRequirements\
              \ that are set to DiscoverPreviewAndAccept, but do not meet all requirements\
              \ that are set with PreviewAndAccept, then the Worker will be able to\
              \ Discover, i.e. see the HIT in their search result, but will not be\
              \ able to Preview or Accept the HIT. ActionsGuarded should not be used\
              \ in combination with the <code>RequiredToPreview</code> field. "
      required:
      - Comparator
      - QualificationTypeId
      type: object
    ReviewActionStatus:
      enum:
      - Intended
      - Succeeded
      - Failed
      - Cancelled
      type: string
    ReviewActionDetail:
      description: ' Both the AssignmentReviewReport and the HITReviewReport elements
        contains the ReviewActionDetail data structure. This structure is returned
        multiple times for each action specified in the Review Policy. '
      properties:
        ActionId:
          allOf:
          - $ref: '#/components/schemas/EntityId'
          - description: The unique identifier for the action.
        ActionName:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: " The nature of the action itself. The Review Policy is responsible\
              \ for examining the HIT and Assignments, emitting results, and deciding\
              \ which other actions will be necessary. "
        TargetId:
          allOf:
          - $ref: '#/components/schemas/EntityId'
          - description: ' The specific HITId or AssignmentID targeted by the action.'
        TargetType:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: ' The type of object in TargetId.'
        Status:
          allOf:
          - $ref: '#/components/schemas/ReviewActionStatus'
          - description: " The current disposition of the action: INTENDED, SUCCEEDED,\
              \ FAILED, or CANCELLED. "
        CompleteTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          - description: ' The date when the action was completed.'
        Result:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: ' A description of the outcome of the review.'
        ErrorCode:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: ' Present only when the Results have a FAILED Status.'
      type: object
    ReviewActionDetailList:
      items:
        $ref: '#/components/schemas/ReviewActionDetail'
      type: array
    ReviewPolicyLevel:
      enum:
      - Assignment
      - HIT
      type: string
    ReviewResultDetailList:
      items:
        $ref: '#/components/schemas/ReviewResultDetail'
      type: array
    ReviewResultDetail:
      description: ' This data structure is returned multiple times for each result
        specified in the Review Policy. '
      properties:
        ActionId:
          allOf:
          - $ref: '#/components/schemas/EntityId'
          - description: ' A unique identifier of the Review action result. '
        SubjectId:
          allOf:
          - $ref: '#/components/schemas/EntityId'
          - description: "The HITID or AssignmentId about which this result was taken.\
              \ Note that HIT-level Review Policies will often emit results about\
              \ both the HIT itself and its Assignments, while Assignment-level review\
              \ policies generally only emit results about the Assignment itself. "
        SubjectType:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: ' The type of the object from the SubjectId field.'
        QuestionId:
          allOf:
          - $ref: '#/components/schemas/EntityId'
          - description: " Specifies the QuestionId the result is describing. Depending\
              \ on whether the TargetType is a HIT or Assignment this results could\
              \ specify multiple values. If TargetType is HIT and QuestionId is absent,\
              \ then the result describes results of the HIT, including the HIT agreement\
              \ score. If ObjectType is Assignment and QuestionId is absent, then\
              \ the result describes the Worker's performance on the HIT. "
        Key:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: ' Key identifies the particular piece of reviewed information. '
        Value:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: ' The values of Key provided by the review policies you have
              selected. '
      type: object
    WorkerBlock:
      description: " The WorkerBlock data structure represents a Worker who has been\
        \ blocked. It has two elements: the WorkerId and the Reason for the block. "
      properties:
        WorkerId:
          allOf:
          - $ref: '#/components/schemas/CustomerId'
          - description: ' The ID of the Worker who accepted the HIT.'
        Reason:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: ' A message explaining the reason the Worker was blocked. '
      type: object
    CreateHITResponse_HIT:
      allOf:
      - $ref: '#/components/schemas/HIT'
      - description: " Contains the newly created HIT data. For a description of the\
          \ HIT data structure as it appears in responses, see the HIT Data Structure\
          \ documentation. "
      example:
        NumberOfAssignmentsAvailable: ""
        HITGroupId: ""
        HITLayoutId: ""
        Description: ""
        Keywords: ""
        NumberOfAssignmentsCompleted: ""
        Expiration: ""
        Title: ""
        RequesterAnnotation: ""
        MaxAssignments: ""
        HITReviewStatus: ""
        AutoApprovalDelayInSeconds: ""
        HITStatus: ""
        HITId: ""
        CreationTime: ""
        Question: ""
        NumberOfAssignmentsPending: ""
        Reward: Reward
        HITTypeId: ""
        QualificationRequirements: ""
        AssignmentDurationInSeconds: ""
    CreateHITRequest_AssignmentReviewPolicy:
      allOf:
      - $ref: '#/components/schemas/ReviewPolicy'
      - description: ' The Assignment-level Review Policy applies to the assignments
          under the HIT. You can specify for Mechanical Turk to take various actions
          based on the policy. '
      example:
        Parameters: ""
        PolicyName: ""
    CreateHITRequest_HITReviewPolicy:
      allOf:
      - $ref: '#/components/schemas/ReviewPolicy'
      - description: ' The HIT-level Review Policy applies to the HIT. You can specify
          for Mechanical Turk to take various actions based on the policy. '
      example:
        Parameters: ""
        PolicyName: ""
    CreateQualificationTypeResponse_QualificationType:
      allOf:
      - $ref: '#/components/schemas/QualificationType'
      - description: "The created Qualification type, returned as a QualificationType\
          \ data structure."
      example:
        TestDurationInSeconds: ""
        AutoGrantedValue: ""
        AnswerKey: ""
        Description: ""
        Keywords: ""
        RetryDelayInSeconds: ""
        QualificationTypeId: ""
        Name: ""
        QualificationTypeStatus: ""
        Test: ""
        CreationTime: ""
        AutoGranted: ""
        IsRequestable: ""
    GetAssignmentResponse_Assignment:
      allOf:
      - $ref: '#/components/schemas/Assignment'
      - description: ' The assignment. The response includes one Assignment element. '
      example:
        RejectionTime: ""
        Answer: ""
        ApprovalTime: ""
        HITId: ""
        Deadline: ""
        AssignmentId: ""
        AutoApprovalTime: ""
        AcceptTime: ""
        WorkerId: ""
        AssignmentStatus: ""
        SubmitTime: ""
        RequesterFeedback: ""
    GetAssignmentResponse_HIT:
      allOf:
      - $ref: '#/components/schemas/HIT'
      - description: ' The HIT associated with this assignment. The response includes
          one HIT element.'
      example:
        NumberOfAssignmentsAvailable: ""
        HITGroupId: ""
        HITLayoutId: ""
        Description: ""
        Keywords: ""
        NumberOfAssignmentsCompleted: ""
        Expiration: ""
        Title: ""
        RequesterAnnotation: ""
        MaxAssignments: ""
        HITReviewStatus: ""
        AutoApprovalDelayInSeconds: ""
        HITStatus: ""
        HITId: ""
        CreationTime: ""
        Question: ""
        NumberOfAssignmentsPending: ""
        Reward: Reward
        HITTypeId: ""
        QualificationRequirements: ""
        AssignmentDurationInSeconds: ""
    GetHITResponse_HIT:
      allOf:
      - $ref: '#/components/schemas/HIT'
      - description: ' Contains the requested HIT data.'
      example:
        NumberOfAssignmentsAvailable: ""
        HITGroupId: ""
        HITLayoutId: ""
        Description: ""
        Keywords: ""
        NumberOfAssignmentsCompleted: ""
        Expiration: ""
        Title: ""
        RequesterAnnotation: ""
        MaxAssignments: ""
        HITReviewStatus: ""
        AutoApprovalDelayInSeconds: ""
        HITStatus: ""
        HITId: ""
        CreationTime: ""
        Question: ""
        NumberOfAssignmentsPending: ""
        Reward: Reward
        HITTypeId: ""
        QualificationRequirements: ""
        AssignmentDurationInSeconds: ""
    GetQualificationScoreResponse_Qualification:
      allOf:
      - $ref: '#/components/schemas/Qualification'
      - description: " The Qualification data structure of the Qualification assigned\
          \ to a user, including the Qualification type and the value (score). "
      example:
        Status: ""
        GrantTime: ""
        IntegerValue: ""
        QualificationTypeId: ""
        WorkerId: ""
        LocaleValue:
          Country: ""
          Subdivision: ""
    GetQualificationTypeResponse_QualificationType:
      allOf:
      - $ref: '#/components/schemas/QualificationType'
      - description: ' The returned Qualification Type'
      example:
        TestDurationInSeconds: ""
        AutoGrantedValue: ""
        AnswerKey: ""
        Description: ""
        Keywords: ""
        RetryDelayInSeconds: ""
        QualificationTypeId: ""
        Name: ""
        QualificationTypeStatus: ""
        Test: ""
        CreationTime: ""
        AutoGranted: ""
        IsRequestable: ""
    ListReviewPolicyResultsForHITResponse_AssignmentReviewPolicy:
      allOf:
      - $ref: '#/components/schemas/ReviewPolicy'
      - description: ' The name of the Assignment-level Review Policy. This contains
          only the PolicyName element. '
      example:
        Parameters: ""
        PolicyName: ""
    ListReviewPolicyResultsForHITResponse_HITReviewPolicy:
      allOf:
      - $ref: '#/components/schemas/ReviewPolicy'
      - description: The name of the HIT-level Review Policy. This contains only the
          PolicyName element.
      example:
        Parameters: ""
        PolicyName: ""
    ListReviewPolicyResultsForHITResponse_AssignmentReviewReport:
      allOf:
      - $ref: '#/components/schemas/ReviewReport'
      - description: ' Contains both ReviewResult and ReviewAction elements for an
          Assignment. '
      example:
        ReviewResults: ""
        ReviewActions: ""
    ListReviewPolicyResultsForHITResponse_HITReviewReport:
      allOf:
      - $ref: '#/components/schemas/ReviewReport'
      - description: 'Contains both ReviewResult and ReviewAction elements for a particular
          HIT. '
      example:
        ReviewResults: ""
        ReviewActions: ""
    SendTestEventNotificationRequest_Notification:
      allOf:
      - $ref: '#/components/schemas/NotificationSpecification'
      - description: ' The notification specification to test. This value is identical
          to the value you would provide to the UpdateNotificationSettings operation
          when you establish the notification specification for a HIT type. '
      example:
        Destination: ""
        Version: ""
        EventTypes: ""
        Transport: ""
    UpdateNotificationSettingsRequest_Notification:
      allOf:
      - $ref: '#/components/schemas/NotificationSpecification'
      - description: ' The notification specification for the HIT type. '
      example:
        Destination: ""
        Version: ""
        EventTypes: ""
        Transport: ""
    UpdateQualificationTypeResponse_QualificationType:
      allOf:
      - $ref: '#/components/schemas/QualificationType'
      - description: ' Contains a QualificationType data structure.'
      example:
        TestDurationInSeconds: ""
        AutoGrantedValue: ""
        AnswerKey: ""
        Description: ""
        Keywords: ""
        RetryDelayInSeconds: ""
        QualificationTypeId: ""
        Name: ""
        QualificationTypeStatus: ""
        Test: ""
        CreationTime: ""
        AutoGranted: ""
        IsRequestable: ""
  securitySchemes:
    hmac:
      description: Amazon Signature authorization v4
      in: header
      name: Authorization
      type: apiKey
      x-amazon-apigateway-authtype: awsSigv4
x-hasEquivalentPaths: true

