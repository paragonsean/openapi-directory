/*
 * Amazon Mechanical Turk
 * <fullname>Amazon Mechanical Turk API Reference</fullname>
 *
 * The version of the OpenAPI document: 2017-01-17
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;
import org.openapitools.client.model.ListReviewPolicyResultsForHITResponseAssignmentReviewPolicy;
import org.openapitools.client.model.ListReviewPolicyResultsForHITResponseAssignmentReviewReport;
import org.openapitools.client.model.ListReviewPolicyResultsForHITResponseHITReviewPolicy;
import org.openapitools.client.model.ListReviewPolicyResultsForHITResponseHITReviewReport;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * ListReviewPolicyResultsForHITResponse
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T12:12:46.282490-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class ListReviewPolicyResultsForHITResponse {
  public static final String SERIALIZED_NAME_HI_T_ID = "HITId";
  @SerializedName(SERIALIZED_NAME_HI_T_ID)
  private String hiTId;

  public static final String SERIALIZED_NAME_ASSIGNMENT_REVIEW_POLICY = "AssignmentReviewPolicy";
  @SerializedName(SERIALIZED_NAME_ASSIGNMENT_REVIEW_POLICY)
  private ListReviewPolicyResultsForHITResponseAssignmentReviewPolicy assignmentReviewPolicy;

  public static final String SERIALIZED_NAME_HI_T_REVIEW_POLICY = "HITReviewPolicy";
  @SerializedName(SERIALIZED_NAME_HI_T_REVIEW_POLICY)
  private ListReviewPolicyResultsForHITResponseHITReviewPolicy hiTReviewPolicy;

  public static final String SERIALIZED_NAME_ASSIGNMENT_REVIEW_REPORT = "AssignmentReviewReport";
  @SerializedName(SERIALIZED_NAME_ASSIGNMENT_REVIEW_REPORT)
  private ListReviewPolicyResultsForHITResponseAssignmentReviewReport assignmentReviewReport;

  public static final String SERIALIZED_NAME_HI_T_REVIEW_REPORT = "HITReviewReport";
  @SerializedName(SERIALIZED_NAME_HI_T_REVIEW_REPORT)
  private ListReviewPolicyResultsForHITResponseHITReviewReport hiTReviewReport;

  public static final String SERIALIZED_NAME_NEXT_TOKEN = "NextToken";
  @SerializedName(SERIALIZED_NAME_NEXT_TOKEN)
  private String nextToken;

  public ListReviewPolicyResultsForHITResponse() {
  }

  public ListReviewPolicyResultsForHITResponse hiTId(String hiTId) {
    this.hiTId = hiTId;
    return this;
  }

  /**
   * Get hiTId
   * @return hiTId
   */
  @javax.annotation.Nullable
  public String getHiTId() {
    return hiTId;
  }

  public void setHiTId(String hiTId) {
    this.hiTId = hiTId;
  }


  public ListReviewPolicyResultsForHITResponse assignmentReviewPolicy(ListReviewPolicyResultsForHITResponseAssignmentReviewPolicy assignmentReviewPolicy) {
    this.assignmentReviewPolicy = assignmentReviewPolicy;
    return this;
  }

  /**
   * Get assignmentReviewPolicy
   * @return assignmentReviewPolicy
   */
  @javax.annotation.Nullable
  public ListReviewPolicyResultsForHITResponseAssignmentReviewPolicy getAssignmentReviewPolicy() {
    return assignmentReviewPolicy;
  }

  public void setAssignmentReviewPolicy(ListReviewPolicyResultsForHITResponseAssignmentReviewPolicy assignmentReviewPolicy) {
    this.assignmentReviewPolicy = assignmentReviewPolicy;
  }


  public ListReviewPolicyResultsForHITResponse hiTReviewPolicy(ListReviewPolicyResultsForHITResponseHITReviewPolicy hiTReviewPolicy) {
    this.hiTReviewPolicy = hiTReviewPolicy;
    return this;
  }

  /**
   * Get hiTReviewPolicy
   * @return hiTReviewPolicy
   */
  @javax.annotation.Nullable
  public ListReviewPolicyResultsForHITResponseHITReviewPolicy getHiTReviewPolicy() {
    return hiTReviewPolicy;
  }

  public void setHiTReviewPolicy(ListReviewPolicyResultsForHITResponseHITReviewPolicy hiTReviewPolicy) {
    this.hiTReviewPolicy = hiTReviewPolicy;
  }


  public ListReviewPolicyResultsForHITResponse assignmentReviewReport(ListReviewPolicyResultsForHITResponseAssignmentReviewReport assignmentReviewReport) {
    this.assignmentReviewReport = assignmentReviewReport;
    return this;
  }

  /**
   * Get assignmentReviewReport
   * @return assignmentReviewReport
   */
  @javax.annotation.Nullable
  public ListReviewPolicyResultsForHITResponseAssignmentReviewReport getAssignmentReviewReport() {
    return assignmentReviewReport;
  }

  public void setAssignmentReviewReport(ListReviewPolicyResultsForHITResponseAssignmentReviewReport assignmentReviewReport) {
    this.assignmentReviewReport = assignmentReviewReport;
  }


  public ListReviewPolicyResultsForHITResponse hiTReviewReport(ListReviewPolicyResultsForHITResponseHITReviewReport hiTReviewReport) {
    this.hiTReviewReport = hiTReviewReport;
    return this;
  }

  /**
   * Get hiTReviewReport
   * @return hiTReviewReport
   */
  @javax.annotation.Nullable
  public ListReviewPolicyResultsForHITResponseHITReviewReport getHiTReviewReport() {
    return hiTReviewReport;
  }

  public void setHiTReviewReport(ListReviewPolicyResultsForHITResponseHITReviewReport hiTReviewReport) {
    this.hiTReviewReport = hiTReviewReport;
  }


  public ListReviewPolicyResultsForHITResponse nextToken(String nextToken) {
    this.nextToken = nextToken;
    return this;
  }

  /**
   * If the previous response was incomplete (because there is more data to retrieve), Amazon Mechanical Turk returns a pagination token in the response. You can use this pagination token to retrieve the next set of results. 
   * @return nextToken
   */
  @javax.annotation.Nullable
  public String getNextToken() {
    return nextToken;
  }

  public void setNextToken(String nextToken) {
    this.nextToken = nextToken;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ListReviewPolicyResultsForHITResponse listReviewPolicyResultsForHITResponse = (ListReviewPolicyResultsForHITResponse) o;
    return Objects.equals(this.hiTId, listReviewPolicyResultsForHITResponse.hiTId) &&
        Objects.equals(this.assignmentReviewPolicy, listReviewPolicyResultsForHITResponse.assignmentReviewPolicy) &&
        Objects.equals(this.hiTReviewPolicy, listReviewPolicyResultsForHITResponse.hiTReviewPolicy) &&
        Objects.equals(this.assignmentReviewReport, listReviewPolicyResultsForHITResponse.assignmentReviewReport) &&
        Objects.equals(this.hiTReviewReport, listReviewPolicyResultsForHITResponse.hiTReviewReport) &&
        Objects.equals(this.nextToken, listReviewPolicyResultsForHITResponse.nextToken);
  }

  @Override
  public int hashCode() {
    return Objects.hash(hiTId, assignmentReviewPolicy, hiTReviewPolicy, assignmentReviewReport, hiTReviewReport, nextToken);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ListReviewPolicyResultsForHITResponse {\n");
    sb.append("    hiTId: ").append(toIndentedString(hiTId)).append("\n");
    sb.append("    assignmentReviewPolicy: ").append(toIndentedString(assignmentReviewPolicy)).append("\n");
    sb.append("    hiTReviewPolicy: ").append(toIndentedString(hiTReviewPolicy)).append("\n");
    sb.append("    assignmentReviewReport: ").append(toIndentedString(assignmentReviewReport)).append("\n");
    sb.append("    hiTReviewReport: ").append(toIndentedString(hiTReviewReport)).append("\n");
    sb.append("    nextToken: ").append(toIndentedString(nextToken)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("HITId");
    openapiFields.add("AssignmentReviewPolicy");
    openapiFields.add("HITReviewPolicy");
    openapiFields.add("AssignmentReviewReport");
    openapiFields.add("HITReviewReport");
    openapiFields.add("NextToken");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to ListReviewPolicyResultsForHITResponse
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!ListReviewPolicyResultsForHITResponse.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in ListReviewPolicyResultsForHITResponse is not found in the empty JSON string", ListReviewPolicyResultsForHITResponse.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!ListReviewPolicyResultsForHITResponse.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `ListReviewPolicyResultsForHITResponse` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // validate the optional field `HITId`
      if (jsonObj.get("HITId") != null && !jsonObj.get("HITId").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("HITId"));
      }
      // validate the optional field `AssignmentReviewPolicy`
      if (jsonObj.get("AssignmentReviewPolicy") != null && !jsonObj.get("AssignmentReviewPolicy").isJsonNull()) {
        ListReviewPolicyResultsForHITResponseAssignmentReviewPolicy.validateJsonElement(jsonObj.get("AssignmentReviewPolicy"));
      }
      // validate the optional field `HITReviewPolicy`
      if (jsonObj.get("HITReviewPolicy") != null && !jsonObj.get("HITReviewPolicy").isJsonNull()) {
        ListReviewPolicyResultsForHITResponseHITReviewPolicy.validateJsonElement(jsonObj.get("HITReviewPolicy"));
      }
      // validate the optional field `AssignmentReviewReport`
      if (jsonObj.get("AssignmentReviewReport") != null && !jsonObj.get("AssignmentReviewReport").isJsonNull()) {
        ListReviewPolicyResultsForHITResponseAssignmentReviewReport.validateJsonElement(jsonObj.get("AssignmentReviewReport"));
      }
      // validate the optional field `HITReviewReport`
      if (jsonObj.get("HITReviewReport") != null && !jsonObj.get("HITReviewReport").isJsonNull()) {
        ListReviewPolicyResultsForHITResponseHITReviewReport.validateJsonElement(jsonObj.get("HITReviewReport"));
      }
      if ((jsonObj.get("NextToken") != null && !jsonObj.get("NextToken").isJsonNull()) && !jsonObj.get("NextToken").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `NextToken` to be a primitive type in the JSON string but got `%s`", jsonObj.get("NextToken").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!ListReviewPolicyResultsForHITResponse.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'ListReviewPolicyResultsForHITResponse' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<ListReviewPolicyResultsForHITResponse> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(ListReviewPolicyResultsForHITResponse.class));

       return (TypeAdapter<T>) new TypeAdapter<ListReviewPolicyResultsForHITResponse>() {
           @Override
           public void write(JsonWriter out, ListReviewPolicyResultsForHITResponse value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public ListReviewPolicyResultsForHITResponse read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of ListReviewPolicyResultsForHITResponse given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of ListReviewPolicyResultsForHITResponse
   * @throws IOException if the JSON string is invalid with respect to ListReviewPolicyResultsForHITResponse
   */
  public static ListReviewPolicyResultsForHITResponse fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, ListReviewPolicyResultsForHITResponse.class);
  }

  /**
   * Convert an instance of ListReviewPolicyResultsForHITResponse to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

