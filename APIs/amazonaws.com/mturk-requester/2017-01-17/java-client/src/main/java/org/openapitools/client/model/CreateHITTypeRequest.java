/*
 * Amazon Mechanical Turk
 * <fullname>Amazon Mechanical Turk API Reference</fullname>
 *
 * The version of the OpenAPI document: 2017-01-17
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;
import java.util.List;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * CreateHITTypeRequest
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T12:12:46.282490-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class CreateHITTypeRequest {
  public static final String SERIALIZED_NAME_AUTO_APPROVAL_DELAY_IN_SECONDS = "AutoApprovalDelayInSeconds";
  @SerializedName(SERIALIZED_NAME_AUTO_APPROVAL_DELAY_IN_SECONDS)
  private Integer autoApprovalDelayInSeconds;

  public static final String SERIALIZED_NAME_ASSIGNMENT_DURATION_IN_SECONDS = "AssignmentDurationInSeconds";
  @SerializedName(SERIALIZED_NAME_ASSIGNMENT_DURATION_IN_SECONDS)
  private Integer assignmentDurationInSeconds;

  public static final String SERIALIZED_NAME_REWARD = "Reward";
  @SerializedName(SERIALIZED_NAME_REWARD)
  private String reward;

  public static final String SERIALIZED_NAME_TITLE = "Title";
  @SerializedName(SERIALIZED_NAME_TITLE)
  private String title;

  public static final String SERIALIZED_NAME_KEYWORDS = "Keywords";
  @SerializedName(SERIALIZED_NAME_KEYWORDS)
  private String keywords;

  public static final String SERIALIZED_NAME_DESCRIPTION = "Description";
  @SerializedName(SERIALIZED_NAME_DESCRIPTION)
  private String description;

  public static final String SERIALIZED_NAME_QUALIFICATION_REQUIREMENTS = "QualificationRequirements";
  @SerializedName(SERIALIZED_NAME_QUALIFICATION_REQUIREMENTS)
  private List qualificationRequirements;

  public CreateHITTypeRequest() {
  }

  public CreateHITTypeRequest autoApprovalDelayInSeconds(Integer autoApprovalDelayInSeconds) {
    this.autoApprovalDelayInSeconds = autoApprovalDelayInSeconds;
    return this;
  }

  /**
   * Get autoApprovalDelayInSeconds
   * @return autoApprovalDelayInSeconds
   */
  @javax.annotation.Nullable
  public Integer getAutoApprovalDelayInSeconds() {
    return autoApprovalDelayInSeconds;
  }

  public void setAutoApprovalDelayInSeconds(Integer autoApprovalDelayInSeconds) {
    this.autoApprovalDelayInSeconds = autoApprovalDelayInSeconds;
  }


  public CreateHITTypeRequest assignmentDurationInSeconds(Integer assignmentDurationInSeconds) {
    this.assignmentDurationInSeconds = assignmentDurationInSeconds;
    return this;
  }

  /**
   * Get assignmentDurationInSeconds
   * @return assignmentDurationInSeconds
   */
  @javax.annotation.Nonnull
  public Integer getAssignmentDurationInSeconds() {
    return assignmentDurationInSeconds;
  }

  public void setAssignmentDurationInSeconds(Integer assignmentDurationInSeconds) {
    this.assignmentDurationInSeconds = assignmentDurationInSeconds;
  }


  public CreateHITTypeRequest reward(String reward) {
    this.reward = reward;
    return this;
  }

  /**
   * Get reward
   * @return reward
   */
  @javax.annotation.Nonnull
  public String getReward() {
    return reward;
  }

  public void setReward(String reward) {
    this.reward = reward;
  }


  public CreateHITTypeRequest title(String title) {
    this.title = title;
    return this;
  }

  /**
   * Get title
   * @return title
   */
  @javax.annotation.Nonnull
  public String getTitle() {
    return title;
  }

  public void setTitle(String title) {
    this.title = title;
  }


  public CreateHITTypeRequest keywords(String keywords) {
    this.keywords = keywords;
    return this;
  }

  /**
   * Get keywords
   * @return keywords
   */
  @javax.annotation.Nullable
  public String getKeywords() {
    return keywords;
  }

  public void setKeywords(String keywords) {
    this.keywords = keywords;
  }


  public CreateHITTypeRequest description(String description) {
    this.description = description;
    return this;
  }

  /**
   * Get description
   * @return description
   */
  @javax.annotation.Nonnull
  public String getDescription() {
    return description;
  }

  public void setDescription(String description) {
    this.description = description;
  }


  public CreateHITTypeRequest qualificationRequirements(List qualificationRequirements) {
    this.qualificationRequirements = qualificationRequirements;
    return this;
  }

  /**
   * Get qualificationRequirements
   * @return qualificationRequirements
   */
  @javax.annotation.Nullable
  public List getQualificationRequirements() {
    return qualificationRequirements;
  }

  public void setQualificationRequirements(List qualificationRequirements) {
    this.qualificationRequirements = qualificationRequirements;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CreateHITTypeRequest createHITTypeRequest = (CreateHITTypeRequest) o;
    return Objects.equals(this.autoApprovalDelayInSeconds, createHITTypeRequest.autoApprovalDelayInSeconds) &&
        Objects.equals(this.assignmentDurationInSeconds, createHITTypeRequest.assignmentDurationInSeconds) &&
        Objects.equals(this.reward, createHITTypeRequest.reward) &&
        Objects.equals(this.title, createHITTypeRequest.title) &&
        Objects.equals(this.keywords, createHITTypeRequest.keywords) &&
        Objects.equals(this.description, createHITTypeRequest.description) &&
        Objects.equals(this.qualificationRequirements, createHITTypeRequest.qualificationRequirements);
  }

  @Override
  public int hashCode() {
    return Objects.hash(autoApprovalDelayInSeconds, assignmentDurationInSeconds, reward, title, keywords, description, qualificationRequirements);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CreateHITTypeRequest {\n");
    sb.append("    autoApprovalDelayInSeconds: ").append(toIndentedString(autoApprovalDelayInSeconds)).append("\n");
    sb.append("    assignmentDurationInSeconds: ").append(toIndentedString(assignmentDurationInSeconds)).append("\n");
    sb.append("    reward: ").append(toIndentedString(reward)).append("\n");
    sb.append("    title: ").append(toIndentedString(title)).append("\n");
    sb.append("    keywords: ").append(toIndentedString(keywords)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    qualificationRequirements: ").append(toIndentedString(qualificationRequirements)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("AutoApprovalDelayInSeconds");
    openapiFields.add("AssignmentDurationInSeconds");
    openapiFields.add("Reward");
    openapiFields.add("Title");
    openapiFields.add("Keywords");
    openapiFields.add("Description");
    openapiFields.add("QualificationRequirements");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
    openapiRequiredFields.add("AssignmentDurationInSeconds");
    openapiRequiredFields.add("Reward");
    openapiRequiredFields.add("Title");
    openapiRequiredFields.add("Description");
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to CreateHITTypeRequest
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!CreateHITTypeRequest.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in CreateHITTypeRequest is not found in the empty JSON string", CreateHITTypeRequest.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!CreateHITTypeRequest.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `CreateHITTypeRequest` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }

      // check to make sure all required properties/fields are present in the JSON string
      for (String requiredField : CreateHITTypeRequest.openapiRequiredFields) {
        if (jsonElement.getAsJsonObject().get(requiredField) == null) {
          throw new IllegalArgumentException(String.format("The required field `%s` is not found in the JSON string: %s", requiredField, jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // validate the optional field `AutoApprovalDelayInSeconds`
      if (jsonObj.get("AutoApprovalDelayInSeconds") != null && !jsonObj.get("AutoApprovalDelayInSeconds").isJsonNull()) {
        Integer.validateJsonElement(jsonObj.get("AutoApprovalDelayInSeconds"));
      }
      // validate the required field `AssignmentDurationInSeconds`
      Integer.validateJsonElement(jsonObj.get("AssignmentDurationInSeconds"));
      // validate the required field `Reward`
      String.validateJsonElement(jsonObj.get("Reward"));
      // validate the required field `Title`
      String.validateJsonElement(jsonObj.get("Title"));
      // validate the optional field `Keywords`
      if (jsonObj.get("Keywords") != null && !jsonObj.get("Keywords").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("Keywords"));
      }
      // validate the required field `Description`
      String.validateJsonElement(jsonObj.get("Description"));
      // validate the optional field `QualificationRequirements`
      if (jsonObj.get("QualificationRequirements") != null && !jsonObj.get("QualificationRequirements").isJsonNull()) {
        List.validateJsonElement(jsonObj.get("QualificationRequirements"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!CreateHITTypeRequest.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'CreateHITTypeRequest' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<CreateHITTypeRequest> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(CreateHITTypeRequest.class));

       return (TypeAdapter<T>) new TypeAdapter<CreateHITTypeRequest>() {
           @Override
           public void write(JsonWriter out, CreateHITTypeRequest value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public CreateHITTypeRequest read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of CreateHITTypeRequest given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of CreateHITTypeRequest
   * @throws IOException if the JSON string is invalid with respect to CreateHITTypeRequest
   */
  public static CreateHITTypeRequest fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, CreateHITTypeRequest.class);
  }

  /**
   * Convert an instance of CreateHITTypeRequest to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

