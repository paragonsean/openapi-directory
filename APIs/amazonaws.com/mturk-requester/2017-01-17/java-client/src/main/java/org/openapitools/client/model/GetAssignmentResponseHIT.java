/*
 * Amazon Mechanical Turk
 * <fullname>Amazon Mechanical Turk API Reference</fullname>
 *
 * The version of the OpenAPI document: 2017-01-17
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.time.OffsetDateTime;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.HITReviewStatus;
import org.openapitools.client.model.HITStatus;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * GetAssignmentResponseHIT
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T12:12:46.282490-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class GetAssignmentResponseHIT {
  public static final String SERIALIZED_NAME_HI_T_ID = "HITId";
  @SerializedName(SERIALIZED_NAME_HI_T_ID)
  private String hiTId;

  public static final String SERIALIZED_NAME_HI_T_TYPE_ID = "HITTypeId";
  @SerializedName(SERIALIZED_NAME_HI_T_TYPE_ID)
  private String hiTTypeId;

  public static final String SERIALIZED_NAME_HI_T_GROUP_ID = "HITGroupId";
  @SerializedName(SERIALIZED_NAME_HI_T_GROUP_ID)
  private String hiTGroupId;

  public static final String SERIALIZED_NAME_HI_T_LAYOUT_ID = "HITLayoutId";
  @SerializedName(SERIALIZED_NAME_HI_T_LAYOUT_ID)
  private String hiTLayoutId;

  public static final String SERIALIZED_NAME_CREATION_TIME = "CreationTime";
  @SerializedName(SERIALIZED_NAME_CREATION_TIME)
  private OffsetDateTime creationTime;

  public static final String SERIALIZED_NAME_TITLE = "Title";
  @SerializedName(SERIALIZED_NAME_TITLE)
  private String title;

  public static final String SERIALIZED_NAME_DESCRIPTION = "Description";
  @SerializedName(SERIALIZED_NAME_DESCRIPTION)
  private String description;

  public static final String SERIALIZED_NAME_QUESTION = "Question";
  @SerializedName(SERIALIZED_NAME_QUESTION)
  private String question;

  public static final String SERIALIZED_NAME_KEYWORDS = "Keywords";
  @SerializedName(SERIALIZED_NAME_KEYWORDS)
  private String keywords;

  public static final String SERIALIZED_NAME_HI_T_STATUS = "HITStatus";
  @SerializedName(SERIALIZED_NAME_HI_T_STATUS)
  private HITStatus hiTStatus;

  public static final String SERIALIZED_NAME_MAX_ASSIGNMENTS = "MaxAssignments";
  @SerializedName(SERIALIZED_NAME_MAX_ASSIGNMENTS)
  private Integer maxAssignments;

  public static final String SERIALIZED_NAME_REWARD = "Reward";
  @SerializedName(SERIALIZED_NAME_REWARD)
  private String reward;

  public static final String SERIALIZED_NAME_AUTO_APPROVAL_DELAY_IN_SECONDS = "AutoApprovalDelayInSeconds";
  @SerializedName(SERIALIZED_NAME_AUTO_APPROVAL_DELAY_IN_SECONDS)
  private Integer autoApprovalDelayInSeconds;

  public static final String SERIALIZED_NAME_EXPIRATION = "Expiration";
  @SerializedName(SERIALIZED_NAME_EXPIRATION)
  private OffsetDateTime expiration;

  public static final String SERIALIZED_NAME_ASSIGNMENT_DURATION_IN_SECONDS = "AssignmentDurationInSeconds";
  @SerializedName(SERIALIZED_NAME_ASSIGNMENT_DURATION_IN_SECONDS)
  private Integer assignmentDurationInSeconds;

  public static final String SERIALIZED_NAME_REQUESTER_ANNOTATION = "RequesterAnnotation";
  @SerializedName(SERIALIZED_NAME_REQUESTER_ANNOTATION)
  private String requesterAnnotation;

  public static final String SERIALIZED_NAME_QUALIFICATION_REQUIREMENTS = "QualificationRequirements";
  @SerializedName(SERIALIZED_NAME_QUALIFICATION_REQUIREMENTS)
  private List qualificationRequirements;

  public static final String SERIALIZED_NAME_HI_T_REVIEW_STATUS = "HITReviewStatus";
  @SerializedName(SERIALIZED_NAME_HI_T_REVIEW_STATUS)
  private HITReviewStatus hiTReviewStatus;

  public static final String SERIALIZED_NAME_NUMBER_OF_ASSIGNMENTS_PENDING = "NumberOfAssignmentsPending";
  @SerializedName(SERIALIZED_NAME_NUMBER_OF_ASSIGNMENTS_PENDING)
  private Integer numberOfAssignmentsPending;

  public static final String SERIALIZED_NAME_NUMBER_OF_ASSIGNMENTS_AVAILABLE = "NumberOfAssignmentsAvailable";
  @SerializedName(SERIALIZED_NAME_NUMBER_OF_ASSIGNMENTS_AVAILABLE)
  private Integer numberOfAssignmentsAvailable;

  public static final String SERIALIZED_NAME_NUMBER_OF_ASSIGNMENTS_COMPLETED = "NumberOfAssignmentsCompleted";
  @SerializedName(SERIALIZED_NAME_NUMBER_OF_ASSIGNMENTS_COMPLETED)
  private Integer numberOfAssignmentsCompleted;

  public GetAssignmentResponseHIT() {
  }

  public GetAssignmentResponseHIT hiTId(String hiTId) {
    this.hiTId = hiTId;
    return this;
  }

  /**
   * Get hiTId
   * @return hiTId
   */
  @javax.annotation.Nullable
  public String getHiTId() {
    return hiTId;
  }

  public void setHiTId(String hiTId) {
    this.hiTId = hiTId;
  }


  public GetAssignmentResponseHIT hiTTypeId(String hiTTypeId) {
    this.hiTTypeId = hiTTypeId;
    return this;
  }

  /**
   * Get hiTTypeId
   * @return hiTTypeId
   */
  @javax.annotation.Nullable
  public String getHiTTypeId() {
    return hiTTypeId;
  }

  public void setHiTTypeId(String hiTTypeId) {
    this.hiTTypeId = hiTTypeId;
  }


  public GetAssignmentResponseHIT hiTGroupId(String hiTGroupId) {
    this.hiTGroupId = hiTGroupId;
    return this;
  }

  /**
   * Get hiTGroupId
   * @return hiTGroupId
   */
  @javax.annotation.Nullable
  public String getHiTGroupId() {
    return hiTGroupId;
  }

  public void setHiTGroupId(String hiTGroupId) {
    this.hiTGroupId = hiTGroupId;
  }


  public GetAssignmentResponseHIT hiTLayoutId(String hiTLayoutId) {
    this.hiTLayoutId = hiTLayoutId;
    return this;
  }

  /**
   * Get hiTLayoutId
   * @return hiTLayoutId
   */
  @javax.annotation.Nullable
  public String getHiTLayoutId() {
    return hiTLayoutId;
  }

  public void setHiTLayoutId(String hiTLayoutId) {
    this.hiTLayoutId = hiTLayoutId;
  }


  public GetAssignmentResponseHIT creationTime(OffsetDateTime creationTime) {
    this.creationTime = creationTime;
    return this;
  }

  /**
   * Get creationTime
   * @return creationTime
   */
  @javax.annotation.Nullable
  public OffsetDateTime getCreationTime() {
    return creationTime;
  }

  public void setCreationTime(OffsetDateTime creationTime) {
    this.creationTime = creationTime;
  }


  public GetAssignmentResponseHIT title(String title) {
    this.title = title;
    return this;
  }

  /**
   * Get title
   * @return title
   */
  @javax.annotation.Nullable
  public String getTitle() {
    return title;
  }

  public void setTitle(String title) {
    this.title = title;
  }


  public GetAssignmentResponseHIT description(String description) {
    this.description = description;
    return this;
  }

  /**
   * Get description
   * @return description
   */
  @javax.annotation.Nullable
  public String getDescription() {
    return description;
  }

  public void setDescription(String description) {
    this.description = description;
  }


  public GetAssignmentResponseHIT question(String question) {
    this.question = question;
    return this;
  }

  /**
   * Get question
   * @return question
   */
  @javax.annotation.Nullable
  public String getQuestion() {
    return question;
  }

  public void setQuestion(String question) {
    this.question = question;
  }


  public GetAssignmentResponseHIT keywords(String keywords) {
    this.keywords = keywords;
    return this;
  }

  /**
   * Get keywords
   * @return keywords
   */
  @javax.annotation.Nullable
  public String getKeywords() {
    return keywords;
  }

  public void setKeywords(String keywords) {
    this.keywords = keywords;
  }


  public GetAssignmentResponseHIT hiTStatus(HITStatus hiTStatus) {
    this.hiTStatus = hiTStatus;
    return this;
  }

  /**
   * Get hiTStatus
   * @return hiTStatus
   */
  @javax.annotation.Nullable
  public HITStatus getHiTStatus() {
    return hiTStatus;
  }

  public void setHiTStatus(HITStatus hiTStatus) {
    this.hiTStatus = hiTStatus;
  }


  public GetAssignmentResponseHIT maxAssignments(Integer maxAssignments) {
    this.maxAssignments = maxAssignments;
    return this;
  }

  /**
   * Get maxAssignments
   * @return maxAssignments
   */
  @javax.annotation.Nullable
  public Integer getMaxAssignments() {
    return maxAssignments;
  }

  public void setMaxAssignments(Integer maxAssignments) {
    this.maxAssignments = maxAssignments;
  }


  public GetAssignmentResponseHIT reward(String reward) {
    this.reward = reward;
    return this;
  }

  /**
   * A string representing a currency amount.
   * @return reward
   */
  @javax.annotation.Nullable
  public String getReward() {
    return reward;
  }

  public void setReward(String reward) {
    this.reward = reward;
  }


  public GetAssignmentResponseHIT autoApprovalDelayInSeconds(Integer autoApprovalDelayInSeconds) {
    this.autoApprovalDelayInSeconds = autoApprovalDelayInSeconds;
    return this;
  }

  /**
   * Get autoApprovalDelayInSeconds
   * @return autoApprovalDelayInSeconds
   */
  @javax.annotation.Nullable
  public Integer getAutoApprovalDelayInSeconds() {
    return autoApprovalDelayInSeconds;
  }

  public void setAutoApprovalDelayInSeconds(Integer autoApprovalDelayInSeconds) {
    this.autoApprovalDelayInSeconds = autoApprovalDelayInSeconds;
  }


  public GetAssignmentResponseHIT expiration(OffsetDateTime expiration) {
    this.expiration = expiration;
    return this;
  }

  /**
   * Get expiration
   * @return expiration
   */
  @javax.annotation.Nullable
  public OffsetDateTime getExpiration() {
    return expiration;
  }

  public void setExpiration(OffsetDateTime expiration) {
    this.expiration = expiration;
  }


  public GetAssignmentResponseHIT assignmentDurationInSeconds(Integer assignmentDurationInSeconds) {
    this.assignmentDurationInSeconds = assignmentDurationInSeconds;
    return this;
  }

  /**
   * Get assignmentDurationInSeconds
   * @return assignmentDurationInSeconds
   */
  @javax.annotation.Nullable
  public Integer getAssignmentDurationInSeconds() {
    return assignmentDurationInSeconds;
  }

  public void setAssignmentDurationInSeconds(Integer assignmentDurationInSeconds) {
    this.assignmentDurationInSeconds = assignmentDurationInSeconds;
  }


  public GetAssignmentResponseHIT requesterAnnotation(String requesterAnnotation) {
    this.requesterAnnotation = requesterAnnotation;
    return this;
  }

  /**
   * Get requesterAnnotation
   * @return requesterAnnotation
   */
  @javax.annotation.Nullable
  public String getRequesterAnnotation() {
    return requesterAnnotation;
  }

  public void setRequesterAnnotation(String requesterAnnotation) {
    this.requesterAnnotation = requesterAnnotation;
  }


  public GetAssignmentResponseHIT qualificationRequirements(List qualificationRequirements) {
    this.qualificationRequirements = qualificationRequirements;
    return this;
  }

  /**
   * Get qualificationRequirements
   * @return qualificationRequirements
   */
  @javax.annotation.Nullable
  public List getQualificationRequirements() {
    return qualificationRequirements;
  }

  public void setQualificationRequirements(List qualificationRequirements) {
    this.qualificationRequirements = qualificationRequirements;
  }


  public GetAssignmentResponseHIT hiTReviewStatus(HITReviewStatus hiTReviewStatus) {
    this.hiTReviewStatus = hiTReviewStatus;
    return this;
  }

  /**
   * Get hiTReviewStatus
   * @return hiTReviewStatus
   */
  @javax.annotation.Nullable
  public HITReviewStatus getHiTReviewStatus() {
    return hiTReviewStatus;
  }

  public void setHiTReviewStatus(HITReviewStatus hiTReviewStatus) {
    this.hiTReviewStatus = hiTReviewStatus;
  }


  public GetAssignmentResponseHIT numberOfAssignmentsPending(Integer numberOfAssignmentsPending) {
    this.numberOfAssignmentsPending = numberOfAssignmentsPending;
    return this;
  }

  /**
   * Get numberOfAssignmentsPending
   * @return numberOfAssignmentsPending
   */
  @javax.annotation.Nullable
  public Integer getNumberOfAssignmentsPending() {
    return numberOfAssignmentsPending;
  }

  public void setNumberOfAssignmentsPending(Integer numberOfAssignmentsPending) {
    this.numberOfAssignmentsPending = numberOfAssignmentsPending;
  }


  public GetAssignmentResponseHIT numberOfAssignmentsAvailable(Integer numberOfAssignmentsAvailable) {
    this.numberOfAssignmentsAvailable = numberOfAssignmentsAvailable;
    return this;
  }

  /**
   * Get numberOfAssignmentsAvailable
   * @return numberOfAssignmentsAvailable
   */
  @javax.annotation.Nullable
  public Integer getNumberOfAssignmentsAvailable() {
    return numberOfAssignmentsAvailable;
  }

  public void setNumberOfAssignmentsAvailable(Integer numberOfAssignmentsAvailable) {
    this.numberOfAssignmentsAvailable = numberOfAssignmentsAvailable;
  }


  public GetAssignmentResponseHIT numberOfAssignmentsCompleted(Integer numberOfAssignmentsCompleted) {
    this.numberOfAssignmentsCompleted = numberOfAssignmentsCompleted;
    return this;
  }

  /**
   * Get numberOfAssignmentsCompleted
   * @return numberOfAssignmentsCompleted
   */
  @javax.annotation.Nullable
  public Integer getNumberOfAssignmentsCompleted() {
    return numberOfAssignmentsCompleted;
  }

  public void setNumberOfAssignmentsCompleted(Integer numberOfAssignmentsCompleted) {
    this.numberOfAssignmentsCompleted = numberOfAssignmentsCompleted;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    GetAssignmentResponseHIT getAssignmentResponseHIT = (GetAssignmentResponseHIT) o;
    return Objects.equals(this.hiTId, getAssignmentResponseHIT.hiTId) &&
        Objects.equals(this.hiTTypeId, getAssignmentResponseHIT.hiTTypeId) &&
        Objects.equals(this.hiTGroupId, getAssignmentResponseHIT.hiTGroupId) &&
        Objects.equals(this.hiTLayoutId, getAssignmentResponseHIT.hiTLayoutId) &&
        Objects.equals(this.creationTime, getAssignmentResponseHIT.creationTime) &&
        Objects.equals(this.title, getAssignmentResponseHIT.title) &&
        Objects.equals(this.description, getAssignmentResponseHIT.description) &&
        Objects.equals(this.question, getAssignmentResponseHIT.question) &&
        Objects.equals(this.keywords, getAssignmentResponseHIT.keywords) &&
        Objects.equals(this.hiTStatus, getAssignmentResponseHIT.hiTStatus) &&
        Objects.equals(this.maxAssignments, getAssignmentResponseHIT.maxAssignments) &&
        Objects.equals(this.reward, getAssignmentResponseHIT.reward) &&
        Objects.equals(this.autoApprovalDelayInSeconds, getAssignmentResponseHIT.autoApprovalDelayInSeconds) &&
        Objects.equals(this.expiration, getAssignmentResponseHIT.expiration) &&
        Objects.equals(this.assignmentDurationInSeconds, getAssignmentResponseHIT.assignmentDurationInSeconds) &&
        Objects.equals(this.requesterAnnotation, getAssignmentResponseHIT.requesterAnnotation) &&
        Objects.equals(this.qualificationRequirements, getAssignmentResponseHIT.qualificationRequirements) &&
        Objects.equals(this.hiTReviewStatus, getAssignmentResponseHIT.hiTReviewStatus) &&
        Objects.equals(this.numberOfAssignmentsPending, getAssignmentResponseHIT.numberOfAssignmentsPending) &&
        Objects.equals(this.numberOfAssignmentsAvailable, getAssignmentResponseHIT.numberOfAssignmentsAvailable) &&
        Objects.equals(this.numberOfAssignmentsCompleted, getAssignmentResponseHIT.numberOfAssignmentsCompleted);
  }

  @Override
  public int hashCode() {
    return Objects.hash(hiTId, hiTTypeId, hiTGroupId, hiTLayoutId, creationTime, title, description, question, keywords, hiTStatus, maxAssignments, reward, autoApprovalDelayInSeconds, expiration, assignmentDurationInSeconds, requesterAnnotation, qualificationRequirements, hiTReviewStatus, numberOfAssignmentsPending, numberOfAssignmentsAvailable, numberOfAssignmentsCompleted);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class GetAssignmentResponseHIT {\n");
    sb.append("    hiTId: ").append(toIndentedString(hiTId)).append("\n");
    sb.append("    hiTTypeId: ").append(toIndentedString(hiTTypeId)).append("\n");
    sb.append("    hiTGroupId: ").append(toIndentedString(hiTGroupId)).append("\n");
    sb.append("    hiTLayoutId: ").append(toIndentedString(hiTLayoutId)).append("\n");
    sb.append("    creationTime: ").append(toIndentedString(creationTime)).append("\n");
    sb.append("    title: ").append(toIndentedString(title)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    question: ").append(toIndentedString(question)).append("\n");
    sb.append("    keywords: ").append(toIndentedString(keywords)).append("\n");
    sb.append("    hiTStatus: ").append(toIndentedString(hiTStatus)).append("\n");
    sb.append("    maxAssignments: ").append(toIndentedString(maxAssignments)).append("\n");
    sb.append("    reward: ").append(toIndentedString(reward)).append("\n");
    sb.append("    autoApprovalDelayInSeconds: ").append(toIndentedString(autoApprovalDelayInSeconds)).append("\n");
    sb.append("    expiration: ").append(toIndentedString(expiration)).append("\n");
    sb.append("    assignmentDurationInSeconds: ").append(toIndentedString(assignmentDurationInSeconds)).append("\n");
    sb.append("    requesterAnnotation: ").append(toIndentedString(requesterAnnotation)).append("\n");
    sb.append("    qualificationRequirements: ").append(toIndentedString(qualificationRequirements)).append("\n");
    sb.append("    hiTReviewStatus: ").append(toIndentedString(hiTReviewStatus)).append("\n");
    sb.append("    numberOfAssignmentsPending: ").append(toIndentedString(numberOfAssignmentsPending)).append("\n");
    sb.append("    numberOfAssignmentsAvailable: ").append(toIndentedString(numberOfAssignmentsAvailable)).append("\n");
    sb.append("    numberOfAssignmentsCompleted: ").append(toIndentedString(numberOfAssignmentsCompleted)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("HITId");
    openapiFields.add("HITTypeId");
    openapiFields.add("HITGroupId");
    openapiFields.add("HITLayoutId");
    openapiFields.add("CreationTime");
    openapiFields.add("Title");
    openapiFields.add("Description");
    openapiFields.add("Question");
    openapiFields.add("Keywords");
    openapiFields.add("HITStatus");
    openapiFields.add("MaxAssignments");
    openapiFields.add("Reward");
    openapiFields.add("AutoApprovalDelayInSeconds");
    openapiFields.add("Expiration");
    openapiFields.add("AssignmentDurationInSeconds");
    openapiFields.add("RequesterAnnotation");
    openapiFields.add("QualificationRequirements");
    openapiFields.add("HITReviewStatus");
    openapiFields.add("NumberOfAssignmentsPending");
    openapiFields.add("NumberOfAssignmentsAvailable");
    openapiFields.add("NumberOfAssignmentsCompleted");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to GetAssignmentResponseHIT
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!GetAssignmentResponseHIT.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in GetAssignmentResponseHIT is not found in the empty JSON string", GetAssignmentResponseHIT.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!GetAssignmentResponseHIT.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `GetAssignmentResponseHIT` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // validate the optional field `HITId`
      if (jsonObj.get("HITId") != null && !jsonObj.get("HITId").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("HITId"));
      }
      // validate the optional field `HITTypeId`
      if (jsonObj.get("HITTypeId") != null && !jsonObj.get("HITTypeId").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("HITTypeId"));
      }
      // validate the optional field `HITGroupId`
      if (jsonObj.get("HITGroupId") != null && !jsonObj.get("HITGroupId").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("HITGroupId"));
      }
      // validate the optional field `HITLayoutId`
      if (jsonObj.get("HITLayoutId") != null && !jsonObj.get("HITLayoutId").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("HITLayoutId"));
      }
      // validate the optional field `CreationTime`
      if (jsonObj.get("CreationTime") != null && !jsonObj.get("CreationTime").isJsonNull()) {
        OffsetDateTime.validateJsonElement(jsonObj.get("CreationTime"));
      }
      // validate the optional field `Title`
      if (jsonObj.get("Title") != null && !jsonObj.get("Title").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("Title"));
      }
      // validate the optional field `Description`
      if (jsonObj.get("Description") != null && !jsonObj.get("Description").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("Description"));
      }
      // validate the optional field `Question`
      if (jsonObj.get("Question") != null && !jsonObj.get("Question").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("Question"));
      }
      // validate the optional field `Keywords`
      if (jsonObj.get("Keywords") != null && !jsonObj.get("Keywords").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("Keywords"));
      }
      // validate the optional field `HITStatus`
      if (jsonObj.get("HITStatus") != null && !jsonObj.get("HITStatus").isJsonNull()) {
        HITStatus.validateJsonElement(jsonObj.get("HITStatus"));
      }
      // validate the optional field `MaxAssignments`
      if (jsonObj.get("MaxAssignments") != null && !jsonObj.get("MaxAssignments").isJsonNull()) {
        Integer.validateJsonElement(jsonObj.get("MaxAssignments"));
      }
      if ((jsonObj.get("Reward") != null && !jsonObj.get("Reward").isJsonNull()) && !jsonObj.get("Reward").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `Reward` to be a primitive type in the JSON string but got `%s`", jsonObj.get("Reward").toString()));
      }
      // validate the optional field `AutoApprovalDelayInSeconds`
      if (jsonObj.get("AutoApprovalDelayInSeconds") != null && !jsonObj.get("AutoApprovalDelayInSeconds").isJsonNull()) {
        Integer.validateJsonElement(jsonObj.get("AutoApprovalDelayInSeconds"));
      }
      // validate the optional field `Expiration`
      if (jsonObj.get("Expiration") != null && !jsonObj.get("Expiration").isJsonNull()) {
        OffsetDateTime.validateJsonElement(jsonObj.get("Expiration"));
      }
      // validate the optional field `AssignmentDurationInSeconds`
      if (jsonObj.get("AssignmentDurationInSeconds") != null && !jsonObj.get("AssignmentDurationInSeconds").isJsonNull()) {
        Integer.validateJsonElement(jsonObj.get("AssignmentDurationInSeconds"));
      }
      // validate the optional field `RequesterAnnotation`
      if (jsonObj.get("RequesterAnnotation") != null && !jsonObj.get("RequesterAnnotation").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("RequesterAnnotation"));
      }
      // validate the optional field `QualificationRequirements`
      if (jsonObj.get("QualificationRequirements") != null && !jsonObj.get("QualificationRequirements").isJsonNull()) {
        List.validateJsonElement(jsonObj.get("QualificationRequirements"));
      }
      // validate the optional field `HITReviewStatus`
      if (jsonObj.get("HITReviewStatus") != null && !jsonObj.get("HITReviewStatus").isJsonNull()) {
        HITReviewStatus.validateJsonElement(jsonObj.get("HITReviewStatus"));
      }
      // validate the optional field `NumberOfAssignmentsPending`
      if (jsonObj.get("NumberOfAssignmentsPending") != null && !jsonObj.get("NumberOfAssignmentsPending").isJsonNull()) {
        Integer.validateJsonElement(jsonObj.get("NumberOfAssignmentsPending"));
      }
      // validate the optional field `NumberOfAssignmentsAvailable`
      if (jsonObj.get("NumberOfAssignmentsAvailable") != null && !jsonObj.get("NumberOfAssignmentsAvailable").isJsonNull()) {
        Integer.validateJsonElement(jsonObj.get("NumberOfAssignmentsAvailable"));
      }
      // validate the optional field `NumberOfAssignmentsCompleted`
      if (jsonObj.get("NumberOfAssignmentsCompleted") != null && !jsonObj.get("NumberOfAssignmentsCompleted").isJsonNull()) {
        Integer.validateJsonElement(jsonObj.get("NumberOfAssignmentsCompleted"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!GetAssignmentResponseHIT.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'GetAssignmentResponseHIT' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<GetAssignmentResponseHIT> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(GetAssignmentResponseHIT.class));

       return (TypeAdapter<T>) new TypeAdapter<GetAssignmentResponseHIT>() {
           @Override
           public void write(JsonWriter out, GetAssignmentResponseHIT value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public GetAssignmentResponseHIT read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of GetAssignmentResponseHIT given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of GetAssignmentResponseHIT
   * @throws IOException if the JSON string is invalid with respect to GetAssignmentResponseHIT
   */
  public static GetAssignmentResponseHIT fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, GetAssignmentResponseHIT.class);
  }

  /**
   * Convert an instance of GetAssignmentResponseHIT to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

