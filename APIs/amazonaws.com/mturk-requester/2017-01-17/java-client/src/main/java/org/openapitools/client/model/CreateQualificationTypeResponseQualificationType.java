/*
 * Amazon Mechanical Turk
 * <fullname>Amazon Mechanical Turk API Reference</fullname>
 *
 * The version of the OpenAPI document: 2017-01-17
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.time.OffsetDateTime;
import java.util.Arrays;
import org.openapitools.client.model.QualificationTypeStatus;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * CreateQualificationTypeResponseQualificationType
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T12:12:46.282490-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class CreateQualificationTypeResponseQualificationType {
  public static final String SERIALIZED_NAME_QUALIFICATION_TYPE_ID = "QualificationTypeId";
  @SerializedName(SERIALIZED_NAME_QUALIFICATION_TYPE_ID)
  private String qualificationTypeId;

  public static final String SERIALIZED_NAME_CREATION_TIME = "CreationTime";
  @SerializedName(SERIALIZED_NAME_CREATION_TIME)
  private OffsetDateTime creationTime;

  public static final String SERIALIZED_NAME_NAME = "Name";
  @SerializedName(SERIALIZED_NAME_NAME)
  private String name;

  public static final String SERIALIZED_NAME_DESCRIPTION = "Description";
  @SerializedName(SERIALIZED_NAME_DESCRIPTION)
  private String description;

  public static final String SERIALIZED_NAME_KEYWORDS = "Keywords";
  @SerializedName(SERIALIZED_NAME_KEYWORDS)
  private String keywords;

  public static final String SERIALIZED_NAME_QUALIFICATION_TYPE_STATUS = "QualificationTypeStatus";
  @SerializedName(SERIALIZED_NAME_QUALIFICATION_TYPE_STATUS)
  private QualificationTypeStatus qualificationTypeStatus;

  public static final String SERIALIZED_NAME_TEST = "Test";
  @SerializedName(SERIALIZED_NAME_TEST)
  private String test;

  public static final String SERIALIZED_NAME_TEST_DURATION_IN_SECONDS = "TestDurationInSeconds";
  @SerializedName(SERIALIZED_NAME_TEST_DURATION_IN_SECONDS)
  private Integer testDurationInSeconds;

  public static final String SERIALIZED_NAME_ANSWER_KEY = "AnswerKey";
  @SerializedName(SERIALIZED_NAME_ANSWER_KEY)
  private String answerKey;

  public static final String SERIALIZED_NAME_RETRY_DELAY_IN_SECONDS = "RetryDelayInSeconds";
  @SerializedName(SERIALIZED_NAME_RETRY_DELAY_IN_SECONDS)
  private Integer retryDelayInSeconds;

  public static final String SERIALIZED_NAME_IS_REQUESTABLE = "IsRequestable";
  @SerializedName(SERIALIZED_NAME_IS_REQUESTABLE)
  private Boolean isRequestable;

  public static final String SERIALIZED_NAME_AUTO_GRANTED = "AutoGranted";
  @SerializedName(SERIALIZED_NAME_AUTO_GRANTED)
  private Boolean autoGranted;

  public static final String SERIALIZED_NAME_AUTO_GRANTED_VALUE = "AutoGrantedValue";
  @SerializedName(SERIALIZED_NAME_AUTO_GRANTED_VALUE)
  private Integer autoGrantedValue;

  public CreateQualificationTypeResponseQualificationType() {
  }

  public CreateQualificationTypeResponseQualificationType qualificationTypeId(String qualificationTypeId) {
    this.qualificationTypeId = qualificationTypeId;
    return this;
  }

  /**
   * Get qualificationTypeId
   * @return qualificationTypeId
   */
  @javax.annotation.Nullable
  public String getQualificationTypeId() {
    return qualificationTypeId;
  }

  public void setQualificationTypeId(String qualificationTypeId) {
    this.qualificationTypeId = qualificationTypeId;
  }


  public CreateQualificationTypeResponseQualificationType creationTime(OffsetDateTime creationTime) {
    this.creationTime = creationTime;
    return this;
  }

  /**
   * Get creationTime
   * @return creationTime
   */
  @javax.annotation.Nullable
  public OffsetDateTime getCreationTime() {
    return creationTime;
  }

  public void setCreationTime(OffsetDateTime creationTime) {
    this.creationTime = creationTime;
  }


  public CreateQualificationTypeResponseQualificationType name(String name) {
    this.name = name;
    return this;
  }

  /**
   * Get name
   * @return name
   */
  @javax.annotation.Nullable
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }


  public CreateQualificationTypeResponseQualificationType description(String description) {
    this.description = description;
    return this;
  }

  /**
   * Get description
   * @return description
   */
  @javax.annotation.Nullable
  public String getDescription() {
    return description;
  }

  public void setDescription(String description) {
    this.description = description;
  }


  public CreateQualificationTypeResponseQualificationType keywords(String keywords) {
    this.keywords = keywords;
    return this;
  }

  /**
   * Get keywords
   * @return keywords
   */
  @javax.annotation.Nullable
  public String getKeywords() {
    return keywords;
  }

  public void setKeywords(String keywords) {
    this.keywords = keywords;
  }


  public CreateQualificationTypeResponseQualificationType qualificationTypeStatus(QualificationTypeStatus qualificationTypeStatus) {
    this.qualificationTypeStatus = qualificationTypeStatus;
    return this;
  }

  /**
   * Get qualificationTypeStatus
   * @return qualificationTypeStatus
   */
  @javax.annotation.Nullable
  public QualificationTypeStatus getQualificationTypeStatus() {
    return qualificationTypeStatus;
  }

  public void setQualificationTypeStatus(QualificationTypeStatus qualificationTypeStatus) {
    this.qualificationTypeStatus = qualificationTypeStatus;
  }


  public CreateQualificationTypeResponseQualificationType test(String test) {
    this.test = test;
    return this;
  }

  /**
   * Get test
   * @return test
   */
  @javax.annotation.Nullable
  public String getTest() {
    return test;
  }

  public void setTest(String test) {
    this.test = test;
  }


  public CreateQualificationTypeResponseQualificationType testDurationInSeconds(Integer testDurationInSeconds) {
    this.testDurationInSeconds = testDurationInSeconds;
    return this;
  }

  /**
   * Get testDurationInSeconds
   * @return testDurationInSeconds
   */
  @javax.annotation.Nullable
  public Integer getTestDurationInSeconds() {
    return testDurationInSeconds;
  }

  public void setTestDurationInSeconds(Integer testDurationInSeconds) {
    this.testDurationInSeconds = testDurationInSeconds;
  }


  public CreateQualificationTypeResponseQualificationType answerKey(String answerKey) {
    this.answerKey = answerKey;
    return this;
  }

  /**
   * Get answerKey
   * @return answerKey
   */
  @javax.annotation.Nullable
  public String getAnswerKey() {
    return answerKey;
  }

  public void setAnswerKey(String answerKey) {
    this.answerKey = answerKey;
  }


  public CreateQualificationTypeResponseQualificationType retryDelayInSeconds(Integer retryDelayInSeconds) {
    this.retryDelayInSeconds = retryDelayInSeconds;
    return this;
  }

  /**
   * Get retryDelayInSeconds
   * @return retryDelayInSeconds
   */
  @javax.annotation.Nullable
  public Integer getRetryDelayInSeconds() {
    return retryDelayInSeconds;
  }

  public void setRetryDelayInSeconds(Integer retryDelayInSeconds) {
    this.retryDelayInSeconds = retryDelayInSeconds;
  }


  public CreateQualificationTypeResponseQualificationType isRequestable(Boolean isRequestable) {
    this.isRequestable = isRequestable;
    return this;
  }

  /**
   * Get isRequestable
   * @return isRequestable
   */
  @javax.annotation.Nullable
  public Boolean getIsRequestable() {
    return isRequestable;
  }

  public void setIsRequestable(Boolean isRequestable) {
    this.isRequestable = isRequestable;
  }


  public CreateQualificationTypeResponseQualificationType autoGranted(Boolean autoGranted) {
    this.autoGranted = autoGranted;
    return this;
  }

  /**
   * Get autoGranted
   * @return autoGranted
   */
  @javax.annotation.Nullable
  public Boolean getAutoGranted() {
    return autoGranted;
  }

  public void setAutoGranted(Boolean autoGranted) {
    this.autoGranted = autoGranted;
  }


  public CreateQualificationTypeResponseQualificationType autoGrantedValue(Integer autoGrantedValue) {
    this.autoGrantedValue = autoGrantedValue;
    return this;
  }

  /**
   * Get autoGrantedValue
   * @return autoGrantedValue
   */
  @javax.annotation.Nullable
  public Integer getAutoGrantedValue() {
    return autoGrantedValue;
  }

  public void setAutoGrantedValue(Integer autoGrantedValue) {
    this.autoGrantedValue = autoGrantedValue;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CreateQualificationTypeResponseQualificationType createQualificationTypeResponseQualificationType = (CreateQualificationTypeResponseQualificationType) o;
    return Objects.equals(this.qualificationTypeId, createQualificationTypeResponseQualificationType.qualificationTypeId) &&
        Objects.equals(this.creationTime, createQualificationTypeResponseQualificationType.creationTime) &&
        Objects.equals(this.name, createQualificationTypeResponseQualificationType.name) &&
        Objects.equals(this.description, createQualificationTypeResponseQualificationType.description) &&
        Objects.equals(this.keywords, createQualificationTypeResponseQualificationType.keywords) &&
        Objects.equals(this.qualificationTypeStatus, createQualificationTypeResponseQualificationType.qualificationTypeStatus) &&
        Objects.equals(this.test, createQualificationTypeResponseQualificationType.test) &&
        Objects.equals(this.testDurationInSeconds, createQualificationTypeResponseQualificationType.testDurationInSeconds) &&
        Objects.equals(this.answerKey, createQualificationTypeResponseQualificationType.answerKey) &&
        Objects.equals(this.retryDelayInSeconds, createQualificationTypeResponseQualificationType.retryDelayInSeconds) &&
        Objects.equals(this.isRequestable, createQualificationTypeResponseQualificationType.isRequestable) &&
        Objects.equals(this.autoGranted, createQualificationTypeResponseQualificationType.autoGranted) &&
        Objects.equals(this.autoGrantedValue, createQualificationTypeResponseQualificationType.autoGrantedValue);
  }

  @Override
  public int hashCode() {
    return Objects.hash(qualificationTypeId, creationTime, name, description, keywords, qualificationTypeStatus, test, testDurationInSeconds, answerKey, retryDelayInSeconds, isRequestable, autoGranted, autoGrantedValue);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CreateQualificationTypeResponseQualificationType {\n");
    sb.append("    qualificationTypeId: ").append(toIndentedString(qualificationTypeId)).append("\n");
    sb.append("    creationTime: ").append(toIndentedString(creationTime)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    keywords: ").append(toIndentedString(keywords)).append("\n");
    sb.append("    qualificationTypeStatus: ").append(toIndentedString(qualificationTypeStatus)).append("\n");
    sb.append("    test: ").append(toIndentedString(test)).append("\n");
    sb.append("    testDurationInSeconds: ").append(toIndentedString(testDurationInSeconds)).append("\n");
    sb.append("    answerKey: ").append(toIndentedString(answerKey)).append("\n");
    sb.append("    retryDelayInSeconds: ").append(toIndentedString(retryDelayInSeconds)).append("\n");
    sb.append("    isRequestable: ").append(toIndentedString(isRequestable)).append("\n");
    sb.append("    autoGranted: ").append(toIndentedString(autoGranted)).append("\n");
    sb.append("    autoGrantedValue: ").append(toIndentedString(autoGrantedValue)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("QualificationTypeId");
    openapiFields.add("CreationTime");
    openapiFields.add("Name");
    openapiFields.add("Description");
    openapiFields.add("Keywords");
    openapiFields.add("QualificationTypeStatus");
    openapiFields.add("Test");
    openapiFields.add("TestDurationInSeconds");
    openapiFields.add("AnswerKey");
    openapiFields.add("RetryDelayInSeconds");
    openapiFields.add("IsRequestable");
    openapiFields.add("AutoGranted");
    openapiFields.add("AutoGrantedValue");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to CreateQualificationTypeResponseQualificationType
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!CreateQualificationTypeResponseQualificationType.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in CreateQualificationTypeResponseQualificationType is not found in the empty JSON string", CreateQualificationTypeResponseQualificationType.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!CreateQualificationTypeResponseQualificationType.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `CreateQualificationTypeResponseQualificationType` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // validate the optional field `QualificationTypeId`
      if (jsonObj.get("QualificationTypeId") != null && !jsonObj.get("QualificationTypeId").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("QualificationTypeId"));
      }
      // validate the optional field `CreationTime`
      if (jsonObj.get("CreationTime") != null && !jsonObj.get("CreationTime").isJsonNull()) {
        OffsetDateTime.validateJsonElement(jsonObj.get("CreationTime"));
      }
      // validate the optional field `Name`
      if (jsonObj.get("Name") != null && !jsonObj.get("Name").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("Name"));
      }
      // validate the optional field `Description`
      if (jsonObj.get("Description") != null && !jsonObj.get("Description").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("Description"));
      }
      // validate the optional field `Keywords`
      if (jsonObj.get("Keywords") != null && !jsonObj.get("Keywords").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("Keywords"));
      }
      // validate the optional field `QualificationTypeStatus`
      if (jsonObj.get("QualificationTypeStatus") != null && !jsonObj.get("QualificationTypeStatus").isJsonNull()) {
        QualificationTypeStatus.validateJsonElement(jsonObj.get("QualificationTypeStatus"));
      }
      // validate the optional field `Test`
      if (jsonObj.get("Test") != null && !jsonObj.get("Test").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("Test"));
      }
      // validate the optional field `TestDurationInSeconds`
      if (jsonObj.get("TestDurationInSeconds") != null && !jsonObj.get("TestDurationInSeconds").isJsonNull()) {
        Integer.validateJsonElement(jsonObj.get("TestDurationInSeconds"));
      }
      // validate the optional field `AnswerKey`
      if (jsonObj.get("AnswerKey") != null && !jsonObj.get("AnswerKey").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("AnswerKey"));
      }
      // validate the optional field `RetryDelayInSeconds`
      if (jsonObj.get("RetryDelayInSeconds") != null && !jsonObj.get("RetryDelayInSeconds").isJsonNull()) {
        Integer.validateJsonElement(jsonObj.get("RetryDelayInSeconds"));
      }
      // validate the optional field `IsRequestable`
      if (jsonObj.get("IsRequestable") != null && !jsonObj.get("IsRequestable").isJsonNull()) {
        Boolean.validateJsonElement(jsonObj.get("IsRequestable"));
      }
      // validate the optional field `AutoGranted`
      if (jsonObj.get("AutoGranted") != null && !jsonObj.get("AutoGranted").isJsonNull()) {
        Boolean.validateJsonElement(jsonObj.get("AutoGranted"));
      }
      // validate the optional field `AutoGrantedValue`
      if (jsonObj.get("AutoGrantedValue") != null && !jsonObj.get("AutoGrantedValue").isJsonNull()) {
        Integer.validateJsonElement(jsonObj.get("AutoGrantedValue"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!CreateQualificationTypeResponseQualificationType.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'CreateQualificationTypeResponseQualificationType' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<CreateQualificationTypeResponseQualificationType> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(CreateQualificationTypeResponseQualificationType.class));

       return (TypeAdapter<T>) new TypeAdapter<CreateQualificationTypeResponseQualificationType>() {
           @Override
           public void write(JsonWriter out, CreateQualificationTypeResponseQualificationType value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public CreateQualificationTypeResponseQualificationType read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of CreateQualificationTypeResponseQualificationType given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of CreateQualificationTypeResponseQualificationType
   * @throws IOException if the JSON string is invalid with respect to CreateQualificationTypeResponseQualificationType
   */
  public static CreateQualificationTypeResponseQualificationType fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, CreateQualificationTypeResponseQualificationType.class);
  }

  /**
   * Convert an instance of CreateQualificationTypeResponseQualificationType to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

