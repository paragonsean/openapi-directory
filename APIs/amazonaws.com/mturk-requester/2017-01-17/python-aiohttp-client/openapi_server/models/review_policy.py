# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class ReviewPolicy(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, policy_name: str=None, parameters: List=None):
        """ReviewPolicy - a model defined in OpenAPI

        :param policy_name: The policy_name of this ReviewPolicy.
        :param parameters: The parameters of this ReviewPolicy.
        """
        self.openapi_types = {
            'policy_name': str,
            'parameters': List
        }

        self.attribute_map = {
            'policy_name': 'PolicyName',
            'parameters': 'Parameters'
        }

        self._policy_name = policy_name
        self._parameters = parameters

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ReviewPolicy':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ReviewPolicy of this ReviewPolicy.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def policy_name(self):
        """Gets the policy_name of this ReviewPolicy.


        :return: The policy_name of this ReviewPolicy.
        :rtype: str
        """
        return self._policy_name

    @policy_name.setter
    def policy_name(self, policy_name):
        """Sets the policy_name of this ReviewPolicy.


        :param policy_name: The policy_name of this ReviewPolicy.
        :type policy_name: str
        """
        if policy_name is None:
            raise ValueError("Invalid value for `policy_name`, must not be `None`")

        self._policy_name = policy_name

    @property
    def parameters(self):
        """Gets the parameters of this ReviewPolicy.


        :return: The parameters of this ReviewPolicy.
        :rtype: List
        """
        return self._parameters

    @parameters.setter
    def parameters(self, parameters):
        """Sets the parameters of this ReviewPolicy.


        :param parameters: The parameters of this ReviewPolicy.
        :type parameters: List
        """

        self._parameters = parameters
