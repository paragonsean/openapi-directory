# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class EventType(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    """
    allowed enum values
    """
    ASSIGNMENTACCEPTED = 'AssignmentAccepted'
    ASSIGNMENTABANDONED = 'AssignmentAbandoned'
    ASSIGNMENTRETURNED = 'AssignmentReturned'
    ASSIGNMENTSUBMITTED = 'AssignmentSubmitted'
    ASSIGNMENTREJECTED = 'AssignmentRejected'
    ASSIGNMENTAPPROVED = 'AssignmentApproved'
    HITCREATED = 'HITCreated'
    HITEXPIRED = 'HITExpired'
    HITREVIEWABLE = 'HITReviewable'
    HITEXTENDED = 'HITExtended'
    HITDISPOSED = 'HITDisposed'
    PING = 'Ping'

    def __init__(self):
        """EventType - a model defined in OpenAPI

        """
        self.openapi_types = {
        }

        self.attribute_map = {
        }

    @classmethod
    def from_dict(cls, dikt: dict) -> 'EventType':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The EventType of this EventType.
        """
        return util.deserialize_model(dikt, cls)
