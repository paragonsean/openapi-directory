# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class CreateHITTypeRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, auto_approval_delay_in_seconds: int=None, assignment_duration_in_seconds: int=None, reward: str=None, title: str=None, keywords: str=None, description: str=None, qualification_requirements: List=None):
        """CreateHITTypeRequest - a model defined in OpenAPI

        :param auto_approval_delay_in_seconds: The auto_approval_delay_in_seconds of this CreateHITTypeRequest.
        :param assignment_duration_in_seconds: The assignment_duration_in_seconds of this CreateHITTypeRequest.
        :param reward: The reward of this CreateHITTypeRequest.
        :param title: The title of this CreateHITTypeRequest.
        :param keywords: The keywords of this CreateHITTypeRequest.
        :param description: The description of this CreateHITTypeRequest.
        :param qualification_requirements: The qualification_requirements of this CreateHITTypeRequest.
        """
        self.openapi_types = {
            'auto_approval_delay_in_seconds': int,
            'assignment_duration_in_seconds': int,
            'reward': str,
            'title': str,
            'keywords': str,
            'description': str,
            'qualification_requirements': List
        }

        self.attribute_map = {
            'auto_approval_delay_in_seconds': 'AutoApprovalDelayInSeconds',
            'assignment_duration_in_seconds': 'AssignmentDurationInSeconds',
            'reward': 'Reward',
            'title': 'Title',
            'keywords': 'Keywords',
            'description': 'Description',
            'qualification_requirements': 'QualificationRequirements'
        }

        self._auto_approval_delay_in_seconds = auto_approval_delay_in_seconds
        self._assignment_duration_in_seconds = assignment_duration_in_seconds
        self._reward = reward
        self._title = title
        self._keywords = keywords
        self._description = description
        self._qualification_requirements = qualification_requirements

    @classmethod
    def from_dict(cls, dikt: dict) -> 'CreateHITTypeRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The CreateHITTypeRequest of this CreateHITTypeRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def auto_approval_delay_in_seconds(self):
        """Gets the auto_approval_delay_in_seconds of this CreateHITTypeRequest.


        :return: The auto_approval_delay_in_seconds of this CreateHITTypeRequest.
        :rtype: int
        """
        return self._auto_approval_delay_in_seconds

    @auto_approval_delay_in_seconds.setter
    def auto_approval_delay_in_seconds(self, auto_approval_delay_in_seconds):
        """Sets the auto_approval_delay_in_seconds of this CreateHITTypeRequest.


        :param auto_approval_delay_in_seconds: The auto_approval_delay_in_seconds of this CreateHITTypeRequest.
        :type auto_approval_delay_in_seconds: int
        """

        self._auto_approval_delay_in_seconds = auto_approval_delay_in_seconds

    @property
    def assignment_duration_in_seconds(self):
        """Gets the assignment_duration_in_seconds of this CreateHITTypeRequest.


        :return: The assignment_duration_in_seconds of this CreateHITTypeRequest.
        :rtype: int
        """
        return self._assignment_duration_in_seconds

    @assignment_duration_in_seconds.setter
    def assignment_duration_in_seconds(self, assignment_duration_in_seconds):
        """Sets the assignment_duration_in_seconds of this CreateHITTypeRequest.


        :param assignment_duration_in_seconds: The assignment_duration_in_seconds of this CreateHITTypeRequest.
        :type assignment_duration_in_seconds: int
        """
        if assignment_duration_in_seconds is None:
            raise ValueError("Invalid value for `assignment_duration_in_seconds`, must not be `None`")

        self._assignment_duration_in_seconds = assignment_duration_in_seconds

    @property
    def reward(self):
        """Gets the reward of this CreateHITTypeRequest.


        :return: The reward of this CreateHITTypeRequest.
        :rtype: str
        """
        return self._reward

    @reward.setter
    def reward(self, reward):
        """Sets the reward of this CreateHITTypeRequest.


        :param reward: The reward of this CreateHITTypeRequest.
        :type reward: str
        """
        if reward is None:
            raise ValueError("Invalid value for `reward`, must not be `None`")

        self._reward = reward

    @property
    def title(self):
        """Gets the title of this CreateHITTypeRequest.


        :return: The title of this CreateHITTypeRequest.
        :rtype: str
        """
        return self._title

    @title.setter
    def title(self, title):
        """Sets the title of this CreateHITTypeRequest.


        :param title: The title of this CreateHITTypeRequest.
        :type title: str
        """
        if title is None:
            raise ValueError("Invalid value for `title`, must not be `None`")

        self._title = title

    @property
    def keywords(self):
        """Gets the keywords of this CreateHITTypeRequest.


        :return: The keywords of this CreateHITTypeRequest.
        :rtype: str
        """
        return self._keywords

    @keywords.setter
    def keywords(self, keywords):
        """Sets the keywords of this CreateHITTypeRequest.


        :param keywords: The keywords of this CreateHITTypeRequest.
        :type keywords: str
        """

        self._keywords = keywords

    @property
    def description(self):
        """Gets the description of this CreateHITTypeRequest.


        :return: The description of this CreateHITTypeRequest.
        :rtype: str
        """
        return self._description

    @description.setter
    def description(self, description):
        """Sets the description of this CreateHITTypeRequest.


        :param description: The description of this CreateHITTypeRequest.
        :type description: str
        """
        if description is None:
            raise ValueError("Invalid value for `description`, must not be `None`")

        self._description = description

    @property
    def qualification_requirements(self):
        """Gets the qualification_requirements of this CreateHITTypeRequest.


        :return: The qualification_requirements of this CreateHITTypeRequest.
        :rtype: List
        """
        return self._qualification_requirements

    @qualification_requirements.setter
    def qualification_requirements(self, qualification_requirements):
        """Sets the qualification_requirements of this CreateHITTypeRequest.


        :param qualification_requirements: The qualification_requirements of this CreateHITTypeRequest.
        :type qualification_requirements: List
        """

        self._qualification_requirements = qualification_requirements
