# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.qualification_type_status import QualificationTypeStatus
from openapi_server import util


class CreateQualificationTypeRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, name: str=None, keywords: str=None, description: str=None, qualification_type_status: QualificationTypeStatus=None, retry_delay_in_seconds: int=None, test: str=None, answer_key: str=None, test_duration_in_seconds: int=None, auto_granted: bool=None, auto_granted_value: int=None):
        """CreateQualificationTypeRequest - a model defined in OpenAPI

        :param name: The name of this CreateQualificationTypeRequest.
        :param keywords: The keywords of this CreateQualificationTypeRequest.
        :param description: The description of this CreateQualificationTypeRequest.
        :param qualification_type_status: The qualification_type_status of this CreateQualificationTypeRequest.
        :param retry_delay_in_seconds: The retry_delay_in_seconds of this CreateQualificationTypeRequest.
        :param test: The test of this CreateQualificationTypeRequest.
        :param answer_key: The answer_key of this CreateQualificationTypeRequest.
        :param test_duration_in_seconds: The test_duration_in_seconds of this CreateQualificationTypeRequest.
        :param auto_granted: The auto_granted of this CreateQualificationTypeRequest.
        :param auto_granted_value: The auto_granted_value of this CreateQualificationTypeRequest.
        """
        self.openapi_types = {
            'name': str,
            'keywords': str,
            'description': str,
            'qualification_type_status': QualificationTypeStatus,
            'retry_delay_in_seconds': int,
            'test': str,
            'answer_key': str,
            'test_duration_in_seconds': int,
            'auto_granted': bool,
            'auto_granted_value': int
        }

        self.attribute_map = {
            'name': 'Name',
            'keywords': 'Keywords',
            'description': 'Description',
            'qualification_type_status': 'QualificationTypeStatus',
            'retry_delay_in_seconds': 'RetryDelayInSeconds',
            'test': 'Test',
            'answer_key': 'AnswerKey',
            'test_duration_in_seconds': 'TestDurationInSeconds',
            'auto_granted': 'AutoGranted',
            'auto_granted_value': 'AutoGrantedValue'
        }

        self._name = name
        self._keywords = keywords
        self._description = description
        self._qualification_type_status = qualification_type_status
        self._retry_delay_in_seconds = retry_delay_in_seconds
        self._test = test
        self._answer_key = answer_key
        self._test_duration_in_seconds = test_duration_in_seconds
        self._auto_granted = auto_granted
        self._auto_granted_value = auto_granted_value

    @classmethod
    def from_dict(cls, dikt: dict) -> 'CreateQualificationTypeRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The CreateQualificationTypeRequest of this CreateQualificationTypeRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def name(self):
        """Gets the name of this CreateQualificationTypeRequest.


        :return: The name of this CreateQualificationTypeRequest.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this CreateQualificationTypeRequest.


        :param name: The name of this CreateQualificationTypeRequest.
        :type name: str
        """
        if name is None:
            raise ValueError("Invalid value for `name`, must not be `None`")

        self._name = name

    @property
    def keywords(self):
        """Gets the keywords of this CreateQualificationTypeRequest.


        :return: The keywords of this CreateQualificationTypeRequest.
        :rtype: str
        """
        return self._keywords

    @keywords.setter
    def keywords(self, keywords):
        """Sets the keywords of this CreateQualificationTypeRequest.


        :param keywords: The keywords of this CreateQualificationTypeRequest.
        :type keywords: str
        """

        self._keywords = keywords

    @property
    def description(self):
        """Gets the description of this CreateQualificationTypeRequest.


        :return: The description of this CreateQualificationTypeRequest.
        :rtype: str
        """
        return self._description

    @description.setter
    def description(self, description):
        """Sets the description of this CreateQualificationTypeRequest.


        :param description: The description of this CreateQualificationTypeRequest.
        :type description: str
        """
        if description is None:
            raise ValueError("Invalid value for `description`, must not be `None`")

        self._description = description

    @property
    def qualification_type_status(self):
        """Gets the qualification_type_status of this CreateQualificationTypeRequest.


        :return: The qualification_type_status of this CreateQualificationTypeRequest.
        :rtype: QualificationTypeStatus
        """
        return self._qualification_type_status

    @qualification_type_status.setter
    def qualification_type_status(self, qualification_type_status):
        """Sets the qualification_type_status of this CreateQualificationTypeRequest.


        :param qualification_type_status: The qualification_type_status of this CreateQualificationTypeRequest.
        :type qualification_type_status: QualificationTypeStatus
        """
        if qualification_type_status is None:
            raise ValueError("Invalid value for `qualification_type_status`, must not be `None`")

        self._qualification_type_status = qualification_type_status

    @property
    def retry_delay_in_seconds(self):
        """Gets the retry_delay_in_seconds of this CreateQualificationTypeRequest.


        :return: The retry_delay_in_seconds of this CreateQualificationTypeRequest.
        :rtype: int
        """
        return self._retry_delay_in_seconds

    @retry_delay_in_seconds.setter
    def retry_delay_in_seconds(self, retry_delay_in_seconds):
        """Sets the retry_delay_in_seconds of this CreateQualificationTypeRequest.


        :param retry_delay_in_seconds: The retry_delay_in_seconds of this CreateQualificationTypeRequest.
        :type retry_delay_in_seconds: int
        """

        self._retry_delay_in_seconds = retry_delay_in_seconds

    @property
    def test(self):
        """Gets the test of this CreateQualificationTypeRequest.


        :return: The test of this CreateQualificationTypeRequest.
        :rtype: str
        """
        return self._test

    @test.setter
    def test(self, test):
        """Sets the test of this CreateQualificationTypeRequest.


        :param test: The test of this CreateQualificationTypeRequest.
        :type test: str
        """

        self._test = test

    @property
    def answer_key(self):
        """Gets the answer_key of this CreateQualificationTypeRequest.


        :return: The answer_key of this CreateQualificationTypeRequest.
        :rtype: str
        """
        return self._answer_key

    @answer_key.setter
    def answer_key(self, answer_key):
        """Sets the answer_key of this CreateQualificationTypeRequest.


        :param answer_key: The answer_key of this CreateQualificationTypeRequest.
        :type answer_key: str
        """

        self._answer_key = answer_key

    @property
    def test_duration_in_seconds(self):
        """Gets the test_duration_in_seconds of this CreateQualificationTypeRequest.


        :return: The test_duration_in_seconds of this CreateQualificationTypeRequest.
        :rtype: int
        """
        return self._test_duration_in_seconds

    @test_duration_in_seconds.setter
    def test_duration_in_seconds(self, test_duration_in_seconds):
        """Sets the test_duration_in_seconds of this CreateQualificationTypeRequest.


        :param test_duration_in_seconds: The test_duration_in_seconds of this CreateQualificationTypeRequest.
        :type test_duration_in_seconds: int
        """

        self._test_duration_in_seconds = test_duration_in_seconds

    @property
    def auto_granted(self):
        """Gets the auto_granted of this CreateQualificationTypeRequest.


        :return: The auto_granted of this CreateQualificationTypeRequest.
        :rtype: bool
        """
        return self._auto_granted

    @auto_granted.setter
    def auto_granted(self, auto_granted):
        """Sets the auto_granted of this CreateQualificationTypeRequest.


        :param auto_granted: The auto_granted of this CreateQualificationTypeRequest.
        :type auto_granted: bool
        """

        self._auto_granted = auto_granted

    @property
    def auto_granted_value(self):
        """Gets the auto_granted_value of this CreateQualificationTypeRequest.


        :return: The auto_granted_value of this CreateQualificationTypeRequest.
        :rtype: int
        """
        return self._auto_granted_value

    @auto_granted_value.setter
    def auto_granted_value(self, auto_granted_value):
        """Sets the auto_granted_value of this CreateQualificationTypeRequest.


        :param auto_granted_value: The auto_granted_value of this CreateQualificationTypeRequest.
        :type auto_granted_value: int
        """

        self._auto_granted_value = auto_granted_value
