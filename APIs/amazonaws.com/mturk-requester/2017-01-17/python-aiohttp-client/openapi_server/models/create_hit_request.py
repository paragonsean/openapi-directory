# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.create_hit_request_assignment_review_policy import CreateHITRequestAssignmentReviewPolicy
from openapi_server.models.create_hit_request_hit_review_policy import CreateHITRequestHITReviewPolicy
from openapi_server import util


class CreateHITRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, max_assignments: int=None, auto_approval_delay_in_seconds: int=None, lifetime_in_seconds: int=None, assignment_duration_in_seconds: int=None, reward: str=None, title: str=None, keywords: str=None, description: str=None, question: str=None, requester_annotation: str=None, qualification_requirements: List=None, unique_request_token: str=None, assignment_review_policy: CreateHITRequestAssignmentReviewPolicy=None, hit_review_policy: CreateHITRequestHITReviewPolicy=None, hit_layout_id: str=None, hit_layout_parameters: List=None):
        """CreateHITRequest - a model defined in OpenAPI

        :param max_assignments: The max_assignments of this CreateHITRequest.
        :param auto_approval_delay_in_seconds: The auto_approval_delay_in_seconds of this CreateHITRequest.
        :param lifetime_in_seconds: The lifetime_in_seconds of this CreateHITRequest.
        :param assignment_duration_in_seconds: The assignment_duration_in_seconds of this CreateHITRequest.
        :param reward: The reward of this CreateHITRequest.
        :param title: The title of this CreateHITRequest.
        :param keywords: The keywords of this CreateHITRequest.
        :param description: The description of this CreateHITRequest.
        :param question: The question of this CreateHITRequest.
        :param requester_annotation: The requester_annotation of this CreateHITRequest.
        :param qualification_requirements: The qualification_requirements of this CreateHITRequest.
        :param unique_request_token: The unique_request_token of this CreateHITRequest.
        :param assignment_review_policy: The assignment_review_policy of this CreateHITRequest.
        :param hit_review_policy: The hit_review_policy of this CreateHITRequest.
        :param hit_layout_id: The hit_layout_id of this CreateHITRequest.
        :param hit_layout_parameters: The hit_layout_parameters of this CreateHITRequest.
        """
        self.openapi_types = {
            'max_assignments': int,
            'auto_approval_delay_in_seconds': int,
            'lifetime_in_seconds': int,
            'assignment_duration_in_seconds': int,
            'reward': str,
            'title': str,
            'keywords': str,
            'description': str,
            'question': str,
            'requester_annotation': str,
            'qualification_requirements': List,
            'unique_request_token': str,
            'assignment_review_policy': CreateHITRequestAssignmentReviewPolicy,
            'hit_review_policy': CreateHITRequestHITReviewPolicy,
            'hit_layout_id': str,
            'hit_layout_parameters': List
        }

        self.attribute_map = {
            'max_assignments': 'MaxAssignments',
            'auto_approval_delay_in_seconds': 'AutoApprovalDelayInSeconds',
            'lifetime_in_seconds': 'LifetimeInSeconds',
            'assignment_duration_in_seconds': 'AssignmentDurationInSeconds',
            'reward': 'Reward',
            'title': 'Title',
            'keywords': 'Keywords',
            'description': 'Description',
            'question': 'Question',
            'requester_annotation': 'RequesterAnnotation',
            'qualification_requirements': 'QualificationRequirements',
            'unique_request_token': 'UniqueRequestToken',
            'assignment_review_policy': 'AssignmentReviewPolicy',
            'hit_review_policy': 'HITReviewPolicy',
            'hit_layout_id': 'HITLayoutId',
            'hit_layout_parameters': 'HITLayoutParameters'
        }

        self._max_assignments = max_assignments
        self._auto_approval_delay_in_seconds = auto_approval_delay_in_seconds
        self._lifetime_in_seconds = lifetime_in_seconds
        self._assignment_duration_in_seconds = assignment_duration_in_seconds
        self._reward = reward
        self._title = title
        self._keywords = keywords
        self._description = description
        self._question = question
        self._requester_annotation = requester_annotation
        self._qualification_requirements = qualification_requirements
        self._unique_request_token = unique_request_token
        self._assignment_review_policy = assignment_review_policy
        self._hit_review_policy = hit_review_policy
        self._hit_layout_id = hit_layout_id
        self._hit_layout_parameters = hit_layout_parameters

    @classmethod
    def from_dict(cls, dikt: dict) -> 'CreateHITRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The CreateHITRequest of this CreateHITRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def max_assignments(self):
        """Gets the max_assignments of this CreateHITRequest.


        :return: The max_assignments of this CreateHITRequest.
        :rtype: int
        """
        return self._max_assignments

    @max_assignments.setter
    def max_assignments(self, max_assignments):
        """Sets the max_assignments of this CreateHITRequest.


        :param max_assignments: The max_assignments of this CreateHITRequest.
        :type max_assignments: int
        """

        self._max_assignments = max_assignments

    @property
    def auto_approval_delay_in_seconds(self):
        """Gets the auto_approval_delay_in_seconds of this CreateHITRequest.


        :return: The auto_approval_delay_in_seconds of this CreateHITRequest.
        :rtype: int
        """
        return self._auto_approval_delay_in_seconds

    @auto_approval_delay_in_seconds.setter
    def auto_approval_delay_in_seconds(self, auto_approval_delay_in_seconds):
        """Sets the auto_approval_delay_in_seconds of this CreateHITRequest.


        :param auto_approval_delay_in_seconds: The auto_approval_delay_in_seconds of this CreateHITRequest.
        :type auto_approval_delay_in_seconds: int
        """

        self._auto_approval_delay_in_seconds = auto_approval_delay_in_seconds

    @property
    def lifetime_in_seconds(self):
        """Gets the lifetime_in_seconds of this CreateHITRequest.


        :return: The lifetime_in_seconds of this CreateHITRequest.
        :rtype: int
        """
        return self._lifetime_in_seconds

    @lifetime_in_seconds.setter
    def lifetime_in_seconds(self, lifetime_in_seconds):
        """Sets the lifetime_in_seconds of this CreateHITRequest.


        :param lifetime_in_seconds: The lifetime_in_seconds of this CreateHITRequest.
        :type lifetime_in_seconds: int
        """
        if lifetime_in_seconds is None:
            raise ValueError("Invalid value for `lifetime_in_seconds`, must not be `None`")

        self._lifetime_in_seconds = lifetime_in_seconds

    @property
    def assignment_duration_in_seconds(self):
        """Gets the assignment_duration_in_seconds of this CreateHITRequest.


        :return: The assignment_duration_in_seconds of this CreateHITRequest.
        :rtype: int
        """
        return self._assignment_duration_in_seconds

    @assignment_duration_in_seconds.setter
    def assignment_duration_in_seconds(self, assignment_duration_in_seconds):
        """Sets the assignment_duration_in_seconds of this CreateHITRequest.


        :param assignment_duration_in_seconds: The assignment_duration_in_seconds of this CreateHITRequest.
        :type assignment_duration_in_seconds: int
        """
        if assignment_duration_in_seconds is None:
            raise ValueError("Invalid value for `assignment_duration_in_seconds`, must not be `None`")

        self._assignment_duration_in_seconds = assignment_duration_in_seconds

    @property
    def reward(self):
        """Gets the reward of this CreateHITRequest.


        :return: The reward of this CreateHITRequest.
        :rtype: str
        """
        return self._reward

    @reward.setter
    def reward(self, reward):
        """Sets the reward of this CreateHITRequest.


        :param reward: The reward of this CreateHITRequest.
        :type reward: str
        """
        if reward is None:
            raise ValueError("Invalid value for `reward`, must not be `None`")

        self._reward = reward

    @property
    def title(self):
        """Gets the title of this CreateHITRequest.


        :return: The title of this CreateHITRequest.
        :rtype: str
        """
        return self._title

    @title.setter
    def title(self, title):
        """Sets the title of this CreateHITRequest.


        :param title: The title of this CreateHITRequest.
        :type title: str
        """
        if title is None:
            raise ValueError("Invalid value for `title`, must not be `None`")

        self._title = title

    @property
    def keywords(self):
        """Gets the keywords of this CreateHITRequest.


        :return: The keywords of this CreateHITRequest.
        :rtype: str
        """
        return self._keywords

    @keywords.setter
    def keywords(self, keywords):
        """Sets the keywords of this CreateHITRequest.


        :param keywords: The keywords of this CreateHITRequest.
        :type keywords: str
        """

        self._keywords = keywords

    @property
    def description(self):
        """Gets the description of this CreateHITRequest.


        :return: The description of this CreateHITRequest.
        :rtype: str
        """
        return self._description

    @description.setter
    def description(self, description):
        """Sets the description of this CreateHITRequest.


        :param description: The description of this CreateHITRequest.
        :type description: str
        """
        if description is None:
            raise ValueError("Invalid value for `description`, must not be `None`")

        self._description = description

    @property
    def question(self):
        """Gets the question of this CreateHITRequest.


        :return: The question of this CreateHITRequest.
        :rtype: str
        """
        return self._question

    @question.setter
    def question(self, question):
        """Sets the question of this CreateHITRequest.


        :param question: The question of this CreateHITRequest.
        :type question: str
        """

        self._question = question

    @property
    def requester_annotation(self):
        """Gets the requester_annotation of this CreateHITRequest.


        :return: The requester_annotation of this CreateHITRequest.
        :rtype: str
        """
        return self._requester_annotation

    @requester_annotation.setter
    def requester_annotation(self, requester_annotation):
        """Sets the requester_annotation of this CreateHITRequest.


        :param requester_annotation: The requester_annotation of this CreateHITRequest.
        :type requester_annotation: str
        """

        self._requester_annotation = requester_annotation

    @property
    def qualification_requirements(self):
        """Gets the qualification_requirements of this CreateHITRequest.


        :return: The qualification_requirements of this CreateHITRequest.
        :rtype: List
        """
        return self._qualification_requirements

    @qualification_requirements.setter
    def qualification_requirements(self, qualification_requirements):
        """Sets the qualification_requirements of this CreateHITRequest.


        :param qualification_requirements: The qualification_requirements of this CreateHITRequest.
        :type qualification_requirements: List
        """

        self._qualification_requirements = qualification_requirements

    @property
    def unique_request_token(self):
        """Gets the unique_request_token of this CreateHITRequest.


        :return: The unique_request_token of this CreateHITRequest.
        :rtype: str
        """
        return self._unique_request_token

    @unique_request_token.setter
    def unique_request_token(self, unique_request_token):
        """Sets the unique_request_token of this CreateHITRequest.


        :param unique_request_token: The unique_request_token of this CreateHITRequest.
        :type unique_request_token: str
        """

        self._unique_request_token = unique_request_token

    @property
    def assignment_review_policy(self):
        """Gets the assignment_review_policy of this CreateHITRequest.


        :return: The assignment_review_policy of this CreateHITRequest.
        :rtype: CreateHITRequestAssignmentReviewPolicy
        """
        return self._assignment_review_policy

    @assignment_review_policy.setter
    def assignment_review_policy(self, assignment_review_policy):
        """Sets the assignment_review_policy of this CreateHITRequest.


        :param assignment_review_policy: The assignment_review_policy of this CreateHITRequest.
        :type assignment_review_policy: CreateHITRequestAssignmentReviewPolicy
        """

        self._assignment_review_policy = assignment_review_policy

    @property
    def hit_review_policy(self):
        """Gets the hit_review_policy of this CreateHITRequest.


        :return: The hit_review_policy of this CreateHITRequest.
        :rtype: CreateHITRequestHITReviewPolicy
        """
        return self._hit_review_policy

    @hit_review_policy.setter
    def hit_review_policy(self, hit_review_policy):
        """Sets the hit_review_policy of this CreateHITRequest.


        :param hit_review_policy: The hit_review_policy of this CreateHITRequest.
        :type hit_review_policy: CreateHITRequestHITReviewPolicy
        """

        self._hit_review_policy = hit_review_policy

    @property
    def hit_layout_id(self):
        """Gets the hit_layout_id of this CreateHITRequest.


        :return: The hit_layout_id of this CreateHITRequest.
        :rtype: str
        """
        return self._hit_layout_id

    @hit_layout_id.setter
    def hit_layout_id(self, hit_layout_id):
        """Sets the hit_layout_id of this CreateHITRequest.


        :param hit_layout_id: The hit_layout_id of this CreateHITRequest.
        :type hit_layout_id: str
        """

        self._hit_layout_id = hit_layout_id

    @property
    def hit_layout_parameters(self):
        """Gets the hit_layout_parameters of this CreateHITRequest.


        :return: The hit_layout_parameters of this CreateHITRequest.
        :rtype: List
        """
        return self._hit_layout_parameters

    @hit_layout_parameters.setter
    def hit_layout_parameters(self, hit_layout_parameters):
        """Sets the hit_layout_parameters of this CreateHITRequest.


        :param hit_layout_parameters: The hit_layout_parameters of this CreateHITRequest.
        :type hit_layout_parameters: List
        """

        self._hit_layout_parameters = hit_layout_parameters
