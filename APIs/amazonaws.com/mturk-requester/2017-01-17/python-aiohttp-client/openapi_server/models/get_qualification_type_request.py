# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class GetQualificationTypeRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, qualification_type_id: str=None):
        """GetQualificationTypeRequest - a model defined in OpenAPI

        :param qualification_type_id: The qualification_type_id of this GetQualificationTypeRequest.
        """
        self.openapi_types = {
            'qualification_type_id': str
        }

        self.attribute_map = {
            'qualification_type_id': 'QualificationTypeId'
        }

        self._qualification_type_id = qualification_type_id

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GetQualificationTypeRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The GetQualificationTypeRequest of this GetQualificationTypeRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def qualification_type_id(self):
        """Gets the qualification_type_id of this GetQualificationTypeRequest.


        :return: The qualification_type_id of this GetQualificationTypeRequest.
        :rtype: str
        """
        return self._qualification_type_id

    @qualification_type_id.setter
    def qualification_type_id(self, qualification_type_id):
        """Sets the qualification_type_id of this GetQualificationTypeRequest.


        :param qualification_type_id: The qualification_type_id of this GetQualificationTypeRequest.
        :type qualification_type_id: str
        """
        if qualification_type_id is None:
            raise ValueError("Invalid value for `qualification_type_id`, must not be `None`")

        self._qualification_type_id = qualification_type_id
