# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class AcceptQualificationRequestRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, qualification_request_id: str=None, integer_value: int=None):
        """AcceptQualificationRequestRequest - a model defined in OpenAPI

        :param qualification_request_id: The qualification_request_id of this AcceptQualificationRequestRequest.
        :param integer_value: The integer_value of this AcceptQualificationRequestRequest.
        """
        self.openapi_types = {
            'qualification_request_id': str,
            'integer_value': int
        }

        self.attribute_map = {
            'qualification_request_id': 'QualificationRequestId',
            'integer_value': 'IntegerValue'
        }

        self._qualification_request_id = qualification_request_id
        self._integer_value = integer_value

    @classmethod
    def from_dict(cls, dikt: dict) -> 'AcceptQualificationRequestRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The AcceptQualificationRequestRequest of this AcceptQualificationRequestRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def qualification_request_id(self):
        """Gets the qualification_request_id of this AcceptQualificationRequestRequest.


        :return: The qualification_request_id of this AcceptQualificationRequestRequest.
        :rtype: str
        """
        return self._qualification_request_id

    @qualification_request_id.setter
    def qualification_request_id(self, qualification_request_id):
        """Sets the qualification_request_id of this AcceptQualificationRequestRequest.


        :param qualification_request_id: The qualification_request_id of this AcceptQualificationRequestRequest.
        :type qualification_request_id: str
        """
        if qualification_request_id is None:
            raise ValueError("Invalid value for `qualification_request_id`, must not be `None`")

        self._qualification_request_id = qualification_request_id

    @property
    def integer_value(self):
        """Gets the integer_value of this AcceptQualificationRequestRequest.


        :return: The integer_value of this AcceptQualificationRequestRequest.
        :rtype: int
        """
        return self._integer_value

    @integer_value.setter
    def integer_value(self, integer_value):
        """Sets the integer_value of this AcceptQualificationRequestRequest.


        :param integer_value: The integer_value of this AcceptQualificationRequestRequest.
        :type integer_value: int
        """

        self._integer_value = integer_value
