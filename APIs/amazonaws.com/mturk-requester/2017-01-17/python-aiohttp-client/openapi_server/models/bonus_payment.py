# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
import re
from openapi_server import util


class BonusPayment(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, worker_id: str=None, bonus_amount: str=None, assignment_id: str=None, reason: str=None, grant_time: datetime=None):
        """BonusPayment - a model defined in OpenAPI

        :param worker_id: The worker_id of this BonusPayment.
        :param bonus_amount: The bonus_amount of this BonusPayment.
        :param assignment_id: The assignment_id of this BonusPayment.
        :param reason: The reason of this BonusPayment.
        :param grant_time: The grant_time of this BonusPayment.
        """
        self.openapi_types = {
            'worker_id': str,
            'bonus_amount': str,
            'assignment_id': str,
            'reason': str,
            'grant_time': datetime
        }

        self.attribute_map = {
            'worker_id': 'WorkerId',
            'bonus_amount': 'BonusAmount',
            'assignment_id': 'AssignmentId',
            'reason': 'Reason',
            'grant_time': 'GrantTime'
        }

        self._worker_id = worker_id
        self._bonus_amount = bonus_amount
        self._assignment_id = assignment_id
        self._reason = reason
        self._grant_time = grant_time

    @classmethod
    def from_dict(cls, dikt: dict) -> 'BonusPayment':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The BonusPayment of this BonusPayment.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def worker_id(self):
        """Gets the worker_id of this BonusPayment.


        :return: The worker_id of this BonusPayment.
        :rtype: str
        """
        return self._worker_id

    @worker_id.setter
    def worker_id(self, worker_id):
        """Sets the worker_id of this BonusPayment.


        :param worker_id: The worker_id of this BonusPayment.
        :type worker_id: str
        """

        self._worker_id = worker_id

    @property
    def bonus_amount(self):
        """Gets the bonus_amount of this BonusPayment.

        A string representing a currency amount.

        :return: The bonus_amount of this BonusPayment.
        :rtype: str
        """
        return self._bonus_amount

    @bonus_amount.setter
    def bonus_amount(self, bonus_amount):
        """Sets the bonus_amount of this BonusPayment.

        A string representing a currency amount.

        :param bonus_amount: The bonus_amount of this BonusPayment.
        :type bonus_amount: str
        """
        if bonus_amount is not None and not re.search(r'^[0-9]+(\.)?[0-9]{0,2}$', bonus_amount):
            raise ValueError("Invalid value for `bonus_amount`, must be a follow pattern or equal to `/^[0-9]+(\.)?[0-9]{0,2}$/`")

        self._bonus_amount = bonus_amount

    @property
    def assignment_id(self):
        """Gets the assignment_id of this BonusPayment.


        :return: The assignment_id of this BonusPayment.
        :rtype: str
        """
        return self._assignment_id

    @assignment_id.setter
    def assignment_id(self, assignment_id):
        """Sets the assignment_id of this BonusPayment.


        :param assignment_id: The assignment_id of this BonusPayment.
        :type assignment_id: str
        """

        self._assignment_id = assignment_id

    @property
    def reason(self):
        """Gets the reason of this BonusPayment.


        :return: The reason of this BonusPayment.
        :rtype: str
        """
        return self._reason

    @reason.setter
    def reason(self, reason):
        """Sets the reason of this BonusPayment.


        :param reason: The reason of this BonusPayment.
        :type reason: str
        """

        self._reason = reason

    @property
    def grant_time(self):
        """Gets the grant_time of this BonusPayment.


        :return: The grant_time of this BonusPayment.
        :rtype: datetime
        """
        return self._grant_time

    @grant_time.setter
    def grant_time(self, grant_time):
        """Sets the grant_time of this BonusPayment.


        :param grant_time: The grant_time of this BonusPayment.
        :type grant_time: datetime
        """

        self._grant_time = grant_time
