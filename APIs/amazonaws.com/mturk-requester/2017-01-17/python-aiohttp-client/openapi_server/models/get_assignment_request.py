# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class GetAssignmentRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, assignment_id: str=None):
        """GetAssignmentRequest - a model defined in OpenAPI

        :param assignment_id: The assignment_id of this GetAssignmentRequest.
        """
        self.openapi_types = {
            'assignment_id': str
        }

        self.attribute_map = {
            'assignment_id': 'AssignmentId'
        }

        self._assignment_id = assignment_id

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GetAssignmentRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The GetAssignmentRequest of this GetAssignmentRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def assignment_id(self):
        """Gets the assignment_id of this GetAssignmentRequest.


        :return: The assignment_id of this GetAssignmentRequest.
        :rtype: str
        """
        return self._assignment_id

    @assignment_id.setter
    def assignment_id(self, assignment_id):
        """Sets the assignment_id of this GetAssignmentRequest.


        :param assignment_id: The assignment_id of this GetAssignmentRequest.
        :type assignment_id: str
        """
        if assignment_id is None:
            raise ValueError("Invalid value for `assignment_id`, must not be `None`")

        self._assignment_id = assignment_id
