# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.update_notification_settings_request_notification import UpdateNotificationSettingsRequestNotification
from openapi_server import util


class UpdateNotificationSettingsRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, hit_type_id: str=None, notification: UpdateNotificationSettingsRequestNotification=None, active: bool=None):
        """UpdateNotificationSettingsRequest - a model defined in OpenAPI

        :param hit_type_id: The hit_type_id of this UpdateNotificationSettingsRequest.
        :param notification: The notification of this UpdateNotificationSettingsRequest.
        :param active: The active of this UpdateNotificationSettingsRequest.
        """
        self.openapi_types = {
            'hit_type_id': str,
            'notification': UpdateNotificationSettingsRequestNotification,
            'active': bool
        }

        self.attribute_map = {
            'hit_type_id': 'HITTypeId',
            'notification': 'Notification',
            'active': 'Active'
        }

        self._hit_type_id = hit_type_id
        self._notification = notification
        self._active = active

    @classmethod
    def from_dict(cls, dikt: dict) -> 'UpdateNotificationSettingsRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The UpdateNotificationSettingsRequest of this UpdateNotificationSettingsRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def hit_type_id(self):
        """Gets the hit_type_id of this UpdateNotificationSettingsRequest.


        :return: The hit_type_id of this UpdateNotificationSettingsRequest.
        :rtype: str
        """
        return self._hit_type_id

    @hit_type_id.setter
    def hit_type_id(self, hit_type_id):
        """Sets the hit_type_id of this UpdateNotificationSettingsRequest.


        :param hit_type_id: The hit_type_id of this UpdateNotificationSettingsRequest.
        :type hit_type_id: str
        """
        if hit_type_id is None:
            raise ValueError("Invalid value for `hit_type_id`, must not be `None`")

        self._hit_type_id = hit_type_id

    @property
    def notification(self):
        """Gets the notification of this UpdateNotificationSettingsRequest.


        :return: The notification of this UpdateNotificationSettingsRequest.
        :rtype: UpdateNotificationSettingsRequestNotification
        """
        return self._notification

    @notification.setter
    def notification(self, notification):
        """Sets the notification of this UpdateNotificationSettingsRequest.


        :param notification: The notification of this UpdateNotificationSettingsRequest.
        :type notification: UpdateNotificationSettingsRequestNotification
        """

        self._notification = notification

    @property
    def active(self):
        """Gets the active of this UpdateNotificationSettingsRequest.


        :return: The active of this UpdateNotificationSettingsRequest.
        :rtype: bool
        """
        return self._active

    @active.setter
    def active(self, active):
        """Sets the active of this UpdateNotificationSettingsRequest.


        :param active: The active of this UpdateNotificationSettingsRequest.
        :type active: bool
        """

        self._active = active
