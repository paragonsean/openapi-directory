# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.comparator import Comparator
from openapi_server.models.hit_access_actions import HITAccessActions
from openapi_server import util


class QualificationRequirement(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, qualification_type_id: str=None, comparator: Comparator=None, integer_values: List=None, locale_values: List=None, required_to_preview: bool=None, actions_guarded: HITAccessActions=None):
        """QualificationRequirement - a model defined in OpenAPI

        :param qualification_type_id: The qualification_type_id of this QualificationRequirement.
        :param comparator: The comparator of this QualificationRequirement.
        :param integer_values: The integer_values of this QualificationRequirement.
        :param locale_values: The locale_values of this QualificationRequirement.
        :param required_to_preview: The required_to_preview of this QualificationRequirement.
        :param actions_guarded: The actions_guarded of this QualificationRequirement.
        """
        self.openapi_types = {
            'qualification_type_id': str,
            'comparator': Comparator,
            'integer_values': List,
            'locale_values': List,
            'required_to_preview': bool,
            'actions_guarded': HITAccessActions
        }

        self.attribute_map = {
            'qualification_type_id': 'QualificationTypeId',
            'comparator': 'Comparator',
            'integer_values': 'IntegerValues',
            'locale_values': 'LocaleValues',
            'required_to_preview': 'RequiredToPreview',
            'actions_guarded': 'ActionsGuarded'
        }

        self._qualification_type_id = qualification_type_id
        self._comparator = comparator
        self._integer_values = integer_values
        self._locale_values = locale_values
        self._required_to_preview = required_to_preview
        self._actions_guarded = actions_guarded

    @classmethod
    def from_dict(cls, dikt: dict) -> 'QualificationRequirement':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The QualificationRequirement of this QualificationRequirement.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def qualification_type_id(self):
        """Gets the qualification_type_id of this QualificationRequirement.


        :return: The qualification_type_id of this QualificationRequirement.
        :rtype: str
        """
        return self._qualification_type_id

    @qualification_type_id.setter
    def qualification_type_id(self, qualification_type_id):
        """Sets the qualification_type_id of this QualificationRequirement.


        :param qualification_type_id: The qualification_type_id of this QualificationRequirement.
        :type qualification_type_id: str
        """
        if qualification_type_id is None:
            raise ValueError("Invalid value for `qualification_type_id`, must not be `None`")

        self._qualification_type_id = qualification_type_id

    @property
    def comparator(self):
        """Gets the comparator of this QualificationRequirement.


        :return: The comparator of this QualificationRequirement.
        :rtype: Comparator
        """
        return self._comparator

    @comparator.setter
    def comparator(self, comparator):
        """Sets the comparator of this QualificationRequirement.


        :param comparator: The comparator of this QualificationRequirement.
        :type comparator: Comparator
        """
        if comparator is None:
            raise ValueError("Invalid value for `comparator`, must not be `None`")

        self._comparator = comparator

    @property
    def integer_values(self):
        """Gets the integer_values of this QualificationRequirement.


        :return: The integer_values of this QualificationRequirement.
        :rtype: List
        """
        return self._integer_values

    @integer_values.setter
    def integer_values(self, integer_values):
        """Sets the integer_values of this QualificationRequirement.


        :param integer_values: The integer_values of this QualificationRequirement.
        :type integer_values: List
        """

        self._integer_values = integer_values

    @property
    def locale_values(self):
        """Gets the locale_values of this QualificationRequirement.


        :return: The locale_values of this QualificationRequirement.
        :rtype: List
        """
        return self._locale_values

    @locale_values.setter
    def locale_values(self, locale_values):
        """Sets the locale_values of this QualificationRequirement.


        :param locale_values: The locale_values of this QualificationRequirement.
        :type locale_values: List
        """

        self._locale_values = locale_values

    @property
    def required_to_preview(self):
        """Gets the required_to_preview of this QualificationRequirement.


        :return: The required_to_preview of this QualificationRequirement.
        :rtype: bool
        """
        return self._required_to_preview

    @required_to_preview.setter
    def required_to_preview(self, required_to_preview):
        """Sets the required_to_preview of this QualificationRequirement.


        :param required_to_preview: The required_to_preview of this QualificationRequirement.
        :type required_to_preview: bool
        """

        self._required_to_preview = required_to_preview

    @property
    def actions_guarded(self):
        """Gets the actions_guarded of this QualificationRequirement.


        :return: The actions_guarded of this QualificationRequirement.
        :rtype: HITAccessActions
        """
        return self._actions_guarded

    @actions_guarded.setter
    def actions_guarded(self, actions_guarded):
        """Sets the actions_guarded of this QualificationRequirement.


        :param actions_guarded: The actions_guarded of this QualificationRequirement.
        :type actions_guarded: HITAccessActions
        """

        self._actions_guarded = actions_guarded
