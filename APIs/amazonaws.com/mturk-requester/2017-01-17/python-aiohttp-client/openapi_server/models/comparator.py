# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class Comparator(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    """
    allowed enum values
    """
    LESSTHAN = 'LessThan'
    LESSTHANOREQUALTO = 'LessThanOrEqualTo'
    GREATERTHAN = 'GreaterThan'
    GREATERTHANOREQUALTO = 'GreaterThanOrEqualTo'
    EQUALTO = 'EqualTo'
    NOTEQUALTO = 'NotEqualTo'
    EXISTS = 'Exists'
    DOESNOTEXIST = 'DoesNotExist'
    IN = 'In'
    NOTIN = 'NotIn'

    def __init__(self):
        """Comparator - a model defined in OpenAPI

        """
        self.openapi_types = {
        }

        self.attribute_map = {
        }

    @classmethod
    def from_dict(cls, dikt: dict) -> 'Comparator':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Comparator of this Comparator.
        """
        return util.deserialize_model(dikt, cls)
