# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class ReviewResultDetail(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, action_id: str=None, subject_id: str=None, subject_type: str=None, question_id: str=None, key: str=None, value: str=None):
        """ReviewResultDetail - a model defined in OpenAPI

        :param action_id: The action_id of this ReviewResultDetail.
        :param subject_id: The subject_id of this ReviewResultDetail.
        :param subject_type: The subject_type of this ReviewResultDetail.
        :param question_id: The question_id of this ReviewResultDetail.
        :param key: The key of this ReviewResultDetail.
        :param value: The value of this ReviewResultDetail.
        """
        self.openapi_types = {
            'action_id': str,
            'subject_id': str,
            'subject_type': str,
            'question_id': str,
            'key': str,
            'value': str
        }

        self.attribute_map = {
            'action_id': 'ActionId',
            'subject_id': 'SubjectId',
            'subject_type': 'SubjectType',
            'question_id': 'QuestionId',
            'key': 'Key',
            'value': 'Value'
        }

        self._action_id = action_id
        self._subject_id = subject_id
        self._subject_type = subject_type
        self._question_id = question_id
        self._key = key
        self._value = value

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ReviewResultDetail':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ReviewResultDetail of this ReviewResultDetail.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def action_id(self):
        """Gets the action_id of this ReviewResultDetail.


        :return: The action_id of this ReviewResultDetail.
        :rtype: str
        """
        return self._action_id

    @action_id.setter
    def action_id(self, action_id):
        """Sets the action_id of this ReviewResultDetail.


        :param action_id: The action_id of this ReviewResultDetail.
        :type action_id: str
        """

        self._action_id = action_id

    @property
    def subject_id(self):
        """Gets the subject_id of this ReviewResultDetail.


        :return: The subject_id of this ReviewResultDetail.
        :rtype: str
        """
        return self._subject_id

    @subject_id.setter
    def subject_id(self, subject_id):
        """Sets the subject_id of this ReviewResultDetail.


        :param subject_id: The subject_id of this ReviewResultDetail.
        :type subject_id: str
        """

        self._subject_id = subject_id

    @property
    def subject_type(self):
        """Gets the subject_type of this ReviewResultDetail.


        :return: The subject_type of this ReviewResultDetail.
        :rtype: str
        """
        return self._subject_type

    @subject_type.setter
    def subject_type(self, subject_type):
        """Sets the subject_type of this ReviewResultDetail.


        :param subject_type: The subject_type of this ReviewResultDetail.
        :type subject_type: str
        """

        self._subject_type = subject_type

    @property
    def question_id(self):
        """Gets the question_id of this ReviewResultDetail.


        :return: The question_id of this ReviewResultDetail.
        :rtype: str
        """
        return self._question_id

    @question_id.setter
    def question_id(self, question_id):
        """Sets the question_id of this ReviewResultDetail.


        :param question_id: The question_id of this ReviewResultDetail.
        :type question_id: str
        """

        self._question_id = question_id

    @property
    def key(self):
        """Gets the key of this ReviewResultDetail.


        :return: The key of this ReviewResultDetail.
        :rtype: str
        """
        return self._key

    @key.setter
    def key(self, key):
        """Sets the key of this ReviewResultDetail.


        :param key: The key of this ReviewResultDetail.
        :type key: str
        """

        self._key = key

    @property
    def value(self):
        """Gets the value of this ReviewResultDetail.


        :return: The value of this ReviewResultDetail.
        :rtype: str
        """
        return self._value

    @value.setter
    def value(self, value):
        """Sets the value of this ReviewResultDetail.


        :param value: The value of this ReviewResultDetail.
        :type value: str
        """

        self._value = value
