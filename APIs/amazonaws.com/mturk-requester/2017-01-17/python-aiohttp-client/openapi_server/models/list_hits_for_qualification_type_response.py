# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class ListHITsForQualificationTypeResponse(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, next_token: str=None, num_results: int=None, hits: List=None):
        """ListHITsForQualificationTypeResponse - a model defined in OpenAPI

        :param next_token: The next_token of this ListHITsForQualificationTypeResponse.
        :param num_results: The num_results of this ListHITsForQualificationTypeResponse.
        :param hits: The hits of this ListHITsForQualificationTypeResponse.
        """
        self.openapi_types = {
            'next_token': str,
            'num_results': int,
            'hits': List
        }

        self.attribute_map = {
            'next_token': 'NextToken',
            'num_results': 'NumResults',
            'hits': 'HITs'
        }

        self._next_token = next_token
        self._num_results = num_results
        self._hits = hits

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ListHITsForQualificationTypeResponse':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ListHITsForQualificationTypeResponse of this ListHITsForQualificationTypeResponse.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def next_token(self):
        """Gets the next_token of this ListHITsForQualificationTypeResponse.

        If the previous response was incomplete (because there is more data to retrieve), Amazon Mechanical Turk returns a pagination token in the response. You can use this pagination token to retrieve the next set of results. 

        :return: The next_token of this ListHITsForQualificationTypeResponse.
        :rtype: str
        """
        return self._next_token

    @next_token.setter
    def next_token(self, next_token):
        """Sets the next_token of this ListHITsForQualificationTypeResponse.

        If the previous response was incomplete (because there is more data to retrieve), Amazon Mechanical Turk returns a pagination token in the response. You can use this pagination token to retrieve the next set of results. 

        :param next_token: The next_token of this ListHITsForQualificationTypeResponse.
        :type next_token: str
        """
        if next_token is not None and len(next_token) > 255:
            raise ValueError("Invalid value for `next_token`, length must be less than or equal to `255`")
        if next_token is not None and len(next_token) < 1:
            raise ValueError("Invalid value for `next_token`, length must be greater than or equal to `1`")

        self._next_token = next_token

    @property
    def num_results(self):
        """Gets the num_results of this ListHITsForQualificationTypeResponse.


        :return: The num_results of this ListHITsForQualificationTypeResponse.
        :rtype: int
        """
        return self._num_results

    @num_results.setter
    def num_results(self, num_results):
        """Sets the num_results of this ListHITsForQualificationTypeResponse.


        :param num_results: The num_results of this ListHITsForQualificationTypeResponse.
        :type num_results: int
        """

        self._num_results = num_results

    @property
    def hits(self):
        """Gets the hits of this ListHITsForQualificationTypeResponse.


        :return: The hits of this ListHITsForQualificationTypeResponse.
        :rtype: List
        """
        return self._hits

    @hits.setter
    def hits(self, hits):
        """Sets the hits of this ListHITsForQualificationTypeResponse.


        :param hits: The hits of this ListHITsForQualificationTypeResponse.
        :type hits: List
        """

        self._hits = hits
