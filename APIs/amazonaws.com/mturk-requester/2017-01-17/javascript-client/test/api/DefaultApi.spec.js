/**
 * Amazon Mechanical Turk
 * <fullname>Amazon Mechanical Turk API Reference</fullname>
 *
 * The version of the OpenAPI document: 2017-01-17
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.AmazonMechanicalTurk);
  }
}(this, function(expect, AmazonMechanicalTurk) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new AmazonMechanicalTurk.DefaultApi();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('DefaultApi', function() {
    describe('acceptQualificationRequest', function() {
      it('should call acceptQualificationRequest successfully', function(done) {
        //uncomment below and update the code to test acceptQualificationRequest
        //instance.acceptQualificationRequest(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('approveAssignment', function() {
      it('should call approveAssignment successfully', function(done) {
        //uncomment below and update the code to test approveAssignment
        //instance.approveAssignment(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('associateQualificationWithWorker', function() {
      it('should call associateQualificationWithWorker successfully', function(done) {
        //uncomment below and update the code to test associateQualificationWithWorker
        //instance.associateQualificationWithWorker(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('createAdditionalAssignmentsForHIT', function() {
      it('should call createAdditionalAssignmentsForHIT successfully', function(done) {
        //uncomment below and update the code to test createAdditionalAssignmentsForHIT
        //instance.createAdditionalAssignmentsForHIT(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('createHIT', function() {
      it('should call createHIT successfully', function(done) {
        //uncomment below and update the code to test createHIT
        //instance.createHIT(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('createHITType', function() {
      it('should call createHITType successfully', function(done) {
        //uncomment below and update the code to test createHITType
        //instance.createHITType(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('createHITWithHITType', function() {
      it('should call createHITWithHITType successfully', function(done) {
        //uncomment below and update the code to test createHITWithHITType
        //instance.createHITWithHITType(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('createQualificationType', function() {
      it('should call createQualificationType successfully', function(done) {
        //uncomment below and update the code to test createQualificationType
        //instance.createQualificationType(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('createWorkerBlock', function() {
      it('should call createWorkerBlock successfully', function(done) {
        //uncomment below and update the code to test createWorkerBlock
        //instance.createWorkerBlock(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deleteHIT', function() {
      it('should call deleteHIT successfully', function(done) {
        //uncomment below and update the code to test deleteHIT
        //instance.deleteHIT(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deleteQualificationType', function() {
      it('should call deleteQualificationType successfully', function(done) {
        //uncomment below and update the code to test deleteQualificationType
        //instance.deleteQualificationType(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deleteWorkerBlock', function() {
      it('should call deleteWorkerBlock successfully', function(done) {
        //uncomment below and update the code to test deleteWorkerBlock
        //instance.deleteWorkerBlock(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('disassociateQualificationFromWorker', function() {
      it('should call disassociateQualificationFromWorker successfully', function(done) {
        //uncomment below and update the code to test disassociateQualificationFromWorker
        //instance.disassociateQualificationFromWorker(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getAccountBalance', function() {
      it('should call getAccountBalance successfully', function(done) {
        //uncomment below and update the code to test getAccountBalance
        //instance.getAccountBalance(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getAssignment', function() {
      it('should call getAssignment successfully', function(done) {
        //uncomment below and update the code to test getAssignment
        //instance.getAssignment(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getFileUploadURL', function() {
      it('should call getFileUploadURL successfully', function(done) {
        //uncomment below and update the code to test getFileUploadURL
        //instance.getFileUploadURL(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getHIT', function() {
      it('should call getHIT successfully', function(done) {
        //uncomment below and update the code to test getHIT
        //instance.getHIT(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getQualificationScore', function() {
      it('should call getQualificationScore successfully', function(done) {
        //uncomment below and update the code to test getQualificationScore
        //instance.getQualificationScore(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getQualificationType', function() {
      it('should call getQualificationType successfully', function(done) {
        //uncomment below and update the code to test getQualificationType
        //instance.getQualificationType(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('listAssignmentsForHIT', function() {
      it('should call listAssignmentsForHIT successfully', function(done) {
        //uncomment below and update the code to test listAssignmentsForHIT
        //instance.listAssignmentsForHIT(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('listBonusPayments', function() {
      it('should call listBonusPayments successfully', function(done) {
        //uncomment below and update the code to test listBonusPayments
        //instance.listBonusPayments(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('listHITs', function() {
      it('should call listHITs successfully', function(done) {
        //uncomment below and update the code to test listHITs
        //instance.listHITs(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('listHITsForQualificationType', function() {
      it('should call listHITsForQualificationType successfully', function(done) {
        //uncomment below and update the code to test listHITsForQualificationType
        //instance.listHITsForQualificationType(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('listQualificationRequests', function() {
      it('should call listQualificationRequests successfully', function(done) {
        //uncomment below and update the code to test listQualificationRequests
        //instance.listQualificationRequests(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('listQualificationTypes', function() {
      it('should call listQualificationTypes successfully', function(done) {
        //uncomment below and update the code to test listQualificationTypes
        //instance.listQualificationTypes(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('listReviewPolicyResultsForHIT', function() {
      it('should call listReviewPolicyResultsForHIT successfully', function(done) {
        //uncomment below and update the code to test listReviewPolicyResultsForHIT
        //instance.listReviewPolicyResultsForHIT(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('listReviewableHITs', function() {
      it('should call listReviewableHITs successfully', function(done) {
        //uncomment below and update the code to test listReviewableHITs
        //instance.listReviewableHITs(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('listWorkerBlocks', function() {
      it('should call listWorkerBlocks successfully', function(done) {
        //uncomment below and update the code to test listWorkerBlocks
        //instance.listWorkerBlocks(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('listWorkersWithQualificationType', function() {
      it('should call listWorkersWithQualificationType successfully', function(done) {
        //uncomment below and update the code to test listWorkersWithQualificationType
        //instance.listWorkersWithQualificationType(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('notifyWorkers', function() {
      it('should call notifyWorkers successfully', function(done) {
        //uncomment below and update the code to test notifyWorkers
        //instance.notifyWorkers(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('rejectAssignment', function() {
      it('should call rejectAssignment successfully', function(done) {
        //uncomment below and update the code to test rejectAssignment
        //instance.rejectAssignment(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('rejectQualificationRequest', function() {
      it('should call rejectQualificationRequest successfully', function(done) {
        //uncomment below and update the code to test rejectQualificationRequest
        //instance.rejectQualificationRequest(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('sendBonus', function() {
      it('should call sendBonus successfully', function(done) {
        //uncomment below and update the code to test sendBonus
        //instance.sendBonus(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('sendTestEventNotification', function() {
      it('should call sendTestEventNotification successfully', function(done) {
        //uncomment below and update the code to test sendTestEventNotification
        //instance.sendTestEventNotification(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('updateExpirationForHIT', function() {
      it('should call updateExpirationForHIT successfully', function(done) {
        //uncomment below and update the code to test updateExpirationForHIT
        //instance.updateExpirationForHIT(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('updateHITReviewStatus', function() {
      it('should call updateHITReviewStatus successfully', function(done) {
        //uncomment below and update the code to test updateHITReviewStatus
        //instance.updateHITReviewStatus(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('updateHITTypeOfHIT', function() {
      it('should call updateHITTypeOfHIT successfully', function(done) {
        //uncomment below and update the code to test updateHITTypeOfHIT
        //instance.updateHITTypeOfHIT(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('updateNotificationSettings', function() {
      it('should call updateNotificationSettings successfully', function(done) {
        //uncomment below and update the code to test updateNotificationSettings
        //instance.updateNotificationSettings(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('updateQualificationType', function() {
      it('should call updateQualificationType successfully', function(done) {
        //uncomment below and update the code to test updateQualificationType
        //instance.updateQualificationType(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
  });

}));
