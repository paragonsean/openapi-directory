/**
 * Amazon Mechanical Turk
 * <fullname>Amazon Mechanical Turk API Reference</fullname>
 *
 * The version of the OpenAPI document: 2017-01-17
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import QualificationTypeStatus from './QualificationTypeStatus';

/**
 * The QualificationType model module.
 * @module model/QualificationType
 * @version 2017-01-17
 */
class QualificationType {
    /**
     * Constructs a new <code>QualificationType</code>.
     *  The QualificationType data structure represents a Qualification type, a description of a property of a Worker that must match the requirements of a HIT for the Worker to be able to accept the HIT. The type also describes how a Worker can obtain a Qualification of that type, such as through a Qualification test. 
     * @alias module:model/QualificationType
     */
    constructor() { 
        
        QualificationType.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>QualificationType</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/QualificationType} obj Optional instance to populate.
     * @return {module:model/QualificationType} The populated <code>QualificationType</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new QualificationType();

            if (data.hasOwnProperty('QualificationTypeId')) {
                obj['QualificationTypeId'] = ApiClient.convertToType(data['QualificationTypeId'], 'String');
            }
            if (data.hasOwnProperty('CreationTime')) {
                obj['CreationTime'] = ApiClient.convertToType(data['CreationTime'], 'Date');
            }
            if (data.hasOwnProperty('Name')) {
                obj['Name'] = ApiClient.convertToType(data['Name'], 'String');
            }
            if (data.hasOwnProperty('Description')) {
                obj['Description'] = ApiClient.convertToType(data['Description'], 'String');
            }
            if (data.hasOwnProperty('Keywords')) {
                obj['Keywords'] = ApiClient.convertToType(data['Keywords'], 'String');
            }
            if (data.hasOwnProperty('QualificationTypeStatus')) {
                obj['QualificationTypeStatus'] = ApiClient.convertToType(data['QualificationTypeStatus'], QualificationTypeStatus);
            }
            if (data.hasOwnProperty('Test')) {
                obj['Test'] = ApiClient.convertToType(data['Test'], 'String');
            }
            if (data.hasOwnProperty('TestDurationInSeconds')) {
                obj['TestDurationInSeconds'] = ApiClient.convertToType(data['TestDurationInSeconds'], 'Number');
            }
            if (data.hasOwnProperty('AnswerKey')) {
                obj['AnswerKey'] = ApiClient.convertToType(data['AnswerKey'], 'String');
            }
            if (data.hasOwnProperty('RetryDelayInSeconds')) {
                obj['RetryDelayInSeconds'] = ApiClient.convertToType(data['RetryDelayInSeconds'], 'Number');
            }
            if (data.hasOwnProperty('IsRequestable')) {
                obj['IsRequestable'] = ApiClient.convertToType(data['IsRequestable'], 'Boolean');
            }
            if (data.hasOwnProperty('AutoGranted')) {
                obj['AutoGranted'] = ApiClient.convertToType(data['AutoGranted'], 'Boolean');
            }
            if (data.hasOwnProperty('AutoGrantedValue')) {
                obj['AutoGrantedValue'] = ApiClient.convertToType(data['AutoGrantedValue'], 'Number');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>QualificationType</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>QualificationType</code>.
     */
    static validateJSON(data) {
        // validate the optional field `QualificationTypeId`
        if (data['QualificationTypeId']) { // data not null
          String.validateJSON(data['QualificationTypeId']);
        }
        // validate the optional field `CreationTime`
        if (data['CreationTime']) { // data not null
          Date.validateJSON(data['CreationTime']);
        }
        // validate the optional field `Name`
        if (data['Name']) { // data not null
          String.validateJSON(data['Name']);
        }
        // validate the optional field `Description`
        if (data['Description']) { // data not null
          String.validateJSON(data['Description']);
        }
        // validate the optional field `Keywords`
        if (data['Keywords']) { // data not null
          String.validateJSON(data['Keywords']);
        }
        // validate the optional field `QualificationTypeStatus`
        if (data['QualificationTypeStatus']) { // data not null
          QualificationTypeStatus.validateJSON(data['QualificationTypeStatus']);
        }
        // validate the optional field `Test`
        if (data['Test']) { // data not null
          String.validateJSON(data['Test']);
        }
        // validate the optional field `TestDurationInSeconds`
        if (data['TestDurationInSeconds']) { // data not null
          Number.validateJSON(data['TestDurationInSeconds']);
        }
        // validate the optional field `AnswerKey`
        if (data['AnswerKey']) { // data not null
          String.validateJSON(data['AnswerKey']);
        }
        // validate the optional field `RetryDelayInSeconds`
        if (data['RetryDelayInSeconds']) { // data not null
          Number.validateJSON(data['RetryDelayInSeconds']);
        }
        // validate the optional field `IsRequestable`
        if (data['IsRequestable']) { // data not null
          Boolean.validateJSON(data['IsRequestable']);
        }
        // validate the optional field `AutoGranted`
        if (data['AutoGranted']) { // data not null
          Boolean.validateJSON(data['AutoGranted']);
        }
        // validate the optional field `AutoGrantedValue`
        if (data['AutoGrantedValue']) { // data not null
          Number.validateJSON(data['AutoGrantedValue']);
        }

        return true;
    }


}



/**
 * @member {String} QualificationTypeId
 */
QualificationType.prototype['QualificationTypeId'] = undefined;

/**
 * @member {Date} CreationTime
 */
QualificationType.prototype['CreationTime'] = undefined;

/**
 * @member {String} Name
 */
QualificationType.prototype['Name'] = undefined;

/**
 * @member {String} Description
 */
QualificationType.prototype['Description'] = undefined;

/**
 * @member {String} Keywords
 */
QualificationType.prototype['Keywords'] = undefined;

/**
 * @member {module:model/QualificationTypeStatus} QualificationTypeStatus
 */
QualificationType.prototype['QualificationTypeStatus'] = undefined;

/**
 * @member {String} Test
 */
QualificationType.prototype['Test'] = undefined;

/**
 * @member {Number} TestDurationInSeconds
 */
QualificationType.prototype['TestDurationInSeconds'] = undefined;

/**
 * @member {String} AnswerKey
 */
QualificationType.prototype['AnswerKey'] = undefined;

/**
 * @member {Number} RetryDelayInSeconds
 */
QualificationType.prototype['RetryDelayInSeconds'] = undefined;

/**
 * @member {Boolean} IsRequestable
 */
QualificationType.prototype['IsRequestable'] = undefined;

/**
 * @member {Boolean} AutoGranted
 */
QualificationType.prototype['AutoGranted'] = undefined;

/**
 * @member {Number} AutoGrantedValue
 */
QualificationType.prototype['AutoGrantedValue'] = undefined;






export default QualificationType;

