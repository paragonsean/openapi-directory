/**
 * Amazon Mechanical Turk
 * <fullname>Amazon Mechanical Turk API Reference</fullname>
 *
 * The version of the OpenAPI document: 2017-01-17
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import AssignmentStatus from './AssignmentStatus';

/**
 * The Assignment model module.
 * @module model/Assignment
 * @version 2017-01-17
 */
class Assignment {
    /**
     * Constructs a new <code>Assignment</code>.
     *  The Assignment data structure represents a single assignment of a HIT to a Worker. The assignment tracks the Worker&#39;s efforts to complete the HIT, and contains the results for later retrieval. 
     * @alias module:model/Assignment
     */
    constructor() { 
        
        Assignment.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>Assignment</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/Assignment} obj Optional instance to populate.
     * @return {module:model/Assignment} The populated <code>Assignment</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new Assignment();

            if (data.hasOwnProperty('AssignmentId')) {
                obj['AssignmentId'] = ApiClient.convertToType(data['AssignmentId'], 'String');
            }
            if (data.hasOwnProperty('WorkerId')) {
                obj['WorkerId'] = ApiClient.convertToType(data['WorkerId'], 'String');
            }
            if (data.hasOwnProperty('HITId')) {
                obj['HITId'] = ApiClient.convertToType(data['HITId'], 'String');
            }
            if (data.hasOwnProperty('AssignmentStatus')) {
                obj['AssignmentStatus'] = ApiClient.convertToType(data['AssignmentStatus'], AssignmentStatus);
            }
            if (data.hasOwnProperty('AutoApprovalTime')) {
                obj['AutoApprovalTime'] = ApiClient.convertToType(data['AutoApprovalTime'], 'Date');
            }
            if (data.hasOwnProperty('AcceptTime')) {
                obj['AcceptTime'] = ApiClient.convertToType(data['AcceptTime'], 'Date');
            }
            if (data.hasOwnProperty('SubmitTime')) {
                obj['SubmitTime'] = ApiClient.convertToType(data['SubmitTime'], 'Date');
            }
            if (data.hasOwnProperty('ApprovalTime')) {
                obj['ApprovalTime'] = ApiClient.convertToType(data['ApprovalTime'], 'Date');
            }
            if (data.hasOwnProperty('RejectionTime')) {
                obj['RejectionTime'] = ApiClient.convertToType(data['RejectionTime'], 'Date');
            }
            if (data.hasOwnProperty('Deadline')) {
                obj['Deadline'] = ApiClient.convertToType(data['Deadline'], 'Date');
            }
            if (data.hasOwnProperty('Answer')) {
                obj['Answer'] = ApiClient.convertToType(data['Answer'], 'String');
            }
            if (data.hasOwnProperty('RequesterFeedback')) {
                obj['RequesterFeedback'] = ApiClient.convertToType(data['RequesterFeedback'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>Assignment</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>Assignment</code>.
     */
    static validateJSON(data) {
        // validate the optional field `AssignmentId`
        if (data['AssignmentId']) { // data not null
          String.validateJSON(data['AssignmentId']);
        }
        // validate the optional field `WorkerId`
        if (data['WorkerId']) { // data not null
          String.validateJSON(data['WorkerId']);
        }
        // validate the optional field `HITId`
        if (data['HITId']) { // data not null
          String.validateJSON(data['HITId']);
        }
        // validate the optional field `AssignmentStatus`
        if (data['AssignmentStatus']) { // data not null
          AssignmentStatus.validateJSON(data['AssignmentStatus']);
        }
        // validate the optional field `AutoApprovalTime`
        if (data['AutoApprovalTime']) { // data not null
          Date.validateJSON(data['AutoApprovalTime']);
        }
        // validate the optional field `AcceptTime`
        if (data['AcceptTime']) { // data not null
          Date.validateJSON(data['AcceptTime']);
        }
        // validate the optional field `SubmitTime`
        if (data['SubmitTime']) { // data not null
          Date.validateJSON(data['SubmitTime']);
        }
        // validate the optional field `ApprovalTime`
        if (data['ApprovalTime']) { // data not null
          Date.validateJSON(data['ApprovalTime']);
        }
        // validate the optional field `RejectionTime`
        if (data['RejectionTime']) { // data not null
          Date.validateJSON(data['RejectionTime']);
        }
        // validate the optional field `Deadline`
        if (data['Deadline']) { // data not null
          Date.validateJSON(data['Deadline']);
        }
        // validate the optional field `Answer`
        if (data['Answer']) { // data not null
          String.validateJSON(data['Answer']);
        }
        // validate the optional field `RequesterFeedback`
        if (data['RequesterFeedback']) { // data not null
          String.validateJSON(data['RequesterFeedback']);
        }

        return true;
    }


}



/**
 * @member {String} AssignmentId
 */
Assignment.prototype['AssignmentId'] = undefined;

/**
 * @member {String} WorkerId
 */
Assignment.prototype['WorkerId'] = undefined;

/**
 * @member {String} HITId
 */
Assignment.prototype['HITId'] = undefined;

/**
 * @member {module:model/AssignmentStatus} AssignmentStatus
 */
Assignment.prototype['AssignmentStatus'] = undefined;

/**
 * @member {Date} AutoApprovalTime
 */
Assignment.prototype['AutoApprovalTime'] = undefined;

/**
 * @member {Date} AcceptTime
 */
Assignment.prototype['AcceptTime'] = undefined;

/**
 * @member {Date} SubmitTime
 */
Assignment.prototype['SubmitTime'] = undefined;

/**
 * @member {Date} ApprovalTime
 */
Assignment.prototype['ApprovalTime'] = undefined;

/**
 * @member {Date} RejectionTime
 */
Assignment.prototype['RejectionTime'] = undefined;

/**
 * @member {Date} Deadline
 */
Assignment.prototype['Deadline'] = undefined;

/**
 * @member {String} Answer
 */
Assignment.prototype['Answer'] = undefined;

/**
 * @member {String} RequesterFeedback
 */
Assignment.prototype['RequesterFeedback'] = undefined;






export default Assignment;

