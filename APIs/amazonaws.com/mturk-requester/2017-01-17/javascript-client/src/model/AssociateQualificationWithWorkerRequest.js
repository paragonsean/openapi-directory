/**
 * Amazon Mechanical Turk
 * <fullname>Amazon Mechanical Turk API Reference</fullname>
 *
 * The version of the OpenAPI document: 2017-01-17
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The AssociateQualificationWithWorkerRequest model module.
 * @module model/AssociateQualificationWithWorkerRequest
 * @version 2017-01-17
 */
class AssociateQualificationWithWorkerRequest {
    /**
     * Constructs a new <code>AssociateQualificationWithWorkerRequest</code>.
     * @alias module:model/AssociateQualificationWithWorkerRequest
     * @param qualificationTypeId {String} 
     * @param workerId {String} 
     */
    constructor(qualificationTypeId, workerId) { 
        
        AssociateQualificationWithWorkerRequest.initialize(this, qualificationTypeId, workerId);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, qualificationTypeId, workerId) { 
        obj['QualificationTypeId'] = qualificationTypeId;
        obj['WorkerId'] = workerId;
    }

    /**
     * Constructs a <code>AssociateQualificationWithWorkerRequest</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/AssociateQualificationWithWorkerRequest} obj Optional instance to populate.
     * @return {module:model/AssociateQualificationWithWorkerRequest} The populated <code>AssociateQualificationWithWorkerRequest</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new AssociateQualificationWithWorkerRequest();

            if (data.hasOwnProperty('QualificationTypeId')) {
                obj['QualificationTypeId'] = ApiClient.convertToType(data['QualificationTypeId'], 'String');
            }
            if (data.hasOwnProperty('WorkerId')) {
                obj['WorkerId'] = ApiClient.convertToType(data['WorkerId'], 'String');
            }
            if (data.hasOwnProperty('IntegerValue')) {
                obj['IntegerValue'] = ApiClient.convertToType(data['IntegerValue'], 'Number');
            }
            if (data.hasOwnProperty('SendNotification')) {
                obj['SendNotification'] = ApiClient.convertToType(data['SendNotification'], 'Boolean');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>AssociateQualificationWithWorkerRequest</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>AssociateQualificationWithWorkerRequest</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of AssociateQualificationWithWorkerRequest.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // validate the optional field `QualificationTypeId`
        if (data['QualificationTypeId']) { // data not null
          String.validateJSON(data['QualificationTypeId']);
        }
        // validate the optional field `WorkerId`
        if (data['WorkerId']) { // data not null
          String.validateJSON(data['WorkerId']);
        }
        // validate the optional field `IntegerValue`
        if (data['IntegerValue']) { // data not null
          Number.validateJSON(data['IntegerValue']);
        }
        // validate the optional field `SendNotification`
        if (data['SendNotification']) { // data not null
          Boolean.validateJSON(data['SendNotification']);
        }

        return true;
    }


}

AssociateQualificationWithWorkerRequest.RequiredProperties = ["QualificationTypeId", "WorkerId"];

/**
 * @member {String} QualificationTypeId
 */
AssociateQualificationWithWorkerRequest.prototype['QualificationTypeId'] = undefined;

/**
 * @member {String} WorkerId
 */
AssociateQualificationWithWorkerRequest.prototype['WorkerId'] = undefined;

/**
 * @member {Number} IntegerValue
 */
AssociateQualificationWithWorkerRequest.prototype['IntegerValue'] = undefined;

/**
 * @member {Boolean} SendNotification
 */
AssociateQualificationWithWorkerRequest.prototype['SendNotification'] = undefined;






export default AssociateQualificationWithWorkerRequest;

