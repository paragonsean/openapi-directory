/**
 * Amazon Mechanical Turk
 * <fullname>Amazon Mechanical Turk API Reference</fullname>
 *
 * The version of the OpenAPI document: 2017-01-17
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import ReviewPolicy from './ReviewPolicy';

/**
 * The CreateHITRequestHITReviewPolicy model module.
 * @module model/CreateHITRequestHITReviewPolicy
 * @version 2017-01-17
 */
class CreateHITRequestHITReviewPolicy {
    /**
     * Constructs a new <code>CreateHITRequestHITReviewPolicy</code>.
     * @alias module:model/CreateHITRequestHITReviewPolicy
     * @implements module:model/ReviewPolicy
     * @param policyName {String} 
     */
    constructor(policyName) { 
        ReviewPolicy.initialize(this, policyName);
        CreateHITRequestHITReviewPolicy.initialize(this, policyName);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, policyName) { 
        obj['PolicyName'] = policyName;
    }

    /**
     * Constructs a <code>CreateHITRequestHITReviewPolicy</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/CreateHITRequestHITReviewPolicy} obj Optional instance to populate.
     * @return {module:model/CreateHITRequestHITReviewPolicy} The populated <code>CreateHITRequestHITReviewPolicy</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new CreateHITRequestHITReviewPolicy();
            ReviewPolicy.constructFromObject(data, obj);

            if (data.hasOwnProperty('PolicyName')) {
                obj['PolicyName'] = ApiClient.convertToType(data['PolicyName'], 'String');
            }
            if (data.hasOwnProperty('Parameters')) {
                obj['Parameters'] = ApiClient.convertToType(data['Parameters'], Array);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>CreateHITRequestHITReviewPolicy</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>CreateHITRequestHITReviewPolicy</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of CreateHITRequestHITReviewPolicy.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // validate the optional field `PolicyName`
        if (data['PolicyName']) { // data not null
          String.validateJSON(data['PolicyName']);
        }
        // validate the optional field `Parameters`
        if (data['Parameters']) { // data not null
          Array.validateJSON(data['Parameters']);
        }

        return true;
    }


}

CreateHITRequestHITReviewPolicy.RequiredProperties = ["PolicyName"];

/**
 * @member {String} PolicyName
 */
CreateHITRequestHITReviewPolicy.prototype['PolicyName'] = undefined;

/**
 * @member {Array} Parameters
 */
CreateHITRequestHITReviewPolicy.prototype['Parameters'] = undefined;


// Implement ReviewPolicy interface:
/**
 * @member {String} PolicyName
 */
ReviewPolicy.prototype['PolicyName'] = undefined;
/**
 * @member {Array} Parameters
 */
ReviewPolicy.prototype['Parameters'] = undefined;




export default CreateHITRequestHITReviewPolicy;

