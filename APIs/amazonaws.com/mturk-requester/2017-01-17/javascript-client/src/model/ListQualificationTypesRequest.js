/**
 * Amazon Mechanical Turk
 * <fullname>Amazon Mechanical Turk API Reference</fullname>
 *
 * The version of the OpenAPI document: 2017-01-17
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The ListQualificationTypesRequest model module.
 * @module model/ListQualificationTypesRequest
 * @version 2017-01-17
 */
class ListQualificationTypesRequest {
    /**
     * Constructs a new <code>ListQualificationTypesRequest</code>.
     * @alias module:model/ListQualificationTypesRequest
     * @param mustBeRequestable {Boolean} 
     */
    constructor(mustBeRequestable) { 
        
        ListQualificationTypesRequest.initialize(this, mustBeRequestable);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, mustBeRequestable) { 
        obj['MustBeRequestable'] = mustBeRequestable;
    }

    /**
     * Constructs a <code>ListQualificationTypesRequest</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ListQualificationTypesRequest} obj Optional instance to populate.
     * @return {module:model/ListQualificationTypesRequest} The populated <code>ListQualificationTypesRequest</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ListQualificationTypesRequest();

            if (data.hasOwnProperty('Query')) {
                obj['Query'] = ApiClient.convertToType(data['Query'], 'String');
            }
            if (data.hasOwnProperty('MustBeRequestable')) {
                obj['MustBeRequestable'] = ApiClient.convertToType(data['MustBeRequestable'], 'Boolean');
            }
            if (data.hasOwnProperty('MustBeOwnedByCaller')) {
                obj['MustBeOwnedByCaller'] = ApiClient.convertToType(data['MustBeOwnedByCaller'], 'Boolean');
            }
            if (data.hasOwnProperty('NextToken')) {
                obj['NextToken'] = ApiClient.convertToType(data['NextToken'], 'String');
            }
            if (data.hasOwnProperty('MaxResults')) {
                obj['MaxResults'] = ApiClient.convertToType(data['MaxResults'], 'Number');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>ListQualificationTypesRequest</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>ListQualificationTypesRequest</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of ListQualificationTypesRequest.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // validate the optional field `Query`
        if (data['Query']) { // data not null
          String.validateJSON(data['Query']);
        }
        // validate the optional field `MustBeRequestable`
        if (data['MustBeRequestable']) { // data not null
          Boolean.validateJSON(data['MustBeRequestable']);
        }
        // validate the optional field `MustBeOwnedByCaller`
        if (data['MustBeOwnedByCaller']) { // data not null
          Boolean.validateJSON(data['MustBeOwnedByCaller']);
        }
        // ensure the json data is a string
        if (data['NextToken'] && !(typeof data['NextToken'] === 'string' || data['NextToken'] instanceof String)) {
            throw new Error("Expected the field `NextToken` to be a primitive type in the JSON string but got " + data['NextToken']);
        }
        // validate the optional field `MaxResults`
        if (data['MaxResults']) { // data not null
          Number.validateJSON(data['MaxResults']);
        }

        return true;
    }


}

ListQualificationTypesRequest.RequiredProperties = ["MustBeRequestable"];

/**
 * @member {String} Query
 */
ListQualificationTypesRequest.prototype['Query'] = undefined;

/**
 * @member {Boolean} MustBeRequestable
 */
ListQualificationTypesRequest.prototype['MustBeRequestable'] = undefined;

/**
 * @member {Boolean} MustBeOwnedByCaller
 */
ListQualificationTypesRequest.prototype['MustBeOwnedByCaller'] = undefined;

/**
 * If the previous response was incomplete (because there is more data to retrieve), Amazon Mechanical Turk returns a pagination token in the response. You can use this pagination token to retrieve the next set of results. 
 * @member {String} NextToken
 */
ListQualificationTypesRequest.prototype['NextToken'] = undefined;

/**
 * @member {Number} MaxResults
 */
ListQualificationTypesRequest.prototype['MaxResults'] = undefined;






export default ListQualificationTypesRequest;

