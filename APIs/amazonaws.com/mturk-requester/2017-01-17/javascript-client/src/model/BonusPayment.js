/**
 * Amazon Mechanical Turk
 * <fullname>Amazon Mechanical Turk API Reference</fullname>
 *
 * The version of the OpenAPI document: 2017-01-17
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The BonusPayment model module.
 * @module model/BonusPayment
 * @version 2017-01-17
 */
class BonusPayment {
    /**
     * Constructs a new <code>BonusPayment</code>.
     * An object representing a Bonus payment paid to a Worker.
     * @alias module:model/BonusPayment
     */
    constructor() { 
        
        BonusPayment.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>BonusPayment</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/BonusPayment} obj Optional instance to populate.
     * @return {module:model/BonusPayment} The populated <code>BonusPayment</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new BonusPayment();

            if (data.hasOwnProperty('WorkerId')) {
                obj['WorkerId'] = ApiClient.convertToType(data['WorkerId'], 'String');
            }
            if (data.hasOwnProperty('BonusAmount')) {
                obj['BonusAmount'] = ApiClient.convertToType(data['BonusAmount'], 'String');
            }
            if (data.hasOwnProperty('AssignmentId')) {
                obj['AssignmentId'] = ApiClient.convertToType(data['AssignmentId'], 'String');
            }
            if (data.hasOwnProperty('Reason')) {
                obj['Reason'] = ApiClient.convertToType(data['Reason'], 'String');
            }
            if (data.hasOwnProperty('GrantTime')) {
                obj['GrantTime'] = ApiClient.convertToType(data['GrantTime'], 'Date');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>BonusPayment</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>BonusPayment</code>.
     */
    static validateJSON(data) {
        // validate the optional field `WorkerId`
        if (data['WorkerId']) { // data not null
          String.validateJSON(data['WorkerId']);
        }
        // ensure the json data is a string
        if (data['BonusAmount'] && !(typeof data['BonusAmount'] === 'string' || data['BonusAmount'] instanceof String)) {
            throw new Error("Expected the field `BonusAmount` to be a primitive type in the JSON string but got " + data['BonusAmount']);
        }
        // validate the optional field `AssignmentId`
        if (data['AssignmentId']) { // data not null
          String.validateJSON(data['AssignmentId']);
        }
        // validate the optional field `Reason`
        if (data['Reason']) { // data not null
          String.validateJSON(data['Reason']);
        }
        // validate the optional field `GrantTime`
        if (data['GrantTime']) { // data not null
          Date.validateJSON(data['GrantTime']);
        }

        return true;
    }


}



/**
 * @member {String} WorkerId
 */
BonusPayment.prototype['WorkerId'] = undefined;

/**
 * A string representing a currency amount.
 * @member {String} BonusAmount
 */
BonusPayment.prototype['BonusAmount'] = undefined;

/**
 * @member {String} AssignmentId
 */
BonusPayment.prototype['AssignmentId'] = undefined;

/**
 * @member {String} Reason
 */
BonusPayment.prototype['Reason'] = undefined;

/**
 * @member {Date} GrantTime
 */
BonusPayment.prototype['GrantTime'] = undefined;






export default BonusPayment;

