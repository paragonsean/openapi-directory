/**
 * Amazon Mechanical Turk
 * <fullname>Amazon Mechanical Turk API Reference</fullname>
 *
 * The version of the OpenAPI document: 2017-01-17
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The NotifyWorkersRequest model module.
 * @module model/NotifyWorkersRequest
 * @version 2017-01-17
 */
class NotifyWorkersRequest {
    /**
     * Constructs a new <code>NotifyWorkersRequest</code>.
     * @alias module:model/NotifyWorkersRequest
     * @param subject {String} 
     * @param messageText {String} 
     * @param workerIds {Array} 
     */
    constructor(subject, messageText, workerIds) { 
        
        NotifyWorkersRequest.initialize(this, subject, messageText, workerIds);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, subject, messageText, workerIds) { 
        obj['Subject'] = subject;
        obj['MessageText'] = messageText;
        obj['WorkerIds'] = workerIds;
    }

    /**
     * Constructs a <code>NotifyWorkersRequest</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/NotifyWorkersRequest} obj Optional instance to populate.
     * @return {module:model/NotifyWorkersRequest} The populated <code>NotifyWorkersRequest</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new NotifyWorkersRequest();

            if (data.hasOwnProperty('Subject')) {
                obj['Subject'] = ApiClient.convertToType(data['Subject'], 'String');
            }
            if (data.hasOwnProperty('MessageText')) {
                obj['MessageText'] = ApiClient.convertToType(data['MessageText'], 'String');
            }
            if (data.hasOwnProperty('WorkerIds')) {
                obj['WorkerIds'] = ApiClient.convertToType(data['WorkerIds'], Array);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>NotifyWorkersRequest</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>NotifyWorkersRequest</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of NotifyWorkersRequest.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // validate the optional field `Subject`
        if (data['Subject']) { // data not null
          String.validateJSON(data['Subject']);
        }
        // validate the optional field `MessageText`
        if (data['MessageText']) { // data not null
          String.validateJSON(data['MessageText']);
        }
        // validate the optional field `WorkerIds`
        if (data['WorkerIds']) { // data not null
          Array.validateJSON(data['WorkerIds']);
        }

        return true;
    }


}

NotifyWorkersRequest.RequiredProperties = ["Subject", "MessageText", "WorkerIds"];

/**
 * @member {String} Subject
 */
NotifyWorkersRequest.prototype['Subject'] = undefined;

/**
 * @member {String} MessageText
 */
NotifyWorkersRequest.prototype['MessageText'] = undefined;

/**
 * @member {Array} WorkerIds
 */
NotifyWorkersRequest.prototype['WorkerIds'] = undefined;






export default NotifyWorkersRequest;

