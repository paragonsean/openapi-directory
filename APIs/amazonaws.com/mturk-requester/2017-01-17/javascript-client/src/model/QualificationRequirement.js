/**
 * Amazon Mechanical Turk
 * <fullname>Amazon Mechanical Turk API Reference</fullname>
 *
 * The version of the OpenAPI document: 2017-01-17
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import Comparator from './Comparator';
import HITAccessActions from './HITAccessActions';

/**
 * The QualificationRequirement model module.
 * @module model/QualificationRequirement
 * @version 2017-01-17
 */
class QualificationRequirement {
    /**
     * Constructs a new <code>QualificationRequirement</code>.
     *  The QualificationRequirement data structure describes a Qualification that a Worker must have before the Worker is allowed to accept a HIT. A requirement may optionally state that a Worker must have the Qualification in order to preview the HIT, or see the HIT in search results. 
     * @alias module:model/QualificationRequirement
     * @param qualificationTypeId {String} 
     * @param comparator {module:model/Comparator} 
     */
    constructor(qualificationTypeId, comparator) { 
        
        QualificationRequirement.initialize(this, qualificationTypeId, comparator);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, qualificationTypeId, comparator) { 
        obj['QualificationTypeId'] = qualificationTypeId;
        obj['Comparator'] = comparator;
    }

    /**
     * Constructs a <code>QualificationRequirement</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/QualificationRequirement} obj Optional instance to populate.
     * @return {module:model/QualificationRequirement} The populated <code>QualificationRequirement</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new QualificationRequirement();

            if (data.hasOwnProperty('QualificationTypeId')) {
                obj['QualificationTypeId'] = ApiClient.convertToType(data['QualificationTypeId'], 'String');
            }
            if (data.hasOwnProperty('Comparator')) {
                obj['Comparator'] = ApiClient.convertToType(data['Comparator'], Comparator);
            }
            if (data.hasOwnProperty('IntegerValues')) {
                obj['IntegerValues'] = ApiClient.convertToType(data['IntegerValues'], Array);
            }
            if (data.hasOwnProperty('LocaleValues')) {
                obj['LocaleValues'] = ApiClient.convertToType(data['LocaleValues'], Array);
            }
            if (data.hasOwnProperty('RequiredToPreview')) {
                obj['RequiredToPreview'] = ApiClient.convertToType(data['RequiredToPreview'], 'Boolean');
            }
            if (data.hasOwnProperty('ActionsGuarded')) {
                obj['ActionsGuarded'] = ApiClient.convertToType(data['ActionsGuarded'], HITAccessActions);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>QualificationRequirement</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>QualificationRequirement</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of QualificationRequirement.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // validate the optional field `QualificationTypeId`
        if (data['QualificationTypeId']) { // data not null
          String.validateJSON(data['QualificationTypeId']);
        }
        // validate the optional field `Comparator`
        if (data['Comparator']) { // data not null
          Comparator.validateJSON(data['Comparator']);
        }
        // validate the optional field `IntegerValues`
        if (data['IntegerValues']) { // data not null
          Array.validateJSON(data['IntegerValues']);
        }
        // validate the optional field `LocaleValues`
        if (data['LocaleValues']) { // data not null
          Array.validateJSON(data['LocaleValues']);
        }
        // validate the optional field `RequiredToPreview`
        if (data['RequiredToPreview']) { // data not null
          Boolean.validateJSON(data['RequiredToPreview']);
        }
        // validate the optional field `ActionsGuarded`
        if (data['ActionsGuarded']) { // data not null
          HITAccessActions.validateJSON(data['ActionsGuarded']);
        }

        return true;
    }


}

QualificationRequirement.RequiredProperties = ["QualificationTypeId", "Comparator"];

/**
 * @member {String} QualificationTypeId
 */
QualificationRequirement.prototype['QualificationTypeId'] = undefined;

/**
 * @member {module:model/Comparator} Comparator
 */
QualificationRequirement.prototype['Comparator'] = undefined;

/**
 * @member {Array} IntegerValues
 */
QualificationRequirement.prototype['IntegerValues'] = undefined;

/**
 * @member {Array} LocaleValues
 */
QualificationRequirement.prototype['LocaleValues'] = undefined;

/**
 * @member {Boolean} RequiredToPreview
 */
QualificationRequirement.prototype['RequiredToPreview'] = undefined;

/**
 * @member {module:model/HITAccessActions} ActionsGuarded
 */
QualificationRequirement.prototype['ActionsGuarded'] = undefined;






export default QualificationRequirement;

