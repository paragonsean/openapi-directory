/**
 * Amazon Mechanical Turk
 * <fullname>Amazon Mechanical Turk API Reference</fullname>
 *
 * The version of the OpenAPI document: 2017-01-17
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAICreateAdditionalAssignmentsForHITRequest.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAICreateAdditionalAssignmentsForHITRequest::OAICreateAdditionalAssignmentsForHITRequest(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAICreateAdditionalAssignmentsForHITRequest::OAICreateAdditionalAssignmentsForHITRequest() {
    this->initializeModel();
}

OAICreateAdditionalAssignmentsForHITRequest::~OAICreateAdditionalAssignmentsForHITRequest() {}

void OAICreateAdditionalAssignmentsForHITRequest::initializeModel() {

    m_hitid_isSet = false;
    m_hitid_isValid = false;

    m_number_of_additional_assignments_isSet = false;
    m_number_of_additional_assignments_isValid = false;

    m_unique_request_token_isSet = false;
    m_unique_request_token_isValid = false;
}

void OAICreateAdditionalAssignmentsForHITRequest::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAICreateAdditionalAssignmentsForHITRequest::fromJsonObject(QJsonObject json) {

    m_hitid_isValid = ::OpenAPI::fromJsonValue(m_hitid, json[QString("HITId")]);
    m_hitid_isSet = !json[QString("HITId")].isNull() && m_hitid_isValid;

    m_number_of_additional_assignments_isValid = ::OpenAPI::fromJsonValue(m_number_of_additional_assignments, json[QString("NumberOfAdditionalAssignments")]);
    m_number_of_additional_assignments_isSet = !json[QString("NumberOfAdditionalAssignments")].isNull() && m_number_of_additional_assignments_isValid;

    m_unique_request_token_isValid = ::OpenAPI::fromJsonValue(m_unique_request_token, json[QString("UniqueRequestToken")]);
    m_unique_request_token_isSet = !json[QString("UniqueRequestToken")].isNull() && m_unique_request_token_isValid;
}

QString OAICreateAdditionalAssignmentsForHITRequest::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAICreateAdditionalAssignmentsForHITRequest::asJsonObject() const {
    QJsonObject obj;
    if (m_hitid_isSet) {
        obj.insert(QString("HITId"), ::OpenAPI::toJsonValue(m_hitid));
    }
    if (m_number_of_additional_assignments_isSet) {
        obj.insert(QString("NumberOfAdditionalAssignments"), ::OpenAPI::toJsonValue(m_number_of_additional_assignments));
    }
    if (m_unique_request_token_isSet) {
        obj.insert(QString("UniqueRequestToken"), ::OpenAPI::toJsonValue(m_unique_request_token));
    }
    return obj;
}

QString OAICreateAdditionalAssignmentsForHITRequest::getHitid() const {
    return m_hitid;
}
void OAICreateAdditionalAssignmentsForHITRequest::setHitid(const QString &hitid) {
    m_hitid = hitid;
    m_hitid_isSet = true;
}

bool OAICreateAdditionalAssignmentsForHITRequest::is_hitid_Set() const{
    return m_hitid_isSet;
}

bool OAICreateAdditionalAssignmentsForHITRequest::is_hitid_Valid() const{
    return m_hitid_isValid;
}

qint32 OAICreateAdditionalAssignmentsForHITRequest::getNumberOfAdditionalAssignments() const {
    return m_number_of_additional_assignments;
}
void OAICreateAdditionalAssignmentsForHITRequest::setNumberOfAdditionalAssignments(const qint32 &number_of_additional_assignments) {
    m_number_of_additional_assignments = number_of_additional_assignments;
    m_number_of_additional_assignments_isSet = true;
}

bool OAICreateAdditionalAssignmentsForHITRequest::is_number_of_additional_assignments_Set() const{
    return m_number_of_additional_assignments_isSet;
}

bool OAICreateAdditionalAssignmentsForHITRequest::is_number_of_additional_assignments_Valid() const{
    return m_number_of_additional_assignments_isValid;
}

QString OAICreateAdditionalAssignmentsForHITRequest::getUniqueRequestToken() const {
    return m_unique_request_token;
}
void OAICreateAdditionalAssignmentsForHITRequest::setUniqueRequestToken(const QString &unique_request_token) {
    m_unique_request_token = unique_request_token;
    m_unique_request_token_isSet = true;
}

bool OAICreateAdditionalAssignmentsForHITRequest::is_unique_request_token_Set() const{
    return m_unique_request_token_isSet;
}

bool OAICreateAdditionalAssignmentsForHITRequest::is_unique_request_token_Valid() const{
    return m_unique_request_token_isValid;
}

bool OAICreateAdditionalAssignmentsForHITRequest::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_hitid_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_number_of_additional_assignments_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_unique_request_token_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAICreateAdditionalAssignmentsForHITRequest::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_hitid_isValid && m_number_of_additional_assignments_isValid && true;
}

} // namespace OpenAPI
