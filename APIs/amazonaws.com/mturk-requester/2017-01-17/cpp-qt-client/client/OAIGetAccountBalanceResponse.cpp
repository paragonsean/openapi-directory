/**
 * Amazon Mechanical Turk
 * <fullname>Amazon Mechanical Turk API Reference</fullname>
 *
 * The version of the OpenAPI document: 2017-01-17
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGetAccountBalanceResponse.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGetAccountBalanceResponse::OAIGetAccountBalanceResponse(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGetAccountBalanceResponse::OAIGetAccountBalanceResponse() {
    this->initializeModel();
}

OAIGetAccountBalanceResponse::~OAIGetAccountBalanceResponse() {}

void OAIGetAccountBalanceResponse::initializeModel() {

    m_available_balance_isSet = false;
    m_available_balance_isValid = false;

    m_on_hold_balance_isSet = false;
    m_on_hold_balance_isValid = false;
}

void OAIGetAccountBalanceResponse::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGetAccountBalanceResponse::fromJsonObject(QJsonObject json) {

    m_available_balance_isValid = ::OpenAPI::fromJsonValue(m_available_balance, json[QString("AvailableBalance")]);
    m_available_balance_isSet = !json[QString("AvailableBalance")].isNull() && m_available_balance_isValid;

    m_on_hold_balance_isValid = ::OpenAPI::fromJsonValue(m_on_hold_balance, json[QString("OnHoldBalance")]);
    m_on_hold_balance_isSet = !json[QString("OnHoldBalance")].isNull() && m_on_hold_balance_isValid;
}

QString OAIGetAccountBalanceResponse::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGetAccountBalanceResponse::asJsonObject() const {
    QJsonObject obj;
    if (m_available_balance_isSet) {
        obj.insert(QString("AvailableBalance"), ::OpenAPI::toJsonValue(m_available_balance));
    }
    if (m_on_hold_balance_isSet) {
        obj.insert(QString("OnHoldBalance"), ::OpenAPI::toJsonValue(m_on_hold_balance));
    }
    return obj;
}

QString OAIGetAccountBalanceResponse::getAvailableBalance() const {
    return m_available_balance;
}
void OAIGetAccountBalanceResponse::setAvailableBalance(const QString &available_balance) {
    m_available_balance = available_balance;
    m_available_balance_isSet = true;
}

bool OAIGetAccountBalanceResponse::is_available_balance_Set() const{
    return m_available_balance_isSet;
}

bool OAIGetAccountBalanceResponse::is_available_balance_Valid() const{
    return m_available_balance_isValid;
}

QString OAIGetAccountBalanceResponse::getOnHoldBalance() const {
    return m_on_hold_balance;
}
void OAIGetAccountBalanceResponse::setOnHoldBalance(const QString &on_hold_balance) {
    m_on_hold_balance = on_hold_balance;
    m_on_hold_balance_isSet = true;
}

bool OAIGetAccountBalanceResponse::is_on_hold_balance_Set() const{
    return m_on_hold_balance_isSet;
}

bool OAIGetAccountBalanceResponse::is_on_hold_balance_Valid() const{
    return m_on_hold_balance_isValid;
}

bool OAIGetAccountBalanceResponse::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_available_balance_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_on_hold_balance_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGetAccountBalanceResponse::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
