/**
 * Amazon Mechanical Turk
 * <fullname>Amazon Mechanical Turk API Reference</fullname>
 *
 * The version of the OpenAPI document: 2017-01-17
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAINotifyWorkersFailureCode.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAINotifyWorkersFailureCode::OAINotifyWorkersFailureCode(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAINotifyWorkersFailureCode::OAINotifyWorkersFailureCode() {
    this->initializeModel();
}

OAINotifyWorkersFailureCode::~OAINotifyWorkersFailureCode() {}

void OAINotifyWorkersFailureCode::initializeModel() {

    m_value_isSet = false;
    m_value_isValid = false;
    m_value = eOAINotifyWorkersFailureCode::INVALID_VALUE_OPENAPI_GENERATED;
}

void OAINotifyWorkersFailureCode::fromJson(QString jsonString) {
    
    if ( jsonString.compare("SoftFailure", Qt::CaseInsensitive) == 0) {
        m_value = eOAINotifyWorkersFailureCode::SOFTFAILURE;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("HardFailure", Qt::CaseInsensitive) == 0) {
        m_value = eOAINotifyWorkersFailureCode::HARDFAILURE;
        m_value_isSet = m_value_isValid = true;
    }
}

void OAINotifyWorkersFailureCode::fromJsonValue(QJsonValue json) {
fromJson(json.toString());
}

QString OAINotifyWorkersFailureCode::asJson() const {
    
    QString val;
    switch (m_value){
        case eOAINotifyWorkersFailureCode::SOFTFAILURE:
            val = "SoftFailure";
            break;
        case eOAINotifyWorkersFailureCode::HARDFAILURE:
            val = "HardFailure";
            break;
        default:
            break;
    }
    return val;
}

QJsonValue OAINotifyWorkersFailureCode::asJsonValue() const {
    
    return QJsonValue(asJson());
}


OAINotifyWorkersFailureCode::eOAINotifyWorkersFailureCode OAINotifyWorkersFailureCode::getValue() const {
    return m_value;
}

void OAINotifyWorkersFailureCode::setValue(const OAINotifyWorkersFailureCode::eOAINotifyWorkersFailureCode& value){
    m_value = value;
    m_value_isSet = true;
}
bool OAINotifyWorkersFailureCode::isSet() const {
    
    return m_value_isSet;
}

bool OAINotifyWorkersFailureCode::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_value_isValid;
}

} // namespace OpenAPI
