/**
 * Amazon Mechanical Turk
 * <fullname>Amazon Mechanical Turk API Reference</fullname>
 *
 * The version of the OpenAPI document: 2017-01-17
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIAcceptQualificationRequestRequest.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIAcceptQualificationRequestRequest::OAIAcceptQualificationRequestRequest(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIAcceptQualificationRequestRequest::OAIAcceptQualificationRequestRequest() {
    this->initializeModel();
}

OAIAcceptQualificationRequestRequest::~OAIAcceptQualificationRequestRequest() {}

void OAIAcceptQualificationRequestRequest::initializeModel() {

    m_qualification_request_id_isSet = false;
    m_qualification_request_id_isValid = false;

    m_integer_value_isSet = false;
    m_integer_value_isValid = false;
}

void OAIAcceptQualificationRequestRequest::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIAcceptQualificationRequestRequest::fromJsonObject(QJsonObject json) {

    m_qualification_request_id_isValid = ::OpenAPI::fromJsonValue(m_qualification_request_id, json[QString("QualificationRequestId")]);
    m_qualification_request_id_isSet = !json[QString("QualificationRequestId")].isNull() && m_qualification_request_id_isValid;

    m_integer_value_isValid = ::OpenAPI::fromJsonValue(m_integer_value, json[QString("IntegerValue")]);
    m_integer_value_isSet = !json[QString("IntegerValue")].isNull() && m_integer_value_isValid;
}

QString OAIAcceptQualificationRequestRequest::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIAcceptQualificationRequestRequest::asJsonObject() const {
    QJsonObject obj;
    if (m_qualification_request_id_isSet) {
        obj.insert(QString("QualificationRequestId"), ::OpenAPI::toJsonValue(m_qualification_request_id));
    }
    if (m_integer_value_isSet) {
        obj.insert(QString("IntegerValue"), ::OpenAPI::toJsonValue(m_integer_value));
    }
    return obj;
}

QString OAIAcceptQualificationRequestRequest::getQualificationRequestId() const {
    return m_qualification_request_id;
}
void OAIAcceptQualificationRequestRequest::setQualificationRequestId(const QString &qualification_request_id) {
    m_qualification_request_id = qualification_request_id;
    m_qualification_request_id_isSet = true;
}

bool OAIAcceptQualificationRequestRequest::is_qualification_request_id_Set() const{
    return m_qualification_request_id_isSet;
}

bool OAIAcceptQualificationRequestRequest::is_qualification_request_id_Valid() const{
    return m_qualification_request_id_isValid;
}

qint32 OAIAcceptQualificationRequestRequest::getIntegerValue() const {
    return m_integer_value;
}
void OAIAcceptQualificationRequestRequest::setIntegerValue(const qint32 &integer_value) {
    m_integer_value = integer_value;
    m_integer_value_isSet = true;
}

bool OAIAcceptQualificationRequestRequest::is_integer_value_Set() const{
    return m_integer_value_isSet;
}

bool OAIAcceptQualificationRequestRequest::is_integer_value_Valid() const{
    return m_integer_value_isValid;
}

bool OAIAcceptQualificationRequestRequest::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_qualification_request_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_integer_value_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIAcceptQualificationRequestRequest::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_qualification_request_id_isValid && true;
}

} // namespace OpenAPI
