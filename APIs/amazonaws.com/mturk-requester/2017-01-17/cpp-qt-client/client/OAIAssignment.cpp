/**
 * Amazon Mechanical Turk
 * <fullname>Amazon Mechanical Turk API Reference</fullname>
 *
 * The version of the OpenAPI document: 2017-01-17
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIAssignment.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIAssignment::OAIAssignment(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIAssignment::OAIAssignment() {
    this->initializeModel();
}

OAIAssignment::~OAIAssignment() {}

void OAIAssignment::initializeModel() {

    m_assignment_id_isSet = false;
    m_assignment_id_isValid = false;

    m_worker_id_isSet = false;
    m_worker_id_isValid = false;

    m_hitid_isSet = false;
    m_hitid_isValid = false;

    m_assignment_status_isSet = false;
    m_assignment_status_isValid = false;

    m_auto_approval_time_isSet = false;
    m_auto_approval_time_isValid = false;

    m_accept_time_isSet = false;
    m_accept_time_isValid = false;

    m_submit_time_isSet = false;
    m_submit_time_isValid = false;

    m_approval_time_isSet = false;
    m_approval_time_isValid = false;

    m_rejection_time_isSet = false;
    m_rejection_time_isValid = false;

    m_deadline_isSet = false;
    m_deadline_isValid = false;

    m_answer_isSet = false;
    m_answer_isValid = false;

    m_requester_feedback_isSet = false;
    m_requester_feedback_isValid = false;
}

void OAIAssignment::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIAssignment::fromJsonObject(QJsonObject json) {

    m_assignment_id_isValid = ::OpenAPI::fromJsonValue(m_assignment_id, json[QString("AssignmentId")]);
    m_assignment_id_isSet = !json[QString("AssignmentId")].isNull() && m_assignment_id_isValid;

    m_worker_id_isValid = ::OpenAPI::fromJsonValue(m_worker_id, json[QString("WorkerId")]);
    m_worker_id_isSet = !json[QString("WorkerId")].isNull() && m_worker_id_isValid;

    m_hitid_isValid = ::OpenAPI::fromJsonValue(m_hitid, json[QString("HITId")]);
    m_hitid_isSet = !json[QString("HITId")].isNull() && m_hitid_isValid;

    m_assignment_status_isValid = ::OpenAPI::fromJsonValue(m_assignment_status, json[QString("AssignmentStatus")]);
    m_assignment_status_isSet = !json[QString("AssignmentStatus")].isNull() && m_assignment_status_isValid;

    m_auto_approval_time_isValid = ::OpenAPI::fromJsonValue(m_auto_approval_time, json[QString("AutoApprovalTime")]);
    m_auto_approval_time_isSet = !json[QString("AutoApprovalTime")].isNull() && m_auto_approval_time_isValid;

    m_accept_time_isValid = ::OpenAPI::fromJsonValue(m_accept_time, json[QString("AcceptTime")]);
    m_accept_time_isSet = !json[QString("AcceptTime")].isNull() && m_accept_time_isValid;

    m_submit_time_isValid = ::OpenAPI::fromJsonValue(m_submit_time, json[QString("SubmitTime")]);
    m_submit_time_isSet = !json[QString("SubmitTime")].isNull() && m_submit_time_isValid;

    m_approval_time_isValid = ::OpenAPI::fromJsonValue(m_approval_time, json[QString("ApprovalTime")]);
    m_approval_time_isSet = !json[QString("ApprovalTime")].isNull() && m_approval_time_isValid;

    m_rejection_time_isValid = ::OpenAPI::fromJsonValue(m_rejection_time, json[QString("RejectionTime")]);
    m_rejection_time_isSet = !json[QString("RejectionTime")].isNull() && m_rejection_time_isValid;

    m_deadline_isValid = ::OpenAPI::fromJsonValue(m_deadline, json[QString("Deadline")]);
    m_deadline_isSet = !json[QString("Deadline")].isNull() && m_deadline_isValid;

    m_answer_isValid = ::OpenAPI::fromJsonValue(m_answer, json[QString("Answer")]);
    m_answer_isSet = !json[QString("Answer")].isNull() && m_answer_isValid;

    m_requester_feedback_isValid = ::OpenAPI::fromJsonValue(m_requester_feedback, json[QString("RequesterFeedback")]);
    m_requester_feedback_isSet = !json[QString("RequesterFeedback")].isNull() && m_requester_feedback_isValid;
}

QString OAIAssignment::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIAssignment::asJsonObject() const {
    QJsonObject obj;
    if (m_assignment_id_isSet) {
        obj.insert(QString("AssignmentId"), ::OpenAPI::toJsonValue(m_assignment_id));
    }
    if (m_worker_id_isSet) {
        obj.insert(QString("WorkerId"), ::OpenAPI::toJsonValue(m_worker_id));
    }
    if (m_hitid_isSet) {
        obj.insert(QString("HITId"), ::OpenAPI::toJsonValue(m_hitid));
    }
    if (m_assignment_status.isSet()) {
        obj.insert(QString("AssignmentStatus"), ::OpenAPI::toJsonValue(m_assignment_status));
    }
    if (m_auto_approval_time_isSet) {
        obj.insert(QString("AutoApprovalTime"), ::OpenAPI::toJsonValue(m_auto_approval_time));
    }
    if (m_accept_time_isSet) {
        obj.insert(QString("AcceptTime"), ::OpenAPI::toJsonValue(m_accept_time));
    }
    if (m_submit_time_isSet) {
        obj.insert(QString("SubmitTime"), ::OpenAPI::toJsonValue(m_submit_time));
    }
    if (m_approval_time_isSet) {
        obj.insert(QString("ApprovalTime"), ::OpenAPI::toJsonValue(m_approval_time));
    }
    if (m_rejection_time_isSet) {
        obj.insert(QString("RejectionTime"), ::OpenAPI::toJsonValue(m_rejection_time));
    }
    if (m_deadline_isSet) {
        obj.insert(QString("Deadline"), ::OpenAPI::toJsonValue(m_deadline));
    }
    if (m_answer_isSet) {
        obj.insert(QString("Answer"), ::OpenAPI::toJsonValue(m_answer));
    }
    if (m_requester_feedback_isSet) {
        obj.insert(QString("RequesterFeedback"), ::OpenAPI::toJsonValue(m_requester_feedback));
    }
    return obj;
}

QString OAIAssignment::getAssignmentId() const {
    return m_assignment_id;
}
void OAIAssignment::setAssignmentId(const QString &assignment_id) {
    m_assignment_id = assignment_id;
    m_assignment_id_isSet = true;
}

bool OAIAssignment::is_assignment_id_Set() const{
    return m_assignment_id_isSet;
}

bool OAIAssignment::is_assignment_id_Valid() const{
    return m_assignment_id_isValid;
}

QString OAIAssignment::getWorkerId() const {
    return m_worker_id;
}
void OAIAssignment::setWorkerId(const QString &worker_id) {
    m_worker_id = worker_id;
    m_worker_id_isSet = true;
}

bool OAIAssignment::is_worker_id_Set() const{
    return m_worker_id_isSet;
}

bool OAIAssignment::is_worker_id_Valid() const{
    return m_worker_id_isValid;
}

QString OAIAssignment::getHitid() const {
    return m_hitid;
}
void OAIAssignment::setHitid(const QString &hitid) {
    m_hitid = hitid;
    m_hitid_isSet = true;
}

bool OAIAssignment::is_hitid_Set() const{
    return m_hitid_isSet;
}

bool OAIAssignment::is_hitid_Valid() const{
    return m_hitid_isValid;
}

OAIAssignmentStatus OAIAssignment::getAssignmentStatus() const {
    return m_assignment_status;
}
void OAIAssignment::setAssignmentStatus(const OAIAssignmentStatus &assignment_status) {
    m_assignment_status = assignment_status;
    m_assignment_status_isSet = true;
}

bool OAIAssignment::is_assignment_status_Set() const{
    return m_assignment_status_isSet;
}

bool OAIAssignment::is_assignment_status_Valid() const{
    return m_assignment_status_isValid;
}

QDateTime OAIAssignment::getAutoApprovalTime() const {
    return m_auto_approval_time;
}
void OAIAssignment::setAutoApprovalTime(const QDateTime &auto_approval_time) {
    m_auto_approval_time = auto_approval_time;
    m_auto_approval_time_isSet = true;
}

bool OAIAssignment::is_auto_approval_time_Set() const{
    return m_auto_approval_time_isSet;
}

bool OAIAssignment::is_auto_approval_time_Valid() const{
    return m_auto_approval_time_isValid;
}

QDateTime OAIAssignment::getAcceptTime() const {
    return m_accept_time;
}
void OAIAssignment::setAcceptTime(const QDateTime &accept_time) {
    m_accept_time = accept_time;
    m_accept_time_isSet = true;
}

bool OAIAssignment::is_accept_time_Set() const{
    return m_accept_time_isSet;
}

bool OAIAssignment::is_accept_time_Valid() const{
    return m_accept_time_isValid;
}

QDateTime OAIAssignment::getSubmitTime() const {
    return m_submit_time;
}
void OAIAssignment::setSubmitTime(const QDateTime &submit_time) {
    m_submit_time = submit_time;
    m_submit_time_isSet = true;
}

bool OAIAssignment::is_submit_time_Set() const{
    return m_submit_time_isSet;
}

bool OAIAssignment::is_submit_time_Valid() const{
    return m_submit_time_isValid;
}

QDateTime OAIAssignment::getApprovalTime() const {
    return m_approval_time;
}
void OAIAssignment::setApprovalTime(const QDateTime &approval_time) {
    m_approval_time = approval_time;
    m_approval_time_isSet = true;
}

bool OAIAssignment::is_approval_time_Set() const{
    return m_approval_time_isSet;
}

bool OAIAssignment::is_approval_time_Valid() const{
    return m_approval_time_isValid;
}

QDateTime OAIAssignment::getRejectionTime() const {
    return m_rejection_time;
}
void OAIAssignment::setRejectionTime(const QDateTime &rejection_time) {
    m_rejection_time = rejection_time;
    m_rejection_time_isSet = true;
}

bool OAIAssignment::is_rejection_time_Set() const{
    return m_rejection_time_isSet;
}

bool OAIAssignment::is_rejection_time_Valid() const{
    return m_rejection_time_isValid;
}

QDateTime OAIAssignment::getDeadline() const {
    return m_deadline;
}
void OAIAssignment::setDeadline(const QDateTime &deadline) {
    m_deadline = deadline;
    m_deadline_isSet = true;
}

bool OAIAssignment::is_deadline_Set() const{
    return m_deadline_isSet;
}

bool OAIAssignment::is_deadline_Valid() const{
    return m_deadline_isValid;
}

QString OAIAssignment::getAnswer() const {
    return m_answer;
}
void OAIAssignment::setAnswer(const QString &answer) {
    m_answer = answer;
    m_answer_isSet = true;
}

bool OAIAssignment::is_answer_Set() const{
    return m_answer_isSet;
}

bool OAIAssignment::is_answer_Valid() const{
    return m_answer_isValid;
}

QString OAIAssignment::getRequesterFeedback() const {
    return m_requester_feedback;
}
void OAIAssignment::setRequesterFeedback(const QString &requester_feedback) {
    m_requester_feedback = requester_feedback;
    m_requester_feedback_isSet = true;
}

bool OAIAssignment::is_requester_feedback_Set() const{
    return m_requester_feedback_isSet;
}

bool OAIAssignment::is_requester_feedback_Valid() const{
    return m_requester_feedback_isValid;
}

bool OAIAssignment::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_assignment_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_worker_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_hitid_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_assignment_status.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_auto_approval_time_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_accept_time_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_submit_time_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_approval_time_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_rejection_time_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_deadline_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_answer_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_requester_feedback_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIAssignment::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
