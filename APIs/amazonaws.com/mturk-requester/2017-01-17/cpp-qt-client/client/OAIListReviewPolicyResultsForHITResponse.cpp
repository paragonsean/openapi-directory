/**
 * Amazon Mechanical Turk
 * <fullname>Amazon Mechanical Turk API Reference</fullname>
 *
 * The version of the OpenAPI document: 2017-01-17
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIListReviewPolicyResultsForHITResponse.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIListReviewPolicyResultsForHITResponse::OAIListReviewPolicyResultsForHITResponse(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIListReviewPolicyResultsForHITResponse::OAIListReviewPolicyResultsForHITResponse() {
    this->initializeModel();
}

OAIListReviewPolicyResultsForHITResponse::~OAIListReviewPolicyResultsForHITResponse() {}

void OAIListReviewPolicyResultsForHITResponse::initializeModel() {

    m_hitid_isSet = false;
    m_hitid_isValid = false;

    m_assignment_review_policy_isSet = false;
    m_assignment_review_policy_isValid = false;

    m_hit_review_policy_isSet = false;
    m_hit_review_policy_isValid = false;

    m_assignment_review_report_isSet = false;
    m_assignment_review_report_isValid = false;

    m_hit_review_report_isSet = false;
    m_hit_review_report_isValid = false;

    m_next_token_isSet = false;
    m_next_token_isValid = false;
}

void OAIListReviewPolicyResultsForHITResponse::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIListReviewPolicyResultsForHITResponse::fromJsonObject(QJsonObject json) {

    m_hitid_isValid = ::OpenAPI::fromJsonValue(m_hitid, json[QString("HITId")]);
    m_hitid_isSet = !json[QString("HITId")].isNull() && m_hitid_isValid;

    m_assignment_review_policy_isValid = ::OpenAPI::fromJsonValue(m_assignment_review_policy, json[QString("AssignmentReviewPolicy")]);
    m_assignment_review_policy_isSet = !json[QString("AssignmentReviewPolicy")].isNull() && m_assignment_review_policy_isValid;

    m_hit_review_policy_isValid = ::OpenAPI::fromJsonValue(m_hit_review_policy, json[QString("HITReviewPolicy")]);
    m_hit_review_policy_isSet = !json[QString("HITReviewPolicy")].isNull() && m_hit_review_policy_isValid;

    m_assignment_review_report_isValid = ::OpenAPI::fromJsonValue(m_assignment_review_report, json[QString("AssignmentReviewReport")]);
    m_assignment_review_report_isSet = !json[QString("AssignmentReviewReport")].isNull() && m_assignment_review_report_isValid;

    m_hit_review_report_isValid = ::OpenAPI::fromJsonValue(m_hit_review_report, json[QString("HITReviewReport")]);
    m_hit_review_report_isSet = !json[QString("HITReviewReport")].isNull() && m_hit_review_report_isValid;

    m_next_token_isValid = ::OpenAPI::fromJsonValue(m_next_token, json[QString("NextToken")]);
    m_next_token_isSet = !json[QString("NextToken")].isNull() && m_next_token_isValid;
}

QString OAIListReviewPolicyResultsForHITResponse::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIListReviewPolicyResultsForHITResponse::asJsonObject() const {
    QJsonObject obj;
    if (m_hitid_isSet) {
        obj.insert(QString("HITId"), ::OpenAPI::toJsonValue(m_hitid));
    }
    if (m_assignment_review_policy.isSet()) {
        obj.insert(QString("AssignmentReviewPolicy"), ::OpenAPI::toJsonValue(m_assignment_review_policy));
    }
    if (m_hit_review_policy.isSet()) {
        obj.insert(QString("HITReviewPolicy"), ::OpenAPI::toJsonValue(m_hit_review_policy));
    }
    if (m_assignment_review_report.isSet()) {
        obj.insert(QString("AssignmentReviewReport"), ::OpenAPI::toJsonValue(m_assignment_review_report));
    }
    if (m_hit_review_report.isSet()) {
        obj.insert(QString("HITReviewReport"), ::OpenAPI::toJsonValue(m_hit_review_report));
    }
    if (m_next_token_isSet) {
        obj.insert(QString("NextToken"), ::OpenAPI::toJsonValue(m_next_token));
    }
    return obj;
}

QString OAIListReviewPolicyResultsForHITResponse::getHitid() const {
    return m_hitid;
}
void OAIListReviewPolicyResultsForHITResponse::setHitid(const QString &hitid) {
    m_hitid = hitid;
    m_hitid_isSet = true;
}

bool OAIListReviewPolicyResultsForHITResponse::is_hitid_Set() const{
    return m_hitid_isSet;
}

bool OAIListReviewPolicyResultsForHITResponse::is_hitid_Valid() const{
    return m_hitid_isValid;
}

OAIListReviewPolicyResultsForHITResponse_AssignmentReviewPolicy OAIListReviewPolicyResultsForHITResponse::getAssignmentReviewPolicy() const {
    return m_assignment_review_policy;
}
void OAIListReviewPolicyResultsForHITResponse::setAssignmentReviewPolicy(const OAIListReviewPolicyResultsForHITResponse_AssignmentReviewPolicy &assignment_review_policy) {
    m_assignment_review_policy = assignment_review_policy;
    m_assignment_review_policy_isSet = true;
}

bool OAIListReviewPolicyResultsForHITResponse::is_assignment_review_policy_Set() const{
    return m_assignment_review_policy_isSet;
}

bool OAIListReviewPolicyResultsForHITResponse::is_assignment_review_policy_Valid() const{
    return m_assignment_review_policy_isValid;
}

OAIListReviewPolicyResultsForHITResponse_HITReviewPolicy OAIListReviewPolicyResultsForHITResponse::getHitReviewPolicy() const {
    return m_hit_review_policy;
}
void OAIListReviewPolicyResultsForHITResponse::setHitReviewPolicy(const OAIListReviewPolicyResultsForHITResponse_HITReviewPolicy &hit_review_policy) {
    m_hit_review_policy = hit_review_policy;
    m_hit_review_policy_isSet = true;
}

bool OAIListReviewPolicyResultsForHITResponse::is_hit_review_policy_Set() const{
    return m_hit_review_policy_isSet;
}

bool OAIListReviewPolicyResultsForHITResponse::is_hit_review_policy_Valid() const{
    return m_hit_review_policy_isValid;
}

OAIListReviewPolicyResultsForHITResponse_AssignmentReviewReport OAIListReviewPolicyResultsForHITResponse::getAssignmentReviewReport() const {
    return m_assignment_review_report;
}
void OAIListReviewPolicyResultsForHITResponse::setAssignmentReviewReport(const OAIListReviewPolicyResultsForHITResponse_AssignmentReviewReport &assignment_review_report) {
    m_assignment_review_report = assignment_review_report;
    m_assignment_review_report_isSet = true;
}

bool OAIListReviewPolicyResultsForHITResponse::is_assignment_review_report_Set() const{
    return m_assignment_review_report_isSet;
}

bool OAIListReviewPolicyResultsForHITResponse::is_assignment_review_report_Valid() const{
    return m_assignment_review_report_isValid;
}

OAIListReviewPolicyResultsForHITResponse_HITReviewReport OAIListReviewPolicyResultsForHITResponse::getHitReviewReport() const {
    return m_hit_review_report;
}
void OAIListReviewPolicyResultsForHITResponse::setHitReviewReport(const OAIListReviewPolicyResultsForHITResponse_HITReviewReport &hit_review_report) {
    m_hit_review_report = hit_review_report;
    m_hit_review_report_isSet = true;
}

bool OAIListReviewPolicyResultsForHITResponse::is_hit_review_report_Set() const{
    return m_hit_review_report_isSet;
}

bool OAIListReviewPolicyResultsForHITResponse::is_hit_review_report_Valid() const{
    return m_hit_review_report_isValid;
}

QString OAIListReviewPolicyResultsForHITResponse::getNextToken() const {
    return m_next_token;
}
void OAIListReviewPolicyResultsForHITResponse::setNextToken(const QString &next_token) {
    m_next_token = next_token;
    m_next_token_isSet = true;
}

bool OAIListReviewPolicyResultsForHITResponse::is_next_token_Set() const{
    return m_next_token_isSet;
}

bool OAIListReviewPolicyResultsForHITResponse::is_next_token_Valid() const{
    return m_next_token_isValid;
}

bool OAIListReviewPolicyResultsForHITResponse::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_hitid_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_assignment_review_policy.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_hit_review_policy.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_assignment_review_report.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_hit_review_report.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_next_token_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIListReviewPolicyResultsForHITResponse::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
