/**
 * Amazon Mechanical Turk
 * <fullname>Amazon Mechanical Turk API Reference</fullname>
 *
 * The version of the OpenAPI document: 2017-01-17
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAICreateHITRequest.h
 *
 * 
 */

#ifndef OAICreateHITRequest_H
#define OAICreateHITRequest_H

#include <QJsonObject>

#include "OAICreateHITRequest_AssignmentReviewPolicy.h"
#include "OAICreateHITRequest_HITReviewPolicy.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAICreateHITRequest_AssignmentReviewPolicy;
class OAICreateHITRequest_HITReviewPolicy;

class OAICreateHITRequest : public OAIObject {
public:
    OAICreateHITRequest();
    OAICreateHITRequest(QString json);
    ~OAICreateHITRequest() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    qint32 getMaxAssignments() const;
    void setMaxAssignments(const qint32 &max_assignments);
    bool is_max_assignments_Set() const;
    bool is_max_assignments_Valid() const;

    qint32 getAutoApprovalDelayInSeconds() const;
    void setAutoApprovalDelayInSeconds(const qint32 &auto_approval_delay_in_seconds);
    bool is_auto_approval_delay_in_seconds_Set() const;
    bool is_auto_approval_delay_in_seconds_Valid() const;

    qint32 getLifetimeInSeconds() const;
    void setLifetimeInSeconds(const qint32 &lifetime_in_seconds);
    bool is_lifetime_in_seconds_Set() const;
    bool is_lifetime_in_seconds_Valid() const;

    qint32 getAssignmentDurationInSeconds() const;
    void setAssignmentDurationInSeconds(const qint32 &assignment_duration_in_seconds);
    bool is_assignment_duration_in_seconds_Set() const;
    bool is_assignment_duration_in_seconds_Valid() const;

    QString getReward() const;
    void setReward(const QString &reward);
    bool is_reward_Set() const;
    bool is_reward_Valid() const;

    QString getTitle() const;
    void setTitle(const QString &title);
    bool is_title_Set() const;
    bool is_title_Valid() const;

    QString getKeywords() const;
    void setKeywords(const QString &keywords);
    bool is_keywords_Set() const;
    bool is_keywords_Valid() const;

    QString getDescription() const;
    void setDescription(const QString &description);
    bool is_description_Set() const;
    bool is_description_Valid() const;

    QString getQuestion() const;
    void setQuestion(const QString &question);
    bool is_question_Set() const;
    bool is_question_Valid() const;

    QString getRequesterAnnotation() const;
    void setRequesterAnnotation(const QString &requester_annotation);
    bool is_requester_annotation_Set() const;
    bool is_requester_annotation_Valid() const;

    QList getQualificationRequirements() const;
    void setQualificationRequirements(const QList &qualification_requirements);
    bool is_qualification_requirements_Set() const;
    bool is_qualification_requirements_Valid() const;

    QString getUniqueRequestToken() const;
    void setUniqueRequestToken(const QString &unique_request_token);
    bool is_unique_request_token_Set() const;
    bool is_unique_request_token_Valid() const;

    OAICreateHITRequest_AssignmentReviewPolicy getAssignmentReviewPolicy() const;
    void setAssignmentReviewPolicy(const OAICreateHITRequest_AssignmentReviewPolicy &assignment_review_policy);
    bool is_assignment_review_policy_Set() const;
    bool is_assignment_review_policy_Valid() const;

    OAICreateHITRequest_HITReviewPolicy getHitReviewPolicy() const;
    void setHitReviewPolicy(const OAICreateHITRequest_HITReviewPolicy &hit_review_policy);
    bool is_hit_review_policy_Set() const;
    bool is_hit_review_policy_Valid() const;

    QString getHitLayoutId() const;
    void setHitLayoutId(const QString &hit_layout_id);
    bool is_hit_layout_id_Set() const;
    bool is_hit_layout_id_Valid() const;

    QList getHitLayoutParameters() const;
    void setHitLayoutParameters(const QList &hit_layout_parameters);
    bool is_hit_layout_parameters_Set() const;
    bool is_hit_layout_parameters_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    qint32 m_max_assignments;
    bool m_max_assignments_isSet;
    bool m_max_assignments_isValid;

    qint32 m_auto_approval_delay_in_seconds;
    bool m_auto_approval_delay_in_seconds_isSet;
    bool m_auto_approval_delay_in_seconds_isValid;

    qint32 m_lifetime_in_seconds;
    bool m_lifetime_in_seconds_isSet;
    bool m_lifetime_in_seconds_isValid;

    qint32 m_assignment_duration_in_seconds;
    bool m_assignment_duration_in_seconds_isSet;
    bool m_assignment_duration_in_seconds_isValid;

    QString m_reward;
    bool m_reward_isSet;
    bool m_reward_isValid;

    QString m_title;
    bool m_title_isSet;
    bool m_title_isValid;

    QString m_keywords;
    bool m_keywords_isSet;
    bool m_keywords_isValid;

    QString m_description;
    bool m_description_isSet;
    bool m_description_isValid;

    QString m_question;
    bool m_question_isSet;
    bool m_question_isValid;

    QString m_requester_annotation;
    bool m_requester_annotation_isSet;
    bool m_requester_annotation_isValid;

    QList m_qualification_requirements;
    bool m_qualification_requirements_isSet;
    bool m_qualification_requirements_isValid;

    QString m_unique_request_token;
    bool m_unique_request_token_isSet;
    bool m_unique_request_token_isValid;

    OAICreateHITRequest_AssignmentReviewPolicy m_assignment_review_policy;
    bool m_assignment_review_policy_isSet;
    bool m_assignment_review_policy_isValid;

    OAICreateHITRequest_HITReviewPolicy m_hit_review_policy;
    bool m_hit_review_policy_isSet;
    bool m_hit_review_policy_isValid;

    QString m_hit_layout_id;
    bool m_hit_layout_id_isSet;
    bool m_hit_layout_id_isValid;

    QList m_hit_layout_parameters;
    bool m_hit_layout_parameters_isSet;
    bool m_hit_layout_parameters_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAICreateHITRequest)

#endif // OAICreateHITRequest_H
