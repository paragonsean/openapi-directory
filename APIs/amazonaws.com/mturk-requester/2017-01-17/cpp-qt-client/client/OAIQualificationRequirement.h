/**
 * Amazon Mechanical Turk
 * <fullname>Amazon Mechanical Turk API Reference</fullname>
 *
 * The version of the OpenAPI document: 2017-01-17
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIQualificationRequirement.h
 *
 *  The QualificationRequirement data structure describes a Qualification that a Worker must have before the Worker is allowed to accept a HIT. A requirement may optionally state that a Worker must have the Qualification in order to preview the HIT, or see the HIT in search results. 
 */

#ifndef OAIQualificationRequirement_H
#define OAIQualificationRequirement_H

#include <QJsonObject>

#include "OAIComparator.h"
#include "OAIHITAccessActions.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIQualificationRequirement : public OAIObject {
public:
    OAIQualificationRequirement();
    OAIQualificationRequirement(QString json);
    ~OAIQualificationRequirement() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getQualificationTypeId() const;
    void setQualificationTypeId(const QString &qualification_type_id);
    bool is_qualification_type_id_Set() const;
    bool is_qualification_type_id_Valid() const;

    OAIComparator getComparator() const;
    void setComparator(const OAIComparator &comparator);
    bool is_comparator_Set() const;
    bool is_comparator_Valid() const;

    QList getIntegerValues() const;
    void setIntegerValues(const QList &integer_values);
    bool is_integer_values_Set() const;
    bool is_integer_values_Valid() const;

    QList getLocaleValues() const;
    void setLocaleValues(const QList &locale_values);
    bool is_locale_values_Set() const;
    bool is_locale_values_Valid() const;

    bool getRequiredToPreview() const;
    void setRequiredToPreview(const bool &required_to_preview);
    bool is_required_to_preview_Set() const;
    bool is_required_to_preview_Valid() const;

    OAIHITAccessActions getActionsGuarded() const;
    void setActionsGuarded(const OAIHITAccessActions &actions_guarded);
    bool is_actions_guarded_Set() const;
    bool is_actions_guarded_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_qualification_type_id;
    bool m_qualification_type_id_isSet;
    bool m_qualification_type_id_isValid;

    OAIComparator m_comparator;
    bool m_comparator_isSet;
    bool m_comparator_isValid;

    QList m_integer_values;
    bool m_integer_values_isSet;
    bool m_integer_values_isValid;

    QList m_locale_values;
    bool m_locale_values_isSet;
    bool m_locale_values_isValid;

    bool m_required_to_preview;
    bool m_required_to_preview_isSet;
    bool m_required_to_preview_isValid;

    OAIHITAccessActions m_actions_guarded;
    bool m_actions_guarded_isSet;
    bool m_actions_guarded_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIQualificationRequirement)

#endif // OAIQualificationRequirement_H
