/**
 * Amazon Mechanical Turk
 * <fullname>Amazon Mechanical Turk API Reference</fullname>
 *
 * The version of the OpenAPI document: 2017-01-17
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIReviewActionStatus.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIReviewActionStatus::OAIReviewActionStatus(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIReviewActionStatus::OAIReviewActionStatus() {
    this->initializeModel();
}

OAIReviewActionStatus::~OAIReviewActionStatus() {}

void OAIReviewActionStatus::initializeModel() {

    m_value_isSet = false;
    m_value_isValid = false;
    m_value = eOAIReviewActionStatus::INVALID_VALUE_OPENAPI_GENERATED;
}

void OAIReviewActionStatus::fromJson(QString jsonString) {
    
    if ( jsonString.compare("Intended", Qt::CaseInsensitive) == 0) {
        m_value = eOAIReviewActionStatus::INTENDED;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("Succeeded", Qt::CaseInsensitive) == 0) {
        m_value = eOAIReviewActionStatus::SUCCEEDED;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("Failed", Qt::CaseInsensitive) == 0) {
        m_value = eOAIReviewActionStatus::FAILED;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("Cancelled", Qt::CaseInsensitive) == 0) {
        m_value = eOAIReviewActionStatus::CANCELLED;
        m_value_isSet = m_value_isValid = true;
    }
}

void OAIReviewActionStatus::fromJsonValue(QJsonValue json) {
fromJson(json.toString());
}

QString OAIReviewActionStatus::asJson() const {
    
    QString val;
    switch (m_value){
        case eOAIReviewActionStatus::INTENDED:
            val = "Intended";
            break;
        case eOAIReviewActionStatus::SUCCEEDED:
            val = "Succeeded";
            break;
        case eOAIReviewActionStatus::FAILED:
            val = "Failed";
            break;
        case eOAIReviewActionStatus::CANCELLED:
            val = "Cancelled";
            break;
        default:
            break;
    }
    return val;
}

QJsonValue OAIReviewActionStatus::asJsonValue() const {
    
    return QJsonValue(asJson());
}


OAIReviewActionStatus::eOAIReviewActionStatus OAIReviewActionStatus::getValue() const {
    return m_value;
}

void OAIReviewActionStatus::setValue(const OAIReviewActionStatus::eOAIReviewActionStatus& value){
    m_value = value;
    m_value_isSet = true;
}
bool OAIReviewActionStatus::isSet() const {
    
    return m_value_isSet;
}

bool OAIReviewActionStatus::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_value_isValid;
}

} // namespace OpenAPI
