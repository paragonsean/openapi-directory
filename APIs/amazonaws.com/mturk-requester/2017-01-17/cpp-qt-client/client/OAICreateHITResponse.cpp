/**
 * Amazon Mechanical Turk
 * <fullname>Amazon Mechanical Turk API Reference</fullname>
 *
 * The version of the OpenAPI document: 2017-01-17
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAICreateHITResponse.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAICreateHITResponse::OAICreateHITResponse(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAICreateHITResponse::OAICreateHITResponse() {
    this->initializeModel();
}

OAICreateHITResponse::~OAICreateHITResponse() {}

void OAICreateHITResponse::initializeModel() {

    m_hit_isSet = false;
    m_hit_isValid = false;
}

void OAICreateHITResponse::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAICreateHITResponse::fromJsonObject(QJsonObject json) {

    m_hit_isValid = ::OpenAPI::fromJsonValue(m_hit, json[QString("HIT")]);
    m_hit_isSet = !json[QString("HIT")].isNull() && m_hit_isValid;
}

QString OAICreateHITResponse::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAICreateHITResponse::asJsonObject() const {
    QJsonObject obj;
    if (m_hit.isSet()) {
        obj.insert(QString("HIT"), ::OpenAPI::toJsonValue(m_hit));
    }
    return obj;
}

OAICreateHITResponse_HIT OAICreateHITResponse::getHit() const {
    return m_hit;
}
void OAICreateHITResponse::setHit(const OAICreateHITResponse_HIT &hit) {
    m_hit = hit;
    m_hit_isSet = true;
}

bool OAICreateHITResponse::is_hit_Set() const{
    return m_hit_isSet;
}

bool OAICreateHITResponse::is_hit_Valid() const{
    return m_hit_isValid;
}

bool OAICreateHITResponse::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_hit.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAICreateHITResponse::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
