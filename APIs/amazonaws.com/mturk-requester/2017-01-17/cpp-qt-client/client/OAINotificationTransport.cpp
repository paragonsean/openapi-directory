/**
 * Amazon Mechanical Turk
 * <fullname>Amazon Mechanical Turk API Reference</fullname>
 *
 * The version of the OpenAPI document: 2017-01-17
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAINotificationTransport.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAINotificationTransport::OAINotificationTransport(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAINotificationTransport::OAINotificationTransport() {
    this->initializeModel();
}

OAINotificationTransport::~OAINotificationTransport() {}

void OAINotificationTransport::initializeModel() {

    m_value_isSet = false;
    m_value_isValid = false;
    m_value = eOAINotificationTransport::INVALID_VALUE_OPENAPI_GENERATED;
}

void OAINotificationTransport::fromJson(QString jsonString) {
    
    if ( jsonString.compare("Email", Qt::CaseInsensitive) == 0) {
        m_value = eOAINotificationTransport::EMAIL;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("SQS", Qt::CaseInsensitive) == 0) {
        m_value = eOAINotificationTransport::SQS;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("SNS", Qt::CaseInsensitive) == 0) {
        m_value = eOAINotificationTransport::SNS;
        m_value_isSet = m_value_isValid = true;
    }
}

void OAINotificationTransport::fromJsonValue(QJsonValue json) {
fromJson(json.toString());
}

QString OAINotificationTransport::asJson() const {
    
    QString val;
    switch (m_value){
        case eOAINotificationTransport::EMAIL:
            val = "Email";
            break;
        case eOAINotificationTransport::SQS:
            val = "SQS";
            break;
        case eOAINotificationTransport::SNS:
            val = "SNS";
            break;
        default:
            break;
    }
    return val;
}

QJsonValue OAINotificationTransport::asJsonValue() const {
    
    return QJsonValue(asJson());
}


OAINotificationTransport::eOAINotificationTransport OAINotificationTransport::getValue() const {
    return m_value;
}

void OAINotificationTransport::setValue(const OAINotificationTransport::eOAINotificationTransport& value){
    m_value = value;
    m_value_isSet = true;
}
bool OAINotificationTransport::isSet() const {
    
    return m_value_isSet;
}

bool OAINotificationTransport::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_value_isValid;
}

} // namespace OpenAPI
