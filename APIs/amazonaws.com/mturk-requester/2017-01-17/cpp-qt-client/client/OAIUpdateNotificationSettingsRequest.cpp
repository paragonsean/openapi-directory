/**
 * Amazon Mechanical Turk
 * <fullname>Amazon Mechanical Turk API Reference</fullname>
 *
 * The version of the OpenAPI document: 2017-01-17
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIUpdateNotificationSettingsRequest.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIUpdateNotificationSettingsRequest::OAIUpdateNotificationSettingsRequest(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIUpdateNotificationSettingsRequest::OAIUpdateNotificationSettingsRequest() {
    this->initializeModel();
}

OAIUpdateNotificationSettingsRequest::~OAIUpdateNotificationSettingsRequest() {}

void OAIUpdateNotificationSettingsRequest::initializeModel() {

    m_hit_type_id_isSet = false;
    m_hit_type_id_isValid = false;

    m_notification_isSet = false;
    m_notification_isValid = false;

    m_active_isSet = false;
    m_active_isValid = false;
}

void OAIUpdateNotificationSettingsRequest::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIUpdateNotificationSettingsRequest::fromJsonObject(QJsonObject json) {

    m_hit_type_id_isValid = ::OpenAPI::fromJsonValue(m_hit_type_id, json[QString("HITTypeId")]);
    m_hit_type_id_isSet = !json[QString("HITTypeId")].isNull() && m_hit_type_id_isValid;

    m_notification_isValid = ::OpenAPI::fromJsonValue(m_notification, json[QString("Notification")]);
    m_notification_isSet = !json[QString("Notification")].isNull() && m_notification_isValid;

    m_active_isValid = ::OpenAPI::fromJsonValue(m_active, json[QString("Active")]);
    m_active_isSet = !json[QString("Active")].isNull() && m_active_isValid;
}

QString OAIUpdateNotificationSettingsRequest::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIUpdateNotificationSettingsRequest::asJsonObject() const {
    QJsonObject obj;
    if (m_hit_type_id_isSet) {
        obj.insert(QString("HITTypeId"), ::OpenAPI::toJsonValue(m_hit_type_id));
    }
    if (m_notification.isSet()) {
        obj.insert(QString("Notification"), ::OpenAPI::toJsonValue(m_notification));
    }
    if (m_active_isSet) {
        obj.insert(QString("Active"), ::OpenAPI::toJsonValue(m_active));
    }
    return obj;
}

QString OAIUpdateNotificationSettingsRequest::getHitTypeId() const {
    return m_hit_type_id;
}
void OAIUpdateNotificationSettingsRequest::setHitTypeId(const QString &hit_type_id) {
    m_hit_type_id = hit_type_id;
    m_hit_type_id_isSet = true;
}

bool OAIUpdateNotificationSettingsRequest::is_hit_type_id_Set() const{
    return m_hit_type_id_isSet;
}

bool OAIUpdateNotificationSettingsRequest::is_hit_type_id_Valid() const{
    return m_hit_type_id_isValid;
}

OAIUpdateNotificationSettingsRequest_Notification OAIUpdateNotificationSettingsRequest::getNotification() const {
    return m_notification;
}
void OAIUpdateNotificationSettingsRequest::setNotification(const OAIUpdateNotificationSettingsRequest_Notification &notification) {
    m_notification = notification;
    m_notification_isSet = true;
}

bool OAIUpdateNotificationSettingsRequest::is_notification_Set() const{
    return m_notification_isSet;
}

bool OAIUpdateNotificationSettingsRequest::is_notification_Valid() const{
    return m_notification_isValid;
}

bool OAIUpdateNotificationSettingsRequest::getActive() const {
    return m_active;
}
void OAIUpdateNotificationSettingsRequest::setActive(const bool &active) {
    m_active = active;
    m_active_isSet = true;
}

bool OAIUpdateNotificationSettingsRequest::is_active_Set() const{
    return m_active_isSet;
}

bool OAIUpdateNotificationSettingsRequest::is_active_Valid() const{
    return m_active_isValid;
}

bool OAIUpdateNotificationSettingsRequest::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_hit_type_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_notification.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_active_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIUpdateNotificationSettingsRequest::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_hit_type_id_isValid && true;
}

} // namespace OpenAPI
