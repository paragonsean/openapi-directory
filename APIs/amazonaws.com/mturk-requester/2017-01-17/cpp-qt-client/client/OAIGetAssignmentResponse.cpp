/**
 * Amazon Mechanical Turk
 * <fullname>Amazon Mechanical Turk API Reference</fullname>
 *
 * The version of the OpenAPI document: 2017-01-17
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGetAssignmentResponse.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGetAssignmentResponse::OAIGetAssignmentResponse(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGetAssignmentResponse::OAIGetAssignmentResponse() {
    this->initializeModel();
}

OAIGetAssignmentResponse::~OAIGetAssignmentResponse() {}

void OAIGetAssignmentResponse::initializeModel() {

    m_assignment_isSet = false;
    m_assignment_isValid = false;

    m_hit_isSet = false;
    m_hit_isValid = false;
}

void OAIGetAssignmentResponse::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGetAssignmentResponse::fromJsonObject(QJsonObject json) {

    m_assignment_isValid = ::OpenAPI::fromJsonValue(m_assignment, json[QString("Assignment")]);
    m_assignment_isSet = !json[QString("Assignment")].isNull() && m_assignment_isValid;

    m_hit_isValid = ::OpenAPI::fromJsonValue(m_hit, json[QString("HIT")]);
    m_hit_isSet = !json[QString("HIT")].isNull() && m_hit_isValid;
}

QString OAIGetAssignmentResponse::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGetAssignmentResponse::asJsonObject() const {
    QJsonObject obj;
    if (m_assignment.isSet()) {
        obj.insert(QString("Assignment"), ::OpenAPI::toJsonValue(m_assignment));
    }
    if (m_hit.isSet()) {
        obj.insert(QString("HIT"), ::OpenAPI::toJsonValue(m_hit));
    }
    return obj;
}

OAIGetAssignmentResponse_Assignment OAIGetAssignmentResponse::getAssignment() const {
    return m_assignment;
}
void OAIGetAssignmentResponse::setAssignment(const OAIGetAssignmentResponse_Assignment &assignment) {
    m_assignment = assignment;
    m_assignment_isSet = true;
}

bool OAIGetAssignmentResponse::is_assignment_Set() const{
    return m_assignment_isSet;
}

bool OAIGetAssignmentResponse::is_assignment_Valid() const{
    return m_assignment_isValid;
}

OAIGetAssignmentResponse_HIT OAIGetAssignmentResponse::getHit() const {
    return m_hit;
}
void OAIGetAssignmentResponse::setHit(const OAIGetAssignmentResponse_HIT &hit) {
    m_hit = hit;
    m_hit_isSet = true;
}

bool OAIGetAssignmentResponse::is_hit_Set() const{
    return m_hit_isSet;
}

bool OAIGetAssignmentResponse::is_hit_Valid() const{
    return m_hit_isValid;
}

bool OAIGetAssignmentResponse::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_assignment.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_hit.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGetAssignmentResponse::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
