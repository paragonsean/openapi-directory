/**
 * Amazon Mechanical Turk
 * <fullname>Amazon Mechanical Turk API Reference</fullname>
 *
 * The version of the OpenAPI document: 2017-01-17
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAISendBonusRequest.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAISendBonusRequest::OAISendBonusRequest(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAISendBonusRequest::OAISendBonusRequest() {
    this->initializeModel();
}

OAISendBonusRequest::~OAISendBonusRequest() {}

void OAISendBonusRequest::initializeModel() {

    m_worker_id_isSet = false;
    m_worker_id_isValid = false;

    m_bonus_amount_isSet = false;
    m_bonus_amount_isValid = false;

    m_assignment_id_isSet = false;
    m_assignment_id_isValid = false;

    m_reason_isSet = false;
    m_reason_isValid = false;

    m_unique_request_token_isSet = false;
    m_unique_request_token_isValid = false;
}

void OAISendBonusRequest::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAISendBonusRequest::fromJsonObject(QJsonObject json) {

    m_worker_id_isValid = ::OpenAPI::fromJsonValue(m_worker_id, json[QString("WorkerId")]);
    m_worker_id_isSet = !json[QString("WorkerId")].isNull() && m_worker_id_isValid;

    m_bonus_amount_isValid = ::OpenAPI::fromJsonValue(m_bonus_amount, json[QString("BonusAmount")]);
    m_bonus_amount_isSet = !json[QString("BonusAmount")].isNull() && m_bonus_amount_isValid;

    m_assignment_id_isValid = ::OpenAPI::fromJsonValue(m_assignment_id, json[QString("AssignmentId")]);
    m_assignment_id_isSet = !json[QString("AssignmentId")].isNull() && m_assignment_id_isValid;

    m_reason_isValid = ::OpenAPI::fromJsonValue(m_reason, json[QString("Reason")]);
    m_reason_isSet = !json[QString("Reason")].isNull() && m_reason_isValid;

    m_unique_request_token_isValid = ::OpenAPI::fromJsonValue(m_unique_request_token, json[QString("UniqueRequestToken")]);
    m_unique_request_token_isSet = !json[QString("UniqueRequestToken")].isNull() && m_unique_request_token_isValid;
}

QString OAISendBonusRequest::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAISendBonusRequest::asJsonObject() const {
    QJsonObject obj;
    if (m_worker_id_isSet) {
        obj.insert(QString("WorkerId"), ::OpenAPI::toJsonValue(m_worker_id));
    }
    if (m_bonus_amount_isSet) {
        obj.insert(QString("BonusAmount"), ::OpenAPI::toJsonValue(m_bonus_amount));
    }
    if (m_assignment_id_isSet) {
        obj.insert(QString("AssignmentId"), ::OpenAPI::toJsonValue(m_assignment_id));
    }
    if (m_reason_isSet) {
        obj.insert(QString("Reason"), ::OpenAPI::toJsonValue(m_reason));
    }
    if (m_unique_request_token_isSet) {
        obj.insert(QString("UniqueRequestToken"), ::OpenAPI::toJsonValue(m_unique_request_token));
    }
    return obj;
}

QString OAISendBonusRequest::getWorkerId() const {
    return m_worker_id;
}
void OAISendBonusRequest::setWorkerId(const QString &worker_id) {
    m_worker_id = worker_id;
    m_worker_id_isSet = true;
}

bool OAISendBonusRequest::is_worker_id_Set() const{
    return m_worker_id_isSet;
}

bool OAISendBonusRequest::is_worker_id_Valid() const{
    return m_worker_id_isValid;
}

QString OAISendBonusRequest::getBonusAmount() const {
    return m_bonus_amount;
}
void OAISendBonusRequest::setBonusAmount(const QString &bonus_amount) {
    m_bonus_amount = bonus_amount;
    m_bonus_amount_isSet = true;
}

bool OAISendBonusRequest::is_bonus_amount_Set() const{
    return m_bonus_amount_isSet;
}

bool OAISendBonusRequest::is_bonus_amount_Valid() const{
    return m_bonus_amount_isValid;
}

QString OAISendBonusRequest::getAssignmentId() const {
    return m_assignment_id;
}
void OAISendBonusRequest::setAssignmentId(const QString &assignment_id) {
    m_assignment_id = assignment_id;
    m_assignment_id_isSet = true;
}

bool OAISendBonusRequest::is_assignment_id_Set() const{
    return m_assignment_id_isSet;
}

bool OAISendBonusRequest::is_assignment_id_Valid() const{
    return m_assignment_id_isValid;
}

QString OAISendBonusRequest::getReason() const {
    return m_reason;
}
void OAISendBonusRequest::setReason(const QString &reason) {
    m_reason = reason;
    m_reason_isSet = true;
}

bool OAISendBonusRequest::is_reason_Set() const{
    return m_reason_isSet;
}

bool OAISendBonusRequest::is_reason_Valid() const{
    return m_reason_isValid;
}

QString OAISendBonusRequest::getUniqueRequestToken() const {
    return m_unique_request_token;
}
void OAISendBonusRequest::setUniqueRequestToken(const QString &unique_request_token) {
    m_unique_request_token = unique_request_token;
    m_unique_request_token_isSet = true;
}

bool OAISendBonusRequest::is_unique_request_token_Set() const{
    return m_unique_request_token_isSet;
}

bool OAISendBonusRequest::is_unique_request_token_Valid() const{
    return m_unique_request_token_isValid;
}

bool OAISendBonusRequest::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_worker_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_bonus_amount_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_assignment_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_reason_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_unique_request_token_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAISendBonusRequest::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_worker_id_isValid && m_bonus_amount_isValid && m_assignment_id_isValid && m_reason_isValid && true;
}

} // namespace OpenAPI
