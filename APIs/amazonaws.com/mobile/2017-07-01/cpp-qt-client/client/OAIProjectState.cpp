/**
 * AWS Mobile
 *  AWS Mobile Service provides mobile app and website developers with capabilities required to configure AWS resources and bootstrap their developer desktop projects with the necessary SDKs, constants, tools and samples to make use of those resources. 
 *
 * The version of the OpenAPI document: 2017-07-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIProjectState.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIProjectState::OAIProjectState(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIProjectState::OAIProjectState() {
    this->initializeModel();
}

OAIProjectState::~OAIProjectState() {}

void OAIProjectState::initializeModel() {

    m_value_isSet = false;
    m_value_isValid = false;
    m_value = eOAIProjectState::INVALID_VALUE_OPENAPI_GENERATED;
}

void OAIProjectState::fromJson(QString jsonString) {
    
    if ( jsonString.compare("NORMAL", Qt::CaseInsensitive) == 0) {
        m_value = eOAIProjectState::NORMAL;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("SYNCING", Qt::CaseInsensitive) == 0) {
        m_value = eOAIProjectState::SYNCING;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("IMPORTING", Qt::CaseInsensitive) == 0) {
        m_value = eOAIProjectState::IMPORTING;
        m_value_isSet = m_value_isValid = true;
    }
}

void OAIProjectState::fromJsonValue(QJsonValue json) {
fromJson(json.toString());
}

QString OAIProjectState::asJson() const {
    
    QString val;
    switch (m_value){
        case eOAIProjectState::NORMAL:
            val = "NORMAL";
            break;
        case eOAIProjectState::SYNCING:
            val = "SYNCING";
            break;
        case eOAIProjectState::IMPORTING:
            val = "IMPORTING";
            break;
        default:
            break;
    }
    return val;
}

QJsonValue OAIProjectState::asJsonValue() const {
    
    return QJsonValue(asJson());
}


OAIProjectState::eOAIProjectState OAIProjectState::getValue() const {
    return m_value;
}

void OAIProjectState::setValue(const OAIProjectState::eOAIProjectState& value){
    m_value = value;
    m_value_isSet = true;
}
bool OAIProjectState::isSet() const {
    
    return m_value_isSet;
}

bool OAIProjectState::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_value_isValid;
}

} // namespace OpenAPI
