/**
 * AWS Mobile
 *  AWS Mobile Service provides mobile app and website developers with capabilities required to configure AWS resources and bootstrap their developer desktop projects with the necessary SDKs, constants, tools and samples to make use of those resources. 
 *
 * The version of the OpenAPI document: 2017-07-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIDescribeBundleResult_details.h
 *
 * 
 */

#ifndef OAIDescribeBundleResult_details_H
#define OAIDescribeBundleResult_details_H

#include <QJsonObject>

#include "OAIPlatform.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIDescribeBundleResult_details : public OAIObject {
public:
    OAIDescribeBundleResult_details();
    OAIDescribeBundleResult_details(QString json);
    ~OAIDescribeBundleResult_details() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getBundleId() const;
    void setBundleId(const QString &bundle_id);
    bool is_bundle_id_Set() const;
    bool is_bundle_id_Valid() const;

    QString getTitle() const;
    void setTitle(const QString &title);
    bool is_title_Set() const;
    bool is_title_Valid() const;

    QString getVersion() const;
    void setVersion(const QString &version);
    bool is_version_Set() const;
    bool is_version_Valid() const;

    QString getDescription() const;
    void setDescription(const QString &description);
    bool is_description_Set() const;
    bool is_description_Valid() const;

    QString getIconUrl() const;
    void setIconUrl(const QString &icon_url);
    bool is_icon_url_Set() const;
    bool is_icon_url_Valid() const;

    QList<OAIPlatform> getAvailablePlatforms() const;
    void setAvailablePlatforms(const QList<OAIPlatform> &available_platforms);
    bool is_available_platforms_Set() const;
    bool is_available_platforms_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_bundle_id;
    bool m_bundle_id_isSet;
    bool m_bundle_id_isValid;

    QString m_title;
    bool m_title_isSet;
    bool m_title_isValid;

    QString m_version;
    bool m_version_isSet;
    bool m_version_isValid;

    QString m_description;
    bool m_description_isSet;
    bool m_description_isValid;

    QString m_icon_url;
    bool m_icon_url_isSet;
    bool m_icon_url_isValid;

    QList<OAIPlatform> m_available_platforms;
    bool m_available_platforms_isSet;
    bool m_available_platforms_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIDescribeBundleResult_details)

#endif // OAIDescribeBundleResult_details_H
