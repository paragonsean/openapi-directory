/**
 * AWS Mobile
 *  AWS Mobile Service provides mobile app and website developers with capabilities required to configure AWS resources and bootstrap their developer desktop projects with the necessary SDKs, constants, tools and samples to make use of those resources. 
 *
 * The version of the OpenAPI document: 2017-07-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIServiceUnavailableException.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIServiceUnavailableException::OAIServiceUnavailableException(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIServiceUnavailableException::OAIServiceUnavailableException() {
    this->initializeModel();
}

OAIServiceUnavailableException::~OAIServiceUnavailableException() {}

void OAIServiceUnavailableException::initializeModel() {

    m_message_isSet = false;
    m_message_isValid = false;
}

void OAIServiceUnavailableException::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIServiceUnavailableException::fromJsonObject(QJsonObject json) {

    m_message_isValid = ::OpenAPI::fromJsonValue(m_message, json[QString("message")]);
    m_message_isSet = !json[QString("message")].isNull() && m_message_isValid;
}

QString OAIServiceUnavailableException::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIServiceUnavailableException::asJsonObject() const {
    QJsonObject obj;
    if (m_message_isSet) {
        obj.insert(QString("message"), ::OpenAPI::toJsonValue(m_message));
    }
    return obj;
}

QString OAIServiceUnavailableException::getMessage() const {
    return m_message;
}
void OAIServiceUnavailableException::setMessage(const QString &message) {
    m_message = message;
    m_message_isSet = true;
}

bool OAIServiceUnavailableException::is_message_Set() const{
    return m_message_isSet;
}

bool OAIServiceUnavailableException::is_message_Valid() const{
    return m_message_isValid;
}

bool OAIServiceUnavailableException::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_message_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIServiceUnavailableException::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
