/**
 * AWS Mobile
 *  AWS Mobile Service provides mobile app and website developers with capabilities required to configure AWS resources and bootstrap their developer desktop projects with the necessary SDKs, constants, tools and samples to make use of those resources. 
 *
 * The version of the OpenAPI document: 2017-07-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIProjectSummary.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIProjectSummary::OAIProjectSummary(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIProjectSummary::OAIProjectSummary() {
    this->initializeModel();
}

OAIProjectSummary::~OAIProjectSummary() {}

void OAIProjectSummary::initializeModel() {

    m_name_isSet = false;
    m_name_isValid = false;

    m_project_id_isSet = false;
    m_project_id_isValid = false;
}

void OAIProjectSummary::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIProjectSummary::fromJsonObject(QJsonObject json) {

    m_name_isValid = ::OpenAPI::fromJsonValue(m_name, json[QString("name")]);
    m_name_isSet = !json[QString("name")].isNull() && m_name_isValid;

    m_project_id_isValid = ::OpenAPI::fromJsonValue(m_project_id, json[QString("projectId")]);
    m_project_id_isSet = !json[QString("projectId")].isNull() && m_project_id_isValid;
}

QString OAIProjectSummary::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIProjectSummary::asJsonObject() const {
    QJsonObject obj;
    if (m_name_isSet) {
        obj.insert(QString("name"), ::OpenAPI::toJsonValue(m_name));
    }
    if (m_project_id_isSet) {
        obj.insert(QString("projectId"), ::OpenAPI::toJsonValue(m_project_id));
    }
    return obj;
}

QString OAIProjectSummary::getName() const {
    return m_name;
}
void OAIProjectSummary::setName(const QString &name) {
    m_name = name;
    m_name_isSet = true;
}

bool OAIProjectSummary::is_name_Set() const{
    return m_name_isSet;
}

bool OAIProjectSummary::is_name_Valid() const{
    return m_name_isValid;
}

QString OAIProjectSummary::getProjectId() const {
    return m_project_id;
}
void OAIProjectSummary::setProjectId(const QString &project_id) {
    m_project_id = project_id;
    m_project_id_isSet = true;
}

bool OAIProjectSummary::is_project_id_Set() const{
    return m_project_id_isSet;
}

bool OAIProjectSummary::is_project_id_Valid() const{
    return m_project_id_isValid;
}

bool OAIProjectSummary::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_project_id_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIProjectSummary::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
