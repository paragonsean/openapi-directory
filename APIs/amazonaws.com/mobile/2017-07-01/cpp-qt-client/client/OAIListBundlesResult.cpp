/**
 * AWS Mobile
 *  AWS Mobile Service provides mobile app and website developers with capabilities required to configure AWS resources and bootstrap their developer desktop projects with the necessary SDKs, constants, tools and samples to make use of those resources. 
 *
 * The version of the OpenAPI document: 2017-07-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIListBundlesResult.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIListBundlesResult::OAIListBundlesResult(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIListBundlesResult::OAIListBundlesResult() {
    this->initializeModel();
}

OAIListBundlesResult::~OAIListBundlesResult() {}

void OAIListBundlesResult::initializeModel() {

    m_bundle_list_isSet = false;
    m_bundle_list_isValid = false;

    m_next_token_isSet = false;
    m_next_token_isValid = false;
}

void OAIListBundlesResult::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIListBundlesResult::fromJsonObject(QJsonObject json) {

    m_bundle_list_isValid = ::OpenAPI::fromJsonValue(m_bundle_list, json[QString("bundleList")]);
    m_bundle_list_isSet = !json[QString("bundleList")].isNull() && m_bundle_list_isValid;

    m_next_token_isValid = ::OpenAPI::fromJsonValue(m_next_token, json[QString("nextToken")]);
    m_next_token_isSet = !json[QString("nextToken")].isNull() && m_next_token_isValid;
}

QString OAIListBundlesResult::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIListBundlesResult::asJsonObject() const {
    QJsonObject obj;
    if (m_bundle_list.isSet()) {
        obj.insert(QString("bundleList"), ::OpenAPI::toJsonValue(m_bundle_list));
    }
    if (m_next_token_isSet) {
        obj.insert(QString("nextToken"), ::OpenAPI::toJsonValue(m_next_token));
    }
    return obj;
}

QList OAIListBundlesResult::getBundleList() const {
    return m_bundle_list;
}
void OAIListBundlesResult::setBundleList(const QList &bundle_list) {
    m_bundle_list = bundle_list;
    m_bundle_list_isSet = true;
}

bool OAIListBundlesResult::is_bundle_list_Set() const{
    return m_bundle_list_isSet;
}

bool OAIListBundlesResult::is_bundle_list_Valid() const{
    return m_bundle_list_isValid;
}

QString OAIListBundlesResult::getNextToken() const {
    return m_next_token;
}
void OAIListBundlesResult::setNextToken(const QString &next_token) {
    m_next_token = next_token;
    m_next_token_isSet = true;
}

bool OAIListBundlesResult::is_next_token_Set() const{
    return m_next_token_isSet;
}

bool OAIListBundlesResult::is_next_token_Valid() const{
    return m_next_token_isValid;
}

bool OAIListBundlesResult::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_bundle_list.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_next_token_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIListBundlesResult::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
