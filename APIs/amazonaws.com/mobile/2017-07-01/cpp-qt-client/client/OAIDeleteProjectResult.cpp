/**
 * AWS Mobile
 *  AWS Mobile Service provides mobile app and website developers with capabilities required to configure AWS resources and bootstrap their developer desktop projects with the necessary SDKs, constants, tools and samples to make use of those resources. 
 *
 * The version of the OpenAPI document: 2017-07-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIDeleteProjectResult.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIDeleteProjectResult::OAIDeleteProjectResult(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIDeleteProjectResult::OAIDeleteProjectResult() {
    this->initializeModel();
}

OAIDeleteProjectResult::~OAIDeleteProjectResult() {}

void OAIDeleteProjectResult::initializeModel() {

    m_deleted_resources_isSet = false;
    m_deleted_resources_isValid = false;

    m_orphaned_resources_isSet = false;
    m_orphaned_resources_isValid = false;
}

void OAIDeleteProjectResult::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIDeleteProjectResult::fromJsonObject(QJsonObject json) {

    m_deleted_resources_isValid = ::OpenAPI::fromJsonValue(m_deleted_resources, json[QString("deletedResources")]);
    m_deleted_resources_isSet = !json[QString("deletedResources")].isNull() && m_deleted_resources_isValid;

    m_orphaned_resources_isValid = ::OpenAPI::fromJsonValue(m_orphaned_resources, json[QString("orphanedResources")]);
    m_orphaned_resources_isSet = !json[QString("orphanedResources")].isNull() && m_orphaned_resources_isValid;
}

QString OAIDeleteProjectResult::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIDeleteProjectResult::asJsonObject() const {
    QJsonObject obj;
    if (m_deleted_resources.isSet()) {
        obj.insert(QString("deletedResources"), ::OpenAPI::toJsonValue(m_deleted_resources));
    }
    if (m_orphaned_resources.isSet()) {
        obj.insert(QString("orphanedResources"), ::OpenAPI::toJsonValue(m_orphaned_resources));
    }
    return obj;
}

QList OAIDeleteProjectResult::getDeletedResources() const {
    return m_deleted_resources;
}
void OAIDeleteProjectResult::setDeletedResources(const QList &deleted_resources) {
    m_deleted_resources = deleted_resources;
    m_deleted_resources_isSet = true;
}

bool OAIDeleteProjectResult::is_deleted_resources_Set() const{
    return m_deleted_resources_isSet;
}

bool OAIDeleteProjectResult::is_deleted_resources_Valid() const{
    return m_deleted_resources_isValid;
}

QList OAIDeleteProjectResult::getOrphanedResources() const {
    return m_orphaned_resources;
}
void OAIDeleteProjectResult::setOrphanedResources(const QList &orphaned_resources) {
    m_orphaned_resources = orphaned_resources;
    m_orphaned_resources_isSet = true;
}

bool OAIDeleteProjectResult::is_orphaned_resources_Set() const{
    return m_orphaned_resources_isSet;
}

bool OAIDeleteProjectResult::is_orphaned_resources_Valid() const{
    return m_orphaned_resources_isValid;
}

bool OAIDeleteProjectResult::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_deleted_resources.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_orphaned_resources.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIDeleteProjectResult::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
