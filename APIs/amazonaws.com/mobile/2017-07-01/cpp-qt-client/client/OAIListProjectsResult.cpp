/**
 * AWS Mobile
 *  AWS Mobile Service provides mobile app and website developers with capabilities required to configure AWS resources and bootstrap their developer desktop projects with the necessary SDKs, constants, tools and samples to make use of those resources. 
 *
 * The version of the OpenAPI document: 2017-07-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIListProjectsResult.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIListProjectsResult::OAIListProjectsResult(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIListProjectsResult::OAIListProjectsResult() {
    this->initializeModel();
}

OAIListProjectsResult::~OAIListProjectsResult() {}

void OAIListProjectsResult::initializeModel() {

    m_projects_isSet = false;
    m_projects_isValid = false;

    m_next_token_isSet = false;
    m_next_token_isValid = false;
}

void OAIListProjectsResult::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIListProjectsResult::fromJsonObject(QJsonObject json) {

    m_projects_isValid = ::OpenAPI::fromJsonValue(m_projects, json[QString("projects")]);
    m_projects_isSet = !json[QString("projects")].isNull() && m_projects_isValid;

    m_next_token_isValid = ::OpenAPI::fromJsonValue(m_next_token, json[QString("nextToken")]);
    m_next_token_isSet = !json[QString("nextToken")].isNull() && m_next_token_isValid;
}

QString OAIListProjectsResult::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIListProjectsResult::asJsonObject() const {
    QJsonObject obj;
    if (m_projects.size() > 0) {
        obj.insert(QString("projects"), ::OpenAPI::toJsonValue(m_projects));
    }
    if (m_next_token_isSet) {
        obj.insert(QString("nextToken"), ::OpenAPI::toJsonValue(m_next_token));
    }
    return obj;
}

QList<OAIProjectSummary> OAIListProjectsResult::getProjects() const {
    return m_projects;
}
void OAIListProjectsResult::setProjects(const QList<OAIProjectSummary> &projects) {
    m_projects = projects;
    m_projects_isSet = true;
}

bool OAIListProjectsResult::is_projects_Set() const{
    return m_projects_isSet;
}

bool OAIListProjectsResult::is_projects_Valid() const{
    return m_projects_isValid;
}

QString OAIListProjectsResult::getNextToken() const {
    return m_next_token;
}
void OAIListProjectsResult::setNextToken(const QString &next_token) {
    m_next_token = next_token;
    m_next_token_isSet = true;
}

bool OAIListProjectsResult::is_next_token_Set() const{
    return m_next_token_isSet;
}

bool OAIListProjectsResult::is_next_token_Valid() const{
    return m_next_token_isValid;
}

bool OAIListProjectsResult::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_projects.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_next_token_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIListProjectsResult::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
