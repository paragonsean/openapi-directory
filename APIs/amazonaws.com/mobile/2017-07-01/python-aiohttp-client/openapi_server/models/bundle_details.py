# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.platform import Platform
from openapi_server import util


class BundleDetails(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, bundle_id: str=None, title: str=None, version: str=None, description: str=None, icon_url: str=None, available_platforms: List[Platform]=None):
        """BundleDetails - a model defined in OpenAPI

        :param bundle_id: The bundle_id of this BundleDetails.
        :param title: The title of this BundleDetails.
        :param version: The version of this BundleDetails.
        :param description: The description of this BundleDetails.
        :param icon_url: The icon_url of this BundleDetails.
        :param available_platforms: The available_platforms of this BundleDetails.
        """
        self.openapi_types = {
            'bundle_id': str,
            'title': str,
            'version': str,
            'description': str,
            'icon_url': str,
            'available_platforms': List[Platform]
        }

        self.attribute_map = {
            'bundle_id': 'bundleId',
            'title': 'title',
            'version': 'version',
            'description': 'description',
            'icon_url': 'iconUrl',
            'available_platforms': 'availablePlatforms'
        }

        self._bundle_id = bundle_id
        self._title = title
        self._version = version
        self._description = description
        self._icon_url = icon_url
        self._available_platforms = available_platforms

    @classmethod
    def from_dict(cls, dikt: dict) -> 'BundleDetails':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The BundleDetails of this BundleDetails.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def bundle_id(self):
        """Gets the bundle_id of this BundleDetails.

         Unique bundle identifier. 

        :return: The bundle_id of this BundleDetails.
        :rtype: str
        """
        return self._bundle_id

    @bundle_id.setter
    def bundle_id(self, bundle_id):
        """Sets the bundle_id of this BundleDetails.

         Unique bundle identifier. 

        :param bundle_id: The bundle_id of this BundleDetails.
        :type bundle_id: str
        """

        self._bundle_id = bundle_id

    @property
    def title(self):
        """Gets the title of this BundleDetails.

         Title of the download bundle. 

        :return: The title of this BundleDetails.
        :rtype: str
        """
        return self._title

    @title.setter
    def title(self, title):
        """Sets the title of this BundleDetails.

         Title of the download bundle. 

        :param title: The title of this BundleDetails.
        :type title: str
        """

        self._title = title

    @property
    def version(self):
        """Gets the version of this BundleDetails.

         Version of the download bundle. 

        :return: The version of this BundleDetails.
        :rtype: str
        """
        return self._version

    @version.setter
    def version(self, version):
        """Sets the version of this BundleDetails.

         Version of the download bundle. 

        :param version: The version of this BundleDetails.
        :type version: str
        """

        self._version = version

    @property
    def description(self):
        """Gets the description of this BundleDetails.

         Description of the download bundle. 

        :return: The description of this BundleDetails.
        :rtype: str
        """
        return self._description

    @description.setter
    def description(self, description):
        """Sets the description of this BundleDetails.

         Description of the download bundle. 

        :param description: The description of this BundleDetails.
        :type description: str
        """

        self._description = description

    @property
    def icon_url(self):
        """Gets the icon_url of this BundleDetails.

         Icon for the download bundle. 

        :return: The icon_url of this BundleDetails.
        :rtype: str
        """
        return self._icon_url

    @icon_url.setter
    def icon_url(self, icon_url):
        """Sets the icon_url of this BundleDetails.

         Icon for the download bundle. 

        :param icon_url: The icon_url of this BundleDetails.
        :type icon_url: str
        """

        self._icon_url = icon_url

    @property
    def available_platforms(self):
        """Gets the available_platforms of this BundleDetails.

         Developer desktop or mobile app or website platforms. 

        :return: The available_platforms of this BundleDetails.
        :rtype: List[Platform]
        """
        return self._available_platforms

    @available_platforms.setter
    def available_platforms(self, available_platforms):
        """Sets the available_platforms of this BundleDetails.

         Developer desktop or mobile app or website platforms. 

        :param available_platforms: The available_platforms of this BundleDetails.
        :type available_platforms: List[Platform]
        """

        self._available_platforms = available_platforms
