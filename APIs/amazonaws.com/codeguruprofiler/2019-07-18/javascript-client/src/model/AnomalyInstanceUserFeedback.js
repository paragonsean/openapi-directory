/**
 * Amazon CodeGuru Profiler
 * <p> This section provides documentation for the Amazon CodeGuru Profiler API operations. </p> <p> Amazon CodeGuru Profiler collects runtime performance data from your live applications, and provides recommendations that can help you fine-tune your application performance. Using machine learning algorithms, CodeGuru Profiler can help you find your most expensive lines of code and suggest ways you can improve efficiency and remove CPU bottlenecks. </p> <p> Amazon CodeGuru Profiler provides different visualizations of profiling data to help you identify what code is running on the CPU, see how much time is consumed, and suggest ways to reduce CPU utilization. </p> <note> <p>Amazon CodeGuru Profiler currently supports applications written in all Java virtual machine (JVM) languages and Python. While CodeGuru Profiler supports both visualizations and recommendations for applications written in Java, it can also generate visualizations and a subset of recommendations for applications written in other JVM languages and Python.</p> </note> <p> For more information, see <a href=\"https://docs.aws.amazon.com/codeguru/latest/profiler-ug/what-is-codeguru-profiler.html\">What is Amazon CodeGuru Profiler</a> in the <i>Amazon CodeGuru Profiler User Guide</i>. </p>
 *
 * The version of the OpenAPI document: 2019-07-18
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import FeedbackType from './FeedbackType';
import UserFeedback from './UserFeedback';

/**
 * The AnomalyInstanceUserFeedback model module.
 * @module model/AnomalyInstanceUserFeedback
 * @version 2019-07-18
 */
class AnomalyInstanceUserFeedback {
    /**
     * Constructs a new <code>AnomalyInstanceUserFeedback</code>.
     * @alias module:model/AnomalyInstanceUserFeedback
     * @implements module:model/UserFeedback
     * @param type {module:model/FeedbackType} 
     */
    constructor(type) { 
        UserFeedback.initialize(this, type);
        AnomalyInstanceUserFeedback.initialize(this, type);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, type) { 
        obj['type'] = type;
    }

    /**
     * Constructs a <code>AnomalyInstanceUserFeedback</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/AnomalyInstanceUserFeedback} obj Optional instance to populate.
     * @return {module:model/AnomalyInstanceUserFeedback} The populated <code>AnomalyInstanceUserFeedback</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new AnomalyInstanceUserFeedback();
            UserFeedback.constructFromObject(data, obj);

            if (data.hasOwnProperty('type')) {
                obj['type'] = ApiClient.convertToType(data['type'], FeedbackType);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>AnomalyInstanceUserFeedback</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>AnomalyInstanceUserFeedback</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of AnomalyInstanceUserFeedback.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // validate the optional field `type`
        if (data['type']) { // data not null
          FeedbackType.validateJSON(data['type']);
        }

        return true;
    }


}

AnomalyInstanceUserFeedback.RequiredProperties = ["type"];

/**
 * @member {module:model/FeedbackType} type
 */
AnomalyInstanceUserFeedback.prototype['type'] = undefined;


// Implement UserFeedback interface:
/**
 * @member {module:model/FeedbackType} type
 */
UserFeedback.prototype['type'] = undefined;




export default AnomalyInstanceUserFeedback;

