/**
 * Amazon CodeGuru Profiler
 * <p> This section provides documentation for the Amazon CodeGuru Profiler API operations. </p> <p> Amazon CodeGuru Profiler collects runtime performance data from your live applications, and provides recommendations that can help you fine-tune your application performance. Using machine learning algorithms, CodeGuru Profiler can help you find your most expensive lines of code and suggest ways you can improve efficiency and remove CPU bottlenecks. </p> <p> Amazon CodeGuru Profiler provides different visualizations of profiling data to help you identify what code is running on the CPU, see how much time is consumed, and suggest ways to reduce CPU utilization. </p> <note> <p>Amazon CodeGuru Profiler currently supports applications written in all Java virtual machine (JVM) languages and Python. While CodeGuru Profiler supports both visualizations and recommendations for applications written in Java, it can also generate visualizations and a subset of recommendations for applications written in other JVM languages and Python.</p> </note> <p> For more information, see <a href=\"https://docs.aws.amazon.com/codeguru/latest/profiler-ug/what-is-codeguru-profiler.html\">What is Amazon CodeGuru Profiler</a> in the <i>Amazon CodeGuru Profiler User Guide</i>. </p>
 *
 * The version of the OpenAPI document: 2019-07-18
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.AmazonCodeGuruProfiler);
  }
}(this, function(expect, AmazonCodeGuruProfiler) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new AmazonCodeGuruProfiler.DefaultApi();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('DefaultApi', function() {
    describe('addNotificationChannels', function() {
      it('should call addNotificationChannels successfully', function(done) {
        //uncomment below and update the code to test addNotificationChannels
        //instance.addNotificationChannels(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('batchGetFrameMetricData', function() {
      it('should call batchGetFrameMetricData successfully', function(done) {
        //uncomment below and update the code to test batchGetFrameMetricData
        //instance.batchGetFrameMetricData(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('configureAgent', function() {
      it('should call configureAgent successfully', function(done) {
        //uncomment below and update the code to test configureAgent
        //instance.configureAgent(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('createProfilingGroup', function() {
      it('should call createProfilingGroup successfully', function(done) {
        //uncomment below and update the code to test createProfilingGroup
        //instance.createProfilingGroup(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deleteProfilingGroup', function() {
      it('should call deleteProfilingGroup successfully', function(done) {
        //uncomment below and update the code to test deleteProfilingGroup
        //instance.deleteProfilingGroup(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('describeProfilingGroup', function() {
      it('should call describeProfilingGroup successfully', function(done) {
        //uncomment below and update the code to test describeProfilingGroup
        //instance.describeProfilingGroup(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getFindingsReportAccountSummary', function() {
      it('should call getFindingsReportAccountSummary successfully', function(done) {
        //uncomment below and update the code to test getFindingsReportAccountSummary
        //instance.getFindingsReportAccountSummary(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getNotificationConfiguration', function() {
      it('should call getNotificationConfiguration successfully', function(done) {
        //uncomment below and update the code to test getNotificationConfiguration
        //instance.getNotificationConfiguration(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getPolicy', function() {
      it('should call getPolicy successfully', function(done) {
        //uncomment below and update the code to test getPolicy
        //instance.getPolicy(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getProfile', function() {
      it('should call getProfile successfully', function(done) {
        //uncomment below and update the code to test getProfile
        //instance.getProfile(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getRecommendations', function() {
      it('should call getRecommendations successfully', function(done) {
        //uncomment below and update the code to test getRecommendations
        //instance.getRecommendations(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('listFindingsReports', function() {
      it('should call listFindingsReports successfully', function(done) {
        //uncomment below and update the code to test listFindingsReports
        //instance.listFindingsReports(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('listProfileTimes', function() {
      it('should call listProfileTimes successfully', function(done) {
        //uncomment below and update the code to test listProfileTimes
        //instance.listProfileTimes(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('listProfilingGroups', function() {
      it('should call listProfilingGroups successfully', function(done) {
        //uncomment below and update the code to test listProfilingGroups
        //instance.listProfilingGroups(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('listTagsForResource', function() {
      it('should call listTagsForResource successfully', function(done) {
        //uncomment below and update the code to test listTagsForResource
        //instance.listTagsForResource(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('postAgentProfile', function() {
      it('should call postAgentProfile successfully', function(done) {
        //uncomment below and update the code to test postAgentProfile
        //instance.postAgentProfile(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('putPermission', function() {
      it('should call putPermission successfully', function(done) {
        //uncomment below and update the code to test putPermission
        //instance.putPermission(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('removeNotificationChannel', function() {
      it('should call removeNotificationChannel successfully', function(done) {
        //uncomment below and update the code to test removeNotificationChannel
        //instance.removeNotificationChannel(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('removePermission', function() {
      it('should call removePermission successfully', function(done) {
        //uncomment below and update the code to test removePermission
        //instance.removePermission(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('submitFeedback', function() {
      it('should call submitFeedback successfully', function(done) {
        //uncomment below and update the code to test submitFeedback
        //instance.submitFeedback(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('tagResource', function() {
      it('should call tagResource successfully', function(done) {
        //uncomment below and update the code to test tagResource
        //instance.tagResource(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('untagResource', function() {
      it('should call untagResource successfully', function(done) {
        //uncomment below and update the code to test untagResource
        //instance.untagResource(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('updateProfilingGroup', function() {
      it('should call updateProfilingGroup successfully', function(done) {
        //uncomment below and update the code to test updateProfilingGroup
        //instance.updateProfilingGroup(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
  });

}));
