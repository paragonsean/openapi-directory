# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.compute_platform import ComputePlatform
from openapi_server.models.profiling_group_description_agent_orchestration_config import ProfilingGroupDescriptionAgentOrchestrationConfig
from openapi_server.models.profiling_group_description_profiling_status import ProfilingGroupDescriptionProfilingStatus
from openapi_server import util


class ProfilingGroupDescription(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, agent_orchestration_config: ProfilingGroupDescriptionAgentOrchestrationConfig=None, arn: str=None, compute_platform: ComputePlatform=None, created_at: datetime=None, name: str=None, profiling_status: ProfilingGroupDescriptionProfilingStatus=None, tags: Dict=None, updated_at: datetime=None):
        """ProfilingGroupDescription - a model defined in OpenAPI

        :param agent_orchestration_config: The agent_orchestration_config of this ProfilingGroupDescription.
        :param arn: The arn of this ProfilingGroupDescription.
        :param compute_platform: The compute_platform of this ProfilingGroupDescription.
        :param created_at: The created_at of this ProfilingGroupDescription.
        :param name: The name of this ProfilingGroupDescription.
        :param profiling_status: The profiling_status of this ProfilingGroupDescription.
        :param tags: The tags of this ProfilingGroupDescription.
        :param updated_at: The updated_at of this ProfilingGroupDescription.
        """
        self.openapi_types = {
            'agent_orchestration_config': ProfilingGroupDescriptionAgentOrchestrationConfig,
            'arn': str,
            'compute_platform': ComputePlatform,
            'created_at': datetime,
            'name': str,
            'profiling_status': ProfilingGroupDescriptionProfilingStatus,
            'tags': Dict,
            'updated_at': datetime
        }

        self.attribute_map = {
            'agent_orchestration_config': 'agentOrchestrationConfig',
            'arn': 'arn',
            'compute_platform': 'computePlatform',
            'created_at': 'createdAt',
            'name': 'name',
            'profiling_status': 'profilingStatus',
            'tags': 'tags',
            'updated_at': 'updatedAt'
        }

        self._agent_orchestration_config = agent_orchestration_config
        self._arn = arn
        self._compute_platform = compute_platform
        self._created_at = created_at
        self._name = name
        self._profiling_status = profiling_status
        self._tags = tags
        self._updated_at = updated_at

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ProfilingGroupDescription':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ProfilingGroupDescription of this ProfilingGroupDescription.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def agent_orchestration_config(self):
        """Gets the agent_orchestration_config of this ProfilingGroupDescription.


        :return: The agent_orchestration_config of this ProfilingGroupDescription.
        :rtype: ProfilingGroupDescriptionAgentOrchestrationConfig
        """
        return self._agent_orchestration_config

    @agent_orchestration_config.setter
    def agent_orchestration_config(self, agent_orchestration_config):
        """Sets the agent_orchestration_config of this ProfilingGroupDescription.


        :param agent_orchestration_config: The agent_orchestration_config of this ProfilingGroupDescription.
        :type agent_orchestration_config: ProfilingGroupDescriptionAgentOrchestrationConfig
        """

        self._agent_orchestration_config = agent_orchestration_config

    @property
    def arn(self):
        """Gets the arn of this ProfilingGroupDescription.


        :return: The arn of this ProfilingGroupDescription.
        :rtype: str
        """
        return self._arn

    @arn.setter
    def arn(self, arn):
        """Sets the arn of this ProfilingGroupDescription.


        :param arn: The arn of this ProfilingGroupDescription.
        :type arn: str
        """

        self._arn = arn

    @property
    def compute_platform(self):
        """Gets the compute_platform of this ProfilingGroupDescription.


        :return: The compute_platform of this ProfilingGroupDescription.
        :rtype: ComputePlatform
        """
        return self._compute_platform

    @compute_platform.setter
    def compute_platform(self, compute_platform):
        """Sets the compute_platform of this ProfilingGroupDescription.


        :param compute_platform: The compute_platform of this ProfilingGroupDescription.
        :type compute_platform: ComputePlatform
        """

        self._compute_platform = compute_platform

    @property
    def created_at(self):
        """Gets the created_at of this ProfilingGroupDescription.


        :return: The created_at of this ProfilingGroupDescription.
        :rtype: datetime
        """
        return self._created_at

    @created_at.setter
    def created_at(self, created_at):
        """Sets the created_at of this ProfilingGroupDescription.


        :param created_at: The created_at of this ProfilingGroupDescription.
        :type created_at: datetime
        """

        self._created_at = created_at

    @property
    def name(self):
        """Gets the name of this ProfilingGroupDescription.


        :return: The name of this ProfilingGroupDescription.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this ProfilingGroupDescription.


        :param name: The name of this ProfilingGroupDescription.
        :type name: str
        """

        self._name = name

    @property
    def profiling_status(self):
        """Gets the profiling_status of this ProfilingGroupDescription.


        :return: The profiling_status of this ProfilingGroupDescription.
        :rtype: ProfilingGroupDescriptionProfilingStatus
        """
        return self._profiling_status

    @profiling_status.setter
    def profiling_status(self, profiling_status):
        """Sets the profiling_status of this ProfilingGroupDescription.


        :param profiling_status: The profiling_status of this ProfilingGroupDescription.
        :type profiling_status: ProfilingGroupDescriptionProfilingStatus
        """

        self._profiling_status = profiling_status

    @property
    def tags(self):
        """Gets the tags of this ProfilingGroupDescription.


        :return: The tags of this ProfilingGroupDescription.
        :rtype: Dict
        """
        return self._tags

    @tags.setter
    def tags(self, tags):
        """Sets the tags of this ProfilingGroupDescription.


        :param tags: The tags of this ProfilingGroupDescription.
        :type tags: Dict
        """

        self._tags = tags

    @property
    def updated_at(self):
        """Gets the updated_at of this ProfilingGroupDescription.


        :return: The updated_at of this ProfilingGroupDescription.
        :rtype: datetime
        """
        return self._updated_at

    @updated_at.setter
    def updated_at(self, updated_at):
        """Sets the updated_at of this ProfilingGroupDescription.


        :param updated_at: The updated_at of this ProfilingGroupDescription.
        :type updated_at: datetime
        """

        self._updated_at = updated_at
