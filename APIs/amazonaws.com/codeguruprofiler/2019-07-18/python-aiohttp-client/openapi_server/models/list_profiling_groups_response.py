# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class ListProfilingGroupsResponse(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, next_token: str=None, profiling_group_names: List=None, profiling_groups: List=None):
        """ListProfilingGroupsResponse - a model defined in OpenAPI

        :param next_token: The next_token of this ListProfilingGroupsResponse.
        :param profiling_group_names: The profiling_group_names of this ListProfilingGroupsResponse.
        :param profiling_groups: The profiling_groups of this ListProfilingGroupsResponse.
        """
        self.openapi_types = {
            'next_token': str,
            'profiling_group_names': List,
            'profiling_groups': List
        }

        self.attribute_map = {
            'next_token': 'nextToken',
            'profiling_group_names': 'profilingGroupNames',
            'profiling_groups': 'profilingGroups'
        }

        self._next_token = next_token
        self._profiling_group_names = profiling_group_names
        self._profiling_groups = profiling_groups

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ListProfilingGroupsResponse':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ListProfilingGroupsResponse of this ListProfilingGroupsResponse.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def next_token(self):
        """Gets the next_token of this ListProfilingGroupsResponse.


        :return: The next_token of this ListProfilingGroupsResponse.
        :rtype: str
        """
        return self._next_token

    @next_token.setter
    def next_token(self, next_token):
        """Sets the next_token of this ListProfilingGroupsResponse.


        :param next_token: The next_token of this ListProfilingGroupsResponse.
        :type next_token: str
        """

        self._next_token = next_token

    @property
    def profiling_group_names(self):
        """Gets the profiling_group_names of this ListProfilingGroupsResponse.


        :return: The profiling_group_names of this ListProfilingGroupsResponse.
        :rtype: List
        """
        return self._profiling_group_names

    @profiling_group_names.setter
    def profiling_group_names(self, profiling_group_names):
        """Sets the profiling_group_names of this ListProfilingGroupsResponse.


        :param profiling_group_names: The profiling_group_names of this ListProfilingGroupsResponse.
        :type profiling_group_names: List
        """
        if profiling_group_names is None:
            raise ValueError("Invalid value for `profiling_group_names`, must not be `None`")

        self._profiling_group_names = profiling_group_names

    @property
    def profiling_groups(self):
        """Gets the profiling_groups of this ListProfilingGroupsResponse.


        :return: The profiling_groups of this ListProfilingGroupsResponse.
        :rtype: List
        """
        return self._profiling_groups

    @profiling_groups.setter
    def profiling_groups(self, profiling_groups):
        """Sets the profiling_groups of this ListProfilingGroupsResponse.


        :param profiling_groups: The profiling_groups of this ListProfilingGroupsResponse.
        :type profiling_groups: List
        """

        self._profiling_groups = profiling_groups
