# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class FindingsReportSummary(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, id: str=None, profile_end_time: datetime=None, profile_start_time: datetime=None, profiling_group_name: str=None, total_number_of_findings: int=None):
        """FindingsReportSummary - a model defined in OpenAPI

        :param id: The id of this FindingsReportSummary.
        :param profile_end_time: The profile_end_time of this FindingsReportSummary.
        :param profile_start_time: The profile_start_time of this FindingsReportSummary.
        :param profiling_group_name: The profiling_group_name of this FindingsReportSummary.
        :param total_number_of_findings: The total_number_of_findings of this FindingsReportSummary.
        """
        self.openapi_types = {
            'id': str,
            'profile_end_time': datetime,
            'profile_start_time': datetime,
            'profiling_group_name': str,
            'total_number_of_findings': int
        }

        self.attribute_map = {
            'id': 'id',
            'profile_end_time': 'profileEndTime',
            'profile_start_time': 'profileStartTime',
            'profiling_group_name': 'profilingGroupName',
            'total_number_of_findings': 'totalNumberOfFindings'
        }

        self._id = id
        self._profile_end_time = profile_end_time
        self._profile_start_time = profile_start_time
        self._profiling_group_name = profiling_group_name
        self._total_number_of_findings = total_number_of_findings

    @classmethod
    def from_dict(cls, dikt: dict) -> 'FindingsReportSummary':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The FindingsReportSummary of this FindingsReportSummary.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def id(self):
        """Gets the id of this FindingsReportSummary.


        :return: The id of this FindingsReportSummary.
        :rtype: str
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this FindingsReportSummary.


        :param id: The id of this FindingsReportSummary.
        :type id: str
        """

        self._id = id

    @property
    def profile_end_time(self):
        """Gets the profile_end_time of this FindingsReportSummary.


        :return: The profile_end_time of this FindingsReportSummary.
        :rtype: datetime
        """
        return self._profile_end_time

    @profile_end_time.setter
    def profile_end_time(self, profile_end_time):
        """Sets the profile_end_time of this FindingsReportSummary.


        :param profile_end_time: The profile_end_time of this FindingsReportSummary.
        :type profile_end_time: datetime
        """

        self._profile_end_time = profile_end_time

    @property
    def profile_start_time(self):
        """Gets the profile_start_time of this FindingsReportSummary.


        :return: The profile_start_time of this FindingsReportSummary.
        :rtype: datetime
        """
        return self._profile_start_time

    @profile_start_time.setter
    def profile_start_time(self, profile_start_time):
        """Sets the profile_start_time of this FindingsReportSummary.


        :param profile_start_time: The profile_start_time of this FindingsReportSummary.
        :type profile_start_time: datetime
        """

        self._profile_start_time = profile_start_time

    @property
    def profiling_group_name(self):
        """Gets the profiling_group_name of this FindingsReportSummary.


        :return: The profiling_group_name of this FindingsReportSummary.
        :rtype: str
        """
        return self._profiling_group_name

    @profiling_group_name.setter
    def profiling_group_name(self, profiling_group_name):
        """Sets the profiling_group_name of this FindingsReportSummary.


        :param profiling_group_name: The profiling_group_name of this FindingsReportSummary.
        :type profiling_group_name: str
        """

        self._profiling_group_name = profiling_group_name

    @property
    def total_number_of_findings(self):
        """Gets the total_number_of_findings of this FindingsReportSummary.


        :return: The total_number_of_findings of this FindingsReportSummary.
        :rtype: int
        """
        return self._total_number_of_findings

    @total_number_of_findings.setter
    def total_number_of_findings(self, total_number_of_findings):
        """Sets the total_number_of_findings of this FindingsReportSummary.


        :param total_number_of_findings: The total_number_of_findings of this FindingsReportSummary.
        :type total_number_of_findings: int
        """

        self._total_number_of_findings = total_number_of_findings
