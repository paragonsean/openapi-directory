# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class PostAgentProfileRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, agent_profile: str=None):
        """PostAgentProfileRequest - a model defined in OpenAPI

        :param agent_profile: The agent_profile of this PostAgentProfileRequest.
        """
        self.openapi_types = {
            'agent_profile': str
        }

        self.attribute_map = {
            'agent_profile': 'agentProfile'
        }

        self._agent_profile = agent_profile

    @classmethod
    def from_dict(cls, dikt: dict) -> 'PostAgentProfileRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The PostAgentProfile_request of this PostAgentProfileRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def agent_profile(self):
        """Gets the agent_profile of this PostAgentProfileRequest.

         The submitted profiling data. 

        :return: The agent_profile of this PostAgentProfileRequest.
        :rtype: str
        """
        return self._agent_profile

    @agent_profile.setter
    def agent_profile(self, agent_profile):
        """Sets the agent_profile of this PostAgentProfileRequest.

         The submitted profiling data. 

        :param agent_profile: The agent_profile of this PostAgentProfileRequest.
        :type agent_profile: str
        """
        if agent_profile is None:
            raise ValueError("Invalid value for `agent_profile`, must not be `None`")

        self._agent_profile = agent_profile
