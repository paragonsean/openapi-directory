# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class Match(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, frame_address: str=None, target_frames_index: int=None, threshold_breach_value: float=None):
        """Match - a model defined in OpenAPI

        :param frame_address: The frame_address of this Match.
        :param target_frames_index: The target_frames_index of this Match.
        :param threshold_breach_value: The threshold_breach_value of this Match.
        """
        self.openapi_types = {
            'frame_address': str,
            'target_frames_index': int,
            'threshold_breach_value': float
        }

        self.attribute_map = {
            'frame_address': 'frameAddress',
            'target_frames_index': 'targetFramesIndex',
            'threshold_breach_value': 'thresholdBreachValue'
        }

        self._frame_address = frame_address
        self._target_frames_index = target_frames_index
        self._threshold_breach_value = threshold_breach_value

    @classmethod
    def from_dict(cls, dikt: dict) -> 'Match':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Match of this Match.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def frame_address(self):
        """Gets the frame_address of this Match.


        :return: The frame_address of this Match.
        :rtype: str
        """
        return self._frame_address

    @frame_address.setter
    def frame_address(self, frame_address):
        """Sets the frame_address of this Match.


        :param frame_address: The frame_address of this Match.
        :type frame_address: str
        """

        self._frame_address = frame_address

    @property
    def target_frames_index(self):
        """Gets the target_frames_index of this Match.


        :return: The target_frames_index of this Match.
        :rtype: int
        """
        return self._target_frames_index

    @target_frames_index.setter
    def target_frames_index(self, target_frames_index):
        """Sets the target_frames_index of this Match.


        :param target_frames_index: The target_frames_index of this Match.
        :type target_frames_index: int
        """

        self._target_frames_index = target_frames_index

    @property
    def threshold_breach_value(self):
        """Gets the threshold_breach_value of this Match.


        :return: The threshold_breach_value of this Match.
        :rtype: float
        """
        return self._threshold_breach_value

    @threshold_breach_value.setter
    def threshold_breach_value(self, threshold_breach_value):
        """Sets the threshold_breach_value of this Match.


        :param threshold_breach_value: The threshold_breach_value of this Match.
        :type threshold_breach_value: float
        """

        self._threshold_breach_value = threshold_breach_value
