openapi: 3.0.0
info:
  contact:
    email: mike.ralphson@gmail.com
    name: Mike Ralphson
    url: https://github.com/mermade/aws2openapi
    x-twitter: PermittedSoc
  description: "<p> This section provides documentation for the Amazon CodeGuru Profiler\
    \ API operations. </p> <p> Amazon CodeGuru Profiler collects runtime performance\
    \ data from your live applications, and provides recommendations that can help\
    \ you fine-tune your application performance. Using machine learning algorithms,\
    \ CodeGuru Profiler can help you find your most expensive lines of code and suggest\
    \ ways you can improve efficiency and remove CPU bottlenecks. </p> <p> Amazon\
    \ CodeGuru Profiler provides different visualizations of profiling data to help\
    \ you identify what code is running on the CPU, see how much time is consumed,\
    \ and suggest ways to reduce CPU utilization. </p> <note> <p>Amazon CodeGuru Profiler\
    \ currently supports applications written in all Java virtual machine (JVM) languages\
    \ and Python. While CodeGuru Profiler supports both visualizations and recommendations\
    \ for applications written in Java, it can also generate visualizations and a\
    \ subset of recommendations for applications written in other JVM languages and\
    \ Python.</p> </note> <p> For more information, see <a href=\"https://docs.aws.amazon.com/codeguru/latest/profiler-ug/what-is-codeguru-profiler.html\"\
    >What is Amazon CodeGuru Profiler</a> in the <i>Amazon CodeGuru Profiler User\
    \ Guide</i>. </p>"
  license:
    name: Apache 2.0 License
    url: http://www.apache.org/licenses/
  termsOfService: https://aws.amazon.com/service-terms/
  title: Amazon CodeGuru Profiler
  version: 2019-07-18
  x-release: v4
  x-logo:
    url: https://twitter.com/awscloud/profile_image?size=original
    backgroundColor: '#FFFFFF'
  x-providerName: amazonaws.com
  x-serviceName: codeguruprofiler
  x-aws-signingName: codeguru-profiler
  x-origin:
  - contentType: application/json
    url: https://raw.githubusercontent.com/aws/aws-sdk-js/master/apis/codeguruprofiler-2019-07-18.normal.json
    converter:
      url: https://github.com/mermade/aws2openapi
      version: 1.0.0
    x-apisguru-driver: external
  x-apiClientRegistration:
    url: https://portal.aws.amazon.com/gp/aws/developer/registration/index.html?nc2=h_ct
  x-apisguru-categories:
  - cloud
  x-preferred: true
externalDocs:
  description: Amazon Web Services documentation
  url: https://docs.aws.amazon.com/codeguru-profiler/
servers:
- description: The Amazon CodeGuru Profiler multi-region endpoint
  url: "http://codeguru-profiler.{region}.amazonaws.com"
  variables:
    region:
      default: us-east-1
      description: The AWS region
      enum:
      - us-east-1
      - us-east-2
      - us-west-1
      - us-west-2
      - us-gov-west-1
      - us-gov-east-1
      - ca-central-1
      - eu-north-1
      - eu-west-1
      - eu-west-2
      - eu-west-3
      - eu-central-1
      - eu-south-1
      - af-south-1
      - ap-northeast-1
      - ap-northeast-2
      - ap-northeast-3
      - ap-southeast-1
      - ap-southeast-2
      - ap-east-1
      - ap-south-1
      - sa-east-1
      - me-south-1
- description: The Amazon CodeGuru Profiler multi-region endpoint
  url: "https://codeguru-profiler.{region}.amazonaws.com"
  variables:
    region:
      default: us-east-1
      description: The AWS region
      enum:
      - us-east-1
      - us-east-2
      - us-west-1
      - us-west-2
      - us-gov-west-1
      - us-gov-east-1
      - ca-central-1
      - eu-north-1
      - eu-west-1
      - eu-west-2
      - eu-west-3
      - eu-central-1
      - eu-south-1
      - af-south-1
      - ap-northeast-1
      - ap-northeast-2
      - ap-northeast-3
      - ap-southeast-1
      - ap-southeast-2
      - ap-east-1
      - ap-south-1
      - sa-east-1
      - me-south-1
- description: The Amazon CodeGuru Profiler endpoint for China (Beijing) and China
    (Ningxia)
  url: "http://codeguru-profiler.{region}.amazonaws.com.cn"
  variables:
    region:
      default: cn-north-1
      description: The AWS region
      enum:
      - cn-north-1
      - cn-northwest-1
- description: The Amazon CodeGuru Profiler endpoint for China (Beijing) and China
    (Ningxia)
  url: "https://codeguru-profiler.{region}.amazonaws.com.cn"
  variables:
    region:
      default: cn-north-1
      description: The AWS region
      enum:
      - cn-north-1
      - cn-northwest-1
security:
- hmac: []
paths:
  /profilingGroups/{profilingGroupName}/notificationConfiguration:
    get:
      description: Get the current configuration for anomaly notifications for a profiling
        group.
      operationId: GetNotificationConfiguration
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The name of the profiling group we want to get the notification
          configuration for.
        explode: false
        in: path
        name: profilingGroupName
        required: true
        schema:
          maxLength: 255
          minLength: 1
          pattern: "^[\\w-]+$"
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetNotificationConfigurationResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
      x-accepts:
      - application/json
    post:
      description: Add up to 2 anomaly notifications channels for a profiling group.
      operationId: AddNotificationChannels
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The name of the profiling group that we are setting up notifications
          for.
        explode: false
        in: path
        name: profilingGroupName
        required: true
        schema:
          maxLength: 255
          minLength: 1
          pattern: "^[\\w-]+$"
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AddNotificationChannels_request'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AddNotificationChannelsResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceQuotaExceededException'
          description: ServiceQuotaExceededException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
          description: ConflictException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
      x-content-type: application/json
      x-accepts:
      - application/json
  /profilingGroups/{profilingGroupName}/frames/-/metrics:
    post:
      description: ' Returns the time series of values for a requested list of frame
        metrics from a time period.'
      operationId: BatchGetFrameMetricData
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: " The end time of the time period for the returned time series\
          \ values. This is specified using the ISO 8601 format. For example, 2020-06-01T13:15:02.001Z\
          \ represents 1 millisecond past June 1, 2020 1:15:02 PM UTC. "
        explode: true
        in: query
        name: endTime
        required: false
        schema:
          format: date-time
          type: string
        style: form
      - description: ' The duration of the frame metrics used to return the time series
          values. Specify using the ISO 8601 format. The maximum period duration is
          one day (<code>PT24H</code> or <code>P1D</code>). '
        explode: true
        in: query
        name: period
        required: false
        schema:
          maxLength: 64
          minLength: 1
          type: string
        style: form
      - description: ' The name of the profiling group associated with the the frame
          metrics used to return the time series values. '
        explode: false
        in: path
        name: profilingGroupName
        required: true
        schema:
          maxLength: 255
          minLength: 1
          pattern: "^[\\w-]+$"
          type: string
        style: simple
      - description: " The start time of the time period for the frame metrics used\
          \ to return the time series values. This is specified using the ISO 8601\
          \ format. For example, 2020-06-01T13:15:02.001Z represents 1 millisecond\
          \ past June 1, 2020 1:15:02 PM UTC. "
        explode: true
        in: query
        name: startTime
        required: false
        schema:
          format: date-time
          type: string
        style: form
      - description: <p>The requested resolution of time steps for the returned time
          series of values. If the requested target resolution is not available due
          to data not being retained we provide a best effort result by falling back
          to the most granular available resolution after the target resolution. There
          are 3 valid values. </p> <ul> <li> <p> <code>P1D</code> — 1 day </p> </li>
          <li> <p> <code>PT1H</code> — 1 hour </p> </li> <li> <p> <code>PT5M</code>
          — 5 minutes </p> </li> </ul>
        explode: true
        in: query
        name: targetResolution
        required: false
        schema:
          enum:
          - PT5M
          - PT1H
          - P1D
          type: string
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BatchGetFrameMetricData_request'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BatchGetFrameMetricDataResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
      x-content-type: application/json
      x-accepts:
      - application/json
  /profilingGroups/{profilingGroupName}/configureAgent:
    post:
      description: " Used by profiler agents to report their current state and to\
        \ receive remote configuration updates. For example, <code>ConfigureAgent</code>\
        \ can be used to tell an agent whether to profile or not and for how long\
        \ to return profiling data. "
      operationId: ConfigureAgent
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: ' The name of the profiling group for which the configured agent
          is collecting profiling data. '
        explode: false
        in: path
        name: profilingGroupName
        required: true
        schema:
          maxLength: 255
          minLength: 1
          pattern: "^[\\w-]+$"
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ConfigureAgent_request'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConfigureAgentResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
      x-content-type: application/json
      x-accepts:
      - application/json
  /profilingGroups#clientToken:
    post:
      description: Creates a profiling group.
      operationId: CreateProfilingGroup
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: ' Amazon CodeGuru Profiler uses this universally unique identifier
          (UUID) to prevent the accidental creation of duplicate profiling groups
          if there are failures and retries. '
        explode: true
        in: query
        name: clientToken
        required: true
        schema:
          maxLength: 64
          minLength: 1
          pattern: "^[\\w-]+$"
          type: string
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateProfilingGroup_request'
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateProfilingGroupResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceQuotaExceededException'
          description: ServiceQuotaExceededException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
          description: ConflictException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
      x-content-type: application/json
      x-accepts:
      - application/json
  /profilingGroups/{profilingGroupName}:
    delete:
      description: Deletes a profiling group.
      operationId: DeleteProfilingGroup
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The name of the profiling group to delete.
        explode: false
        in: path
        name: profilingGroupName
        required: true
        schema:
          maxLength: 255
          minLength: 1
          pattern: "^[\\w-]+$"
          type: string
        style: simple
      responses:
        "204":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteProfilingGroupResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
          description: ConflictException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
      x-accepts:
      - application/json
    get:
      description: ' Returns a <a href="https://docs.aws.amazon.com/codeguru/latest/profiler-api/API_ProfilingGroupDescription.html">
        <code>ProfilingGroupDescription</code> </a> object that contains information
        about the requested profiling group. '
      operationId: DescribeProfilingGroup
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: ' The name of the profiling group to get information about. '
        explode: false
        in: path
        name: profilingGroupName
        required: true
        schema:
          maxLength: 255
          minLength: 1
          pattern: "^[\\w-]+$"
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DescribeProfilingGroupResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
      x-accepts:
      - application/json
    put:
      description: Updates a profiling group.
      operationId: UpdateProfilingGroup
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The name of the profiling group to update.
        explode: false
        in: path
        name: profilingGroupName
        required: true
        schema:
          maxLength: 255
          minLength: 1
          pattern: "^[\\w-]+$"
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateProfilingGroup_request'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateProfilingGroupResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
          description: ConflictException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
      x-content-type: application/json
      x-accepts:
      - application/json
  /internal/findingsReports:
    get:
      description: ' Returns a list of <a href="https://docs.aws.amazon.com/codeguru/latest/profiler-api/API_FindingsReportSummary.html">
        <code>FindingsReportSummary</code> </a> objects that contain analysis results
        for all profiling groups in your AWS account. '
      operationId: GetFindingsReportAccountSummary
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: "A <code>Boolean</code> value indicating whether to only return\
          \ reports from daily profiles. If set to <code>True</code>, only analysis\
          \ data from daily profiles is returned. If set to <code>False</code>, analysis\
          \ data is returned from smaller time windows (for example, one hour)."
        explode: true
        in: query
        name: dailyReportsOnly
        required: false
        schema:
          type: boolean
        style: form
      - description: "The maximum number of results returned by <code> GetFindingsReportAccountSummary</code>\
          \ in paginated output. When this parameter is used, <code>GetFindingsReportAccountSummary</code>\
          \ only returns <code>maxResults</code> results in a single page along with\
          \ a <code>nextToken</code> response element. The remaining results of the\
          \ initial request can be seen by sending another <code>GetFindingsReportAccountSummary</code>\
          \ request with the returned <code>nextToken</code> value."
        explode: true
        in: query
        name: maxResults
        required: false
        schema:
          maximum: 1000
          minimum: 1
          type: integer
        style: form
      - description: <p>The <code>nextToken</code> value returned from a previous
          paginated <code>GetFindingsReportAccountSummary</code> request where <code>maxResults</code>
          was used and the results exceeded the value of that parameter. Pagination
          continues from the end of the previous results that returned the <code>nextToken</code>
          value. </p> <note> <p>This token should be treated as an opaque identifier
          that is only used to retrieve the next items in a list and not for other
          programmatic purposes.</p> </note>
        explode: true
        in: query
        name: nextToken
        required: false
        schema:
          maxLength: 64
          minLength: 1
          pattern: "^[\\w-]+$"
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetFindingsReportAccountSummaryResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
      x-accepts:
      - application/json
  /profilingGroups/{profilingGroupName}/policy:
    get:
      description: ' Returns the JSON-formatted resource-based policy on a profiling
        group. '
      operationId: GetPolicy
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The name of the profiling group.
        explode: false
        in: path
        name: profilingGroupName
        required: true
        schema:
          maxLength: 255
          minLength: 1
          pattern: "^[\\w-]+$"
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetPolicyResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
      x-accepts:
      - application/json
  /profilingGroups/{profilingGroupName}/profile:
    get:
      description: "<p> Gets the aggregated profile of a profiling group for a specified\
        \ time range. Amazon CodeGuru Profiler collects posted agent profiles for\
        \ a profiling group into aggregated profiles. </p> <pre><code> &lt;note&gt;\
        \ &lt;p&gt; Because aggregated profiles expire over time &lt;code&gt;GetProfile&lt;/code&gt;\
        \ is not idempotent. &lt;/p&gt; &lt;/note&gt; &lt;p&gt; Specify the time range\
        \ for the requested aggregated profile using 1 or 2 of the following parameters:\
        \ &lt;code&gt;startTime&lt;/code&gt;, &lt;code&gt;endTime&lt;/code&gt;, &lt;code&gt;period&lt;/code&gt;.\
        \ The maximum time range allowed is 7 days. If you specify all 3 parameters,\
        \ an exception is thrown. If you specify only &lt;code&gt;period&lt;/code&gt;,\
        \ the latest aggregated profile is returned. &lt;/p&gt; &lt;p&gt; Aggregated\
        \ profiles are available with aggregation periods of 5 minutes, 1 hour, and\
        \ 1 day, aligned to UTC. The aggregation period of an aggregated profile determines\
        \ how long it is retained. For more information, see &lt;a href=&quot;https://docs.aws.amazon.com/codeguru/latest/profiler-api/API_AggregatedProfileTime.html&quot;&gt;\
        \ &lt;code&gt;AggregatedProfileTime&lt;/code&gt; &lt;/a&gt;. The aggregated\
        \ profile's aggregation period determines how long it is retained by CodeGuru\
        \ Profiler. &lt;/p&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt; If the aggregation\
        \ period is 5 minutes, the aggregated profile is retained for 15 days. &lt;/p&gt;\
        \ &lt;/li&gt; &lt;li&gt; &lt;p&gt; If the aggregation period is 1 hour, the\
        \ aggregated profile is retained for 60 days. &lt;/p&gt; &lt;/li&gt; &lt;li&gt;\
        \ &lt;p&gt; If the aggregation period is 1 day, the aggregated profile is\
        \ retained for 3 years. &lt;/p&gt; &lt;/li&gt; &lt;/ul&gt; &lt;p&gt;There\
        \ are two use cases for calling &lt;code&gt;GetProfile&lt;/code&gt;.&lt;/p&gt;\
        \ &lt;ol&gt; &lt;li&gt; &lt;p&gt; If you want to return an aggregated profile\
        \ that already exists, use &lt;a href=&quot;https://docs.aws.amazon.com/codeguru/latest/profiler-api/API_ListProfileTimes.html&quot;&gt;\
        \ &lt;code&gt;ListProfileTimes&lt;/code&gt; &lt;/a&gt; to view the time ranges\
        \ of existing aggregated profiles. Use them in a &lt;code&gt;GetProfile&lt;/code&gt;\
        \ request to return a specific, existing aggregated profile. &lt;/p&gt; &lt;/li&gt;\
        \ &lt;li&gt; &lt;p&gt; If you want to return an aggregated profile for a time\
        \ range that doesn't align with an existing aggregated profile, then CodeGuru\
        \ Profiler makes a best effort to combine existing aggregated profiles from\
        \ the requested time range and return them as one aggregated profile. &lt;/p&gt;\
        \ &lt;p&gt; If aggregated profiles do not exist for the full time range requested,\
        \ then aggregated profiles for a smaller time range are returned. For example,\
        \ if the requested time range is from 00:00 to 00:20, and the existing aggregated\
        \ profiles are from 00:15 and 00:25, then the aggregated profiles from 00:15\
        \ to 00:20 are returned. &lt;/p&gt; &lt;/li&gt; &lt;/ol&gt; </code></pre>"
      operationId: GetProfile
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: "<p> The format of the returned profiling data. The format maps\
          \ to the <code>Accept</code> and <code>Content-Type</code> headers of the\
          \ HTTP request. You can specify one of the following: or the default . </p>\
          \ <pre><code> &lt;ul&gt; &lt;li&gt; &lt;p&gt; &lt;code&gt;application/json&lt;/code&gt;\
          \ — standard JSON format &lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt; &lt;code&gt;application/x-amzn-ion&lt;/code&gt;\
          \ — the Amazon Ion data format. For more information, see &lt;a href=&quot;http://amzn.github.io/ion-docs/&quot;&gt;Amazon\
          \ Ion&lt;/a&gt;. &lt;/p&gt; &lt;/li&gt; &lt;/ul&gt; </code></pre>"
        explode: false
        in: header
        name: Accept
        required: false
        schema:
          type: string
        style: simple
      - description: "<p> The end time of the requested profile. Specify using the\
          \ ISO 8601 format. For example, 2020-06-01T13:15:02.001Z represents 1 millisecond\
          \ past June 1, 2020 1:15:02 PM UTC. </p> <p> If you specify <code>endTime</code>,\
          \ then you must also specify <code>period</code> or <code>startTime</code>,\
          \ but not both. </p>"
        explode: true
        in: query
        name: endTime
        required: false
        schema:
          format: date-time
          type: string
        style: form
      - description: " The maximum depth of the stacks in the code that is represented\
          \ in the aggregated profile. For example, if CodeGuru Profiler finds a method\
          \ <code>A</code>, which calls method <code>B</code>, which calls method\
          \ <code>C</code>, which calls method <code>D</code>, then the depth is 4.\
          \ If the <code>maxDepth</code> is set to 2, then the aggregated profile\
          \ contains representations of methods <code>A</code> and <code>B</code>. "
        explode: true
        in: query
        name: maxDepth
        required: false
        schema:
          maximum: 10000
          minimum: 1
          type: integer
        style: form
      - description: "<p> Used with <code>startTime</code> or <code>endTime</code>\
          \ to specify the time range for the returned aggregated profile. Specify\
          \ using the ISO 8601 format. For example, <code>P1DT1H1M1S</code>. </p>\
          \ <pre><code> &lt;p&gt; To get the latest aggregated profile, specify only\
          \ &lt;code&gt;period&lt;/code&gt;. &lt;/p&gt; </code></pre>"
        explode: true
        in: query
        name: period
        required: false
        schema:
          maxLength: 64
          minLength: 1
          type: string
        style: form
      - description: The name of the profiling group to get.
        explode: false
        in: path
        name: profilingGroupName
        required: true
        schema:
          maxLength: 255
          minLength: 1
          pattern: "^[\\w-]+$"
          type: string
        style: simple
      - description: "<p>The start time of the profile to get. Specify using the ISO\
          \ 8601 format. For example, 2020-06-01T13:15:02.001Z represents 1 millisecond\
          \ past June 1, 2020 1:15:02 PM UTC.</p> <pre><code> &lt;p&gt; If you specify\
          \ &lt;code&gt;startTime&lt;/code&gt;, then you must also specify &lt;code&gt;period&lt;/code&gt;\
          \ or &lt;code&gt;endTime&lt;/code&gt;, but not both. &lt;/p&gt; </code></pre>"
        explode: true
        in: query
        name: startTime
        required: false
        schema:
          format: date-time
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetProfileResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
      x-accepts:
      - application/json
  /internal/profilingGroups/{profilingGroupName}/recommendations#endTime&startTime:
    get:
      description: ' Returns a list of <a href="https://docs.aws.amazon.com/codeguru/latest/profiler-api/API_Recommendation.html">
        <code>Recommendation</code> </a> objects that contain recommendations for
        a profiling group for a given time period. A list of <a href="https://docs.aws.amazon.com/codeguru/latest/profiler-api/API_Anomaly.html">
        <code>Anomaly</code> </a> objects that contains details about anomalies detected
        in the profiling group for the same time period is also returned. '
      operationId: GetRecommendations
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: " The start time of the profile to get analysis data about. You\
          \ must specify <code>startTime</code> and <code>endTime</code>. This is\
          \ specified using the ISO 8601 format. For example, 2020-06-01T13:15:02.001Z\
          \ represents 1 millisecond past June 1, 2020 1:15:02 PM UTC. "
        explode: true
        in: query
        name: endTime
        required: true
        schema:
          format: date-time
          type: string
        style: form
      - description: "<p> The language used to provide analysis. Specify using a string\
          \ that is one of the following <code>BCP 47</code> language codes. </p>\
          \ <ul> <li> <p> <code>de-DE</code> - German, Germany </p> </li> <li> <p>\
          \ <code>en-GB</code> - English, United Kingdom </p> </li> <li> <p> <code>en-US</code>\
          \ - English, United States </p> </li> <li> <p> <code>es-ES</code> - Spanish,\
          \ Spain </p> </li> <li> <p> <code>fr-FR</code> - French, France </p> </li>\
          \ <li> <p> <code>it-IT</code> - Italian, Italy </p> </li> <li> <p> <code>ja-JP</code>\
          \ - Japanese, Japan </p> </li> <li> <p> <code>ko-KR</code> - Korean, Republic\
          \ of Korea </p> </li> <li> <p> <code>pt-BR</code> - Portugese, Brazil </p>\
          \ </li> <li> <p> <code>zh-CN</code> - Chinese, China </p> </li> <li> <p>\
          \ <code>zh-TW</code> - Chinese, Taiwan </p> </li> </ul>"
        explode: true
        in: query
        name: locale
        required: false
        schema:
          description: "BCP47 language code. Supported locales: de-DE, en-GB, en-US,\
            \ es-ES, fr-FR, it-IT, ja-JP, ko-KR, pt-BR, zh-CN, zh-TW"
          type: string
        style: form
      - description: ' The name of the profiling group to get analysis data about. '
        explode: false
        in: path
        name: profilingGroupName
        required: true
        schema:
          maxLength: 255
          minLength: 1
          pattern: "^[\\w-]+$"
          type: string
        style: simple
      - description: " The end time of the profile to get analysis data about. You\
          \ must specify <code>startTime</code> and <code>endTime</code>. This is\
          \ specified using the ISO 8601 format. For example, 2020-06-01T13:15:02.001Z\
          \ represents 1 millisecond past June 1, 2020 1:15:02 PM UTC. "
        explode: true
        in: query
        name: startTime
        required: true
        schema:
          format: date-time
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetRecommendationsResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
      x-accepts:
      - application/json
  /internal/profilingGroups/{profilingGroupName}/findingsReports#endTime&startTime:
    get:
      description: List the available reports for a given profiling group and time
        range.
      operationId: ListFindingsReports
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: "A <code>Boolean</code> value indicating whether to only return\
          \ reports from daily profiles. If set to <code>True</code>, only analysis\
          \ data from daily profiles is returned. If set to <code>False</code>, analysis\
          \ data is returned from smaller time windows (for example, one hour)."
        explode: true
        in: query
        name: dailyReportsOnly
        required: false
        schema:
          type: boolean
        style: form
      - description: " The end time of the profile to get analysis data about. You\
          \ must specify <code>startTime</code> and <code>endTime</code>. This is\
          \ specified using the ISO 8601 format. For example, 2020-06-01T13:15:02.001Z\
          \ represents 1 millisecond past June 1, 2020 1:15:02 PM UTC. "
        explode: true
        in: query
        name: endTime
        required: true
        schema:
          format: date-time
          type: string
        style: form
      - description: "The maximum number of report results returned by <code>ListFindingsReports</code>\
          \ in paginated output. When this parameter is used, <code>ListFindingsReports</code>\
          \ only returns <code>maxResults</code> results in a single page along with\
          \ a <code>nextToken</code> response element. The remaining results of the\
          \ initial request can be seen by sending another <code>ListFindingsReports</code>\
          \ request with the returned <code>nextToken</code> value."
        explode: true
        in: query
        name: maxResults
        required: false
        schema:
          maximum: 1000
          minimum: 1
          type: integer
        style: form
      - description: <p>The <code>nextToken</code> value returned from a previous
          paginated <code>ListFindingsReportsRequest</code> request where <code>maxResults</code>
          was used and the results exceeded the value of that parameter. Pagination
          continues from the end of the previous results that returned the <code>nextToken</code>
          value. </p> <note> <p>This token should be treated as an opaque identifier
          that is only used to retrieve the next items in a list and not for other
          programmatic purposes.</p> </note>
        explode: true
        in: query
        name: nextToken
        required: false
        schema:
          maxLength: 64
          minLength: 1
          pattern: "^[\\w-]+$"
          type: string
        style: form
      - description: The name of the profiling group from which to search for analysis
          data.
        explode: false
        in: path
        name: profilingGroupName
        required: true
        schema:
          maxLength: 255
          minLength: 1
          pattern: "^[\\w-]+$"
          type: string
        style: simple
      - description: " The start time of the profile to get analysis data about. You\
          \ must specify <code>startTime</code> and <code>endTime</code>. This is\
          \ specified using the ISO 8601 format. For example, 2020-06-01T13:15:02.001Z\
          \ represents 1 millisecond past June 1, 2020 1:15:02 PM UTC. "
        explode: true
        in: query
        name: startTime
        required: true
        schema:
          format: date-time
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListFindingsReportsResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
      x-accepts:
      - application/json
  /profilingGroups/{profilingGroupName}/profileTimes#endTime&period&startTime:
    get:
      description: Lists the start times of the available aggregated profiles of a
        profiling group for an aggregation period within the specified time range.
      operationId: ListProfileTimes
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The end time of the time range from which to list the profiles.
        explode: true
        in: query
        name: endTime
        required: true
        schema:
          format: date-time
          type: string
        style: form
      - description: "The maximum number of profile time results returned by <code>ListProfileTimes</code>\
          \ in paginated output. When this parameter is used, <code>ListProfileTimes</code>\
          \ only returns <code>maxResults</code> results in a single page with a <code>nextToken</code>\
          \ response element. The remaining results of the initial request can be\
          \ seen by sending another <code>ListProfileTimes</code> request with the\
          \ returned <code>nextToken</code> value. "
        explode: true
        in: query
        name: maxResults
        required: false
        schema:
          maximum: 1000
          minimum: 1
          type: integer
        style: form
      - description: <p>The <code>nextToken</code> value returned from a previous
          paginated <code>ListProfileTimes</code> request where <code>maxResults</code>
          was used and the results exceeded the value of that parameter. Pagination
          continues from the end of the previous results that returned the <code>nextToken</code>
          value. </p> <note> <p>This token should be treated as an opaque identifier
          that is only used to retrieve the next items in a list and not for other
          programmatic purposes.</p> </note>
        explode: true
        in: query
        name: nextToken
        required: false
        schema:
          maxLength: 64
          minLength: 1
          pattern: "^[\\w-]+$"
          type: string
        style: form
      - description: 'The order (ascending or descending by start time of the profile)
          to use when listing profiles. Defaults to <code>TIMESTAMP_DESCENDING</code>. '
        explode: true
        in: query
        name: orderBy
        required: false
        schema:
          enum:
          - TimestampDescending
          - TimestampAscending
          type: string
        style: form
      - description: <p> The aggregation period. This specifies the period during
          which an aggregation profile collects posted agent profiles for a profiling
          group. There are 3 valid values. </p> <ul> <li> <p> <code>P1D</code> — 1
          day </p> </li> <li> <p> <code>PT1H</code> — 1 hour </p> </li> <li> <p> <code>PT5M</code>
          — 5 minutes </p> </li> </ul>
        explode: true
        in: query
        name: period
        required: true
        schema:
          enum:
          - PT5M
          - PT1H
          - P1D
          type: string
        style: form
      - description: The name of the profiling group.
        explode: false
        in: path
        name: profilingGroupName
        required: true
        schema:
          maxLength: 255
          minLength: 1
          pattern: "^[\\w-]+$"
          type: string
        style: simple
      - description: The start time of the time range from which to list the profiles.
        explode: true
        in: query
        name: startTime
        required: true
        schema:
          format: date-time
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListProfileTimesResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
      x-accepts:
      - application/json
  /profilingGroups:
    get:
      description: ' Returns a list of profiling groups. The profiling groups are
        returned as <a href="https://docs.aws.amazon.com/codeguru/latest/profiler-api/API_ProfilingGroupDescription.html">
        <code>ProfilingGroupDescription</code> </a> objects. '
      operationId: ListProfilingGroups
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: "A <code>Boolean</code> value indicating whether to include a\
          \ description. If <code>true</code>, then a list of <a href=\"https://docs.aws.amazon.com/codeguru/latest/profiler-api/API_ProfilingGroupDescription.html\"\
          > <code>ProfilingGroupDescription</code> </a> objects that contain detailed\
          \ information about profiling groups is returned. If <code>false</code>,\
          \ then a list of profiling group names is returned."
        explode: true
        in: query
        name: includeDescription
        required: false
        schema:
          type: boolean
        style: form
      - description: "The maximum number of profiling groups results returned by <code>ListProfilingGroups</code>\
          \ in paginated output. When this parameter is used, <code>ListProfilingGroups</code>\
          \ only returns <code>maxResults</code> results in a single page along with\
          \ a <code>nextToken</code> response element. The remaining results of the\
          \ initial request can be seen by sending another <code>ListProfilingGroups</code>\
          \ request with the returned <code>nextToken</code> value. "
        explode: true
        in: query
        name: maxResults
        required: false
        schema:
          maximum: 1000
          minimum: 1
          type: integer
        style: form
      - description: <p>The <code>nextToken</code> value returned from a previous
          paginated <code>ListProfilingGroups</code> request where <code>maxResults</code>
          was used and the results exceeded the value of that parameter. Pagination
          continues from the end of the previous results that returned the <code>nextToken</code>
          value. </p> <note> <p>This token should be treated as an opaque identifier
          that is only used to retrieve the next items in a list and not for other
          programmatic purposes.</p> </note>
        explode: true
        in: query
        name: nextToken
        required: false
        schema:
          maxLength: 64
          minLength: 1
          pattern: "^[\\w-]+$"
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListProfilingGroupsResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
      x-accepts:
      - application/json
  /tags/{resourceArn}:
    get:
      description: ' Returns a list of the tags that are assigned to a specified resource. '
      operationId: ListTagsForResource
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: ' The Amazon Resource Name (ARN) of the resource that contains
          the tags to return. '
        explode: false
        in: path
        name: resourceArn
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListTagsForResourceResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
      x-accepts:
      - application/json
    post:
      description: ' Use to assign one or more tags to a resource. '
      operationId: TagResource
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: ' The Amazon Resource Name (ARN) of the resource that the tags
          are added to. '
        explode: false
        in: path
        name: resourceArn
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TagResource_request'
        required: true
      responses:
        "204":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TagResourceResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
      x-content-type: application/json
      x-accepts:
      - application/json
  /profilingGroups/{profilingGroupName}/agentProfile#Content-Type:
    post:
      description: " Submits profiling data to an aggregated profile of a profiling\
        \ group. To get an aggregated profile that is created with this profiling\
        \ data, use <a href=\"https://docs.aws.amazon.com/codeguru/latest/profiler-api/API_GetProfile.html\"\
        > <code>GetProfile</code> </a>. "
      operationId: PostAgentProfile
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: "<p> The format of the submitted profiling data. The format maps\
          \ to the <code>Accept</code> and <code>Content-Type</code> headers of the\
          \ HTTP request. You can specify one of the following: or the default . </p>\
          \ <pre><code> &lt;ul&gt; &lt;li&gt; &lt;p&gt; &lt;code&gt;application/json&lt;/code&gt;\
          \ — standard JSON format &lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt; &lt;code&gt;application/x-amzn-ion&lt;/code&gt;\
          \ — the Amazon Ion data format. For more information, see &lt;a href=&quot;http://amzn.github.io/ion-docs/&quot;&gt;Amazon\
          \ Ion&lt;/a&gt;. &lt;/p&gt; &lt;/li&gt; &lt;/ul&gt; </code></pre>"
        explode: false
        in: header
        name: Content-Type
        required: true
        schema:
          type: string
        style: simple
      - description: ' Amazon CodeGuru Profiler uses this universally unique identifier
          (UUID) to prevent the accidental submission of duplicate profiling data
          if there are failures and retries. '
        explode: true
        in: query
        name: profileToken
        required: false
        schema:
          maxLength: 64
          minLength: 1
          pattern: "^[\\w-]+$"
          type: string
        style: form
      - description: ' The name of the profiling group with the aggregated profile
          that receives the submitted profiling data. '
        explode: false
        in: path
        name: profilingGroupName
        required: true
        schema:
          maxLength: 255
          minLength: 1
          pattern: "^[\\w-]+$"
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PostAgentProfile_request'
        required: true
      responses:
        "204":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PostAgentProfileResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
      x-content-type: application/json
      x-accepts:
      - application/json
  /profilingGroups/{profilingGroupName}/policy/{actionGroup}:
    put:
      description: "<p> Adds permissions to a profiling group's resource-based policy\
        \ that are provided using an action group. If a profiling group doesn't have\
        \ a resource-based policy, one is created for it using the permissions in\
        \ the action group and the roles and users in the <code>principals</code>\
        \ parameter. </p> <pre><code> &lt;p&gt; The one supported action group that\
        \ can be added is &lt;code&gt;agentPermission&lt;/code&gt; which grants &lt;code&gt;ConfigureAgent&lt;/code&gt;\
        \ and &lt;code&gt;PostAgent&lt;/code&gt; permissions. For more information,\
        \ see &lt;a href=&quot;https://docs.aws.amazon.com/codeguru/latest/profiler-ug/resource-based-policies.html&quot;&gt;Resource-based\
        \ policies in CodeGuru Profiler&lt;/a&gt; in the &lt;i&gt;Amazon CodeGuru\
        \ Profiler User Guide&lt;/i&gt;, &lt;a href=&quot;https://docs.aws.amazon.com/codeguru/latest/profiler-api/API_ConfigureAgent.html&quot;&gt;\
        \ &lt;code&gt;ConfigureAgent&lt;/code&gt; &lt;/a&gt;, and &lt;a href=&quot;https://docs.aws.amazon.com/codeguru/latest/profiler-api/API_PostAgentProfile.html&quot;&gt;\
        \ &lt;code&gt;PostAgentProfile&lt;/code&gt; &lt;/a&gt;. &lt;/p&gt; &lt;p&gt;\
        \ The first time you call &lt;code&gt;PutPermission&lt;/code&gt; on a profiling\
        \ group, do not specify a &lt;code&gt;revisionId&lt;/code&gt; because it doesn't\
        \ have a resource-based policy. Subsequent calls must provide a &lt;code&gt;revisionId&lt;/code&gt;\
        \ to specify which revision of the resource-based policy to add the permissions\
        \ to. &lt;/p&gt; &lt;p&gt; The response contains the profiling group's JSON-formatted\
        \ resource policy. &lt;/p&gt; </code></pre>"
      operationId: PutPermission
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: " Specifies an action group that contains permissions to add\
          \ to a profiling group resource. One action group is supported, <code>agentPermissions</code>,\
          \ which grants permission to perform actions required by the profiling agent,\
          \ <code>ConfigureAgent</code> and <code>PostAgentProfile</code> permissions. "
        explode: false
        in: path
        name: actionGroup
        required: true
        schema:
          enum:
          - agentPermissions
          type: string
        style: simple
      - description: The name of the profiling group to grant access to.
        explode: false
        in: path
        name: profilingGroupName
        required: true
        schema:
          maxLength: 255
          minLength: 1
          pattern: "^[\\w-]+$"
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PutPermission_request'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PutPermissionResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
          description: ConflictException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
      x-content-type: application/json
      x-accepts:
      - application/json
  /profilingGroups/{profilingGroupName}/notificationConfiguration/{channelId}:
    delete:
      description: Remove one anomaly notifications channel for a profiling group.
      operationId: RemoveNotificationChannel
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The id of the channel that we want to stop receiving notifications.
        explode: false
        in: path
        name: channelId
        required: true
        schema:
          pattern: "[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12}"
          type: string
        style: simple
      - description: The name of the profiling group we want to change notification
          configuration for.
        explode: false
        in: path
        name: profilingGroupName
        required: true
        schema:
          maxLength: 255
          minLength: 1
          pattern: "^[\\w-]+$"
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RemoveNotificationChannelResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
      x-accepts:
      - application/json
  /profilingGroups/{profilingGroupName}/policy/{actionGroup}#revisionId:
    delete:
      description: " Removes permissions from a profiling group's resource-based policy\
        \ that are provided using an action group. The one supported action group\
        \ that can be removed is <code>agentPermission</code> which grants <code>ConfigureAgent</code>\
        \ and <code>PostAgent</code> permissions. For more information, see <a href=\"\
        https://docs.aws.amazon.com/codeguru/latest/profiler-ug/resource-based-policies.html\"\
        >Resource-based policies in CodeGuru Profiler</a> in the <i>Amazon CodeGuru\
        \ Profiler User Guide</i>, <a href=\"https://docs.aws.amazon.com/codeguru/latest/profiler-api/API_ConfigureAgent.html\"\
        > <code>ConfigureAgent</code> </a>, and <a href=\"https://docs.aws.amazon.com/codeguru/latest/profiler-api/API_PostAgentProfile.html\"\
        > <code>PostAgentProfile</code> </a>. "
      operationId: RemovePermission
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: " Specifies an action group that contains the permissions to\
          \ remove from a profiling group's resource-based policy. One action group\
          \ is supported, <code>agentPermissions</code>, which grants <code>ConfigureAgent</code>\
          \ and <code>PostAgentProfile</code> permissions. "
        explode: false
        in: path
        name: actionGroup
        required: true
        schema:
          enum:
          - agentPermissions
          type: string
        style: simple
      - description: The name of the profiling group.
        explode: false
        in: path
        name: profilingGroupName
        required: true
        schema:
          maxLength: 255
          minLength: 1
          pattern: "^[\\w-]+$"
          type: string
        style: simple
      - description: ' A universally unique identifier (UUID) for the revision of
          the resource-based policy from which you want to remove permissions. '
        explode: true
        in: query
        name: revisionId
        required: true
        schema:
          pattern: "[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12}"
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RemovePermissionResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
          description: ConflictException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
      x-accepts:
      - application/json
  /internal/profilingGroups/{profilingGroupName}/anomalies/{anomalyInstanceId}/feedback:
    post:
      description: Sends feedback to CodeGuru Profiler about whether the anomaly detected
        by the analysis is useful or not.
      operationId: SubmitFeedback
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The universally unique identifier (UUID) of the <a href="https://docs.aws.amazon.com/codeguru/latest/profiler-api/API_AnomalyInstance.html">
          <code>AnomalyInstance</code> </a> object that is included in the analysis
          data.
        explode: false
        in: path
        name: anomalyInstanceId
        required: true
        schema:
          pattern: "[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12}"
          type: string
        style: simple
      - description: The name of the profiling group that is associated with the analysis
          data.
        explode: false
        in: path
        name: profilingGroupName
        required: true
        schema:
          maxLength: 255
          minLength: 1
          pattern: "^[\\w-]+$"
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SubmitFeedback_request'
        required: true
      responses:
        "204":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SubmitFeedbackResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
      x-content-type: application/json
      x-accepts:
      - application/json
  /tags/{resourceArn}#tagKeys:
    delete:
      description: ' Use to remove one or more tags from a resource. '
      operationId: UntagResource
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: ' The Amazon Resource Name (ARN) of the resource that contains
          the tags to remove. '
        explode: false
        in: path
        name: resourceArn
        required: true
        schema:
          type: string
        style: simple
      - description: ' A list of tag keys. Existing tags of resources with keys in
          this list are removed from the specified resource. '
        explode: true
        in: query
        name: tagKeys
        required: true
        schema:
          items:
            $ref: '#/components/schemas/String'
          type: array
        style: form
      responses:
        "204":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UntagResourceResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
      x-accepts:
      - application/json
components:
  parameters:
    X-Amz-Content-Sha256:
      explode: false
      in: header
      name: X-Amz-Content-Sha256
      required: false
      schema:
        type: string
      style: simple
    X-Amz-Date:
      explode: false
      in: header
      name: X-Amz-Date
      required: false
      schema:
        type: string
      style: simple
    X-Amz-Algorithm:
      explode: false
      in: header
      name: X-Amz-Algorithm
      required: false
      schema:
        type: string
      style: simple
    X-Amz-Credential:
      explode: false
      in: header
      name: X-Amz-Credential
      required: false
      schema:
        type: string
      style: simple
    X-Amz-Security-Token:
      explode: false
      in: header
      name: X-Amz-Security-Token
      required: false
      schema:
        type: string
      style: simple
    X-Amz-Signature:
      explode: false
      in: header
      name: X-Amz-Signature
      required: false
      schema:
        type: string
      style: simple
    X-Amz-SignedHeaders:
      explode: false
      in: header
      name: X-Amz-SignedHeaders
      required: false
      schema:
        type: string
      style: simple
  schemas:
    AddNotificationChannelsResponse:
      description: The structure representing the AddNotificationChannelsResponse.
      example:
        notificationConfiguration:
          channels: ""
      properties:
        notificationConfiguration:
          $ref: '#/components/schemas/AddNotificationChannelsResponse_notificationConfiguration'
      type: object
    Channel:
      description: Notification medium for users to get alerted for events that occur
        in application profile. We support SNS topic as a notification channel.
      properties:
        eventPublishers:
          allOf:
          - $ref: '#/components/schemas/EventPublishers'
          - description: List of publishers for different type of events that may
              be detected in an application from the profile. Anomaly detection is
              the only event publisher in Profiler.
        id:
          allOf:
          - $ref: '#/components/schemas/ChannelId'
          - description: Unique identifier for each <code>Channel</code> in the notification
              configuration of a Profiling Group. A random UUID for channelId is used
              when adding a channel to the notification configuration if not specified
              in the request.
        uri:
          allOf:
          - $ref: '#/components/schemas/ChannelUri'
          - description: Unique arn of the resource to be used for notifications.
              We support a valid SNS topic arn as a channel uri.
      required:
      - eventPublishers
      - uri
      type: object
    ServiceQuotaExceededException: {}
    InternalServerException: {}
    ConflictException: {}
    ValidationException: {}
    ThrottlingException: {}
    ResourceNotFoundException: {}
    BatchGetFrameMetricDataResponse:
      description: The structure representing the BatchGetFrameMetricDataResponse.
      example:
        unprocessedEndTimes: ""
        endTimes: ""
        startTime: ""
        endTime: ""
        resolution: ""
        frameMetricData: ""
      properties:
        endTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          - description: " The end time of the time period for the returned time series\
              \ values. This is specified using the ISO 8601 format. For example,\
              \ 2020-06-01T13:15:02.001Z represents 1 millisecond past June 1, 2020\
              \ 1:15:02 PM UTC. "
        endTimes:
          allOf:
          - $ref: '#/components/schemas/ListOfTimestamps'
          - description: " List of instances, or time steps, in the time series. For\
              \ example, if the <code>period</code> is one day (<code>PT24H)</code>),\
              \ and the <code>resolution</code> is five minutes (<code>PT5M</code>),\
              \ then there are 288 <code>endTimes</code> in the list that are each\
              \ five minutes appart. "
        frameMetricData:
          allOf:
          - $ref: '#/components/schemas/FrameMetricData'
          - description: "Details of the metrics to request a time series of values.\
              \ The metric includes the name of the frame, the aggregation type to\
              \ calculate the metric value for the frame, and the thread states to\
              \ use to get the count for the metric value of the frame."
        resolution:
          allOf:
          - $ref: '#/components/schemas/AggregationPeriod'
          - description: <p>Resolution or granularity of the profile data used to
              generate the time series. This is the value used to jump through time
              steps in a time series. There are 3 valid values. </p> <ul> <li> <p>
              <code>P1D</code> — 1 day </p> </li> <li> <p> <code>PT1H</code> — 1 hour
              </p> </li> <li> <p> <code>PT5M</code> — 5 minutes </p> </li> </ul>
        startTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          - description: " The start time of the time period for the returned time\
              \ series values. This is specified using the ISO 8601 format. For example,\
              \ 2020-06-01T13:15:02.001Z represents 1 millisecond past June 1, 2020\
              \ 1:15:02 PM UTC. "
        unprocessedEndTimes:
          allOf:
          - $ref: '#/components/schemas/UnprocessedEndTimeMap'
          - description: List of instances which remained unprocessed. This will create
              a missing time step in the list of end times.
      required:
      - endTime
      - endTimes
      - frameMetricData
      - resolution
      - startTime
      - unprocessedEndTimes
      type: object
    FrameMetric:
      description: " The frame name, metric type, and thread states. These are used\
        \ to derive the value of the metric for the frame."
      properties:
        frameName:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: ' Name of the method common across the multiple occurrences
              of a frame in an application profile.'
        threadStates:
          allOf:
          - $ref: '#/components/schemas/ThreadStates'
          - description: List of application runtime thread states used to get the
              counts for a frame a derive a metric value.
        type:
          allOf:
          - $ref: '#/components/schemas/MetricType'
          - description: ' A type of aggregation that specifies how a metric for a
              frame is analyzed. The supported value <code>AggregatedRelativeTotalTime</code>
              is an aggregation of the metric value for one frame that is calculated
              across the occurrences of all frames in a profile. '
      required:
      - frameName
      - threadStates
      - type
      type: object
    ConfigureAgentResponse:
      description: The structure representing the configureAgentResponse.
      example:
        configuration:
          periodInSeconds: ""
          shouldProfile: ""
          agentParameters: ""
      properties:
        configuration:
          $ref: '#/components/schemas/ConfigureAgentResponse_configuration'
      required:
      - configuration
      type: object
    String:
      type: string
    CreateProfilingGroupResponse:
      description: The structure representing the createProfilingGroupResponse.
      example:
        profilingGroup:
          computePlatform: ""
          createdAt: ""
          agentOrchestrationConfig:
            profilingEnabled: ""
          profilingStatus:
            latestAgentProfileReportedAt: ""
            latestAgentOrchestratedAt: ""
            latestAggregatedProfile:
              period: ""
              start: ""
          name: ""
          arn: ""
          tags: ""
          updatedAt: ""
      properties:
        profilingGroup:
          $ref: '#/components/schemas/CreateProfilingGroupResponse_profilingGroup'
      required:
      - profilingGroup
      type: object
    Boolean:
      type: boolean
    DeleteProfilingGroupResponse:
      description: The structure representing the deleteProfilingGroupResponse.
      properties: {}
      type: object
    DescribeProfilingGroupResponse:
      description: The structure representing the describeProfilingGroupResponse.
      example:
        profilingGroup:
          computePlatform: ""
          createdAt: ""
          agentOrchestrationConfig:
            profilingEnabled: ""
          profilingStatus:
            latestAgentProfileReportedAt: ""
            latestAgentOrchestratedAt: ""
            latestAggregatedProfile:
              period: ""
              start: ""
          name: ""
          arn: ""
          tags: ""
          updatedAt: ""
      properties:
        profilingGroup:
          $ref: '#/components/schemas/DescribeProfilingGroupResponse_profilingGroup'
      required:
      - profilingGroup
      type: object
    GetFindingsReportAccountSummaryResponse:
      description: The structure representing the GetFindingsReportAccountSummaryResponse.
      example:
        nextToken: ""
        reportSummaries: ""
      properties:
        nextToken:
          allOf:
          - $ref: '#/components/schemas/PaginationToken'
          - description: "The <code>nextToken</code> value to include in a future\
              \ <code>GetFindingsReportAccountSummary</code> request. When the results\
              \ of a <code>GetFindingsReportAccountSummary</code> request exceed <code>maxResults</code>,\
              \ this value can be used to retrieve the next page of results. This\
              \ value is <code>null</code> when there are no more results to return."
        reportSummaries:
          allOf:
          - $ref: '#/components/schemas/FindingsReportSummaries'
          - description: The return list of <a href="https://docs.aws.amazon.com/codeguru/latest/profiler-api/API_FindingsReportSummary.html">
              <code>FindingsReportSummary</code> </a> objects taht contain summaries
              of analysis results for all profiling groups in your AWS account.
      required:
      - reportSummaries
      type: object
    GetNotificationConfigurationResponse:
      description: The structure representing the GetNotificationConfigurationResponse.
      example:
        notificationConfiguration:
          channels: ""
      properties:
        notificationConfiguration:
          $ref: '#/components/schemas/GetNotificationConfigurationResponse_notificationConfiguration'
      required:
      - notificationConfiguration
      type: object
    GetPolicyResponse:
      description: The structure representing the <code>getPolicyResponse</code>.
      example:
        revisionId: ""
        policy: ""
      properties:
        policy:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The JSON-formatted resource-based policy attached to the
              <code>ProfilingGroup</code>.
        revisionId:
          allOf:
          - $ref: '#/components/schemas/RevisionId'
          - description: A unique identifier for the current revision of the returned
              policy.
      required:
      - policy
      - revisionId
      type: object
    GetProfileResponse:
      description: The structure representing the getProfileResponse.
      example:
        profile: ""
      properties:
        profile:
          allOf:
          - $ref: '#/components/schemas/AggregatedProfile'
          - description: Information about the profile.
      required:
      - profile
      type: object
    GetRecommendationsResponse:
      description: The structure representing the GetRecommendationsResponse.
      example:
        profileEndTime: ""
        profileStartTime: ""
        anomalies: ""
        recommendations: ""
        profilingGroupName: ""
      properties:
        anomalies:
          allOf:
          - $ref: '#/components/schemas/Anomalies'
          - description: ' The list of anomalies that the analysis has found for this
              profile. '
        profileEndTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          - description: " The end time of the profile the analysis data is about.\
              \ This is specified using the ISO 8601 format. For example, 2020-06-01T13:15:02.001Z\
              \ represents 1 millisecond past June 1, 2020 1:15:02 PM UTC. "
        profileStartTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          - description: " The start time of the profile the analysis data is about.\
              \ This is specified using the ISO 8601 format. For example, 2020-06-01T13:15:02.001Z\
              \ represents 1 millisecond past June 1, 2020 1:15:02 PM UTC. "
        profilingGroupName:
          allOf:
          - $ref: '#/components/schemas/ProfilingGroupName'
          - description: The name of the profiling group the analysis data is about.
        recommendations:
          allOf:
          - $ref: '#/components/schemas/Recommendations'
          - description: The list of recommendations that the analysis found for this
              profile.
      required:
      - anomalies
      - profileEndTime
      - profileStartTime
      - profilingGroupName
      - recommendations
      type: object
    ListFindingsReportsResponse:
      description: The structure representing the ListFindingsReportsResponse.
      example:
        nextToken: ""
        findingsReportSummaries: ""
      properties:
        findingsReportSummaries:
          allOf:
          - $ref: '#/components/schemas/FindingsReportSummaries'
          - description: The list of analysis results summaries.
        nextToken:
          allOf:
          - $ref: '#/components/schemas/PaginationToken'
          - description: "The <code>nextToken</code> value to include in a future\
              \ <code>ListFindingsReports</code> request. When the results of a <code>ListFindingsReports</code>\
              \ request exceed <code>maxResults</code>, this value can be used to\
              \ retrieve the next page of results. This value is <code>null</code>\
              \ when there are no more results to return."
      required:
      - findingsReportSummaries
      type: object
    ListProfileTimesResponse:
      description: The structure representing the listProfileTimesResponse.
      example:
        nextToken: ""
        profileTimes: ""
      properties:
        nextToken:
          allOf:
          - $ref: '#/components/schemas/PaginationToken'
          - description: "The <code>nextToken</code> value to include in a future\
              \ <code>ListProfileTimes</code> request. When the results of a <code>ListProfileTimes</code>\
              \ request exceed <code>maxResults</code>, this value can be used to\
              \ retrieve the next page of results. This value is <code>null</code>\
              \ when there are no more results to return. "
        profileTimes:
          allOf:
          - $ref: '#/components/schemas/ProfileTimes'
          - description: 'The list of start times of the available profiles for the
              aggregation period in the specified time range. '
      required:
      - profileTimes
      type: object
    ListProfilingGroupsResponse:
      description: The structure representing the listProfilingGroupsResponse.
      example:
        profilingGroups: ""
        nextToken: ""
        profilingGroupNames: ""
      properties:
        nextToken:
          allOf:
          - $ref: '#/components/schemas/PaginationToken'
          - description: "The <code>nextToken</code> value to include in a future\
              \ <code>ListProfilingGroups</code> request. When the results of a <code>ListProfilingGroups</code>\
              \ request exceed <code>maxResults</code>, this value can be used to\
              \ retrieve the next page of results. This value is <code>null</code>\
              \ when there are no more results to return. "
        profilingGroupNames:
          allOf:
          - $ref: '#/components/schemas/ProfilingGroupNames'
          - description: " A returned list of profiling group names. A list of the\
              \ names is returned only if <code>includeDescription</code> is <code>false</code>,\
              \ otherwise a list of <a href=\"https://docs.aws.amazon.com/codeguru/latest/profiler-api/API_ProfilingGroupDescription.html\"\
              > <code>ProfilingGroupDescription</code> </a> objects is returned. "
        profilingGroups:
          allOf:
          - $ref: '#/components/schemas/ProfilingGroupDescriptions'
          - description: " A returned list <a href=\"https://docs.aws.amazon.com/codeguru/latest/profiler-api/API_ProfilingGroupDescription.html\"\
              > <code>ProfilingGroupDescription</code> </a> objects. A list of <a\
              \ href=\"https://docs.aws.amazon.com/codeguru/latest/profiler-api/API_ProfilingGroupDescription.html\"\
              > <code>ProfilingGroupDescription</code> </a> objects is returned only\
              \ if <code>includeDescription</code> is <code>true</code>, otherwise\
              \ a list of profiling group names is returned. "
      required:
      - profilingGroupNames
      type: object
    ListTagsForResourceResponse:
      example:
        tags: ""
      properties:
        tags:
          allOf:
          - $ref: '#/components/schemas/TagsMap'
          - description: ' The list of tags assigned to the specified resource. This
              is the list of tags returned in the response. '
      type: object
    PostAgentProfileResponse:
      description: The structure representing the postAgentProfileResponse.
      properties: {}
      type: object
    PutPermissionResponse:
      description: The structure representing the <code>putPermissionResponse</code>.
      example:
        revisionId: ""
        policy: ""
      properties:
        policy:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: ' The JSON-formatted resource-based policy on the profiling
              group that includes the added permissions. '
        revisionId:
          allOf:
          - $ref: '#/components/schemas/RevisionId'
          - description: ' A universally unique identifier (UUID) for the revision
              of the resource-based policy that includes the added permissions. The
              JSON-formatted policy is in the <code>policy</code> element of the response. '
      required:
      - policy
      - revisionId
      type: object
    Principal:
      type: string
    RemoveNotificationChannelResponse:
      description: The structure representing the RemoveNotificationChannelResponse.
      example:
        notificationConfiguration:
          channels: ""
      properties:
        notificationConfiguration:
          $ref: '#/components/schemas/AddNotificationChannelsResponse_notificationConfiguration'
      type: object
    RemovePermissionResponse:
      description: The structure representing the <code>removePermissionResponse</code>.
      example:
        revisionId: ""
        policy: ""
      properties:
        policy:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: ' The JSON-formatted resource-based policy on the profiling
              group after the specified permissions were removed. '
        revisionId:
          allOf:
          - $ref: '#/components/schemas/RevisionId'
          - description: ' A universally unique identifier (UUID) for the revision
              of the resource-based policy after the specified permissions were removed.
              The updated JSON-formatted policy is in the <code>policy</code> element
              of the response. '
      required:
      - policy
      - revisionId
      type: object
    SubmitFeedbackResponse:
      description: The structure representing the SubmitFeedbackResponse.
      properties: {}
      type: object
    TagResourceResponse:
      properties: {}
      type: object
    UntagResourceResponse:
      properties: {}
      type: object
    UpdateProfilingGroupResponse:
      description: The structure representing the updateProfilingGroupResponse.
      example:
        profilingGroup:
          computePlatform: ""
          createdAt: ""
          agentOrchestrationConfig:
            profilingEnabled: ""
          profilingStatus:
            latestAgentProfileReportedAt: ""
            latestAgentOrchestratedAt: ""
            latestAggregatedProfile:
              period: ""
              start: ""
          name: ""
          arn: ""
          tags: ""
          updatedAt: ""
      properties:
        profilingGroup:
          $ref: '#/components/schemas/UpdateProfilingGroupResponse_profilingGroup'
      required:
      - profilingGroup
      type: object
    ActionGroup:
      enum:
      - agentPermissions
      type: string
    Channels:
      items:
        $ref: '#/components/schemas/Channel'
      maxItems: 2
      minItems: 1
      type: array
    ProfilingGroupName:
      maxLength: 255
      minLength: 1
      pattern: "^[\\w-]+$"
      type: string
    AddNotificationChannelsRequest:
      description: The structure representing the AddNotificationChannelsRequest.
      example:
        channels: ""
      properties:
        channels:
          allOf:
          - $ref: '#/components/schemas/Channels'
          - description: One or 2 channels to report to when anomalies are detected.
      required:
      - channels
      title: AddNotificationChannelsRequest
      type: object
    NotificationConfiguration:
      description: The configuration for notifications stored for each profiling group.
        This includes up to to two channels and a list of event publishers associated
        with each channel.
      properties:
        channels:
          allOf:
          - $ref: '#/components/schemas/Channels'
          - description: List of up to two channels to be used for sending notifications
              for events detected from the application profile.
      type: object
    AgentParameters:
      additionalProperties:
        $ref: '#/components/schemas/String'
      type: object
    Integer:
      type: integer
    AgentConfiguration:
      description: ' The response of <a href="https://docs.aws.amazon.com/codeguru/latest/profiler-api/API_ConfigureAgent.html">
        <code>ConfigureAgent</code> </a> that specifies if an agent profiles or not
        and for how long to return profiling data. '
      properties:
        agentParameters:
          allOf:
          - $ref: '#/components/schemas/AgentParameters'
          - description: "<p> Parameters used by the profiler. The valid parameters\
              \ are: </p> <ul> <li> <p> <code>MaxStackDepth</code> - The maximum depth\
              \ of the stacks in the code that is represented in the profile. For\
              \ example, if CodeGuru Profiler finds a method <code>A</code>, which\
              \ calls method <code>B</code>, which calls method <code>C</code>, which\
              \ calls method <code>D</code>, then the depth is 4. If the <code>maxDepth</code>\
              \ is set to 2, then the profiler evaluates <code>A</code> and <code>B</code>.\
              \ </p> </li> <li> <p> <code>MemoryUsageLimitPercent</code> - The percentage\
              \ of memory that is used by the profiler.</p> </li> <li> <p> <code>MinimumTimeForReportingInMilliseconds</code>\
              \ - The minimum time in milliseconds between sending reports. </p> </li>\
              \ <li> <p> <code>ReportingIntervalInMilliseconds</code> - The reporting\
              \ interval in milliseconds used to report profiles. </p> </li> <li>\
              \ <p> <code>SamplingIntervalInMilliseconds</code> - The sampling interval\
              \ in milliseconds that is used to profile samples. </p> </li> </ul>"
        periodInSeconds:
          allOf:
          - $ref: '#/components/schemas/Integer'
          - description: " How long a profiling agent should send profiling data using\
              \ <a href=\"https://docs.aws.amazon.com/codeguru/latest/profiler-api/API_ConfigureAgent.html\"\
              > <code>ConfigureAgent</code> </a>. For example, if this is set to 300,\
              \ the profiling agent calls <a href=\"https://docs.aws.amazon.com/codeguru/latest/profiler-api/API_ConfigureAgent.html\"\
              > <code>ConfigureAgent</code> </a> every 5 minutes to submit the profiled\
              \ data collected during that period. "
        shouldProfile:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          - description: ' A <code>Boolean</code> that specifies whether the profiling
              agent collects profiling data or not. Set to <code>true</code> to enable
              profiling. '
      required:
      - periodInSeconds
      - shouldProfile
      type: object
    AgentOrchestrationConfig:
      description: ' Specifies whether profiling is enabled or disabled for a profiling
        group. It is used by <a href="https://docs.aws.amazon.com/codeguru/latest/profiler-api/API_ConfigureAgent.html">
        <code>ConfigureAgent</code> </a> to enable or disable profiling for a profiling
        group. '
      properties:
        profilingEnabled:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          - description: ' A <code>Boolean</code> that specifies whether the profiling
              agent collects profiling data or not. Set to <code>true</code> to enable
              profiling. '
      required:
      - profilingEnabled
      type: object
    AgentParameterField:
      enum:
      - SamplingIntervalInMilliseconds
      - ReportingIntervalInMilliseconds
      - MinimumTimeForReportingInMilliseconds
      - MemoryUsageLimitPercent
      - MaxStackDepth
      type: string
    AgentProfile:
      type: string
    AggregatedProfile:
      type: string
    AggregationPeriod:
      enum:
      - PT5M
      - PT1H
      - P1D
      type: string
    Timestamp:
      format: date-time
      type: string
    AggregatedProfileTime:
      description: " Specifies the aggregation period and aggregation start time for\
        \ an aggregated profile. An aggregated profile is used to collect posted agent\
        \ profiles during an aggregation period. There are three possible aggregation\
        \ periods (1 day, 1 hour, or 5 minutes). "
      properties:
        period:
          allOf:
          - $ref: '#/components/schemas/AggregationPeriod'
          - description: <p> The aggregation period. This indicates the period during
              which an aggregation profile collects posted agent profiles for a profiling
              group. Use one of three valid durations that are specified using the
              ISO 8601 format. </p> <ul> <li> <p> <code>P1D</code> — 1 day </p> </li>
              <li> <p> <code>PT1H</code> — 1 hour </p> </li> <li> <p> <code>PT5M</code>
              — 5 minutes </p> </li> </ul>
        start:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          - description: "<p> The time that aggregation of posted agent profiles for\
              \ a profiling group starts. The aggregation profile contains profiles\
              \ posted by the agent starting at this time for an aggregation period\
              \ specified by the <code>period</code> property of the <code>AggregatedProfileTime</code>\
              \ object. </p> <p> Specify <code>start</code> using the ISO 8601 format.\
              \ For example, 2020-06-01T13:15:02.001Z represents 1 millisecond past\
              \ June 1, 2020 1:15:02 PM UTC. </p>"
      type: object
    Anomaly:
      description: ' Details about an anomaly in a specific metric of application
        profile. The anomaly is detected using analysis of the metric data over a
        period of time. '
      properties:
        instances:
          allOf:
          - $ref: '#/components/schemas/AnomalyInstances'
          - description: ' A list of the instances of the detected anomalies during
              the requested period. '
        metric:
          $ref: '#/components/schemas/Anomaly_metric'
        reason:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The reason for which metric was flagged as anomalous.
      required:
      - instances
      - metric
      - reason
      type: object
    Anomalies:
      items:
        $ref: '#/components/schemas/Anomaly'
      type: array
    AnomalyInstances:
      items:
        $ref: '#/components/schemas/AnomalyInstance'
      type: array
    Metric:
      description: ' Details about the metric that the analysis used when it detected
        the anomaly. The metric what is analyzed to create recommendations. It includes
        the name of the frame that was analyzed and the type and thread states used
        to derive the metric value for that frame. '
      properties:
        frameName:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: ' The name of the method that appears as a frame in any stack
              in a profile. '
        threadStates:
          allOf:
          - $ref: '#/components/schemas/Strings'
          - description: ' The list of application runtime thread states that is used
              to calculate the metric value for the frame. '
        type:
          allOf:
          - $ref: '#/components/schemas/MetricType'
          - description: ' A type that specifies how a metric for a frame is analyzed.
              The supported value <code>AggregatedRelativeTotalTime</code> is an aggregation
              of the metric value for one frame that is calculated across the occurences
              of all frames in a profile.'
      required:
      - frameName
      - threadStates
      - type
      type: object
    UserFeedback:
      description: Feedback that can be submitted for each instance of an anomaly
        by the user. Feedback is be used for improvements in generating recommendations
        for the application.
      properties:
        type:
          allOf:
          - $ref: '#/components/schemas/FeedbackType'
          - description: Optional <code>Positive</code> or <code>Negative</code> feedback
              submitted by the user about whether the recommendation is useful or
              not.
      required:
      - type
      type: object
    AnomalyInstance:
      description: The specific duration in which the metric is flagged as anomalous.
      properties:
        endTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          - description: " The end time of the period during which the metric is flagged\
              \ as anomalous. This is specified using the ISO 8601 format. For example,\
              \ 2020-06-01T13:15:02.001Z represents 1 millisecond past June 1, 2020\
              \ 1:15:02 PM UTC. "
        id:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: ' The universally unique identifier (UUID) of an instance
              of an anomaly in a metric. '
        startTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          - description: " The start time of the period during which the metric is\
              \ flagged as anomalous. This is specified using the ISO 8601 format.\
              \ For example, 2020-06-01T13:15:02.001Z represents 1 millisecond past\
              \ June 1, 2020 1:15:02 PM UTC. "
        userFeedback:
          $ref: '#/components/schemas/AnomalyInstance_userFeedback'
      required:
      - id
      - startTime
      type: object
    AnomalyInstanceId:
      pattern: "[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12}"
      type: string
    FrameMetrics:
      items:
        $ref: '#/components/schemas/FrameMetric'
      type: array
    Period:
      maxLength: 64
      minLength: 1
      type: string
    BatchGetFrameMetricDataRequest:
      description: The structure representing the BatchGetFrameMetricDataRequest.
      example:
        frameMetrics: ""
      properties:
        frameMetrics:
          allOf:
          - $ref: '#/components/schemas/FrameMetrics'
          - description: " The details of the metrics that are used to request a time\
              \ series of values. The metric includes the name of the frame, the aggregation\
              \ type to calculate the metric value for the frame, and the thread states\
              \ to use to get the count for the metric value of the frame."
      title: BatchGetFrameMetricDataRequest
      type: object
    ListOfTimestamps:
      items:
        $ref: '#/components/schemas/TimestampStructure'
      type: array
    FrameMetricData:
      items:
        $ref: '#/components/schemas/FrameMetricDatum'
      type: array
    UnprocessedEndTimeMap:
      additionalProperties:
        $ref: '#/components/schemas/ListOfTimestamps'
      type: object
    EventPublishers:
      items:
        $ref: '#/components/schemas/EventPublisher'
      maxItems: 1
      minItems: 1
      type: array
    ChannelId:
      pattern: "[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12}"
      type: string
    ChannelUri:
      description: "Channel URI uniquely identifies a Notification Channel. TopicArn\
        \ is the uri for an SNS channel, emailId is uri for an email channel etc.\
        \ Currently we only support SNS channels and thus required to be an ARN"
      type: string
    ClientToken:
      maxLength: 64
      minLength: 1
      pattern: "^[\\w-]+$"
      type: string
    ComputePlatform:
      enum:
      - Default
      - AWSLambda
      type: string
    FleetInstanceId:
      maxLength: 255
      minLength: 1
      type: string
    Metadata:
      additionalProperties:
        $ref: '#/components/schemas/String'
      type: object
    ConfigureAgentRequest:
      description: The structure representing the configureAgentRequest.
      example:
        metadata: ""
        fleetInstanceId: ""
      properties:
        fleetInstanceId:
          allOf:
          - $ref: '#/components/schemas/FleetInstanceId'
          - description: " A universally unique identifier (UUID) for a profiling\
              \ instance. For example, if the profiling instance is an Amazon EC2\
              \ instance, it is the instance ID. If it is an AWS Fargate container,\
              \ it is the container's task ID. "
        metadata:
          allOf:
          - $ref: '#/components/schemas/Metadata'
          - description: <p> Metadata captured about the compute platform the agent
              is running on. It includes information about sampling and reporting.
              The valid fields are:</p> <ul> <li> <p> <code>COMPUTE_PLATFORM</code>
              - The compute platform on which the agent is running </p> </li> <li>
              <p> <code>AGENT_ID</code> - The ID for an agent instance. </p> </li>
              <li> <p> <code>AWS_REQUEST_ID</code> - The AWS request ID of a Lambda
              invocation. </p> </li> <li> <p> <code>EXECUTION_ENVIRONMENT</code> -
              The execution environment a Lambda function is running on. </p> </li>
              <li> <p> <code>LAMBDA_FUNCTION_ARN</code> - The Amazon Resource Name
              (ARN) that is used to invoke a Lambda function. </p> </li> <li> <p>
              <code>LAMBDA_MEMORY_LIMIT_IN_MB</code> - The memory allocated to a Lambda
              function. </p> </li> <li> <p> <code>LAMBDA_REMAINING_TIME_IN_MILLISECONDS</code>
              - The time in milliseconds before execution of a Lambda function times
              out. </p> </li> <li> <p> <code>LAMBDA_TIME_GAP_BETWEEN_INVOKES_IN_MILLISECONDS</code>
              - The time in milliseconds between two invocations of a Lambda function.
              </p> </li> <li> <p> <code>LAMBDA_PREVIOUS_EXECUTION_TIME_IN_MILLISECONDS</code>
              - The time in milliseconds for the previous Lambda invocation. </p>
              </li> </ul>
      title: ConfigureAgentRequest
      type: object
    TagsMap:
      additionalProperties:
        $ref: '#/components/schemas/String'
      type: object
    CreateProfilingGroupRequest:
      description: The structure representing the createProfiliingGroupRequest.
      example:
        computePlatform: ""
        agentOrchestrationConfig:
          profilingEnabled: ""
        profilingGroupName: ""
        tags: ""
      properties:
        agentOrchestrationConfig:
          $ref: '#/components/schemas/CreateProfilingGroupRequest_agentOrchestrationConfig'
        computePlatform:
          allOf:
          - $ref: '#/components/schemas/ComputePlatform'
          - description: " The compute platform of the profiling group. Use <code>AWSLambda</code>\
              \ if your application runs on AWS Lambda. Use <code>Default</code> if\
              \ your application runs on a compute platform that is not AWS Lambda,\
              \ such an Amazon EC2 instance, an on-premises server, or a different\
              \ platform. If not specified, <code>Default</code> is used. "
        profilingGroupName:
          allOf:
          - $ref: '#/components/schemas/ProfilingGroupName'
          - description: The name of the profiling group to create.
        tags:
          allOf:
          - $ref: '#/components/schemas/TagsMap'
          - description: ' A list of tags to add to the created profiling group. '
      required:
      - profilingGroupName
      title: CreateProfilingGroupRequest
      type: object
    ProfilingGroupDescription:
      description: ' Contains information about a profiling group. '
      properties:
        agentOrchestrationConfig:
          $ref: '#/components/schemas/ProfilingGroupDescription_agentOrchestrationConfig'
        arn:
          allOf:
          - $ref: '#/components/schemas/ProfilingGroupArn'
          - description: The Amazon Resource Name (ARN) identifying the profiling
              group resource.
        computePlatform:
          allOf:
          - $ref: '#/components/schemas/ComputePlatform'
          - description: " The compute platform of the profiling group. If it is set\
              \ to <code>AWSLambda</code>, then the profiled application runs on AWS\
              \ Lambda. If it is set to <code>Default</code>, then the profiled application\
              \ runs on a compute platform that is not AWS Lambda, such an Amazon\
              \ EC2 instance, an on-premises server, or a different platform. The\
              \ default is <code>Default</code>. "
        createdAt:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          - description: "The time when the profiling group was created. Specify using\
              \ the ISO 8601 format. For example, 2020-06-01T13:15:02.001Z represents\
              \ 1 millisecond past June 1, 2020 1:15:02 PM UTC. "
        name:
          allOf:
          - $ref: '#/components/schemas/ProfilingGroupName'
          - description: The name of the profiling group.
        profilingStatus:
          $ref: '#/components/schemas/ProfilingGroupDescription_profilingStatus'
        tags:
          allOf:
          - $ref: '#/components/schemas/TagsMap'
          - description: ' A list of the tags that belong to this profiling group. '
        updatedAt:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          - description: " The date and time when the profiling group was last updated.\
              \ Specify using the ISO 8601 format. For example, 2020-06-01T13:15:02.001Z\
              \ represents 1 millisecond past June 1, 2020 1:15:02 PM UTC. "
      type: object
    DeleteProfilingGroupRequest:
      description: The structure representing the deleteProfilingGroupRequest.
      properties: {}
      title: DeleteProfilingGroupRequest
      type: object
    DescribeProfilingGroupRequest:
      description: The structure representing the describeProfilingGroupRequest.
      properties: {}
      title: DescribeProfilingGroupRequest
      type: object
    Double:
      format: double
      type: number
    EventPublisher:
      enum:
      - AnomalyDetection
      type: string
    FeedbackType:
      enum:
      - Positive
      - Negative
      type: string
    FindingsReportId:
      pattern: "[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12}"
      type: string
    FindingsReportSummary:
      description: ' Information about potential recommendations that might be created
        from the analysis of profiling data. '
      properties:
        id:
          allOf:
          - $ref: '#/components/schemas/FindingsReportId'
          - description: The universally unique identifier (UUID) of the recommendation
              report.
        profileEndTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          - description: " The end time of the period during which the metric is flagged\
              \ as anomalous. This is specified using the ISO 8601 format. For example,\
              \ 2020-06-01T13:15:02.001Z represents 1 millisecond past June 1, 2020\
              \ 1:15:02 PM UTC. "
        profileStartTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          - description: "The start time of the profile the analysis data is about.\
              \ This is specified using the ISO 8601 format. For example, 2020-06-01T13:15:02.001Z\
              \ represents 1 millisecond past June 1, 2020 1:15:02 PM UTC."
        profilingGroupName:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The name of the profiling group that is associated with the
              analysis data.
        totalNumberOfFindings:
          allOf:
          - $ref: '#/components/schemas/Integer'
          - description: The total number of different recommendations that were found
              by the analysis.
      type: object
    FindingsReportSummaries:
      items:
        $ref: '#/components/schemas/FindingsReportSummary'
      type: array
    ThreadStates:
      items:
        $ref: '#/components/schemas/String'
      type: array
    MetricType:
      enum:
      - AggregatedRelativeTotalTime
      type: string
    FrameMetricDatum:
      description: ' Information about a frame metric and its values. '
      properties:
        frameMetric:
          $ref: '#/components/schemas/FrameMetric'
        values:
          allOf:
          - $ref: '#/components/schemas/FrameMetricValues'
          - description: ' A list of values that are associated with a frame metric. '
      required:
      - frameMetric
      - values
      type: object
    FrameMetricValues:
      items:
        $ref: '#/components/schemas/FrameMetricValue'
      type: array
    FrameMetricValue:
      format: double
      type: number
    MaxResults:
      maximum: 1000
      minimum: 1
      type: integer
    PaginationToken:
      maxLength: 64
      minLength: 1
      pattern: "^[\\w-]+$"
      type: string
    GetFindingsReportAccountSummaryRequest:
      description: The structure representing the GetFindingsReportAccountSummaryRequest.
      properties: {}
      title: GetFindingsReportAccountSummaryRequest
      type: object
    GetNotificationConfigurationRequest:
      description: The structure representing the GetNotificationConfigurationRequest.
      properties: {}
      title: GetNotificationConfigurationRequest
      type: object
    GetPolicyRequest:
      description: ' The structure representing the <code>getPolicyRequest</code>. '
      properties: {}
      title: GetPolicyRequest
      type: object
    RevisionId:
      pattern: "[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12}"
      type: string
    MaxDepth:
      maximum: 10000
      minimum: 1
      type: integer
    GetProfileRequest:
      description: The structure representing the getProfileRequest.
      properties: {}
      title: GetProfileRequest
      type: object
    Locale:
      description: "BCP47 language code. Supported locales: de-DE, en-GB, en-US, es-ES,\
        \ fr-FR, it-IT, ja-JP, ko-KR, pt-BR, zh-CN, zh-TW"
      type: string
    GetRecommendationsRequest:
      description: The structure representing the GetRecommendationsRequest.
      properties: {}
      title: GetRecommendationsRequest
      type: object
    Recommendations:
      items:
        $ref: '#/components/schemas/Recommendation'
      type: array
    ListFindingsReportsRequest:
      description: The structure representing the ListFindingsReportsRequest.
      properties: {}
      title: ListFindingsReportsRequest
      type: object
    TimestampStructure:
      description: " A data type that contains a <code>Timestamp</code> object. This\
        \ is specified using the ISO 8601 format. For example, 2020-06-01T13:15:02.001Z\
        \ represents 1 millisecond past June 1, 2020 1:15:02 PM UTC. "
      properties:
        value:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          - description: " A <code>Timestamp</code>. This is specified using the ISO\
              \ 8601 format. For example, 2020-06-01T13:15:02.001Z represents 1 millisecond\
              \ past June 1, 2020 1:15:02 PM UTC. "
      required:
      - value
      type: object
    OrderBy:
      enum:
      - TimestampDescending
      - TimestampAscending
      type: string
    ListProfileTimesRequest:
      description: The structure representing the listProfileTimesRequest.
      properties: {}
      title: ListProfileTimesRequest
      type: object
    ProfileTimes:
      items:
        $ref: '#/components/schemas/ProfileTime'
      type: array
    ListProfilingGroupsRequest:
      description: The structure representing the listProfilingGroupsRequest.
      properties: {}
      title: ListProfilingGroupsRequest
      type: object
    ProfilingGroupNames:
      items:
        $ref: '#/components/schemas/ProfilingGroupName'
      type: array
    ProfilingGroupDescriptions:
      items:
        $ref: '#/components/schemas/ProfilingGroupDescription'
      type: array
    ProfilingGroupArn:
      type: string
    ListTagsForResourceRequest:
      properties: {}
      title: ListTagsForResourceRequest
      type: object
    Match:
      description: The part of a profile that contains a recommendation found during
        analysis.
      properties:
        frameAddress:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The location in the profiling graph that contains a recommendation
              found during analysis.
        targetFramesIndex:
          allOf:
          - $ref: '#/components/schemas/Integer'
          - description: The target frame that triggered a match.
        thresholdBreachValue:
          allOf:
          - $ref: '#/components/schemas/Double'
          - description: The value in the profile data that exceeded the recommendation
              threshold.
      type: object
    Matches:
      items:
        $ref: '#/components/schemas/Match'
      type: array
    MetadataField:
      enum:
      - ComputePlatform
      - AgentId
      - AwsRequestId
      - ExecutionEnvironment
      - LambdaFunctionArn
      - LambdaMemoryLimitInMB
      - LambdaRemainingTimeInMilliseconds
      - LambdaTimeGapBetweenInvokesInMilliseconds
      - LambdaPreviousExecutionTimeInMilliseconds
      type: string
    Strings:
      items:
        $ref: '#/components/schemas/String'
      type: array
    TargetFrames:
      items:
        $ref: '#/components/schemas/TargetFrame'
      type: array
    Percentage:
      format: double
      maximum: 100
      minimum: 0
      type: number
    Pattern:
      description: ' A set of rules used to make a recommendation during an analysis. '
      properties:
        countersToAggregate:
          allOf:
          - $ref: '#/components/schemas/Strings'
          - description: ' A list of the different counters used to determine if there
              is a match. '
        description:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The description of the recommendation. This explains a potential
              inefficiency in a profiled application.
        id:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The universally unique identifier (UUID) of this pattern.
        name:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The name for this pattern.
        resolutionSteps:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: ' A string that contains the steps recommended to address
              the potential inefficiency. '
        targetFrames:
          allOf:
          - $ref: '#/components/schemas/TargetFrames'
          - description: A list of frame names that were searched during the analysis
              that generated a recommendation.
        thresholdPercent:
          allOf:
          - $ref: '#/components/schemas/Percentage'
          - description: ' The percentage of time an application spends in one method
              that triggers a recommendation. The percentage of time is the same as
              the percentage of the total gathered sample counts during analysis. '
      type: object
    PostAgentProfileRequest:
      description: The structure representing the postAgentProfileRequest.
      example:
        agentProfile: ""
      properties:
        agentProfile:
          allOf:
          - $ref: '#/components/schemas/AgentProfile'
          - description: ' The submitted profiling data. '
      required:
      - agentProfile
      title: PostAgentProfileRequest
      type: object
    Principals:
      items:
        $ref: '#/components/schemas/Principal'
      maxItems: 50
      minItems: 1
      type: array
    ProfileTime:
      description: ' Contains the start time of a profile. '
      properties:
        start:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          - description: "The start time of a profile. It is specified using the ISO\
              \ 8601 format. For example, 2020-06-01T13:15:02.001Z represents 1 millisecond\
              \ past June 1, 2020 1:15:02 PM UTC."
      type: object
    ProfilingStatus:
      description: " Profiling status includes information about the last time a profile\
        \ agent pinged back, the last time a profile was received, and the aggregation\
        \ period and start time for the most recent aggregated profile. "
      properties:
        latestAgentOrchestratedAt:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          - description: "The date and time when the profiling agent most recently\
              \ pinged back. Specify using the ISO 8601 format. For example, 2020-06-01T13:15:02.001Z\
              \ represents 1 millisecond past June 1, 2020 1:15:02 PM UTC."
        latestAgentProfileReportedAt:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          - description: "The date and time when the most recent profile was received.\
              \ Specify using the ISO 8601 format. For example, 2020-06-01T13:15:02.001Z\
              \ represents 1 millisecond past June 1, 2020 1:15:02 PM UTC."
        latestAggregatedProfile:
          $ref: '#/components/schemas/ProfilingStatus_latestAggregatedProfile'
      type: object
    PutPermissionRequest:
      description: The structure representing the <code>putPermissionRequest</code>.
      example:
        revisionId: ""
        principals: ""
      properties:
        principals:
          allOf:
          - $ref: '#/components/schemas/Principals'
          - description: ' A list ARNs for the roles and users you want to grant access
              to the profiling group. Wildcards are not are supported in the ARNs. '
        revisionId:
          allOf:
          - $ref: '#/components/schemas/RevisionId'
          - description: " A universally unique identifier (UUID) for the revision\
              \ of the policy you are adding to the profiling group. Do not specify\
              \ this when you add permissions to a profiling group for the first time.\
              \ If a policy already exists on the profiling group, you must specify\
              \ the <code>revisionId</code>. "
      required:
      - principals
      title: PutPermissionRequest
      type: object
    Recommendation:
      description: A potential improvement that was found from analyzing the profiling
        data.
      properties:
        allMatchesCount:
          allOf:
          - $ref: '#/components/schemas/Integer'
          - description: How many different places in the profile graph triggered
              a match.
        allMatchesSum:
          allOf:
          - $ref: '#/components/schemas/Double'
          - description: How much of the total sample count is potentially affected.
        endTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          - description: "End time of the profile that was used by this analysis.\
              \ This is specified using the ISO 8601 format. For example, 2020-06-01T13:15:02.001Z\
              \ represents 1 millisecond past June 1, 2020 1:15:02 PM UTC."
        pattern:
          $ref: '#/components/schemas/Recommendation_pattern'
        startTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          - description: "The start time of the profile that was used by this analysis.\
              \ This is specified using the ISO 8601 format. For example, 2020-06-01T13:15:02.001Z\
              \ represents 1 millisecond past June 1, 2020 1:15:02 PM UTC."
        topMatches:
          allOf:
          - $ref: '#/components/schemas/Matches'
          - description: 'List of the matches with most impact. '
      required:
      - allMatchesCount
      - allMatchesSum
      - endTime
      - pattern
      - startTime
      - topMatches
      type: object
    RemoveNotificationChannelRequest:
      description: The structure representing the RemoveNotificationChannelRequest.
      properties: {}
      title: RemoveNotificationChannelRequest
      type: object
    RemovePermissionRequest:
      description: ' <pre><code> The structure representing the &lt;code&gt;removePermissionRequest&lt;/code&gt;.&lt;/p&gt;
        </code></pre>'
      properties: {}
      title: RemovePermissionRequest
      type: object
    SubmitFeedbackRequest:
      description: The structure representing the SubmitFeedbackRequest.
      example:
        comment: ""
        type: ""
      properties:
        comment:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: Optional feedback about this anomaly.
        type:
          allOf:
          - $ref: '#/components/schemas/FeedbackType'
          - description: " The feedback tpye. Thee are two valid values, <code>Positive</code>\
              \ and <code>Negative</code>. "
      required:
      - type
      title: SubmitFeedbackRequest
      type: object
    TagKeys:
      items:
        $ref: '#/components/schemas/String'
      type: array
    TagResourceRequest:
      example:
        tags: ""
      properties:
        tags:
          allOf:
          - $ref: '#/components/schemas/TagsMap'
          - description: ' The list of tags that are added to the specified resource. '
      required:
      - tags
      title: TagResourceRequest
      type: object
    TargetFrame:
      items:
        $ref: '#/components/schemas/String'
      type: array
    UntagResourceRequest:
      properties: {}
      title: UntagResourceRequest
      type: object
    UpdateProfilingGroupRequest:
      description: The structure representing the updateProfilingGroupRequest.
      example:
        agentOrchestrationConfig:
          profilingEnabled: ""
      properties:
        agentOrchestrationConfig:
          $ref: '#/components/schemas/UpdateProfilingGroupRequest_agentOrchestrationConfig'
      required:
      - agentOrchestrationConfig
      title: UpdateProfilingGroupRequest
      type: object
    AddNotificationChannels_request:
      properties:
        channels:
          description: One or 2 channels to report to when anomalies are detected.
          items:
            $ref: '#/components/schemas/Channel'
          maxItems: 2
          minItems: 1
          type: array
      required:
      - channels
      type: object
    BatchGetFrameMetricData_request:
      properties:
        frameMetrics:
          description: " The details of the metrics that are used to request a time\
            \ series of values. The metric includes the name of the frame, the aggregation\
            \ type to calculate the metric value for the frame, and the thread states\
            \ to use to get the count for the metric value of the frame."
          items:
            $ref: '#/components/schemas/FrameMetric'
          type: array
      type: object
    ConfigureAgent_request:
      properties:
        fleetInstanceId:
          description: " A universally unique identifier (UUID) for a profiling instance.\
            \ For example, if the profiling instance is an Amazon EC2 instance, it\
            \ is the instance ID. If it is an AWS Fargate container, it is the container's\
            \ task ID. "
          maxLength: 255
          minLength: 1
          type: string
        metadata:
          additionalProperties:
            $ref: '#/components/schemas/String'
          description: <p> Metadata captured about the compute platform the agent
            is running on. It includes information about sampling and reporting. The
            valid fields are:</p> <ul> <li> <p> <code>COMPUTE_PLATFORM</code> - The
            compute platform on which the agent is running </p> </li> <li> <p> <code>AGENT_ID</code>
            - The ID for an agent instance. </p> </li> <li> <p> <code>AWS_REQUEST_ID</code>
            - The AWS request ID of a Lambda invocation. </p> </li> <li> <p> <code>EXECUTION_ENVIRONMENT</code>
            - The execution environment a Lambda function is running on. </p> </li>
            <li> <p> <code>LAMBDA_FUNCTION_ARN</code> - The Amazon Resource Name (ARN)
            that is used to invoke a Lambda function. </p> </li> <li> <p> <code>LAMBDA_MEMORY_LIMIT_IN_MB</code>
            - The memory allocated to a Lambda function. </p> </li> <li> <p> <code>LAMBDA_REMAINING_TIME_IN_MILLISECONDS</code>
            - The time in milliseconds before execution of a Lambda function times
            out. </p> </li> <li> <p> <code>LAMBDA_TIME_GAP_BETWEEN_INVOKES_IN_MILLISECONDS</code>
            - The time in milliseconds between two invocations of a Lambda function.
            </p> </li> <li> <p> <code>LAMBDA_PREVIOUS_EXECUTION_TIME_IN_MILLISECONDS</code>
            - The time in milliseconds for the previous Lambda invocation. </p> </li>
            </ul>
          type: object
      type: object
    CreateProfilingGroup_request_agentOrchestrationConfig:
      description: ' Specifies whether profiling is enabled or disabled for a profiling
        group. It is used by <a href="https://docs.aws.amazon.com/codeguru/latest/profiler-api/API_ConfigureAgent.html">
        <code>ConfigureAgent</code> </a> to enable or disable profiling for a profiling
        group. '
      properties:
        profilingEnabled:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          - description: ' A <code>Boolean</code> that specifies whether the profiling
              agent collects profiling data or not. Set to <code>true</code> to enable
              profiling. '
      type: object
    CreateProfilingGroup_request:
      properties:
        agentOrchestrationConfig:
          $ref: '#/components/schemas/CreateProfilingGroup_request_agentOrchestrationConfig'
        computePlatform:
          description: " The compute platform of the profiling group. Use <code>AWSLambda</code>\
            \ if your application runs on AWS Lambda. Use <code>Default</code> if\
            \ your application runs on a compute platform that is not AWS Lambda,\
            \ such an Amazon EC2 instance, an on-premises server, or a different platform.\
            \ If not specified, <code>Default</code> is used. "
          enum:
          - Default
          - AWSLambda
          type: string
        profilingGroupName:
          description: The name of the profiling group to create.
          maxLength: 255
          minLength: 1
          pattern: "^[\\w-]+$"
          type: string
        tags:
          additionalProperties:
            $ref: '#/components/schemas/String'
          description: ' A list of tags to add to the created profiling group. '
          type: object
      required:
      - profilingGroupName
      type: object
    UpdateProfilingGroup_request:
      properties:
        agentOrchestrationConfig:
          $ref: '#/components/schemas/CreateProfilingGroup_request_agentOrchestrationConfig'
      required:
      - agentOrchestrationConfig
      type: object
    TagResource_request:
      properties:
        tags:
          additionalProperties:
            $ref: '#/components/schemas/String'
          description: ' The list of tags that are added to the specified resource. '
          type: object
      required:
      - tags
      type: object
    PostAgentProfile_request:
      properties:
        agentProfile:
          description: ' The submitted profiling data. '
          type: string
      required:
      - agentProfile
      type: object
    PutPermission_request:
      properties:
        principals:
          description: ' A list ARNs for the roles and users you want to grant access
            to the profiling group. Wildcards are not are supported in the ARNs. '
          items:
            $ref: '#/components/schemas/Principal'
          maxItems: 50
          minItems: 1
          type: array
        revisionId:
          description: " A universally unique identifier (UUID) for the revision of\
            \ the policy you are adding to the profiling group. Do not specify this\
            \ when you add permissions to a profiling group for the first time. If\
            \ a policy already exists on the profiling group, you must specify the\
            \ <code>revisionId</code>. "
          pattern: "[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12}"
          type: string
      required:
      - principals
      type: object
    SubmitFeedback_request:
      properties:
        comment:
          description: Optional feedback about this anomaly.
          type: string
        type:
          description: " The feedback tpye. Thee are two valid values, <code>Positive</code>\
            \ and <code>Negative</code>. "
          enum:
          - Positive
          - Negative
          type: string
      required:
      - type
      type: object
    AddNotificationChannelsResponse_notificationConfiguration:
      allOf:
      - $ref: '#/components/schemas/NotificationConfiguration'
      - description: The new notification configuration for this profiling group.
      example:
        channels: ""
    ConfigureAgentResponse_configuration:
      allOf:
      - $ref: '#/components/schemas/AgentConfiguration'
      - description: ' An <a href="https://docs.aws.amazon.com/codeguru/latest/profiler-api/API_AgentConfiguration.html">
          <code>AgentConfiguration</code> </a> object that specifies if an agent profiles
          or not and for how long to return profiling data. '
      example:
        periodInSeconds: ""
        shouldProfile: ""
        agentParameters: ""
    CreateProfilingGroupResponse_profilingGroup:
      allOf:
      - $ref: '#/components/schemas/ProfilingGroupDescription'
      - description: ' The returned <a href="https://docs.aws.amazon.com/codeguru/latest/profiler-api/API_ProfilingGroupDescription.html">
          <code>ProfilingGroupDescription</code> </a> object that contains information
          about the created profiling group. '
      example:
        computePlatform: ""
        createdAt: ""
        agentOrchestrationConfig:
          profilingEnabled: ""
        profilingStatus:
          latestAgentProfileReportedAt: ""
          latestAgentOrchestratedAt: ""
          latestAggregatedProfile:
            period: ""
            start: ""
        name: ""
        arn: ""
        tags: ""
        updatedAt: ""
    DescribeProfilingGroupResponse_profilingGroup:
      allOf:
      - $ref: '#/components/schemas/ProfilingGroupDescription'
      - description: ' The returned <a href="https://docs.aws.amazon.com/codeguru/latest/profiler-api/API_ProfilingGroupDescription.html">
          <code>ProfilingGroupDescription</code> </a> object that contains information
          about the requested profiling group. '
      example:
        computePlatform: ""
        createdAt: ""
        agentOrchestrationConfig:
          profilingEnabled: ""
        profilingStatus:
          latestAgentProfileReportedAt: ""
          latestAgentOrchestratedAt: ""
          latestAggregatedProfile:
            period: ""
            start: ""
        name: ""
        arn: ""
        tags: ""
        updatedAt: ""
    GetNotificationConfigurationResponse_notificationConfiguration:
      allOf:
      - $ref: '#/components/schemas/NotificationConfiguration'
      - description: The current notification configuration for this profiling group.
      example:
        channels: ""
    UpdateProfilingGroupResponse_profilingGroup:
      allOf:
      - $ref: '#/components/schemas/ProfilingGroupDescription'
      - description: ' A <a href="https://docs.aws.amazon.com/codeguru/latest/profiler-api/API_ProfilingGroupDescription.html">
          <code>ProfilingGroupDescription</code> </a> that contains information about
          the returned updated profiling group. '
      example:
        computePlatform: ""
        createdAt: ""
        agentOrchestrationConfig:
          profilingEnabled: ""
        profilingStatus:
          latestAgentProfileReportedAt: ""
          latestAgentOrchestratedAt: ""
          latestAggregatedProfile:
            period: ""
            start: ""
        name: ""
        arn: ""
        tags: ""
        updatedAt: ""
    Anomaly_metric:
      allOf:
      - $ref: '#/components/schemas/Metric'
      - description: ' Details about the metric that the analysis used when it detected
          the anomaly. The metric includes the name of the frame that was analyzed
          with the type and thread states used to derive the metric value for that
          frame. '
    AnomalyInstance_userFeedback:
      allOf:
      - $ref: '#/components/schemas/UserFeedback'
      - description: Feedback type on a specific instance of anomaly submitted by
          the user.
    CreateProfilingGroupRequest_agentOrchestrationConfig:
      allOf:
      - $ref: '#/components/schemas/AgentOrchestrationConfig'
      - description: ' Specifies whether profiling is enabled or disabled for the
          created profiling group. '
      example:
        profilingEnabled: ""
    ProfilingGroupDescription_agentOrchestrationConfig:
      allOf:
      - $ref: '#/components/schemas/AgentOrchestrationConfig'
      - description: ' An <a href="https://docs.aws.amazon.com/codeguru/latest/profiler-api/API_AgentOrchestrationConfig.html">
          <code>AgentOrchestrationConfig</code> </a> object that indicates if the
          profiling group is enabled for profiled or not. '
      example:
        profilingEnabled: ""
    ProfilingGroupDescription_profilingStatus:
      allOf:
      - $ref: '#/components/schemas/ProfilingStatus'
      - description: " A <a href=\"https://docs.aws.amazon.com/codeguru/latest/profiler-api/API_ProfilingStatus.html\"\
          > <code>ProfilingStatus</code> </a> object that includes information about\
          \ the last time a profile agent pinged back, the last time a profile was\
          \ received, and the aggregation period and start time for the most recent\
          \ aggregated profile. "
      example:
        latestAgentProfileReportedAt: ""
        latestAgentOrchestratedAt: ""
        latestAggregatedProfile:
          period: ""
          start: ""
    ProfilingStatus_latestAggregatedProfile:
      allOf:
      - $ref: '#/components/schemas/AggregatedProfileTime'
      - description: ' An <a href="https://docs.aws.amazon.com/codeguru/latest/profiler-api/API_AggregatedProfileTime.html">
          <code>AggregatedProfileTime</code> </a> object that contains the aggregation
          period and start time for an aggregated profile. '
      example:
        period: ""
        start: ""
    Recommendation_pattern:
      allOf:
      - $ref: '#/components/schemas/Pattern'
      - description: The pattern that analysis recognized in the profile to make this
          recommendation.
    UpdateProfilingGroupRequest_agentOrchestrationConfig:
      allOf:
      - $ref: '#/components/schemas/AgentOrchestrationConfig'
      - description: ' Specifies whether profiling is enabled or disabled for a profiling
          group. '
      example:
        profilingEnabled: ""
  securitySchemes:
    hmac:
      description: Amazon Signature authorization v4
      in: header
      name: Authorization
      type: apiKey
      x-amazon-apigateway-authtype: awsSigv4
x-hasEquivalentPaths: true

