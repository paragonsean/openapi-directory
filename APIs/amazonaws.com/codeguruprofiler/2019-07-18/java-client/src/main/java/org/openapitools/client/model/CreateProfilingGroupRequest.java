/*
 * Amazon CodeGuru Profiler
 * <p> This section provides documentation for the Amazon CodeGuru Profiler API operations. </p> <p> Amazon CodeGuru Profiler collects runtime performance data from your live applications, and provides recommendations that can help you fine-tune your application performance. Using machine learning algorithms, CodeGuru Profiler can help you find your most expensive lines of code and suggest ways you can improve efficiency and remove CPU bottlenecks. </p> <p> Amazon CodeGuru Profiler provides different visualizations of profiling data to help you identify what code is running on the CPU, see how much time is consumed, and suggest ways to reduce CPU utilization. </p> <note> <p>Amazon CodeGuru Profiler currently supports applications written in all Java virtual machine (JVM) languages and Python. While CodeGuru Profiler supports both visualizations and recommendations for applications written in Java, it can also generate visualizations and a subset of recommendations for applications written in other JVM languages and Python.</p> </note> <p> For more information, see <a href=\"https://docs.aws.amazon.com/codeguru/latest/profiler-ug/what-is-codeguru-profiler.html\">What is Amazon CodeGuru Profiler</a> in the <i>Amazon CodeGuru Profiler User Guide</i>. </p>
 *
 * The version of the OpenAPI document: 2019-07-18
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;
import java.util.HashMap;
import java.util.Map;
import org.openapitools.client.model.CreateProfilingGroupRequestAgentOrchestrationConfig;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * CreateProfilingGroupRequest
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T12:02:39.524653-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class CreateProfilingGroupRequest {
  public static final String SERIALIZED_NAME_AGENT_ORCHESTRATION_CONFIG = "agentOrchestrationConfig";
  @SerializedName(SERIALIZED_NAME_AGENT_ORCHESTRATION_CONFIG)
  private CreateProfilingGroupRequestAgentOrchestrationConfig agentOrchestrationConfig;

  /**
   *  The compute platform of the profiling group. Use &lt;code&gt;AWSLambda&lt;/code&gt; if your application runs on AWS Lambda. Use &lt;code&gt;Default&lt;/code&gt; if your application runs on a compute platform that is not AWS Lambda, such an Amazon EC2 instance, an on-premises server, or a different platform. If not specified, &lt;code&gt;Default&lt;/code&gt; is used. 
   */
  @JsonAdapter(ComputePlatformEnum.Adapter.class)
  public enum ComputePlatformEnum {
    DEFAULT("Default"),
    
    AWS_LAMBDA("AWSLambda");

    private String value;

    ComputePlatformEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static ComputePlatformEnum fromValue(String value) {
      for (ComputePlatformEnum b : ComputePlatformEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }

    public static class Adapter extends TypeAdapter<ComputePlatformEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final ComputePlatformEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public ComputePlatformEnum read(final JsonReader jsonReader) throws IOException {
        String value =  jsonReader.nextString();
        return ComputePlatformEnum.fromValue(value);
      }
    }

    public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      String value = jsonElement.getAsString();
      ComputePlatformEnum.fromValue(value);
    }
  }

  public static final String SERIALIZED_NAME_COMPUTE_PLATFORM = "computePlatform";
  @SerializedName(SERIALIZED_NAME_COMPUTE_PLATFORM)
  private ComputePlatformEnum computePlatform;

  public static final String SERIALIZED_NAME_PROFILING_GROUP_NAME = "profilingGroupName";
  @SerializedName(SERIALIZED_NAME_PROFILING_GROUP_NAME)
  private String profilingGroupName;

  public static final String SERIALIZED_NAME_TAGS = "tags";
  @SerializedName(SERIALIZED_NAME_TAGS)
  private Map<String, String> tags = new HashMap<>();

  public CreateProfilingGroupRequest() {
  }

  public CreateProfilingGroupRequest agentOrchestrationConfig(CreateProfilingGroupRequestAgentOrchestrationConfig agentOrchestrationConfig) {
    this.agentOrchestrationConfig = agentOrchestrationConfig;
    return this;
  }

  /**
   * Get agentOrchestrationConfig
   * @return agentOrchestrationConfig
   */
  @javax.annotation.Nullable
  public CreateProfilingGroupRequestAgentOrchestrationConfig getAgentOrchestrationConfig() {
    return agentOrchestrationConfig;
  }

  public void setAgentOrchestrationConfig(CreateProfilingGroupRequestAgentOrchestrationConfig agentOrchestrationConfig) {
    this.agentOrchestrationConfig = agentOrchestrationConfig;
  }


  public CreateProfilingGroupRequest computePlatform(ComputePlatformEnum computePlatform) {
    this.computePlatform = computePlatform;
    return this;
  }

  /**
   *  The compute platform of the profiling group. Use &lt;code&gt;AWSLambda&lt;/code&gt; if your application runs on AWS Lambda. Use &lt;code&gt;Default&lt;/code&gt; if your application runs on a compute platform that is not AWS Lambda, such an Amazon EC2 instance, an on-premises server, or a different platform. If not specified, &lt;code&gt;Default&lt;/code&gt; is used. 
   * @return computePlatform
   */
  @javax.annotation.Nullable
  public ComputePlatformEnum getComputePlatform() {
    return computePlatform;
  }

  public void setComputePlatform(ComputePlatformEnum computePlatform) {
    this.computePlatform = computePlatform;
  }


  public CreateProfilingGroupRequest profilingGroupName(String profilingGroupName) {
    this.profilingGroupName = profilingGroupName;
    return this;
  }

  /**
   * The name of the profiling group to create.
   * @return profilingGroupName
   */
  @javax.annotation.Nonnull
  public String getProfilingGroupName() {
    return profilingGroupName;
  }

  public void setProfilingGroupName(String profilingGroupName) {
    this.profilingGroupName = profilingGroupName;
  }


  public CreateProfilingGroupRequest tags(Map<String, String> tags) {
    this.tags = tags;
    return this;
  }

  public CreateProfilingGroupRequest putTagsItem(String key, String tagsItem) {
    if (this.tags == null) {
      this.tags = new HashMap<>();
    }
    this.tags.put(key, tagsItem);
    return this;
  }

  /**
   *  A list of tags to add to the created profiling group. 
   * @return tags
   */
  @javax.annotation.Nullable
  public Map<String, String> getTags() {
    return tags;
  }

  public void setTags(Map<String, String> tags) {
    this.tags = tags;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CreateProfilingGroupRequest createProfilingGroupRequest = (CreateProfilingGroupRequest) o;
    return Objects.equals(this.agentOrchestrationConfig, createProfilingGroupRequest.agentOrchestrationConfig) &&
        Objects.equals(this.computePlatform, createProfilingGroupRequest.computePlatform) &&
        Objects.equals(this.profilingGroupName, createProfilingGroupRequest.profilingGroupName) &&
        Objects.equals(this.tags, createProfilingGroupRequest.tags);
  }

  @Override
  public int hashCode() {
    return Objects.hash(agentOrchestrationConfig, computePlatform, profilingGroupName, tags);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CreateProfilingGroupRequest {\n");
    sb.append("    agentOrchestrationConfig: ").append(toIndentedString(agentOrchestrationConfig)).append("\n");
    sb.append("    computePlatform: ").append(toIndentedString(computePlatform)).append("\n");
    sb.append("    profilingGroupName: ").append(toIndentedString(profilingGroupName)).append("\n");
    sb.append("    tags: ").append(toIndentedString(tags)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("agentOrchestrationConfig");
    openapiFields.add("computePlatform");
    openapiFields.add("profilingGroupName");
    openapiFields.add("tags");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
    openapiRequiredFields.add("profilingGroupName");
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to CreateProfilingGroupRequest
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!CreateProfilingGroupRequest.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in CreateProfilingGroupRequest is not found in the empty JSON string", CreateProfilingGroupRequest.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!CreateProfilingGroupRequest.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `CreateProfilingGroupRequest` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }

      // check to make sure all required properties/fields are present in the JSON string
      for (String requiredField : CreateProfilingGroupRequest.openapiRequiredFields) {
        if (jsonElement.getAsJsonObject().get(requiredField) == null) {
          throw new IllegalArgumentException(String.format("The required field `%s` is not found in the JSON string: %s", requiredField, jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // validate the optional field `agentOrchestrationConfig`
      if (jsonObj.get("agentOrchestrationConfig") != null && !jsonObj.get("agentOrchestrationConfig").isJsonNull()) {
        CreateProfilingGroupRequestAgentOrchestrationConfig.validateJsonElement(jsonObj.get("agentOrchestrationConfig"));
      }
      if ((jsonObj.get("computePlatform") != null && !jsonObj.get("computePlatform").isJsonNull()) && !jsonObj.get("computePlatform").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `computePlatform` to be a primitive type in the JSON string but got `%s`", jsonObj.get("computePlatform").toString()));
      }
      // validate the optional field `computePlatform`
      if (jsonObj.get("computePlatform") != null && !jsonObj.get("computePlatform").isJsonNull()) {
        ComputePlatformEnum.validateJsonElement(jsonObj.get("computePlatform"));
      }
      if (!jsonObj.get("profilingGroupName").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `profilingGroupName` to be a primitive type in the JSON string but got `%s`", jsonObj.get("profilingGroupName").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!CreateProfilingGroupRequest.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'CreateProfilingGroupRequest' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<CreateProfilingGroupRequest> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(CreateProfilingGroupRequest.class));

       return (TypeAdapter<T>) new TypeAdapter<CreateProfilingGroupRequest>() {
           @Override
           public void write(JsonWriter out, CreateProfilingGroupRequest value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public CreateProfilingGroupRequest read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of CreateProfilingGroupRequest given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of CreateProfilingGroupRequest
   * @throws IOException if the JSON string is invalid with respect to CreateProfilingGroupRequest
   */
  public static CreateProfilingGroupRequest fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, CreateProfilingGroupRequest.class);
  }

  /**
   * Convert an instance of CreateProfilingGroupRequest to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

