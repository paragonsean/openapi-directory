/*
 * Amazon CodeGuru Profiler
 * <p> This section provides documentation for the Amazon CodeGuru Profiler API operations. </p> <p> Amazon CodeGuru Profiler collects runtime performance data from your live applications, and provides recommendations that can help you fine-tune your application performance. Using machine learning algorithms, CodeGuru Profiler can help you find your most expensive lines of code and suggest ways you can improve efficiency and remove CPU bottlenecks. </p> <p> Amazon CodeGuru Profiler provides different visualizations of profiling data to help you identify what code is running on the CPU, see how much time is consumed, and suggest ways to reduce CPU utilization. </p> <note> <p>Amazon CodeGuru Profiler currently supports applications written in all Java virtual machine (JVM) languages and Python. While CodeGuru Profiler supports both visualizations and recommendations for applications written in Java, it can also generate visualizations and a subset of recommendations for applications written in other JVM languages and Python.</p> </note> <p> For more information, see <a href=\"https://docs.aws.amazon.com/codeguru/latest/profiler-ug/what-is-codeguru-profiler.html\">What is Amazon CodeGuru Profiler</a> in the <i>Amazon CodeGuru Profiler User Guide</i>. </p>
 *
 * The version of the OpenAPI document: 2019-07-18
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.time.OffsetDateTime;
import java.util.Arrays;
import org.openapitools.client.model.ProfilingStatusLatestAggregatedProfile;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * ProfilingGroupDescriptionProfilingStatus
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T12:02:39.524653-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class ProfilingGroupDescriptionProfilingStatus {
  public static final String SERIALIZED_NAME_LATEST_AGENT_ORCHESTRATED_AT = "latestAgentOrchestratedAt";
  @SerializedName(SERIALIZED_NAME_LATEST_AGENT_ORCHESTRATED_AT)
  private OffsetDateTime latestAgentOrchestratedAt;

  public static final String SERIALIZED_NAME_LATEST_AGENT_PROFILE_REPORTED_AT = "latestAgentProfileReportedAt";
  @SerializedName(SERIALIZED_NAME_LATEST_AGENT_PROFILE_REPORTED_AT)
  private OffsetDateTime latestAgentProfileReportedAt;

  public static final String SERIALIZED_NAME_LATEST_AGGREGATED_PROFILE = "latestAggregatedProfile";
  @SerializedName(SERIALIZED_NAME_LATEST_AGGREGATED_PROFILE)
  private ProfilingStatusLatestAggregatedProfile latestAggregatedProfile;

  public ProfilingGroupDescriptionProfilingStatus() {
  }

  public ProfilingGroupDescriptionProfilingStatus latestAgentOrchestratedAt(OffsetDateTime latestAgentOrchestratedAt) {
    this.latestAgentOrchestratedAt = latestAgentOrchestratedAt;
    return this;
  }

  /**
   * Get latestAgentOrchestratedAt
   * @return latestAgentOrchestratedAt
   */
  @javax.annotation.Nullable
  public OffsetDateTime getLatestAgentOrchestratedAt() {
    return latestAgentOrchestratedAt;
  }

  public void setLatestAgentOrchestratedAt(OffsetDateTime latestAgentOrchestratedAt) {
    this.latestAgentOrchestratedAt = latestAgentOrchestratedAt;
  }


  public ProfilingGroupDescriptionProfilingStatus latestAgentProfileReportedAt(OffsetDateTime latestAgentProfileReportedAt) {
    this.latestAgentProfileReportedAt = latestAgentProfileReportedAt;
    return this;
  }

  /**
   * Get latestAgentProfileReportedAt
   * @return latestAgentProfileReportedAt
   */
  @javax.annotation.Nullable
  public OffsetDateTime getLatestAgentProfileReportedAt() {
    return latestAgentProfileReportedAt;
  }

  public void setLatestAgentProfileReportedAt(OffsetDateTime latestAgentProfileReportedAt) {
    this.latestAgentProfileReportedAt = latestAgentProfileReportedAt;
  }


  public ProfilingGroupDescriptionProfilingStatus latestAggregatedProfile(ProfilingStatusLatestAggregatedProfile latestAggregatedProfile) {
    this.latestAggregatedProfile = latestAggregatedProfile;
    return this;
  }

  /**
   * Get latestAggregatedProfile
   * @return latestAggregatedProfile
   */
  @javax.annotation.Nullable
  public ProfilingStatusLatestAggregatedProfile getLatestAggregatedProfile() {
    return latestAggregatedProfile;
  }

  public void setLatestAggregatedProfile(ProfilingStatusLatestAggregatedProfile latestAggregatedProfile) {
    this.latestAggregatedProfile = latestAggregatedProfile;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ProfilingGroupDescriptionProfilingStatus profilingGroupDescriptionProfilingStatus = (ProfilingGroupDescriptionProfilingStatus) o;
    return Objects.equals(this.latestAgentOrchestratedAt, profilingGroupDescriptionProfilingStatus.latestAgentOrchestratedAt) &&
        Objects.equals(this.latestAgentProfileReportedAt, profilingGroupDescriptionProfilingStatus.latestAgentProfileReportedAt) &&
        Objects.equals(this.latestAggregatedProfile, profilingGroupDescriptionProfilingStatus.latestAggregatedProfile);
  }

  @Override
  public int hashCode() {
    return Objects.hash(latestAgentOrchestratedAt, latestAgentProfileReportedAt, latestAggregatedProfile);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ProfilingGroupDescriptionProfilingStatus {\n");
    sb.append("    latestAgentOrchestratedAt: ").append(toIndentedString(latestAgentOrchestratedAt)).append("\n");
    sb.append("    latestAgentProfileReportedAt: ").append(toIndentedString(latestAgentProfileReportedAt)).append("\n");
    sb.append("    latestAggregatedProfile: ").append(toIndentedString(latestAggregatedProfile)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("latestAgentOrchestratedAt");
    openapiFields.add("latestAgentProfileReportedAt");
    openapiFields.add("latestAggregatedProfile");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to ProfilingGroupDescriptionProfilingStatus
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!ProfilingGroupDescriptionProfilingStatus.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in ProfilingGroupDescriptionProfilingStatus is not found in the empty JSON string", ProfilingGroupDescriptionProfilingStatus.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!ProfilingGroupDescriptionProfilingStatus.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `ProfilingGroupDescriptionProfilingStatus` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // validate the optional field `latestAgentOrchestratedAt`
      if (jsonObj.get("latestAgentOrchestratedAt") != null && !jsonObj.get("latestAgentOrchestratedAt").isJsonNull()) {
        OffsetDateTime.validateJsonElement(jsonObj.get("latestAgentOrchestratedAt"));
      }
      // validate the optional field `latestAgentProfileReportedAt`
      if (jsonObj.get("latestAgentProfileReportedAt") != null && !jsonObj.get("latestAgentProfileReportedAt").isJsonNull()) {
        OffsetDateTime.validateJsonElement(jsonObj.get("latestAgentProfileReportedAt"));
      }
      // validate the optional field `latestAggregatedProfile`
      if (jsonObj.get("latestAggregatedProfile") != null && !jsonObj.get("latestAggregatedProfile").isJsonNull()) {
        ProfilingStatusLatestAggregatedProfile.validateJsonElement(jsonObj.get("latestAggregatedProfile"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!ProfilingGroupDescriptionProfilingStatus.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'ProfilingGroupDescriptionProfilingStatus' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<ProfilingGroupDescriptionProfilingStatus> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(ProfilingGroupDescriptionProfilingStatus.class));

       return (TypeAdapter<T>) new TypeAdapter<ProfilingGroupDescriptionProfilingStatus>() {
           @Override
           public void write(JsonWriter out, ProfilingGroupDescriptionProfilingStatus value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public ProfilingGroupDescriptionProfilingStatus read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of ProfilingGroupDescriptionProfilingStatus given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of ProfilingGroupDescriptionProfilingStatus
   * @throws IOException if the JSON string is invalid with respect to ProfilingGroupDescriptionProfilingStatus
   */
  public static ProfilingGroupDescriptionProfilingStatus fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, ProfilingGroupDescriptionProfilingStatus.class);
  }

  /**
   * Convert an instance of ProfilingGroupDescriptionProfilingStatus to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

