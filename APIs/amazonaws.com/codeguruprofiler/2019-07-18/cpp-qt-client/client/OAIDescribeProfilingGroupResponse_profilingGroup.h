/**
 * Amazon CodeGuru Profiler
 * <p> This section provides documentation for the Amazon CodeGuru Profiler API operations. </p> <p> Amazon CodeGuru Profiler collects runtime performance data from your live applications, and provides recommendations that can help you fine-tune your application performance. Using machine learning algorithms, CodeGuru Profiler can help you find your most expensive lines of code and suggest ways you can improve efficiency and remove CPU bottlenecks. </p> <p> Amazon CodeGuru Profiler provides different visualizations of profiling data to help you identify what code is running on the CPU, see how much time is consumed, and suggest ways to reduce CPU utilization. </p> <note> <p>Amazon CodeGuru Profiler currently supports applications written in all Java virtual machine (JVM) languages and Python. While CodeGuru Profiler supports both visualizations and recommendations for applications written in Java, it can also generate visualizations and a subset of recommendations for applications written in other JVM languages and Python.</p> </note> <p> For more information, see <a href=\"https://docs.aws.amazon.com/codeguru/latest/profiler-ug/what-is-codeguru-profiler.html\">What is Amazon CodeGuru Profiler</a> in the <i>Amazon CodeGuru Profiler User Guide</i>. </p>
 *
 * The version of the OpenAPI document: 2019-07-18
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIDescribeProfilingGroupResponse_profilingGroup.h
 *
 * 
 */

#ifndef OAIDescribeProfilingGroupResponse_profilingGroup_H
#define OAIDescribeProfilingGroupResponse_profilingGroup_H

#include <QJsonObject>

#include "OAIComputePlatform.h"
#include "OAIProfilingGroupDescription_agentOrchestrationConfig.h"
#include "OAIProfilingGroupDescription_profilingStatus.h"
#include <QDateTime>
#include <QMap>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIProfilingGroupDescription_agentOrchestrationConfig;
class OAIProfilingGroupDescription_profilingStatus;

class OAIDescribeProfilingGroupResponse_profilingGroup : public OAIObject {
public:
    OAIDescribeProfilingGroupResponse_profilingGroup();
    OAIDescribeProfilingGroupResponse_profilingGroup(QString json);
    ~OAIDescribeProfilingGroupResponse_profilingGroup() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAIProfilingGroupDescription_agentOrchestrationConfig getAgentOrchestrationConfig() const;
    void setAgentOrchestrationConfig(const OAIProfilingGroupDescription_agentOrchestrationConfig &agent_orchestration_config);
    bool is_agent_orchestration_config_Set() const;
    bool is_agent_orchestration_config_Valid() const;

    QString getArn() const;
    void setArn(const QString &arn);
    bool is_arn_Set() const;
    bool is_arn_Valid() const;

    OAIComputePlatform getComputePlatform() const;
    void setComputePlatform(const OAIComputePlatform &compute_platform);
    bool is_compute_platform_Set() const;
    bool is_compute_platform_Valid() const;

    QDateTime getCreatedAt() const;
    void setCreatedAt(const QDateTime &created_at);
    bool is_created_at_Set() const;
    bool is_created_at_Valid() const;

    QString getName() const;
    void setName(const QString &name);
    bool is_name_Set() const;
    bool is_name_Valid() const;

    OAIProfilingGroupDescription_profilingStatus getProfilingStatus() const;
    void setProfilingStatus(const OAIProfilingGroupDescription_profilingStatus &profiling_status);
    bool is_profiling_status_Set() const;
    bool is_profiling_status_Valid() const;

    QMap getTags() const;
    void setTags(const QMap &tags);
    bool is_tags_Set() const;
    bool is_tags_Valid() const;

    QDateTime getUpdatedAt() const;
    void setUpdatedAt(const QDateTime &updated_at);
    bool is_updated_at_Set() const;
    bool is_updated_at_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAIProfilingGroupDescription_agentOrchestrationConfig m_agent_orchestration_config;
    bool m_agent_orchestration_config_isSet;
    bool m_agent_orchestration_config_isValid;

    QString m_arn;
    bool m_arn_isSet;
    bool m_arn_isValid;

    OAIComputePlatform m_compute_platform;
    bool m_compute_platform_isSet;
    bool m_compute_platform_isValid;

    QDateTime m_created_at;
    bool m_created_at_isSet;
    bool m_created_at_isValid;

    QString m_name;
    bool m_name_isSet;
    bool m_name_isValid;

    OAIProfilingGroupDescription_profilingStatus m_profiling_status;
    bool m_profiling_status_isSet;
    bool m_profiling_status_isValid;

    QMap m_tags;
    bool m_tags_isSet;
    bool m_tags_isValid;

    QDateTime m_updated_at;
    bool m_updated_at_isSet;
    bool m_updated_at_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIDescribeProfilingGroupResponse_profilingGroup)

#endif // OAIDescribeProfilingGroupResponse_profilingGroup_H
