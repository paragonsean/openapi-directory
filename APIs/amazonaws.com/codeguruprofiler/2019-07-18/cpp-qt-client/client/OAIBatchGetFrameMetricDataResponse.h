/**
 * Amazon CodeGuru Profiler
 * <p> This section provides documentation for the Amazon CodeGuru Profiler API operations. </p> <p> Amazon CodeGuru Profiler collects runtime performance data from your live applications, and provides recommendations that can help you fine-tune your application performance. Using machine learning algorithms, CodeGuru Profiler can help you find your most expensive lines of code and suggest ways you can improve efficiency and remove CPU bottlenecks. </p> <p> Amazon CodeGuru Profiler provides different visualizations of profiling data to help you identify what code is running on the CPU, see how much time is consumed, and suggest ways to reduce CPU utilization. </p> <note> <p>Amazon CodeGuru Profiler currently supports applications written in all Java virtual machine (JVM) languages and Python. While CodeGuru Profiler supports both visualizations and recommendations for applications written in Java, it can also generate visualizations and a subset of recommendations for applications written in other JVM languages and Python.</p> </note> <p> For more information, see <a href=\"https://docs.aws.amazon.com/codeguru/latest/profiler-ug/what-is-codeguru-profiler.html\">What is Amazon CodeGuru Profiler</a> in the <i>Amazon CodeGuru Profiler User Guide</i>. </p>
 *
 * The version of the OpenAPI document: 2019-07-18
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIBatchGetFrameMetricDataResponse.h
 *
 * The structure representing the BatchGetFrameMetricDataResponse.
 */

#ifndef OAIBatchGetFrameMetricDataResponse_H
#define OAIBatchGetFrameMetricDataResponse_H

#include <QJsonObject>

#include "OAIAggregationPeriod.h"
#include <QDateTime>
#include <QList>
#include <QMap>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIBatchGetFrameMetricDataResponse : public OAIObject {
public:
    OAIBatchGetFrameMetricDataResponse();
    OAIBatchGetFrameMetricDataResponse(QString json);
    ~OAIBatchGetFrameMetricDataResponse() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QDateTime getEndTime() const;
    void setEndTime(const QDateTime &end_time);
    bool is_end_time_Set() const;
    bool is_end_time_Valid() const;

    QList getEndTimes() const;
    void setEndTimes(const QList &end_times);
    bool is_end_times_Set() const;
    bool is_end_times_Valid() const;

    QList getFrameMetricData() const;
    void setFrameMetricData(const QList &frame_metric_data);
    bool is_frame_metric_data_Set() const;
    bool is_frame_metric_data_Valid() const;

    OAIAggregationPeriod getResolution() const;
    void setResolution(const OAIAggregationPeriod &resolution);
    bool is_resolution_Set() const;
    bool is_resolution_Valid() const;

    QDateTime getStartTime() const;
    void setStartTime(const QDateTime &start_time);
    bool is_start_time_Set() const;
    bool is_start_time_Valid() const;

    QMap getUnprocessedEndTimes() const;
    void setUnprocessedEndTimes(const QMap &unprocessed_end_times);
    bool is_unprocessed_end_times_Set() const;
    bool is_unprocessed_end_times_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QDateTime m_end_time;
    bool m_end_time_isSet;
    bool m_end_time_isValid;

    QList m_end_times;
    bool m_end_times_isSet;
    bool m_end_times_isValid;

    QList m_frame_metric_data;
    bool m_frame_metric_data_isSet;
    bool m_frame_metric_data_isValid;

    OAIAggregationPeriod m_resolution;
    bool m_resolution_isSet;
    bool m_resolution_isValid;

    QDateTime m_start_time;
    bool m_start_time_isSet;
    bool m_start_time_isValid;

    QMap m_unprocessed_end_times;
    bool m_unprocessed_end_times_isSet;
    bool m_unprocessed_end_times_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIBatchGetFrameMetricDataResponse)

#endif // OAIBatchGetFrameMetricDataResponse_H
