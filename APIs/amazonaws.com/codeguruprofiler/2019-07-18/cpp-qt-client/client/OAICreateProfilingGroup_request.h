/**
 * Amazon CodeGuru Profiler
 * <p> This section provides documentation for the Amazon CodeGuru Profiler API operations. </p> <p> Amazon CodeGuru Profiler collects runtime performance data from your live applications, and provides recommendations that can help you fine-tune your application performance. Using machine learning algorithms, CodeGuru Profiler can help you find your most expensive lines of code and suggest ways you can improve efficiency and remove CPU bottlenecks. </p> <p> Amazon CodeGuru Profiler provides different visualizations of profiling data to help you identify what code is running on the CPU, see how much time is consumed, and suggest ways to reduce CPU utilization. </p> <note> <p>Amazon CodeGuru Profiler currently supports applications written in all Java virtual machine (JVM) languages and Python. While CodeGuru Profiler supports both visualizations and recommendations for applications written in Java, it can also generate visualizations and a subset of recommendations for applications written in other JVM languages and Python.</p> </note> <p> For more information, see <a href=\"https://docs.aws.amazon.com/codeguru/latest/profiler-ug/what-is-codeguru-profiler.html\">What is Amazon CodeGuru Profiler</a> in the <i>Amazon CodeGuru Profiler User Guide</i>. </p>
 *
 * The version of the OpenAPI document: 2019-07-18
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAICreateProfilingGroup_request.h
 *
 * 
 */

#ifndef OAICreateProfilingGroup_request_H
#define OAICreateProfilingGroup_request_H

#include <QJsonObject>

#include "OAICreateProfilingGroup_request_agentOrchestrationConfig.h"
#include <QMap>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAICreateProfilingGroup_request_agentOrchestrationConfig;

class OAICreateProfilingGroup_request : public OAIObject {
public:
    OAICreateProfilingGroup_request();
    OAICreateProfilingGroup_request(QString json);
    ~OAICreateProfilingGroup_request() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAICreateProfilingGroup_request_agentOrchestrationConfig getAgentOrchestrationConfig() const;
    void setAgentOrchestrationConfig(const OAICreateProfilingGroup_request_agentOrchestrationConfig &agent_orchestration_config);
    bool is_agent_orchestration_config_Set() const;
    bool is_agent_orchestration_config_Valid() const;

    QString getComputePlatform() const;
    void setComputePlatform(const QString &compute_platform);
    bool is_compute_platform_Set() const;
    bool is_compute_platform_Valid() const;

    QString getProfilingGroupName() const;
    void setProfilingGroupName(const QString &profiling_group_name);
    bool is_profiling_group_name_Set() const;
    bool is_profiling_group_name_Valid() const;

    QMap<QString, QString> getTags() const;
    void setTags(const QMap<QString, QString> &tags);
    bool is_tags_Set() const;
    bool is_tags_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAICreateProfilingGroup_request_agentOrchestrationConfig m_agent_orchestration_config;
    bool m_agent_orchestration_config_isSet;
    bool m_agent_orchestration_config_isValid;

    QString m_compute_platform;
    bool m_compute_platform_isSet;
    bool m_compute_platform_isValid;

    QString m_profiling_group_name;
    bool m_profiling_group_name_isSet;
    bool m_profiling_group_name_isValid;

    QMap<QString, QString> m_tags;
    bool m_tags_isSet;
    bool m_tags_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAICreateProfilingGroup_request)

#endif // OAICreateProfilingGroup_request_H
