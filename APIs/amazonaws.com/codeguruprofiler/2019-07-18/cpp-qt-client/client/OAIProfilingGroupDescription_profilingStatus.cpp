/**
 * Amazon CodeGuru Profiler
 * <p> This section provides documentation for the Amazon CodeGuru Profiler API operations. </p> <p> Amazon CodeGuru Profiler collects runtime performance data from your live applications, and provides recommendations that can help you fine-tune your application performance. Using machine learning algorithms, CodeGuru Profiler can help you find your most expensive lines of code and suggest ways you can improve efficiency and remove CPU bottlenecks. </p> <p> Amazon CodeGuru Profiler provides different visualizations of profiling data to help you identify what code is running on the CPU, see how much time is consumed, and suggest ways to reduce CPU utilization. </p> <note> <p>Amazon CodeGuru Profiler currently supports applications written in all Java virtual machine (JVM) languages and Python. While CodeGuru Profiler supports both visualizations and recommendations for applications written in Java, it can also generate visualizations and a subset of recommendations for applications written in other JVM languages and Python.</p> </note> <p> For more information, see <a href=\"https://docs.aws.amazon.com/codeguru/latest/profiler-ug/what-is-codeguru-profiler.html\">What is Amazon CodeGuru Profiler</a> in the <i>Amazon CodeGuru Profiler User Guide</i>. </p>
 *
 * The version of the OpenAPI document: 2019-07-18
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIProfilingGroupDescription_profilingStatus.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIProfilingGroupDescription_profilingStatus::OAIProfilingGroupDescription_profilingStatus(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIProfilingGroupDescription_profilingStatus::OAIProfilingGroupDescription_profilingStatus() {
    this->initializeModel();
}

OAIProfilingGroupDescription_profilingStatus::~OAIProfilingGroupDescription_profilingStatus() {}

void OAIProfilingGroupDescription_profilingStatus::initializeModel() {

    m_latest_agent_orchestrated_at_isSet = false;
    m_latest_agent_orchestrated_at_isValid = false;

    m_latest_agent_profile_reported_at_isSet = false;
    m_latest_agent_profile_reported_at_isValid = false;

    m_latest_aggregated_profile_isSet = false;
    m_latest_aggregated_profile_isValid = false;
}

void OAIProfilingGroupDescription_profilingStatus::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIProfilingGroupDescription_profilingStatus::fromJsonObject(QJsonObject json) {

    m_latest_agent_orchestrated_at_isValid = ::OpenAPI::fromJsonValue(m_latest_agent_orchestrated_at, json[QString("latestAgentOrchestratedAt")]);
    m_latest_agent_orchestrated_at_isSet = !json[QString("latestAgentOrchestratedAt")].isNull() && m_latest_agent_orchestrated_at_isValid;

    m_latest_agent_profile_reported_at_isValid = ::OpenAPI::fromJsonValue(m_latest_agent_profile_reported_at, json[QString("latestAgentProfileReportedAt")]);
    m_latest_agent_profile_reported_at_isSet = !json[QString("latestAgentProfileReportedAt")].isNull() && m_latest_agent_profile_reported_at_isValid;

    m_latest_aggregated_profile_isValid = ::OpenAPI::fromJsonValue(m_latest_aggregated_profile, json[QString("latestAggregatedProfile")]);
    m_latest_aggregated_profile_isSet = !json[QString("latestAggregatedProfile")].isNull() && m_latest_aggregated_profile_isValid;
}

QString OAIProfilingGroupDescription_profilingStatus::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIProfilingGroupDescription_profilingStatus::asJsonObject() const {
    QJsonObject obj;
    if (m_latest_agent_orchestrated_at_isSet) {
        obj.insert(QString("latestAgentOrchestratedAt"), ::OpenAPI::toJsonValue(m_latest_agent_orchestrated_at));
    }
    if (m_latest_agent_profile_reported_at_isSet) {
        obj.insert(QString("latestAgentProfileReportedAt"), ::OpenAPI::toJsonValue(m_latest_agent_profile_reported_at));
    }
    if (m_latest_aggregated_profile.isSet()) {
        obj.insert(QString("latestAggregatedProfile"), ::OpenAPI::toJsonValue(m_latest_aggregated_profile));
    }
    return obj;
}

QDateTime OAIProfilingGroupDescription_profilingStatus::getLatestAgentOrchestratedAt() const {
    return m_latest_agent_orchestrated_at;
}
void OAIProfilingGroupDescription_profilingStatus::setLatestAgentOrchestratedAt(const QDateTime &latest_agent_orchestrated_at) {
    m_latest_agent_orchestrated_at = latest_agent_orchestrated_at;
    m_latest_agent_orchestrated_at_isSet = true;
}

bool OAIProfilingGroupDescription_profilingStatus::is_latest_agent_orchestrated_at_Set() const{
    return m_latest_agent_orchestrated_at_isSet;
}

bool OAIProfilingGroupDescription_profilingStatus::is_latest_agent_orchestrated_at_Valid() const{
    return m_latest_agent_orchestrated_at_isValid;
}

QDateTime OAIProfilingGroupDescription_profilingStatus::getLatestAgentProfileReportedAt() const {
    return m_latest_agent_profile_reported_at;
}
void OAIProfilingGroupDescription_profilingStatus::setLatestAgentProfileReportedAt(const QDateTime &latest_agent_profile_reported_at) {
    m_latest_agent_profile_reported_at = latest_agent_profile_reported_at;
    m_latest_agent_profile_reported_at_isSet = true;
}

bool OAIProfilingGroupDescription_profilingStatus::is_latest_agent_profile_reported_at_Set() const{
    return m_latest_agent_profile_reported_at_isSet;
}

bool OAIProfilingGroupDescription_profilingStatus::is_latest_agent_profile_reported_at_Valid() const{
    return m_latest_agent_profile_reported_at_isValid;
}

OAIProfilingStatus_latestAggregatedProfile OAIProfilingGroupDescription_profilingStatus::getLatestAggregatedProfile() const {
    return m_latest_aggregated_profile;
}
void OAIProfilingGroupDescription_profilingStatus::setLatestAggregatedProfile(const OAIProfilingStatus_latestAggregatedProfile &latest_aggregated_profile) {
    m_latest_aggregated_profile = latest_aggregated_profile;
    m_latest_aggregated_profile_isSet = true;
}

bool OAIProfilingGroupDescription_profilingStatus::is_latest_aggregated_profile_Set() const{
    return m_latest_aggregated_profile_isSet;
}

bool OAIProfilingGroupDescription_profilingStatus::is_latest_aggregated_profile_Valid() const{
    return m_latest_aggregated_profile_isValid;
}

bool OAIProfilingGroupDescription_profilingStatus::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_latest_agent_orchestrated_at_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_latest_agent_profile_reported_at_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_latest_aggregated_profile.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIProfilingGroupDescription_profilingStatus::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
