/**
 * Amazon CodeGuru Profiler
 * <p> This section provides documentation for the Amazon CodeGuru Profiler API operations. </p> <p> Amazon CodeGuru Profiler collects runtime performance data from your live applications, and provides recommendations that can help you fine-tune your application performance. Using machine learning algorithms, CodeGuru Profiler can help you find your most expensive lines of code and suggest ways you can improve efficiency and remove CPU bottlenecks. </p> <p> Amazon CodeGuru Profiler provides different visualizations of profiling data to help you identify what code is running on the CPU, see how much time is consumed, and suggest ways to reduce CPU utilization. </p> <note> <p>Amazon CodeGuru Profiler currently supports applications written in all Java virtual machine (JVM) languages and Python. While CodeGuru Profiler supports both visualizations and recommendations for applications written in Java, it can also generate visualizations and a subset of recommendations for applications written in other JVM languages and Python.</p> </note> <p> For more information, see <a href=\"https://docs.aws.amazon.com/codeguru/latest/profiler-ug/what-is-codeguru-profiler.html\">What is Amazon CodeGuru Profiler</a> in the <i>Amazon CodeGuru Profiler User Guide</i>. </p>
 *
 * The version of the OpenAPI document: 2019-07-18
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIMatch.h
 *
 * The part of a profile that contains a recommendation found during analysis.
 */

#ifndef OAIMatch_H
#define OAIMatch_H

#include <QJsonObject>

#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIMatch : public OAIObject {
public:
    OAIMatch();
    OAIMatch(QString json);
    ~OAIMatch() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getFrameAddress() const;
    void setFrameAddress(const QString &frame_address);
    bool is_frame_address_Set() const;
    bool is_frame_address_Valid() const;

    qint32 getTargetFramesIndex() const;
    void setTargetFramesIndex(const qint32 &target_frames_index);
    bool is_target_frames_index_Set() const;
    bool is_target_frames_index_Valid() const;

    double getThresholdBreachValue() const;
    void setThresholdBreachValue(const double &threshold_breach_value);
    bool is_threshold_breach_value_Set() const;
    bool is_threshold_breach_value_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_frame_address;
    bool m_frame_address_isSet;
    bool m_frame_address_isValid;

    qint32 m_target_frames_index;
    bool m_target_frames_index_isSet;
    bool m_target_frames_index_isValid;

    double m_threshold_breach_value;
    bool m_threshold_breach_value_isSet;
    bool m_threshold_breach_value_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIMatch)

#endif // OAIMatch_H
