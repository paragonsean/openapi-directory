/**
 * Amazon CodeGuru Profiler
 * <p> This section provides documentation for the Amazon CodeGuru Profiler API operations. </p> <p> Amazon CodeGuru Profiler collects runtime performance data from your live applications, and provides recommendations that can help you fine-tune your application performance. Using machine learning algorithms, CodeGuru Profiler can help you find your most expensive lines of code and suggest ways you can improve efficiency and remove CPU bottlenecks. </p> <p> Amazon CodeGuru Profiler provides different visualizations of profiling data to help you identify what code is running on the CPU, see how much time is consumed, and suggest ways to reduce CPU utilization. </p> <note> <p>Amazon CodeGuru Profiler currently supports applications written in all Java virtual machine (JVM) languages and Python. While CodeGuru Profiler supports both visualizations and recommendations for applications written in Java, it can also generate visualizations and a subset of recommendations for applications written in other JVM languages and Python.</p> </note> <p> For more information, see <a href=\"https://docs.aws.amazon.com/codeguru/latest/profiler-ug/what-is-codeguru-profiler.html\">What is Amazon CodeGuru Profiler</a> in the <i>Amazon CodeGuru Profiler User Guide</i>. </p>
 *
 * The version of the OpenAPI document: 2019-07-18
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIGetRecommendationsResponse.h
 *
 * The structure representing the GetRecommendationsResponse.
 */

#ifndef OAIGetRecommendationsResponse_H
#define OAIGetRecommendationsResponse_H

#include <QJsonObject>

#include <QDateTime>
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIGetRecommendationsResponse : public OAIObject {
public:
    OAIGetRecommendationsResponse();
    OAIGetRecommendationsResponse(QString json);
    ~OAIGetRecommendationsResponse() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QList getAnomalies() const;
    void setAnomalies(const QList &anomalies);
    bool is_anomalies_Set() const;
    bool is_anomalies_Valid() const;

    QDateTime getProfileEndTime() const;
    void setProfileEndTime(const QDateTime &profile_end_time);
    bool is_profile_end_time_Set() const;
    bool is_profile_end_time_Valid() const;

    QDateTime getProfileStartTime() const;
    void setProfileStartTime(const QDateTime &profile_start_time);
    bool is_profile_start_time_Set() const;
    bool is_profile_start_time_Valid() const;

    QString getProfilingGroupName() const;
    void setProfilingGroupName(const QString &profiling_group_name);
    bool is_profiling_group_name_Set() const;
    bool is_profiling_group_name_Valid() const;

    QList getRecommendations() const;
    void setRecommendations(const QList &recommendations);
    bool is_recommendations_Set() const;
    bool is_recommendations_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QList m_anomalies;
    bool m_anomalies_isSet;
    bool m_anomalies_isValid;

    QDateTime m_profile_end_time;
    bool m_profile_end_time_isSet;
    bool m_profile_end_time_isValid;

    QDateTime m_profile_start_time;
    bool m_profile_start_time_isSet;
    bool m_profile_start_time_isValid;

    QString m_profiling_group_name;
    bool m_profiling_group_name_isSet;
    bool m_profiling_group_name_isValid;

    QList m_recommendations;
    bool m_recommendations_isSet;
    bool m_recommendations_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIGetRecommendationsResponse)

#endif // OAIGetRecommendationsResponse_H
