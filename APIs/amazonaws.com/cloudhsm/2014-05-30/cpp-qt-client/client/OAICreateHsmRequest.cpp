/**
 * Amazon CloudHSM
 * <fullname>AWS CloudHSM Service</fullname> <p>This is documentation for <b>AWS CloudHSM Classic</b>. For more information, see <a href=\"http://aws.amazon.com/cloudhsm/faqs-classic/\">AWS CloudHSM Classic FAQs</a>, the <a href=\"https://docs.aws.amazon.com/cloudhsm/classic/userguide/\">AWS CloudHSM Classic User Guide</a>, and the <a href=\"https://docs.aws.amazon.com/cloudhsm/classic/APIReference/\">AWS CloudHSM Classic API Reference</a>.</p> <p> <b>For information about the current version of AWS CloudHSM</b>, see <a href=\"http://aws.amazon.com/cloudhsm/\">AWS CloudHSM</a>, the <a href=\"https://docs.aws.amazon.com/cloudhsm/latest/userguide/\">AWS CloudHSM User Guide</a>, and the <a href=\"https://docs.aws.amazon.com/cloudhsm/latest/APIReference/\">AWS CloudHSM API Reference</a>.</p>
 *
 * The version of the OpenAPI document: 2014-05-30
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAICreateHsmRequest.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAICreateHsmRequest::OAICreateHsmRequest(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAICreateHsmRequest::OAICreateHsmRequest() {
    this->initializeModel();
}

OAICreateHsmRequest::~OAICreateHsmRequest() {}

void OAICreateHsmRequest::initializeModel() {

    m_subnet_id_isSet = false;
    m_subnet_id_isValid = false;

    m_ssh_key_isSet = false;
    m_ssh_key_isValid = false;

    m_eni_ip_isSet = false;
    m_eni_ip_isValid = false;

    m_iam_role_arn_isSet = false;
    m_iam_role_arn_isValid = false;

    m_external_id_isSet = false;
    m_external_id_isValid = false;

    m_subscription_type_isSet = false;
    m_subscription_type_isValid = false;

    m_client_token_isSet = false;
    m_client_token_isValid = false;

    m_syslog_ip_isSet = false;
    m_syslog_ip_isValid = false;
}

void OAICreateHsmRequest::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAICreateHsmRequest::fromJsonObject(QJsonObject json) {

    m_subnet_id_isValid = ::OpenAPI::fromJsonValue(m_subnet_id, json[QString("SubnetId")]);
    m_subnet_id_isSet = !json[QString("SubnetId")].isNull() && m_subnet_id_isValid;

    m_ssh_key_isValid = ::OpenAPI::fromJsonValue(m_ssh_key, json[QString("SshKey")]);
    m_ssh_key_isSet = !json[QString("SshKey")].isNull() && m_ssh_key_isValid;

    m_eni_ip_isValid = ::OpenAPI::fromJsonValue(m_eni_ip, json[QString("EniIp")]);
    m_eni_ip_isSet = !json[QString("EniIp")].isNull() && m_eni_ip_isValid;

    m_iam_role_arn_isValid = ::OpenAPI::fromJsonValue(m_iam_role_arn, json[QString("IamRoleArn")]);
    m_iam_role_arn_isSet = !json[QString("IamRoleArn")].isNull() && m_iam_role_arn_isValid;

    m_external_id_isValid = ::OpenAPI::fromJsonValue(m_external_id, json[QString("ExternalId")]);
    m_external_id_isSet = !json[QString("ExternalId")].isNull() && m_external_id_isValid;

    m_subscription_type_isValid = ::OpenAPI::fromJsonValue(m_subscription_type, json[QString("SubscriptionType")]);
    m_subscription_type_isSet = !json[QString("SubscriptionType")].isNull() && m_subscription_type_isValid;

    m_client_token_isValid = ::OpenAPI::fromJsonValue(m_client_token, json[QString("ClientToken")]);
    m_client_token_isSet = !json[QString("ClientToken")].isNull() && m_client_token_isValid;

    m_syslog_ip_isValid = ::OpenAPI::fromJsonValue(m_syslog_ip, json[QString("SyslogIp")]);
    m_syslog_ip_isSet = !json[QString("SyslogIp")].isNull() && m_syslog_ip_isValid;
}

QString OAICreateHsmRequest::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAICreateHsmRequest::asJsonObject() const {
    QJsonObject obj;
    if (m_subnet_id_isSet) {
        obj.insert(QString("SubnetId"), ::OpenAPI::toJsonValue(m_subnet_id));
    }
    if (m_ssh_key_isSet) {
        obj.insert(QString("SshKey"), ::OpenAPI::toJsonValue(m_ssh_key));
    }
    if (m_eni_ip_isSet) {
        obj.insert(QString("EniIp"), ::OpenAPI::toJsonValue(m_eni_ip));
    }
    if (m_iam_role_arn_isSet) {
        obj.insert(QString("IamRoleArn"), ::OpenAPI::toJsonValue(m_iam_role_arn));
    }
    if (m_external_id_isSet) {
        obj.insert(QString("ExternalId"), ::OpenAPI::toJsonValue(m_external_id));
    }
    if (m_subscription_type.isSet()) {
        obj.insert(QString("SubscriptionType"), ::OpenAPI::toJsonValue(m_subscription_type));
    }
    if (m_client_token_isSet) {
        obj.insert(QString("ClientToken"), ::OpenAPI::toJsonValue(m_client_token));
    }
    if (m_syslog_ip_isSet) {
        obj.insert(QString("SyslogIp"), ::OpenAPI::toJsonValue(m_syslog_ip));
    }
    return obj;
}

QString OAICreateHsmRequest::getSubnetId() const {
    return m_subnet_id;
}
void OAICreateHsmRequest::setSubnetId(const QString &subnet_id) {
    m_subnet_id = subnet_id;
    m_subnet_id_isSet = true;
}

bool OAICreateHsmRequest::is_subnet_id_Set() const{
    return m_subnet_id_isSet;
}

bool OAICreateHsmRequest::is_subnet_id_Valid() const{
    return m_subnet_id_isValid;
}

QString OAICreateHsmRequest::getSshKey() const {
    return m_ssh_key;
}
void OAICreateHsmRequest::setSshKey(const QString &ssh_key) {
    m_ssh_key = ssh_key;
    m_ssh_key_isSet = true;
}

bool OAICreateHsmRequest::is_ssh_key_Set() const{
    return m_ssh_key_isSet;
}

bool OAICreateHsmRequest::is_ssh_key_Valid() const{
    return m_ssh_key_isValid;
}

QString OAICreateHsmRequest::getEniIp() const {
    return m_eni_ip;
}
void OAICreateHsmRequest::setEniIp(const QString &eni_ip) {
    m_eni_ip = eni_ip;
    m_eni_ip_isSet = true;
}

bool OAICreateHsmRequest::is_eni_ip_Set() const{
    return m_eni_ip_isSet;
}

bool OAICreateHsmRequest::is_eni_ip_Valid() const{
    return m_eni_ip_isValid;
}

QString OAICreateHsmRequest::getIamRoleArn() const {
    return m_iam_role_arn;
}
void OAICreateHsmRequest::setIamRoleArn(const QString &iam_role_arn) {
    m_iam_role_arn = iam_role_arn;
    m_iam_role_arn_isSet = true;
}

bool OAICreateHsmRequest::is_iam_role_arn_Set() const{
    return m_iam_role_arn_isSet;
}

bool OAICreateHsmRequest::is_iam_role_arn_Valid() const{
    return m_iam_role_arn_isValid;
}

QString OAICreateHsmRequest::getExternalId() const {
    return m_external_id;
}
void OAICreateHsmRequest::setExternalId(const QString &external_id) {
    m_external_id = external_id;
    m_external_id_isSet = true;
}

bool OAICreateHsmRequest::is_external_id_Set() const{
    return m_external_id_isSet;
}

bool OAICreateHsmRequest::is_external_id_Valid() const{
    return m_external_id_isValid;
}

OAISubscriptionType OAICreateHsmRequest::getSubscriptionType() const {
    return m_subscription_type;
}
void OAICreateHsmRequest::setSubscriptionType(const OAISubscriptionType &subscription_type) {
    m_subscription_type = subscription_type;
    m_subscription_type_isSet = true;
}

bool OAICreateHsmRequest::is_subscription_type_Set() const{
    return m_subscription_type_isSet;
}

bool OAICreateHsmRequest::is_subscription_type_Valid() const{
    return m_subscription_type_isValid;
}

QString OAICreateHsmRequest::getClientToken() const {
    return m_client_token;
}
void OAICreateHsmRequest::setClientToken(const QString &client_token) {
    m_client_token = client_token;
    m_client_token_isSet = true;
}

bool OAICreateHsmRequest::is_client_token_Set() const{
    return m_client_token_isSet;
}

bool OAICreateHsmRequest::is_client_token_Valid() const{
    return m_client_token_isValid;
}

QString OAICreateHsmRequest::getSyslogIp() const {
    return m_syslog_ip;
}
void OAICreateHsmRequest::setSyslogIp(const QString &syslog_ip) {
    m_syslog_ip = syslog_ip;
    m_syslog_ip_isSet = true;
}

bool OAICreateHsmRequest::is_syslog_ip_Set() const{
    return m_syslog_ip_isSet;
}

bool OAICreateHsmRequest::is_syslog_ip_Valid() const{
    return m_syslog_ip_isValid;
}

bool OAICreateHsmRequest::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_subnet_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_ssh_key_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_eni_ip_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_iam_role_arn_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_external_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_subscription_type.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_client_token_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_syslog_ip_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAICreateHsmRequest::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_subnet_id_isValid && m_ssh_key_isValid && m_iam_role_arn_isValid && m_subscription_type_isValid && true;
}

} // namespace OpenAPI
