/**
 * Amazon CloudHSM
 * <fullname>AWS CloudHSM Service</fullname> <p>This is documentation for <b>AWS CloudHSM Classic</b>. For more information, see <a href=\"http://aws.amazon.com/cloudhsm/faqs-classic/\">AWS CloudHSM Classic FAQs</a>, the <a href=\"https://docs.aws.amazon.com/cloudhsm/classic/userguide/\">AWS CloudHSM Classic User Guide</a>, and the <a href=\"https://docs.aws.amazon.com/cloudhsm/classic/APIReference/\">AWS CloudHSM Classic API Reference</a>.</p> <p> <b>For information about the current version of AWS CloudHSM</b>, see <a href=\"http://aws.amazon.com/cloudhsm/\">AWS CloudHSM</a>, the <a href=\"https://docs.aws.amazon.com/cloudhsm/latest/userguide/\">AWS CloudHSM User Guide</a>, and the <a href=\"https://docs.aws.amazon.com/cloudhsm/latest/APIReference/\">AWS CloudHSM API Reference</a>.</p>
 *
 * The version of the OpenAPI document: 2014-05-30
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGetConfigResponse.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGetConfigResponse::OAIGetConfigResponse(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGetConfigResponse::OAIGetConfigResponse() {
    this->initializeModel();
}

OAIGetConfigResponse::~OAIGetConfigResponse() {}

void OAIGetConfigResponse::initializeModel() {

    m_config_type_isSet = false;
    m_config_type_isValid = false;

    m_config_file_isSet = false;
    m_config_file_isValid = false;

    m_config_cred_isSet = false;
    m_config_cred_isValid = false;
}

void OAIGetConfigResponse::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGetConfigResponse::fromJsonObject(QJsonObject json) {

    m_config_type_isValid = ::OpenAPI::fromJsonValue(m_config_type, json[QString("ConfigType")]);
    m_config_type_isSet = !json[QString("ConfigType")].isNull() && m_config_type_isValid;

    m_config_file_isValid = ::OpenAPI::fromJsonValue(m_config_file, json[QString("ConfigFile")]);
    m_config_file_isSet = !json[QString("ConfigFile")].isNull() && m_config_file_isValid;

    m_config_cred_isValid = ::OpenAPI::fromJsonValue(m_config_cred, json[QString("ConfigCred")]);
    m_config_cred_isSet = !json[QString("ConfigCred")].isNull() && m_config_cred_isValid;
}

QString OAIGetConfigResponse::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGetConfigResponse::asJsonObject() const {
    QJsonObject obj;
    if (m_config_type_isSet) {
        obj.insert(QString("ConfigType"), ::OpenAPI::toJsonValue(m_config_type));
    }
    if (m_config_file_isSet) {
        obj.insert(QString("ConfigFile"), ::OpenAPI::toJsonValue(m_config_file));
    }
    if (m_config_cred_isSet) {
        obj.insert(QString("ConfigCred"), ::OpenAPI::toJsonValue(m_config_cred));
    }
    return obj;
}

QString OAIGetConfigResponse::getConfigType() const {
    return m_config_type;
}
void OAIGetConfigResponse::setConfigType(const QString &config_type) {
    m_config_type = config_type;
    m_config_type_isSet = true;
}

bool OAIGetConfigResponse::is_config_type_Set() const{
    return m_config_type_isSet;
}

bool OAIGetConfigResponse::is_config_type_Valid() const{
    return m_config_type_isValid;
}

QString OAIGetConfigResponse::getConfigFile() const {
    return m_config_file;
}
void OAIGetConfigResponse::setConfigFile(const QString &config_file) {
    m_config_file = config_file;
    m_config_file_isSet = true;
}

bool OAIGetConfigResponse::is_config_file_Set() const{
    return m_config_file_isSet;
}

bool OAIGetConfigResponse::is_config_file_Valid() const{
    return m_config_file_isValid;
}

QString OAIGetConfigResponse::getConfigCred() const {
    return m_config_cred;
}
void OAIGetConfigResponse::setConfigCred(const QString &config_cred) {
    m_config_cred = config_cred;
    m_config_cred_isSet = true;
}

bool OAIGetConfigResponse::is_config_cred_Set() const{
    return m_config_cred_isSet;
}

bool OAIGetConfigResponse::is_config_cred_Valid() const{
    return m_config_cred_isValid;
}

bool OAIGetConfigResponse::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_config_type_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_config_file_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_config_cred_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGetConfigResponse::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
