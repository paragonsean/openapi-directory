/**
 * Amazon CloudHSM
 * <fullname>AWS CloudHSM Service</fullname> <p>This is documentation for <b>AWS CloudHSM Classic</b>. For more information, see <a href=\"http://aws.amazon.com/cloudhsm/faqs-classic/\">AWS CloudHSM Classic FAQs</a>, the <a href=\"https://docs.aws.amazon.com/cloudhsm/classic/userguide/\">AWS CloudHSM Classic User Guide</a>, and the <a href=\"https://docs.aws.amazon.com/cloudhsm/classic/APIReference/\">AWS CloudHSM Classic API Reference</a>.</p> <p> <b>For information about the current version of AWS CloudHSM</b>, see <a href=\"http://aws.amazon.com/cloudhsm/\">AWS CloudHSM</a>, the <a href=\"https://docs.aws.amazon.com/cloudhsm/latest/userguide/\">AWS CloudHSM User Guide</a>, and the <a href=\"https://docs.aws.amazon.com/cloudhsm/latest/APIReference/\">AWS CloudHSM API Reference</a>.</p>
 *
 * The version of the OpenAPI document: 2014-05-30
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIDescribeHsmResponse.h
 *
 * Contains the output of the &lt;a&gt;DescribeHsm&lt;/a&gt; operation.
 */

#ifndef OAIDescribeHsmResponse_H
#define OAIDescribeHsmResponse_H

#include <QJsonObject>

#include "OAIHsmStatus.h"
#include "OAISubscriptionType.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIDescribeHsmResponse : public OAIObject {
public:
    OAIDescribeHsmResponse();
    OAIDescribeHsmResponse(QString json);
    ~OAIDescribeHsmResponse() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getHsmArn() const;
    void setHsmArn(const QString &hsm_arn);
    bool is_hsm_arn_Set() const;
    bool is_hsm_arn_Valid() const;

    OAIHsmStatus getStatus() const;
    void setStatus(const OAIHsmStatus &status);
    bool is_status_Set() const;
    bool is_status_Valid() const;

    QString getStatusDetails() const;
    void setStatusDetails(const QString &status_details);
    bool is_status_details_Set() const;
    bool is_status_details_Valid() const;

    QString getAvailabilityZone() const;
    void setAvailabilityZone(const QString &availability_zone);
    bool is_availability_zone_Set() const;
    bool is_availability_zone_Valid() const;

    QString getEniId() const;
    void setEniId(const QString &eni_id);
    bool is_eni_id_Set() const;
    bool is_eni_id_Valid() const;

    QString getEniIp() const;
    void setEniIp(const QString &eni_ip);
    bool is_eni_ip_Set() const;
    bool is_eni_ip_Valid() const;

    OAISubscriptionType getSubscriptionType() const;
    void setSubscriptionType(const OAISubscriptionType &subscription_type);
    bool is_subscription_type_Set() const;
    bool is_subscription_type_Valid() const;

    QString getSubscriptionStartDate() const;
    void setSubscriptionStartDate(const QString &subscription_start_date);
    bool is_subscription_start_date_Set() const;
    bool is_subscription_start_date_Valid() const;

    QString getSubscriptionEndDate() const;
    void setSubscriptionEndDate(const QString &subscription_end_date);
    bool is_subscription_end_date_Set() const;
    bool is_subscription_end_date_Valid() const;

    QString getVpcId() const;
    void setVpcId(const QString &vpc_id);
    bool is_vpc_id_Set() const;
    bool is_vpc_id_Valid() const;

    QString getSubnetId() const;
    void setSubnetId(const QString &subnet_id);
    bool is_subnet_id_Set() const;
    bool is_subnet_id_Valid() const;

    QString getIamRoleArn() const;
    void setIamRoleArn(const QString &iam_role_arn);
    bool is_iam_role_arn_Set() const;
    bool is_iam_role_arn_Valid() const;

    QString getSerialNumber() const;
    void setSerialNumber(const QString &serial_number);
    bool is_serial_number_Set() const;
    bool is_serial_number_Valid() const;

    QString getVendorName() const;
    void setVendorName(const QString &vendor_name);
    bool is_vendor_name_Set() const;
    bool is_vendor_name_Valid() const;

    QString getHsmType() const;
    void setHsmType(const QString &hsm_type);
    bool is_hsm_type_Set() const;
    bool is_hsm_type_Valid() const;

    QString getSoftwareVersion() const;
    void setSoftwareVersion(const QString &software_version);
    bool is_software_version_Set() const;
    bool is_software_version_Valid() const;

    QString getSshPublicKey() const;
    void setSshPublicKey(const QString &ssh_public_key);
    bool is_ssh_public_key_Set() const;
    bool is_ssh_public_key_Valid() const;

    QString getSshKeyLastUpdated() const;
    void setSshKeyLastUpdated(const QString &ssh_key_last_updated);
    bool is_ssh_key_last_updated_Set() const;
    bool is_ssh_key_last_updated_Valid() const;

    QString getServerCertUri() const;
    void setServerCertUri(const QString &server_cert_uri);
    bool is_server_cert_uri_Set() const;
    bool is_server_cert_uri_Valid() const;

    QString getServerCertLastUpdated() const;
    void setServerCertLastUpdated(const QString &server_cert_last_updated);
    bool is_server_cert_last_updated_Set() const;
    bool is_server_cert_last_updated_Valid() const;

    QList getPartitions() const;
    void setPartitions(const QList &partitions);
    bool is_partitions_Set() const;
    bool is_partitions_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_hsm_arn;
    bool m_hsm_arn_isSet;
    bool m_hsm_arn_isValid;

    OAIHsmStatus m_status;
    bool m_status_isSet;
    bool m_status_isValid;

    QString m_status_details;
    bool m_status_details_isSet;
    bool m_status_details_isValid;

    QString m_availability_zone;
    bool m_availability_zone_isSet;
    bool m_availability_zone_isValid;

    QString m_eni_id;
    bool m_eni_id_isSet;
    bool m_eni_id_isValid;

    QString m_eni_ip;
    bool m_eni_ip_isSet;
    bool m_eni_ip_isValid;

    OAISubscriptionType m_subscription_type;
    bool m_subscription_type_isSet;
    bool m_subscription_type_isValid;

    QString m_subscription_start_date;
    bool m_subscription_start_date_isSet;
    bool m_subscription_start_date_isValid;

    QString m_subscription_end_date;
    bool m_subscription_end_date_isSet;
    bool m_subscription_end_date_isValid;

    QString m_vpc_id;
    bool m_vpc_id_isSet;
    bool m_vpc_id_isValid;

    QString m_subnet_id;
    bool m_subnet_id_isSet;
    bool m_subnet_id_isValid;

    QString m_iam_role_arn;
    bool m_iam_role_arn_isSet;
    bool m_iam_role_arn_isValid;

    QString m_serial_number;
    bool m_serial_number_isSet;
    bool m_serial_number_isValid;

    QString m_vendor_name;
    bool m_vendor_name_isSet;
    bool m_vendor_name_isValid;

    QString m_hsm_type;
    bool m_hsm_type_isSet;
    bool m_hsm_type_isValid;

    QString m_software_version;
    bool m_software_version_isSet;
    bool m_software_version_isValid;

    QString m_ssh_public_key;
    bool m_ssh_public_key_isSet;
    bool m_ssh_public_key_isValid;

    QString m_ssh_key_last_updated;
    bool m_ssh_key_last_updated_isSet;
    bool m_ssh_key_last_updated_isValid;

    QString m_server_cert_uri;
    bool m_server_cert_uri_isSet;
    bool m_server_cert_uri_isValid;

    QString m_server_cert_last_updated;
    bool m_server_cert_last_updated_isSet;
    bool m_server_cert_last_updated_isValid;

    QList m_partitions;
    bool m_partitions_isSet;
    bool m_partitions_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIDescribeHsmResponse)

#endif // OAIDescribeHsmResponse_H
