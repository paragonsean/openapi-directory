/**
 * Amazon CloudHSM
 * <fullname>AWS CloudHSM Service</fullname> <p>This is documentation for <b>AWS CloudHSM Classic</b>. For more information, see <a href=\"http://aws.amazon.com/cloudhsm/faqs-classic/\">AWS CloudHSM Classic FAQs</a>, the <a href=\"https://docs.aws.amazon.com/cloudhsm/classic/userguide/\">AWS CloudHSM Classic User Guide</a>, and the <a href=\"https://docs.aws.amazon.com/cloudhsm/classic/APIReference/\">AWS CloudHSM Classic API Reference</a>.</p> <p> <b>For information about the current version of AWS CloudHSM</b>, see <a href=\"http://aws.amazon.com/cloudhsm/\">AWS CloudHSM</a>, the <a href=\"https://docs.aws.amazon.com/cloudhsm/latest/userguide/\">AWS CloudHSM User Guide</a>, and the <a href=\"https://docs.aws.amazon.com/cloudhsm/latest/APIReference/\">AWS CloudHSM API Reference</a>.</p>
 *
 * The version of the OpenAPI document: 2014-05-30
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIDescribeHapgResponse.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIDescribeHapgResponse::OAIDescribeHapgResponse(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIDescribeHapgResponse::OAIDescribeHapgResponse() {
    this->initializeModel();
}

OAIDescribeHapgResponse::~OAIDescribeHapgResponse() {}

void OAIDescribeHapgResponse::initializeModel() {

    m_hapg_arn_isSet = false;
    m_hapg_arn_isValid = false;

    m_hapg_serial_isSet = false;
    m_hapg_serial_isValid = false;

    m_hsms_last_action_failed_isSet = false;
    m_hsms_last_action_failed_isValid = false;

    m_hsms_pending_deletion_isSet = false;
    m_hsms_pending_deletion_isValid = false;

    m_hsms_pending_registration_isSet = false;
    m_hsms_pending_registration_isValid = false;

    m_label_isSet = false;
    m_label_isValid = false;

    m_last_modified_timestamp_isSet = false;
    m_last_modified_timestamp_isValid = false;

    m_partition_serial_list_isSet = false;
    m_partition_serial_list_isValid = false;

    m_state_isSet = false;
    m_state_isValid = false;
}

void OAIDescribeHapgResponse::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIDescribeHapgResponse::fromJsonObject(QJsonObject json) {

    m_hapg_arn_isValid = ::OpenAPI::fromJsonValue(m_hapg_arn, json[QString("HapgArn")]);
    m_hapg_arn_isSet = !json[QString("HapgArn")].isNull() && m_hapg_arn_isValid;

    m_hapg_serial_isValid = ::OpenAPI::fromJsonValue(m_hapg_serial, json[QString("HapgSerial")]);
    m_hapg_serial_isSet = !json[QString("HapgSerial")].isNull() && m_hapg_serial_isValid;

    m_hsms_last_action_failed_isValid = ::OpenAPI::fromJsonValue(m_hsms_last_action_failed, json[QString("HsmsLastActionFailed")]);
    m_hsms_last_action_failed_isSet = !json[QString("HsmsLastActionFailed")].isNull() && m_hsms_last_action_failed_isValid;

    m_hsms_pending_deletion_isValid = ::OpenAPI::fromJsonValue(m_hsms_pending_deletion, json[QString("HsmsPendingDeletion")]);
    m_hsms_pending_deletion_isSet = !json[QString("HsmsPendingDeletion")].isNull() && m_hsms_pending_deletion_isValid;

    m_hsms_pending_registration_isValid = ::OpenAPI::fromJsonValue(m_hsms_pending_registration, json[QString("HsmsPendingRegistration")]);
    m_hsms_pending_registration_isSet = !json[QString("HsmsPendingRegistration")].isNull() && m_hsms_pending_registration_isValid;

    m_label_isValid = ::OpenAPI::fromJsonValue(m_label, json[QString("Label")]);
    m_label_isSet = !json[QString("Label")].isNull() && m_label_isValid;

    m_last_modified_timestamp_isValid = ::OpenAPI::fromJsonValue(m_last_modified_timestamp, json[QString("LastModifiedTimestamp")]);
    m_last_modified_timestamp_isSet = !json[QString("LastModifiedTimestamp")].isNull() && m_last_modified_timestamp_isValid;

    m_partition_serial_list_isValid = ::OpenAPI::fromJsonValue(m_partition_serial_list, json[QString("PartitionSerialList")]);
    m_partition_serial_list_isSet = !json[QString("PartitionSerialList")].isNull() && m_partition_serial_list_isValid;

    m_state_isValid = ::OpenAPI::fromJsonValue(m_state, json[QString("State")]);
    m_state_isSet = !json[QString("State")].isNull() && m_state_isValid;
}

QString OAIDescribeHapgResponse::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIDescribeHapgResponse::asJsonObject() const {
    QJsonObject obj;
    if (m_hapg_arn_isSet) {
        obj.insert(QString("HapgArn"), ::OpenAPI::toJsonValue(m_hapg_arn));
    }
    if (m_hapg_serial_isSet) {
        obj.insert(QString("HapgSerial"), ::OpenAPI::toJsonValue(m_hapg_serial));
    }
    if (m_hsms_last_action_failed.isSet()) {
        obj.insert(QString("HsmsLastActionFailed"), ::OpenAPI::toJsonValue(m_hsms_last_action_failed));
    }
    if (m_hsms_pending_deletion.isSet()) {
        obj.insert(QString("HsmsPendingDeletion"), ::OpenAPI::toJsonValue(m_hsms_pending_deletion));
    }
    if (m_hsms_pending_registration.isSet()) {
        obj.insert(QString("HsmsPendingRegistration"), ::OpenAPI::toJsonValue(m_hsms_pending_registration));
    }
    if (m_label_isSet) {
        obj.insert(QString("Label"), ::OpenAPI::toJsonValue(m_label));
    }
    if (m_last_modified_timestamp_isSet) {
        obj.insert(QString("LastModifiedTimestamp"), ::OpenAPI::toJsonValue(m_last_modified_timestamp));
    }
    if (m_partition_serial_list.isSet()) {
        obj.insert(QString("PartitionSerialList"), ::OpenAPI::toJsonValue(m_partition_serial_list));
    }
    if (m_state.isSet()) {
        obj.insert(QString("State"), ::OpenAPI::toJsonValue(m_state));
    }
    return obj;
}

QString OAIDescribeHapgResponse::getHapgArn() const {
    return m_hapg_arn;
}
void OAIDescribeHapgResponse::setHapgArn(const QString &hapg_arn) {
    m_hapg_arn = hapg_arn;
    m_hapg_arn_isSet = true;
}

bool OAIDescribeHapgResponse::is_hapg_arn_Set() const{
    return m_hapg_arn_isSet;
}

bool OAIDescribeHapgResponse::is_hapg_arn_Valid() const{
    return m_hapg_arn_isValid;
}

QString OAIDescribeHapgResponse::getHapgSerial() const {
    return m_hapg_serial;
}
void OAIDescribeHapgResponse::setHapgSerial(const QString &hapg_serial) {
    m_hapg_serial = hapg_serial;
    m_hapg_serial_isSet = true;
}

bool OAIDescribeHapgResponse::is_hapg_serial_Set() const{
    return m_hapg_serial_isSet;
}

bool OAIDescribeHapgResponse::is_hapg_serial_Valid() const{
    return m_hapg_serial_isValid;
}

QList OAIDescribeHapgResponse::getHsmsLastActionFailed() const {
    return m_hsms_last_action_failed;
}
void OAIDescribeHapgResponse::setHsmsLastActionFailed(const QList &hsms_last_action_failed) {
    m_hsms_last_action_failed = hsms_last_action_failed;
    m_hsms_last_action_failed_isSet = true;
}

bool OAIDescribeHapgResponse::is_hsms_last_action_failed_Set() const{
    return m_hsms_last_action_failed_isSet;
}

bool OAIDescribeHapgResponse::is_hsms_last_action_failed_Valid() const{
    return m_hsms_last_action_failed_isValid;
}

QList OAIDescribeHapgResponse::getHsmsPendingDeletion() const {
    return m_hsms_pending_deletion;
}
void OAIDescribeHapgResponse::setHsmsPendingDeletion(const QList &hsms_pending_deletion) {
    m_hsms_pending_deletion = hsms_pending_deletion;
    m_hsms_pending_deletion_isSet = true;
}

bool OAIDescribeHapgResponse::is_hsms_pending_deletion_Set() const{
    return m_hsms_pending_deletion_isSet;
}

bool OAIDescribeHapgResponse::is_hsms_pending_deletion_Valid() const{
    return m_hsms_pending_deletion_isValid;
}

QList OAIDescribeHapgResponse::getHsmsPendingRegistration() const {
    return m_hsms_pending_registration;
}
void OAIDescribeHapgResponse::setHsmsPendingRegistration(const QList &hsms_pending_registration) {
    m_hsms_pending_registration = hsms_pending_registration;
    m_hsms_pending_registration_isSet = true;
}

bool OAIDescribeHapgResponse::is_hsms_pending_registration_Set() const{
    return m_hsms_pending_registration_isSet;
}

bool OAIDescribeHapgResponse::is_hsms_pending_registration_Valid() const{
    return m_hsms_pending_registration_isValid;
}

QString OAIDescribeHapgResponse::getLabel() const {
    return m_label;
}
void OAIDescribeHapgResponse::setLabel(const QString &label) {
    m_label = label;
    m_label_isSet = true;
}

bool OAIDescribeHapgResponse::is_label_Set() const{
    return m_label_isSet;
}

bool OAIDescribeHapgResponse::is_label_Valid() const{
    return m_label_isValid;
}

QString OAIDescribeHapgResponse::getLastModifiedTimestamp() const {
    return m_last_modified_timestamp;
}
void OAIDescribeHapgResponse::setLastModifiedTimestamp(const QString &last_modified_timestamp) {
    m_last_modified_timestamp = last_modified_timestamp;
    m_last_modified_timestamp_isSet = true;
}

bool OAIDescribeHapgResponse::is_last_modified_timestamp_Set() const{
    return m_last_modified_timestamp_isSet;
}

bool OAIDescribeHapgResponse::is_last_modified_timestamp_Valid() const{
    return m_last_modified_timestamp_isValid;
}

QList OAIDescribeHapgResponse::getPartitionSerialList() const {
    return m_partition_serial_list;
}
void OAIDescribeHapgResponse::setPartitionSerialList(const QList &partition_serial_list) {
    m_partition_serial_list = partition_serial_list;
    m_partition_serial_list_isSet = true;
}

bool OAIDescribeHapgResponse::is_partition_serial_list_Set() const{
    return m_partition_serial_list_isSet;
}

bool OAIDescribeHapgResponse::is_partition_serial_list_Valid() const{
    return m_partition_serial_list_isValid;
}

OAICloudHsmObjectState OAIDescribeHapgResponse::getState() const {
    return m_state;
}
void OAIDescribeHapgResponse::setState(const OAICloudHsmObjectState &state) {
    m_state = state;
    m_state_isSet = true;
}

bool OAIDescribeHapgResponse::is_state_Set() const{
    return m_state_isSet;
}

bool OAIDescribeHapgResponse::is_state_Valid() const{
    return m_state_isValid;
}

bool OAIDescribeHapgResponse::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_hapg_arn_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_hapg_serial_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_hsms_last_action_failed.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_hsms_pending_deletion.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_hsms_pending_registration.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_label_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_last_modified_timestamp_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_partition_serial_list.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_state.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIDescribeHapgResponse::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
