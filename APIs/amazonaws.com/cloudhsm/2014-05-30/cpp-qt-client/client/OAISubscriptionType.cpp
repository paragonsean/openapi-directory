/**
 * Amazon CloudHSM
 * <fullname>AWS CloudHSM Service</fullname> <p>This is documentation for <b>AWS CloudHSM Classic</b>. For more information, see <a href=\"http://aws.amazon.com/cloudhsm/faqs-classic/\">AWS CloudHSM Classic FAQs</a>, the <a href=\"https://docs.aws.amazon.com/cloudhsm/classic/userguide/\">AWS CloudHSM Classic User Guide</a>, and the <a href=\"https://docs.aws.amazon.com/cloudhsm/classic/APIReference/\">AWS CloudHSM Classic API Reference</a>.</p> <p> <b>For information about the current version of AWS CloudHSM</b>, see <a href=\"http://aws.amazon.com/cloudhsm/\">AWS CloudHSM</a>, the <a href=\"https://docs.aws.amazon.com/cloudhsm/latest/userguide/\">AWS CloudHSM User Guide</a>, and the <a href=\"https://docs.aws.amazon.com/cloudhsm/latest/APIReference/\">AWS CloudHSM API Reference</a>.</p>
 *
 * The version of the OpenAPI document: 2014-05-30
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAISubscriptionType.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAISubscriptionType::OAISubscriptionType(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAISubscriptionType::OAISubscriptionType() {
    this->initializeModel();
}

OAISubscriptionType::~OAISubscriptionType() {}

void OAISubscriptionType::initializeModel() {

    m_value_isSet = false;
    m_value_isValid = false;
    m_value = eOAISubscriptionType::INVALID_VALUE_OPENAPI_GENERATED;
}

void OAISubscriptionType::fromJson(QString jsonString) {
    
    if ( jsonString.compare("PRODUCTION", Qt::CaseInsensitive) == 0) {
        m_value = eOAISubscriptionType::PRODUCTION;
        m_value_isSet = m_value_isValid = true;
    }
}

void OAISubscriptionType::fromJsonValue(QJsonValue json) {
fromJson(json.toString());
}

QString OAISubscriptionType::asJson() const {
    
    QString val;
    switch (m_value){
        case eOAISubscriptionType::PRODUCTION:
            val = "PRODUCTION";
            break;
        default:
            break;
    }
    return val;
}

QJsonValue OAISubscriptionType::asJsonValue() const {
    
    return QJsonValue(asJson());
}


OAISubscriptionType::eOAISubscriptionType OAISubscriptionType::getValue() const {
    return m_value;
}

void OAISubscriptionType::setValue(const OAISubscriptionType::eOAISubscriptionType& value){
    m_value = value;
    m_value_isSet = true;
}
bool OAISubscriptionType::isSet() const {
    
    return m_value_isSet;
}

bool OAISubscriptionType::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_value_isValid;
}

} // namespace OpenAPI
