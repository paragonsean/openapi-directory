/*
 * Amazon CloudHSM
 * <fullname>AWS CloudHSM Service</fullname> <p>This is documentation for <b>AWS CloudHSM Classic</b>. For more information, see <a href=\"http://aws.amazon.com/cloudhsm/faqs-classic/\">AWS CloudHSM Classic FAQs</a>, the <a href=\"https://docs.aws.amazon.com/cloudhsm/classic/userguide/\">AWS CloudHSM Classic User Guide</a>, and the <a href=\"https://docs.aws.amazon.com/cloudhsm/classic/APIReference/\">AWS CloudHSM Classic API Reference</a>.</p> <p> <b>For information about the current version of AWS CloudHSM</b>, see <a href=\"http://aws.amazon.com/cloudhsm/\">AWS CloudHSM</a>, the <a href=\"https://docs.aws.amazon.com/cloudhsm/latest/userguide/\">AWS CloudHSM User Guide</a>, and the <a href=\"https://docs.aws.amazon.com/cloudhsm/latest/APIReference/\">AWS CloudHSM API Reference</a>.</p>
 *
 * The version of the OpenAPI document: 2014-05-30
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.HsmStatus;
import org.openapitools.client.model.SubscriptionType;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * Contains the output of the &lt;a&gt;DescribeHsm&lt;/a&gt; operation.
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T12:00:48.979829-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class DescribeHsmResponse {
  public static final String SERIALIZED_NAME_HSM_ARN = "HsmArn";
  @SerializedName(SERIALIZED_NAME_HSM_ARN)
  private String hsmArn;

  public static final String SERIALIZED_NAME_STATUS = "Status";
  @SerializedName(SERIALIZED_NAME_STATUS)
  private HsmStatus status;

  public static final String SERIALIZED_NAME_STATUS_DETAILS = "StatusDetails";
  @SerializedName(SERIALIZED_NAME_STATUS_DETAILS)
  private String statusDetails;

  public static final String SERIALIZED_NAME_AVAILABILITY_ZONE = "AvailabilityZone";
  @SerializedName(SERIALIZED_NAME_AVAILABILITY_ZONE)
  private String availabilityZone;

  public static final String SERIALIZED_NAME_ENI_ID = "EniId";
  @SerializedName(SERIALIZED_NAME_ENI_ID)
  private String eniId;

  public static final String SERIALIZED_NAME_ENI_IP = "EniIp";
  @SerializedName(SERIALIZED_NAME_ENI_IP)
  private String eniIp;

  public static final String SERIALIZED_NAME_SUBSCRIPTION_TYPE = "SubscriptionType";
  @SerializedName(SERIALIZED_NAME_SUBSCRIPTION_TYPE)
  private SubscriptionType subscriptionType;

  public static final String SERIALIZED_NAME_SUBSCRIPTION_START_DATE = "SubscriptionStartDate";
  @SerializedName(SERIALIZED_NAME_SUBSCRIPTION_START_DATE)
  private String subscriptionStartDate;

  public static final String SERIALIZED_NAME_SUBSCRIPTION_END_DATE = "SubscriptionEndDate";
  @SerializedName(SERIALIZED_NAME_SUBSCRIPTION_END_DATE)
  private String subscriptionEndDate;

  public static final String SERIALIZED_NAME_VPC_ID = "VpcId";
  @SerializedName(SERIALIZED_NAME_VPC_ID)
  private String vpcId;

  public static final String SERIALIZED_NAME_SUBNET_ID = "SubnetId";
  @SerializedName(SERIALIZED_NAME_SUBNET_ID)
  private String subnetId;

  public static final String SERIALIZED_NAME_IAM_ROLE_ARN = "IamRoleArn";
  @SerializedName(SERIALIZED_NAME_IAM_ROLE_ARN)
  private String iamRoleArn;

  public static final String SERIALIZED_NAME_SERIAL_NUMBER = "SerialNumber";
  @SerializedName(SERIALIZED_NAME_SERIAL_NUMBER)
  private String serialNumber;

  public static final String SERIALIZED_NAME_VENDOR_NAME = "VendorName";
  @SerializedName(SERIALIZED_NAME_VENDOR_NAME)
  private String vendorName;

  public static final String SERIALIZED_NAME_HSM_TYPE = "HsmType";
  @SerializedName(SERIALIZED_NAME_HSM_TYPE)
  private String hsmType;

  public static final String SERIALIZED_NAME_SOFTWARE_VERSION = "SoftwareVersion";
  @SerializedName(SERIALIZED_NAME_SOFTWARE_VERSION)
  private String softwareVersion;

  public static final String SERIALIZED_NAME_SSH_PUBLIC_KEY = "SshPublicKey";
  @SerializedName(SERIALIZED_NAME_SSH_PUBLIC_KEY)
  private String sshPublicKey;

  public static final String SERIALIZED_NAME_SSH_KEY_LAST_UPDATED = "SshKeyLastUpdated";
  @SerializedName(SERIALIZED_NAME_SSH_KEY_LAST_UPDATED)
  private String sshKeyLastUpdated;

  public static final String SERIALIZED_NAME_SERVER_CERT_URI = "ServerCertUri";
  @SerializedName(SERIALIZED_NAME_SERVER_CERT_URI)
  private String serverCertUri;

  public static final String SERIALIZED_NAME_SERVER_CERT_LAST_UPDATED = "ServerCertLastUpdated";
  @SerializedName(SERIALIZED_NAME_SERVER_CERT_LAST_UPDATED)
  private String serverCertLastUpdated;

  public static final String SERIALIZED_NAME_PARTITIONS = "Partitions";
  @SerializedName(SERIALIZED_NAME_PARTITIONS)
  private List partitions;

  public DescribeHsmResponse() {
  }

  public DescribeHsmResponse hsmArn(String hsmArn) {
    this.hsmArn = hsmArn;
    return this;
  }

  /**
   * Get hsmArn
   * @return hsmArn
   */
  @javax.annotation.Nullable
  public String getHsmArn() {
    return hsmArn;
  }

  public void setHsmArn(String hsmArn) {
    this.hsmArn = hsmArn;
  }


  public DescribeHsmResponse status(HsmStatus status) {
    this.status = status;
    return this;
  }

  /**
   * Get status
   * @return status
   */
  @javax.annotation.Nullable
  public HsmStatus getStatus() {
    return status;
  }

  public void setStatus(HsmStatus status) {
    this.status = status;
  }


  public DescribeHsmResponse statusDetails(String statusDetails) {
    this.statusDetails = statusDetails;
    return this;
  }

  /**
   * Get statusDetails
   * @return statusDetails
   */
  @javax.annotation.Nullable
  public String getStatusDetails() {
    return statusDetails;
  }

  public void setStatusDetails(String statusDetails) {
    this.statusDetails = statusDetails;
  }


  public DescribeHsmResponse availabilityZone(String availabilityZone) {
    this.availabilityZone = availabilityZone;
    return this;
  }

  /**
   * Get availabilityZone
   * @return availabilityZone
   */
  @javax.annotation.Nullable
  public String getAvailabilityZone() {
    return availabilityZone;
  }

  public void setAvailabilityZone(String availabilityZone) {
    this.availabilityZone = availabilityZone;
  }


  public DescribeHsmResponse eniId(String eniId) {
    this.eniId = eniId;
    return this;
  }

  /**
   * Get eniId
   * @return eniId
   */
  @javax.annotation.Nullable
  public String getEniId() {
    return eniId;
  }

  public void setEniId(String eniId) {
    this.eniId = eniId;
  }


  public DescribeHsmResponse eniIp(String eniIp) {
    this.eniIp = eniIp;
    return this;
  }

  /**
   * Get eniIp
   * @return eniIp
   */
  @javax.annotation.Nullable
  public String getEniIp() {
    return eniIp;
  }

  public void setEniIp(String eniIp) {
    this.eniIp = eniIp;
  }


  public DescribeHsmResponse subscriptionType(SubscriptionType subscriptionType) {
    this.subscriptionType = subscriptionType;
    return this;
  }

  /**
   * Get subscriptionType
   * @return subscriptionType
   */
  @javax.annotation.Nullable
  public SubscriptionType getSubscriptionType() {
    return subscriptionType;
  }

  public void setSubscriptionType(SubscriptionType subscriptionType) {
    this.subscriptionType = subscriptionType;
  }


  public DescribeHsmResponse subscriptionStartDate(String subscriptionStartDate) {
    this.subscriptionStartDate = subscriptionStartDate;
    return this;
  }

  /**
   * Get subscriptionStartDate
   * @return subscriptionStartDate
   */
  @javax.annotation.Nullable
  public String getSubscriptionStartDate() {
    return subscriptionStartDate;
  }

  public void setSubscriptionStartDate(String subscriptionStartDate) {
    this.subscriptionStartDate = subscriptionStartDate;
  }


  public DescribeHsmResponse subscriptionEndDate(String subscriptionEndDate) {
    this.subscriptionEndDate = subscriptionEndDate;
    return this;
  }

  /**
   * Get subscriptionEndDate
   * @return subscriptionEndDate
   */
  @javax.annotation.Nullable
  public String getSubscriptionEndDate() {
    return subscriptionEndDate;
  }

  public void setSubscriptionEndDate(String subscriptionEndDate) {
    this.subscriptionEndDate = subscriptionEndDate;
  }


  public DescribeHsmResponse vpcId(String vpcId) {
    this.vpcId = vpcId;
    return this;
  }

  /**
   * Get vpcId
   * @return vpcId
   */
  @javax.annotation.Nullable
  public String getVpcId() {
    return vpcId;
  }

  public void setVpcId(String vpcId) {
    this.vpcId = vpcId;
  }


  public DescribeHsmResponse subnetId(String subnetId) {
    this.subnetId = subnetId;
    return this;
  }

  /**
   * Get subnetId
   * @return subnetId
   */
  @javax.annotation.Nullable
  public String getSubnetId() {
    return subnetId;
  }

  public void setSubnetId(String subnetId) {
    this.subnetId = subnetId;
  }


  public DescribeHsmResponse iamRoleArn(String iamRoleArn) {
    this.iamRoleArn = iamRoleArn;
    return this;
  }

  /**
   * Get iamRoleArn
   * @return iamRoleArn
   */
  @javax.annotation.Nullable
  public String getIamRoleArn() {
    return iamRoleArn;
  }

  public void setIamRoleArn(String iamRoleArn) {
    this.iamRoleArn = iamRoleArn;
  }


  public DescribeHsmResponse serialNumber(String serialNumber) {
    this.serialNumber = serialNumber;
    return this;
  }

  /**
   * Get serialNumber
   * @return serialNumber
   */
  @javax.annotation.Nullable
  public String getSerialNumber() {
    return serialNumber;
  }

  public void setSerialNumber(String serialNumber) {
    this.serialNumber = serialNumber;
  }


  public DescribeHsmResponse vendorName(String vendorName) {
    this.vendorName = vendorName;
    return this;
  }

  /**
   * Get vendorName
   * @return vendorName
   */
  @javax.annotation.Nullable
  public String getVendorName() {
    return vendorName;
  }

  public void setVendorName(String vendorName) {
    this.vendorName = vendorName;
  }


  public DescribeHsmResponse hsmType(String hsmType) {
    this.hsmType = hsmType;
    return this;
  }

  /**
   * Get hsmType
   * @return hsmType
   */
  @javax.annotation.Nullable
  public String getHsmType() {
    return hsmType;
  }

  public void setHsmType(String hsmType) {
    this.hsmType = hsmType;
  }


  public DescribeHsmResponse softwareVersion(String softwareVersion) {
    this.softwareVersion = softwareVersion;
    return this;
  }

  /**
   * Get softwareVersion
   * @return softwareVersion
   */
  @javax.annotation.Nullable
  public String getSoftwareVersion() {
    return softwareVersion;
  }

  public void setSoftwareVersion(String softwareVersion) {
    this.softwareVersion = softwareVersion;
  }


  public DescribeHsmResponse sshPublicKey(String sshPublicKey) {
    this.sshPublicKey = sshPublicKey;
    return this;
  }

  /**
   * Get sshPublicKey
   * @return sshPublicKey
   */
  @javax.annotation.Nullable
  public String getSshPublicKey() {
    return sshPublicKey;
  }

  public void setSshPublicKey(String sshPublicKey) {
    this.sshPublicKey = sshPublicKey;
  }


  public DescribeHsmResponse sshKeyLastUpdated(String sshKeyLastUpdated) {
    this.sshKeyLastUpdated = sshKeyLastUpdated;
    return this;
  }

  /**
   * Get sshKeyLastUpdated
   * @return sshKeyLastUpdated
   */
  @javax.annotation.Nullable
  public String getSshKeyLastUpdated() {
    return sshKeyLastUpdated;
  }

  public void setSshKeyLastUpdated(String sshKeyLastUpdated) {
    this.sshKeyLastUpdated = sshKeyLastUpdated;
  }


  public DescribeHsmResponse serverCertUri(String serverCertUri) {
    this.serverCertUri = serverCertUri;
    return this;
  }

  /**
   * Get serverCertUri
   * @return serverCertUri
   */
  @javax.annotation.Nullable
  public String getServerCertUri() {
    return serverCertUri;
  }

  public void setServerCertUri(String serverCertUri) {
    this.serverCertUri = serverCertUri;
  }


  public DescribeHsmResponse serverCertLastUpdated(String serverCertLastUpdated) {
    this.serverCertLastUpdated = serverCertLastUpdated;
    return this;
  }

  /**
   * Get serverCertLastUpdated
   * @return serverCertLastUpdated
   */
  @javax.annotation.Nullable
  public String getServerCertLastUpdated() {
    return serverCertLastUpdated;
  }

  public void setServerCertLastUpdated(String serverCertLastUpdated) {
    this.serverCertLastUpdated = serverCertLastUpdated;
  }


  public DescribeHsmResponse partitions(List partitions) {
    this.partitions = partitions;
    return this;
  }

  /**
   * Get partitions
   * @return partitions
   */
  @javax.annotation.Nullable
  public List getPartitions() {
    return partitions;
  }

  public void setPartitions(List partitions) {
    this.partitions = partitions;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    DescribeHsmResponse describeHsmResponse = (DescribeHsmResponse) o;
    return Objects.equals(this.hsmArn, describeHsmResponse.hsmArn) &&
        Objects.equals(this.status, describeHsmResponse.status) &&
        Objects.equals(this.statusDetails, describeHsmResponse.statusDetails) &&
        Objects.equals(this.availabilityZone, describeHsmResponse.availabilityZone) &&
        Objects.equals(this.eniId, describeHsmResponse.eniId) &&
        Objects.equals(this.eniIp, describeHsmResponse.eniIp) &&
        Objects.equals(this.subscriptionType, describeHsmResponse.subscriptionType) &&
        Objects.equals(this.subscriptionStartDate, describeHsmResponse.subscriptionStartDate) &&
        Objects.equals(this.subscriptionEndDate, describeHsmResponse.subscriptionEndDate) &&
        Objects.equals(this.vpcId, describeHsmResponse.vpcId) &&
        Objects.equals(this.subnetId, describeHsmResponse.subnetId) &&
        Objects.equals(this.iamRoleArn, describeHsmResponse.iamRoleArn) &&
        Objects.equals(this.serialNumber, describeHsmResponse.serialNumber) &&
        Objects.equals(this.vendorName, describeHsmResponse.vendorName) &&
        Objects.equals(this.hsmType, describeHsmResponse.hsmType) &&
        Objects.equals(this.softwareVersion, describeHsmResponse.softwareVersion) &&
        Objects.equals(this.sshPublicKey, describeHsmResponse.sshPublicKey) &&
        Objects.equals(this.sshKeyLastUpdated, describeHsmResponse.sshKeyLastUpdated) &&
        Objects.equals(this.serverCertUri, describeHsmResponse.serverCertUri) &&
        Objects.equals(this.serverCertLastUpdated, describeHsmResponse.serverCertLastUpdated) &&
        Objects.equals(this.partitions, describeHsmResponse.partitions);
  }

  @Override
  public int hashCode() {
    return Objects.hash(hsmArn, status, statusDetails, availabilityZone, eniId, eniIp, subscriptionType, subscriptionStartDate, subscriptionEndDate, vpcId, subnetId, iamRoleArn, serialNumber, vendorName, hsmType, softwareVersion, sshPublicKey, sshKeyLastUpdated, serverCertUri, serverCertLastUpdated, partitions);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class DescribeHsmResponse {\n");
    sb.append("    hsmArn: ").append(toIndentedString(hsmArn)).append("\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("    statusDetails: ").append(toIndentedString(statusDetails)).append("\n");
    sb.append("    availabilityZone: ").append(toIndentedString(availabilityZone)).append("\n");
    sb.append("    eniId: ").append(toIndentedString(eniId)).append("\n");
    sb.append("    eniIp: ").append(toIndentedString(eniIp)).append("\n");
    sb.append("    subscriptionType: ").append(toIndentedString(subscriptionType)).append("\n");
    sb.append("    subscriptionStartDate: ").append(toIndentedString(subscriptionStartDate)).append("\n");
    sb.append("    subscriptionEndDate: ").append(toIndentedString(subscriptionEndDate)).append("\n");
    sb.append("    vpcId: ").append(toIndentedString(vpcId)).append("\n");
    sb.append("    subnetId: ").append(toIndentedString(subnetId)).append("\n");
    sb.append("    iamRoleArn: ").append(toIndentedString(iamRoleArn)).append("\n");
    sb.append("    serialNumber: ").append(toIndentedString(serialNumber)).append("\n");
    sb.append("    vendorName: ").append(toIndentedString(vendorName)).append("\n");
    sb.append("    hsmType: ").append(toIndentedString(hsmType)).append("\n");
    sb.append("    softwareVersion: ").append(toIndentedString(softwareVersion)).append("\n");
    sb.append("    sshPublicKey: ").append(toIndentedString(sshPublicKey)).append("\n");
    sb.append("    sshKeyLastUpdated: ").append(toIndentedString(sshKeyLastUpdated)).append("\n");
    sb.append("    serverCertUri: ").append(toIndentedString(serverCertUri)).append("\n");
    sb.append("    serverCertLastUpdated: ").append(toIndentedString(serverCertLastUpdated)).append("\n");
    sb.append("    partitions: ").append(toIndentedString(partitions)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("HsmArn");
    openapiFields.add("Status");
    openapiFields.add("StatusDetails");
    openapiFields.add("AvailabilityZone");
    openapiFields.add("EniId");
    openapiFields.add("EniIp");
    openapiFields.add("SubscriptionType");
    openapiFields.add("SubscriptionStartDate");
    openapiFields.add("SubscriptionEndDate");
    openapiFields.add("VpcId");
    openapiFields.add("SubnetId");
    openapiFields.add("IamRoleArn");
    openapiFields.add("SerialNumber");
    openapiFields.add("VendorName");
    openapiFields.add("HsmType");
    openapiFields.add("SoftwareVersion");
    openapiFields.add("SshPublicKey");
    openapiFields.add("SshKeyLastUpdated");
    openapiFields.add("ServerCertUri");
    openapiFields.add("ServerCertLastUpdated");
    openapiFields.add("Partitions");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to DescribeHsmResponse
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!DescribeHsmResponse.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in DescribeHsmResponse is not found in the empty JSON string", DescribeHsmResponse.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!DescribeHsmResponse.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `DescribeHsmResponse` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // validate the optional field `HsmArn`
      if (jsonObj.get("HsmArn") != null && !jsonObj.get("HsmArn").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("HsmArn"));
      }
      // validate the optional field `Status`
      if (jsonObj.get("Status") != null && !jsonObj.get("Status").isJsonNull()) {
        HsmStatus.validateJsonElement(jsonObj.get("Status"));
      }
      // validate the optional field `StatusDetails`
      if (jsonObj.get("StatusDetails") != null && !jsonObj.get("StatusDetails").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("StatusDetails"));
      }
      // validate the optional field `AvailabilityZone`
      if (jsonObj.get("AvailabilityZone") != null && !jsonObj.get("AvailabilityZone").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("AvailabilityZone"));
      }
      // validate the optional field `EniId`
      if (jsonObj.get("EniId") != null && !jsonObj.get("EniId").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("EniId"));
      }
      // validate the optional field `EniIp`
      if (jsonObj.get("EniIp") != null && !jsonObj.get("EniIp").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("EniIp"));
      }
      // validate the optional field `SubscriptionType`
      if (jsonObj.get("SubscriptionType") != null && !jsonObj.get("SubscriptionType").isJsonNull()) {
        SubscriptionType.validateJsonElement(jsonObj.get("SubscriptionType"));
      }
      // validate the optional field `SubscriptionStartDate`
      if (jsonObj.get("SubscriptionStartDate") != null && !jsonObj.get("SubscriptionStartDate").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("SubscriptionStartDate"));
      }
      // validate the optional field `SubscriptionEndDate`
      if (jsonObj.get("SubscriptionEndDate") != null && !jsonObj.get("SubscriptionEndDate").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("SubscriptionEndDate"));
      }
      // validate the optional field `VpcId`
      if (jsonObj.get("VpcId") != null && !jsonObj.get("VpcId").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("VpcId"));
      }
      // validate the optional field `SubnetId`
      if (jsonObj.get("SubnetId") != null && !jsonObj.get("SubnetId").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("SubnetId"));
      }
      // validate the optional field `IamRoleArn`
      if (jsonObj.get("IamRoleArn") != null && !jsonObj.get("IamRoleArn").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("IamRoleArn"));
      }
      // validate the optional field `SerialNumber`
      if (jsonObj.get("SerialNumber") != null && !jsonObj.get("SerialNumber").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("SerialNumber"));
      }
      // validate the optional field `VendorName`
      if (jsonObj.get("VendorName") != null && !jsonObj.get("VendorName").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("VendorName"));
      }
      // validate the optional field `HsmType`
      if (jsonObj.get("HsmType") != null && !jsonObj.get("HsmType").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("HsmType"));
      }
      // validate the optional field `SoftwareVersion`
      if (jsonObj.get("SoftwareVersion") != null && !jsonObj.get("SoftwareVersion").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("SoftwareVersion"));
      }
      // validate the optional field `SshPublicKey`
      if (jsonObj.get("SshPublicKey") != null && !jsonObj.get("SshPublicKey").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("SshPublicKey"));
      }
      // validate the optional field `SshKeyLastUpdated`
      if (jsonObj.get("SshKeyLastUpdated") != null && !jsonObj.get("SshKeyLastUpdated").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("SshKeyLastUpdated"));
      }
      // validate the optional field `ServerCertUri`
      if (jsonObj.get("ServerCertUri") != null && !jsonObj.get("ServerCertUri").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("ServerCertUri"));
      }
      // validate the optional field `ServerCertLastUpdated`
      if (jsonObj.get("ServerCertLastUpdated") != null && !jsonObj.get("ServerCertLastUpdated").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("ServerCertLastUpdated"));
      }
      // validate the optional field `Partitions`
      if (jsonObj.get("Partitions") != null && !jsonObj.get("Partitions").isJsonNull()) {
        List.validateJsonElement(jsonObj.get("Partitions"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!DescribeHsmResponse.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'DescribeHsmResponse' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<DescribeHsmResponse> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(DescribeHsmResponse.class));

       return (TypeAdapter<T>) new TypeAdapter<DescribeHsmResponse>() {
           @Override
           public void write(JsonWriter out, DescribeHsmResponse value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public DescribeHsmResponse read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of DescribeHsmResponse given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of DescribeHsmResponse
   * @throws IOException if the JSON string is invalid with respect to DescribeHsmResponse
   */
  public static DescribeHsmResponse fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, DescribeHsmResponse.class);
  }

  /**
   * Convert an instance of DescribeHsmResponse to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

