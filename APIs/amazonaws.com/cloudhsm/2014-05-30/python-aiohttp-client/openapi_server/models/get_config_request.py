# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.client_version import ClientVersion
from openapi_server import util


class GetConfigRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, client_arn: str=None, client_version: ClientVersion=None, hapg_list: List=None):
        """GetConfigRequest - a model defined in OpenAPI

        :param client_arn: The client_arn of this GetConfigRequest.
        :param client_version: The client_version of this GetConfigRequest.
        :param hapg_list: The hapg_list of this GetConfigRequest.
        """
        self.openapi_types = {
            'client_arn': str,
            'client_version': ClientVersion,
            'hapg_list': List
        }

        self.attribute_map = {
            'client_arn': 'ClientArn',
            'client_version': 'ClientVersion',
            'hapg_list': 'HapgList'
        }

        self._client_arn = client_arn
        self._client_version = client_version
        self._hapg_list = hapg_list

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GetConfigRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The GetConfigRequest of this GetConfigRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def client_arn(self):
        """Gets the client_arn of this GetConfigRequest.


        :return: The client_arn of this GetConfigRequest.
        :rtype: str
        """
        return self._client_arn

    @client_arn.setter
    def client_arn(self, client_arn):
        """Sets the client_arn of this GetConfigRequest.


        :param client_arn: The client_arn of this GetConfigRequest.
        :type client_arn: str
        """
        if client_arn is None:
            raise ValueError("Invalid value for `client_arn`, must not be `None`")

        self._client_arn = client_arn

    @property
    def client_version(self):
        """Gets the client_version of this GetConfigRequest.


        :return: The client_version of this GetConfigRequest.
        :rtype: ClientVersion
        """
        return self._client_version

    @client_version.setter
    def client_version(self, client_version):
        """Sets the client_version of this GetConfigRequest.


        :param client_version: The client_version of this GetConfigRequest.
        :type client_version: ClientVersion
        """
        if client_version is None:
            raise ValueError("Invalid value for `client_version`, must not be `None`")

        self._client_version = client_version

    @property
    def hapg_list(self):
        """Gets the hapg_list of this GetConfigRequest.


        :return: The hapg_list of this GetConfigRequest.
        :rtype: List
        """
        return self._hapg_list

    @hapg_list.setter
    def hapg_list(self, hapg_list):
        """Sets the hapg_list of this GetConfigRequest.


        :param hapg_list: The hapg_list of this GetConfigRequest.
        :type hapg_list: List
        """
        if hapg_list is None:
            raise ValueError("Invalid value for `hapg_list`, must not be `None`")

        self._hapg_list = hapg_list
