# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class DeleteLunaClientRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, client_arn: str=None):
        """DeleteLunaClientRequest - a model defined in OpenAPI

        :param client_arn: The client_arn of this DeleteLunaClientRequest.
        """
        self.openapi_types = {
            'client_arn': str
        }

        self.attribute_map = {
            'client_arn': 'ClientArn'
        }

        self._client_arn = client_arn

    @classmethod
    def from_dict(cls, dikt: dict) -> 'DeleteLunaClientRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The DeleteLunaClientRequest of this DeleteLunaClientRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def client_arn(self):
        """Gets the client_arn of this DeleteLunaClientRequest.


        :return: The client_arn of this DeleteLunaClientRequest.
        :rtype: str
        """
        return self._client_arn

    @client_arn.setter
    def client_arn(self, client_arn):
        """Sets the client_arn of this DeleteLunaClientRequest.


        :param client_arn: The client_arn of this DeleteLunaClientRequest.
        :type client_arn: str
        """
        if client_arn is None:
            raise ValueError("Invalid value for `client_arn`, must not be `None`")

        self._client_arn = client_arn
