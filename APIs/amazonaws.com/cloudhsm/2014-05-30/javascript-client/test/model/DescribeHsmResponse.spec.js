/**
 * Amazon CloudHSM
 * <fullname>AWS CloudHSM Service</fullname> <p>This is documentation for <b>AWS CloudHSM Classic</b>. For more information, see <a href=\"http://aws.amazon.com/cloudhsm/faqs-classic/\">AWS CloudHSM Classic FAQs</a>, the <a href=\"https://docs.aws.amazon.com/cloudhsm/classic/userguide/\">AWS CloudHSM Classic User Guide</a>, and the <a href=\"https://docs.aws.amazon.com/cloudhsm/classic/APIReference/\">AWS CloudHSM Classic API Reference</a>.</p> <p> <b>For information about the current version of AWS CloudHSM</b>, see <a href=\"http://aws.amazon.com/cloudhsm/\">AWS CloudHSM</a>, the <a href=\"https://docs.aws.amazon.com/cloudhsm/latest/userguide/\">AWS CloudHSM User Guide</a>, and the <a href=\"https://docs.aws.amazon.com/cloudhsm/latest/APIReference/\">AWS CloudHSM API Reference</a>.</p>
 *
 * The version of the OpenAPI document: 2014-05-30
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.AmazonCloudHsm);
  }
}(this, function(expect, AmazonCloudHsm) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new AmazonCloudHsm.DescribeHsmResponse();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('DescribeHsmResponse', function() {
    it('should create an instance of DescribeHsmResponse', function() {
      // uncomment below and update the code to test DescribeHsmResponse
      //var instance = new AmazonCloudHsm.DescribeHsmResponse();
      //expect(instance).to.be.a(AmazonCloudHsm.DescribeHsmResponse);
    });

    it('should have the property hsmArn (base name: "HsmArn")', function() {
      // uncomment below and update the code to test the property hsmArn
      //var instance = new AmazonCloudHsm.DescribeHsmResponse();
      //expect(instance).to.be();
    });

    it('should have the property status (base name: "Status")', function() {
      // uncomment below and update the code to test the property status
      //var instance = new AmazonCloudHsm.DescribeHsmResponse();
      //expect(instance).to.be();
    });

    it('should have the property statusDetails (base name: "StatusDetails")', function() {
      // uncomment below and update the code to test the property statusDetails
      //var instance = new AmazonCloudHsm.DescribeHsmResponse();
      //expect(instance).to.be();
    });

    it('should have the property availabilityZone (base name: "AvailabilityZone")', function() {
      // uncomment below and update the code to test the property availabilityZone
      //var instance = new AmazonCloudHsm.DescribeHsmResponse();
      //expect(instance).to.be();
    });

    it('should have the property eniId (base name: "EniId")', function() {
      // uncomment below and update the code to test the property eniId
      //var instance = new AmazonCloudHsm.DescribeHsmResponse();
      //expect(instance).to.be();
    });

    it('should have the property eniIp (base name: "EniIp")', function() {
      // uncomment below and update the code to test the property eniIp
      //var instance = new AmazonCloudHsm.DescribeHsmResponse();
      //expect(instance).to.be();
    });

    it('should have the property subscriptionType (base name: "SubscriptionType")', function() {
      // uncomment below and update the code to test the property subscriptionType
      //var instance = new AmazonCloudHsm.DescribeHsmResponse();
      //expect(instance).to.be();
    });

    it('should have the property subscriptionStartDate (base name: "SubscriptionStartDate")', function() {
      // uncomment below and update the code to test the property subscriptionStartDate
      //var instance = new AmazonCloudHsm.DescribeHsmResponse();
      //expect(instance).to.be();
    });

    it('should have the property subscriptionEndDate (base name: "SubscriptionEndDate")', function() {
      // uncomment below and update the code to test the property subscriptionEndDate
      //var instance = new AmazonCloudHsm.DescribeHsmResponse();
      //expect(instance).to.be();
    });

    it('should have the property vpcId (base name: "VpcId")', function() {
      // uncomment below and update the code to test the property vpcId
      //var instance = new AmazonCloudHsm.DescribeHsmResponse();
      //expect(instance).to.be();
    });

    it('should have the property subnetId (base name: "SubnetId")', function() {
      // uncomment below and update the code to test the property subnetId
      //var instance = new AmazonCloudHsm.DescribeHsmResponse();
      //expect(instance).to.be();
    });

    it('should have the property iamRoleArn (base name: "IamRoleArn")', function() {
      // uncomment below and update the code to test the property iamRoleArn
      //var instance = new AmazonCloudHsm.DescribeHsmResponse();
      //expect(instance).to.be();
    });

    it('should have the property serialNumber (base name: "SerialNumber")', function() {
      // uncomment below and update the code to test the property serialNumber
      //var instance = new AmazonCloudHsm.DescribeHsmResponse();
      //expect(instance).to.be();
    });

    it('should have the property vendorName (base name: "VendorName")', function() {
      // uncomment below and update the code to test the property vendorName
      //var instance = new AmazonCloudHsm.DescribeHsmResponse();
      //expect(instance).to.be();
    });

    it('should have the property hsmType (base name: "HsmType")', function() {
      // uncomment below and update the code to test the property hsmType
      //var instance = new AmazonCloudHsm.DescribeHsmResponse();
      //expect(instance).to.be();
    });

    it('should have the property softwareVersion (base name: "SoftwareVersion")', function() {
      // uncomment below and update the code to test the property softwareVersion
      //var instance = new AmazonCloudHsm.DescribeHsmResponse();
      //expect(instance).to.be();
    });

    it('should have the property sshPublicKey (base name: "SshPublicKey")', function() {
      // uncomment below and update the code to test the property sshPublicKey
      //var instance = new AmazonCloudHsm.DescribeHsmResponse();
      //expect(instance).to.be();
    });

    it('should have the property sshKeyLastUpdated (base name: "SshKeyLastUpdated")', function() {
      // uncomment below and update the code to test the property sshKeyLastUpdated
      //var instance = new AmazonCloudHsm.DescribeHsmResponse();
      //expect(instance).to.be();
    });

    it('should have the property serverCertUri (base name: "ServerCertUri")', function() {
      // uncomment below and update the code to test the property serverCertUri
      //var instance = new AmazonCloudHsm.DescribeHsmResponse();
      //expect(instance).to.be();
    });

    it('should have the property serverCertLastUpdated (base name: "ServerCertLastUpdated")', function() {
      // uncomment below and update the code to test the property serverCertLastUpdated
      //var instance = new AmazonCloudHsm.DescribeHsmResponse();
      //expect(instance).to.be();
    });

    it('should have the property partitions (base name: "Partitions")', function() {
      // uncomment below and update the code to test the property partitions
      //var instance = new AmazonCloudHsm.DescribeHsmResponse();
      //expect(instance).to.be();
    });

  });

}));
