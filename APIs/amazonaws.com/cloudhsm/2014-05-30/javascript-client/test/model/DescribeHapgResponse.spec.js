/**
 * Amazon CloudHSM
 * <fullname>AWS CloudHSM Service</fullname> <p>This is documentation for <b>AWS CloudHSM Classic</b>. For more information, see <a href=\"http://aws.amazon.com/cloudhsm/faqs-classic/\">AWS CloudHSM Classic FAQs</a>, the <a href=\"https://docs.aws.amazon.com/cloudhsm/classic/userguide/\">AWS CloudHSM Classic User Guide</a>, and the <a href=\"https://docs.aws.amazon.com/cloudhsm/classic/APIReference/\">AWS CloudHSM Classic API Reference</a>.</p> <p> <b>For information about the current version of AWS CloudHSM</b>, see <a href=\"http://aws.amazon.com/cloudhsm/\">AWS CloudHSM</a>, the <a href=\"https://docs.aws.amazon.com/cloudhsm/latest/userguide/\">AWS CloudHSM User Guide</a>, and the <a href=\"https://docs.aws.amazon.com/cloudhsm/latest/APIReference/\">AWS CloudHSM API Reference</a>.</p>
 *
 * The version of the OpenAPI document: 2014-05-30
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.AmazonCloudHsm);
  }
}(this, function(expect, AmazonCloudHsm) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new AmazonCloudHsm.DescribeHapgResponse();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('DescribeHapgResponse', function() {
    it('should create an instance of DescribeHapgResponse', function() {
      // uncomment below and update the code to test DescribeHapgResponse
      //var instance = new AmazonCloudHsm.DescribeHapgResponse();
      //expect(instance).to.be.a(AmazonCloudHsm.DescribeHapgResponse);
    });

    it('should have the property hapgArn (base name: "HapgArn")', function() {
      // uncomment below and update the code to test the property hapgArn
      //var instance = new AmazonCloudHsm.DescribeHapgResponse();
      //expect(instance).to.be();
    });

    it('should have the property hapgSerial (base name: "HapgSerial")', function() {
      // uncomment below and update the code to test the property hapgSerial
      //var instance = new AmazonCloudHsm.DescribeHapgResponse();
      //expect(instance).to.be();
    });

    it('should have the property hsmsLastActionFailed (base name: "HsmsLastActionFailed")', function() {
      // uncomment below and update the code to test the property hsmsLastActionFailed
      //var instance = new AmazonCloudHsm.DescribeHapgResponse();
      //expect(instance).to.be();
    });

    it('should have the property hsmsPendingDeletion (base name: "HsmsPendingDeletion")', function() {
      // uncomment below and update the code to test the property hsmsPendingDeletion
      //var instance = new AmazonCloudHsm.DescribeHapgResponse();
      //expect(instance).to.be();
    });

    it('should have the property hsmsPendingRegistration (base name: "HsmsPendingRegistration")', function() {
      // uncomment below and update the code to test the property hsmsPendingRegistration
      //var instance = new AmazonCloudHsm.DescribeHapgResponse();
      //expect(instance).to.be();
    });

    it('should have the property label (base name: "Label")', function() {
      // uncomment below and update the code to test the property label
      //var instance = new AmazonCloudHsm.DescribeHapgResponse();
      //expect(instance).to.be();
    });

    it('should have the property lastModifiedTimestamp (base name: "LastModifiedTimestamp")', function() {
      // uncomment below and update the code to test the property lastModifiedTimestamp
      //var instance = new AmazonCloudHsm.DescribeHapgResponse();
      //expect(instance).to.be();
    });

    it('should have the property partitionSerialList (base name: "PartitionSerialList")', function() {
      // uncomment below and update the code to test the property partitionSerialList
      //var instance = new AmazonCloudHsm.DescribeHapgResponse();
      //expect(instance).to.be();
    });

    it('should have the property state (base name: "State")', function() {
      // uncomment below and update the code to test the property state
      //var instance = new AmazonCloudHsm.DescribeHapgResponse();
      //expect(instance).to.be();
    });

  });

}));
