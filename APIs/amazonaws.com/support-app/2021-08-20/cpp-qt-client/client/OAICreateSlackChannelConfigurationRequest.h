/**
 * AWS Support App
 * <p><fullname>Amazon Web Services Support App in Slack</fullname> <p>You can use the Amazon Web Services Support App in Slack API to manage your support cases in Slack for your Amazon Web Services account. After you configure your Slack workspace and channel with the Amazon Web Services Support App, you can perform the following tasks directly in your Slack channel:</p> <ul> <li> <p>Create, search, update, and resolve your support cases</p> </li> <li> <p>Request service quota increases for your account</p> </li> <li> <p>Invite Amazon Web Services Support agents to your channel so that you can chat directly about your support cases</p> </li> </ul> <p>For more information about how to perform these actions in Slack, see the following documentation in the <i>Amazon Web Services Support User Guide</i>:</p> <ul> <li> <p> <a href=\"https://docs.aws.amazon.com/awssupport/latest/user/aws-support-app-for-slack.html\">Amazon Web Services Support App in Slack</a> </p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/awssupport/latest/user/joining-a-live-chat-session.html\">Joining a live chat session with Amazon Web Services Support</a> </p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/awssupport/latest/user/service-quota-increase.html\">Requesting service quota increases</a> </p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/awssupport/latest/user/support-app-commands.html\">Amazon Web Services Support App commands in Slack</a> </p> </li> </ul> <p>You can also use the Amazon Web Services Management Console instead of the Amazon Web Services Support App API to manage your Slack configurations. For more information, see <a href=\"https://docs.aws.amazon.com/awssupport/latest/user/authorize-slack-workspace.html\">Authorize a Slack workspace to enable the Amazon Web Services Support App</a>.</p> <note> <ul> <li> <p>You must have a Business or Enterprise Support plan to use the Amazon Web Services Support App API. </p> </li> <li> <p>For more information about the Amazon Web Services Support App endpoints, see the <a href=\"https://docs.aws.amazon.com/general/latest/gr/awssupport.html#awssupport_app_region\">Amazon Web Services Support App in Slack endpoints</a> in the <i>Amazon Web Services General Reference</i>.</p> </li> </ul> </note></p>
 *
 * The version of the OpenAPI document: 2021-08-20
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAICreateSlackChannelConfigurationRequest.h
 *
 * 
 */

#ifndef OAICreateSlackChannelConfigurationRequest_H
#define OAICreateSlackChannelConfigurationRequest_H

#include <QJsonObject>

#include "OAINotificationSeverityLevel.h"
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAICreateSlackChannelConfigurationRequest : public OAIObject {
public:
    OAICreateSlackChannelConfigurationRequest();
    OAICreateSlackChannelConfigurationRequest(QString json);
    ~OAICreateSlackChannelConfigurationRequest() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getChannelId() const;
    void setChannelId(const QString &channel_id);
    bool is_channel_id_Set() const;
    bool is_channel_id_Valid() const;

    QString getChannelName() const;
    void setChannelName(const QString &channel_name);
    bool is_channel_name_Set() const;
    bool is_channel_name_Valid() const;

    QString getChannelRoleArn() const;
    void setChannelRoleArn(const QString &channel_role_arn);
    bool is_channel_role_arn_Set() const;
    bool is_channel_role_arn_Valid() const;

    bool getNotifyOnAddCorrespondenceToCase() const;
    void setNotifyOnAddCorrespondenceToCase(const bool &notify_on_add_correspondence_to_case);
    bool is_notify_on_add_correspondence_to_case_Set() const;
    bool is_notify_on_add_correspondence_to_case_Valid() const;

    OAINotificationSeverityLevel getNotifyOnCaseSeverity() const;
    void setNotifyOnCaseSeverity(const OAINotificationSeverityLevel &notify_on_case_severity);
    bool is_notify_on_case_severity_Set() const;
    bool is_notify_on_case_severity_Valid() const;

    bool getNotifyOnCreateOrReopenCase() const;
    void setNotifyOnCreateOrReopenCase(const bool &notify_on_create_or_reopen_case);
    bool is_notify_on_create_or_reopen_case_Set() const;
    bool is_notify_on_create_or_reopen_case_Valid() const;

    bool getNotifyOnResolveCase() const;
    void setNotifyOnResolveCase(const bool &notify_on_resolve_case);
    bool is_notify_on_resolve_case_Set() const;
    bool is_notify_on_resolve_case_Valid() const;

    QString getTeamId() const;
    void setTeamId(const QString &team_id);
    bool is_team_id_Set() const;
    bool is_team_id_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_channel_id;
    bool m_channel_id_isSet;
    bool m_channel_id_isValid;

    QString m_channel_name;
    bool m_channel_name_isSet;
    bool m_channel_name_isValid;

    QString m_channel_role_arn;
    bool m_channel_role_arn_isSet;
    bool m_channel_role_arn_isValid;

    bool m_notify_on_add_correspondence_to_case;
    bool m_notify_on_add_correspondence_to_case_isSet;
    bool m_notify_on_add_correspondence_to_case_isValid;

    OAINotificationSeverityLevel m_notify_on_case_severity;
    bool m_notify_on_case_severity_isSet;
    bool m_notify_on_case_severity_isValid;

    bool m_notify_on_create_or_reopen_case;
    bool m_notify_on_create_or_reopen_case_isSet;
    bool m_notify_on_create_or_reopen_case_isValid;

    bool m_notify_on_resolve_case;
    bool m_notify_on_resolve_case_isSet;
    bool m_notify_on_resolve_case_isValid;

    QString m_team_id;
    bool m_team_id_isSet;
    bool m_team_id_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAICreateSlackChannelConfigurationRequest)

#endif // OAICreateSlackChannelConfigurationRequest_H
