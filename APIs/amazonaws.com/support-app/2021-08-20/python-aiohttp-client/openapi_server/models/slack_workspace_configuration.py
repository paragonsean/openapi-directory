# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class SlackWorkspaceConfiguration(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, allow_organization_member_account: bool=None, team_id: str=None, team_name: str=None):
        """SlackWorkspaceConfiguration - a model defined in OpenAPI

        :param allow_organization_member_account: The allow_organization_member_account of this SlackWorkspaceConfiguration.
        :param team_id: The team_id of this SlackWorkspaceConfiguration.
        :param team_name: The team_name of this SlackWorkspaceConfiguration.
        """
        self.openapi_types = {
            'allow_organization_member_account': bool,
            'team_id': str,
            'team_name': str
        }

        self.attribute_map = {
            'allow_organization_member_account': 'allowOrganizationMemberAccount',
            'team_id': 'teamId',
            'team_name': 'teamName'
        }

        self._allow_organization_member_account = allow_organization_member_account
        self._team_id = team_id
        self._team_name = team_name

    @classmethod
    def from_dict(cls, dikt: dict) -> 'SlackWorkspaceConfiguration':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The SlackWorkspaceConfiguration of this SlackWorkspaceConfiguration.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def allow_organization_member_account(self):
        """Gets the allow_organization_member_account of this SlackWorkspaceConfiguration.


        :return: The allow_organization_member_account of this SlackWorkspaceConfiguration.
        :rtype: bool
        """
        return self._allow_organization_member_account

    @allow_organization_member_account.setter
    def allow_organization_member_account(self, allow_organization_member_account):
        """Sets the allow_organization_member_account of this SlackWorkspaceConfiguration.


        :param allow_organization_member_account: The allow_organization_member_account of this SlackWorkspaceConfiguration.
        :type allow_organization_member_account: bool
        """

        self._allow_organization_member_account = allow_organization_member_account

    @property
    def team_id(self):
        """Gets the team_id of this SlackWorkspaceConfiguration.


        :return: The team_id of this SlackWorkspaceConfiguration.
        :rtype: str
        """
        return self._team_id

    @team_id.setter
    def team_id(self, team_id):
        """Sets the team_id of this SlackWorkspaceConfiguration.


        :param team_id: The team_id of this SlackWorkspaceConfiguration.
        :type team_id: str
        """
        if team_id is None:
            raise ValueError("Invalid value for `team_id`, must not be `None`")

        self._team_id = team_id

    @property
    def team_name(self):
        """Gets the team_name of this SlackWorkspaceConfiguration.


        :return: The team_name of this SlackWorkspaceConfiguration.
        :rtype: str
        """
        return self._team_name

    @team_name.setter
    def team_name(self, team_name):
        """Sets the team_name of this SlackWorkspaceConfiguration.


        :param team_name: The team_name of this SlackWorkspaceConfiguration.
        :type team_name: str
        """

        self._team_name = team_name
