# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.account_type import AccountType
from openapi_server import util


class RegisterSlackWorkspaceForOrganizationResult(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, account_type: AccountType=None, team_id: str=None, team_name: str=None):
        """RegisterSlackWorkspaceForOrganizationResult - a model defined in OpenAPI

        :param account_type: The account_type of this RegisterSlackWorkspaceForOrganizationResult.
        :param team_id: The team_id of this RegisterSlackWorkspaceForOrganizationResult.
        :param team_name: The team_name of this RegisterSlackWorkspaceForOrganizationResult.
        """
        self.openapi_types = {
            'account_type': AccountType,
            'team_id': str,
            'team_name': str
        }

        self.attribute_map = {
            'account_type': 'accountType',
            'team_id': 'teamId',
            'team_name': 'teamName'
        }

        self._account_type = account_type
        self._team_id = team_id
        self._team_name = team_name

    @classmethod
    def from_dict(cls, dikt: dict) -> 'RegisterSlackWorkspaceForOrganizationResult':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The RegisterSlackWorkspaceForOrganizationResult of this RegisterSlackWorkspaceForOrganizationResult.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def account_type(self):
        """Gets the account_type of this RegisterSlackWorkspaceForOrganizationResult.


        :return: The account_type of this RegisterSlackWorkspaceForOrganizationResult.
        :rtype: AccountType
        """
        return self._account_type

    @account_type.setter
    def account_type(self, account_type):
        """Sets the account_type of this RegisterSlackWorkspaceForOrganizationResult.


        :param account_type: The account_type of this RegisterSlackWorkspaceForOrganizationResult.
        :type account_type: AccountType
        """

        self._account_type = account_type

    @property
    def team_id(self):
        """Gets the team_id of this RegisterSlackWorkspaceForOrganizationResult.


        :return: The team_id of this RegisterSlackWorkspaceForOrganizationResult.
        :rtype: str
        """
        return self._team_id

    @team_id.setter
    def team_id(self, team_id):
        """Sets the team_id of this RegisterSlackWorkspaceForOrganizationResult.


        :param team_id: The team_id of this RegisterSlackWorkspaceForOrganizationResult.
        :type team_id: str
        """

        self._team_id = team_id

    @property
    def team_name(self):
        """Gets the team_name of this RegisterSlackWorkspaceForOrganizationResult.


        :return: The team_name of this RegisterSlackWorkspaceForOrganizationResult.
        :rtype: str
        """
        return self._team_name

    @team_name.setter
    def team_name(self, team_name):
        """Sets the team_name of this RegisterSlackWorkspaceForOrganizationResult.


        :param team_name: The team_name of this RegisterSlackWorkspaceForOrganizationResult.
        :type team_name: str
        """

        self._team_name = team_name
