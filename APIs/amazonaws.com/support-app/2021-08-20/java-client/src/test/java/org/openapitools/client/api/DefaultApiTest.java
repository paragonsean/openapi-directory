/*
 * AWS Support App
 * <p><fullname>Amazon Web Services Support App in Slack</fullname> <p>You can use the Amazon Web Services Support App in Slack API to manage your support cases in Slack for your Amazon Web Services account. After you configure your Slack workspace and channel with the Amazon Web Services Support App, you can perform the following tasks directly in your Slack channel:</p> <ul> <li> <p>Create, search, update, and resolve your support cases</p> </li> <li> <p>Request service quota increases for your account</p> </li> <li> <p>Invite Amazon Web Services Support agents to your channel so that you can chat directly about your support cases</p> </li> </ul> <p>For more information about how to perform these actions in Slack, see the following documentation in the <i>Amazon Web Services Support User Guide</i>:</p> <ul> <li> <p> <a href=\"https://docs.aws.amazon.com/awssupport/latest/user/aws-support-app-for-slack.html\">Amazon Web Services Support App in Slack</a> </p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/awssupport/latest/user/joining-a-live-chat-session.html\">Joining a live chat session with Amazon Web Services Support</a> </p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/awssupport/latest/user/service-quota-increase.html\">Requesting service quota increases</a> </p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/awssupport/latest/user/support-app-commands.html\">Amazon Web Services Support App commands in Slack</a> </p> </li> </ul> <p>You can also use the Amazon Web Services Management Console instead of the Amazon Web Services Support App API to manage your Slack configurations. For more information, see <a href=\"https://docs.aws.amazon.com/awssupport/latest/user/authorize-slack-workspace.html\">Authorize a Slack workspace to enable the Amazon Web Services Support App</a>.</p> <note> <ul> <li> <p>You must have a Business or Enterprise Support plan to use the Amazon Web Services Support App API. </p> </li> <li> <p>For more information about the Amazon Web Services Support App endpoints, see the <a href=\"https://docs.aws.amazon.com/general/latest/gr/awssupport.html#awssupport_app_region\">Amazon Web Services Support App in Slack endpoints</a> in the <i>Amazon Web Services General Reference</i>.</p> </li> </ul> </note></p>
 *
 * The version of the OpenAPI document: 2021-08-20
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.CreateSlackChannelConfigurationRequest;
import org.openapitools.client.model.DeleteSlackChannelConfigurationRequest;
import org.openapitools.client.model.DeleteSlackWorkspaceConfigurationRequest;
import org.openapitools.client.model.GetAccountAliasResult;
import org.openapitools.client.model.ListSlackChannelConfigurationsRequest;
import org.openapitools.client.model.ListSlackChannelConfigurationsResult;
import org.openapitools.client.model.ListSlackWorkspaceConfigurationsResult;
import org.openapitools.client.model.PutAccountAliasRequest;
import org.openapitools.client.model.RegisterSlackWorkspaceForOrganizationRequest;
import org.openapitools.client.model.RegisterSlackWorkspaceForOrganizationResult;
import org.openapitools.client.model.UpdateSlackChannelConfigurationRequest;
import org.openapitools.client.model.UpdateSlackChannelConfigurationResult;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for DefaultApi
 */
@Disabled
public class DefaultApiTest {

    private final DefaultApi api = new DefaultApi();

    /**
     * &lt;p&gt;Creates a Slack channel configuration for your Amazon Web Services account.&lt;/p&gt; &lt;note&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;You can add up to 5 Slack workspaces for your account.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;You can add up to 20 Slack channels for your account.&lt;/p&gt; &lt;/li&gt; &lt;/ul&gt; &lt;/note&gt; &lt;p&gt;A Slack channel can have up to 100 Amazon Web Services accounts. This means that only 100 accounts can add the same Slack channel to the Amazon Web Services Support App. We recommend that you only add the accounts that you need to manage support cases for your organization. This can reduce the notifications about case updates that you receive in the Slack channel.&lt;/p&gt; &lt;note&gt; &lt;p&gt;We recommend that you choose a private Slack channel so that only members in that channel have read and write access to your support cases. Anyone in your Slack channel can create, update, or resolve support cases for your account. Users require an invitation to join private channels. &lt;/p&gt; &lt;/note&gt;
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void createSlackChannelConfigurationTest() throws ApiException {
        CreateSlackChannelConfigurationRequest createSlackChannelConfigurationRequest = null;
        String xAmzContentSha256 = null;
        String xAmzDate = null;
        String xAmzAlgorithm = null;
        String xAmzCredential = null;
        String xAmzSecurityToken = null;
        String xAmzSignature = null;
        String xAmzSignedHeaders = null;
        Object response = api.createSlackChannelConfiguration(createSlackChannelConfigurationRequest, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders);
        // TODO: test validations
    }

    /**
     * Deletes an alias for an Amazon Web Services account ID. The alias appears in the Amazon Web Services Support App page of the Amazon Web Services Support Center. The alias also appears in Slack messages from the Amazon Web Services Support App.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void deleteAccountAliasTest() throws ApiException {
        String xAmzContentSha256 = null;
        String xAmzDate = null;
        String xAmzAlgorithm = null;
        String xAmzCredential = null;
        String xAmzSecurityToken = null;
        String xAmzSignature = null;
        String xAmzSignedHeaders = null;
        Object response = api.deleteAccountAlias(xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders);
        // TODO: test validations
    }

    /**
     * Deletes a Slack channel configuration from your Amazon Web Services account. This operation doesn&#39;t delete your Slack channel.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void deleteSlackChannelConfigurationTest() throws ApiException {
        DeleteSlackChannelConfigurationRequest deleteSlackChannelConfigurationRequest = null;
        String xAmzContentSha256 = null;
        String xAmzDate = null;
        String xAmzAlgorithm = null;
        String xAmzCredential = null;
        String xAmzSecurityToken = null;
        String xAmzSignature = null;
        String xAmzSignedHeaders = null;
        Object response = api.deleteSlackChannelConfiguration(deleteSlackChannelConfigurationRequest, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders);
        // TODO: test validations
    }

    /**
     * Deletes a Slack workspace configuration from your Amazon Web Services account. This operation doesn&#39;t delete your Slack workspace.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void deleteSlackWorkspaceConfigurationTest() throws ApiException {
        DeleteSlackWorkspaceConfigurationRequest deleteSlackWorkspaceConfigurationRequest = null;
        String xAmzContentSha256 = null;
        String xAmzDate = null;
        String xAmzAlgorithm = null;
        String xAmzCredential = null;
        String xAmzSecurityToken = null;
        String xAmzSignature = null;
        String xAmzSignedHeaders = null;
        Object response = api.deleteSlackWorkspaceConfiguration(deleteSlackWorkspaceConfigurationRequest, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders);
        // TODO: test validations
    }

    /**
     * Retrieves the alias from an Amazon Web Services account ID. The alias appears in the Amazon Web Services Support App page of the Amazon Web Services Support Center. The alias also appears in Slack messages from the Amazon Web Services Support App.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getAccountAliasTest() throws ApiException {
        String xAmzContentSha256 = null;
        String xAmzDate = null;
        String xAmzAlgorithm = null;
        String xAmzCredential = null;
        String xAmzSecurityToken = null;
        String xAmzSignature = null;
        String xAmzSignedHeaders = null;
        GetAccountAliasResult response = api.getAccountAlias(xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders);
        // TODO: test validations
    }

    /**
     * Lists the Slack channel configurations for an Amazon Web Services account.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void listSlackChannelConfigurationsTest() throws ApiException {
        ListSlackChannelConfigurationsRequest listSlackChannelConfigurationsRequest = null;
        String xAmzContentSha256 = null;
        String xAmzDate = null;
        String xAmzAlgorithm = null;
        String xAmzCredential = null;
        String xAmzSecurityToken = null;
        String xAmzSignature = null;
        String xAmzSignedHeaders = null;
        String nextToken = null;
        ListSlackChannelConfigurationsResult response = api.listSlackChannelConfigurations(listSlackChannelConfigurationsRequest, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders, nextToken);
        // TODO: test validations
    }

    /**
     * Lists the Slack workspace configurations for an Amazon Web Services account.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void listSlackWorkspaceConfigurationsTest() throws ApiException {
        ListSlackChannelConfigurationsRequest listSlackChannelConfigurationsRequest = null;
        String xAmzContentSha256 = null;
        String xAmzDate = null;
        String xAmzAlgorithm = null;
        String xAmzCredential = null;
        String xAmzSecurityToken = null;
        String xAmzSignature = null;
        String xAmzSignedHeaders = null;
        String nextToken = null;
        ListSlackWorkspaceConfigurationsResult response = api.listSlackWorkspaceConfigurations(listSlackChannelConfigurationsRequest, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders, nextToken);
        // TODO: test validations
    }

    /**
     * Creates or updates an individual alias for each Amazon Web Services account ID. The alias appears in the Amazon Web Services Support App page of the Amazon Web Services Support Center. The alias also appears in Slack messages from the Amazon Web Services Support App.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void putAccountAliasTest() throws ApiException {
        PutAccountAliasRequest putAccountAliasRequest = null;
        String xAmzContentSha256 = null;
        String xAmzDate = null;
        String xAmzAlgorithm = null;
        String xAmzCredential = null;
        String xAmzSecurityToken = null;
        String xAmzSignature = null;
        String xAmzSignedHeaders = null;
        Object response = api.putAccountAlias(putAccountAliasRequest, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders);
        // TODO: test validations
    }

    /**
     * &lt;p&gt;Registers a Slack workspace for your Amazon Web Services account. To call this API, your account must be part of an organization in Organizations.&lt;/p&gt; &lt;p&gt;If you&#39;re the &lt;i&gt;management account&lt;/i&gt; and you want to register Slack workspaces for your organization, you must complete the following tasks:&lt;/p&gt; &lt;ol&gt; &lt;li&gt; &lt;p&gt;Sign in to the &lt;a href&#x3D;\&quot;https://console.aws.amazon.com/support/app\&quot;&gt;Amazon Web Services Support Center&lt;/a&gt; and authorize the Slack workspaces where you want your organization to have access to. See &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/awssupport/latest/user/authorize-slack-workspace.html\&quot;&gt;Authorize a Slack workspace&lt;/a&gt; in the &lt;i&gt;Amazon Web Services Support User Guide&lt;/i&gt;.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;Call the &lt;code&gt;RegisterSlackWorkspaceForOrganization&lt;/code&gt; API to authorize each Slack workspace for the organization.&lt;/p&gt; &lt;/li&gt; &lt;/ol&gt; &lt;p&gt;After the management account authorizes the Slack workspace, member accounts can call this API to authorize the same Slack workspace for their individual accounts. Member accounts don&#39;t need to authorize the Slack workspace manually through the &lt;a href&#x3D;\&quot;https://console.aws.amazon.com/support/app\&quot;&gt;Amazon Web Services Support Center&lt;/a&gt;.&lt;/p&gt; &lt;p&gt;To use the Amazon Web Services Support App, each account must then complete the following tasks:&lt;/p&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;Create an Identity and Access Management (IAM) role with the required permission. For more information, see &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/awssupport/latest/user/support-app-permissions.html\&quot;&gt;Managing access to the Amazon Web Services Support App&lt;/a&gt;.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;Configure a Slack channel to use the Amazon Web Services Support App for support cases for that account. For more information, see &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/awssupport/latest/user/add-your-slack-channel.html\&quot;&gt;Configuring a Slack channel&lt;/a&gt;.&lt;/p&gt; &lt;/li&gt; &lt;/ul&gt;
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void registerSlackWorkspaceForOrganizationTest() throws ApiException {
        RegisterSlackWorkspaceForOrganizationRequest registerSlackWorkspaceForOrganizationRequest = null;
        String xAmzContentSha256 = null;
        String xAmzDate = null;
        String xAmzAlgorithm = null;
        String xAmzCredential = null;
        String xAmzSecurityToken = null;
        String xAmzSignature = null;
        String xAmzSignedHeaders = null;
        RegisterSlackWorkspaceForOrganizationResult response = api.registerSlackWorkspaceForOrganization(registerSlackWorkspaceForOrganizationRequest, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders);
        // TODO: test validations
    }

    /**
     * Updates the configuration for a Slack channel, such as case update notifications.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void updateSlackChannelConfigurationTest() throws ApiException {
        UpdateSlackChannelConfigurationRequest updateSlackChannelConfigurationRequest = null;
        String xAmzContentSha256 = null;
        String xAmzDate = null;
        String xAmzAlgorithm = null;
        String xAmzCredential = null;
        String xAmzSecurityToken = null;
        String xAmzSignature = null;
        String xAmzSignedHeaders = null;
        UpdateSlackChannelConfigurationResult response = api.updateSlackChannelConfiguration(updateSlackChannelConfigurationRequest, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders);
        // TODO: test validations
    }

}
