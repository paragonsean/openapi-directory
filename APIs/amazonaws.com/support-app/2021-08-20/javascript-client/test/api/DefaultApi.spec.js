/**
 * AWS Support App
 * <p><fullname>Amazon Web Services Support App in Slack</fullname> <p>You can use the Amazon Web Services Support App in Slack API to manage your support cases in Slack for your Amazon Web Services account. After you configure your Slack workspace and channel with the Amazon Web Services Support App, you can perform the following tasks directly in your Slack channel:</p> <ul> <li> <p>Create, search, update, and resolve your support cases</p> </li> <li> <p>Request service quota increases for your account</p> </li> <li> <p>Invite Amazon Web Services Support agents to your channel so that you can chat directly about your support cases</p> </li> </ul> <p>For more information about how to perform these actions in Slack, see the following documentation in the <i>Amazon Web Services Support User Guide</i>:</p> <ul> <li> <p> <a href=\"https://docs.aws.amazon.com/awssupport/latest/user/aws-support-app-for-slack.html\">Amazon Web Services Support App in Slack</a> </p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/awssupport/latest/user/joining-a-live-chat-session.html\">Joining a live chat session with Amazon Web Services Support</a> </p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/awssupport/latest/user/service-quota-increase.html\">Requesting service quota increases</a> </p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/awssupport/latest/user/support-app-commands.html\">Amazon Web Services Support App commands in Slack</a> </p> </li> </ul> <p>You can also use the Amazon Web Services Management Console instead of the Amazon Web Services Support App API to manage your Slack configurations. For more information, see <a href=\"https://docs.aws.amazon.com/awssupport/latest/user/authorize-slack-workspace.html\">Authorize a Slack workspace to enable the Amazon Web Services Support App</a>.</p> <note> <ul> <li> <p>You must have a Business or Enterprise Support plan to use the Amazon Web Services Support App API. </p> </li> <li> <p>For more information about the Amazon Web Services Support App endpoints, see the <a href=\"https://docs.aws.amazon.com/general/latest/gr/awssupport.html#awssupport_app_region\">Amazon Web Services Support App in Slack endpoints</a> in the <i>Amazon Web Services General Reference</i>.</p> </li> </ul> </note></p>
 *
 * The version of the OpenAPI document: 2021-08-20
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.AwsSupportApp);
  }
}(this, function(expect, AwsSupportApp) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new AwsSupportApp.DefaultApi();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('DefaultApi', function() {
    describe('createSlackChannelConfiguration', function() {
      it('should call createSlackChannelConfiguration successfully', function(done) {
        //uncomment below and update the code to test createSlackChannelConfiguration
        //instance.createSlackChannelConfiguration(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deleteAccountAlias', function() {
      it('should call deleteAccountAlias successfully', function(done) {
        //uncomment below and update the code to test deleteAccountAlias
        //instance.deleteAccountAlias(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deleteSlackChannelConfiguration', function() {
      it('should call deleteSlackChannelConfiguration successfully', function(done) {
        //uncomment below and update the code to test deleteSlackChannelConfiguration
        //instance.deleteSlackChannelConfiguration(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deleteSlackWorkspaceConfiguration', function() {
      it('should call deleteSlackWorkspaceConfiguration successfully', function(done) {
        //uncomment below and update the code to test deleteSlackWorkspaceConfiguration
        //instance.deleteSlackWorkspaceConfiguration(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getAccountAlias', function() {
      it('should call getAccountAlias successfully', function(done) {
        //uncomment below and update the code to test getAccountAlias
        //instance.getAccountAlias(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('listSlackChannelConfigurations', function() {
      it('should call listSlackChannelConfigurations successfully', function(done) {
        //uncomment below and update the code to test listSlackChannelConfigurations
        //instance.listSlackChannelConfigurations(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('listSlackWorkspaceConfigurations', function() {
      it('should call listSlackWorkspaceConfigurations successfully', function(done) {
        //uncomment below and update the code to test listSlackWorkspaceConfigurations
        //instance.listSlackWorkspaceConfigurations(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('putAccountAlias', function() {
      it('should call putAccountAlias successfully', function(done) {
        //uncomment below and update the code to test putAccountAlias
        //instance.putAccountAlias(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('registerSlackWorkspaceForOrganization', function() {
      it('should call registerSlackWorkspaceForOrganization successfully', function(done) {
        //uncomment below and update the code to test registerSlackWorkspaceForOrganization
        //instance.registerSlackWorkspaceForOrganization(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('updateSlackChannelConfiguration', function() {
      it('should call updateSlackChannelConfiguration successfully', function(done) {
        //uncomment below and update the code to test updateSlackChannelConfiguration
        //instance.updateSlackChannelConfiguration(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
  });

}));
