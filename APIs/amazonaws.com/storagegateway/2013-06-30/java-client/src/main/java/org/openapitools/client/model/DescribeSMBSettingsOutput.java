/*
 * AWS Storage Gateway
 * <fullname>Storage Gateway Service</fullname> <p>Storage Gateway is the service that connects an on-premises software appliance with cloud-based storage to provide seamless and secure integration between an organization's on-premises IT environment and the Amazon Web Services storage infrastructure. The service enables you to securely upload data to the Amazon Web Services Cloud for cost effective backup and rapid disaster recovery.</p> <p>Use the following links to get started using the <i>Storage Gateway Service API Reference</i>:</p> <ul> <li> <p> <a href=\"https://docs.aws.amazon.com/storagegateway/latest/userguide/AWSStorageGatewayAPI.html#AWSStorageGatewayHTTPRequestsHeaders\">Storage Gateway required request headers</a>: Describes the required headers that you must send with every POST request to Storage Gateway.</p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/storagegateway/latest/userguide/AWSStorageGatewayAPI.html#AWSStorageGatewaySigningRequests\">Signing requests</a>: Storage Gateway requires that you authenticate every request you send; this topic describes how sign such a request.</p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/storagegateway/latest/userguide/AWSStorageGatewayAPI.html#APIErrorResponses\">Error responses</a>: Provides reference information about Storage Gateway errors.</p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/storagegateway/latest/APIReference/API_Operations.html\">Operations in Storage Gateway</a>: Contains detailed descriptions of all Storage Gateway operations, their request parameters, response elements, possible errors, and examples of requests and responses.</p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/general/latest/gr/sg.html\">Storage Gateway endpoints and quotas</a>: Provides a list of each Amazon Web Services Region and the endpoints available for use with Storage Gateway.</p> </li> </ul> <note> <p>Storage Gateway resource IDs are in uppercase. When you use these resource IDs with the Amazon EC2 API, EC2 expects resource IDs in lowercase. You must change your resource ID to lowercase to use it with the EC2 API. For example, in Storage Gateway the ID for a volume might be <code>vol-AA22BB012345DAF670</code>. When you use this ID with the EC2 API, you must change it to <code>vol-aa22bb012345daf670</code>. Otherwise, the EC2 API might not behave as expected.</p> </note> <important> <p>IDs for Storage Gateway volumes and Amazon EBS snapshots created from gateway volumes are changing to a longer format. Starting in December 2016, all new volumes and snapshots will be created with a 17-character string. Starting in April 2016, you will be able to use these longer IDs so you can test your systems with the new format. For more information, see <a href=\"http://aws.amazon.com/ec2/faqs/#longer-ids\">Longer EC2 and EBS resource IDs</a>.</p> <p>For example, a volume Amazon Resource Name (ARN) with the longer volume ID format looks like the following:</p> <p> <code>arn:aws:storagegateway:us-west-2:111122223333:gateway/sgw-12A3456B/volume/vol-1122AABBCCDDEEFFG</code>.</p> <p>A snapshot ID with the longer ID format looks like the following: <code>snap-78e226633445566ee</code>.</p> <p>For more information, see <a href=\"http://forums.aws.amazon.com/ann.jspa?annID=3557\">Announcement: Heads-up â€“ Longer Storage Gateway volume and snapshot IDs coming in 2016</a>.</p> </important>
 *
 * The version of the OpenAPI document: 2013-06-30
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;
import org.openapitools.client.model.ActiveDirectoryStatus;
import org.openapitools.client.model.DescribeSMBSettingsOutputSMBLocalGroups;
import org.openapitools.client.model.SMBSecurityStrategy;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * DescribeSMBSettingsOutput
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T12:10:02.944831-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class DescribeSMBSettingsOutput {
  public static final String SERIALIZED_NAME_GATEWAY_A_R_N = "GatewayARN";
  @SerializedName(SERIALIZED_NAME_GATEWAY_A_R_N)
  private String gatewayARN;

  public static final String SERIALIZED_NAME_DOMAIN_NAME = "DomainName";
  @SerializedName(SERIALIZED_NAME_DOMAIN_NAME)
  private String domainName;

  public static final String SERIALIZED_NAME_ACTIVE_DIRECTORY_STATUS = "ActiveDirectoryStatus";
  @SerializedName(SERIALIZED_NAME_ACTIVE_DIRECTORY_STATUS)
  private ActiveDirectoryStatus activeDirectoryStatus;

  public static final String SERIALIZED_NAME_SM_B_GUEST_PASSWORD_SET = "SMBGuestPasswordSet";
  @SerializedName(SERIALIZED_NAME_SM_B_GUEST_PASSWORD_SET)
  private Boolean smBGuestPasswordSet;

  public static final String SERIALIZED_NAME_SM_B_SECURITY_STRATEGY = "SMBSecurityStrategy";
  @SerializedName(SERIALIZED_NAME_SM_B_SECURITY_STRATEGY)
  private SMBSecurityStrategy smBSecurityStrategy;

  public static final String SERIALIZED_NAME_FILE_SHARES_VISIBLE = "FileSharesVisible";
  @SerializedName(SERIALIZED_NAME_FILE_SHARES_VISIBLE)
  private Boolean fileSharesVisible;

  public static final String SERIALIZED_NAME_SM_B_LOCAL_GROUPS = "SMBLocalGroups";
  @SerializedName(SERIALIZED_NAME_SM_B_LOCAL_GROUPS)
  private DescribeSMBSettingsOutputSMBLocalGroups smBLocalGroups;

  public DescribeSMBSettingsOutput() {
  }

  public DescribeSMBSettingsOutput gatewayARN(String gatewayARN) {
    this.gatewayARN = gatewayARN;
    return this;
  }

  /**
   * The Amazon Resource Name (ARN) of the gateway. Use the &lt;a&gt;ListGateways&lt;/a&gt; operation to return a list of gateways for your account and Amazon Web Services Region.
   * @return gatewayARN
   */
  @javax.annotation.Nullable
  public String getGatewayARN() {
    return gatewayARN;
  }

  public void setGatewayARN(String gatewayARN) {
    this.gatewayARN = gatewayARN;
  }


  public DescribeSMBSettingsOutput domainName(String domainName) {
    this.domainName = domainName;
    return this;
  }

  /**
   * Get domainName
   * @return domainName
   */
  @javax.annotation.Nullable
  public String getDomainName() {
    return domainName;
  }

  public void setDomainName(String domainName) {
    this.domainName = domainName;
  }


  public DescribeSMBSettingsOutput activeDirectoryStatus(ActiveDirectoryStatus activeDirectoryStatus) {
    this.activeDirectoryStatus = activeDirectoryStatus;
    return this;
  }

  /**
   * Get activeDirectoryStatus
   * @return activeDirectoryStatus
   */
  @javax.annotation.Nullable
  public ActiveDirectoryStatus getActiveDirectoryStatus() {
    return activeDirectoryStatus;
  }

  public void setActiveDirectoryStatus(ActiveDirectoryStatus activeDirectoryStatus) {
    this.activeDirectoryStatus = activeDirectoryStatus;
  }


  public DescribeSMBSettingsOutput smBGuestPasswordSet(Boolean smBGuestPasswordSet) {
    this.smBGuestPasswordSet = smBGuestPasswordSet;
    return this;
  }

  /**
   * Get smBGuestPasswordSet
   * @return smBGuestPasswordSet
   */
  @javax.annotation.Nullable
  public Boolean getSmBGuestPasswordSet() {
    return smBGuestPasswordSet;
  }

  public void setSmBGuestPasswordSet(Boolean smBGuestPasswordSet) {
    this.smBGuestPasswordSet = smBGuestPasswordSet;
  }


  public DescribeSMBSettingsOutput smBSecurityStrategy(SMBSecurityStrategy smBSecurityStrategy) {
    this.smBSecurityStrategy = smBSecurityStrategy;
    return this;
  }

  /**
   * Get smBSecurityStrategy
   * @return smBSecurityStrategy
   */
  @javax.annotation.Nullable
  public SMBSecurityStrategy getSmBSecurityStrategy() {
    return smBSecurityStrategy;
  }

  public void setSmBSecurityStrategy(SMBSecurityStrategy smBSecurityStrategy) {
    this.smBSecurityStrategy = smBSecurityStrategy;
  }


  public DescribeSMBSettingsOutput fileSharesVisible(Boolean fileSharesVisible) {
    this.fileSharesVisible = fileSharesVisible;
    return this;
  }

  /**
   * Get fileSharesVisible
   * @return fileSharesVisible
   */
  @javax.annotation.Nullable
  public Boolean getFileSharesVisible() {
    return fileSharesVisible;
  }

  public void setFileSharesVisible(Boolean fileSharesVisible) {
    this.fileSharesVisible = fileSharesVisible;
  }


  public DescribeSMBSettingsOutput smBLocalGroups(DescribeSMBSettingsOutputSMBLocalGroups smBLocalGroups) {
    this.smBLocalGroups = smBLocalGroups;
    return this;
  }

  /**
   * Get smBLocalGroups
   * @return smBLocalGroups
   */
  @javax.annotation.Nullable
  public DescribeSMBSettingsOutputSMBLocalGroups getSmBLocalGroups() {
    return smBLocalGroups;
  }

  public void setSmBLocalGroups(DescribeSMBSettingsOutputSMBLocalGroups smBLocalGroups) {
    this.smBLocalGroups = smBLocalGroups;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    DescribeSMBSettingsOutput describeSMBSettingsOutput = (DescribeSMBSettingsOutput) o;
    return Objects.equals(this.gatewayARN, describeSMBSettingsOutput.gatewayARN) &&
        Objects.equals(this.domainName, describeSMBSettingsOutput.domainName) &&
        Objects.equals(this.activeDirectoryStatus, describeSMBSettingsOutput.activeDirectoryStatus) &&
        Objects.equals(this.smBGuestPasswordSet, describeSMBSettingsOutput.smBGuestPasswordSet) &&
        Objects.equals(this.smBSecurityStrategy, describeSMBSettingsOutput.smBSecurityStrategy) &&
        Objects.equals(this.fileSharesVisible, describeSMBSettingsOutput.fileSharesVisible) &&
        Objects.equals(this.smBLocalGroups, describeSMBSettingsOutput.smBLocalGroups);
  }

  @Override
  public int hashCode() {
    return Objects.hash(gatewayARN, domainName, activeDirectoryStatus, smBGuestPasswordSet, smBSecurityStrategy, fileSharesVisible, smBLocalGroups);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class DescribeSMBSettingsOutput {\n");
    sb.append("    gatewayARN: ").append(toIndentedString(gatewayARN)).append("\n");
    sb.append("    domainName: ").append(toIndentedString(domainName)).append("\n");
    sb.append("    activeDirectoryStatus: ").append(toIndentedString(activeDirectoryStatus)).append("\n");
    sb.append("    smBGuestPasswordSet: ").append(toIndentedString(smBGuestPasswordSet)).append("\n");
    sb.append("    smBSecurityStrategy: ").append(toIndentedString(smBSecurityStrategy)).append("\n");
    sb.append("    fileSharesVisible: ").append(toIndentedString(fileSharesVisible)).append("\n");
    sb.append("    smBLocalGroups: ").append(toIndentedString(smBLocalGroups)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("GatewayARN");
    openapiFields.add("DomainName");
    openapiFields.add("ActiveDirectoryStatus");
    openapiFields.add("SMBGuestPasswordSet");
    openapiFields.add("SMBSecurityStrategy");
    openapiFields.add("FileSharesVisible");
    openapiFields.add("SMBLocalGroups");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to DescribeSMBSettingsOutput
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!DescribeSMBSettingsOutput.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in DescribeSMBSettingsOutput is not found in the empty JSON string", DescribeSMBSettingsOutput.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!DescribeSMBSettingsOutput.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `DescribeSMBSettingsOutput` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("GatewayARN") != null && !jsonObj.get("GatewayARN").isJsonNull()) && !jsonObj.get("GatewayARN").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `GatewayARN` to be a primitive type in the JSON string but got `%s`", jsonObj.get("GatewayARN").toString()));
      }
      // validate the optional field `DomainName`
      if (jsonObj.get("DomainName") != null && !jsonObj.get("DomainName").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("DomainName"));
      }
      // validate the optional field `ActiveDirectoryStatus`
      if (jsonObj.get("ActiveDirectoryStatus") != null && !jsonObj.get("ActiveDirectoryStatus").isJsonNull()) {
        ActiveDirectoryStatus.validateJsonElement(jsonObj.get("ActiveDirectoryStatus"));
      }
      // validate the optional field `SMBGuestPasswordSet`
      if (jsonObj.get("SMBGuestPasswordSet") != null && !jsonObj.get("SMBGuestPasswordSet").isJsonNull()) {
        Boolean.validateJsonElement(jsonObj.get("SMBGuestPasswordSet"));
      }
      // validate the optional field `SMBSecurityStrategy`
      if (jsonObj.get("SMBSecurityStrategy") != null && !jsonObj.get("SMBSecurityStrategy").isJsonNull()) {
        SMBSecurityStrategy.validateJsonElement(jsonObj.get("SMBSecurityStrategy"));
      }
      // validate the optional field `FileSharesVisible`
      if (jsonObj.get("FileSharesVisible") != null && !jsonObj.get("FileSharesVisible").isJsonNull()) {
        Boolean.validateJsonElement(jsonObj.get("FileSharesVisible"));
      }
      // validate the optional field `SMBLocalGroups`
      if (jsonObj.get("SMBLocalGroups") != null && !jsonObj.get("SMBLocalGroups").isJsonNull()) {
        DescribeSMBSettingsOutputSMBLocalGroups.validateJsonElement(jsonObj.get("SMBLocalGroups"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!DescribeSMBSettingsOutput.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'DescribeSMBSettingsOutput' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<DescribeSMBSettingsOutput> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(DescribeSMBSettingsOutput.class));

       return (TypeAdapter<T>) new TypeAdapter<DescribeSMBSettingsOutput>() {
           @Override
           public void write(JsonWriter out, DescribeSMBSettingsOutput value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public DescribeSMBSettingsOutput read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of DescribeSMBSettingsOutput given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of DescribeSMBSettingsOutput
   * @throws IOException if the JSON string is invalid with respect to DescribeSMBSettingsOutput
   */
  public static DescribeSMBSettingsOutput fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, DescribeSMBSettingsOutput.class);
  }

  /**
   * Convert an instance of DescribeSMBSettingsOutput to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

