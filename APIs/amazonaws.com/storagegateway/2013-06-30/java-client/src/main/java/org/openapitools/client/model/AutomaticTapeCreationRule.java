/*
 * AWS Storage Gateway
 * <fullname>Storage Gateway Service</fullname> <p>Storage Gateway is the service that connects an on-premises software appliance with cloud-based storage to provide seamless and secure integration between an organization's on-premises IT environment and the Amazon Web Services storage infrastructure. The service enables you to securely upload data to the Amazon Web Services Cloud for cost effective backup and rapid disaster recovery.</p> <p>Use the following links to get started using the <i>Storage Gateway Service API Reference</i>:</p> <ul> <li> <p> <a href=\"https://docs.aws.amazon.com/storagegateway/latest/userguide/AWSStorageGatewayAPI.html#AWSStorageGatewayHTTPRequestsHeaders\">Storage Gateway required request headers</a>: Describes the required headers that you must send with every POST request to Storage Gateway.</p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/storagegateway/latest/userguide/AWSStorageGatewayAPI.html#AWSStorageGatewaySigningRequests\">Signing requests</a>: Storage Gateway requires that you authenticate every request you send; this topic describes how sign such a request.</p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/storagegateway/latest/userguide/AWSStorageGatewayAPI.html#APIErrorResponses\">Error responses</a>: Provides reference information about Storage Gateway errors.</p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/storagegateway/latest/APIReference/API_Operations.html\">Operations in Storage Gateway</a>: Contains detailed descriptions of all Storage Gateway operations, their request parameters, response elements, possible errors, and examples of requests and responses.</p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/general/latest/gr/sg.html\">Storage Gateway endpoints and quotas</a>: Provides a list of each Amazon Web Services Region and the endpoints available for use with Storage Gateway.</p> </li> </ul> <note> <p>Storage Gateway resource IDs are in uppercase. When you use these resource IDs with the Amazon EC2 API, EC2 expects resource IDs in lowercase. You must change your resource ID to lowercase to use it with the EC2 API. For example, in Storage Gateway the ID for a volume might be <code>vol-AA22BB012345DAF670</code>. When you use this ID with the EC2 API, you must change it to <code>vol-aa22bb012345daf670</code>. Otherwise, the EC2 API might not behave as expected.</p> </note> <important> <p>IDs for Storage Gateway volumes and Amazon EBS snapshots created from gateway volumes are changing to a longer format. Starting in December 2016, all new volumes and snapshots will be created with a 17-character string. Starting in April 2016, you will be able to use these longer IDs so you can test your systems with the new format. For more information, see <a href=\"http://aws.amazon.com/ec2/faqs/#longer-ids\">Longer EC2 and EBS resource IDs</a>.</p> <p>For example, a volume Amazon Resource Name (ARN) with the longer volume ID format looks like the following:</p> <p> <code>arn:aws:storagegateway:us-west-2:111122223333:gateway/sgw-12A3456B/volume/vol-1122AABBCCDDEEFFG</code>.</p> <p>A snapshot ID with the longer ID format looks like the following: <code>snap-78e226633445566ee</code>.</p> <p>For more information, see <a href=\"http://forums.aws.amazon.com/ann.jspa?annID=3557\">Announcement: Heads-up â€“ Longer Storage Gateway volume and snapshot IDs coming in 2016</a>.</p> </important>
 *
 * The version of the OpenAPI document: 2013-06-30
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * An automatic tape creation policy consists of automatic tape creation rules where each rule defines when and how to create new tapes. For more information about automatic tape creation, see &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/storagegateway/latest/userguide/GettingStartedCreateTapes.html#CreateTapesAutomatically\&quot;&gt;Creating Tapes Automatically&lt;/a&gt;.
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T12:10:02.944831-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class AutomaticTapeCreationRule {
  public static final String SERIALIZED_NAME_TAPE_BARCODE_PREFIX = "TapeBarcodePrefix";
  @SerializedName(SERIALIZED_NAME_TAPE_BARCODE_PREFIX)
  private String tapeBarcodePrefix;

  public static final String SERIALIZED_NAME_POOL_ID = "PoolId";
  @SerializedName(SERIALIZED_NAME_POOL_ID)
  private String poolId;

  public static final String SERIALIZED_NAME_TAPE_SIZE_IN_BYTES = "TapeSizeInBytes";
  @SerializedName(SERIALIZED_NAME_TAPE_SIZE_IN_BYTES)
  private Integer tapeSizeInBytes;

  public static final String SERIALIZED_NAME_MINIMUM_NUM_TAPES = "MinimumNumTapes";
  @SerializedName(SERIALIZED_NAME_MINIMUM_NUM_TAPES)
  private Integer minimumNumTapes;

  public static final String SERIALIZED_NAME_WORM = "Worm";
  @SerializedName(SERIALIZED_NAME_WORM)
  private Boolean worm;

  public AutomaticTapeCreationRule() {
  }

  public AutomaticTapeCreationRule tapeBarcodePrefix(String tapeBarcodePrefix) {
    this.tapeBarcodePrefix = tapeBarcodePrefix;
    return this;
  }

  /**
   * Get tapeBarcodePrefix
   * @return tapeBarcodePrefix
   */
  @javax.annotation.Nonnull
  public String getTapeBarcodePrefix() {
    return tapeBarcodePrefix;
  }

  public void setTapeBarcodePrefix(String tapeBarcodePrefix) {
    this.tapeBarcodePrefix = tapeBarcodePrefix;
  }


  public AutomaticTapeCreationRule poolId(String poolId) {
    this.poolId = poolId;
    return this;
  }

  /**
   * Get poolId
   * @return poolId
   */
  @javax.annotation.Nonnull
  public String getPoolId() {
    return poolId;
  }

  public void setPoolId(String poolId) {
    this.poolId = poolId;
  }


  public AutomaticTapeCreationRule tapeSizeInBytes(Integer tapeSizeInBytes) {
    this.tapeSizeInBytes = tapeSizeInBytes;
    return this;
  }

  /**
   * Get tapeSizeInBytes
   * @return tapeSizeInBytes
   */
  @javax.annotation.Nonnull
  public Integer getTapeSizeInBytes() {
    return tapeSizeInBytes;
  }

  public void setTapeSizeInBytes(Integer tapeSizeInBytes) {
    this.tapeSizeInBytes = tapeSizeInBytes;
  }


  public AutomaticTapeCreationRule minimumNumTapes(Integer minimumNumTapes) {
    this.minimumNumTapes = minimumNumTapes;
    return this;
  }

  /**
   * Get minimumNumTapes
   * @return minimumNumTapes
   */
  @javax.annotation.Nonnull
  public Integer getMinimumNumTapes() {
    return minimumNumTapes;
  }

  public void setMinimumNumTapes(Integer minimumNumTapes) {
    this.minimumNumTapes = minimumNumTapes;
  }


  public AutomaticTapeCreationRule worm(Boolean worm) {
    this.worm = worm;
    return this;
  }

  /**
   * Get worm
   * @return worm
   */
  @javax.annotation.Nullable
  public Boolean getWorm() {
    return worm;
  }

  public void setWorm(Boolean worm) {
    this.worm = worm;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    AutomaticTapeCreationRule automaticTapeCreationRule = (AutomaticTapeCreationRule) o;
    return Objects.equals(this.tapeBarcodePrefix, automaticTapeCreationRule.tapeBarcodePrefix) &&
        Objects.equals(this.poolId, automaticTapeCreationRule.poolId) &&
        Objects.equals(this.tapeSizeInBytes, automaticTapeCreationRule.tapeSizeInBytes) &&
        Objects.equals(this.minimumNumTapes, automaticTapeCreationRule.minimumNumTapes) &&
        Objects.equals(this.worm, automaticTapeCreationRule.worm);
  }

  @Override
  public int hashCode() {
    return Objects.hash(tapeBarcodePrefix, poolId, tapeSizeInBytes, minimumNumTapes, worm);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class AutomaticTapeCreationRule {\n");
    sb.append("    tapeBarcodePrefix: ").append(toIndentedString(tapeBarcodePrefix)).append("\n");
    sb.append("    poolId: ").append(toIndentedString(poolId)).append("\n");
    sb.append("    tapeSizeInBytes: ").append(toIndentedString(tapeSizeInBytes)).append("\n");
    sb.append("    minimumNumTapes: ").append(toIndentedString(minimumNumTapes)).append("\n");
    sb.append("    worm: ").append(toIndentedString(worm)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("TapeBarcodePrefix");
    openapiFields.add("PoolId");
    openapiFields.add("TapeSizeInBytes");
    openapiFields.add("MinimumNumTapes");
    openapiFields.add("Worm");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
    openapiRequiredFields.add("TapeBarcodePrefix");
    openapiRequiredFields.add("PoolId");
    openapiRequiredFields.add("TapeSizeInBytes");
    openapiRequiredFields.add("MinimumNumTapes");
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to AutomaticTapeCreationRule
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!AutomaticTapeCreationRule.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in AutomaticTapeCreationRule is not found in the empty JSON string", AutomaticTapeCreationRule.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!AutomaticTapeCreationRule.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `AutomaticTapeCreationRule` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }

      // check to make sure all required properties/fields are present in the JSON string
      for (String requiredField : AutomaticTapeCreationRule.openapiRequiredFields) {
        if (jsonElement.getAsJsonObject().get(requiredField) == null) {
          throw new IllegalArgumentException(String.format("The required field `%s` is not found in the JSON string: %s", requiredField, jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // validate the required field `TapeBarcodePrefix`
      String.validateJsonElement(jsonObj.get("TapeBarcodePrefix"));
      // validate the required field `PoolId`
      String.validateJsonElement(jsonObj.get("PoolId"));
      // validate the required field `TapeSizeInBytes`
      Integer.validateJsonElement(jsonObj.get("TapeSizeInBytes"));
      // validate the required field `MinimumNumTapes`
      Integer.validateJsonElement(jsonObj.get("MinimumNumTapes"));
      // validate the optional field `Worm`
      if (jsonObj.get("Worm") != null && !jsonObj.get("Worm").isJsonNull()) {
        Boolean.validateJsonElement(jsonObj.get("Worm"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!AutomaticTapeCreationRule.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'AutomaticTapeCreationRule' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<AutomaticTapeCreationRule> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(AutomaticTapeCreationRule.class));

       return (TypeAdapter<T>) new TypeAdapter<AutomaticTapeCreationRule>() {
           @Override
           public void write(JsonWriter out, AutomaticTapeCreationRule value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public AutomaticTapeCreationRule read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of AutomaticTapeCreationRule given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of AutomaticTapeCreationRule
   * @throws IOException if the JSON string is invalid with respect to AutomaticTapeCreationRule
   */
  public static AutomaticTapeCreationRule fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, AutomaticTapeCreationRule.class);
  }

  /**
   * Convert an instance of AutomaticTapeCreationRule to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

