/*
 * AWS Storage Gateway
 * <fullname>Storage Gateway Service</fullname> <p>Storage Gateway is the service that connects an on-premises software appliance with cloud-based storage to provide seamless and secure integration between an organization's on-premises IT environment and the Amazon Web Services storage infrastructure. The service enables you to securely upload data to the Amazon Web Services Cloud for cost effective backup and rapid disaster recovery.</p> <p>Use the following links to get started using the <i>Storage Gateway Service API Reference</i>:</p> <ul> <li> <p> <a href=\"https://docs.aws.amazon.com/storagegateway/latest/userguide/AWSStorageGatewayAPI.html#AWSStorageGatewayHTTPRequestsHeaders\">Storage Gateway required request headers</a>: Describes the required headers that you must send with every POST request to Storage Gateway.</p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/storagegateway/latest/userguide/AWSStorageGatewayAPI.html#AWSStorageGatewaySigningRequests\">Signing requests</a>: Storage Gateway requires that you authenticate every request you send; this topic describes how sign such a request.</p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/storagegateway/latest/userguide/AWSStorageGatewayAPI.html#APIErrorResponses\">Error responses</a>: Provides reference information about Storage Gateway errors.</p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/storagegateway/latest/APIReference/API_Operations.html\">Operations in Storage Gateway</a>: Contains detailed descriptions of all Storage Gateway operations, their request parameters, response elements, possible errors, and examples of requests and responses.</p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/general/latest/gr/sg.html\">Storage Gateway endpoints and quotas</a>: Provides a list of each Amazon Web Services Region and the endpoints available for use with Storage Gateway.</p> </li> </ul> <note> <p>Storage Gateway resource IDs are in uppercase. When you use these resource IDs with the Amazon EC2 API, EC2 expects resource IDs in lowercase. You must change your resource ID to lowercase to use it with the EC2 API. For example, in Storage Gateway the ID for a volume might be <code>vol-AA22BB012345DAF670</code>. When you use this ID with the EC2 API, you must change it to <code>vol-aa22bb012345daf670</code>. Otherwise, the EC2 API might not behave as expected.</p> </note> <important> <p>IDs for Storage Gateway volumes and Amazon EBS snapshots created from gateway volumes are changing to a longer format. Starting in December 2016, all new volumes and snapshots will be created with a 17-character string. Starting in April 2016, you will be able to use these longer IDs so you can test your systems with the new format. For more information, see <a href=\"http://aws.amazon.com/ec2/faqs/#longer-ids\">Longer EC2 and EBS resource IDs</a>.</p> <p>For example, a volume Amazon Resource Name (ARN) with the longer volume ID format looks like the following:</p> <p> <code>arn:aws:storagegateway:us-west-2:111122223333:gateway/sgw-12A3456B/volume/vol-1122AABBCCDDEEFFG</code>.</p> <p>A snapshot ID with the longer ID format looks like the following: <code>snap-78e226633445566ee</code>.</p> <p>For more information, see <a href=\"http://forums.aws.amazon.com/ann.jspa?annID=3557\">Announcement: Heads-up â€“ Longer Storage Gateway volume and snapshot IDs coming in 2016</a>.</p> </important>
 *
 * The version of the OpenAPI document: 2013-06-30
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.AssociateFileSystemInputEndpointNetworkConfiguration;
import org.openapitools.client.model.CacheAttributes;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * AssociateFileSystemInput
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T12:10:02.944831-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class AssociateFileSystemInput {
  public static final String SERIALIZED_NAME_USER_NAME = "UserName";
  @SerializedName(SERIALIZED_NAME_USER_NAME)
  private String userName;

  public static final String SERIALIZED_NAME_PASSWORD = "Password";
  @SerializedName(SERIALIZED_NAME_PASSWORD)
  private String password;

  public static final String SERIALIZED_NAME_CLIENT_TOKEN = "ClientToken";
  @SerializedName(SERIALIZED_NAME_CLIENT_TOKEN)
  private String clientToken;

  public static final String SERIALIZED_NAME_GATEWAY_A_R_N = "GatewayARN";
  @SerializedName(SERIALIZED_NAME_GATEWAY_A_R_N)
  private String gatewayARN;

  public static final String SERIALIZED_NAME_LOCATION_A_R_N = "LocationARN";
  @SerializedName(SERIALIZED_NAME_LOCATION_A_R_N)
  private String locationARN;

  public static final String SERIALIZED_NAME_TAGS = "Tags";
  @SerializedName(SERIALIZED_NAME_TAGS)
  private List tags;

  public static final String SERIALIZED_NAME_AUDIT_DESTINATION_A_R_N = "AuditDestinationARN";
  @SerializedName(SERIALIZED_NAME_AUDIT_DESTINATION_A_R_N)
  private String auditDestinationARN;

  public static final String SERIALIZED_NAME_CACHE_ATTRIBUTES = "CacheAttributes";
  @SerializedName(SERIALIZED_NAME_CACHE_ATTRIBUTES)
  private CacheAttributes cacheAttributes;

  public static final String SERIALIZED_NAME_ENDPOINT_NETWORK_CONFIGURATION = "EndpointNetworkConfiguration";
  @SerializedName(SERIALIZED_NAME_ENDPOINT_NETWORK_CONFIGURATION)
  private AssociateFileSystemInputEndpointNetworkConfiguration endpointNetworkConfiguration;

  public AssociateFileSystemInput() {
  }

  public AssociateFileSystemInput userName(String userName) {
    this.userName = userName;
    return this;
  }

  /**
   * Get userName
   * @return userName
   */
  @javax.annotation.Nonnull
  public String getUserName() {
    return userName;
  }

  public void setUserName(String userName) {
    this.userName = userName;
  }


  public AssociateFileSystemInput password(String password) {
    this.password = password;
    return this;
  }

  /**
   * Get password
   * @return password
   */
  @javax.annotation.Nonnull
  public String getPassword() {
    return password;
  }

  public void setPassword(String password) {
    this.password = password;
  }


  public AssociateFileSystemInput clientToken(String clientToken) {
    this.clientToken = clientToken;
    return this;
  }

  /**
   * Get clientToken
   * @return clientToken
   */
  @javax.annotation.Nonnull
  public String getClientToken() {
    return clientToken;
  }

  public void setClientToken(String clientToken) {
    this.clientToken = clientToken;
  }


  public AssociateFileSystemInput gatewayARN(String gatewayARN) {
    this.gatewayARN = gatewayARN;
    return this;
  }

  /**
   * The Amazon Resource Name (ARN) of the gateway. Use the &lt;a&gt;ListGateways&lt;/a&gt; operation to return a list of gateways for your account and Amazon Web Services Region.
   * @return gatewayARN
   */
  @javax.annotation.Nonnull
  public String getGatewayARN() {
    return gatewayARN;
  }

  public void setGatewayARN(String gatewayARN) {
    this.gatewayARN = gatewayARN;
  }


  public AssociateFileSystemInput locationARN(String locationARN) {
    this.locationARN = locationARN;
    return this;
  }

  /**
   * Get locationARN
   * @return locationARN
   */
  @javax.annotation.Nonnull
  public String getLocationARN() {
    return locationARN;
  }

  public void setLocationARN(String locationARN) {
    this.locationARN = locationARN;
  }


  public AssociateFileSystemInput tags(List tags) {
    this.tags = tags;
    return this;
  }

  /**
   * Get tags
   * @return tags
   */
  @javax.annotation.Nullable
  public List getTags() {
    return tags;
  }

  public void setTags(List tags) {
    this.tags = tags;
  }


  public AssociateFileSystemInput auditDestinationARN(String auditDestinationARN) {
    this.auditDestinationARN = auditDestinationARN;
    return this;
  }

  /**
   * Get auditDestinationARN
   * @return auditDestinationARN
   */
  @javax.annotation.Nullable
  public String getAuditDestinationARN() {
    return auditDestinationARN;
  }

  public void setAuditDestinationARN(String auditDestinationARN) {
    this.auditDestinationARN = auditDestinationARN;
  }


  public AssociateFileSystemInput cacheAttributes(CacheAttributes cacheAttributes) {
    this.cacheAttributes = cacheAttributes;
    return this;
  }

  /**
   * Get cacheAttributes
   * @return cacheAttributes
   */
  @javax.annotation.Nullable
  public CacheAttributes getCacheAttributes() {
    return cacheAttributes;
  }

  public void setCacheAttributes(CacheAttributes cacheAttributes) {
    this.cacheAttributes = cacheAttributes;
  }


  public AssociateFileSystemInput endpointNetworkConfiguration(AssociateFileSystemInputEndpointNetworkConfiguration endpointNetworkConfiguration) {
    this.endpointNetworkConfiguration = endpointNetworkConfiguration;
    return this;
  }

  /**
   * Get endpointNetworkConfiguration
   * @return endpointNetworkConfiguration
   */
  @javax.annotation.Nullable
  public AssociateFileSystemInputEndpointNetworkConfiguration getEndpointNetworkConfiguration() {
    return endpointNetworkConfiguration;
  }

  public void setEndpointNetworkConfiguration(AssociateFileSystemInputEndpointNetworkConfiguration endpointNetworkConfiguration) {
    this.endpointNetworkConfiguration = endpointNetworkConfiguration;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    AssociateFileSystemInput associateFileSystemInput = (AssociateFileSystemInput) o;
    return Objects.equals(this.userName, associateFileSystemInput.userName) &&
        Objects.equals(this.password, associateFileSystemInput.password) &&
        Objects.equals(this.clientToken, associateFileSystemInput.clientToken) &&
        Objects.equals(this.gatewayARN, associateFileSystemInput.gatewayARN) &&
        Objects.equals(this.locationARN, associateFileSystemInput.locationARN) &&
        Objects.equals(this.tags, associateFileSystemInput.tags) &&
        Objects.equals(this.auditDestinationARN, associateFileSystemInput.auditDestinationARN) &&
        Objects.equals(this.cacheAttributes, associateFileSystemInput.cacheAttributes) &&
        Objects.equals(this.endpointNetworkConfiguration, associateFileSystemInput.endpointNetworkConfiguration);
  }

  @Override
  public int hashCode() {
    return Objects.hash(userName, password, clientToken, gatewayARN, locationARN, tags, auditDestinationARN, cacheAttributes, endpointNetworkConfiguration);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class AssociateFileSystemInput {\n");
    sb.append("    userName: ").append(toIndentedString(userName)).append("\n");
    sb.append("    password: ").append(toIndentedString(password)).append("\n");
    sb.append("    clientToken: ").append(toIndentedString(clientToken)).append("\n");
    sb.append("    gatewayARN: ").append(toIndentedString(gatewayARN)).append("\n");
    sb.append("    locationARN: ").append(toIndentedString(locationARN)).append("\n");
    sb.append("    tags: ").append(toIndentedString(tags)).append("\n");
    sb.append("    auditDestinationARN: ").append(toIndentedString(auditDestinationARN)).append("\n");
    sb.append("    cacheAttributes: ").append(toIndentedString(cacheAttributes)).append("\n");
    sb.append("    endpointNetworkConfiguration: ").append(toIndentedString(endpointNetworkConfiguration)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("UserName");
    openapiFields.add("Password");
    openapiFields.add("ClientToken");
    openapiFields.add("GatewayARN");
    openapiFields.add("LocationARN");
    openapiFields.add("Tags");
    openapiFields.add("AuditDestinationARN");
    openapiFields.add("CacheAttributes");
    openapiFields.add("EndpointNetworkConfiguration");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
    openapiRequiredFields.add("UserName");
    openapiRequiredFields.add("Password");
    openapiRequiredFields.add("ClientToken");
    openapiRequiredFields.add("GatewayARN");
    openapiRequiredFields.add("LocationARN");
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to AssociateFileSystemInput
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!AssociateFileSystemInput.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in AssociateFileSystemInput is not found in the empty JSON string", AssociateFileSystemInput.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!AssociateFileSystemInput.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `AssociateFileSystemInput` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }

      // check to make sure all required properties/fields are present in the JSON string
      for (String requiredField : AssociateFileSystemInput.openapiRequiredFields) {
        if (jsonElement.getAsJsonObject().get(requiredField) == null) {
          throw new IllegalArgumentException(String.format("The required field `%s` is not found in the JSON string: %s", requiredField, jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // validate the required field `UserName`
      String.validateJsonElement(jsonObj.get("UserName"));
      // validate the required field `Password`
      String.validateJsonElement(jsonObj.get("Password"));
      // validate the required field `ClientToken`
      String.validateJsonElement(jsonObj.get("ClientToken"));
      if (!jsonObj.get("GatewayARN").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `GatewayARN` to be a primitive type in the JSON string but got `%s`", jsonObj.get("GatewayARN").toString()));
      }
      // validate the required field `LocationARN`
      String.validateJsonElement(jsonObj.get("LocationARN"));
      // validate the optional field `Tags`
      if (jsonObj.get("Tags") != null && !jsonObj.get("Tags").isJsonNull()) {
        List.validateJsonElement(jsonObj.get("Tags"));
      }
      // validate the optional field `AuditDestinationARN`
      if (jsonObj.get("AuditDestinationARN") != null && !jsonObj.get("AuditDestinationARN").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("AuditDestinationARN"));
      }
      // validate the optional field `CacheAttributes`
      if (jsonObj.get("CacheAttributes") != null && !jsonObj.get("CacheAttributes").isJsonNull()) {
        CacheAttributes.validateJsonElement(jsonObj.get("CacheAttributes"));
      }
      // validate the optional field `EndpointNetworkConfiguration`
      if (jsonObj.get("EndpointNetworkConfiguration") != null && !jsonObj.get("EndpointNetworkConfiguration").isJsonNull()) {
        AssociateFileSystemInputEndpointNetworkConfiguration.validateJsonElement(jsonObj.get("EndpointNetworkConfiguration"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!AssociateFileSystemInput.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'AssociateFileSystemInput' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<AssociateFileSystemInput> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(AssociateFileSystemInput.class));

       return (TypeAdapter<T>) new TypeAdapter<AssociateFileSystemInput>() {
           @Override
           public void write(JsonWriter out, AssociateFileSystemInput value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public AssociateFileSystemInput read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of AssociateFileSystemInput given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of AssociateFileSystemInput
   * @throws IOException if the JSON string is invalid with respect to AssociateFileSystemInput
   */
  public static AssociateFileSystemInput fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, AssociateFileSystemInput.class);
  }

  /**
   * Convert an instance of AssociateFileSystemInput to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

