/*
 * AWS Storage Gateway
 * <fullname>Storage Gateway Service</fullname> <p>Storage Gateway is the service that connects an on-premises software appliance with cloud-based storage to provide seamless and secure integration between an organization's on-premises IT environment and the Amazon Web Services storage infrastructure. The service enables you to securely upload data to the Amazon Web Services Cloud for cost effective backup and rapid disaster recovery.</p> <p>Use the following links to get started using the <i>Storage Gateway Service API Reference</i>:</p> <ul> <li> <p> <a href=\"https://docs.aws.amazon.com/storagegateway/latest/userguide/AWSStorageGatewayAPI.html#AWSStorageGatewayHTTPRequestsHeaders\">Storage Gateway required request headers</a>: Describes the required headers that you must send with every POST request to Storage Gateway.</p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/storagegateway/latest/userguide/AWSStorageGatewayAPI.html#AWSStorageGatewaySigningRequests\">Signing requests</a>: Storage Gateway requires that you authenticate every request you send; this topic describes how sign such a request.</p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/storagegateway/latest/userguide/AWSStorageGatewayAPI.html#APIErrorResponses\">Error responses</a>: Provides reference information about Storage Gateway errors.</p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/storagegateway/latest/APIReference/API_Operations.html\">Operations in Storage Gateway</a>: Contains detailed descriptions of all Storage Gateway operations, their request parameters, response elements, possible errors, and examples of requests and responses.</p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/general/latest/gr/sg.html\">Storage Gateway endpoints and quotas</a>: Provides a list of each Amazon Web Services Region and the endpoints available for use with Storage Gateway.</p> </li> </ul> <note> <p>Storage Gateway resource IDs are in uppercase. When you use these resource IDs with the Amazon EC2 API, EC2 expects resource IDs in lowercase. You must change your resource ID to lowercase to use it with the EC2 API. For example, in Storage Gateway the ID for a volume might be <code>vol-AA22BB012345DAF670</code>. When you use this ID with the EC2 API, you must change it to <code>vol-aa22bb012345daf670</code>. Otherwise, the EC2 API might not behave as expected.</p> </note> <important> <p>IDs for Storage Gateway volumes and Amazon EBS snapshots created from gateway volumes are changing to a longer format. Starting in December 2016, all new volumes and snapshots will be created with a 17-character string. Starting in April 2016, you will be able to use these longer IDs so you can test your systems with the new format. For more information, see <a href=\"http://aws.amazon.com/ec2/faqs/#longer-ids\">Longer EC2 and EBS resource IDs</a>.</p> <p>For example, a volume Amazon Resource Name (ARN) with the longer volume ID format looks like the following:</p> <p> <code>arn:aws:storagegateway:us-west-2:111122223333:gateway/sgw-12A3456B/volume/vol-1122AABBCCDDEEFFG</code>.</p> <p>A snapshot ID with the longer ID format looks like the following: <code>snap-78e226633445566ee</code>.</p> <p>For more information, see <a href=\"http://forums.aws.amazon.com/ann.jspa?annID=3557\">Announcement: Heads-up â€“ Longer Storage Gateway volume and snapshot IDs coming in 2016</a>.</p> </important>
 *
 * The version of the OpenAPI document: 2013-06-30
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.GatewayCapacity;
import org.openapitools.client.model.HostEnvironment;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * A JSON object containing the following fields:
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T12:10:02.944831-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class DescribeGatewayInformationOutput {
  public static final String SERIALIZED_NAME_GATEWAY_A_R_N = "GatewayARN";
  @SerializedName(SERIALIZED_NAME_GATEWAY_A_R_N)
  private String gatewayARN;

  public static final String SERIALIZED_NAME_GATEWAY_ID = "GatewayId";
  @SerializedName(SERIALIZED_NAME_GATEWAY_ID)
  private String gatewayId;

  public static final String SERIALIZED_NAME_GATEWAY_NAME = "GatewayName";
  @SerializedName(SERIALIZED_NAME_GATEWAY_NAME)
  private String gatewayName;

  public static final String SERIALIZED_NAME_GATEWAY_TIMEZONE = "GatewayTimezone";
  @SerializedName(SERIALIZED_NAME_GATEWAY_TIMEZONE)
  private String gatewayTimezone;

  public static final String SERIALIZED_NAME_GATEWAY_STATE = "GatewayState";
  @SerializedName(SERIALIZED_NAME_GATEWAY_STATE)
  private String gatewayState;

  public static final String SERIALIZED_NAME_GATEWAY_NETWORK_INTERFACES = "GatewayNetworkInterfaces";
  @SerializedName(SERIALIZED_NAME_GATEWAY_NETWORK_INTERFACES)
  private List gatewayNetworkInterfaces;

  public static final String SERIALIZED_NAME_GATEWAY_TYPE = "GatewayType";
  @SerializedName(SERIALIZED_NAME_GATEWAY_TYPE)
  private String gatewayType;

  public static final String SERIALIZED_NAME_NEXT_UPDATE_AVAILABILITY_DATE = "NextUpdateAvailabilityDate";
  @SerializedName(SERIALIZED_NAME_NEXT_UPDATE_AVAILABILITY_DATE)
  private String nextUpdateAvailabilityDate;

  public static final String SERIALIZED_NAME_LAST_SOFTWARE_UPDATE = "LastSoftwareUpdate";
  @SerializedName(SERIALIZED_NAME_LAST_SOFTWARE_UPDATE)
  private String lastSoftwareUpdate;

  public static final String SERIALIZED_NAME_EC2_INSTANCE_ID = "Ec2InstanceId";
  @SerializedName(SERIALIZED_NAME_EC2_INSTANCE_ID)
  private String ec2InstanceId;

  public static final String SERIALIZED_NAME_EC2_INSTANCE_REGION = "Ec2InstanceRegion";
  @SerializedName(SERIALIZED_NAME_EC2_INSTANCE_REGION)
  private String ec2InstanceRegion;

  public static final String SERIALIZED_NAME_TAGS = "Tags";
  @SerializedName(SERIALIZED_NAME_TAGS)
  private List tags;

  public static final String SERIALIZED_NAME_VP_C_ENDPOINT = "VPCEndpoint";
  @SerializedName(SERIALIZED_NAME_VP_C_ENDPOINT)
  private String vpCEndpoint;

  public static final String SERIALIZED_NAME_CLOUD_WATCH_LOG_GROUP_A_R_N = "CloudWatchLogGroupARN";
  @SerializedName(SERIALIZED_NAME_CLOUD_WATCH_LOG_GROUP_A_R_N)
  private String cloudWatchLogGroupARN;

  public static final String SERIALIZED_NAME_HOST_ENVIRONMENT = "HostEnvironment";
  @SerializedName(SERIALIZED_NAME_HOST_ENVIRONMENT)
  private HostEnvironment hostEnvironment;

  public static final String SERIALIZED_NAME_ENDPOINT_TYPE = "EndpointType";
  @SerializedName(SERIALIZED_NAME_ENDPOINT_TYPE)
  private String endpointType;

  public static final String SERIALIZED_NAME_SOFTWARE_UPDATES_END_DATE = "SoftwareUpdatesEndDate";
  @SerializedName(SERIALIZED_NAME_SOFTWARE_UPDATES_END_DATE)
  private String softwareUpdatesEndDate;

  public static final String SERIALIZED_NAME_DEPRECATION_DATE = "DeprecationDate";
  @SerializedName(SERIALIZED_NAME_DEPRECATION_DATE)
  private String deprecationDate;

  public static final String SERIALIZED_NAME_GATEWAY_CAPACITY = "GatewayCapacity";
  @SerializedName(SERIALIZED_NAME_GATEWAY_CAPACITY)
  private GatewayCapacity gatewayCapacity;

  public static final String SERIALIZED_NAME_SUPPORTED_GATEWAY_CAPACITIES = "SupportedGatewayCapacities";
  @SerializedName(SERIALIZED_NAME_SUPPORTED_GATEWAY_CAPACITIES)
  private List supportedGatewayCapacities;

  public static final String SERIALIZED_NAME_HOST_ENVIRONMENT_ID = "HostEnvironmentId";
  @SerializedName(SERIALIZED_NAME_HOST_ENVIRONMENT_ID)
  private String hostEnvironmentId;

  public DescribeGatewayInformationOutput() {
  }

  public DescribeGatewayInformationOutput gatewayARN(String gatewayARN) {
    this.gatewayARN = gatewayARN;
    return this;
  }

  /**
   * The Amazon Resource Name (ARN) of the gateway. Use the &lt;a&gt;ListGateways&lt;/a&gt; operation to return a list of gateways for your account and Amazon Web Services Region.
   * @return gatewayARN
   */
  @javax.annotation.Nullable
  public String getGatewayARN() {
    return gatewayARN;
  }

  public void setGatewayARN(String gatewayARN) {
    this.gatewayARN = gatewayARN;
  }


  public DescribeGatewayInformationOutput gatewayId(String gatewayId) {
    this.gatewayId = gatewayId;
    return this;
  }

  /**
   * Get gatewayId
   * @return gatewayId
   */
  @javax.annotation.Nullable
  public String getGatewayId() {
    return gatewayId;
  }

  public void setGatewayId(String gatewayId) {
    this.gatewayId = gatewayId;
  }


  public DescribeGatewayInformationOutput gatewayName(String gatewayName) {
    this.gatewayName = gatewayName;
    return this;
  }

  /**
   * Get gatewayName
   * @return gatewayName
   */
  @javax.annotation.Nullable
  public String getGatewayName() {
    return gatewayName;
  }

  public void setGatewayName(String gatewayName) {
    this.gatewayName = gatewayName;
  }


  public DescribeGatewayInformationOutput gatewayTimezone(String gatewayTimezone) {
    this.gatewayTimezone = gatewayTimezone;
    return this;
  }

  /**
   * Get gatewayTimezone
   * @return gatewayTimezone
   */
  @javax.annotation.Nullable
  public String getGatewayTimezone() {
    return gatewayTimezone;
  }

  public void setGatewayTimezone(String gatewayTimezone) {
    this.gatewayTimezone = gatewayTimezone;
  }


  public DescribeGatewayInformationOutput gatewayState(String gatewayState) {
    this.gatewayState = gatewayState;
    return this;
  }

  /**
   * Get gatewayState
   * @return gatewayState
   */
  @javax.annotation.Nullable
  public String getGatewayState() {
    return gatewayState;
  }

  public void setGatewayState(String gatewayState) {
    this.gatewayState = gatewayState;
  }


  public DescribeGatewayInformationOutput gatewayNetworkInterfaces(List gatewayNetworkInterfaces) {
    this.gatewayNetworkInterfaces = gatewayNetworkInterfaces;
    return this;
  }

  /**
   * Get gatewayNetworkInterfaces
   * @return gatewayNetworkInterfaces
   */
  @javax.annotation.Nullable
  public List getGatewayNetworkInterfaces() {
    return gatewayNetworkInterfaces;
  }

  public void setGatewayNetworkInterfaces(List gatewayNetworkInterfaces) {
    this.gatewayNetworkInterfaces = gatewayNetworkInterfaces;
  }


  public DescribeGatewayInformationOutput gatewayType(String gatewayType) {
    this.gatewayType = gatewayType;
    return this;
  }

  /**
   * Get gatewayType
   * @return gatewayType
   */
  @javax.annotation.Nullable
  public String getGatewayType() {
    return gatewayType;
  }

  public void setGatewayType(String gatewayType) {
    this.gatewayType = gatewayType;
  }


  public DescribeGatewayInformationOutput nextUpdateAvailabilityDate(String nextUpdateAvailabilityDate) {
    this.nextUpdateAvailabilityDate = nextUpdateAvailabilityDate;
    return this;
  }

  /**
   * Get nextUpdateAvailabilityDate
   * @return nextUpdateAvailabilityDate
   */
  @javax.annotation.Nullable
  public String getNextUpdateAvailabilityDate() {
    return nextUpdateAvailabilityDate;
  }

  public void setNextUpdateAvailabilityDate(String nextUpdateAvailabilityDate) {
    this.nextUpdateAvailabilityDate = nextUpdateAvailabilityDate;
  }


  public DescribeGatewayInformationOutput lastSoftwareUpdate(String lastSoftwareUpdate) {
    this.lastSoftwareUpdate = lastSoftwareUpdate;
    return this;
  }

  /**
   * Get lastSoftwareUpdate
   * @return lastSoftwareUpdate
   */
  @javax.annotation.Nullable
  public String getLastSoftwareUpdate() {
    return lastSoftwareUpdate;
  }

  public void setLastSoftwareUpdate(String lastSoftwareUpdate) {
    this.lastSoftwareUpdate = lastSoftwareUpdate;
  }


  public DescribeGatewayInformationOutput ec2InstanceId(String ec2InstanceId) {
    this.ec2InstanceId = ec2InstanceId;
    return this;
  }

  /**
   * Get ec2InstanceId
   * @return ec2InstanceId
   */
  @javax.annotation.Nullable
  public String getEc2InstanceId() {
    return ec2InstanceId;
  }

  public void setEc2InstanceId(String ec2InstanceId) {
    this.ec2InstanceId = ec2InstanceId;
  }


  public DescribeGatewayInformationOutput ec2InstanceRegion(String ec2InstanceRegion) {
    this.ec2InstanceRegion = ec2InstanceRegion;
    return this;
  }

  /**
   * Get ec2InstanceRegion
   * @return ec2InstanceRegion
   */
  @javax.annotation.Nullable
  public String getEc2InstanceRegion() {
    return ec2InstanceRegion;
  }

  public void setEc2InstanceRegion(String ec2InstanceRegion) {
    this.ec2InstanceRegion = ec2InstanceRegion;
  }


  public DescribeGatewayInformationOutput tags(List tags) {
    this.tags = tags;
    return this;
  }

  /**
   * Get tags
   * @return tags
   */
  @javax.annotation.Nullable
  public List getTags() {
    return tags;
  }

  public void setTags(List tags) {
    this.tags = tags;
  }


  public DescribeGatewayInformationOutput vpCEndpoint(String vpCEndpoint) {
    this.vpCEndpoint = vpCEndpoint;
    return this;
  }

  /**
   * Get vpCEndpoint
   * @return vpCEndpoint
   */
  @javax.annotation.Nullable
  public String getVpCEndpoint() {
    return vpCEndpoint;
  }

  public void setVpCEndpoint(String vpCEndpoint) {
    this.vpCEndpoint = vpCEndpoint;
  }


  public DescribeGatewayInformationOutput cloudWatchLogGroupARN(String cloudWatchLogGroupARN) {
    this.cloudWatchLogGroupARN = cloudWatchLogGroupARN;
    return this;
  }

  /**
   * Get cloudWatchLogGroupARN
   * @return cloudWatchLogGroupARN
   */
  @javax.annotation.Nullable
  public String getCloudWatchLogGroupARN() {
    return cloudWatchLogGroupARN;
  }

  public void setCloudWatchLogGroupARN(String cloudWatchLogGroupARN) {
    this.cloudWatchLogGroupARN = cloudWatchLogGroupARN;
  }


  public DescribeGatewayInformationOutput hostEnvironment(HostEnvironment hostEnvironment) {
    this.hostEnvironment = hostEnvironment;
    return this;
  }

  /**
   * Get hostEnvironment
   * @return hostEnvironment
   */
  @javax.annotation.Nullable
  public HostEnvironment getHostEnvironment() {
    return hostEnvironment;
  }

  public void setHostEnvironment(HostEnvironment hostEnvironment) {
    this.hostEnvironment = hostEnvironment;
  }


  public DescribeGatewayInformationOutput endpointType(String endpointType) {
    this.endpointType = endpointType;
    return this;
  }

  /**
   * Get endpointType
   * @return endpointType
   */
  @javax.annotation.Nullable
  public String getEndpointType() {
    return endpointType;
  }

  public void setEndpointType(String endpointType) {
    this.endpointType = endpointType;
  }


  public DescribeGatewayInformationOutput softwareUpdatesEndDate(String softwareUpdatesEndDate) {
    this.softwareUpdatesEndDate = softwareUpdatesEndDate;
    return this;
  }

  /**
   * Get softwareUpdatesEndDate
   * @return softwareUpdatesEndDate
   */
  @javax.annotation.Nullable
  public String getSoftwareUpdatesEndDate() {
    return softwareUpdatesEndDate;
  }

  public void setSoftwareUpdatesEndDate(String softwareUpdatesEndDate) {
    this.softwareUpdatesEndDate = softwareUpdatesEndDate;
  }


  public DescribeGatewayInformationOutput deprecationDate(String deprecationDate) {
    this.deprecationDate = deprecationDate;
    return this;
  }

  /**
   * Get deprecationDate
   * @return deprecationDate
   */
  @javax.annotation.Nullable
  public String getDeprecationDate() {
    return deprecationDate;
  }

  public void setDeprecationDate(String deprecationDate) {
    this.deprecationDate = deprecationDate;
  }


  public DescribeGatewayInformationOutput gatewayCapacity(GatewayCapacity gatewayCapacity) {
    this.gatewayCapacity = gatewayCapacity;
    return this;
  }

  /**
   * Get gatewayCapacity
   * @return gatewayCapacity
   */
  @javax.annotation.Nullable
  public GatewayCapacity getGatewayCapacity() {
    return gatewayCapacity;
  }

  public void setGatewayCapacity(GatewayCapacity gatewayCapacity) {
    this.gatewayCapacity = gatewayCapacity;
  }


  public DescribeGatewayInformationOutput supportedGatewayCapacities(List supportedGatewayCapacities) {
    this.supportedGatewayCapacities = supportedGatewayCapacities;
    return this;
  }

  /**
   * Get supportedGatewayCapacities
   * @return supportedGatewayCapacities
   */
  @javax.annotation.Nullable
  public List getSupportedGatewayCapacities() {
    return supportedGatewayCapacities;
  }

  public void setSupportedGatewayCapacities(List supportedGatewayCapacities) {
    this.supportedGatewayCapacities = supportedGatewayCapacities;
  }


  public DescribeGatewayInformationOutput hostEnvironmentId(String hostEnvironmentId) {
    this.hostEnvironmentId = hostEnvironmentId;
    return this;
  }

  /**
   * Get hostEnvironmentId
   * @return hostEnvironmentId
   */
  @javax.annotation.Nullable
  public String getHostEnvironmentId() {
    return hostEnvironmentId;
  }

  public void setHostEnvironmentId(String hostEnvironmentId) {
    this.hostEnvironmentId = hostEnvironmentId;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    DescribeGatewayInformationOutput describeGatewayInformationOutput = (DescribeGatewayInformationOutput) o;
    return Objects.equals(this.gatewayARN, describeGatewayInformationOutput.gatewayARN) &&
        Objects.equals(this.gatewayId, describeGatewayInformationOutput.gatewayId) &&
        Objects.equals(this.gatewayName, describeGatewayInformationOutput.gatewayName) &&
        Objects.equals(this.gatewayTimezone, describeGatewayInformationOutput.gatewayTimezone) &&
        Objects.equals(this.gatewayState, describeGatewayInformationOutput.gatewayState) &&
        Objects.equals(this.gatewayNetworkInterfaces, describeGatewayInformationOutput.gatewayNetworkInterfaces) &&
        Objects.equals(this.gatewayType, describeGatewayInformationOutput.gatewayType) &&
        Objects.equals(this.nextUpdateAvailabilityDate, describeGatewayInformationOutput.nextUpdateAvailabilityDate) &&
        Objects.equals(this.lastSoftwareUpdate, describeGatewayInformationOutput.lastSoftwareUpdate) &&
        Objects.equals(this.ec2InstanceId, describeGatewayInformationOutput.ec2InstanceId) &&
        Objects.equals(this.ec2InstanceRegion, describeGatewayInformationOutput.ec2InstanceRegion) &&
        Objects.equals(this.tags, describeGatewayInformationOutput.tags) &&
        Objects.equals(this.vpCEndpoint, describeGatewayInformationOutput.vpCEndpoint) &&
        Objects.equals(this.cloudWatchLogGroupARN, describeGatewayInformationOutput.cloudWatchLogGroupARN) &&
        Objects.equals(this.hostEnvironment, describeGatewayInformationOutput.hostEnvironment) &&
        Objects.equals(this.endpointType, describeGatewayInformationOutput.endpointType) &&
        Objects.equals(this.softwareUpdatesEndDate, describeGatewayInformationOutput.softwareUpdatesEndDate) &&
        Objects.equals(this.deprecationDate, describeGatewayInformationOutput.deprecationDate) &&
        Objects.equals(this.gatewayCapacity, describeGatewayInformationOutput.gatewayCapacity) &&
        Objects.equals(this.supportedGatewayCapacities, describeGatewayInformationOutput.supportedGatewayCapacities) &&
        Objects.equals(this.hostEnvironmentId, describeGatewayInformationOutput.hostEnvironmentId);
  }

  @Override
  public int hashCode() {
    return Objects.hash(gatewayARN, gatewayId, gatewayName, gatewayTimezone, gatewayState, gatewayNetworkInterfaces, gatewayType, nextUpdateAvailabilityDate, lastSoftwareUpdate, ec2InstanceId, ec2InstanceRegion, tags, vpCEndpoint, cloudWatchLogGroupARN, hostEnvironment, endpointType, softwareUpdatesEndDate, deprecationDate, gatewayCapacity, supportedGatewayCapacities, hostEnvironmentId);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class DescribeGatewayInformationOutput {\n");
    sb.append("    gatewayARN: ").append(toIndentedString(gatewayARN)).append("\n");
    sb.append("    gatewayId: ").append(toIndentedString(gatewayId)).append("\n");
    sb.append("    gatewayName: ").append(toIndentedString(gatewayName)).append("\n");
    sb.append("    gatewayTimezone: ").append(toIndentedString(gatewayTimezone)).append("\n");
    sb.append("    gatewayState: ").append(toIndentedString(gatewayState)).append("\n");
    sb.append("    gatewayNetworkInterfaces: ").append(toIndentedString(gatewayNetworkInterfaces)).append("\n");
    sb.append("    gatewayType: ").append(toIndentedString(gatewayType)).append("\n");
    sb.append("    nextUpdateAvailabilityDate: ").append(toIndentedString(nextUpdateAvailabilityDate)).append("\n");
    sb.append("    lastSoftwareUpdate: ").append(toIndentedString(lastSoftwareUpdate)).append("\n");
    sb.append("    ec2InstanceId: ").append(toIndentedString(ec2InstanceId)).append("\n");
    sb.append("    ec2InstanceRegion: ").append(toIndentedString(ec2InstanceRegion)).append("\n");
    sb.append("    tags: ").append(toIndentedString(tags)).append("\n");
    sb.append("    vpCEndpoint: ").append(toIndentedString(vpCEndpoint)).append("\n");
    sb.append("    cloudWatchLogGroupARN: ").append(toIndentedString(cloudWatchLogGroupARN)).append("\n");
    sb.append("    hostEnvironment: ").append(toIndentedString(hostEnvironment)).append("\n");
    sb.append("    endpointType: ").append(toIndentedString(endpointType)).append("\n");
    sb.append("    softwareUpdatesEndDate: ").append(toIndentedString(softwareUpdatesEndDate)).append("\n");
    sb.append("    deprecationDate: ").append(toIndentedString(deprecationDate)).append("\n");
    sb.append("    gatewayCapacity: ").append(toIndentedString(gatewayCapacity)).append("\n");
    sb.append("    supportedGatewayCapacities: ").append(toIndentedString(supportedGatewayCapacities)).append("\n");
    sb.append("    hostEnvironmentId: ").append(toIndentedString(hostEnvironmentId)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("GatewayARN");
    openapiFields.add("GatewayId");
    openapiFields.add("GatewayName");
    openapiFields.add("GatewayTimezone");
    openapiFields.add("GatewayState");
    openapiFields.add("GatewayNetworkInterfaces");
    openapiFields.add("GatewayType");
    openapiFields.add("NextUpdateAvailabilityDate");
    openapiFields.add("LastSoftwareUpdate");
    openapiFields.add("Ec2InstanceId");
    openapiFields.add("Ec2InstanceRegion");
    openapiFields.add("Tags");
    openapiFields.add("VPCEndpoint");
    openapiFields.add("CloudWatchLogGroupARN");
    openapiFields.add("HostEnvironment");
    openapiFields.add("EndpointType");
    openapiFields.add("SoftwareUpdatesEndDate");
    openapiFields.add("DeprecationDate");
    openapiFields.add("GatewayCapacity");
    openapiFields.add("SupportedGatewayCapacities");
    openapiFields.add("HostEnvironmentId");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to DescribeGatewayInformationOutput
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!DescribeGatewayInformationOutput.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in DescribeGatewayInformationOutput is not found in the empty JSON string", DescribeGatewayInformationOutput.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!DescribeGatewayInformationOutput.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `DescribeGatewayInformationOutput` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("GatewayARN") != null && !jsonObj.get("GatewayARN").isJsonNull()) && !jsonObj.get("GatewayARN").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `GatewayARN` to be a primitive type in the JSON string but got `%s`", jsonObj.get("GatewayARN").toString()));
      }
      // validate the optional field `GatewayId`
      if (jsonObj.get("GatewayId") != null && !jsonObj.get("GatewayId").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("GatewayId"));
      }
      // validate the optional field `GatewayName`
      if (jsonObj.get("GatewayName") != null && !jsonObj.get("GatewayName").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("GatewayName"));
      }
      // validate the optional field `GatewayTimezone`
      if (jsonObj.get("GatewayTimezone") != null && !jsonObj.get("GatewayTimezone").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("GatewayTimezone"));
      }
      // validate the optional field `GatewayState`
      if (jsonObj.get("GatewayState") != null && !jsonObj.get("GatewayState").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("GatewayState"));
      }
      // validate the optional field `GatewayNetworkInterfaces`
      if (jsonObj.get("GatewayNetworkInterfaces") != null && !jsonObj.get("GatewayNetworkInterfaces").isJsonNull()) {
        List.validateJsonElement(jsonObj.get("GatewayNetworkInterfaces"));
      }
      // validate the optional field `GatewayType`
      if (jsonObj.get("GatewayType") != null && !jsonObj.get("GatewayType").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("GatewayType"));
      }
      // validate the optional field `NextUpdateAvailabilityDate`
      if (jsonObj.get("NextUpdateAvailabilityDate") != null && !jsonObj.get("NextUpdateAvailabilityDate").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("NextUpdateAvailabilityDate"));
      }
      // validate the optional field `LastSoftwareUpdate`
      if (jsonObj.get("LastSoftwareUpdate") != null && !jsonObj.get("LastSoftwareUpdate").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("LastSoftwareUpdate"));
      }
      // validate the optional field `Ec2InstanceId`
      if (jsonObj.get("Ec2InstanceId") != null && !jsonObj.get("Ec2InstanceId").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("Ec2InstanceId"));
      }
      // validate the optional field `Ec2InstanceRegion`
      if (jsonObj.get("Ec2InstanceRegion") != null && !jsonObj.get("Ec2InstanceRegion").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("Ec2InstanceRegion"));
      }
      // validate the optional field `Tags`
      if (jsonObj.get("Tags") != null && !jsonObj.get("Tags").isJsonNull()) {
        List.validateJsonElement(jsonObj.get("Tags"));
      }
      // validate the optional field `VPCEndpoint`
      if (jsonObj.get("VPCEndpoint") != null && !jsonObj.get("VPCEndpoint").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("VPCEndpoint"));
      }
      // validate the optional field `CloudWatchLogGroupARN`
      if (jsonObj.get("CloudWatchLogGroupARN") != null && !jsonObj.get("CloudWatchLogGroupARN").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("CloudWatchLogGroupARN"));
      }
      // validate the optional field `HostEnvironment`
      if (jsonObj.get("HostEnvironment") != null && !jsonObj.get("HostEnvironment").isJsonNull()) {
        HostEnvironment.validateJsonElement(jsonObj.get("HostEnvironment"));
      }
      // validate the optional field `EndpointType`
      if (jsonObj.get("EndpointType") != null && !jsonObj.get("EndpointType").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("EndpointType"));
      }
      // validate the optional field `SoftwareUpdatesEndDate`
      if (jsonObj.get("SoftwareUpdatesEndDate") != null && !jsonObj.get("SoftwareUpdatesEndDate").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("SoftwareUpdatesEndDate"));
      }
      // validate the optional field `DeprecationDate`
      if (jsonObj.get("DeprecationDate") != null && !jsonObj.get("DeprecationDate").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("DeprecationDate"));
      }
      // validate the optional field `GatewayCapacity`
      if (jsonObj.get("GatewayCapacity") != null && !jsonObj.get("GatewayCapacity").isJsonNull()) {
        GatewayCapacity.validateJsonElement(jsonObj.get("GatewayCapacity"));
      }
      // validate the optional field `SupportedGatewayCapacities`
      if (jsonObj.get("SupportedGatewayCapacities") != null && !jsonObj.get("SupportedGatewayCapacities").isJsonNull()) {
        List.validateJsonElement(jsonObj.get("SupportedGatewayCapacities"));
      }
      // validate the optional field `HostEnvironmentId`
      if (jsonObj.get("HostEnvironmentId") != null && !jsonObj.get("HostEnvironmentId").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("HostEnvironmentId"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!DescribeGatewayInformationOutput.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'DescribeGatewayInformationOutput' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<DescribeGatewayInformationOutput> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(DescribeGatewayInformationOutput.class));

       return (TypeAdapter<T>) new TypeAdapter<DescribeGatewayInformationOutput>() {
           @Override
           public void write(JsonWriter out, DescribeGatewayInformationOutput value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public DescribeGatewayInformationOutput read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of DescribeGatewayInformationOutput given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of DescribeGatewayInformationOutput
   * @throws IOException if the JSON string is invalid with respect to DescribeGatewayInformationOutput
   */
  public static DescribeGatewayInformationOutput fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, DescribeGatewayInformationOutput.class);
  }

  /**
   * Convert an instance of DescribeGatewayInformationOutput to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

