/**
 * AWS Storage Gateway
 * <fullname>Storage Gateway Service</fullname> <p>Storage Gateway is the service that connects an on-premises software appliance with cloud-based storage to provide seamless and secure integration between an organization's on-premises IT environment and the Amazon Web Services storage infrastructure. The service enables you to securely upload data to the Amazon Web Services Cloud for cost effective backup and rapid disaster recovery.</p> <p>Use the following links to get started using the <i>Storage Gateway Service API Reference</i>:</p> <ul> <li> <p> <a href=\"https://docs.aws.amazon.com/storagegateway/latest/userguide/AWSStorageGatewayAPI.html#AWSStorageGatewayHTTPRequestsHeaders\">Storage Gateway required request headers</a>: Describes the required headers that you must send with every POST request to Storage Gateway.</p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/storagegateway/latest/userguide/AWSStorageGatewayAPI.html#AWSStorageGatewaySigningRequests\">Signing requests</a>: Storage Gateway requires that you authenticate every request you send; this topic describes how sign such a request.</p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/storagegateway/latest/userguide/AWSStorageGatewayAPI.html#APIErrorResponses\">Error responses</a>: Provides reference information about Storage Gateway errors.</p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/storagegateway/latest/APIReference/API_Operations.html\">Operations in Storage Gateway</a>: Contains detailed descriptions of all Storage Gateway operations, their request parameters, response elements, possible errors, and examples of requests and responses.</p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/general/latest/gr/sg.html\">Storage Gateway endpoints and quotas</a>: Provides a list of each Amazon Web Services Region and the endpoints available for use with Storage Gateway.</p> </li> </ul> <note> <p>Storage Gateway resource IDs are in uppercase. When you use these resource IDs with the Amazon EC2 API, EC2 expects resource IDs in lowercase. You must change your resource ID to lowercase to use it with the EC2 API. For example, in Storage Gateway the ID for a volume might be <code>vol-AA22BB012345DAF670</code>. When you use this ID with the EC2 API, you must change it to <code>vol-aa22bb012345daf670</code>. Otherwise, the EC2 API might not behave as expected.</p> </note> <important> <p>IDs for Storage Gateway volumes and Amazon EBS snapshots created from gateway volumes are changing to a longer format. Starting in December 2016, all new volumes and snapshots will be created with a 17-character string. Starting in April 2016, you will be able to use these longer IDs so you can test your systems with the new format. For more information, see <a href=\"http://aws.amazon.com/ec2/faqs/#longer-ids\">Longer EC2 and EBS resource IDs</a>.</p> <p>For example, a volume Amazon Resource Name (ARN) with the longer volume ID format looks like the following:</p> <p> <code>arn:aws:storagegateway:us-west-2:111122223333:gateway/sgw-12A3456B/volume/vol-1122AABBCCDDEEFFG</code>.</p> <p>A snapshot ID with the longer ID format looks like the following: <code>snap-78e226633445566ee</code>.</p> <p>For more information, see <a href=\"http://forums.aws.amazon.com/ann.jspa?annID=3557\">Announcement: Heads-up â€“ Longer Storage Gateway volume and snapshot IDs coming in 2016</a>.</p> </important>
 *
 * The version of the OpenAPI document: 2013-06-30
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIGatewayInfo.h
 *
 * Describes a gateway object.
 */

#ifndef OAIGatewayInfo_H
#define OAIGatewayInfo_H

#include <QJsonObject>

#include "OAIHostEnvironment.h"
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIGatewayInfo : public OAIObject {
public:
    OAIGatewayInfo();
    OAIGatewayInfo(QString json);
    ~OAIGatewayInfo() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getGatewayId() const;
    void setGatewayId(const QString &gateway_id);
    bool is_gateway_id_Set() const;
    bool is_gateway_id_Valid() const;

    QString getGatewayArn() const;
    void setGatewayArn(const QString &gateway_arn);
    bool is_gateway_arn_Set() const;
    bool is_gateway_arn_Valid() const;

    QString getGatewayType() const;
    void setGatewayType(const QString &gateway_type);
    bool is_gateway_type_Set() const;
    bool is_gateway_type_Valid() const;

    QString getGatewayOperationalState() const;
    void setGatewayOperationalState(const QString &gateway_operational_state);
    bool is_gateway_operational_state_Set() const;
    bool is_gateway_operational_state_Valid() const;

    QString getGatewayName() const;
    void setGatewayName(const QString &gateway_name);
    bool is_gateway_name_Set() const;
    bool is_gateway_name_Valid() const;

    QString getEc2InstanceId() const;
    void setEc2InstanceId(const QString &ec2_instance_id);
    bool is_ec2_instance_id_Set() const;
    bool is_ec2_instance_id_Valid() const;

    QString getEc2InstanceRegion() const;
    void setEc2InstanceRegion(const QString &ec2_instance_region);
    bool is_ec2_instance_region_Set() const;
    bool is_ec2_instance_region_Valid() const;

    OAIHostEnvironment getHostEnvironment() const;
    void setHostEnvironment(const OAIHostEnvironment &host_environment);
    bool is_host_environment_Set() const;
    bool is_host_environment_Valid() const;

    QString getHostEnvironmentId() const;
    void setHostEnvironmentId(const QString &host_environment_id);
    bool is_host_environment_id_Set() const;
    bool is_host_environment_id_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_gateway_id;
    bool m_gateway_id_isSet;
    bool m_gateway_id_isValid;

    QString m_gateway_arn;
    bool m_gateway_arn_isSet;
    bool m_gateway_arn_isValid;

    QString m_gateway_type;
    bool m_gateway_type_isSet;
    bool m_gateway_type_isValid;

    QString m_gateway_operational_state;
    bool m_gateway_operational_state_isSet;
    bool m_gateway_operational_state_isValid;

    QString m_gateway_name;
    bool m_gateway_name_isSet;
    bool m_gateway_name_isValid;

    QString m_ec2_instance_id;
    bool m_ec2_instance_id_isSet;
    bool m_ec2_instance_id_isValid;

    QString m_ec2_instance_region;
    bool m_ec2_instance_region_isSet;
    bool m_ec2_instance_region_isValid;

    OAIHostEnvironment m_host_environment;
    bool m_host_environment_isSet;
    bool m_host_environment_isValid;

    QString m_host_environment_id;
    bool m_host_environment_id_isSet;
    bool m_host_environment_id_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIGatewayInfo)

#endif // OAIGatewayInfo_H
