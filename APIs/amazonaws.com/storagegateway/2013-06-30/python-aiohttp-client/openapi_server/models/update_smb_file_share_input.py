# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.case_sensitivity import CaseSensitivity
from openapi_server.models.create_nfs_file_share_input_cache_attributes import CreateNFSFileShareInputCacheAttributes
from openapi_server.models.object_acl import ObjectACL
from openapi_server import util


class UpdateSMBFileShareInput(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, file_share_arn: str=None, kms_encrypted: bool=None, kms_key: str=None, default_storage_class: str=None, object_acl: ObjectACL=None, read_only: bool=None, guess_mime_type_enabled: bool=None, requester_pays: bool=None, smbacl_enabled: bool=None, access_based_enumeration: bool=None, admin_user_list: List=None, valid_user_list: List=None, invalid_user_list: List=None, audit_destination_arn: str=None, case_sensitivity: CaseSensitivity=None, file_share_name: str=None, cache_attributes: CreateNFSFileShareInputCacheAttributes=None, notification_policy: str=None, oplocks_enabled: bool=None):
        """UpdateSMBFileShareInput - a model defined in OpenAPI

        :param file_share_arn: The file_share_arn of this UpdateSMBFileShareInput.
        :param kms_encrypted: The kms_encrypted of this UpdateSMBFileShareInput.
        :param kms_key: The kms_key of this UpdateSMBFileShareInput.
        :param default_storage_class: The default_storage_class of this UpdateSMBFileShareInput.
        :param object_acl: The object_acl of this UpdateSMBFileShareInput.
        :param read_only: The read_only of this UpdateSMBFileShareInput.
        :param guess_mime_type_enabled: The guess_mime_type_enabled of this UpdateSMBFileShareInput.
        :param requester_pays: The requester_pays of this UpdateSMBFileShareInput.
        :param smbacl_enabled: The smbacl_enabled of this UpdateSMBFileShareInput.
        :param access_based_enumeration: The access_based_enumeration of this UpdateSMBFileShareInput.
        :param admin_user_list: The admin_user_list of this UpdateSMBFileShareInput.
        :param valid_user_list: The valid_user_list of this UpdateSMBFileShareInput.
        :param invalid_user_list: The invalid_user_list of this UpdateSMBFileShareInput.
        :param audit_destination_arn: The audit_destination_arn of this UpdateSMBFileShareInput.
        :param case_sensitivity: The case_sensitivity of this UpdateSMBFileShareInput.
        :param file_share_name: The file_share_name of this UpdateSMBFileShareInput.
        :param cache_attributes: The cache_attributes of this UpdateSMBFileShareInput.
        :param notification_policy: The notification_policy of this UpdateSMBFileShareInput.
        :param oplocks_enabled: The oplocks_enabled of this UpdateSMBFileShareInput.
        """
        self.openapi_types = {
            'file_share_arn': str,
            'kms_encrypted': bool,
            'kms_key': str,
            'default_storage_class': str,
            'object_acl': ObjectACL,
            'read_only': bool,
            'guess_mime_type_enabled': bool,
            'requester_pays': bool,
            'smbacl_enabled': bool,
            'access_based_enumeration': bool,
            'admin_user_list': List,
            'valid_user_list': List,
            'invalid_user_list': List,
            'audit_destination_arn': str,
            'case_sensitivity': CaseSensitivity,
            'file_share_name': str,
            'cache_attributes': CreateNFSFileShareInputCacheAttributes,
            'notification_policy': str,
            'oplocks_enabled': bool
        }

        self.attribute_map = {
            'file_share_arn': 'FileShareARN',
            'kms_encrypted': 'KMSEncrypted',
            'kms_key': 'KMSKey',
            'default_storage_class': 'DefaultStorageClass',
            'object_acl': 'ObjectACL',
            'read_only': 'ReadOnly',
            'guess_mime_type_enabled': 'GuessMIMETypeEnabled',
            'requester_pays': 'RequesterPays',
            'smbacl_enabled': 'SMBACLEnabled',
            'access_based_enumeration': 'AccessBasedEnumeration',
            'admin_user_list': 'AdminUserList',
            'valid_user_list': 'ValidUserList',
            'invalid_user_list': 'InvalidUserList',
            'audit_destination_arn': 'AuditDestinationARN',
            'case_sensitivity': 'CaseSensitivity',
            'file_share_name': 'FileShareName',
            'cache_attributes': 'CacheAttributes',
            'notification_policy': 'NotificationPolicy',
            'oplocks_enabled': 'OplocksEnabled'
        }

        self._file_share_arn = file_share_arn
        self._kms_encrypted = kms_encrypted
        self._kms_key = kms_key
        self._default_storage_class = default_storage_class
        self._object_acl = object_acl
        self._read_only = read_only
        self._guess_mime_type_enabled = guess_mime_type_enabled
        self._requester_pays = requester_pays
        self._smbacl_enabled = smbacl_enabled
        self._access_based_enumeration = access_based_enumeration
        self._admin_user_list = admin_user_list
        self._valid_user_list = valid_user_list
        self._invalid_user_list = invalid_user_list
        self._audit_destination_arn = audit_destination_arn
        self._case_sensitivity = case_sensitivity
        self._file_share_name = file_share_name
        self._cache_attributes = cache_attributes
        self._notification_policy = notification_policy
        self._oplocks_enabled = oplocks_enabled

    @classmethod
    def from_dict(cls, dikt: dict) -> 'UpdateSMBFileShareInput':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The UpdateSMBFileShareInput of this UpdateSMBFileShareInput.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def file_share_arn(self):
        """Gets the file_share_arn of this UpdateSMBFileShareInput.


        :return: The file_share_arn of this UpdateSMBFileShareInput.
        :rtype: str
        """
        return self._file_share_arn

    @file_share_arn.setter
    def file_share_arn(self, file_share_arn):
        """Sets the file_share_arn of this UpdateSMBFileShareInput.


        :param file_share_arn: The file_share_arn of this UpdateSMBFileShareInput.
        :type file_share_arn: str
        """
        if file_share_arn is None:
            raise ValueError("Invalid value for `file_share_arn`, must not be `None`")

        self._file_share_arn = file_share_arn

    @property
    def kms_encrypted(self):
        """Gets the kms_encrypted of this UpdateSMBFileShareInput.


        :return: The kms_encrypted of this UpdateSMBFileShareInput.
        :rtype: bool
        """
        return self._kms_encrypted

    @kms_encrypted.setter
    def kms_encrypted(self, kms_encrypted):
        """Sets the kms_encrypted of this UpdateSMBFileShareInput.


        :param kms_encrypted: The kms_encrypted of this UpdateSMBFileShareInput.
        :type kms_encrypted: bool
        """

        self._kms_encrypted = kms_encrypted

    @property
    def kms_key(self):
        """Gets the kms_key of this UpdateSMBFileShareInput.


        :return: The kms_key of this UpdateSMBFileShareInput.
        :rtype: str
        """
        return self._kms_key

    @kms_key.setter
    def kms_key(self, kms_key):
        """Sets the kms_key of this UpdateSMBFileShareInput.


        :param kms_key: The kms_key of this UpdateSMBFileShareInput.
        :type kms_key: str
        """

        self._kms_key = kms_key

    @property
    def default_storage_class(self):
        """Gets the default_storage_class of this UpdateSMBFileShareInput.


        :return: The default_storage_class of this UpdateSMBFileShareInput.
        :rtype: str
        """
        return self._default_storage_class

    @default_storage_class.setter
    def default_storage_class(self, default_storage_class):
        """Sets the default_storage_class of this UpdateSMBFileShareInput.


        :param default_storage_class: The default_storage_class of this UpdateSMBFileShareInput.
        :type default_storage_class: str
        """

        self._default_storage_class = default_storage_class

    @property
    def object_acl(self):
        """Gets the object_acl of this UpdateSMBFileShareInput.


        :return: The object_acl of this UpdateSMBFileShareInput.
        :rtype: ObjectACL
        """
        return self._object_acl

    @object_acl.setter
    def object_acl(self, object_acl):
        """Sets the object_acl of this UpdateSMBFileShareInput.


        :param object_acl: The object_acl of this UpdateSMBFileShareInput.
        :type object_acl: ObjectACL
        """

        self._object_acl = object_acl

    @property
    def read_only(self):
        """Gets the read_only of this UpdateSMBFileShareInput.


        :return: The read_only of this UpdateSMBFileShareInput.
        :rtype: bool
        """
        return self._read_only

    @read_only.setter
    def read_only(self, read_only):
        """Sets the read_only of this UpdateSMBFileShareInput.


        :param read_only: The read_only of this UpdateSMBFileShareInput.
        :type read_only: bool
        """

        self._read_only = read_only

    @property
    def guess_mime_type_enabled(self):
        """Gets the guess_mime_type_enabled of this UpdateSMBFileShareInput.


        :return: The guess_mime_type_enabled of this UpdateSMBFileShareInput.
        :rtype: bool
        """
        return self._guess_mime_type_enabled

    @guess_mime_type_enabled.setter
    def guess_mime_type_enabled(self, guess_mime_type_enabled):
        """Sets the guess_mime_type_enabled of this UpdateSMBFileShareInput.


        :param guess_mime_type_enabled: The guess_mime_type_enabled of this UpdateSMBFileShareInput.
        :type guess_mime_type_enabled: bool
        """

        self._guess_mime_type_enabled = guess_mime_type_enabled

    @property
    def requester_pays(self):
        """Gets the requester_pays of this UpdateSMBFileShareInput.


        :return: The requester_pays of this UpdateSMBFileShareInput.
        :rtype: bool
        """
        return self._requester_pays

    @requester_pays.setter
    def requester_pays(self, requester_pays):
        """Sets the requester_pays of this UpdateSMBFileShareInput.


        :param requester_pays: The requester_pays of this UpdateSMBFileShareInput.
        :type requester_pays: bool
        """

        self._requester_pays = requester_pays

    @property
    def smbacl_enabled(self):
        """Gets the smbacl_enabled of this UpdateSMBFileShareInput.


        :return: The smbacl_enabled of this UpdateSMBFileShareInput.
        :rtype: bool
        """
        return self._smbacl_enabled

    @smbacl_enabled.setter
    def smbacl_enabled(self, smbacl_enabled):
        """Sets the smbacl_enabled of this UpdateSMBFileShareInput.


        :param smbacl_enabled: The smbacl_enabled of this UpdateSMBFileShareInput.
        :type smbacl_enabled: bool
        """

        self._smbacl_enabled = smbacl_enabled

    @property
    def access_based_enumeration(self):
        """Gets the access_based_enumeration of this UpdateSMBFileShareInput.


        :return: The access_based_enumeration of this UpdateSMBFileShareInput.
        :rtype: bool
        """
        return self._access_based_enumeration

    @access_based_enumeration.setter
    def access_based_enumeration(self, access_based_enumeration):
        """Sets the access_based_enumeration of this UpdateSMBFileShareInput.


        :param access_based_enumeration: The access_based_enumeration of this UpdateSMBFileShareInput.
        :type access_based_enumeration: bool
        """

        self._access_based_enumeration = access_based_enumeration

    @property
    def admin_user_list(self):
        """Gets the admin_user_list of this UpdateSMBFileShareInput.


        :return: The admin_user_list of this UpdateSMBFileShareInput.
        :rtype: List
        """
        return self._admin_user_list

    @admin_user_list.setter
    def admin_user_list(self, admin_user_list):
        """Sets the admin_user_list of this UpdateSMBFileShareInput.


        :param admin_user_list: The admin_user_list of this UpdateSMBFileShareInput.
        :type admin_user_list: List
        """

        self._admin_user_list = admin_user_list

    @property
    def valid_user_list(self):
        """Gets the valid_user_list of this UpdateSMBFileShareInput.


        :return: The valid_user_list of this UpdateSMBFileShareInput.
        :rtype: List
        """
        return self._valid_user_list

    @valid_user_list.setter
    def valid_user_list(self, valid_user_list):
        """Sets the valid_user_list of this UpdateSMBFileShareInput.


        :param valid_user_list: The valid_user_list of this UpdateSMBFileShareInput.
        :type valid_user_list: List
        """

        self._valid_user_list = valid_user_list

    @property
    def invalid_user_list(self):
        """Gets the invalid_user_list of this UpdateSMBFileShareInput.


        :return: The invalid_user_list of this UpdateSMBFileShareInput.
        :rtype: List
        """
        return self._invalid_user_list

    @invalid_user_list.setter
    def invalid_user_list(self, invalid_user_list):
        """Sets the invalid_user_list of this UpdateSMBFileShareInput.


        :param invalid_user_list: The invalid_user_list of this UpdateSMBFileShareInput.
        :type invalid_user_list: List
        """

        self._invalid_user_list = invalid_user_list

    @property
    def audit_destination_arn(self):
        """Gets the audit_destination_arn of this UpdateSMBFileShareInput.


        :return: The audit_destination_arn of this UpdateSMBFileShareInput.
        :rtype: str
        """
        return self._audit_destination_arn

    @audit_destination_arn.setter
    def audit_destination_arn(self, audit_destination_arn):
        """Sets the audit_destination_arn of this UpdateSMBFileShareInput.


        :param audit_destination_arn: The audit_destination_arn of this UpdateSMBFileShareInput.
        :type audit_destination_arn: str
        """

        self._audit_destination_arn = audit_destination_arn

    @property
    def case_sensitivity(self):
        """Gets the case_sensitivity of this UpdateSMBFileShareInput.


        :return: The case_sensitivity of this UpdateSMBFileShareInput.
        :rtype: CaseSensitivity
        """
        return self._case_sensitivity

    @case_sensitivity.setter
    def case_sensitivity(self, case_sensitivity):
        """Sets the case_sensitivity of this UpdateSMBFileShareInput.


        :param case_sensitivity: The case_sensitivity of this UpdateSMBFileShareInput.
        :type case_sensitivity: CaseSensitivity
        """

        self._case_sensitivity = case_sensitivity

    @property
    def file_share_name(self):
        """Gets the file_share_name of this UpdateSMBFileShareInput.


        :return: The file_share_name of this UpdateSMBFileShareInput.
        :rtype: str
        """
        return self._file_share_name

    @file_share_name.setter
    def file_share_name(self, file_share_name):
        """Sets the file_share_name of this UpdateSMBFileShareInput.


        :param file_share_name: The file_share_name of this UpdateSMBFileShareInput.
        :type file_share_name: str
        """

        self._file_share_name = file_share_name

    @property
    def cache_attributes(self):
        """Gets the cache_attributes of this UpdateSMBFileShareInput.


        :return: The cache_attributes of this UpdateSMBFileShareInput.
        :rtype: CreateNFSFileShareInputCacheAttributes
        """
        return self._cache_attributes

    @cache_attributes.setter
    def cache_attributes(self, cache_attributes):
        """Sets the cache_attributes of this UpdateSMBFileShareInput.


        :param cache_attributes: The cache_attributes of this UpdateSMBFileShareInput.
        :type cache_attributes: CreateNFSFileShareInputCacheAttributes
        """

        self._cache_attributes = cache_attributes

    @property
    def notification_policy(self):
        """Gets the notification_policy of this UpdateSMBFileShareInput.


        :return: The notification_policy of this UpdateSMBFileShareInput.
        :rtype: str
        """
        return self._notification_policy

    @notification_policy.setter
    def notification_policy(self, notification_policy):
        """Sets the notification_policy of this UpdateSMBFileShareInput.


        :param notification_policy: The notification_policy of this UpdateSMBFileShareInput.
        :type notification_policy: str
        """

        self._notification_policy = notification_policy

    @property
    def oplocks_enabled(self):
        """Gets the oplocks_enabled of this UpdateSMBFileShareInput.


        :return: The oplocks_enabled of this UpdateSMBFileShareInput.
        :rtype: bool
        """
        return self._oplocks_enabled

    @oplocks_enabled.setter
    def oplocks_enabled(self, oplocks_enabled):
        """Sets the oplocks_enabled of this UpdateSMBFileShareInput.


        :param oplocks_enabled: The oplocks_enabled of this UpdateSMBFileShareInput.
        :type oplocks_enabled: bool
        """

        self._oplocks_enabled = oplocks_enabled
