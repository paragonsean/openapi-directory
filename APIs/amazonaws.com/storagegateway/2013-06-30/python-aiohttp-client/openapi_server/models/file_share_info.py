# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.file_share_type import FileShareType
from openapi_server import util


class FileShareInfo(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, file_share_type: FileShareType=None, file_share_arn: str=None, file_share_id: str=None, file_share_status: str=None, gateway_arn: str=None):
        """FileShareInfo - a model defined in OpenAPI

        :param file_share_type: The file_share_type of this FileShareInfo.
        :param file_share_arn: The file_share_arn of this FileShareInfo.
        :param file_share_id: The file_share_id of this FileShareInfo.
        :param file_share_status: The file_share_status of this FileShareInfo.
        :param gateway_arn: The gateway_arn of this FileShareInfo.
        """
        self.openapi_types = {
            'file_share_type': FileShareType,
            'file_share_arn': str,
            'file_share_id': str,
            'file_share_status': str,
            'gateway_arn': str
        }

        self.attribute_map = {
            'file_share_type': 'FileShareType',
            'file_share_arn': 'FileShareARN',
            'file_share_id': 'FileShareId',
            'file_share_status': 'FileShareStatus',
            'gateway_arn': 'GatewayARN'
        }

        self._file_share_type = file_share_type
        self._file_share_arn = file_share_arn
        self._file_share_id = file_share_id
        self._file_share_status = file_share_status
        self._gateway_arn = gateway_arn

    @classmethod
    def from_dict(cls, dikt: dict) -> 'FileShareInfo':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The FileShareInfo of this FileShareInfo.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def file_share_type(self):
        """Gets the file_share_type of this FileShareInfo.


        :return: The file_share_type of this FileShareInfo.
        :rtype: FileShareType
        """
        return self._file_share_type

    @file_share_type.setter
    def file_share_type(self, file_share_type):
        """Sets the file_share_type of this FileShareInfo.


        :param file_share_type: The file_share_type of this FileShareInfo.
        :type file_share_type: FileShareType
        """

        self._file_share_type = file_share_type

    @property
    def file_share_arn(self):
        """Gets the file_share_arn of this FileShareInfo.

        The Amazon Resource Name (ARN) of the file share.

        :return: The file_share_arn of this FileShareInfo.
        :rtype: str
        """
        return self._file_share_arn

    @file_share_arn.setter
    def file_share_arn(self, file_share_arn):
        """Sets the file_share_arn of this FileShareInfo.

        The Amazon Resource Name (ARN) of the file share.

        :param file_share_arn: The file_share_arn of this FileShareInfo.
        :type file_share_arn: str
        """
        if file_share_arn is not None and len(file_share_arn) > 500:
            raise ValueError("Invalid value for `file_share_arn`, length must be less than or equal to `500`")
        if file_share_arn is not None and len(file_share_arn) < 50:
            raise ValueError("Invalid value for `file_share_arn`, length must be greater than or equal to `50`")

        self._file_share_arn = file_share_arn

    @property
    def file_share_id(self):
        """Gets the file_share_id of this FileShareInfo.

        The ID of the file share.

        :return: The file_share_id of this FileShareInfo.
        :rtype: str
        """
        return self._file_share_id

    @file_share_id.setter
    def file_share_id(self, file_share_id):
        """Sets the file_share_id of this FileShareInfo.

        The ID of the file share.

        :param file_share_id: The file_share_id of this FileShareInfo.
        :type file_share_id: str
        """
        if file_share_id is not None and len(file_share_id) > 30:
            raise ValueError("Invalid value for `file_share_id`, length must be less than or equal to `30`")
        if file_share_id is not None and len(file_share_id) < 12:
            raise ValueError("Invalid value for `file_share_id`, length must be greater than or equal to `12`")

        self._file_share_id = file_share_id

    @property
    def file_share_status(self):
        """Gets the file_share_status of this FileShareInfo.

        <p>The status of the file share.</p> <p>Valid Values: <code>CREATING</code> | <code>UPDATING</code> | <code>AVAILABLE</code> | <code>DELETING</code> </p>

        :return: The file_share_status of this FileShareInfo.
        :rtype: str
        """
        return self._file_share_status

    @file_share_status.setter
    def file_share_status(self, file_share_status):
        """Sets the file_share_status of this FileShareInfo.

        <p>The status of the file share.</p> <p>Valid Values: <code>CREATING</code> | <code>UPDATING</code> | <code>AVAILABLE</code> | <code>DELETING</code> </p>

        :param file_share_status: The file_share_status of this FileShareInfo.
        :type file_share_status: str
        """
        if file_share_status is not None and len(file_share_status) > 50:
            raise ValueError("Invalid value for `file_share_status`, length must be less than or equal to `50`")
        if file_share_status is not None and len(file_share_status) < 3:
            raise ValueError("Invalid value for `file_share_status`, length must be greater than or equal to `3`")

        self._file_share_status = file_share_status

    @property
    def gateway_arn(self):
        """Gets the gateway_arn of this FileShareInfo.

        The Amazon Resource Name (ARN) of the gateway. Use the <a>ListGateways</a> operation to return a list of gateways for your account and Amazon Web Services Region.

        :return: The gateway_arn of this FileShareInfo.
        :rtype: str
        """
        return self._gateway_arn

    @gateway_arn.setter
    def gateway_arn(self, gateway_arn):
        """Sets the gateway_arn of this FileShareInfo.

        The Amazon Resource Name (ARN) of the gateway. Use the <a>ListGateways</a> operation to return a list of gateways for your account and Amazon Web Services Region.

        :param gateway_arn: The gateway_arn of this FileShareInfo.
        :type gateway_arn: str
        """
        if gateway_arn is not None and len(gateway_arn) > 500:
            raise ValueError("Invalid value for `gateway_arn`, length must be less than or equal to `500`")
        if gateway_arn is not None and len(gateway_arn) < 50:
            raise ValueError("Invalid value for `gateway_arn`, length must be greater than or equal to `50`")

        self._gateway_arn = gateway_arn
