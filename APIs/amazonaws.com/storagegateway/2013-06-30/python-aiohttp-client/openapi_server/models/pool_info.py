# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.pool_status import PoolStatus
from openapi_server.models.retention_lock_type import RetentionLockType
from openapi_server.models.tape_storage_class import TapeStorageClass
from openapi_server import util


class PoolInfo(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, pool_arn: str=None, pool_name: str=None, storage_class: TapeStorageClass=None, retention_lock_type: RetentionLockType=None, retention_lock_time_in_days: int=None, pool_status: PoolStatus=None):
        """PoolInfo - a model defined in OpenAPI

        :param pool_arn: The pool_arn of this PoolInfo.
        :param pool_name: The pool_name of this PoolInfo.
        :param storage_class: The storage_class of this PoolInfo.
        :param retention_lock_type: The retention_lock_type of this PoolInfo.
        :param retention_lock_time_in_days: The retention_lock_time_in_days of this PoolInfo.
        :param pool_status: The pool_status of this PoolInfo.
        """
        self.openapi_types = {
            'pool_arn': str,
            'pool_name': str,
            'storage_class': TapeStorageClass,
            'retention_lock_type': RetentionLockType,
            'retention_lock_time_in_days': int,
            'pool_status': PoolStatus
        }

        self.attribute_map = {
            'pool_arn': 'PoolARN',
            'pool_name': 'PoolName',
            'storage_class': 'StorageClass',
            'retention_lock_type': 'RetentionLockType',
            'retention_lock_time_in_days': 'RetentionLockTimeInDays',
            'pool_status': 'PoolStatus'
        }

        self._pool_arn = pool_arn
        self._pool_name = pool_name
        self._storage_class = storage_class
        self._retention_lock_type = retention_lock_type
        self._retention_lock_time_in_days = retention_lock_time_in_days
        self._pool_status = pool_status

    @classmethod
    def from_dict(cls, dikt: dict) -> 'PoolInfo':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The PoolInfo of this PoolInfo.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def pool_arn(self):
        """Gets the pool_arn of this PoolInfo.


        :return: The pool_arn of this PoolInfo.
        :rtype: str
        """
        return self._pool_arn

    @pool_arn.setter
    def pool_arn(self, pool_arn):
        """Sets the pool_arn of this PoolInfo.


        :param pool_arn: The pool_arn of this PoolInfo.
        :type pool_arn: str
        """

        self._pool_arn = pool_arn

    @property
    def pool_name(self):
        """Gets the pool_name of this PoolInfo.


        :return: The pool_name of this PoolInfo.
        :rtype: str
        """
        return self._pool_name

    @pool_name.setter
    def pool_name(self, pool_name):
        """Sets the pool_name of this PoolInfo.


        :param pool_name: The pool_name of this PoolInfo.
        :type pool_name: str
        """

        self._pool_name = pool_name

    @property
    def storage_class(self):
        """Gets the storage_class of this PoolInfo.


        :return: The storage_class of this PoolInfo.
        :rtype: TapeStorageClass
        """
        return self._storage_class

    @storage_class.setter
    def storage_class(self, storage_class):
        """Sets the storage_class of this PoolInfo.


        :param storage_class: The storage_class of this PoolInfo.
        :type storage_class: TapeStorageClass
        """

        self._storage_class = storage_class

    @property
    def retention_lock_type(self):
        """Gets the retention_lock_type of this PoolInfo.


        :return: The retention_lock_type of this PoolInfo.
        :rtype: RetentionLockType
        """
        return self._retention_lock_type

    @retention_lock_type.setter
    def retention_lock_type(self, retention_lock_type):
        """Sets the retention_lock_type of this PoolInfo.


        :param retention_lock_type: The retention_lock_type of this PoolInfo.
        :type retention_lock_type: RetentionLockType
        """

        self._retention_lock_type = retention_lock_type

    @property
    def retention_lock_time_in_days(self):
        """Gets the retention_lock_time_in_days of this PoolInfo.


        :return: The retention_lock_time_in_days of this PoolInfo.
        :rtype: int
        """
        return self._retention_lock_time_in_days

    @retention_lock_time_in_days.setter
    def retention_lock_time_in_days(self, retention_lock_time_in_days):
        """Sets the retention_lock_time_in_days of this PoolInfo.


        :param retention_lock_time_in_days: The retention_lock_time_in_days of this PoolInfo.
        :type retention_lock_time_in_days: int
        """

        self._retention_lock_time_in_days = retention_lock_time_in_days

    @property
    def pool_status(self):
        """Gets the pool_status of this PoolInfo.


        :return: The pool_status of this PoolInfo.
        :rtype: PoolStatus
        """
        return self._pool_status

    @pool_status.setter
    def pool_status(self, pool_status):
        """Sets the pool_status of this PoolInfo.


        :param pool_status: The pool_status of this PoolInfo.
        :type pool_status: PoolStatus
        """

        self._pool_status = pool_status
