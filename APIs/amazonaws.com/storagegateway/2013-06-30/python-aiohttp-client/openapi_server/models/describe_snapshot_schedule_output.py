# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class DescribeSnapshotScheduleOutput(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, volume_arn: str=None, start_at: int=None, recurrence_in_hours: int=None, description: str=None, timezone: str=None, tags: List=None):
        """DescribeSnapshotScheduleOutput - a model defined in OpenAPI

        :param volume_arn: The volume_arn of this DescribeSnapshotScheduleOutput.
        :param start_at: The start_at of this DescribeSnapshotScheduleOutput.
        :param recurrence_in_hours: The recurrence_in_hours of this DescribeSnapshotScheduleOutput.
        :param description: The description of this DescribeSnapshotScheduleOutput.
        :param timezone: The timezone of this DescribeSnapshotScheduleOutput.
        :param tags: The tags of this DescribeSnapshotScheduleOutput.
        """
        self.openapi_types = {
            'volume_arn': str,
            'start_at': int,
            'recurrence_in_hours': int,
            'description': str,
            'timezone': str,
            'tags': List
        }

        self.attribute_map = {
            'volume_arn': 'VolumeARN',
            'start_at': 'StartAt',
            'recurrence_in_hours': 'RecurrenceInHours',
            'description': 'Description',
            'timezone': 'Timezone',
            'tags': 'Tags'
        }

        self._volume_arn = volume_arn
        self._start_at = start_at
        self._recurrence_in_hours = recurrence_in_hours
        self._description = description
        self._timezone = timezone
        self._tags = tags

    @classmethod
    def from_dict(cls, dikt: dict) -> 'DescribeSnapshotScheduleOutput':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The DescribeSnapshotScheduleOutput of this DescribeSnapshotScheduleOutput.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def volume_arn(self):
        """Gets the volume_arn of this DescribeSnapshotScheduleOutput.


        :return: The volume_arn of this DescribeSnapshotScheduleOutput.
        :rtype: str
        """
        return self._volume_arn

    @volume_arn.setter
    def volume_arn(self, volume_arn):
        """Sets the volume_arn of this DescribeSnapshotScheduleOutput.


        :param volume_arn: The volume_arn of this DescribeSnapshotScheduleOutput.
        :type volume_arn: str
        """

        self._volume_arn = volume_arn

    @property
    def start_at(self):
        """Gets the start_at of this DescribeSnapshotScheduleOutput.


        :return: The start_at of this DescribeSnapshotScheduleOutput.
        :rtype: int
        """
        return self._start_at

    @start_at.setter
    def start_at(self, start_at):
        """Sets the start_at of this DescribeSnapshotScheduleOutput.


        :param start_at: The start_at of this DescribeSnapshotScheduleOutput.
        :type start_at: int
        """

        self._start_at = start_at

    @property
    def recurrence_in_hours(self):
        """Gets the recurrence_in_hours of this DescribeSnapshotScheduleOutput.


        :return: The recurrence_in_hours of this DescribeSnapshotScheduleOutput.
        :rtype: int
        """
        return self._recurrence_in_hours

    @recurrence_in_hours.setter
    def recurrence_in_hours(self, recurrence_in_hours):
        """Sets the recurrence_in_hours of this DescribeSnapshotScheduleOutput.


        :param recurrence_in_hours: The recurrence_in_hours of this DescribeSnapshotScheduleOutput.
        :type recurrence_in_hours: int
        """

        self._recurrence_in_hours = recurrence_in_hours

    @property
    def description(self):
        """Gets the description of this DescribeSnapshotScheduleOutput.


        :return: The description of this DescribeSnapshotScheduleOutput.
        :rtype: str
        """
        return self._description

    @description.setter
    def description(self, description):
        """Sets the description of this DescribeSnapshotScheduleOutput.


        :param description: The description of this DescribeSnapshotScheduleOutput.
        :type description: str
        """

        self._description = description

    @property
    def timezone(self):
        """Gets the timezone of this DescribeSnapshotScheduleOutput.


        :return: The timezone of this DescribeSnapshotScheduleOutput.
        :rtype: str
        """
        return self._timezone

    @timezone.setter
    def timezone(self, timezone):
        """Sets the timezone of this DescribeSnapshotScheduleOutput.


        :param timezone: The timezone of this DescribeSnapshotScheduleOutput.
        :type timezone: str
        """

        self._timezone = timezone

    @property
    def tags(self):
        """Gets the tags of this DescribeSnapshotScheduleOutput.


        :return: The tags of this DescribeSnapshotScheduleOutput.
        :rtype: List
        """
        return self._tags

    @tags.setter
    def tags(self, tags):
        """Sets the tags of this DescribeSnapshotScheduleOutput.


        :param tags: The tags of this DescribeSnapshotScheduleOutput.
        :type tags: List
        """

        self._tags = tags
