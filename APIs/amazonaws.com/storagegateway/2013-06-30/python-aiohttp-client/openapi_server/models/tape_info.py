# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class TapeInfo(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, tape_arn: str=None, tape_barcode: str=None, tape_size_in_bytes: int=None, tape_status: str=None, gateway_arn: str=None, pool_id: str=None, retention_start_date: datetime=None, pool_entry_date: datetime=None):
        """TapeInfo - a model defined in OpenAPI

        :param tape_arn: The tape_arn of this TapeInfo.
        :param tape_barcode: The tape_barcode of this TapeInfo.
        :param tape_size_in_bytes: The tape_size_in_bytes of this TapeInfo.
        :param tape_status: The tape_status of this TapeInfo.
        :param gateway_arn: The gateway_arn of this TapeInfo.
        :param pool_id: The pool_id of this TapeInfo.
        :param retention_start_date: The retention_start_date of this TapeInfo.
        :param pool_entry_date: The pool_entry_date of this TapeInfo.
        """
        self.openapi_types = {
            'tape_arn': str,
            'tape_barcode': str,
            'tape_size_in_bytes': int,
            'tape_status': str,
            'gateway_arn': str,
            'pool_id': str,
            'retention_start_date': datetime,
            'pool_entry_date': datetime
        }

        self.attribute_map = {
            'tape_arn': 'TapeARN',
            'tape_barcode': 'TapeBarcode',
            'tape_size_in_bytes': 'TapeSizeInBytes',
            'tape_status': 'TapeStatus',
            'gateway_arn': 'GatewayARN',
            'pool_id': 'PoolId',
            'retention_start_date': 'RetentionStartDate',
            'pool_entry_date': 'PoolEntryDate'
        }

        self._tape_arn = tape_arn
        self._tape_barcode = tape_barcode
        self._tape_size_in_bytes = tape_size_in_bytes
        self._tape_status = tape_status
        self._gateway_arn = gateway_arn
        self._pool_id = pool_id
        self._retention_start_date = retention_start_date
        self._pool_entry_date = pool_entry_date

    @classmethod
    def from_dict(cls, dikt: dict) -> 'TapeInfo':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The TapeInfo of this TapeInfo.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def tape_arn(self):
        """Gets the tape_arn of this TapeInfo.


        :return: The tape_arn of this TapeInfo.
        :rtype: str
        """
        return self._tape_arn

    @tape_arn.setter
    def tape_arn(self, tape_arn):
        """Sets the tape_arn of this TapeInfo.


        :param tape_arn: The tape_arn of this TapeInfo.
        :type tape_arn: str
        """

        self._tape_arn = tape_arn

    @property
    def tape_barcode(self):
        """Gets the tape_barcode of this TapeInfo.


        :return: The tape_barcode of this TapeInfo.
        :rtype: str
        """
        return self._tape_barcode

    @tape_barcode.setter
    def tape_barcode(self, tape_barcode):
        """Sets the tape_barcode of this TapeInfo.


        :param tape_barcode: The tape_barcode of this TapeInfo.
        :type tape_barcode: str
        """

        self._tape_barcode = tape_barcode

    @property
    def tape_size_in_bytes(self):
        """Gets the tape_size_in_bytes of this TapeInfo.


        :return: The tape_size_in_bytes of this TapeInfo.
        :rtype: int
        """
        return self._tape_size_in_bytes

    @tape_size_in_bytes.setter
    def tape_size_in_bytes(self, tape_size_in_bytes):
        """Sets the tape_size_in_bytes of this TapeInfo.


        :param tape_size_in_bytes: The tape_size_in_bytes of this TapeInfo.
        :type tape_size_in_bytes: int
        """

        self._tape_size_in_bytes = tape_size_in_bytes

    @property
    def tape_status(self):
        """Gets the tape_status of this TapeInfo.


        :return: The tape_status of this TapeInfo.
        :rtype: str
        """
        return self._tape_status

    @tape_status.setter
    def tape_status(self, tape_status):
        """Sets the tape_status of this TapeInfo.


        :param tape_status: The tape_status of this TapeInfo.
        :type tape_status: str
        """

        self._tape_status = tape_status

    @property
    def gateway_arn(self):
        """Gets the gateway_arn of this TapeInfo.


        :return: The gateway_arn of this TapeInfo.
        :rtype: str
        """
        return self._gateway_arn

    @gateway_arn.setter
    def gateway_arn(self, gateway_arn):
        """Sets the gateway_arn of this TapeInfo.


        :param gateway_arn: The gateway_arn of this TapeInfo.
        :type gateway_arn: str
        """

        self._gateway_arn = gateway_arn

    @property
    def pool_id(self):
        """Gets the pool_id of this TapeInfo.


        :return: The pool_id of this TapeInfo.
        :rtype: str
        """
        return self._pool_id

    @pool_id.setter
    def pool_id(self, pool_id):
        """Sets the pool_id of this TapeInfo.


        :param pool_id: The pool_id of this TapeInfo.
        :type pool_id: str
        """

        self._pool_id = pool_id

    @property
    def retention_start_date(self):
        """Gets the retention_start_date of this TapeInfo.


        :return: The retention_start_date of this TapeInfo.
        :rtype: datetime
        """
        return self._retention_start_date

    @retention_start_date.setter
    def retention_start_date(self, retention_start_date):
        """Sets the retention_start_date of this TapeInfo.


        :param retention_start_date: The retention_start_date of this TapeInfo.
        :type retention_start_date: datetime
        """

        self._retention_start_date = retention_start_date

    @property
    def pool_entry_date(self):
        """Gets the pool_entry_date of this TapeInfo.


        :return: The pool_entry_date of this TapeInfo.
        :rtype: datetime
        """
        return self._pool_entry_date

    @pool_entry_date.setter
    def pool_entry_date(self, pool_entry_date):
        """Sets the pool_entry_date of this TapeInfo.


        :param pool_entry_date: The pool_entry_date of this TapeInfo.
        :type pool_entry_date: datetime
        """

        self._pool_entry_date = pool_entry_date
