# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class ListGatewaysInput(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, marker: str=None, limit: int=None):
        """ListGatewaysInput - a model defined in OpenAPI

        :param marker: The marker of this ListGatewaysInput.
        :param limit: The limit of this ListGatewaysInput.
        """
        self.openapi_types = {
            'marker': str,
            'limit': int
        }

        self.attribute_map = {
            'marker': 'Marker',
            'limit': 'Limit'
        }

        self._marker = marker
        self._limit = limit

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ListGatewaysInput':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ListGatewaysInput of this ListGatewaysInput.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def marker(self):
        """Gets the marker of this ListGatewaysInput.


        :return: The marker of this ListGatewaysInput.
        :rtype: str
        """
        return self._marker

    @marker.setter
    def marker(self, marker):
        """Sets the marker of this ListGatewaysInput.


        :param marker: The marker of this ListGatewaysInput.
        :type marker: str
        """

        self._marker = marker

    @property
    def limit(self):
        """Gets the limit of this ListGatewaysInput.


        :return: The limit of this ListGatewaysInput.
        :rtype: int
        """
        return self._limit

    @limit.setter
    def limit(self, limit):
        """Sets the limit of this ListGatewaysInput.


        :param limit: The limit of this ListGatewaysInput.
        :type limit: int
        """

        self._limit = limit
