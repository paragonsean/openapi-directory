# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class NFSFileShareInfoCacheAttributes(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, cache_stale_timeout_in_seconds: int=None):
        """NFSFileShareInfoCacheAttributes - a model defined in OpenAPI

        :param cache_stale_timeout_in_seconds: The cache_stale_timeout_in_seconds of this NFSFileShareInfoCacheAttributes.
        """
        self.openapi_types = {
            'cache_stale_timeout_in_seconds': int
        }

        self.attribute_map = {
            'cache_stale_timeout_in_seconds': 'CacheStaleTimeoutInSeconds'
        }

        self._cache_stale_timeout_in_seconds = cache_stale_timeout_in_seconds

    @classmethod
    def from_dict(cls, dikt: dict) -> 'NFSFileShareInfoCacheAttributes':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The NFSFileShareInfo_CacheAttributes of this NFSFileShareInfoCacheAttributes.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def cache_stale_timeout_in_seconds(self):
        """Gets the cache_stale_timeout_in_seconds of this NFSFileShareInfoCacheAttributes.


        :return: The cache_stale_timeout_in_seconds of this NFSFileShareInfoCacheAttributes.
        :rtype: int
        """
        return self._cache_stale_timeout_in_seconds

    @cache_stale_timeout_in_seconds.setter
    def cache_stale_timeout_in_seconds(self, cache_stale_timeout_in_seconds):
        """Sets the cache_stale_timeout_in_seconds of this NFSFileShareInfoCacheAttributes.


        :param cache_stale_timeout_in_seconds: The cache_stale_timeout_in_seconds of this NFSFileShareInfoCacheAttributes.
        :type cache_stale_timeout_in_seconds: int
        """

        self._cache_stale_timeout_in_seconds = cache_stale_timeout_in_seconds
