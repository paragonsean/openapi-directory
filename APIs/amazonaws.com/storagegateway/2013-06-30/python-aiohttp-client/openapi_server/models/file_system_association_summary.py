# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class FileSystemAssociationSummary(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, file_system_association_id: str=None, file_system_association_arn: str=None, file_system_association_status: str=None, gateway_arn: str=None):
        """FileSystemAssociationSummary - a model defined in OpenAPI

        :param file_system_association_id: The file_system_association_id of this FileSystemAssociationSummary.
        :param file_system_association_arn: The file_system_association_arn of this FileSystemAssociationSummary.
        :param file_system_association_status: The file_system_association_status of this FileSystemAssociationSummary.
        :param gateway_arn: The gateway_arn of this FileSystemAssociationSummary.
        """
        self.openapi_types = {
            'file_system_association_id': str,
            'file_system_association_arn': str,
            'file_system_association_status': str,
            'gateway_arn': str
        }

        self.attribute_map = {
            'file_system_association_id': 'FileSystemAssociationId',
            'file_system_association_arn': 'FileSystemAssociationARN',
            'file_system_association_status': 'FileSystemAssociationStatus',
            'gateway_arn': 'GatewayARN'
        }

        self._file_system_association_id = file_system_association_id
        self._file_system_association_arn = file_system_association_arn
        self._file_system_association_status = file_system_association_status
        self._gateway_arn = gateway_arn

    @classmethod
    def from_dict(cls, dikt: dict) -> 'FileSystemAssociationSummary':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The FileSystemAssociationSummary of this FileSystemAssociationSummary.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def file_system_association_id(self):
        """Gets the file_system_association_id of this FileSystemAssociationSummary.


        :return: The file_system_association_id of this FileSystemAssociationSummary.
        :rtype: str
        """
        return self._file_system_association_id

    @file_system_association_id.setter
    def file_system_association_id(self, file_system_association_id):
        """Sets the file_system_association_id of this FileSystemAssociationSummary.


        :param file_system_association_id: The file_system_association_id of this FileSystemAssociationSummary.
        :type file_system_association_id: str
        """

        self._file_system_association_id = file_system_association_id

    @property
    def file_system_association_arn(self):
        """Gets the file_system_association_arn of this FileSystemAssociationSummary.


        :return: The file_system_association_arn of this FileSystemAssociationSummary.
        :rtype: str
        """
        return self._file_system_association_arn

    @file_system_association_arn.setter
    def file_system_association_arn(self, file_system_association_arn):
        """Sets the file_system_association_arn of this FileSystemAssociationSummary.


        :param file_system_association_arn: The file_system_association_arn of this FileSystemAssociationSummary.
        :type file_system_association_arn: str
        """

        self._file_system_association_arn = file_system_association_arn

    @property
    def file_system_association_status(self):
        """Gets the file_system_association_status of this FileSystemAssociationSummary.


        :return: The file_system_association_status of this FileSystemAssociationSummary.
        :rtype: str
        """
        return self._file_system_association_status

    @file_system_association_status.setter
    def file_system_association_status(self, file_system_association_status):
        """Sets the file_system_association_status of this FileSystemAssociationSummary.


        :param file_system_association_status: The file_system_association_status of this FileSystemAssociationSummary.
        :type file_system_association_status: str
        """

        self._file_system_association_status = file_system_association_status

    @property
    def gateway_arn(self):
        """Gets the gateway_arn of this FileSystemAssociationSummary.

        The Amazon Resource Name (ARN) of the gateway. Use the <a>ListGateways</a> operation to return a list of gateways for your account and Amazon Web Services Region.

        :return: The gateway_arn of this FileSystemAssociationSummary.
        :rtype: str
        """
        return self._gateway_arn

    @gateway_arn.setter
    def gateway_arn(self, gateway_arn):
        """Sets the gateway_arn of this FileSystemAssociationSummary.

        The Amazon Resource Name (ARN) of the gateway. Use the <a>ListGateways</a> operation to return a list of gateways for your account and Amazon Web Services Region.

        :param gateway_arn: The gateway_arn of this FileSystemAssociationSummary.
        :type gateway_arn: str
        """
        if gateway_arn is not None and len(gateway_arn) > 500:
            raise ValueError("Invalid value for `gateway_arn`, length must be less than or equal to `500`")
        if gateway_arn is not None and len(gateway_arn) < 50:
            raise ValueError("Invalid value for `gateway_arn`, length must be greater than or equal to `50`")

        self._gateway_arn = gateway_arn
