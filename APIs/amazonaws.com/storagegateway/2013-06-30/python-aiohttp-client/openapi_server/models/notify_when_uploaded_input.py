# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class NotifyWhenUploadedInput(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, file_share_arn: str=None):
        """NotifyWhenUploadedInput - a model defined in OpenAPI

        :param file_share_arn: The file_share_arn of this NotifyWhenUploadedInput.
        """
        self.openapi_types = {
            'file_share_arn': str
        }

        self.attribute_map = {
            'file_share_arn': 'FileShareARN'
        }

        self._file_share_arn = file_share_arn

    @classmethod
    def from_dict(cls, dikt: dict) -> 'NotifyWhenUploadedInput':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The NotifyWhenUploadedInput of this NotifyWhenUploadedInput.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def file_share_arn(self):
        """Gets the file_share_arn of this NotifyWhenUploadedInput.

        The Amazon Resource Name (ARN) of the file share.

        :return: The file_share_arn of this NotifyWhenUploadedInput.
        :rtype: str
        """
        return self._file_share_arn

    @file_share_arn.setter
    def file_share_arn(self, file_share_arn):
        """Sets the file_share_arn of this NotifyWhenUploadedInput.

        The Amazon Resource Name (ARN) of the file share.

        :param file_share_arn: The file_share_arn of this NotifyWhenUploadedInput.
        :type file_share_arn: str
        """
        if file_share_arn is None:
            raise ValueError("Invalid value for `file_share_arn`, must not be `None`")
        if file_share_arn is not None and len(file_share_arn) > 500:
            raise ValueError("Invalid value for `file_share_arn`, length must be less than or equal to `500`")
        if file_share_arn is not None and len(file_share_arn) < 50:
            raise ValueError("Invalid value for `file_share_arn`, length must be greater than or equal to `50`")

        self._file_share_arn = file_share_arn
