# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class DescribeSMBFileSharesInput(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, file_share_arn_list: List=None):
        """DescribeSMBFileSharesInput - a model defined in OpenAPI

        :param file_share_arn_list: The file_share_arn_list of this DescribeSMBFileSharesInput.
        """
        self.openapi_types = {
            'file_share_arn_list': List
        }

        self.attribute_map = {
            'file_share_arn_list': 'FileShareARNList'
        }

        self._file_share_arn_list = file_share_arn_list

    @classmethod
    def from_dict(cls, dikt: dict) -> 'DescribeSMBFileSharesInput':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The DescribeSMBFileSharesInput of this DescribeSMBFileSharesInput.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def file_share_arn_list(self):
        """Gets the file_share_arn_list of this DescribeSMBFileSharesInput.


        :return: The file_share_arn_list of this DescribeSMBFileSharesInput.
        :rtype: List
        """
        return self._file_share_arn_list

    @file_share_arn_list.setter
    def file_share_arn_list(self, file_share_arn_list):
        """Sets the file_share_arn_list of this DescribeSMBFileSharesInput.


        :param file_share_arn_list: The file_share_arn_list of this DescribeSMBFileSharesInput.
        :type file_share_arn_list: List
        """
        if file_share_arn_list is None:
            raise ValueError("Invalid value for `file_share_arn_list`, must not be `None`")

        self._file_share_arn_list = file_share_arn_list
