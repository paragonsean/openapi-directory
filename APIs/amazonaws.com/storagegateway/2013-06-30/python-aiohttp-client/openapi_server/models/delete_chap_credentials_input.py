# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class DeleteChapCredentialsInput(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, target_arn: str=None, initiator_name: str=None):
        """DeleteChapCredentialsInput - a model defined in OpenAPI

        :param target_arn: The target_arn of this DeleteChapCredentialsInput.
        :param initiator_name: The initiator_name of this DeleteChapCredentialsInput.
        """
        self.openapi_types = {
            'target_arn': str,
            'initiator_name': str
        }

        self.attribute_map = {
            'target_arn': 'TargetARN',
            'initiator_name': 'InitiatorName'
        }

        self._target_arn = target_arn
        self._initiator_name = initiator_name

    @classmethod
    def from_dict(cls, dikt: dict) -> 'DeleteChapCredentialsInput':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The DeleteChapCredentialsInput of this DeleteChapCredentialsInput.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def target_arn(self):
        """Gets the target_arn of this DeleteChapCredentialsInput.


        :return: The target_arn of this DeleteChapCredentialsInput.
        :rtype: str
        """
        return self._target_arn

    @target_arn.setter
    def target_arn(self, target_arn):
        """Sets the target_arn of this DeleteChapCredentialsInput.


        :param target_arn: The target_arn of this DeleteChapCredentialsInput.
        :type target_arn: str
        """
        if target_arn is None:
            raise ValueError("Invalid value for `target_arn`, must not be `None`")

        self._target_arn = target_arn

    @property
    def initiator_name(self):
        """Gets the initiator_name of this DeleteChapCredentialsInput.


        :return: The initiator_name of this DeleteChapCredentialsInput.
        :rtype: str
        """
        return self._initiator_name

    @initiator_name.setter
    def initiator_name(self, initiator_name):
        """Sets the initiator_name of this DeleteChapCredentialsInput.


        :param initiator_name: The initiator_name of this DeleteChapCredentialsInput.
        :type initiator_name: str
        """
        if initiator_name is None:
            raise ValueError("Invalid value for `initiator_name`, must not be `None`")

        self._initiator_name = initiator_name
