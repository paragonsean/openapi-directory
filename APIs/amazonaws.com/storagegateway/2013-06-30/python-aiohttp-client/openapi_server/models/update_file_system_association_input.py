# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.cache_attributes import CacheAttributes
from openapi_server import util


class UpdateFileSystemAssociationInput(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, file_system_association_arn: str=None, user_name: str=None, password: str=None, audit_destination_arn: str=None, cache_attributes: CacheAttributes=None):
        """UpdateFileSystemAssociationInput - a model defined in OpenAPI

        :param file_system_association_arn: The file_system_association_arn of this UpdateFileSystemAssociationInput.
        :param user_name: The user_name of this UpdateFileSystemAssociationInput.
        :param password: The password of this UpdateFileSystemAssociationInput.
        :param audit_destination_arn: The audit_destination_arn of this UpdateFileSystemAssociationInput.
        :param cache_attributes: The cache_attributes of this UpdateFileSystemAssociationInput.
        """
        self.openapi_types = {
            'file_system_association_arn': str,
            'user_name': str,
            'password': str,
            'audit_destination_arn': str,
            'cache_attributes': CacheAttributes
        }

        self.attribute_map = {
            'file_system_association_arn': 'FileSystemAssociationARN',
            'user_name': 'UserName',
            'password': 'Password',
            'audit_destination_arn': 'AuditDestinationARN',
            'cache_attributes': 'CacheAttributes'
        }

        self._file_system_association_arn = file_system_association_arn
        self._user_name = user_name
        self._password = password
        self._audit_destination_arn = audit_destination_arn
        self._cache_attributes = cache_attributes

    @classmethod
    def from_dict(cls, dikt: dict) -> 'UpdateFileSystemAssociationInput':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The UpdateFileSystemAssociationInput of this UpdateFileSystemAssociationInput.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def file_system_association_arn(self):
        """Gets the file_system_association_arn of this UpdateFileSystemAssociationInput.


        :return: The file_system_association_arn of this UpdateFileSystemAssociationInput.
        :rtype: str
        """
        return self._file_system_association_arn

    @file_system_association_arn.setter
    def file_system_association_arn(self, file_system_association_arn):
        """Sets the file_system_association_arn of this UpdateFileSystemAssociationInput.


        :param file_system_association_arn: The file_system_association_arn of this UpdateFileSystemAssociationInput.
        :type file_system_association_arn: str
        """
        if file_system_association_arn is None:
            raise ValueError("Invalid value for `file_system_association_arn`, must not be `None`")

        self._file_system_association_arn = file_system_association_arn

    @property
    def user_name(self):
        """Gets the user_name of this UpdateFileSystemAssociationInput.


        :return: The user_name of this UpdateFileSystemAssociationInput.
        :rtype: str
        """
        return self._user_name

    @user_name.setter
    def user_name(self, user_name):
        """Sets the user_name of this UpdateFileSystemAssociationInput.


        :param user_name: The user_name of this UpdateFileSystemAssociationInput.
        :type user_name: str
        """

        self._user_name = user_name

    @property
    def password(self):
        """Gets the password of this UpdateFileSystemAssociationInput.


        :return: The password of this UpdateFileSystemAssociationInput.
        :rtype: str
        """
        return self._password

    @password.setter
    def password(self, password):
        """Sets the password of this UpdateFileSystemAssociationInput.


        :param password: The password of this UpdateFileSystemAssociationInput.
        :type password: str
        """

        self._password = password

    @property
    def audit_destination_arn(self):
        """Gets the audit_destination_arn of this UpdateFileSystemAssociationInput.


        :return: The audit_destination_arn of this UpdateFileSystemAssociationInput.
        :rtype: str
        """
        return self._audit_destination_arn

    @audit_destination_arn.setter
    def audit_destination_arn(self, audit_destination_arn):
        """Sets the audit_destination_arn of this UpdateFileSystemAssociationInput.


        :param audit_destination_arn: The audit_destination_arn of this UpdateFileSystemAssociationInput.
        :type audit_destination_arn: str
        """

        self._audit_destination_arn = audit_destination_arn

    @property
    def cache_attributes(self):
        """Gets the cache_attributes of this UpdateFileSystemAssociationInput.


        :return: The cache_attributes of this UpdateFileSystemAssociationInput.
        :rtype: CacheAttributes
        """
        return self._cache_attributes

    @cache_attributes.setter
    def cache_attributes(self, cache_attributes):
        """Sets the cache_attributes of this UpdateFileSystemAssociationInput.


        :param cache_attributes: The cache_attributes of this UpdateFileSystemAssociationInput.
        :type cache_attributes: CacheAttributes
        """

        self._cache_attributes = cache_attributes
