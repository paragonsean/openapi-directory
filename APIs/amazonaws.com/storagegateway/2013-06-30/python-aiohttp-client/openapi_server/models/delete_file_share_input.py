# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class DeleteFileShareInput(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, file_share_arn: str=None, force_delete: bool=None):
        """DeleteFileShareInput - a model defined in OpenAPI

        :param file_share_arn: The file_share_arn of this DeleteFileShareInput.
        :param force_delete: The force_delete of this DeleteFileShareInput.
        """
        self.openapi_types = {
            'file_share_arn': str,
            'force_delete': bool
        }

        self.attribute_map = {
            'file_share_arn': 'FileShareARN',
            'force_delete': 'ForceDelete'
        }

        self._file_share_arn = file_share_arn
        self._force_delete = force_delete

    @classmethod
    def from_dict(cls, dikt: dict) -> 'DeleteFileShareInput':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The DeleteFileShareInput of this DeleteFileShareInput.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def file_share_arn(self):
        """Gets the file_share_arn of this DeleteFileShareInput.


        :return: The file_share_arn of this DeleteFileShareInput.
        :rtype: str
        """
        return self._file_share_arn

    @file_share_arn.setter
    def file_share_arn(self, file_share_arn):
        """Sets the file_share_arn of this DeleteFileShareInput.


        :param file_share_arn: The file_share_arn of this DeleteFileShareInput.
        :type file_share_arn: str
        """
        if file_share_arn is None:
            raise ValueError("Invalid value for `file_share_arn`, must not be `None`")

        self._file_share_arn = file_share_arn

    @property
    def force_delete(self):
        """Gets the force_delete of this DeleteFileShareInput.


        :return: The force_delete of this DeleteFileShareInput.
        :rtype: bool
        """
        return self._force_delete

    @force_delete.setter
    def force_delete(self, force_delete):
        """Sets the force_delete of this DeleteFileShareInput.


        :param force_delete: The force_delete of this DeleteFileShareInput.
        :type force_delete: bool
        """

        self._force_delete = force_delete
