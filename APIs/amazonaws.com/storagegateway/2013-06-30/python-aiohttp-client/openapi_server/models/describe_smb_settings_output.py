# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.active_directory_status import ActiveDirectoryStatus
from openapi_server.models.describe_smb_settings_output_smb_local_groups import DescribeSMBSettingsOutputSMBLocalGroups
from openapi_server.models.smb_security_strategy import SMBSecurityStrategy
from openapi_server import util


class DescribeSMBSettingsOutput(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, gateway_arn: str=None, domain_name: str=None, active_directory_status: ActiveDirectoryStatus=None, smb_guest_password_set: bool=None, smb_security_strategy: SMBSecurityStrategy=None, file_shares_visible: bool=None, smb_local_groups: DescribeSMBSettingsOutputSMBLocalGroups=None):
        """DescribeSMBSettingsOutput - a model defined in OpenAPI

        :param gateway_arn: The gateway_arn of this DescribeSMBSettingsOutput.
        :param domain_name: The domain_name of this DescribeSMBSettingsOutput.
        :param active_directory_status: The active_directory_status of this DescribeSMBSettingsOutput.
        :param smb_guest_password_set: The smb_guest_password_set of this DescribeSMBSettingsOutput.
        :param smb_security_strategy: The smb_security_strategy of this DescribeSMBSettingsOutput.
        :param file_shares_visible: The file_shares_visible of this DescribeSMBSettingsOutput.
        :param smb_local_groups: The smb_local_groups of this DescribeSMBSettingsOutput.
        """
        self.openapi_types = {
            'gateway_arn': str,
            'domain_name': str,
            'active_directory_status': ActiveDirectoryStatus,
            'smb_guest_password_set': bool,
            'smb_security_strategy': SMBSecurityStrategy,
            'file_shares_visible': bool,
            'smb_local_groups': DescribeSMBSettingsOutputSMBLocalGroups
        }

        self.attribute_map = {
            'gateway_arn': 'GatewayARN',
            'domain_name': 'DomainName',
            'active_directory_status': 'ActiveDirectoryStatus',
            'smb_guest_password_set': 'SMBGuestPasswordSet',
            'smb_security_strategy': 'SMBSecurityStrategy',
            'file_shares_visible': 'FileSharesVisible',
            'smb_local_groups': 'SMBLocalGroups'
        }

        self._gateway_arn = gateway_arn
        self._domain_name = domain_name
        self._active_directory_status = active_directory_status
        self._smb_guest_password_set = smb_guest_password_set
        self._smb_security_strategy = smb_security_strategy
        self._file_shares_visible = file_shares_visible
        self._smb_local_groups = smb_local_groups

    @classmethod
    def from_dict(cls, dikt: dict) -> 'DescribeSMBSettingsOutput':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The DescribeSMBSettingsOutput of this DescribeSMBSettingsOutput.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def gateway_arn(self):
        """Gets the gateway_arn of this DescribeSMBSettingsOutput.

        The Amazon Resource Name (ARN) of the gateway. Use the <a>ListGateways</a> operation to return a list of gateways for your account and Amazon Web Services Region.

        :return: The gateway_arn of this DescribeSMBSettingsOutput.
        :rtype: str
        """
        return self._gateway_arn

    @gateway_arn.setter
    def gateway_arn(self, gateway_arn):
        """Sets the gateway_arn of this DescribeSMBSettingsOutput.

        The Amazon Resource Name (ARN) of the gateway. Use the <a>ListGateways</a> operation to return a list of gateways for your account and Amazon Web Services Region.

        :param gateway_arn: The gateway_arn of this DescribeSMBSettingsOutput.
        :type gateway_arn: str
        """
        if gateway_arn is not None and len(gateway_arn) > 500:
            raise ValueError("Invalid value for `gateway_arn`, length must be less than or equal to `500`")
        if gateway_arn is not None and len(gateway_arn) < 50:
            raise ValueError("Invalid value for `gateway_arn`, length must be greater than or equal to `50`")

        self._gateway_arn = gateway_arn

    @property
    def domain_name(self):
        """Gets the domain_name of this DescribeSMBSettingsOutput.


        :return: The domain_name of this DescribeSMBSettingsOutput.
        :rtype: str
        """
        return self._domain_name

    @domain_name.setter
    def domain_name(self, domain_name):
        """Sets the domain_name of this DescribeSMBSettingsOutput.


        :param domain_name: The domain_name of this DescribeSMBSettingsOutput.
        :type domain_name: str
        """

        self._domain_name = domain_name

    @property
    def active_directory_status(self):
        """Gets the active_directory_status of this DescribeSMBSettingsOutput.


        :return: The active_directory_status of this DescribeSMBSettingsOutput.
        :rtype: ActiveDirectoryStatus
        """
        return self._active_directory_status

    @active_directory_status.setter
    def active_directory_status(self, active_directory_status):
        """Sets the active_directory_status of this DescribeSMBSettingsOutput.


        :param active_directory_status: The active_directory_status of this DescribeSMBSettingsOutput.
        :type active_directory_status: ActiveDirectoryStatus
        """

        self._active_directory_status = active_directory_status

    @property
    def smb_guest_password_set(self):
        """Gets the smb_guest_password_set of this DescribeSMBSettingsOutput.


        :return: The smb_guest_password_set of this DescribeSMBSettingsOutput.
        :rtype: bool
        """
        return self._smb_guest_password_set

    @smb_guest_password_set.setter
    def smb_guest_password_set(self, smb_guest_password_set):
        """Sets the smb_guest_password_set of this DescribeSMBSettingsOutput.


        :param smb_guest_password_set: The smb_guest_password_set of this DescribeSMBSettingsOutput.
        :type smb_guest_password_set: bool
        """

        self._smb_guest_password_set = smb_guest_password_set

    @property
    def smb_security_strategy(self):
        """Gets the smb_security_strategy of this DescribeSMBSettingsOutput.


        :return: The smb_security_strategy of this DescribeSMBSettingsOutput.
        :rtype: SMBSecurityStrategy
        """
        return self._smb_security_strategy

    @smb_security_strategy.setter
    def smb_security_strategy(self, smb_security_strategy):
        """Sets the smb_security_strategy of this DescribeSMBSettingsOutput.


        :param smb_security_strategy: The smb_security_strategy of this DescribeSMBSettingsOutput.
        :type smb_security_strategy: SMBSecurityStrategy
        """

        self._smb_security_strategy = smb_security_strategy

    @property
    def file_shares_visible(self):
        """Gets the file_shares_visible of this DescribeSMBSettingsOutput.


        :return: The file_shares_visible of this DescribeSMBSettingsOutput.
        :rtype: bool
        """
        return self._file_shares_visible

    @file_shares_visible.setter
    def file_shares_visible(self, file_shares_visible):
        """Sets the file_shares_visible of this DescribeSMBSettingsOutput.


        :param file_shares_visible: The file_shares_visible of this DescribeSMBSettingsOutput.
        :type file_shares_visible: bool
        """

        self._file_shares_visible = file_shares_visible

    @property
    def smb_local_groups(self):
        """Gets the smb_local_groups of this DescribeSMBSettingsOutput.


        :return: The smb_local_groups of this DescribeSMBSettingsOutput.
        :rtype: DescribeSMBSettingsOutputSMBLocalGroups
        """
        return self._smb_local_groups

    @smb_local_groups.setter
    def smb_local_groups(self, smb_local_groups):
        """Sets the smb_local_groups of this DescribeSMBSettingsOutput.


        :param smb_local_groups: The smb_local_groups of this DescribeSMBSettingsOutput.
        :type smb_local_groups: DescribeSMBSettingsOutputSMBLocalGroups
        """

        self._smb_local_groups = smb_local_groups
