# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.gateway_capacity import GatewayCapacity
import re
from openapi_server import util


class UpdateGatewayInformationInput(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, gateway_arn: str=None, gateway_name: str=None, gateway_timezone: str=None, cloud_watch_log_group_arn: str=None, gateway_capacity: GatewayCapacity=None):
        """UpdateGatewayInformationInput - a model defined in OpenAPI

        :param gateway_arn: The gateway_arn of this UpdateGatewayInformationInput.
        :param gateway_name: The gateway_name of this UpdateGatewayInformationInput.
        :param gateway_timezone: The gateway_timezone of this UpdateGatewayInformationInput.
        :param cloud_watch_log_group_arn: The cloud_watch_log_group_arn of this UpdateGatewayInformationInput.
        :param gateway_capacity: The gateway_capacity of this UpdateGatewayInformationInput.
        """
        self.openapi_types = {
            'gateway_arn': str,
            'gateway_name': str,
            'gateway_timezone': str,
            'cloud_watch_log_group_arn': str,
            'gateway_capacity': GatewayCapacity
        }

        self.attribute_map = {
            'gateway_arn': 'GatewayARN',
            'gateway_name': 'GatewayName',
            'gateway_timezone': 'GatewayTimezone',
            'cloud_watch_log_group_arn': 'CloudWatchLogGroupARN',
            'gateway_capacity': 'GatewayCapacity'
        }

        self._gateway_arn = gateway_arn
        self._gateway_name = gateway_name
        self._gateway_timezone = gateway_timezone
        self._cloud_watch_log_group_arn = cloud_watch_log_group_arn
        self._gateway_capacity = gateway_capacity

    @classmethod
    def from_dict(cls, dikt: dict) -> 'UpdateGatewayInformationInput':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The UpdateGatewayInformationInput of this UpdateGatewayInformationInput.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def gateway_arn(self):
        """Gets the gateway_arn of this UpdateGatewayInformationInput.

        The Amazon Resource Name (ARN) of the gateway. Use the <a>ListGateways</a> operation to return a list of gateways for your account and Amazon Web Services Region.

        :return: The gateway_arn of this UpdateGatewayInformationInput.
        :rtype: str
        """
        return self._gateway_arn

    @gateway_arn.setter
    def gateway_arn(self, gateway_arn):
        """Sets the gateway_arn of this UpdateGatewayInformationInput.

        The Amazon Resource Name (ARN) of the gateway. Use the <a>ListGateways</a> operation to return a list of gateways for your account and Amazon Web Services Region.

        :param gateway_arn: The gateway_arn of this UpdateGatewayInformationInput.
        :type gateway_arn: str
        """
        if gateway_arn is None:
            raise ValueError("Invalid value for `gateway_arn`, must not be `None`")
        if gateway_arn is not None and len(gateway_arn) > 500:
            raise ValueError("Invalid value for `gateway_arn`, length must be less than or equal to `500`")
        if gateway_arn is not None and len(gateway_arn) < 50:
            raise ValueError("Invalid value for `gateway_arn`, length must be greater than or equal to `50`")

        self._gateway_arn = gateway_arn

    @property
    def gateway_name(self):
        """Gets the gateway_name of this UpdateGatewayInformationInput.

        The name you configured for your gateway.

        :return: The gateway_name of this UpdateGatewayInformationInput.
        :rtype: str
        """
        return self._gateway_name

    @gateway_name.setter
    def gateway_name(self, gateway_name):
        """Sets the gateway_name of this UpdateGatewayInformationInput.

        The name you configured for your gateway.

        :param gateway_name: The gateway_name of this UpdateGatewayInformationInput.
        :type gateway_name: str
        """
        if gateway_name is not None and len(gateway_name) > 255:
            raise ValueError("Invalid value for `gateway_name`, length must be less than or equal to `255`")
        if gateway_name is not None and len(gateway_name) < 2:
            raise ValueError("Invalid value for `gateway_name`, length must be greater than or equal to `2`")
        if gateway_name is not None and not re.search(r'^[ -\.0-\[\]-~]*[!-\.0-\[\]-~][ -\.0-\[\]-~]*$', gateway_name):
            raise ValueError("Invalid value for `gateway_name`, must be a follow pattern or equal to `/^[ -\.0-\[\]-~]*[!-\.0-\[\]-~][ -\.0-\[\]-~]*$/`")

        self._gateway_name = gateway_name

    @property
    def gateway_timezone(self):
        """Gets the gateway_timezone of this UpdateGatewayInformationInput.


        :return: The gateway_timezone of this UpdateGatewayInformationInput.
        :rtype: str
        """
        return self._gateway_timezone

    @gateway_timezone.setter
    def gateway_timezone(self, gateway_timezone):
        """Sets the gateway_timezone of this UpdateGatewayInformationInput.


        :param gateway_timezone: The gateway_timezone of this UpdateGatewayInformationInput.
        :type gateway_timezone: str
        """

        self._gateway_timezone = gateway_timezone

    @property
    def cloud_watch_log_group_arn(self):
        """Gets the cloud_watch_log_group_arn of this UpdateGatewayInformationInput.


        :return: The cloud_watch_log_group_arn of this UpdateGatewayInformationInput.
        :rtype: str
        """
        return self._cloud_watch_log_group_arn

    @cloud_watch_log_group_arn.setter
    def cloud_watch_log_group_arn(self, cloud_watch_log_group_arn):
        """Sets the cloud_watch_log_group_arn of this UpdateGatewayInformationInput.


        :param cloud_watch_log_group_arn: The cloud_watch_log_group_arn of this UpdateGatewayInformationInput.
        :type cloud_watch_log_group_arn: str
        """

        self._cloud_watch_log_group_arn = cloud_watch_log_group_arn

    @property
    def gateway_capacity(self):
        """Gets the gateway_capacity of this UpdateGatewayInformationInput.


        :return: The gateway_capacity of this UpdateGatewayInformationInput.
        :rtype: GatewayCapacity
        """
        return self._gateway_capacity

    @gateway_capacity.setter
    def gateway_capacity(self, gateway_capacity):
        """Sets the gateway_capacity of this UpdateGatewayInformationInput.


        :param gateway_capacity: The gateway_capacity of this UpdateGatewayInformationInput.
        :type gateway_capacity: GatewayCapacity
        """

        self._gateway_capacity = gateway_capacity
