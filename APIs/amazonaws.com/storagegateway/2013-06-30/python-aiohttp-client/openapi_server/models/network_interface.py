# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class NetworkInterface(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, ipv4_address: str=None, mac_address: str=None, ipv6_address: str=None):
        """NetworkInterface - a model defined in OpenAPI

        :param ipv4_address: The ipv4_address of this NetworkInterface.
        :param mac_address: The mac_address of this NetworkInterface.
        :param ipv6_address: The ipv6_address of this NetworkInterface.
        """
        self.openapi_types = {
            'ipv4_address': str,
            'mac_address': str,
            'ipv6_address': str
        }

        self.attribute_map = {
            'ipv4_address': 'Ipv4Address',
            'mac_address': 'MacAddress',
            'ipv6_address': 'Ipv6Address'
        }

        self._ipv4_address = ipv4_address
        self._mac_address = mac_address
        self._ipv6_address = ipv6_address

    @classmethod
    def from_dict(cls, dikt: dict) -> 'NetworkInterface':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The NetworkInterface of this NetworkInterface.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def ipv4_address(self):
        """Gets the ipv4_address of this NetworkInterface.


        :return: The ipv4_address of this NetworkInterface.
        :rtype: str
        """
        return self._ipv4_address

    @ipv4_address.setter
    def ipv4_address(self, ipv4_address):
        """Sets the ipv4_address of this NetworkInterface.


        :param ipv4_address: The ipv4_address of this NetworkInterface.
        :type ipv4_address: str
        """

        self._ipv4_address = ipv4_address

    @property
    def mac_address(self):
        """Gets the mac_address of this NetworkInterface.


        :return: The mac_address of this NetworkInterface.
        :rtype: str
        """
        return self._mac_address

    @mac_address.setter
    def mac_address(self, mac_address):
        """Sets the mac_address of this NetworkInterface.


        :param mac_address: The mac_address of this NetworkInterface.
        :type mac_address: str
        """

        self._mac_address = mac_address

    @property
    def ipv6_address(self):
        """Gets the ipv6_address of this NetworkInterface.


        :return: The ipv6_address of this NetworkInterface.
        :rtype: str
        """
        return self._ipv6_address

    @ipv6_address.setter
    def ipv6_address(self, ipv6_address):
        """Sets the ipv6_address of this NetworkInterface.


        :param ipv6_address: The ipv6_address of this NetworkInterface.
        :type ipv6_address: str
        """

        self._ipv6_address = ipv6_address
