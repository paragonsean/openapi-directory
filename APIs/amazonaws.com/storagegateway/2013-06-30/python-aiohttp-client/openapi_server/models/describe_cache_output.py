# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class DescribeCacheOutput(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, gateway_arn: str=None, disk_ids: List=None, cache_allocated_in_bytes: int=None, cache_used_percentage: float=None, cache_dirty_percentage: float=None, cache_hit_percentage: float=None, cache_miss_percentage: float=None):
        """DescribeCacheOutput - a model defined in OpenAPI

        :param gateway_arn: The gateway_arn of this DescribeCacheOutput.
        :param disk_ids: The disk_ids of this DescribeCacheOutput.
        :param cache_allocated_in_bytes: The cache_allocated_in_bytes of this DescribeCacheOutput.
        :param cache_used_percentage: The cache_used_percentage of this DescribeCacheOutput.
        :param cache_dirty_percentage: The cache_dirty_percentage of this DescribeCacheOutput.
        :param cache_hit_percentage: The cache_hit_percentage of this DescribeCacheOutput.
        :param cache_miss_percentage: The cache_miss_percentage of this DescribeCacheOutput.
        """
        self.openapi_types = {
            'gateway_arn': str,
            'disk_ids': List,
            'cache_allocated_in_bytes': int,
            'cache_used_percentage': float,
            'cache_dirty_percentage': float,
            'cache_hit_percentage': float,
            'cache_miss_percentage': float
        }

        self.attribute_map = {
            'gateway_arn': 'GatewayARN',
            'disk_ids': 'DiskIds',
            'cache_allocated_in_bytes': 'CacheAllocatedInBytes',
            'cache_used_percentage': 'CacheUsedPercentage',
            'cache_dirty_percentage': 'CacheDirtyPercentage',
            'cache_hit_percentage': 'CacheHitPercentage',
            'cache_miss_percentage': 'CacheMissPercentage'
        }

        self._gateway_arn = gateway_arn
        self._disk_ids = disk_ids
        self._cache_allocated_in_bytes = cache_allocated_in_bytes
        self._cache_used_percentage = cache_used_percentage
        self._cache_dirty_percentage = cache_dirty_percentage
        self._cache_hit_percentage = cache_hit_percentage
        self._cache_miss_percentage = cache_miss_percentage

    @classmethod
    def from_dict(cls, dikt: dict) -> 'DescribeCacheOutput':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The DescribeCacheOutput of this DescribeCacheOutput.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def gateway_arn(self):
        """Gets the gateway_arn of this DescribeCacheOutput.

        The Amazon Resource Name (ARN) of the gateway. Use the <a>ListGateways</a> operation to return a list of gateways for your account and Amazon Web Services Region.

        :return: The gateway_arn of this DescribeCacheOutput.
        :rtype: str
        """
        return self._gateway_arn

    @gateway_arn.setter
    def gateway_arn(self, gateway_arn):
        """Sets the gateway_arn of this DescribeCacheOutput.

        The Amazon Resource Name (ARN) of the gateway. Use the <a>ListGateways</a> operation to return a list of gateways for your account and Amazon Web Services Region.

        :param gateway_arn: The gateway_arn of this DescribeCacheOutput.
        :type gateway_arn: str
        """
        if gateway_arn is not None and len(gateway_arn) > 500:
            raise ValueError("Invalid value for `gateway_arn`, length must be less than or equal to `500`")
        if gateway_arn is not None and len(gateway_arn) < 50:
            raise ValueError("Invalid value for `gateway_arn`, length must be greater than or equal to `50`")

        self._gateway_arn = gateway_arn

    @property
    def disk_ids(self):
        """Gets the disk_ids of this DescribeCacheOutput.


        :return: The disk_ids of this DescribeCacheOutput.
        :rtype: List
        """
        return self._disk_ids

    @disk_ids.setter
    def disk_ids(self, disk_ids):
        """Sets the disk_ids of this DescribeCacheOutput.


        :param disk_ids: The disk_ids of this DescribeCacheOutput.
        :type disk_ids: List
        """

        self._disk_ids = disk_ids

    @property
    def cache_allocated_in_bytes(self):
        """Gets the cache_allocated_in_bytes of this DescribeCacheOutput.


        :return: The cache_allocated_in_bytes of this DescribeCacheOutput.
        :rtype: int
        """
        return self._cache_allocated_in_bytes

    @cache_allocated_in_bytes.setter
    def cache_allocated_in_bytes(self, cache_allocated_in_bytes):
        """Sets the cache_allocated_in_bytes of this DescribeCacheOutput.


        :param cache_allocated_in_bytes: The cache_allocated_in_bytes of this DescribeCacheOutput.
        :type cache_allocated_in_bytes: int
        """

        self._cache_allocated_in_bytes = cache_allocated_in_bytes

    @property
    def cache_used_percentage(self):
        """Gets the cache_used_percentage of this DescribeCacheOutput.


        :return: The cache_used_percentage of this DescribeCacheOutput.
        :rtype: float
        """
        return self._cache_used_percentage

    @cache_used_percentage.setter
    def cache_used_percentage(self, cache_used_percentage):
        """Sets the cache_used_percentage of this DescribeCacheOutput.


        :param cache_used_percentage: The cache_used_percentage of this DescribeCacheOutput.
        :type cache_used_percentage: float
        """

        self._cache_used_percentage = cache_used_percentage

    @property
    def cache_dirty_percentage(self):
        """Gets the cache_dirty_percentage of this DescribeCacheOutput.


        :return: The cache_dirty_percentage of this DescribeCacheOutput.
        :rtype: float
        """
        return self._cache_dirty_percentage

    @cache_dirty_percentage.setter
    def cache_dirty_percentage(self, cache_dirty_percentage):
        """Sets the cache_dirty_percentage of this DescribeCacheOutput.


        :param cache_dirty_percentage: The cache_dirty_percentage of this DescribeCacheOutput.
        :type cache_dirty_percentage: float
        """

        self._cache_dirty_percentage = cache_dirty_percentage

    @property
    def cache_hit_percentage(self):
        """Gets the cache_hit_percentage of this DescribeCacheOutput.


        :return: The cache_hit_percentage of this DescribeCacheOutput.
        :rtype: float
        """
        return self._cache_hit_percentage

    @cache_hit_percentage.setter
    def cache_hit_percentage(self, cache_hit_percentage):
        """Sets the cache_hit_percentage of this DescribeCacheOutput.


        :param cache_hit_percentage: The cache_hit_percentage of this DescribeCacheOutput.
        :type cache_hit_percentage: float
        """

        self._cache_hit_percentage = cache_hit_percentage

    @property
    def cache_miss_percentage(self):
        """Gets the cache_miss_percentage of this DescribeCacheOutput.


        :return: The cache_miss_percentage of this DescribeCacheOutput.
        :rtype: float
        """
        return self._cache_miss_percentage

    @cache_miss_percentage.setter
    def cache_miss_percentage(self, cache_miss_percentage):
        """Sets the cache_miss_percentage of this DescribeCacheOutput.


        :param cache_miss_percentage: The cache_miss_percentage of this DescribeCacheOutput.
        :type cache_miss_percentage: float
        """

        self._cache_miss_percentage = cache_miss_percentage
