# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class DescribeTapeArchivesOutput(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, tape_archives: List=None, marker: str=None):
        """DescribeTapeArchivesOutput - a model defined in OpenAPI

        :param tape_archives: The tape_archives of this DescribeTapeArchivesOutput.
        :param marker: The marker of this DescribeTapeArchivesOutput.
        """
        self.openapi_types = {
            'tape_archives': List,
            'marker': str
        }

        self.attribute_map = {
            'tape_archives': 'TapeArchives',
            'marker': 'Marker'
        }

        self._tape_archives = tape_archives
        self._marker = marker

    @classmethod
    def from_dict(cls, dikt: dict) -> 'DescribeTapeArchivesOutput':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The DescribeTapeArchivesOutput of this DescribeTapeArchivesOutput.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def tape_archives(self):
        """Gets the tape_archives of this DescribeTapeArchivesOutput.


        :return: The tape_archives of this DescribeTapeArchivesOutput.
        :rtype: List
        """
        return self._tape_archives

    @tape_archives.setter
    def tape_archives(self, tape_archives):
        """Sets the tape_archives of this DescribeTapeArchivesOutput.


        :param tape_archives: The tape_archives of this DescribeTapeArchivesOutput.
        :type tape_archives: List
        """

        self._tape_archives = tape_archives

    @property
    def marker(self):
        """Gets the marker of this DescribeTapeArchivesOutput.


        :return: The marker of this DescribeTapeArchivesOutput.
        :rtype: str
        """
        return self._marker

    @marker.setter
    def marker(self, marker):
        """Sets the marker of this DescribeTapeArchivesOutput.


        :param marker: The marker of this DescribeTapeArchivesOutput.
        :type marker: str
        """

        self._marker = marker
