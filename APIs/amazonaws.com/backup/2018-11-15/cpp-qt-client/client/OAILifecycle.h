/**
 * AWS Backup
 * <fullname>Backup</fullname> <p>Backup is a unified backup service designed to protect Amazon Web Services services and their associated data. Backup simplifies the creation, migration, restoration, and deletion of backups, while also providing reporting and auditing.</p>
 *
 * The version of the OpenAPI document: 2018-11-15
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAILifecycle.h
 *
 * &lt;p&gt;Contains an array of &lt;code&gt;Transition&lt;/code&gt; objects specifying how long in days before a recovery point transitions to cold storage or is deleted.&lt;/p&gt; &lt;p&gt;Backups transitioned to cold storage must be stored in cold storage for a minimum of 90 days. Therefore, on the console, the “retention” setting must be 90 days greater than the “transition to cold after days” setting. The “transition to cold after days” setting cannot be changed after a backup has been transitioned to cold.&lt;/p&gt; &lt;p&gt;Resource types that are able to be transitioned to cold storage are listed in the \&quot;Lifecycle to cold storage\&quot; section of the &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/aws-backup/latest/devguide/whatisbackup.html#features-by-resource\&quot;&gt; Feature availability by resource&lt;/a&gt; table. Backup ignores this expression for other resource types.&lt;/p&gt;
 */

#ifndef OAILifecycle_H
#define OAILifecycle_H

#include <QJsonObject>


#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAILifecycle : public OAIObject {
public:
    OAILifecycle();
    OAILifecycle(QString json);
    ~OAILifecycle() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    qint32 getMoveToColdStorageAfterDays() const;
    void setMoveToColdStorageAfterDays(const qint32 &move_to_cold_storage_after_days);
    bool is_move_to_cold_storage_after_days_Set() const;
    bool is_move_to_cold_storage_after_days_Valid() const;

    qint32 getDeleteAfterDays() const;
    void setDeleteAfterDays(const qint32 &delete_after_days);
    bool is_delete_after_days_Set() const;
    bool is_delete_after_days_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    qint32 m_move_to_cold_storage_after_days;
    bool m_move_to_cold_storage_after_days_isSet;
    bool m_move_to_cold_storage_after_days_isValid;

    qint32 m_delete_after_days;
    bool m_delete_after_days_isSet;
    bool m_delete_after_days_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAILifecycle)

#endif // OAILifecycle_H
