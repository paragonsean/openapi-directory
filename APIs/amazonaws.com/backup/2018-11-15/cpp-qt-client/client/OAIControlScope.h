/**
 * AWS Backup
 * <fullname>Backup</fullname> <p>Backup is a unified backup service designed to protect Amazon Web Services services and their associated data. Backup simplifies the creation, migration, restoration, and deletion of backups, while also providing reporting and auditing.</p>
 *
 * The version of the OpenAPI document: 2018-11-15
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIControlScope.h
 *
 * &lt;p&gt;A framework consists of one or more controls. Each control has its own control scope. The control scope can include one or more resource types, a combination of a tag key and value, or a combination of one resource type and one resource ID. If no scope is specified, evaluations for the rule are triggered when any resource in your recording group changes in configuration.&lt;/p&gt; &lt;note&gt; &lt;p&gt;To set a control scope that includes all of a particular resource, leave the &lt;code&gt;ControlScope&lt;/code&gt; empty or do not pass it when calling &lt;code&gt;CreateFramework&lt;/code&gt;.&lt;/p&gt; &lt;/note&gt;
 */

#ifndef OAIControlScope_H
#define OAIControlScope_H

#include <QJsonObject>

#include <QList>
#include <QMap>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIControlScope : public OAIObject {
public:
    OAIControlScope();
    OAIControlScope(QString json);
    ~OAIControlScope() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QList getComplianceResourceIds() const;
    void setComplianceResourceIds(const QList &compliance_resource_ids);
    bool is_compliance_resource_ids_Set() const;
    bool is_compliance_resource_ids_Valid() const;

    QList getComplianceResourceTypes() const;
    void setComplianceResourceTypes(const QList &compliance_resource_types);
    bool is_compliance_resource_types_Set() const;
    bool is_compliance_resource_types_Valid() const;

    QMap getTags() const;
    void setTags(const QMap &tags);
    bool is_tags_Set() const;
    bool is_tags_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QList m_compliance_resource_ids;
    bool m_compliance_resource_ids_isSet;
    bool m_compliance_resource_ids_isValid;

    QList m_compliance_resource_types;
    bool m_compliance_resource_types_isSet;
    bool m_compliance_resource_types_isValid;

    QMap m_tags;
    bool m_tags_isSet;
    bool m_tags_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIControlScope)

#endif // OAIControlScope_H
