/**
 * AWS Backup
 * <fullname>Backup</fullname> <p>Backup is a unified backup service designed to protect Amazon Web Services services and their associated data. Backup simplifies the creation, migration, restoration, and deletion of backups, while also providing reporting and auditing.</p>
 *
 * The version of the OpenAPI document: 2018-11-15
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAICreateReportPlanOutput.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAICreateReportPlanOutput::OAICreateReportPlanOutput(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAICreateReportPlanOutput::OAICreateReportPlanOutput() {
    this->initializeModel();
}

OAICreateReportPlanOutput::~OAICreateReportPlanOutput() {}

void OAICreateReportPlanOutput::initializeModel() {

    m_report_plan_name_isSet = false;
    m_report_plan_name_isValid = false;

    m_report_plan_arn_isSet = false;
    m_report_plan_arn_isValid = false;

    m_creation_time_isSet = false;
    m_creation_time_isValid = false;
}

void OAICreateReportPlanOutput::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAICreateReportPlanOutput::fromJsonObject(QJsonObject json) {

    m_report_plan_name_isValid = ::OpenAPI::fromJsonValue(m_report_plan_name, json[QString("ReportPlanName")]);
    m_report_plan_name_isSet = !json[QString("ReportPlanName")].isNull() && m_report_plan_name_isValid;

    m_report_plan_arn_isValid = ::OpenAPI::fromJsonValue(m_report_plan_arn, json[QString("ReportPlanArn")]);
    m_report_plan_arn_isSet = !json[QString("ReportPlanArn")].isNull() && m_report_plan_arn_isValid;

    m_creation_time_isValid = ::OpenAPI::fromJsonValue(m_creation_time, json[QString("CreationTime")]);
    m_creation_time_isSet = !json[QString("CreationTime")].isNull() && m_creation_time_isValid;
}

QString OAICreateReportPlanOutput::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAICreateReportPlanOutput::asJsonObject() const {
    QJsonObject obj;
    if (m_report_plan_name_isSet) {
        obj.insert(QString("ReportPlanName"), ::OpenAPI::toJsonValue(m_report_plan_name));
    }
    if (m_report_plan_arn_isSet) {
        obj.insert(QString("ReportPlanArn"), ::OpenAPI::toJsonValue(m_report_plan_arn));
    }
    if (m_creation_time_isSet) {
        obj.insert(QString("CreationTime"), ::OpenAPI::toJsonValue(m_creation_time));
    }
    return obj;
}

QString OAICreateReportPlanOutput::getReportPlanName() const {
    return m_report_plan_name;
}
void OAICreateReportPlanOutput::setReportPlanName(const QString &report_plan_name) {
    m_report_plan_name = report_plan_name;
    m_report_plan_name_isSet = true;
}

bool OAICreateReportPlanOutput::is_report_plan_name_Set() const{
    return m_report_plan_name_isSet;
}

bool OAICreateReportPlanOutput::is_report_plan_name_Valid() const{
    return m_report_plan_name_isValid;
}

QString OAICreateReportPlanOutput::getReportPlanArn() const {
    return m_report_plan_arn;
}
void OAICreateReportPlanOutput::setReportPlanArn(const QString &report_plan_arn) {
    m_report_plan_arn = report_plan_arn;
    m_report_plan_arn_isSet = true;
}

bool OAICreateReportPlanOutput::is_report_plan_arn_Set() const{
    return m_report_plan_arn_isSet;
}

bool OAICreateReportPlanOutput::is_report_plan_arn_Valid() const{
    return m_report_plan_arn_isValid;
}

QDateTime OAICreateReportPlanOutput::getCreationTime() const {
    return m_creation_time;
}
void OAICreateReportPlanOutput::setCreationTime(const QDateTime &creation_time) {
    m_creation_time = creation_time;
    m_creation_time_isSet = true;
}

bool OAICreateReportPlanOutput::is_creation_time_Set() const{
    return m_creation_time_isSet;
}

bool OAICreateReportPlanOutput::is_creation_time_Valid() const{
    return m_creation_time_isValid;
}

bool OAICreateReportPlanOutput::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_report_plan_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_report_plan_arn_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_creation_time_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAICreateReportPlanOutput::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
