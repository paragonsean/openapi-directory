/**
 * AWS Backup
 * <fullname>Backup</fullname> <p>Backup is a unified backup service designed to protect Amazon Web Services services and their associated data. Backup simplifies the creation, migration, restoration, and deletion of backups, while also providing reporting and auditing.</p>
 *
 * The version of the OpenAPI document: 2018-11-15
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAICreateBackupSelection_request_BackupSelection.h
 *
 * &lt;p&gt;Used to specify a set of resources to a backup plan.&lt;/p&gt; &lt;p&gt;Specifying your desired &lt;code&gt;Conditions&lt;/code&gt;, &lt;code&gt;ListOfTags&lt;/code&gt;, &lt;code&gt;NotResources&lt;/code&gt;, and/or &lt;code&gt;Resources&lt;/code&gt; is recommended. If none of these are specified, Backup will attempt to select all supported and opted-in storage resources, which could have unintended cost implications.&lt;/p&gt;
 */

#ifndef OAICreateBackupSelection_request_BackupSelection_H
#define OAICreateBackupSelection_request_BackupSelection_H

#include <QJsonObject>

#include "OAICreateBackupSelection_request_BackupSelection_Conditions.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAICreateBackupSelection_request_BackupSelection_Conditions;

class OAICreateBackupSelection_request_BackupSelection : public OAIObject {
public:
    OAICreateBackupSelection_request_BackupSelection();
    OAICreateBackupSelection_request_BackupSelection(QString json);
    ~OAICreateBackupSelection_request_BackupSelection() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getSelectionName() const;
    void setSelectionName(const QString &selection_name);
    bool is_selection_name_Set() const;
    bool is_selection_name_Valid() const;

    QString getIamRoleArn() const;
    void setIamRoleArn(const QString &iam_role_arn);
    bool is_iam_role_arn_Set() const;
    bool is_iam_role_arn_Valid() const;

    QList getResources() const;
    void setResources(const QList &resources);
    bool is_resources_Set() const;
    bool is_resources_Valid() const;

    QList getListOfTags() const;
    void setListOfTags(const QList &list_of_tags);
    bool is_list_of_tags_Set() const;
    bool is_list_of_tags_Valid() const;

    QList getNotResources() const;
    void setNotResources(const QList &not_resources);
    bool is_not_resources_Set() const;
    bool is_not_resources_Valid() const;

    OAICreateBackupSelection_request_BackupSelection_Conditions getConditions() const;
    void setConditions(const OAICreateBackupSelection_request_BackupSelection_Conditions &conditions);
    bool is_conditions_Set() const;
    bool is_conditions_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_selection_name;
    bool m_selection_name_isSet;
    bool m_selection_name_isValid;

    QString m_iam_role_arn;
    bool m_iam_role_arn_isSet;
    bool m_iam_role_arn_isValid;

    QList m_resources;
    bool m_resources_isSet;
    bool m_resources_isValid;

    QList m_list_of_tags;
    bool m_list_of_tags_isSet;
    bool m_list_of_tags_isValid;

    QList m_not_resources;
    bool m_not_resources_isSet;
    bool m_not_resources_isValid;

    OAICreateBackupSelection_request_BackupSelection_Conditions m_conditions;
    bool m_conditions_isSet;
    bool m_conditions_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAICreateBackupSelection_request_BackupSelection)

#endif // OAICreateBackupSelection_request_BackupSelection_H
