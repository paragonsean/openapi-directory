/**
 * AWS Backup
 * <fullname>Backup</fullname> <p>Backup is a unified backup service designed to protect Amazon Web Services services and their associated data. Backup simplifies the creation, migration, restoration, and deletion of backups, while also providing reporting and auditing.</p>
 *
 * The version of the OpenAPI document: 2018-11-15
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIBackupPlanTemplatesListMember.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIBackupPlanTemplatesListMember::OAIBackupPlanTemplatesListMember(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIBackupPlanTemplatesListMember::OAIBackupPlanTemplatesListMember() {
    this->initializeModel();
}

OAIBackupPlanTemplatesListMember::~OAIBackupPlanTemplatesListMember() {}

void OAIBackupPlanTemplatesListMember::initializeModel() {

    m_backup_plan_template_id_isSet = false;
    m_backup_plan_template_id_isValid = false;

    m_backup_plan_template_name_isSet = false;
    m_backup_plan_template_name_isValid = false;
}

void OAIBackupPlanTemplatesListMember::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIBackupPlanTemplatesListMember::fromJsonObject(QJsonObject json) {

    m_backup_plan_template_id_isValid = ::OpenAPI::fromJsonValue(m_backup_plan_template_id, json[QString("BackupPlanTemplateId")]);
    m_backup_plan_template_id_isSet = !json[QString("BackupPlanTemplateId")].isNull() && m_backup_plan_template_id_isValid;

    m_backup_plan_template_name_isValid = ::OpenAPI::fromJsonValue(m_backup_plan_template_name, json[QString("BackupPlanTemplateName")]);
    m_backup_plan_template_name_isSet = !json[QString("BackupPlanTemplateName")].isNull() && m_backup_plan_template_name_isValid;
}

QString OAIBackupPlanTemplatesListMember::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIBackupPlanTemplatesListMember::asJsonObject() const {
    QJsonObject obj;
    if (m_backup_plan_template_id_isSet) {
        obj.insert(QString("BackupPlanTemplateId"), ::OpenAPI::toJsonValue(m_backup_plan_template_id));
    }
    if (m_backup_plan_template_name_isSet) {
        obj.insert(QString("BackupPlanTemplateName"), ::OpenAPI::toJsonValue(m_backup_plan_template_name));
    }
    return obj;
}

QString OAIBackupPlanTemplatesListMember::getBackupPlanTemplateId() const {
    return m_backup_plan_template_id;
}
void OAIBackupPlanTemplatesListMember::setBackupPlanTemplateId(const QString &backup_plan_template_id) {
    m_backup_plan_template_id = backup_plan_template_id;
    m_backup_plan_template_id_isSet = true;
}

bool OAIBackupPlanTemplatesListMember::is_backup_plan_template_id_Set() const{
    return m_backup_plan_template_id_isSet;
}

bool OAIBackupPlanTemplatesListMember::is_backup_plan_template_id_Valid() const{
    return m_backup_plan_template_id_isValid;
}

QString OAIBackupPlanTemplatesListMember::getBackupPlanTemplateName() const {
    return m_backup_plan_template_name;
}
void OAIBackupPlanTemplatesListMember::setBackupPlanTemplateName(const QString &backup_plan_template_name) {
    m_backup_plan_template_name = backup_plan_template_name;
    m_backup_plan_template_name_isSet = true;
}

bool OAIBackupPlanTemplatesListMember::is_backup_plan_template_name_Set() const{
    return m_backup_plan_template_name_isSet;
}

bool OAIBackupPlanTemplatesListMember::is_backup_plan_template_name_Valid() const{
    return m_backup_plan_template_name_isValid;
}

bool OAIBackupPlanTemplatesListMember::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_backup_plan_template_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_backup_plan_template_name_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIBackupPlanTemplatesListMember::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
