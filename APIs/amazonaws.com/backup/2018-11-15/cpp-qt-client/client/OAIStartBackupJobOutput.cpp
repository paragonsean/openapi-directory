/**
 * AWS Backup
 * <fullname>Backup</fullname> <p>Backup is a unified backup service designed to protect Amazon Web Services services and their associated data. Backup simplifies the creation, migration, restoration, and deletion of backups, while also providing reporting and auditing.</p>
 *
 * The version of the OpenAPI document: 2018-11-15
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIStartBackupJobOutput.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIStartBackupJobOutput::OAIStartBackupJobOutput(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIStartBackupJobOutput::OAIStartBackupJobOutput() {
    this->initializeModel();
}

OAIStartBackupJobOutput::~OAIStartBackupJobOutput() {}

void OAIStartBackupJobOutput::initializeModel() {

    m_backup_job_id_isSet = false;
    m_backup_job_id_isValid = false;

    m_recovery_point_arn_isSet = false;
    m_recovery_point_arn_isValid = false;

    m_creation_date_isSet = false;
    m_creation_date_isValid = false;

    m_is_parent_isSet = false;
    m_is_parent_isValid = false;
}

void OAIStartBackupJobOutput::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIStartBackupJobOutput::fromJsonObject(QJsonObject json) {

    m_backup_job_id_isValid = ::OpenAPI::fromJsonValue(m_backup_job_id, json[QString("BackupJobId")]);
    m_backup_job_id_isSet = !json[QString("BackupJobId")].isNull() && m_backup_job_id_isValid;

    m_recovery_point_arn_isValid = ::OpenAPI::fromJsonValue(m_recovery_point_arn, json[QString("RecoveryPointArn")]);
    m_recovery_point_arn_isSet = !json[QString("RecoveryPointArn")].isNull() && m_recovery_point_arn_isValid;

    m_creation_date_isValid = ::OpenAPI::fromJsonValue(m_creation_date, json[QString("CreationDate")]);
    m_creation_date_isSet = !json[QString("CreationDate")].isNull() && m_creation_date_isValid;

    m_is_parent_isValid = ::OpenAPI::fromJsonValue(m_is_parent, json[QString("IsParent")]);
    m_is_parent_isSet = !json[QString("IsParent")].isNull() && m_is_parent_isValid;
}

QString OAIStartBackupJobOutput::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIStartBackupJobOutput::asJsonObject() const {
    QJsonObject obj;
    if (m_backup_job_id_isSet) {
        obj.insert(QString("BackupJobId"), ::OpenAPI::toJsonValue(m_backup_job_id));
    }
    if (m_recovery_point_arn_isSet) {
        obj.insert(QString("RecoveryPointArn"), ::OpenAPI::toJsonValue(m_recovery_point_arn));
    }
    if (m_creation_date_isSet) {
        obj.insert(QString("CreationDate"), ::OpenAPI::toJsonValue(m_creation_date));
    }
    if (m_is_parent_isSet) {
        obj.insert(QString("IsParent"), ::OpenAPI::toJsonValue(m_is_parent));
    }
    return obj;
}

QString OAIStartBackupJobOutput::getBackupJobId() const {
    return m_backup_job_id;
}
void OAIStartBackupJobOutput::setBackupJobId(const QString &backup_job_id) {
    m_backup_job_id = backup_job_id;
    m_backup_job_id_isSet = true;
}

bool OAIStartBackupJobOutput::is_backup_job_id_Set() const{
    return m_backup_job_id_isSet;
}

bool OAIStartBackupJobOutput::is_backup_job_id_Valid() const{
    return m_backup_job_id_isValid;
}

QString OAIStartBackupJobOutput::getRecoveryPointArn() const {
    return m_recovery_point_arn;
}
void OAIStartBackupJobOutput::setRecoveryPointArn(const QString &recovery_point_arn) {
    m_recovery_point_arn = recovery_point_arn;
    m_recovery_point_arn_isSet = true;
}

bool OAIStartBackupJobOutput::is_recovery_point_arn_Set() const{
    return m_recovery_point_arn_isSet;
}

bool OAIStartBackupJobOutput::is_recovery_point_arn_Valid() const{
    return m_recovery_point_arn_isValid;
}

QDateTime OAIStartBackupJobOutput::getCreationDate() const {
    return m_creation_date;
}
void OAIStartBackupJobOutput::setCreationDate(const QDateTime &creation_date) {
    m_creation_date = creation_date;
    m_creation_date_isSet = true;
}

bool OAIStartBackupJobOutput::is_creation_date_Set() const{
    return m_creation_date_isSet;
}

bool OAIStartBackupJobOutput::is_creation_date_Valid() const{
    return m_creation_date_isValid;
}

bool OAIStartBackupJobOutput::getIsParent() const {
    return m_is_parent;
}
void OAIStartBackupJobOutput::setIsParent(const bool &is_parent) {
    m_is_parent = is_parent;
    m_is_parent_isSet = true;
}

bool OAIStartBackupJobOutput::is_is_parent_Set() const{
    return m_is_parent_isSet;
}

bool OAIStartBackupJobOutput::is_is_parent_Valid() const{
    return m_is_parent_isValid;
}

bool OAIStartBackupJobOutput::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_backup_job_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_recovery_point_arn_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_creation_date_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_is_parent_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIStartBackupJobOutput::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
