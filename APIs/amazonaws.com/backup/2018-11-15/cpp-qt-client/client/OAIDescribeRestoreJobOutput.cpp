/**
 * AWS Backup
 * <fullname>Backup</fullname> <p>Backup is a unified backup service designed to protect Amazon Web Services services and their associated data. Backup simplifies the creation, migration, restoration, and deletion of backups, while also providing reporting and auditing.</p>
 *
 * The version of the OpenAPI document: 2018-11-15
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIDescribeRestoreJobOutput.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIDescribeRestoreJobOutput::OAIDescribeRestoreJobOutput(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIDescribeRestoreJobOutput::OAIDescribeRestoreJobOutput() {
    this->initializeModel();
}

OAIDescribeRestoreJobOutput::~OAIDescribeRestoreJobOutput() {}

void OAIDescribeRestoreJobOutput::initializeModel() {

    m_account_id_isSet = false;
    m_account_id_isValid = false;

    m_restore_job_id_isSet = false;
    m_restore_job_id_isValid = false;

    m_recovery_point_arn_isSet = false;
    m_recovery_point_arn_isValid = false;

    m_creation_date_isSet = false;
    m_creation_date_isValid = false;

    m_completion_date_isSet = false;
    m_completion_date_isValid = false;

    m_status_isSet = false;
    m_status_isValid = false;

    m_status_message_isSet = false;
    m_status_message_isValid = false;

    m_percent_done_isSet = false;
    m_percent_done_isValid = false;

    m_backup_size_in_bytes_isSet = false;
    m_backup_size_in_bytes_isValid = false;

    m_iam_role_arn_isSet = false;
    m_iam_role_arn_isValid = false;

    m_expected_completion_time_minutes_isSet = false;
    m_expected_completion_time_minutes_isValid = false;

    m_created_resource_arn_isSet = false;
    m_created_resource_arn_isValid = false;

    m_resource_type_isSet = false;
    m_resource_type_isValid = false;
}

void OAIDescribeRestoreJobOutput::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIDescribeRestoreJobOutput::fromJsonObject(QJsonObject json) {

    m_account_id_isValid = ::OpenAPI::fromJsonValue(m_account_id, json[QString("AccountId")]);
    m_account_id_isSet = !json[QString("AccountId")].isNull() && m_account_id_isValid;

    m_restore_job_id_isValid = ::OpenAPI::fromJsonValue(m_restore_job_id, json[QString("RestoreJobId")]);
    m_restore_job_id_isSet = !json[QString("RestoreJobId")].isNull() && m_restore_job_id_isValid;

    m_recovery_point_arn_isValid = ::OpenAPI::fromJsonValue(m_recovery_point_arn, json[QString("RecoveryPointArn")]);
    m_recovery_point_arn_isSet = !json[QString("RecoveryPointArn")].isNull() && m_recovery_point_arn_isValid;

    m_creation_date_isValid = ::OpenAPI::fromJsonValue(m_creation_date, json[QString("CreationDate")]);
    m_creation_date_isSet = !json[QString("CreationDate")].isNull() && m_creation_date_isValid;

    m_completion_date_isValid = ::OpenAPI::fromJsonValue(m_completion_date, json[QString("CompletionDate")]);
    m_completion_date_isSet = !json[QString("CompletionDate")].isNull() && m_completion_date_isValid;

    m_status_isValid = ::OpenAPI::fromJsonValue(m_status, json[QString("Status")]);
    m_status_isSet = !json[QString("Status")].isNull() && m_status_isValid;

    m_status_message_isValid = ::OpenAPI::fromJsonValue(m_status_message, json[QString("StatusMessage")]);
    m_status_message_isSet = !json[QString("StatusMessage")].isNull() && m_status_message_isValid;

    m_percent_done_isValid = ::OpenAPI::fromJsonValue(m_percent_done, json[QString("PercentDone")]);
    m_percent_done_isSet = !json[QString("PercentDone")].isNull() && m_percent_done_isValid;

    m_backup_size_in_bytes_isValid = ::OpenAPI::fromJsonValue(m_backup_size_in_bytes, json[QString("BackupSizeInBytes")]);
    m_backup_size_in_bytes_isSet = !json[QString("BackupSizeInBytes")].isNull() && m_backup_size_in_bytes_isValid;

    m_iam_role_arn_isValid = ::OpenAPI::fromJsonValue(m_iam_role_arn, json[QString("IamRoleArn")]);
    m_iam_role_arn_isSet = !json[QString("IamRoleArn")].isNull() && m_iam_role_arn_isValid;

    m_expected_completion_time_minutes_isValid = ::OpenAPI::fromJsonValue(m_expected_completion_time_minutes, json[QString("ExpectedCompletionTimeMinutes")]);
    m_expected_completion_time_minutes_isSet = !json[QString("ExpectedCompletionTimeMinutes")].isNull() && m_expected_completion_time_minutes_isValid;

    m_created_resource_arn_isValid = ::OpenAPI::fromJsonValue(m_created_resource_arn, json[QString("CreatedResourceArn")]);
    m_created_resource_arn_isSet = !json[QString("CreatedResourceArn")].isNull() && m_created_resource_arn_isValid;

    m_resource_type_isValid = ::OpenAPI::fromJsonValue(m_resource_type, json[QString("ResourceType")]);
    m_resource_type_isSet = !json[QString("ResourceType")].isNull() && m_resource_type_isValid;
}

QString OAIDescribeRestoreJobOutput::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIDescribeRestoreJobOutput::asJsonObject() const {
    QJsonObject obj;
    if (m_account_id_isSet) {
        obj.insert(QString("AccountId"), ::OpenAPI::toJsonValue(m_account_id));
    }
    if (m_restore_job_id_isSet) {
        obj.insert(QString("RestoreJobId"), ::OpenAPI::toJsonValue(m_restore_job_id));
    }
    if (m_recovery_point_arn_isSet) {
        obj.insert(QString("RecoveryPointArn"), ::OpenAPI::toJsonValue(m_recovery_point_arn));
    }
    if (m_creation_date_isSet) {
        obj.insert(QString("CreationDate"), ::OpenAPI::toJsonValue(m_creation_date));
    }
    if (m_completion_date_isSet) {
        obj.insert(QString("CompletionDate"), ::OpenAPI::toJsonValue(m_completion_date));
    }
    if (m_status.isSet()) {
        obj.insert(QString("Status"), ::OpenAPI::toJsonValue(m_status));
    }
    if (m_status_message_isSet) {
        obj.insert(QString("StatusMessage"), ::OpenAPI::toJsonValue(m_status_message));
    }
    if (m_percent_done_isSet) {
        obj.insert(QString("PercentDone"), ::OpenAPI::toJsonValue(m_percent_done));
    }
    if (m_backup_size_in_bytes_isSet) {
        obj.insert(QString("BackupSizeInBytes"), ::OpenAPI::toJsonValue(m_backup_size_in_bytes));
    }
    if (m_iam_role_arn_isSet) {
        obj.insert(QString("IamRoleArn"), ::OpenAPI::toJsonValue(m_iam_role_arn));
    }
    if (m_expected_completion_time_minutes_isSet) {
        obj.insert(QString("ExpectedCompletionTimeMinutes"), ::OpenAPI::toJsonValue(m_expected_completion_time_minutes));
    }
    if (m_created_resource_arn_isSet) {
        obj.insert(QString("CreatedResourceArn"), ::OpenAPI::toJsonValue(m_created_resource_arn));
    }
    if (m_resource_type_isSet) {
        obj.insert(QString("ResourceType"), ::OpenAPI::toJsonValue(m_resource_type));
    }
    return obj;
}

QString OAIDescribeRestoreJobOutput::getAccountId() const {
    return m_account_id;
}
void OAIDescribeRestoreJobOutput::setAccountId(const QString &account_id) {
    m_account_id = account_id;
    m_account_id_isSet = true;
}

bool OAIDescribeRestoreJobOutput::is_account_id_Set() const{
    return m_account_id_isSet;
}

bool OAIDescribeRestoreJobOutput::is_account_id_Valid() const{
    return m_account_id_isValid;
}

QString OAIDescribeRestoreJobOutput::getRestoreJobId() const {
    return m_restore_job_id;
}
void OAIDescribeRestoreJobOutput::setRestoreJobId(const QString &restore_job_id) {
    m_restore_job_id = restore_job_id;
    m_restore_job_id_isSet = true;
}

bool OAIDescribeRestoreJobOutput::is_restore_job_id_Set() const{
    return m_restore_job_id_isSet;
}

bool OAIDescribeRestoreJobOutput::is_restore_job_id_Valid() const{
    return m_restore_job_id_isValid;
}

QString OAIDescribeRestoreJobOutput::getRecoveryPointArn() const {
    return m_recovery_point_arn;
}
void OAIDescribeRestoreJobOutput::setRecoveryPointArn(const QString &recovery_point_arn) {
    m_recovery_point_arn = recovery_point_arn;
    m_recovery_point_arn_isSet = true;
}

bool OAIDescribeRestoreJobOutput::is_recovery_point_arn_Set() const{
    return m_recovery_point_arn_isSet;
}

bool OAIDescribeRestoreJobOutput::is_recovery_point_arn_Valid() const{
    return m_recovery_point_arn_isValid;
}

QDateTime OAIDescribeRestoreJobOutput::getCreationDate() const {
    return m_creation_date;
}
void OAIDescribeRestoreJobOutput::setCreationDate(const QDateTime &creation_date) {
    m_creation_date = creation_date;
    m_creation_date_isSet = true;
}

bool OAIDescribeRestoreJobOutput::is_creation_date_Set() const{
    return m_creation_date_isSet;
}

bool OAIDescribeRestoreJobOutput::is_creation_date_Valid() const{
    return m_creation_date_isValid;
}

QDateTime OAIDescribeRestoreJobOutput::getCompletionDate() const {
    return m_completion_date;
}
void OAIDescribeRestoreJobOutput::setCompletionDate(const QDateTime &completion_date) {
    m_completion_date = completion_date;
    m_completion_date_isSet = true;
}

bool OAIDescribeRestoreJobOutput::is_completion_date_Set() const{
    return m_completion_date_isSet;
}

bool OAIDescribeRestoreJobOutput::is_completion_date_Valid() const{
    return m_completion_date_isValid;
}

OAIRestoreJobStatus OAIDescribeRestoreJobOutput::getStatus() const {
    return m_status;
}
void OAIDescribeRestoreJobOutput::setStatus(const OAIRestoreJobStatus &status) {
    m_status = status;
    m_status_isSet = true;
}

bool OAIDescribeRestoreJobOutput::is_status_Set() const{
    return m_status_isSet;
}

bool OAIDescribeRestoreJobOutput::is_status_Valid() const{
    return m_status_isValid;
}

QString OAIDescribeRestoreJobOutput::getStatusMessage() const {
    return m_status_message;
}
void OAIDescribeRestoreJobOutput::setStatusMessage(const QString &status_message) {
    m_status_message = status_message;
    m_status_message_isSet = true;
}

bool OAIDescribeRestoreJobOutput::is_status_message_Set() const{
    return m_status_message_isSet;
}

bool OAIDescribeRestoreJobOutput::is_status_message_Valid() const{
    return m_status_message_isValid;
}

QString OAIDescribeRestoreJobOutput::getPercentDone() const {
    return m_percent_done;
}
void OAIDescribeRestoreJobOutput::setPercentDone(const QString &percent_done) {
    m_percent_done = percent_done;
    m_percent_done_isSet = true;
}

bool OAIDescribeRestoreJobOutput::is_percent_done_Set() const{
    return m_percent_done_isSet;
}

bool OAIDescribeRestoreJobOutput::is_percent_done_Valid() const{
    return m_percent_done_isValid;
}

qint32 OAIDescribeRestoreJobOutput::getBackupSizeInBytes() const {
    return m_backup_size_in_bytes;
}
void OAIDescribeRestoreJobOutput::setBackupSizeInBytes(const qint32 &backup_size_in_bytes) {
    m_backup_size_in_bytes = backup_size_in_bytes;
    m_backup_size_in_bytes_isSet = true;
}

bool OAIDescribeRestoreJobOutput::is_backup_size_in_bytes_Set() const{
    return m_backup_size_in_bytes_isSet;
}

bool OAIDescribeRestoreJobOutput::is_backup_size_in_bytes_Valid() const{
    return m_backup_size_in_bytes_isValid;
}

QString OAIDescribeRestoreJobOutput::getIamRoleArn() const {
    return m_iam_role_arn;
}
void OAIDescribeRestoreJobOutput::setIamRoleArn(const QString &iam_role_arn) {
    m_iam_role_arn = iam_role_arn;
    m_iam_role_arn_isSet = true;
}

bool OAIDescribeRestoreJobOutput::is_iam_role_arn_Set() const{
    return m_iam_role_arn_isSet;
}

bool OAIDescribeRestoreJobOutput::is_iam_role_arn_Valid() const{
    return m_iam_role_arn_isValid;
}

qint32 OAIDescribeRestoreJobOutput::getExpectedCompletionTimeMinutes() const {
    return m_expected_completion_time_minutes;
}
void OAIDescribeRestoreJobOutput::setExpectedCompletionTimeMinutes(const qint32 &expected_completion_time_minutes) {
    m_expected_completion_time_minutes = expected_completion_time_minutes;
    m_expected_completion_time_minutes_isSet = true;
}

bool OAIDescribeRestoreJobOutput::is_expected_completion_time_minutes_Set() const{
    return m_expected_completion_time_minutes_isSet;
}

bool OAIDescribeRestoreJobOutput::is_expected_completion_time_minutes_Valid() const{
    return m_expected_completion_time_minutes_isValid;
}

QString OAIDescribeRestoreJobOutput::getCreatedResourceArn() const {
    return m_created_resource_arn;
}
void OAIDescribeRestoreJobOutput::setCreatedResourceArn(const QString &created_resource_arn) {
    m_created_resource_arn = created_resource_arn;
    m_created_resource_arn_isSet = true;
}

bool OAIDescribeRestoreJobOutput::is_created_resource_arn_Set() const{
    return m_created_resource_arn_isSet;
}

bool OAIDescribeRestoreJobOutput::is_created_resource_arn_Valid() const{
    return m_created_resource_arn_isValid;
}

QString OAIDescribeRestoreJobOutput::getResourceType() const {
    return m_resource_type;
}
void OAIDescribeRestoreJobOutput::setResourceType(const QString &resource_type) {
    m_resource_type = resource_type;
    m_resource_type_isSet = true;
}

bool OAIDescribeRestoreJobOutput::is_resource_type_Set() const{
    return m_resource_type_isSet;
}

bool OAIDescribeRestoreJobOutput::is_resource_type_Valid() const{
    return m_resource_type_isValid;
}

bool OAIDescribeRestoreJobOutput::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_account_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_restore_job_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_recovery_point_arn_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_creation_date_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_completion_date_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_status.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_status_message_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_percent_done_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_backup_size_in_bytes_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_iam_role_arn_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_expected_completion_time_minutes_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_created_resource_arn_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_resource_type_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIDescribeRestoreJobOutput::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
