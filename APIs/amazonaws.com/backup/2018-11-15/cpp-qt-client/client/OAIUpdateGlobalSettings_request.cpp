/**
 * AWS Backup
 * <fullname>Backup</fullname> <p>Backup is a unified backup service designed to protect Amazon Web Services services and their associated data. Backup simplifies the creation, migration, restoration, and deletion of backups, while also providing reporting and auditing.</p>
 *
 * The version of the OpenAPI document: 2018-11-15
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIUpdateGlobalSettings_request.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIUpdateGlobalSettings_request::OAIUpdateGlobalSettings_request(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIUpdateGlobalSettings_request::OAIUpdateGlobalSettings_request() {
    this->initializeModel();
}

OAIUpdateGlobalSettings_request::~OAIUpdateGlobalSettings_request() {}

void OAIUpdateGlobalSettings_request::initializeModel() {

    m_global_settings_isSet = false;
    m_global_settings_isValid = false;
}

void OAIUpdateGlobalSettings_request::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIUpdateGlobalSettings_request::fromJsonObject(QJsonObject json) {

    m_global_settings_isValid = ::OpenAPI::fromJsonValue(m_global_settings, json[QString("GlobalSettings")]);
    m_global_settings_isSet = !json[QString("GlobalSettings")].isNull() && m_global_settings_isValid;
}

QString OAIUpdateGlobalSettings_request::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIUpdateGlobalSettings_request::asJsonObject() const {
    QJsonObject obj;
    if (m_global_settings.size() > 0) {
        obj.insert(QString("GlobalSettings"), ::OpenAPI::toJsonValue(m_global_settings));
    }
    return obj;
}

QMap<QString, QString> OAIUpdateGlobalSettings_request::getGlobalSettings() const {
    return m_global_settings;
}
void OAIUpdateGlobalSettings_request::setGlobalSettings(const QMap<QString, QString> &global_settings) {
    m_global_settings = global_settings;
    m_global_settings_isSet = true;
}

bool OAIUpdateGlobalSettings_request::is_global_settings_Set() const{
    return m_global_settings_isSet;
}

bool OAIUpdateGlobalSettings_request::is_global_settings_Valid() const{
    return m_global_settings_isValid;
}

bool OAIUpdateGlobalSettings_request::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_global_settings.size() > 0) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIUpdateGlobalSettings_request::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
