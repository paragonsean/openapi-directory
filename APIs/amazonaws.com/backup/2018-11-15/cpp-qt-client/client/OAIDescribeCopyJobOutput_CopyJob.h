/**
 * AWS Backup
 * <fullname>Backup</fullname> <p>Backup is a unified backup service designed to protect Amazon Web Services services and their associated data. Backup simplifies the creation, migration, restoration, and deletion of backups, while also providing reporting and auditing.</p>
 *
 * The version of the OpenAPI document: 2018-11-15
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIDescribeCopyJobOutput_CopyJob.h
 *
 * 
 */

#ifndef OAIDescribeCopyJobOutput_CopyJob_H
#define OAIDescribeCopyJobOutput_CopyJob_H

#include <QJsonObject>

#include "OAICopyJobState.h"
#include "OAIRecoveryPointCreator.h"
#include <QDateTime>
#include <QMap>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIRecoveryPointCreator;

class OAIDescribeCopyJobOutput_CopyJob : public OAIObject {
public:
    OAIDescribeCopyJobOutput_CopyJob();
    OAIDescribeCopyJobOutput_CopyJob(QString json);
    ~OAIDescribeCopyJobOutput_CopyJob() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getAccountId() const;
    void setAccountId(const QString &account_id);
    bool is_account_id_Set() const;
    bool is_account_id_Valid() const;

    QString getCopyJobId() const;
    void setCopyJobId(const QString &copy_job_id);
    bool is_copy_job_id_Set() const;
    bool is_copy_job_id_Valid() const;

    QString getSourceBackupVaultArn() const;
    void setSourceBackupVaultArn(const QString &source_backup_vault_arn);
    bool is_source_backup_vault_arn_Set() const;
    bool is_source_backup_vault_arn_Valid() const;

    QString getSourceRecoveryPointArn() const;
    void setSourceRecoveryPointArn(const QString &source_recovery_point_arn);
    bool is_source_recovery_point_arn_Set() const;
    bool is_source_recovery_point_arn_Valid() const;

    QString getDestinationBackupVaultArn() const;
    void setDestinationBackupVaultArn(const QString &destination_backup_vault_arn);
    bool is_destination_backup_vault_arn_Set() const;
    bool is_destination_backup_vault_arn_Valid() const;

    QString getDestinationRecoveryPointArn() const;
    void setDestinationRecoveryPointArn(const QString &destination_recovery_point_arn);
    bool is_destination_recovery_point_arn_Set() const;
    bool is_destination_recovery_point_arn_Valid() const;

    QString getResourceArn() const;
    void setResourceArn(const QString &resource_arn);
    bool is_resource_arn_Set() const;
    bool is_resource_arn_Valid() const;

    QDateTime getCreationDate() const;
    void setCreationDate(const QDateTime &creation_date);
    bool is_creation_date_Set() const;
    bool is_creation_date_Valid() const;

    QDateTime getCompletionDate() const;
    void setCompletionDate(const QDateTime &completion_date);
    bool is_completion_date_Set() const;
    bool is_completion_date_Valid() const;

    OAICopyJobState getState() const;
    void setState(const OAICopyJobState &state);
    bool is_state_Set() const;
    bool is_state_Valid() const;

    QString getStatusMessage() const;
    void setStatusMessage(const QString &status_message);
    bool is_status_message_Set() const;
    bool is_status_message_Valid() const;

    qint32 getBackupSizeInBytes() const;
    void setBackupSizeInBytes(const qint32 &backup_size_in_bytes);
    bool is_backup_size_in_bytes_Set() const;
    bool is_backup_size_in_bytes_Valid() const;

    QString getIamRoleArn() const;
    void setIamRoleArn(const QString &iam_role_arn);
    bool is_iam_role_arn_Set() const;
    bool is_iam_role_arn_Valid() const;

    OAIRecoveryPointCreator getCreatedBy() const;
    void setCreatedBy(const OAIRecoveryPointCreator &created_by);
    bool is_created_by_Set() const;
    bool is_created_by_Valid() const;

    QString getResourceType() const;
    void setResourceType(const QString &resource_type);
    bool is_resource_type_Set() const;
    bool is_resource_type_Valid() const;

    QString getParentJobId() const;
    void setParentJobId(const QString &parent_job_id);
    bool is_parent_job_id_Set() const;
    bool is_parent_job_id_Valid() const;

    bool getIsParent() const;
    void setIsParent(const bool &is_parent);
    bool is_is_parent_Set() const;
    bool is_is_parent_Valid() const;

    QString getCompositeMemberIdentifier() const;
    void setCompositeMemberIdentifier(const QString &composite_member_identifier);
    bool is_composite_member_identifier_Set() const;
    bool is_composite_member_identifier_Valid() const;

    qint32 getNumberOfChildJobs() const;
    void setNumberOfChildJobs(const qint32 &number_of_child_jobs);
    bool is_number_of_child_jobs_Set() const;
    bool is_number_of_child_jobs_Valid() const;

    QMap getChildJobsInState() const;
    void setChildJobsInState(const QMap &child_jobs_in_state);
    bool is_child_jobs_in_state_Set() const;
    bool is_child_jobs_in_state_Valid() const;

    QString getResourceName() const;
    void setResourceName(const QString &resource_name);
    bool is_resource_name_Set() const;
    bool is_resource_name_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_account_id;
    bool m_account_id_isSet;
    bool m_account_id_isValid;

    QString m_copy_job_id;
    bool m_copy_job_id_isSet;
    bool m_copy_job_id_isValid;

    QString m_source_backup_vault_arn;
    bool m_source_backup_vault_arn_isSet;
    bool m_source_backup_vault_arn_isValid;

    QString m_source_recovery_point_arn;
    bool m_source_recovery_point_arn_isSet;
    bool m_source_recovery_point_arn_isValid;

    QString m_destination_backup_vault_arn;
    bool m_destination_backup_vault_arn_isSet;
    bool m_destination_backup_vault_arn_isValid;

    QString m_destination_recovery_point_arn;
    bool m_destination_recovery_point_arn_isSet;
    bool m_destination_recovery_point_arn_isValid;

    QString m_resource_arn;
    bool m_resource_arn_isSet;
    bool m_resource_arn_isValid;

    QDateTime m_creation_date;
    bool m_creation_date_isSet;
    bool m_creation_date_isValid;

    QDateTime m_completion_date;
    bool m_completion_date_isSet;
    bool m_completion_date_isValid;

    OAICopyJobState m_state;
    bool m_state_isSet;
    bool m_state_isValid;

    QString m_status_message;
    bool m_status_message_isSet;
    bool m_status_message_isValid;

    qint32 m_backup_size_in_bytes;
    bool m_backup_size_in_bytes_isSet;
    bool m_backup_size_in_bytes_isValid;

    QString m_iam_role_arn;
    bool m_iam_role_arn_isSet;
    bool m_iam_role_arn_isValid;

    OAIRecoveryPointCreator m_created_by;
    bool m_created_by_isSet;
    bool m_created_by_isValid;

    QString m_resource_type;
    bool m_resource_type_isSet;
    bool m_resource_type_isValid;

    QString m_parent_job_id;
    bool m_parent_job_id_isSet;
    bool m_parent_job_id_isValid;

    bool m_is_parent;
    bool m_is_parent_isSet;
    bool m_is_parent_isValid;

    QString m_composite_member_identifier;
    bool m_composite_member_identifier_isSet;
    bool m_composite_member_identifier_isValid;

    qint32 m_number_of_child_jobs;
    bool m_number_of_child_jobs_isSet;
    bool m_number_of_child_jobs_isValid;

    QMap m_child_jobs_in_state;
    bool m_child_jobs_in_state_isSet;
    bool m_child_jobs_in_state_isValid;

    QString m_resource_name;
    bool m_resource_name_isSet;
    bool m_resource_name_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIDescribeCopyJobOutput_CopyJob)

#endif // OAIDescribeCopyJobOutput_CopyJob_H
