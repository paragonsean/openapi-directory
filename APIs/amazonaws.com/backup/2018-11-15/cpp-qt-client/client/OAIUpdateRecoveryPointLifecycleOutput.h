/**
 * AWS Backup
 * <fullname>Backup</fullname> <p>Backup is a unified backup service designed to protect Amazon Web Services services and their associated data. Backup simplifies the creation, migration, restoration, and deletion of backups, while also providing reporting and auditing.</p>
 *
 * The version of the OpenAPI document: 2018-11-15
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIUpdateRecoveryPointLifecycleOutput.h
 *
 * 
 */

#ifndef OAIUpdateRecoveryPointLifecycleOutput_H
#define OAIUpdateRecoveryPointLifecycleOutput_H

#include <QJsonObject>

#include "OAIDescribeRecoveryPointOutput_CalculatedLifecycle.h"
#include "OAIUpdateRecoveryPointLifecycleOutput_Lifecycle.h"
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIUpdateRecoveryPointLifecycleOutput_Lifecycle;
class OAIDescribeRecoveryPointOutput_CalculatedLifecycle;

class OAIUpdateRecoveryPointLifecycleOutput : public OAIObject {
public:
    OAIUpdateRecoveryPointLifecycleOutput();
    OAIUpdateRecoveryPointLifecycleOutput(QString json);
    ~OAIUpdateRecoveryPointLifecycleOutput() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getBackupVaultArn() const;
    void setBackupVaultArn(const QString &backup_vault_arn);
    bool is_backup_vault_arn_Set() const;
    bool is_backup_vault_arn_Valid() const;

    QString getRecoveryPointArn() const;
    void setRecoveryPointArn(const QString &recovery_point_arn);
    bool is_recovery_point_arn_Set() const;
    bool is_recovery_point_arn_Valid() const;

    OAIUpdateRecoveryPointLifecycleOutput_Lifecycle getLifecycle() const;
    void setLifecycle(const OAIUpdateRecoveryPointLifecycleOutput_Lifecycle &lifecycle);
    bool is_lifecycle_Set() const;
    bool is_lifecycle_Valid() const;

    OAIDescribeRecoveryPointOutput_CalculatedLifecycle getCalculatedLifecycle() const;
    void setCalculatedLifecycle(const OAIDescribeRecoveryPointOutput_CalculatedLifecycle &calculated_lifecycle);
    bool is_calculated_lifecycle_Set() const;
    bool is_calculated_lifecycle_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_backup_vault_arn;
    bool m_backup_vault_arn_isSet;
    bool m_backup_vault_arn_isValid;

    QString m_recovery_point_arn;
    bool m_recovery_point_arn_isSet;
    bool m_recovery_point_arn_isValid;

    OAIUpdateRecoveryPointLifecycleOutput_Lifecycle m_lifecycle;
    bool m_lifecycle_isSet;
    bool m_lifecycle_isValid;

    OAIDescribeRecoveryPointOutput_CalculatedLifecycle m_calculated_lifecycle;
    bool m_calculated_lifecycle_isSet;
    bool m_calculated_lifecycle_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIUpdateRecoveryPointLifecycleOutput)

#endif // OAIUpdateRecoveryPointLifecycleOutput_H
