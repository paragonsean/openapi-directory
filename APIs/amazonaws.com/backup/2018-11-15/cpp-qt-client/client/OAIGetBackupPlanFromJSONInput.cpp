/**
 * AWS Backup
 * <fullname>Backup</fullname> <p>Backup is a unified backup service designed to protect Amazon Web Services services and their associated data. Backup simplifies the creation, migration, restoration, and deletion of backups, while also providing reporting and auditing.</p>
 *
 * The version of the OpenAPI document: 2018-11-15
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGetBackupPlanFromJSONInput.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGetBackupPlanFromJSONInput::OAIGetBackupPlanFromJSONInput(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGetBackupPlanFromJSONInput::OAIGetBackupPlanFromJSONInput() {
    this->initializeModel();
}

OAIGetBackupPlanFromJSONInput::~OAIGetBackupPlanFromJSONInput() {}

void OAIGetBackupPlanFromJSONInput::initializeModel() {

    m_backup_plan_template_json_isSet = false;
    m_backup_plan_template_json_isValid = false;
}

void OAIGetBackupPlanFromJSONInput::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGetBackupPlanFromJSONInput::fromJsonObject(QJsonObject json) {

    m_backup_plan_template_json_isValid = ::OpenAPI::fromJsonValue(m_backup_plan_template_json, json[QString("BackupPlanTemplateJson")]);
    m_backup_plan_template_json_isSet = !json[QString("BackupPlanTemplateJson")].isNull() && m_backup_plan_template_json_isValid;
}

QString OAIGetBackupPlanFromJSONInput::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGetBackupPlanFromJSONInput::asJsonObject() const {
    QJsonObject obj;
    if (m_backup_plan_template_json_isSet) {
        obj.insert(QString("BackupPlanTemplateJson"), ::OpenAPI::toJsonValue(m_backup_plan_template_json));
    }
    return obj;
}

QString OAIGetBackupPlanFromJSONInput::getBackupPlanTemplateJson() const {
    return m_backup_plan_template_json;
}
void OAIGetBackupPlanFromJSONInput::setBackupPlanTemplateJson(const QString &backup_plan_template_json) {
    m_backup_plan_template_json = backup_plan_template_json;
    m_backup_plan_template_json_isSet = true;
}

bool OAIGetBackupPlanFromJSONInput::is_backup_plan_template_json_Set() const{
    return m_backup_plan_template_json_isSet;
}

bool OAIGetBackupPlanFromJSONInput::is_backup_plan_template_json_Valid() const{
    return m_backup_plan_template_json_isValid;
}

bool OAIGetBackupPlanFromJSONInput::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_backup_plan_template_json_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGetBackupPlanFromJSONInput::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_backup_plan_template_json_isValid && true;
}

} // namespace OpenAPI
