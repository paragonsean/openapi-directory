/**
 * AWS Backup
 * <fullname>Backup</fullname> <p>Backup is a unified backup service designed to protect Amazon Web Services services and their associated data. Backup simplifies the creation, migration, restoration, and deletion of backups, while also providing reporting and auditing.</p>
 *
 * The version of the OpenAPI document: 2018-11-15
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAICreateLegalHoldInput.h
 *
 * 
 */

#ifndef OAICreateLegalHoldInput_H
#define OAICreateLegalHoldInput_H

#include <QJsonObject>

#include "OAICreateLegalHoldOutput_RecoveryPointSelection.h"
#include <QMap>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAICreateLegalHoldOutput_RecoveryPointSelection;

class OAICreateLegalHoldInput : public OAIObject {
public:
    OAICreateLegalHoldInput();
    OAICreateLegalHoldInput(QString json);
    ~OAICreateLegalHoldInput() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getTitle() const;
    void setTitle(const QString &title);
    bool is_title_Set() const;
    bool is_title_Valid() const;

    QString getDescription() const;
    void setDescription(const QString &description);
    bool is_description_Set() const;
    bool is_description_Valid() const;

    QString getIdempotencyToken() const;
    void setIdempotencyToken(const QString &idempotency_token);
    bool is_idempotency_token_Set() const;
    bool is_idempotency_token_Valid() const;

    OAICreateLegalHoldOutput_RecoveryPointSelection getRecoveryPointSelection() const;
    void setRecoveryPointSelection(const OAICreateLegalHoldOutput_RecoveryPointSelection &recovery_point_selection);
    bool is_recovery_point_selection_Set() const;
    bool is_recovery_point_selection_Valid() const;

    QMap getTags() const;
    void setTags(const QMap &tags);
    bool is_tags_Set() const;
    bool is_tags_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_title;
    bool m_title_isSet;
    bool m_title_isValid;

    QString m_description;
    bool m_description_isSet;
    bool m_description_isValid;

    QString m_idempotency_token;
    bool m_idempotency_token_isSet;
    bool m_idempotency_token_isValid;

    OAICreateLegalHoldOutput_RecoveryPointSelection m_recovery_point_selection;
    bool m_recovery_point_selection_isSet;
    bool m_recovery_point_selection_isValid;

    QMap m_tags;
    bool m_tags_isSet;
    bool m_tags_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAICreateLegalHoldInput)

#endif // OAICreateLegalHoldInput_H
