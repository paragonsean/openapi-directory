/**
 * AWS Backup
 * <fullname>Backup</fullname> <p>Backup is a unified backup service designed to protect Amazon Web Services services and their associated data. Backup simplifies the creation, migration, restoration, and deletion of backups, while also providing reporting and auditing.</p>
 *
 * The version of the OpenAPI document: 2018-11-15
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAICreateReportPlan_request_ReportSetting.h
 *
 * Contains detailed information about a report setting.
 */

#ifndef OAICreateReportPlan_request_ReportSetting_H
#define OAICreateReportPlan_request_ReportSetting_H

#include <QJsonObject>

#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAICreateReportPlan_request_ReportSetting : public OAIObject {
public:
    OAICreateReportPlan_request_ReportSetting();
    OAICreateReportPlan_request_ReportSetting(QString json);
    ~OAICreateReportPlan_request_ReportSetting() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getReportTemplate() const;
    void setReportTemplate(const QString &report_template);
    bool is_report_template_Set() const;
    bool is_report_template_Valid() const;

    QList getFrameworkArns() const;
    void setFrameworkArns(const QList &framework_arns);
    bool is_framework_arns_Set() const;
    bool is_framework_arns_Valid() const;

    qint32 getNumberOfFrameworks() const;
    void setNumberOfFrameworks(const qint32 &number_of_frameworks);
    bool is_number_of_frameworks_Set() const;
    bool is_number_of_frameworks_Valid() const;

    QList getAccounts() const;
    void setAccounts(const QList &accounts);
    bool is_accounts_Set() const;
    bool is_accounts_Valid() const;

    QList getOrganizationUnits() const;
    void setOrganizationUnits(const QList &organization_units);
    bool is_organization_units_Set() const;
    bool is_organization_units_Valid() const;

    QList getRegions() const;
    void setRegions(const QList &regions);
    bool is_regions_Set() const;
    bool is_regions_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_report_template;
    bool m_report_template_isSet;
    bool m_report_template_isValid;

    QList m_framework_arns;
    bool m_framework_arns_isSet;
    bool m_framework_arns_isValid;

    qint32 m_number_of_frameworks;
    bool m_number_of_frameworks_isSet;
    bool m_number_of_frameworks_isValid;

    QList m_accounts;
    bool m_accounts_isSet;
    bool m_accounts_isValid;

    QList m_organization_units;
    bool m_organization_units_isSet;
    bool m_organization_units_isValid;

    QList m_regions;
    bool m_regions_isSet;
    bool m_regions_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAICreateReportPlan_request_ReportSetting)

#endif // OAICreateReportPlan_request_ReportSetting_H
