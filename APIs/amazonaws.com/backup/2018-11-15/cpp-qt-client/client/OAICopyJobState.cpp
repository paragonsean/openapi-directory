/**
 * AWS Backup
 * <fullname>Backup</fullname> <p>Backup is a unified backup service designed to protect Amazon Web Services services and their associated data. Backup simplifies the creation, migration, restoration, and deletion of backups, while also providing reporting and auditing.</p>
 *
 * The version of the OpenAPI document: 2018-11-15
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAICopyJobState.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAICopyJobState::OAICopyJobState(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAICopyJobState::OAICopyJobState() {
    this->initializeModel();
}

OAICopyJobState::~OAICopyJobState() {}

void OAICopyJobState::initializeModel() {

    m_value_isSet = false;
    m_value_isValid = false;
    m_value = eOAICopyJobState::INVALID_VALUE_OPENAPI_GENERATED;
}

void OAICopyJobState::fromJson(QString jsonString) {
    
    if ( jsonString.compare("CREATED", Qt::CaseInsensitive) == 0) {
        m_value = eOAICopyJobState::CREATED;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("RUNNING", Qt::CaseInsensitive) == 0) {
        m_value = eOAICopyJobState::RUNNING;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("COMPLETED", Qt::CaseInsensitive) == 0) {
        m_value = eOAICopyJobState::COMPLETED;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("FAILED", Qt::CaseInsensitive) == 0) {
        m_value = eOAICopyJobState::FAILED;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("PARTIAL", Qt::CaseInsensitive) == 0) {
        m_value = eOAICopyJobState::PARTIAL;
        m_value_isSet = m_value_isValid = true;
    }
}

void OAICopyJobState::fromJsonValue(QJsonValue json) {
fromJson(json.toString());
}

QString OAICopyJobState::asJson() const {
    
    QString val;
    switch (m_value){
        case eOAICopyJobState::CREATED:
            val = "CREATED";
            break;
        case eOAICopyJobState::RUNNING:
            val = "RUNNING";
            break;
        case eOAICopyJobState::COMPLETED:
            val = "COMPLETED";
            break;
        case eOAICopyJobState::FAILED:
            val = "FAILED";
            break;
        case eOAICopyJobState::PARTIAL:
            val = "PARTIAL";
            break;
        default:
            break;
    }
    return val;
}

QJsonValue OAICopyJobState::asJsonValue() const {
    
    return QJsonValue(asJson());
}


OAICopyJobState::eOAICopyJobState OAICopyJobState::getValue() const {
    return m_value;
}

void OAICopyJobState::setValue(const OAICopyJobState::eOAICopyJobState& value){
    m_value = value;
    m_value_isSet = true;
}
bool OAICopyJobState::isSet() const {
    
    return m_value_isSet;
}

bool OAICopyJobState::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_value_isValid;
}

} // namespace OpenAPI
