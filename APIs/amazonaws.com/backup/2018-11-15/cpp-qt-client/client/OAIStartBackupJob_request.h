/**
 * AWS Backup
 * <fullname>Backup</fullname> <p>Backup is a unified backup service designed to protect Amazon Web Services services and their associated data. Backup simplifies the creation, migration, restoration, and deletion of backups, while also providing reporting and auditing.</p>
 *
 * The version of the OpenAPI document: 2018-11-15
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIStartBackupJob_request.h
 *
 * 
 */

#ifndef OAIStartBackupJob_request_H
#define OAIStartBackupJob_request_H

#include <QJsonObject>

#include "OAIUpdateRecoveryPointLifecycle_request_Lifecycle.h"
#include <QMap>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIUpdateRecoveryPointLifecycle_request_Lifecycle;

class OAIStartBackupJob_request : public OAIObject {
public:
    OAIStartBackupJob_request();
    OAIStartBackupJob_request(QString json);
    ~OAIStartBackupJob_request() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getBackupVaultName() const;
    void setBackupVaultName(const QString &backup_vault_name);
    bool is_backup_vault_name_Set() const;
    bool is_backup_vault_name_Valid() const;

    QString getResourceArn() const;
    void setResourceArn(const QString &resource_arn);
    bool is_resource_arn_Set() const;
    bool is_resource_arn_Valid() const;

    QString getIamRoleArn() const;
    void setIamRoleArn(const QString &iam_role_arn);
    bool is_iam_role_arn_Set() const;
    bool is_iam_role_arn_Valid() const;

    QString getIdempotencyToken() const;
    void setIdempotencyToken(const QString &idempotency_token);
    bool is_idempotency_token_Set() const;
    bool is_idempotency_token_Valid() const;

    qint32 getStartWindowMinutes() const;
    void setStartWindowMinutes(const qint32 &start_window_minutes);
    bool is_start_window_minutes_Set() const;
    bool is_start_window_minutes_Valid() const;

    qint32 getCompleteWindowMinutes() const;
    void setCompleteWindowMinutes(const qint32 &complete_window_minutes);
    bool is_complete_window_minutes_Set() const;
    bool is_complete_window_minutes_Valid() const;

    OAIUpdateRecoveryPointLifecycle_request_Lifecycle getLifecycle() const;
    void setLifecycle(const OAIUpdateRecoveryPointLifecycle_request_Lifecycle &lifecycle);
    bool is_lifecycle_Set() const;
    bool is_lifecycle_Valid() const;

    QMap<QString, QString> getRecoveryPointTags() const;
    void setRecoveryPointTags(const QMap<QString, QString> &recovery_point_tags);
    bool is_recovery_point_tags_Set() const;
    bool is_recovery_point_tags_Valid() const;

    QMap<QString, QString> getBackupOptions() const;
    void setBackupOptions(const QMap<QString, QString> &backup_options);
    bool is_backup_options_Set() const;
    bool is_backup_options_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_backup_vault_name;
    bool m_backup_vault_name_isSet;
    bool m_backup_vault_name_isValid;

    QString m_resource_arn;
    bool m_resource_arn_isSet;
    bool m_resource_arn_isValid;

    QString m_iam_role_arn;
    bool m_iam_role_arn_isSet;
    bool m_iam_role_arn_isValid;

    QString m_idempotency_token;
    bool m_idempotency_token_isSet;
    bool m_idempotency_token_isValid;

    qint32 m_start_window_minutes;
    bool m_start_window_minutes_isSet;
    bool m_start_window_minutes_isValid;

    qint32 m_complete_window_minutes;
    bool m_complete_window_minutes_isSet;
    bool m_complete_window_minutes_isValid;

    OAIUpdateRecoveryPointLifecycle_request_Lifecycle m_lifecycle;
    bool m_lifecycle_isSet;
    bool m_lifecycle_isValid;

    QMap<QString, QString> m_recovery_point_tags;
    bool m_recovery_point_tags_isSet;
    bool m_recovery_point_tags_isValid;

    QMap<QString, QString> m_backup_options;
    bool m_backup_options_isSet;
    bool m_backup_options_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIStartBackupJob_request)

#endif // OAIStartBackupJob_request_H
