/**
 * AWS Backup
 * <fullname>Backup</fullname> <p>Backup is a unified backup service designed to protect Amazon Web Services services and their associated data. Backup simplifies the creation, migration, restoration, and deletion of backups, while also providing reporting and auditing.</p>
 *
 * The version of the OpenAPI document: 2018-11-15
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIUpdateFrameworkOutput.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIUpdateFrameworkOutput::OAIUpdateFrameworkOutput(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIUpdateFrameworkOutput::OAIUpdateFrameworkOutput() {
    this->initializeModel();
}

OAIUpdateFrameworkOutput::~OAIUpdateFrameworkOutput() {}

void OAIUpdateFrameworkOutput::initializeModel() {

    m_framework_name_isSet = false;
    m_framework_name_isValid = false;

    m_framework_arn_isSet = false;
    m_framework_arn_isValid = false;

    m_creation_time_isSet = false;
    m_creation_time_isValid = false;
}

void OAIUpdateFrameworkOutput::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIUpdateFrameworkOutput::fromJsonObject(QJsonObject json) {

    m_framework_name_isValid = ::OpenAPI::fromJsonValue(m_framework_name, json[QString("FrameworkName")]);
    m_framework_name_isSet = !json[QString("FrameworkName")].isNull() && m_framework_name_isValid;

    m_framework_arn_isValid = ::OpenAPI::fromJsonValue(m_framework_arn, json[QString("FrameworkArn")]);
    m_framework_arn_isSet = !json[QString("FrameworkArn")].isNull() && m_framework_arn_isValid;

    m_creation_time_isValid = ::OpenAPI::fromJsonValue(m_creation_time, json[QString("CreationTime")]);
    m_creation_time_isSet = !json[QString("CreationTime")].isNull() && m_creation_time_isValid;
}

QString OAIUpdateFrameworkOutput::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIUpdateFrameworkOutput::asJsonObject() const {
    QJsonObject obj;
    if (m_framework_name_isSet) {
        obj.insert(QString("FrameworkName"), ::OpenAPI::toJsonValue(m_framework_name));
    }
    if (m_framework_arn_isSet) {
        obj.insert(QString("FrameworkArn"), ::OpenAPI::toJsonValue(m_framework_arn));
    }
    if (m_creation_time_isSet) {
        obj.insert(QString("CreationTime"), ::OpenAPI::toJsonValue(m_creation_time));
    }
    return obj;
}

QString OAIUpdateFrameworkOutput::getFrameworkName() const {
    return m_framework_name;
}
void OAIUpdateFrameworkOutput::setFrameworkName(const QString &framework_name) {
    m_framework_name = framework_name;
    m_framework_name_isSet = true;
}

bool OAIUpdateFrameworkOutput::is_framework_name_Set() const{
    return m_framework_name_isSet;
}

bool OAIUpdateFrameworkOutput::is_framework_name_Valid() const{
    return m_framework_name_isValid;
}

QString OAIUpdateFrameworkOutput::getFrameworkArn() const {
    return m_framework_arn;
}
void OAIUpdateFrameworkOutput::setFrameworkArn(const QString &framework_arn) {
    m_framework_arn = framework_arn;
    m_framework_arn_isSet = true;
}

bool OAIUpdateFrameworkOutput::is_framework_arn_Set() const{
    return m_framework_arn_isSet;
}

bool OAIUpdateFrameworkOutput::is_framework_arn_Valid() const{
    return m_framework_arn_isValid;
}

QDateTime OAIUpdateFrameworkOutput::getCreationTime() const {
    return m_creation_time;
}
void OAIUpdateFrameworkOutput::setCreationTime(const QDateTime &creation_time) {
    m_creation_time = creation_time;
    m_creation_time_isSet = true;
}

bool OAIUpdateFrameworkOutput::is_creation_time_Set() const{
    return m_creation_time_isSet;
}

bool OAIUpdateFrameworkOutput::is_creation_time_Valid() const{
    return m_creation_time_isValid;
}

bool OAIUpdateFrameworkOutput::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_framework_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_framework_arn_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_creation_time_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIUpdateFrameworkOutput::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
