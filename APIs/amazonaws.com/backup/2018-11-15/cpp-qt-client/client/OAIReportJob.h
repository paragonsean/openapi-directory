/**
 * AWS Backup
 * <fullname>Backup</fullname> <p>Backup is a unified backup service designed to protect Amazon Web Services services and their associated data. Backup simplifies the creation, migration, restoration, and deletion of backups, while also providing reporting and auditing.</p>
 *
 * The version of the OpenAPI document: 2018-11-15
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIReportJob.h
 *
 * Contains detailed information about a report job. A report job compiles a report based on a report plan and publishes it to Amazon S3.
 */

#ifndef OAIReportJob_H
#define OAIReportJob_H

#include <QJsonObject>

#include "OAIReportJob_ReportDestination.h"
#include <QDateTime>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIReportJob_ReportDestination;

class OAIReportJob : public OAIObject {
public:
    OAIReportJob();
    OAIReportJob(QString json);
    ~OAIReportJob() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getReportJobId() const;
    void setReportJobId(const QString &report_job_id);
    bool is_report_job_id_Set() const;
    bool is_report_job_id_Valid() const;

    QString getReportPlanArn() const;
    void setReportPlanArn(const QString &report_plan_arn);
    bool is_report_plan_arn_Set() const;
    bool is_report_plan_arn_Valid() const;

    QString getReportTemplate() const;
    void setReportTemplate(const QString &report_template);
    bool is_report_template_Set() const;
    bool is_report_template_Valid() const;

    QDateTime getCreationTime() const;
    void setCreationTime(const QDateTime &creation_time);
    bool is_creation_time_Set() const;
    bool is_creation_time_Valid() const;

    QDateTime getCompletionTime() const;
    void setCompletionTime(const QDateTime &completion_time);
    bool is_completion_time_Set() const;
    bool is_completion_time_Valid() const;

    QString getStatus() const;
    void setStatus(const QString &status);
    bool is_status_Set() const;
    bool is_status_Valid() const;

    QString getStatusMessage() const;
    void setStatusMessage(const QString &status_message);
    bool is_status_message_Set() const;
    bool is_status_message_Valid() const;

    OAIReportJob_ReportDestination getReportDestination() const;
    void setReportDestination(const OAIReportJob_ReportDestination &report_destination);
    bool is_report_destination_Set() const;
    bool is_report_destination_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_report_job_id;
    bool m_report_job_id_isSet;
    bool m_report_job_id_isValid;

    QString m_report_plan_arn;
    bool m_report_plan_arn_isSet;
    bool m_report_plan_arn_isValid;

    QString m_report_template;
    bool m_report_template_isSet;
    bool m_report_template_isValid;

    QDateTime m_creation_time;
    bool m_creation_time_isSet;
    bool m_creation_time_isValid;

    QDateTime m_completion_time;
    bool m_completion_time_isSet;
    bool m_completion_time_isValid;

    QString m_status;
    bool m_status_isSet;
    bool m_status_isValid;

    QString m_status_message;
    bool m_status_message_isSet;
    bool m_status_message_isValid;

    OAIReportJob_ReportDestination m_report_destination;
    bool m_report_destination_isSet;
    bool m_report_destination_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIReportJob)

#endif // OAIReportJob_H
