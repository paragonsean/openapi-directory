/**
 * AWS Backup
 * <fullname>Backup</fullname> <p>Backup is a unified backup service designed to protect Amazon Web Services services and their associated data. Backup simplifies the creation, migration, restoration, and deletion of backups, while also providing reporting and auditing.</p>
 *
 * The version of the OpenAPI document: 2018-11-15
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAILegalHoldStatus.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAILegalHoldStatus::OAILegalHoldStatus(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAILegalHoldStatus::OAILegalHoldStatus() {
    this->initializeModel();
}

OAILegalHoldStatus::~OAILegalHoldStatus() {}

void OAILegalHoldStatus::initializeModel() {

    m_value_isSet = false;
    m_value_isValid = false;
    m_value = eOAILegalHoldStatus::INVALID_VALUE_OPENAPI_GENERATED;
}

void OAILegalHoldStatus::fromJson(QString jsonString) {
    
    if ( jsonString.compare("CREATING", Qt::CaseInsensitive) == 0) {
        m_value = eOAILegalHoldStatus::CREATING;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("ACTIVE", Qt::CaseInsensitive) == 0) {
        m_value = eOAILegalHoldStatus::ACTIVE;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("CANCELING", Qt::CaseInsensitive) == 0) {
        m_value = eOAILegalHoldStatus::CANCELING;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("CANCELED", Qt::CaseInsensitive) == 0) {
        m_value = eOAILegalHoldStatus::CANCELED;
        m_value_isSet = m_value_isValid = true;
    }
}

void OAILegalHoldStatus::fromJsonValue(QJsonValue json) {
fromJson(json.toString());
}

QString OAILegalHoldStatus::asJson() const {
    
    QString val;
    switch (m_value){
        case eOAILegalHoldStatus::CREATING:
            val = "CREATING";
            break;
        case eOAILegalHoldStatus::ACTIVE:
            val = "ACTIVE";
            break;
        case eOAILegalHoldStatus::CANCELING:
            val = "CANCELING";
            break;
        case eOAILegalHoldStatus::CANCELED:
            val = "CANCELED";
            break;
        default:
            break;
    }
    return val;
}

QJsonValue OAILegalHoldStatus::asJsonValue() const {
    
    return QJsonValue(asJson());
}


OAILegalHoldStatus::eOAILegalHoldStatus OAILegalHoldStatus::getValue() const {
    return m_value;
}

void OAILegalHoldStatus::setValue(const OAILegalHoldStatus::eOAILegalHoldStatus& value){
    m_value = value;
    m_value_isSet = true;
}
bool OAILegalHoldStatus::isSet() const {
    
    return m_value_isSet;
}

bool OAILegalHoldStatus::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_value_isValid;
}

} // namespace OpenAPI
