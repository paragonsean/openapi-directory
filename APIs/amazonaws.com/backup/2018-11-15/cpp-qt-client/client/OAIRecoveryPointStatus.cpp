/**
 * AWS Backup
 * <fullname>Backup</fullname> <p>Backup is a unified backup service designed to protect Amazon Web Services services and their associated data. Backup simplifies the creation, migration, restoration, and deletion of backups, while also providing reporting and auditing.</p>
 *
 * The version of the OpenAPI document: 2018-11-15
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIRecoveryPointStatus.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIRecoveryPointStatus::OAIRecoveryPointStatus(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIRecoveryPointStatus::OAIRecoveryPointStatus() {
    this->initializeModel();
}

OAIRecoveryPointStatus::~OAIRecoveryPointStatus() {}

void OAIRecoveryPointStatus::initializeModel() {

    m_value_isSet = false;
    m_value_isValid = false;
    m_value = eOAIRecoveryPointStatus::INVALID_VALUE_OPENAPI_GENERATED;
}

void OAIRecoveryPointStatus::fromJson(QString jsonString) {
    
    if ( jsonString.compare("COMPLETED", Qt::CaseInsensitive) == 0) {
        m_value = eOAIRecoveryPointStatus::COMPLETED;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("PARTIAL", Qt::CaseInsensitive) == 0) {
        m_value = eOAIRecoveryPointStatus::PARTIAL;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("DELETING", Qt::CaseInsensitive) == 0) {
        m_value = eOAIRecoveryPointStatus::DELETING;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("EXPIRED", Qt::CaseInsensitive) == 0) {
        m_value = eOAIRecoveryPointStatus::EXPIRED;
        m_value_isSet = m_value_isValid = true;
    }
}

void OAIRecoveryPointStatus::fromJsonValue(QJsonValue json) {
fromJson(json.toString());
}

QString OAIRecoveryPointStatus::asJson() const {
    
    QString val;
    switch (m_value){
        case eOAIRecoveryPointStatus::COMPLETED:
            val = "COMPLETED";
            break;
        case eOAIRecoveryPointStatus::PARTIAL:
            val = "PARTIAL";
            break;
        case eOAIRecoveryPointStatus::DELETING:
            val = "DELETING";
            break;
        case eOAIRecoveryPointStatus::EXPIRED:
            val = "EXPIRED";
            break;
        default:
            break;
    }
    return val;
}

QJsonValue OAIRecoveryPointStatus::asJsonValue() const {
    
    return QJsonValue(asJson());
}


OAIRecoveryPointStatus::eOAIRecoveryPointStatus OAIRecoveryPointStatus::getValue() const {
    return m_value;
}

void OAIRecoveryPointStatus::setValue(const OAIRecoveryPointStatus::eOAIRecoveryPointStatus& value){
    m_value = value;
    m_value_isSet = true;
}
bool OAIRecoveryPointStatus::isSet() const {
    
    return m_value_isSet;
}

bool OAIRecoveryPointStatus::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_value_isValid;
}

} // namespace OpenAPI
