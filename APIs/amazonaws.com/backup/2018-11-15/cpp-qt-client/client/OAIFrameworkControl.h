/**
 * AWS Backup
 * <fullname>Backup</fullname> <p>Backup is a unified backup service designed to protect Amazon Web Services services and their associated data. Backup simplifies the creation, migration, restoration, and deletion of backups, while also providing reporting and auditing.</p>
 *
 * The version of the OpenAPI document: 2018-11-15
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIFrameworkControl.h
 *
 * Contains detailed information about all of the controls of a framework. Each framework must contain at least one control.
 */

#ifndef OAIFrameworkControl_H
#define OAIFrameworkControl_H

#include <QJsonObject>

#include "OAIFrameworkControl_ControlScope.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIFrameworkControl_ControlScope;

class OAIFrameworkControl : public OAIObject {
public:
    OAIFrameworkControl();
    OAIFrameworkControl(QString json);
    ~OAIFrameworkControl() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getControlName() const;
    void setControlName(const QString &control_name);
    bool is_control_name_Set() const;
    bool is_control_name_Valid() const;

    QList getControlInputParameters() const;
    void setControlInputParameters(const QList &control_input_parameters);
    bool is_control_input_parameters_Set() const;
    bool is_control_input_parameters_Valid() const;

    OAIFrameworkControl_ControlScope getControlScope() const;
    void setControlScope(const OAIFrameworkControl_ControlScope &control_scope);
    bool is_control_scope_Set() const;
    bool is_control_scope_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_control_name;
    bool m_control_name_isSet;
    bool m_control_name_isValid;

    QList m_control_input_parameters;
    bool m_control_input_parameters_isSet;
    bool m_control_input_parameters_isValid;

    OAIFrameworkControl_ControlScope m_control_scope;
    bool m_control_scope_isSet;
    bool m_control_scope_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIFrameworkControl)

#endif // OAIFrameworkControl_H
