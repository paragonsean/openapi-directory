/**
 * AWS Backup
 * <fullname>Backup</fullname> <p>Backup is a unified backup service designed to protect Amazon Web Services services and their associated data. Backup simplifies the creation, migration, restoration, and deletion of backups, while also providing reporting and auditing.</p>
 *
 * The version of the OpenAPI document: 2018-11-15
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIDateRange.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIDateRange::OAIDateRange(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIDateRange::OAIDateRange() {
    this->initializeModel();
}

OAIDateRange::~OAIDateRange() {}

void OAIDateRange::initializeModel() {

    m_from_date_isSet = false;
    m_from_date_isValid = false;

    m_to_date_isSet = false;
    m_to_date_isValid = false;
}

void OAIDateRange::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIDateRange::fromJsonObject(QJsonObject json) {

    m_from_date_isValid = ::OpenAPI::fromJsonValue(m_from_date, json[QString("FromDate")]);
    m_from_date_isSet = !json[QString("FromDate")].isNull() && m_from_date_isValid;

    m_to_date_isValid = ::OpenAPI::fromJsonValue(m_to_date, json[QString("ToDate")]);
    m_to_date_isSet = !json[QString("ToDate")].isNull() && m_to_date_isValid;
}

QString OAIDateRange::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIDateRange::asJsonObject() const {
    QJsonObject obj;
    if (m_from_date_isSet) {
        obj.insert(QString("FromDate"), ::OpenAPI::toJsonValue(m_from_date));
    }
    if (m_to_date_isSet) {
        obj.insert(QString("ToDate"), ::OpenAPI::toJsonValue(m_to_date));
    }
    return obj;
}

QDateTime OAIDateRange::getFromDate() const {
    return m_from_date;
}
void OAIDateRange::setFromDate(const QDateTime &from_date) {
    m_from_date = from_date;
    m_from_date_isSet = true;
}

bool OAIDateRange::is_from_date_Set() const{
    return m_from_date_isSet;
}

bool OAIDateRange::is_from_date_Valid() const{
    return m_from_date_isValid;
}

QDateTime OAIDateRange::getToDate() const {
    return m_to_date;
}
void OAIDateRange::setToDate(const QDateTime &to_date) {
    m_to_date = to_date;
    m_to_date_isSet = true;
}

bool OAIDateRange::is_to_date_Set() const{
    return m_to_date_isSet;
}

bool OAIDateRange::is_to_date_Valid() const{
    return m_to_date_isValid;
}

bool OAIDateRange::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_from_date_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_to_date_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIDateRange::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_from_date_isValid && m_to_date_isValid && true;
}

} // namespace OpenAPI
