/**
 * AWS Backup
 * <fullname>Backup</fullname> <p>Backup is a unified backup service designed to protect Amazon Web Services services and their associated data. Backup simplifies the creation, migration, restoration, and deletion of backups, while also providing reporting and auditing.</p>
 *
 * The version of the OpenAPI document: 2018-11-15
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAICalculatedLifecycle.h
 *
 * &lt;p&gt;Contains &lt;code&gt;DeleteAt&lt;/code&gt; and &lt;code&gt;MoveToColdStorageAt&lt;/code&gt; timestamps, which are used to specify a lifecycle for a recovery point.&lt;/p&gt; &lt;p&gt;The lifecycle defines when a protected resource is transitioned to cold storage and when it expires. Backup transitions and expires backups automatically according to the lifecycle that you define.&lt;/p&gt; &lt;p&gt;Backups transitioned to cold storage must be stored in cold storage for a minimum of 90 days. Therefore, the “retention” setting must be 90 days greater than the “transition to cold after days” setting. The “transition to cold after days” setting cannot be changed after a backup has been transitioned to cold.&lt;/p&gt; &lt;p&gt;Resource types that are able to be transitioned to cold storage are listed in the \&quot;Lifecycle to cold storage\&quot; section of the &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/aws-backup/latest/devguide/whatisbackup.html#features-by-resource\&quot;&gt; Feature availability by resource&lt;/a&gt; table. Backup ignores this expression for other resource types.&lt;/p&gt;
 */

#ifndef OAICalculatedLifecycle_H
#define OAICalculatedLifecycle_H

#include <QJsonObject>

#include <QDateTime>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAICalculatedLifecycle : public OAIObject {
public:
    OAICalculatedLifecycle();
    OAICalculatedLifecycle(QString json);
    ~OAICalculatedLifecycle() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QDateTime getMoveToColdStorageAt() const;
    void setMoveToColdStorageAt(const QDateTime &move_to_cold_storage_at);
    bool is_move_to_cold_storage_at_Set() const;
    bool is_move_to_cold_storage_at_Valid() const;

    QDateTime getDeleteAt() const;
    void setDeleteAt(const QDateTime &delete_at);
    bool is_delete_at_Set() const;
    bool is_delete_at_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QDateTime m_move_to_cold_storage_at;
    bool m_move_to_cold_storage_at_isSet;
    bool m_move_to_cold_storage_at_isValid;

    QDateTime m_delete_at;
    bool m_delete_at_isSet;
    bool m_delete_at_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAICalculatedLifecycle)

#endif // OAICalculatedLifecycle_H
