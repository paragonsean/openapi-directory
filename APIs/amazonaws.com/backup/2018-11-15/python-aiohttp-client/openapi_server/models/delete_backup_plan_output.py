# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class DeleteBackupPlanOutput(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, backup_plan_id: str=None, backup_plan_arn: str=None, deletion_date: datetime=None, version_id: str=None):
        """DeleteBackupPlanOutput - a model defined in OpenAPI

        :param backup_plan_id: The backup_plan_id of this DeleteBackupPlanOutput.
        :param backup_plan_arn: The backup_plan_arn of this DeleteBackupPlanOutput.
        :param deletion_date: The deletion_date of this DeleteBackupPlanOutput.
        :param version_id: The version_id of this DeleteBackupPlanOutput.
        """
        self.openapi_types = {
            'backup_plan_id': str,
            'backup_plan_arn': str,
            'deletion_date': datetime,
            'version_id': str
        }

        self.attribute_map = {
            'backup_plan_id': 'BackupPlanId',
            'backup_plan_arn': 'BackupPlanArn',
            'deletion_date': 'DeletionDate',
            'version_id': 'VersionId'
        }

        self._backup_plan_id = backup_plan_id
        self._backup_plan_arn = backup_plan_arn
        self._deletion_date = deletion_date
        self._version_id = version_id

    @classmethod
    def from_dict(cls, dikt: dict) -> 'DeleteBackupPlanOutput':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The DeleteBackupPlanOutput of this DeleteBackupPlanOutput.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def backup_plan_id(self):
        """Gets the backup_plan_id of this DeleteBackupPlanOutput.


        :return: The backup_plan_id of this DeleteBackupPlanOutput.
        :rtype: str
        """
        return self._backup_plan_id

    @backup_plan_id.setter
    def backup_plan_id(self, backup_plan_id):
        """Sets the backup_plan_id of this DeleteBackupPlanOutput.


        :param backup_plan_id: The backup_plan_id of this DeleteBackupPlanOutput.
        :type backup_plan_id: str
        """

        self._backup_plan_id = backup_plan_id

    @property
    def backup_plan_arn(self):
        """Gets the backup_plan_arn of this DeleteBackupPlanOutput.


        :return: The backup_plan_arn of this DeleteBackupPlanOutput.
        :rtype: str
        """
        return self._backup_plan_arn

    @backup_plan_arn.setter
    def backup_plan_arn(self, backup_plan_arn):
        """Sets the backup_plan_arn of this DeleteBackupPlanOutput.


        :param backup_plan_arn: The backup_plan_arn of this DeleteBackupPlanOutput.
        :type backup_plan_arn: str
        """

        self._backup_plan_arn = backup_plan_arn

    @property
    def deletion_date(self):
        """Gets the deletion_date of this DeleteBackupPlanOutput.


        :return: The deletion_date of this DeleteBackupPlanOutput.
        :rtype: datetime
        """
        return self._deletion_date

    @deletion_date.setter
    def deletion_date(self, deletion_date):
        """Sets the deletion_date of this DeleteBackupPlanOutput.


        :param deletion_date: The deletion_date of this DeleteBackupPlanOutput.
        :type deletion_date: datetime
        """

        self._deletion_date = deletion_date

    @property
    def version_id(self):
        """Gets the version_id of this DeleteBackupPlanOutput.


        :return: The version_id of this DeleteBackupPlanOutput.
        :rtype: str
        """
        return self._version_id

    @version_id.setter
    def version_id(self, version_id):
        """Sets the version_id of this DeleteBackupPlanOutput.


        :param version_id: The version_id of this DeleteBackupPlanOutput.
        :type version_id: str
        """

        self._version_id = version_id
