# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.legal_hold_status import LegalHoldStatus
from openapi_server import util


class LegalHold(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, title: str=None, status: LegalHoldStatus=None, description: str=None, legal_hold_id: str=None, legal_hold_arn: str=None, creation_date: datetime=None, cancellation_date: datetime=None):
        """LegalHold - a model defined in OpenAPI

        :param title: The title of this LegalHold.
        :param status: The status of this LegalHold.
        :param description: The description of this LegalHold.
        :param legal_hold_id: The legal_hold_id of this LegalHold.
        :param legal_hold_arn: The legal_hold_arn of this LegalHold.
        :param creation_date: The creation_date of this LegalHold.
        :param cancellation_date: The cancellation_date of this LegalHold.
        """
        self.openapi_types = {
            'title': str,
            'status': LegalHoldStatus,
            'description': str,
            'legal_hold_id': str,
            'legal_hold_arn': str,
            'creation_date': datetime,
            'cancellation_date': datetime
        }

        self.attribute_map = {
            'title': 'Title',
            'status': 'Status',
            'description': 'Description',
            'legal_hold_id': 'LegalHoldId',
            'legal_hold_arn': 'LegalHoldArn',
            'creation_date': 'CreationDate',
            'cancellation_date': 'CancellationDate'
        }

        self._title = title
        self._status = status
        self._description = description
        self._legal_hold_id = legal_hold_id
        self._legal_hold_arn = legal_hold_arn
        self._creation_date = creation_date
        self._cancellation_date = cancellation_date

    @classmethod
    def from_dict(cls, dikt: dict) -> 'LegalHold':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The LegalHold of this LegalHold.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def title(self):
        """Gets the title of this LegalHold.


        :return: The title of this LegalHold.
        :rtype: str
        """
        return self._title

    @title.setter
    def title(self, title):
        """Sets the title of this LegalHold.


        :param title: The title of this LegalHold.
        :type title: str
        """

        self._title = title

    @property
    def status(self):
        """Gets the status of this LegalHold.


        :return: The status of this LegalHold.
        :rtype: LegalHoldStatus
        """
        return self._status

    @status.setter
    def status(self, status):
        """Sets the status of this LegalHold.


        :param status: The status of this LegalHold.
        :type status: LegalHoldStatus
        """

        self._status = status

    @property
    def description(self):
        """Gets the description of this LegalHold.


        :return: The description of this LegalHold.
        :rtype: str
        """
        return self._description

    @description.setter
    def description(self, description):
        """Sets the description of this LegalHold.


        :param description: The description of this LegalHold.
        :type description: str
        """

        self._description = description

    @property
    def legal_hold_id(self):
        """Gets the legal_hold_id of this LegalHold.


        :return: The legal_hold_id of this LegalHold.
        :rtype: str
        """
        return self._legal_hold_id

    @legal_hold_id.setter
    def legal_hold_id(self, legal_hold_id):
        """Sets the legal_hold_id of this LegalHold.


        :param legal_hold_id: The legal_hold_id of this LegalHold.
        :type legal_hold_id: str
        """

        self._legal_hold_id = legal_hold_id

    @property
    def legal_hold_arn(self):
        """Gets the legal_hold_arn of this LegalHold.


        :return: The legal_hold_arn of this LegalHold.
        :rtype: str
        """
        return self._legal_hold_arn

    @legal_hold_arn.setter
    def legal_hold_arn(self, legal_hold_arn):
        """Sets the legal_hold_arn of this LegalHold.


        :param legal_hold_arn: The legal_hold_arn of this LegalHold.
        :type legal_hold_arn: str
        """

        self._legal_hold_arn = legal_hold_arn

    @property
    def creation_date(self):
        """Gets the creation_date of this LegalHold.


        :return: The creation_date of this LegalHold.
        :rtype: datetime
        """
        return self._creation_date

    @creation_date.setter
    def creation_date(self, creation_date):
        """Sets the creation_date of this LegalHold.


        :param creation_date: The creation_date of this LegalHold.
        :type creation_date: datetime
        """

        self._creation_date = creation_date

    @property
    def cancellation_date(self):
        """Gets the cancellation_date of this LegalHold.


        :return: The cancellation_date of this LegalHold.
        :rtype: datetime
        """
        return self._cancellation_date

    @cancellation_date.setter
    def cancellation_date(self, cancellation_date):
        """Sets the cancellation_date of this LegalHold.


        :param cancellation_date: The cancellation_date of this LegalHold.
        :type cancellation_date: datetime
        """

        self._cancellation_date = cancellation_date
