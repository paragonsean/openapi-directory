# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.update_recovery_point_lifecycle_request_lifecycle import UpdateRecoveryPointLifecycleRequestLifecycle
import re
from openapi_server import util


class StartCopyJobRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, recovery_point_arn: str=None, source_backup_vault_name: str=None, destination_backup_vault_arn: str=None, iam_role_arn: str=None, idempotency_token: str=None, lifecycle: UpdateRecoveryPointLifecycleRequestLifecycle=None):
        """StartCopyJobRequest - a model defined in OpenAPI

        :param recovery_point_arn: The recovery_point_arn of this StartCopyJobRequest.
        :param source_backup_vault_name: The source_backup_vault_name of this StartCopyJobRequest.
        :param destination_backup_vault_arn: The destination_backup_vault_arn of this StartCopyJobRequest.
        :param iam_role_arn: The iam_role_arn of this StartCopyJobRequest.
        :param idempotency_token: The idempotency_token of this StartCopyJobRequest.
        :param lifecycle: The lifecycle of this StartCopyJobRequest.
        """
        self.openapi_types = {
            'recovery_point_arn': str,
            'source_backup_vault_name': str,
            'destination_backup_vault_arn': str,
            'iam_role_arn': str,
            'idempotency_token': str,
            'lifecycle': UpdateRecoveryPointLifecycleRequestLifecycle
        }

        self.attribute_map = {
            'recovery_point_arn': 'RecoveryPointArn',
            'source_backup_vault_name': 'SourceBackupVaultName',
            'destination_backup_vault_arn': 'DestinationBackupVaultArn',
            'iam_role_arn': 'IamRoleArn',
            'idempotency_token': 'IdempotencyToken',
            'lifecycle': 'Lifecycle'
        }

        self._recovery_point_arn = recovery_point_arn
        self._source_backup_vault_name = source_backup_vault_name
        self._destination_backup_vault_arn = destination_backup_vault_arn
        self._iam_role_arn = iam_role_arn
        self._idempotency_token = idempotency_token
        self._lifecycle = lifecycle

    @classmethod
    def from_dict(cls, dikt: dict) -> 'StartCopyJobRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The StartCopyJob_request of this StartCopyJobRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def recovery_point_arn(self):
        """Gets the recovery_point_arn of this StartCopyJobRequest.

        An ARN that uniquely identifies a recovery point to use for the copy job; for example, arn:aws:backup:us-east-1:123456789012:recovery-point:1EB3B5E7-9EB0-435A-A80B-108B488B0D45. 

        :return: The recovery_point_arn of this StartCopyJobRequest.
        :rtype: str
        """
        return self._recovery_point_arn

    @recovery_point_arn.setter
    def recovery_point_arn(self, recovery_point_arn):
        """Sets the recovery_point_arn of this StartCopyJobRequest.

        An ARN that uniquely identifies a recovery point to use for the copy job; for example, arn:aws:backup:us-east-1:123456789012:recovery-point:1EB3B5E7-9EB0-435A-A80B-108B488B0D45. 

        :param recovery_point_arn: The recovery_point_arn of this StartCopyJobRequest.
        :type recovery_point_arn: str
        """
        if recovery_point_arn is None:
            raise ValueError("Invalid value for `recovery_point_arn`, must not be `None`")

        self._recovery_point_arn = recovery_point_arn

    @property
    def source_backup_vault_name(self):
        """Gets the source_backup_vault_name of this StartCopyJobRequest.

        The name of a logical source container where backups are stored. Backup vaults are identified by names that are unique to the account used to create them and the Amazon Web Services Region where they are created. They consist of lowercase letters, numbers, and hyphens.

        :return: The source_backup_vault_name of this StartCopyJobRequest.
        :rtype: str
        """
        return self._source_backup_vault_name

    @source_backup_vault_name.setter
    def source_backup_vault_name(self, source_backup_vault_name):
        """Sets the source_backup_vault_name of this StartCopyJobRequest.

        The name of a logical source container where backups are stored. Backup vaults are identified by names that are unique to the account used to create them and the Amazon Web Services Region where they are created. They consist of lowercase letters, numbers, and hyphens.

        :param source_backup_vault_name: The source_backup_vault_name of this StartCopyJobRequest.
        :type source_backup_vault_name: str
        """
        if source_backup_vault_name is None:
            raise ValueError("Invalid value for `source_backup_vault_name`, must not be `None`")
        if source_backup_vault_name is not None and not re.search(r'^[a-zA-Z0-9\-\_]{2,50}$', source_backup_vault_name):
            raise ValueError("Invalid value for `source_backup_vault_name`, must be a follow pattern or equal to `/^[a-zA-Z0-9\-\_]{2,50}$/`")

        self._source_backup_vault_name = source_backup_vault_name

    @property
    def destination_backup_vault_arn(self):
        """Gets the destination_backup_vault_arn of this StartCopyJobRequest.

        An Amazon Resource Name (ARN) that uniquely identifies a destination backup vault to copy to; for example, <code>arn:aws:backup:us-east-1:123456789012:vault:aBackupVault</code>.

        :return: The destination_backup_vault_arn of this StartCopyJobRequest.
        :rtype: str
        """
        return self._destination_backup_vault_arn

    @destination_backup_vault_arn.setter
    def destination_backup_vault_arn(self, destination_backup_vault_arn):
        """Sets the destination_backup_vault_arn of this StartCopyJobRequest.

        An Amazon Resource Name (ARN) that uniquely identifies a destination backup vault to copy to; for example, <code>arn:aws:backup:us-east-1:123456789012:vault:aBackupVault</code>.

        :param destination_backup_vault_arn: The destination_backup_vault_arn of this StartCopyJobRequest.
        :type destination_backup_vault_arn: str
        """
        if destination_backup_vault_arn is None:
            raise ValueError("Invalid value for `destination_backup_vault_arn`, must not be `None`")

        self._destination_backup_vault_arn = destination_backup_vault_arn

    @property
    def iam_role_arn(self):
        """Gets the iam_role_arn of this StartCopyJobRequest.

        Specifies the IAM role ARN used to copy the target recovery point; for example, <code>arn:aws:iam::123456789012:role/S3Access</code>.

        :return: The iam_role_arn of this StartCopyJobRequest.
        :rtype: str
        """
        return self._iam_role_arn

    @iam_role_arn.setter
    def iam_role_arn(self, iam_role_arn):
        """Sets the iam_role_arn of this StartCopyJobRequest.

        Specifies the IAM role ARN used to copy the target recovery point; for example, <code>arn:aws:iam::123456789012:role/S3Access</code>.

        :param iam_role_arn: The iam_role_arn of this StartCopyJobRequest.
        :type iam_role_arn: str
        """
        if iam_role_arn is None:
            raise ValueError("Invalid value for `iam_role_arn`, must not be `None`")

        self._iam_role_arn = iam_role_arn

    @property
    def idempotency_token(self):
        """Gets the idempotency_token of this StartCopyJobRequest.

        A customer-chosen string that you can use to distinguish between otherwise identical calls to <code>StartCopyJob</code>. Retrying a successful request with the same idempotency token results in a success message with no action taken.

        :return: The idempotency_token of this StartCopyJobRequest.
        :rtype: str
        """
        return self._idempotency_token

    @idempotency_token.setter
    def idempotency_token(self, idempotency_token):
        """Sets the idempotency_token of this StartCopyJobRequest.

        A customer-chosen string that you can use to distinguish between otherwise identical calls to <code>StartCopyJob</code>. Retrying a successful request with the same idempotency token results in a success message with no action taken.

        :param idempotency_token: The idempotency_token of this StartCopyJobRequest.
        :type idempotency_token: str
        """

        self._idempotency_token = idempotency_token

    @property
    def lifecycle(self):
        """Gets the lifecycle of this StartCopyJobRequest.


        :return: The lifecycle of this StartCopyJobRequest.
        :rtype: UpdateRecoveryPointLifecycleRequestLifecycle
        """
        return self._lifecycle

    @lifecycle.setter
    def lifecycle(self, lifecycle):
        """Sets the lifecycle of this StartCopyJobRequest.


        :param lifecycle: The lifecycle of this StartCopyJobRequest.
        :type lifecycle: UpdateRecoveryPointLifecycleRequestLifecycle
        """

        self._lifecycle = lifecycle
