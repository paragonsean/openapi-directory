# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.update_recovery_point_lifecycle_request_lifecycle import UpdateRecoveryPointLifecycleRequestLifecycle
import re
from openapi_server import util


class StartBackupJobRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, backup_vault_name: str=None, resource_arn: str=None, iam_role_arn: str=None, idempotency_token: str=None, start_window_minutes: int=None, complete_window_minutes: int=None, lifecycle: UpdateRecoveryPointLifecycleRequestLifecycle=None, recovery_point_tags: Dict[str, str]=None, backup_options: Dict[str, str]=None):
        """StartBackupJobRequest - a model defined in OpenAPI

        :param backup_vault_name: The backup_vault_name of this StartBackupJobRequest.
        :param resource_arn: The resource_arn of this StartBackupJobRequest.
        :param iam_role_arn: The iam_role_arn of this StartBackupJobRequest.
        :param idempotency_token: The idempotency_token of this StartBackupJobRequest.
        :param start_window_minutes: The start_window_minutes of this StartBackupJobRequest.
        :param complete_window_minutes: The complete_window_minutes of this StartBackupJobRequest.
        :param lifecycle: The lifecycle of this StartBackupJobRequest.
        :param recovery_point_tags: The recovery_point_tags of this StartBackupJobRequest.
        :param backup_options: The backup_options of this StartBackupJobRequest.
        """
        self.openapi_types = {
            'backup_vault_name': str,
            'resource_arn': str,
            'iam_role_arn': str,
            'idempotency_token': str,
            'start_window_minutes': int,
            'complete_window_minutes': int,
            'lifecycle': UpdateRecoveryPointLifecycleRequestLifecycle,
            'recovery_point_tags': Dict[str, str],
            'backup_options': Dict[str, str]
        }

        self.attribute_map = {
            'backup_vault_name': 'BackupVaultName',
            'resource_arn': 'ResourceArn',
            'iam_role_arn': 'IamRoleArn',
            'idempotency_token': 'IdempotencyToken',
            'start_window_minutes': 'StartWindowMinutes',
            'complete_window_minutes': 'CompleteWindowMinutes',
            'lifecycle': 'Lifecycle',
            'recovery_point_tags': 'RecoveryPointTags',
            'backup_options': 'BackupOptions'
        }

        self._backup_vault_name = backup_vault_name
        self._resource_arn = resource_arn
        self._iam_role_arn = iam_role_arn
        self._idempotency_token = idempotency_token
        self._start_window_minutes = start_window_minutes
        self._complete_window_minutes = complete_window_minutes
        self._lifecycle = lifecycle
        self._recovery_point_tags = recovery_point_tags
        self._backup_options = backup_options

    @classmethod
    def from_dict(cls, dikt: dict) -> 'StartBackupJobRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The StartBackupJob_request of this StartBackupJobRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def backup_vault_name(self):
        """Gets the backup_vault_name of this StartBackupJobRequest.

        The name of a logical container where backups are stored. Backup vaults are identified by names that are unique to the account used to create them and the Amazon Web Services Region where they are created. They consist of lowercase letters, numbers, and hyphens.

        :return: The backup_vault_name of this StartBackupJobRequest.
        :rtype: str
        """
        return self._backup_vault_name

    @backup_vault_name.setter
    def backup_vault_name(self, backup_vault_name):
        """Sets the backup_vault_name of this StartBackupJobRequest.

        The name of a logical container where backups are stored. Backup vaults are identified by names that are unique to the account used to create them and the Amazon Web Services Region where they are created. They consist of lowercase letters, numbers, and hyphens.

        :param backup_vault_name: The backup_vault_name of this StartBackupJobRequest.
        :type backup_vault_name: str
        """
        if backup_vault_name is None:
            raise ValueError("Invalid value for `backup_vault_name`, must not be `None`")
        if backup_vault_name is not None and not re.search(r'^[a-zA-Z0-9\-\_]{2,50}$', backup_vault_name):
            raise ValueError("Invalid value for `backup_vault_name`, must be a follow pattern or equal to `/^[a-zA-Z0-9\-\_]{2,50}$/`")

        self._backup_vault_name = backup_vault_name

    @property
    def resource_arn(self):
        """Gets the resource_arn of this StartBackupJobRequest.

        An Amazon Resource Name (ARN) that uniquely identifies a resource. The format of the ARN depends on the resource type.

        :return: The resource_arn of this StartBackupJobRequest.
        :rtype: str
        """
        return self._resource_arn

    @resource_arn.setter
    def resource_arn(self, resource_arn):
        """Sets the resource_arn of this StartBackupJobRequest.

        An Amazon Resource Name (ARN) that uniquely identifies a resource. The format of the ARN depends on the resource type.

        :param resource_arn: The resource_arn of this StartBackupJobRequest.
        :type resource_arn: str
        """
        if resource_arn is None:
            raise ValueError("Invalid value for `resource_arn`, must not be `None`")

        self._resource_arn = resource_arn

    @property
    def iam_role_arn(self):
        """Gets the iam_role_arn of this StartBackupJobRequest.

        Specifies the IAM role ARN used to create the target recovery point; for example, <code>arn:aws:iam::123456789012:role/S3Access</code>.

        :return: The iam_role_arn of this StartBackupJobRequest.
        :rtype: str
        """
        return self._iam_role_arn

    @iam_role_arn.setter
    def iam_role_arn(self, iam_role_arn):
        """Sets the iam_role_arn of this StartBackupJobRequest.

        Specifies the IAM role ARN used to create the target recovery point; for example, <code>arn:aws:iam::123456789012:role/S3Access</code>.

        :param iam_role_arn: The iam_role_arn of this StartBackupJobRequest.
        :type iam_role_arn: str
        """
        if iam_role_arn is None:
            raise ValueError("Invalid value for `iam_role_arn`, must not be `None`")

        self._iam_role_arn = iam_role_arn

    @property
    def idempotency_token(self):
        """Gets the idempotency_token of this StartBackupJobRequest.

        A customer-chosen string that you can use to distinguish between otherwise identical calls to <code>StartBackupJob</code>. Retrying a successful request with the same idempotency token results in a success message with no action taken.

        :return: The idempotency_token of this StartBackupJobRequest.
        :rtype: str
        """
        return self._idempotency_token

    @idempotency_token.setter
    def idempotency_token(self, idempotency_token):
        """Sets the idempotency_token of this StartBackupJobRequest.

        A customer-chosen string that you can use to distinguish between otherwise identical calls to <code>StartBackupJob</code>. Retrying a successful request with the same idempotency token results in a success message with no action taken.

        :param idempotency_token: The idempotency_token of this StartBackupJobRequest.
        :type idempotency_token: str
        """

        self._idempotency_token = idempotency_token

    @property
    def start_window_minutes(self):
        """Gets the start_window_minutes of this StartBackupJobRequest.

        <p>A value in minutes after a backup is scheduled before a job will be canceled if it doesn't start successfully. This value is optional, and the default is 8 hours. If this value is included, it must be at least 60 minutes to avoid errors.</p> <p>During the start window, the backup job status remains in <code>CREATED</code> status until it has successfully begun or until the start window time has run out. If within the start window time Backup receives an error that allows the job to be retried, Backup will automatically retry to begin the job at least every 10 minutes until the backup successfully begins (the job status changes to <code>RUNNING</code>) or until the job status changes to <code>EXPIRED</code> (which is expected to occur when the start window time is over).</p>

        :return: The start_window_minutes of this StartBackupJobRequest.
        :rtype: int
        """
        return self._start_window_minutes

    @start_window_minutes.setter
    def start_window_minutes(self, start_window_minutes):
        """Sets the start_window_minutes of this StartBackupJobRequest.

        <p>A value in minutes after a backup is scheduled before a job will be canceled if it doesn't start successfully. This value is optional, and the default is 8 hours. If this value is included, it must be at least 60 minutes to avoid errors.</p> <p>During the start window, the backup job status remains in <code>CREATED</code> status until it has successfully begun or until the start window time has run out. If within the start window time Backup receives an error that allows the job to be retried, Backup will automatically retry to begin the job at least every 10 minutes until the backup successfully begins (the job status changes to <code>RUNNING</code>) or until the job status changes to <code>EXPIRED</code> (which is expected to occur when the start window time is over).</p>

        :param start_window_minutes: The start_window_minutes of this StartBackupJobRequest.
        :type start_window_minutes: int
        """

        self._start_window_minutes = start_window_minutes

    @property
    def complete_window_minutes(self):
        """Gets the complete_window_minutes of this StartBackupJobRequest.

        A value in minutes during which a successfully started backup must complete, or else Backup will cancel the job. This value is optional. This value begins counting down from when the backup was scheduled. It does not add additional time for <code>StartWindowMinutes</code>, or if the backup started later than scheduled.

        :return: The complete_window_minutes of this StartBackupJobRequest.
        :rtype: int
        """
        return self._complete_window_minutes

    @complete_window_minutes.setter
    def complete_window_minutes(self, complete_window_minutes):
        """Sets the complete_window_minutes of this StartBackupJobRequest.

        A value in minutes during which a successfully started backup must complete, or else Backup will cancel the job. This value is optional. This value begins counting down from when the backup was scheduled. It does not add additional time for <code>StartWindowMinutes</code>, or if the backup started later than scheduled.

        :param complete_window_minutes: The complete_window_minutes of this StartBackupJobRequest.
        :type complete_window_minutes: int
        """

        self._complete_window_minutes = complete_window_minutes

    @property
    def lifecycle(self):
        """Gets the lifecycle of this StartBackupJobRequest.


        :return: The lifecycle of this StartBackupJobRequest.
        :rtype: UpdateRecoveryPointLifecycleRequestLifecycle
        """
        return self._lifecycle

    @lifecycle.setter
    def lifecycle(self, lifecycle):
        """Sets the lifecycle of this StartBackupJobRequest.


        :param lifecycle: The lifecycle of this StartBackupJobRequest.
        :type lifecycle: UpdateRecoveryPointLifecycleRequestLifecycle
        """

        self._lifecycle = lifecycle

    @property
    def recovery_point_tags(self):
        """Gets the recovery_point_tags of this StartBackupJobRequest.

        To help organize your resources, you can assign your own metadata to the resources that you create. Each tag is a key-value pair.

        :return: The recovery_point_tags of this StartBackupJobRequest.
        :rtype: Dict[str, str]
        """
        return self._recovery_point_tags

    @recovery_point_tags.setter
    def recovery_point_tags(self, recovery_point_tags):
        """Sets the recovery_point_tags of this StartBackupJobRequest.

        To help organize your resources, you can assign your own metadata to the resources that you create. Each tag is a key-value pair.

        :param recovery_point_tags: The recovery_point_tags of this StartBackupJobRequest.
        :type recovery_point_tags: Dict[str, str]
        """

        self._recovery_point_tags = recovery_point_tags

    @property
    def backup_options(self):
        """Gets the backup_options of this StartBackupJobRequest.

        <p>Specifies the backup option for a selected resource. This option is only available for Windows Volume Shadow Copy Service (VSS) backup jobs.</p> <p>Valid values: Set to <code>\"WindowsVSS\":\"enabled\"</code> to enable the <code>WindowsVSS</code> backup option and create a Windows VSS backup. Set to <code>\"WindowsVSS\"\"disabled\"</code> to create a regular backup. The <code>WindowsVSS</code> option is not enabled by default.</p>

        :return: The backup_options of this StartBackupJobRequest.
        :rtype: Dict[str, str]
        """
        return self._backup_options

    @backup_options.setter
    def backup_options(self, backup_options):
        """Sets the backup_options of this StartBackupJobRequest.

        <p>Specifies the backup option for a selected resource. This option is only available for Windows Volume Shadow Copy Service (VSS) backup jobs.</p> <p>Valid values: Set to <code>\"WindowsVSS\":\"enabled\"</code> to enable the <code>WindowsVSS</code> backup option and create a Windows VSS backup. Set to <code>\"WindowsVSS\"\"disabled\"</code> to create a regular backup. The <code>WindowsVSS</code> option is not enabled by default.</p>

        :param backup_options: The backup_options of this StartBackupJobRequest.
        :type backup_options: Dict[str, str]
        """

        self._backup_options = backup_options
