# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class StartRestoreJobInput(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, recovery_point_arn: str=None, metadata: Dict=None, iam_role_arn: str=None, idempotency_token: str=None, resource_type: str=None, copy_source_tags_to_restored_resource: bool=None):
        """StartRestoreJobInput - a model defined in OpenAPI

        :param recovery_point_arn: The recovery_point_arn of this StartRestoreJobInput.
        :param metadata: The metadata of this StartRestoreJobInput.
        :param iam_role_arn: The iam_role_arn of this StartRestoreJobInput.
        :param idempotency_token: The idempotency_token of this StartRestoreJobInput.
        :param resource_type: The resource_type of this StartRestoreJobInput.
        :param copy_source_tags_to_restored_resource: The copy_source_tags_to_restored_resource of this StartRestoreJobInput.
        """
        self.openapi_types = {
            'recovery_point_arn': str,
            'metadata': Dict,
            'iam_role_arn': str,
            'idempotency_token': str,
            'resource_type': str,
            'copy_source_tags_to_restored_resource': bool
        }

        self.attribute_map = {
            'recovery_point_arn': 'RecoveryPointArn',
            'metadata': 'Metadata',
            'iam_role_arn': 'IamRoleArn',
            'idempotency_token': 'IdempotencyToken',
            'resource_type': 'ResourceType',
            'copy_source_tags_to_restored_resource': 'CopySourceTagsToRestoredResource'
        }

        self._recovery_point_arn = recovery_point_arn
        self._metadata = metadata
        self._iam_role_arn = iam_role_arn
        self._idempotency_token = idempotency_token
        self._resource_type = resource_type
        self._copy_source_tags_to_restored_resource = copy_source_tags_to_restored_resource

    @classmethod
    def from_dict(cls, dikt: dict) -> 'StartRestoreJobInput':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The StartRestoreJobInput of this StartRestoreJobInput.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def recovery_point_arn(self):
        """Gets the recovery_point_arn of this StartRestoreJobInput.


        :return: The recovery_point_arn of this StartRestoreJobInput.
        :rtype: str
        """
        return self._recovery_point_arn

    @recovery_point_arn.setter
    def recovery_point_arn(self, recovery_point_arn):
        """Sets the recovery_point_arn of this StartRestoreJobInput.


        :param recovery_point_arn: The recovery_point_arn of this StartRestoreJobInput.
        :type recovery_point_arn: str
        """
        if recovery_point_arn is None:
            raise ValueError("Invalid value for `recovery_point_arn`, must not be `None`")

        self._recovery_point_arn = recovery_point_arn

    @property
    def metadata(self):
        """Gets the metadata of this StartRestoreJobInput.


        :return: The metadata of this StartRestoreJobInput.
        :rtype: Dict
        """
        return self._metadata

    @metadata.setter
    def metadata(self, metadata):
        """Sets the metadata of this StartRestoreJobInput.


        :param metadata: The metadata of this StartRestoreJobInput.
        :type metadata: Dict
        """
        if metadata is None:
            raise ValueError("Invalid value for `metadata`, must not be `None`")

        self._metadata = metadata

    @property
    def iam_role_arn(self):
        """Gets the iam_role_arn of this StartRestoreJobInput.


        :return: The iam_role_arn of this StartRestoreJobInput.
        :rtype: str
        """
        return self._iam_role_arn

    @iam_role_arn.setter
    def iam_role_arn(self, iam_role_arn):
        """Sets the iam_role_arn of this StartRestoreJobInput.


        :param iam_role_arn: The iam_role_arn of this StartRestoreJobInput.
        :type iam_role_arn: str
        """

        self._iam_role_arn = iam_role_arn

    @property
    def idempotency_token(self):
        """Gets the idempotency_token of this StartRestoreJobInput.


        :return: The idempotency_token of this StartRestoreJobInput.
        :rtype: str
        """
        return self._idempotency_token

    @idempotency_token.setter
    def idempotency_token(self, idempotency_token):
        """Sets the idempotency_token of this StartRestoreJobInput.


        :param idempotency_token: The idempotency_token of this StartRestoreJobInput.
        :type idempotency_token: str
        """

        self._idempotency_token = idempotency_token

    @property
    def resource_type(self):
        """Gets the resource_type of this StartRestoreJobInput.


        :return: The resource_type of this StartRestoreJobInput.
        :rtype: str
        """
        return self._resource_type

    @resource_type.setter
    def resource_type(self, resource_type):
        """Sets the resource_type of this StartRestoreJobInput.


        :param resource_type: The resource_type of this StartRestoreJobInput.
        :type resource_type: str
        """

        self._resource_type = resource_type

    @property
    def copy_source_tags_to_restored_resource(self):
        """Gets the copy_source_tags_to_restored_resource of this StartRestoreJobInput.


        :return: The copy_source_tags_to_restored_resource of this StartRestoreJobInput.
        :rtype: bool
        """
        return self._copy_source_tags_to_restored_resource

    @copy_source_tags_to_restored_resource.setter
    def copy_source_tags_to_restored_resource(self, copy_source_tags_to_restored_resource):
        """Sets the copy_source_tags_to_restored_resource of this StartRestoreJobInput.


        :param copy_source_tags_to_restored_resource: The copy_source_tags_to_restored_resource of this StartRestoreJobInput.
        :type copy_source_tags_to_restored_resource: bool
        """

        self._copy_source_tags_to_restored_resource = copy_source_tags_to_restored_resource
