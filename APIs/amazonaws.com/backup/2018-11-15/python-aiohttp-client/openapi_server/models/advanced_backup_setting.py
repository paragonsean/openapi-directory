# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class AdvancedBackupSetting(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, resource_type: str=None, backup_options: Dict=None):
        """AdvancedBackupSetting - a model defined in OpenAPI

        :param resource_type: The resource_type of this AdvancedBackupSetting.
        :param backup_options: The backup_options of this AdvancedBackupSetting.
        """
        self.openapi_types = {
            'resource_type': str,
            'backup_options': Dict
        }

        self.attribute_map = {
            'resource_type': 'ResourceType',
            'backup_options': 'BackupOptions'
        }

        self._resource_type = resource_type
        self._backup_options = backup_options

    @classmethod
    def from_dict(cls, dikt: dict) -> 'AdvancedBackupSetting':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The AdvancedBackupSetting of this AdvancedBackupSetting.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def resource_type(self):
        """Gets the resource_type of this AdvancedBackupSetting.


        :return: The resource_type of this AdvancedBackupSetting.
        :rtype: str
        """
        return self._resource_type

    @resource_type.setter
    def resource_type(self, resource_type):
        """Sets the resource_type of this AdvancedBackupSetting.


        :param resource_type: The resource_type of this AdvancedBackupSetting.
        :type resource_type: str
        """

        self._resource_type = resource_type

    @property
    def backup_options(self):
        """Gets the backup_options of this AdvancedBackupSetting.


        :return: The backup_options of this AdvancedBackupSetting.
        :rtype: Dict
        """
        return self._backup_options

    @backup_options.setter
    def backup_options(self, backup_options):
        """Sets the backup_options of this AdvancedBackupSetting.


        :param backup_options: The backup_options of this AdvancedBackupSetting.
        :type backup_options: Dict
        """

        self._backup_options = backup_options
