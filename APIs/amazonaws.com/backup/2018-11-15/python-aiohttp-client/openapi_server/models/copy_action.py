# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.lifecycle import Lifecycle
from openapi_server import util


class CopyAction(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, lifecycle: Lifecycle=None, destination_backup_vault_arn: str=None):
        """CopyAction - a model defined in OpenAPI

        :param lifecycle: The lifecycle of this CopyAction.
        :param destination_backup_vault_arn: The destination_backup_vault_arn of this CopyAction.
        """
        self.openapi_types = {
            'lifecycle': Lifecycle,
            'destination_backup_vault_arn': str
        }

        self.attribute_map = {
            'lifecycle': 'Lifecycle',
            'destination_backup_vault_arn': 'DestinationBackupVaultArn'
        }

        self._lifecycle = lifecycle
        self._destination_backup_vault_arn = destination_backup_vault_arn

    @classmethod
    def from_dict(cls, dikt: dict) -> 'CopyAction':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The CopyAction of this CopyAction.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def lifecycle(self):
        """Gets the lifecycle of this CopyAction.


        :return: The lifecycle of this CopyAction.
        :rtype: Lifecycle
        """
        return self._lifecycle

    @lifecycle.setter
    def lifecycle(self, lifecycle):
        """Sets the lifecycle of this CopyAction.


        :param lifecycle: The lifecycle of this CopyAction.
        :type lifecycle: Lifecycle
        """

        self._lifecycle = lifecycle

    @property
    def destination_backup_vault_arn(self):
        """Gets the destination_backup_vault_arn of this CopyAction.


        :return: The destination_backup_vault_arn of this CopyAction.
        :rtype: str
        """
        return self._destination_backup_vault_arn

    @destination_backup_vault_arn.setter
    def destination_backup_vault_arn(self, destination_backup_vault_arn):
        """Sets the destination_backup_vault_arn of this CopyAction.


        :param destination_backup_vault_arn: The destination_backup_vault_arn of this CopyAction.
        :type destination_backup_vault_arn: str
        """
        if destination_backup_vault_arn is None:
            raise ValueError("Invalid value for `destination_backup_vault_arn`, must not be `None`")

        self._destination_backup_vault_arn = destination_backup_vault_arn
