# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class ConditionParameter(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, condition_key: str=None, condition_value: str=None):
        """ConditionParameter - a model defined in OpenAPI

        :param condition_key: The condition_key of this ConditionParameter.
        :param condition_value: The condition_value of this ConditionParameter.
        """
        self.openapi_types = {
            'condition_key': str,
            'condition_value': str
        }

        self.attribute_map = {
            'condition_key': 'ConditionKey',
            'condition_value': 'ConditionValue'
        }

        self._condition_key = condition_key
        self._condition_value = condition_value

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ConditionParameter':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ConditionParameter of this ConditionParameter.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def condition_key(self):
        """Gets the condition_key of this ConditionParameter.


        :return: The condition_key of this ConditionParameter.
        :rtype: str
        """
        return self._condition_key

    @condition_key.setter
    def condition_key(self, condition_key):
        """Sets the condition_key of this ConditionParameter.


        :param condition_key: The condition_key of this ConditionParameter.
        :type condition_key: str
        """

        self._condition_key = condition_key

    @property
    def condition_value(self):
        """Gets the condition_value of this ConditionParameter.


        :return: The condition_value of this ConditionParameter.
        :rtype: str
        """
        return self._condition_value

    @condition_value.setter
    def condition_value(self, condition_value):
        """Sets the condition_value of this ConditionParameter.


        :param condition_value: The condition_value of this ConditionParameter.
        :type condition_value: str
        """

        self._condition_value = condition_value
