# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class UpdateReportPlanInputReportDeliveryChannel(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, s3_bucket_name: str=None, s3_key_prefix: str=None, formats: List=None):
        """UpdateReportPlanInputReportDeliveryChannel - a model defined in OpenAPI

        :param s3_bucket_name: The s3_bucket_name of this UpdateReportPlanInputReportDeliveryChannel.
        :param s3_key_prefix: The s3_key_prefix of this UpdateReportPlanInputReportDeliveryChannel.
        :param formats: The formats of this UpdateReportPlanInputReportDeliveryChannel.
        """
        self.openapi_types = {
            's3_bucket_name': str,
            's3_key_prefix': str,
            'formats': List
        }

        self.attribute_map = {
            's3_bucket_name': 'S3BucketName',
            's3_key_prefix': 'S3KeyPrefix',
            'formats': 'Formats'
        }

        self._s3_bucket_name = s3_bucket_name
        self._s3_key_prefix = s3_key_prefix
        self._formats = formats

    @classmethod
    def from_dict(cls, dikt: dict) -> 'UpdateReportPlanInputReportDeliveryChannel':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The UpdateReportPlanInput_ReportDeliveryChannel of this UpdateReportPlanInputReportDeliveryChannel.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def s3_bucket_name(self):
        """Gets the s3_bucket_name of this UpdateReportPlanInputReportDeliveryChannel.


        :return: The s3_bucket_name of this UpdateReportPlanInputReportDeliveryChannel.
        :rtype: str
        """
        return self._s3_bucket_name

    @s3_bucket_name.setter
    def s3_bucket_name(self, s3_bucket_name):
        """Sets the s3_bucket_name of this UpdateReportPlanInputReportDeliveryChannel.


        :param s3_bucket_name: The s3_bucket_name of this UpdateReportPlanInputReportDeliveryChannel.
        :type s3_bucket_name: str
        """
        if s3_bucket_name is None:
            raise ValueError("Invalid value for `s3_bucket_name`, must not be `None`")

        self._s3_bucket_name = s3_bucket_name

    @property
    def s3_key_prefix(self):
        """Gets the s3_key_prefix of this UpdateReportPlanInputReportDeliveryChannel.


        :return: The s3_key_prefix of this UpdateReportPlanInputReportDeliveryChannel.
        :rtype: str
        """
        return self._s3_key_prefix

    @s3_key_prefix.setter
    def s3_key_prefix(self, s3_key_prefix):
        """Sets the s3_key_prefix of this UpdateReportPlanInputReportDeliveryChannel.


        :param s3_key_prefix: The s3_key_prefix of this UpdateReportPlanInputReportDeliveryChannel.
        :type s3_key_prefix: str
        """

        self._s3_key_prefix = s3_key_prefix

    @property
    def formats(self):
        """Gets the formats of this UpdateReportPlanInputReportDeliveryChannel.


        :return: The formats of this UpdateReportPlanInputReportDeliveryChannel.
        :rtype: List
        """
        return self._formats

    @formats.setter
    def formats(self, formats):
        """Sets the formats of this UpdateReportPlanInputReportDeliveryChannel.


        :param formats: The formats of this UpdateReportPlanInputReportDeliveryChannel.
        :type formats: List
        """

        self._formats = formats
