# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.backup_job_created_by import BackupJobCreatedBy
from openapi_server.models.backup_job_state import BackupJobState
from openapi_server import util


class BackupJob(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, account_id: str=None, backup_job_id: str=None, backup_vault_name: str=None, backup_vault_arn: str=None, recovery_point_arn: str=None, resource_arn: str=None, creation_date: datetime=None, completion_date: datetime=None, state: BackupJobState=None, status_message: str=None, percent_done: str=None, backup_size_in_bytes: int=None, iam_role_arn: str=None, created_by: BackupJobCreatedBy=None, expected_completion_date: datetime=None, start_by: datetime=None, resource_type: str=None, bytes_transferred: int=None, backup_options: Dict=None, backup_type: str=None, parent_job_id: str=None, is_parent: bool=None, resource_name: str=None):
        """BackupJob - a model defined in OpenAPI

        :param account_id: The account_id of this BackupJob.
        :param backup_job_id: The backup_job_id of this BackupJob.
        :param backup_vault_name: The backup_vault_name of this BackupJob.
        :param backup_vault_arn: The backup_vault_arn of this BackupJob.
        :param recovery_point_arn: The recovery_point_arn of this BackupJob.
        :param resource_arn: The resource_arn of this BackupJob.
        :param creation_date: The creation_date of this BackupJob.
        :param completion_date: The completion_date of this BackupJob.
        :param state: The state of this BackupJob.
        :param status_message: The status_message of this BackupJob.
        :param percent_done: The percent_done of this BackupJob.
        :param backup_size_in_bytes: The backup_size_in_bytes of this BackupJob.
        :param iam_role_arn: The iam_role_arn of this BackupJob.
        :param created_by: The created_by of this BackupJob.
        :param expected_completion_date: The expected_completion_date of this BackupJob.
        :param start_by: The start_by of this BackupJob.
        :param resource_type: The resource_type of this BackupJob.
        :param bytes_transferred: The bytes_transferred of this BackupJob.
        :param backup_options: The backup_options of this BackupJob.
        :param backup_type: The backup_type of this BackupJob.
        :param parent_job_id: The parent_job_id of this BackupJob.
        :param is_parent: The is_parent of this BackupJob.
        :param resource_name: The resource_name of this BackupJob.
        """
        self.openapi_types = {
            'account_id': str,
            'backup_job_id': str,
            'backup_vault_name': str,
            'backup_vault_arn': str,
            'recovery_point_arn': str,
            'resource_arn': str,
            'creation_date': datetime,
            'completion_date': datetime,
            'state': BackupJobState,
            'status_message': str,
            'percent_done': str,
            'backup_size_in_bytes': int,
            'iam_role_arn': str,
            'created_by': BackupJobCreatedBy,
            'expected_completion_date': datetime,
            'start_by': datetime,
            'resource_type': str,
            'bytes_transferred': int,
            'backup_options': Dict,
            'backup_type': str,
            'parent_job_id': str,
            'is_parent': bool,
            'resource_name': str
        }

        self.attribute_map = {
            'account_id': 'AccountId',
            'backup_job_id': 'BackupJobId',
            'backup_vault_name': 'BackupVaultName',
            'backup_vault_arn': 'BackupVaultArn',
            'recovery_point_arn': 'RecoveryPointArn',
            'resource_arn': 'ResourceArn',
            'creation_date': 'CreationDate',
            'completion_date': 'CompletionDate',
            'state': 'State',
            'status_message': 'StatusMessage',
            'percent_done': 'PercentDone',
            'backup_size_in_bytes': 'BackupSizeInBytes',
            'iam_role_arn': 'IamRoleArn',
            'created_by': 'CreatedBy',
            'expected_completion_date': 'ExpectedCompletionDate',
            'start_by': 'StartBy',
            'resource_type': 'ResourceType',
            'bytes_transferred': 'BytesTransferred',
            'backup_options': 'BackupOptions',
            'backup_type': 'BackupType',
            'parent_job_id': 'ParentJobId',
            'is_parent': 'IsParent',
            'resource_name': 'ResourceName'
        }

        self._account_id = account_id
        self._backup_job_id = backup_job_id
        self._backup_vault_name = backup_vault_name
        self._backup_vault_arn = backup_vault_arn
        self._recovery_point_arn = recovery_point_arn
        self._resource_arn = resource_arn
        self._creation_date = creation_date
        self._completion_date = completion_date
        self._state = state
        self._status_message = status_message
        self._percent_done = percent_done
        self._backup_size_in_bytes = backup_size_in_bytes
        self._iam_role_arn = iam_role_arn
        self._created_by = created_by
        self._expected_completion_date = expected_completion_date
        self._start_by = start_by
        self._resource_type = resource_type
        self._bytes_transferred = bytes_transferred
        self._backup_options = backup_options
        self._backup_type = backup_type
        self._parent_job_id = parent_job_id
        self._is_parent = is_parent
        self._resource_name = resource_name

    @classmethod
    def from_dict(cls, dikt: dict) -> 'BackupJob':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The BackupJob of this BackupJob.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def account_id(self):
        """Gets the account_id of this BackupJob.


        :return: The account_id of this BackupJob.
        :rtype: str
        """
        return self._account_id

    @account_id.setter
    def account_id(self, account_id):
        """Sets the account_id of this BackupJob.


        :param account_id: The account_id of this BackupJob.
        :type account_id: str
        """

        self._account_id = account_id

    @property
    def backup_job_id(self):
        """Gets the backup_job_id of this BackupJob.


        :return: The backup_job_id of this BackupJob.
        :rtype: str
        """
        return self._backup_job_id

    @backup_job_id.setter
    def backup_job_id(self, backup_job_id):
        """Sets the backup_job_id of this BackupJob.


        :param backup_job_id: The backup_job_id of this BackupJob.
        :type backup_job_id: str
        """

        self._backup_job_id = backup_job_id

    @property
    def backup_vault_name(self):
        """Gets the backup_vault_name of this BackupJob.


        :return: The backup_vault_name of this BackupJob.
        :rtype: str
        """
        return self._backup_vault_name

    @backup_vault_name.setter
    def backup_vault_name(self, backup_vault_name):
        """Sets the backup_vault_name of this BackupJob.


        :param backup_vault_name: The backup_vault_name of this BackupJob.
        :type backup_vault_name: str
        """

        self._backup_vault_name = backup_vault_name

    @property
    def backup_vault_arn(self):
        """Gets the backup_vault_arn of this BackupJob.


        :return: The backup_vault_arn of this BackupJob.
        :rtype: str
        """
        return self._backup_vault_arn

    @backup_vault_arn.setter
    def backup_vault_arn(self, backup_vault_arn):
        """Sets the backup_vault_arn of this BackupJob.


        :param backup_vault_arn: The backup_vault_arn of this BackupJob.
        :type backup_vault_arn: str
        """

        self._backup_vault_arn = backup_vault_arn

    @property
    def recovery_point_arn(self):
        """Gets the recovery_point_arn of this BackupJob.


        :return: The recovery_point_arn of this BackupJob.
        :rtype: str
        """
        return self._recovery_point_arn

    @recovery_point_arn.setter
    def recovery_point_arn(self, recovery_point_arn):
        """Sets the recovery_point_arn of this BackupJob.


        :param recovery_point_arn: The recovery_point_arn of this BackupJob.
        :type recovery_point_arn: str
        """

        self._recovery_point_arn = recovery_point_arn

    @property
    def resource_arn(self):
        """Gets the resource_arn of this BackupJob.


        :return: The resource_arn of this BackupJob.
        :rtype: str
        """
        return self._resource_arn

    @resource_arn.setter
    def resource_arn(self, resource_arn):
        """Sets the resource_arn of this BackupJob.


        :param resource_arn: The resource_arn of this BackupJob.
        :type resource_arn: str
        """

        self._resource_arn = resource_arn

    @property
    def creation_date(self):
        """Gets the creation_date of this BackupJob.


        :return: The creation_date of this BackupJob.
        :rtype: datetime
        """
        return self._creation_date

    @creation_date.setter
    def creation_date(self, creation_date):
        """Sets the creation_date of this BackupJob.


        :param creation_date: The creation_date of this BackupJob.
        :type creation_date: datetime
        """

        self._creation_date = creation_date

    @property
    def completion_date(self):
        """Gets the completion_date of this BackupJob.


        :return: The completion_date of this BackupJob.
        :rtype: datetime
        """
        return self._completion_date

    @completion_date.setter
    def completion_date(self, completion_date):
        """Sets the completion_date of this BackupJob.


        :param completion_date: The completion_date of this BackupJob.
        :type completion_date: datetime
        """

        self._completion_date = completion_date

    @property
    def state(self):
        """Gets the state of this BackupJob.


        :return: The state of this BackupJob.
        :rtype: BackupJobState
        """
        return self._state

    @state.setter
    def state(self, state):
        """Sets the state of this BackupJob.


        :param state: The state of this BackupJob.
        :type state: BackupJobState
        """

        self._state = state

    @property
    def status_message(self):
        """Gets the status_message of this BackupJob.


        :return: The status_message of this BackupJob.
        :rtype: str
        """
        return self._status_message

    @status_message.setter
    def status_message(self, status_message):
        """Sets the status_message of this BackupJob.


        :param status_message: The status_message of this BackupJob.
        :type status_message: str
        """

        self._status_message = status_message

    @property
    def percent_done(self):
        """Gets the percent_done of this BackupJob.


        :return: The percent_done of this BackupJob.
        :rtype: str
        """
        return self._percent_done

    @percent_done.setter
    def percent_done(self, percent_done):
        """Sets the percent_done of this BackupJob.


        :param percent_done: The percent_done of this BackupJob.
        :type percent_done: str
        """

        self._percent_done = percent_done

    @property
    def backup_size_in_bytes(self):
        """Gets the backup_size_in_bytes of this BackupJob.


        :return: The backup_size_in_bytes of this BackupJob.
        :rtype: int
        """
        return self._backup_size_in_bytes

    @backup_size_in_bytes.setter
    def backup_size_in_bytes(self, backup_size_in_bytes):
        """Sets the backup_size_in_bytes of this BackupJob.


        :param backup_size_in_bytes: The backup_size_in_bytes of this BackupJob.
        :type backup_size_in_bytes: int
        """

        self._backup_size_in_bytes = backup_size_in_bytes

    @property
    def iam_role_arn(self):
        """Gets the iam_role_arn of this BackupJob.


        :return: The iam_role_arn of this BackupJob.
        :rtype: str
        """
        return self._iam_role_arn

    @iam_role_arn.setter
    def iam_role_arn(self, iam_role_arn):
        """Sets the iam_role_arn of this BackupJob.


        :param iam_role_arn: The iam_role_arn of this BackupJob.
        :type iam_role_arn: str
        """

        self._iam_role_arn = iam_role_arn

    @property
    def created_by(self):
        """Gets the created_by of this BackupJob.


        :return: The created_by of this BackupJob.
        :rtype: BackupJobCreatedBy
        """
        return self._created_by

    @created_by.setter
    def created_by(self, created_by):
        """Sets the created_by of this BackupJob.


        :param created_by: The created_by of this BackupJob.
        :type created_by: BackupJobCreatedBy
        """

        self._created_by = created_by

    @property
    def expected_completion_date(self):
        """Gets the expected_completion_date of this BackupJob.


        :return: The expected_completion_date of this BackupJob.
        :rtype: datetime
        """
        return self._expected_completion_date

    @expected_completion_date.setter
    def expected_completion_date(self, expected_completion_date):
        """Sets the expected_completion_date of this BackupJob.


        :param expected_completion_date: The expected_completion_date of this BackupJob.
        :type expected_completion_date: datetime
        """

        self._expected_completion_date = expected_completion_date

    @property
    def start_by(self):
        """Gets the start_by of this BackupJob.


        :return: The start_by of this BackupJob.
        :rtype: datetime
        """
        return self._start_by

    @start_by.setter
    def start_by(self, start_by):
        """Sets the start_by of this BackupJob.


        :param start_by: The start_by of this BackupJob.
        :type start_by: datetime
        """

        self._start_by = start_by

    @property
    def resource_type(self):
        """Gets the resource_type of this BackupJob.


        :return: The resource_type of this BackupJob.
        :rtype: str
        """
        return self._resource_type

    @resource_type.setter
    def resource_type(self, resource_type):
        """Sets the resource_type of this BackupJob.


        :param resource_type: The resource_type of this BackupJob.
        :type resource_type: str
        """

        self._resource_type = resource_type

    @property
    def bytes_transferred(self):
        """Gets the bytes_transferred of this BackupJob.


        :return: The bytes_transferred of this BackupJob.
        :rtype: int
        """
        return self._bytes_transferred

    @bytes_transferred.setter
    def bytes_transferred(self, bytes_transferred):
        """Sets the bytes_transferred of this BackupJob.


        :param bytes_transferred: The bytes_transferred of this BackupJob.
        :type bytes_transferred: int
        """

        self._bytes_transferred = bytes_transferred

    @property
    def backup_options(self):
        """Gets the backup_options of this BackupJob.


        :return: The backup_options of this BackupJob.
        :rtype: Dict
        """
        return self._backup_options

    @backup_options.setter
    def backup_options(self, backup_options):
        """Sets the backup_options of this BackupJob.


        :param backup_options: The backup_options of this BackupJob.
        :type backup_options: Dict
        """

        self._backup_options = backup_options

    @property
    def backup_type(self):
        """Gets the backup_type of this BackupJob.


        :return: The backup_type of this BackupJob.
        :rtype: str
        """
        return self._backup_type

    @backup_type.setter
    def backup_type(self, backup_type):
        """Sets the backup_type of this BackupJob.


        :param backup_type: The backup_type of this BackupJob.
        :type backup_type: str
        """

        self._backup_type = backup_type

    @property
    def parent_job_id(self):
        """Gets the parent_job_id of this BackupJob.


        :return: The parent_job_id of this BackupJob.
        :rtype: str
        """
        return self._parent_job_id

    @parent_job_id.setter
    def parent_job_id(self, parent_job_id):
        """Sets the parent_job_id of this BackupJob.


        :param parent_job_id: The parent_job_id of this BackupJob.
        :type parent_job_id: str
        """

        self._parent_job_id = parent_job_id

    @property
    def is_parent(self):
        """Gets the is_parent of this BackupJob.


        :return: The is_parent of this BackupJob.
        :rtype: bool
        """
        return self._is_parent

    @is_parent.setter
    def is_parent(self, is_parent):
        """Sets the is_parent of this BackupJob.


        :param is_parent: The is_parent of this BackupJob.
        :type is_parent: bool
        """

        self._is_parent = is_parent

    @property
    def resource_name(self):
        """Gets the resource_name of this BackupJob.


        :return: The resource_name of this BackupJob.
        :rtype: str
        """
        return self._resource_name

    @resource_name.setter
    def resource_name(self, resource_name):
        """Sets the resource_name of this BackupJob.


        :param resource_name: The resource_name of this BackupJob.
        :type resource_name: str
        """

        self._resource_name = resource_name
