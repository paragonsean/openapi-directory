# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
import re
from openapi_server import util


class StartRestoreJobRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, recovery_point_arn: str=None, metadata: Dict[str, str]=None, iam_role_arn: str=None, idempotency_token: str=None, resource_type: str=None, copy_source_tags_to_restored_resource: bool=None):
        """StartRestoreJobRequest - a model defined in OpenAPI

        :param recovery_point_arn: The recovery_point_arn of this StartRestoreJobRequest.
        :param metadata: The metadata of this StartRestoreJobRequest.
        :param iam_role_arn: The iam_role_arn of this StartRestoreJobRequest.
        :param idempotency_token: The idempotency_token of this StartRestoreJobRequest.
        :param resource_type: The resource_type of this StartRestoreJobRequest.
        :param copy_source_tags_to_restored_resource: The copy_source_tags_to_restored_resource of this StartRestoreJobRequest.
        """
        self.openapi_types = {
            'recovery_point_arn': str,
            'metadata': Dict[str, str],
            'iam_role_arn': str,
            'idempotency_token': str,
            'resource_type': str,
            'copy_source_tags_to_restored_resource': bool
        }

        self.attribute_map = {
            'recovery_point_arn': 'RecoveryPointArn',
            'metadata': 'Metadata',
            'iam_role_arn': 'IamRoleArn',
            'idempotency_token': 'IdempotencyToken',
            'resource_type': 'ResourceType',
            'copy_source_tags_to_restored_resource': 'CopySourceTagsToRestoredResource'
        }

        self._recovery_point_arn = recovery_point_arn
        self._metadata = metadata
        self._iam_role_arn = iam_role_arn
        self._idempotency_token = idempotency_token
        self._resource_type = resource_type
        self._copy_source_tags_to_restored_resource = copy_source_tags_to_restored_resource

    @classmethod
    def from_dict(cls, dikt: dict) -> 'StartRestoreJobRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The StartRestoreJob_request of this StartRestoreJobRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def recovery_point_arn(self):
        """Gets the recovery_point_arn of this StartRestoreJobRequest.

        An ARN that uniquely identifies a recovery point; for example, <code>arn:aws:backup:us-east-1:123456789012:recovery-point:1EB3B5E7-9EB0-435A-A80B-108B488B0D45</code>.

        :return: The recovery_point_arn of this StartRestoreJobRequest.
        :rtype: str
        """
        return self._recovery_point_arn

    @recovery_point_arn.setter
    def recovery_point_arn(self, recovery_point_arn):
        """Sets the recovery_point_arn of this StartRestoreJobRequest.

        An ARN that uniquely identifies a recovery point; for example, <code>arn:aws:backup:us-east-1:123456789012:recovery-point:1EB3B5E7-9EB0-435A-A80B-108B488B0D45</code>.

        :param recovery_point_arn: The recovery_point_arn of this StartRestoreJobRequest.
        :type recovery_point_arn: str
        """
        if recovery_point_arn is None:
            raise ValueError("Invalid value for `recovery_point_arn`, must not be `None`")

        self._recovery_point_arn = recovery_point_arn

    @property
    def metadata(self):
        """Gets the metadata of this StartRestoreJobRequest.

        <p>A set of metadata key-value pairs. Contains information, such as a resource name, required to restore a recovery point.</p> <p> You can get configuration metadata about a resource at the time it was backed up by calling <code>GetRecoveryPointRestoreMetadata</code>. However, values in addition to those provided by <code>GetRecoveryPointRestoreMetadata</code> might be required to restore a resource. For example, you might need to provide a new resource name if the original already exists.</p> <p>You need to specify specific metadata to restore an Amazon Elastic File System (Amazon EFS) instance:</p> <ul> <li> <p> <code>file-system-id</code>: The ID of the Amazon EFS file system that is backed up by Backup. Returned in <code>GetRecoveryPointRestoreMetadata</code>.</p> </li> <li> <p> <code>Encrypted</code>: A Boolean value that, if true, specifies that the file system is encrypted. If <code>KmsKeyId</code> is specified, <code>Encrypted</code> must be set to <code>true</code>.</p> </li> <li> <p> <code>KmsKeyId</code>: Specifies the Amazon Web Services KMS key that is used to encrypt the restored file system. You can specify a key from another Amazon Web Services account provided that key it is properly shared with your account via Amazon Web Services KMS.</p> </li> <li> <p> <code>PerformanceMode</code>: Specifies the throughput mode of the file system.</p> </li> <li> <p> <code>CreationToken</code>: A user-supplied value that ensures the uniqueness (idempotency) of the request.</p> </li> <li> <p> <code>newFileSystem</code>: A Boolean value that, if true, specifies that the recovery point is restored to a new Amazon EFS file system.</p> </li> <li> <p> <code>ItemsToRestore</code>: An array of one to five strings where each string is a file path. Use <code>ItemsToRestore</code> to restore specific files or directories rather than the entire file system. This parameter is optional. For example, <code>\"itemsToRestore\":\"[\\\"/my.test\\\"]\"</code>.</p> </li> </ul>

        :return: The metadata of this StartRestoreJobRequest.
        :rtype: Dict[str, str]
        """
        return self._metadata

    @metadata.setter
    def metadata(self, metadata):
        """Sets the metadata of this StartRestoreJobRequest.

        <p>A set of metadata key-value pairs. Contains information, such as a resource name, required to restore a recovery point.</p> <p> You can get configuration metadata about a resource at the time it was backed up by calling <code>GetRecoveryPointRestoreMetadata</code>. However, values in addition to those provided by <code>GetRecoveryPointRestoreMetadata</code> might be required to restore a resource. For example, you might need to provide a new resource name if the original already exists.</p> <p>You need to specify specific metadata to restore an Amazon Elastic File System (Amazon EFS) instance:</p> <ul> <li> <p> <code>file-system-id</code>: The ID of the Amazon EFS file system that is backed up by Backup. Returned in <code>GetRecoveryPointRestoreMetadata</code>.</p> </li> <li> <p> <code>Encrypted</code>: A Boolean value that, if true, specifies that the file system is encrypted. If <code>KmsKeyId</code> is specified, <code>Encrypted</code> must be set to <code>true</code>.</p> </li> <li> <p> <code>KmsKeyId</code>: Specifies the Amazon Web Services KMS key that is used to encrypt the restored file system. You can specify a key from another Amazon Web Services account provided that key it is properly shared with your account via Amazon Web Services KMS.</p> </li> <li> <p> <code>PerformanceMode</code>: Specifies the throughput mode of the file system.</p> </li> <li> <p> <code>CreationToken</code>: A user-supplied value that ensures the uniqueness (idempotency) of the request.</p> </li> <li> <p> <code>newFileSystem</code>: A Boolean value that, if true, specifies that the recovery point is restored to a new Amazon EFS file system.</p> </li> <li> <p> <code>ItemsToRestore</code>: An array of one to five strings where each string is a file path. Use <code>ItemsToRestore</code> to restore specific files or directories rather than the entire file system. This parameter is optional. For example, <code>\"itemsToRestore\":\"[\\\"/my.test\\\"]\"</code>.</p> </li> </ul>

        :param metadata: The metadata of this StartRestoreJobRequest.
        :type metadata: Dict[str, str]
        """
        if metadata is None:
            raise ValueError("Invalid value for `metadata`, must not be `None`")

        self._metadata = metadata

    @property
    def iam_role_arn(self):
        """Gets the iam_role_arn of this StartRestoreJobRequest.

        The Amazon Resource Name (ARN) of the IAM role that Backup uses to create the target resource; for example: <code>arn:aws:iam::123456789012:role/S3Access</code>.

        :return: The iam_role_arn of this StartRestoreJobRequest.
        :rtype: str
        """
        return self._iam_role_arn

    @iam_role_arn.setter
    def iam_role_arn(self, iam_role_arn):
        """Sets the iam_role_arn of this StartRestoreJobRequest.

        The Amazon Resource Name (ARN) of the IAM role that Backup uses to create the target resource; for example: <code>arn:aws:iam::123456789012:role/S3Access</code>.

        :param iam_role_arn: The iam_role_arn of this StartRestoreJobRequest.
        :type iam_role_arn: str
        """

        self._iam_role_arn = iam_role_arn

    @property
    def idempotency_token(self):
        """Gets the idempotency_token of this StartRestoreJobRequest.

        A customer-chosen string that you can use to distinguish between otherwise identical calls to <code>StartRestoreJob</code>. Retrying a successful request with the same idempotency token results in a success message with no action taken.

        :return: The idempotency_token of this StartRestoreJobRequest.
        :rtype: str
        """
        return self._idempotency_token

    @idempotency_token.setter
    def idempotency_token(self, idempotency_token):
        """Sets the idempotency_token of this StartRestoreJobRequest.

        A customer-chosen string that you can use to distinguish between otherwise identical calls to <code>StartRestoreJob</code>. Retrying a successful request with the same idempotency token results in a success message with no action taken.

        :param idempotency_token: The idempotency_token of this StartRestoreJobRequest.
        :type idempotency_token: str
        """

        self._idempotency_token = idempotency_token

    @property
    def resource_type(self):
        """Gets the resource_type of this StartRestoreJobRequest.

        <p>Starts a job to restore a recovery point for one of the following resources:</p> <ul> <li> <p> <code>Aurora</code> for Amazon Aurora</p> </li> <li> <p> <code>DocumentDB</code> for Amazon DocumentDB (with MongoDB compatibility)</p> </li> <li> <p> <code>CloudFormation</code> for CloudFormation</p> </li> <li> <p> <code>DynamoDB</code> for Amazon DynamoDB</p> </li> <li> <p> <code>EBS</code> for Amazon Elastic Block Store</p> </li> <li> <p> <code>EC2</code> for Amazon Elastic Compute Cloud</p> </li> <li> <p> <code>EFS</code> for Amazon Elastic File System</p> </li> <li> <p> <code>FSx</code> for Amazon FSx</p> </li> <li> <p> <code>Neptune</code> for Amazon Neptune</p> </li> <li> <p> <code>RDS</code> for Amazon Relational Database Service</p> </li> <li> <p> <code>Redshift</code> for Amazon Redshift</p> </li> <li> <p> <code>Storage Gateway</code> for Storage Gateway</p> </li> <li> <p> <code>S3</code> for Amazon S3</p> </li> <li> <p> <code>Timestream</code> for Amazon Timestream</p> </li> <li> <p> <code>VirtualMachine</code> for virtual machines</p> </li> </ul>

        :return: The resource_type of this StartRestoreJobRequest.
        :rtype: str
        """
        return self._resource_type

    @resource_type.setter
    def resource_type(self, resource_type):
        """Sets the resource_type of this StartRestoreJobRequest.

        <p>Starts a job to restore a recovery point for one of the following resources:</p> <ul> <li> <p> <code>Aurora</code> for Amazon Aurora</p> </li> <li> <p> <code>DocumentDB</code> for Amazon DocumentDB (with MongoDB compatibility)</p> </li> <li> <p> <code>CloudFormation</code> for CloudFormation</p> </li> <li> <p> <code>DynamoDB</code> for Amazon DynamoDB</p> </li> <li> <p> <code>EBS</code> for Amazon Elastic Block Store</p> </li> <li> <p> <code>EC2</code> for Amazon Elastic Compute Cloud</p> </li> <li> <p> <code>EFS</code> for Amazon Elastic File System</p> </li> <li> <p> <code>FSx</code> for Amazon FSx</p> </li> <li> <p> <code>Neptune</code> for Amazon Neptune</p> </li> <li> <p> <code>RDS</code> for Amazon Relational Database Service</p> </li> <li> <p> <code>Redshift</code> for Amazon Redshift</p> </li> <li> <p> <code>Storage Gateway</code> for Storage Gateway</p> </li> <li> <p> <code>S3</code> for Amazon S3</p> </li> <li> <p> <code>Timestream</code> for Amazon Timestream</p> </li> <li> <p> <code>VirtualMachine</code> for virtual machines</p> </li> </ul>

        :param resource_type: The resource_type of this StartRestoreJobRequest.
        :type resource_type: str
        """
        if resource_type is not None and not re.search(r'^[a-zA-Z0-9\-\_\.]{1,50}$', resource_type):
            raise ValueError("Invalid value for `resource_type`, must be a follow pattern or equal to `/^[a-zA-Z0-9\-\_\.]{1,50}$/`")

        self._resource_type = resource_type

    @property
    def copy_source_tags_to_restored_resource(self):
        """Gets the copy_source_tags_to_restored_resource of this StartRestoreJobRequest.

        <p>This is an optional parameter. If this equals <code>True</code>, tags included in the backup will be copied to the restored resource.</p> <p>This can only be applied to backups created through Backup.</p>

        :return: The copy_source_tags_to_restored_resource of this StartRestoreJobRequest.
        :rtype: bool
        """
        return self._copy_source_tags_to_restored_resource

    @copy_source_tags_to_restored_resource.setter
    def copy_source_tags_to_restored_resource(self, copy_source_tags_to_restored_resource):
        """Sets the copy_source_tags_to_restored_resource of this StartRestoreJobRequest.

        <p>This is an optional parameter. If this equals <code>True</code>, tags included in the backup will be copied to the restored resource.</p> <p>This can only be applied to backups created through Backup.</p>

        :param copy_source_tags_to_restored_resource: The copy_source_tags_to_restored_resource of this StartRestoreJobRequest.
        :type copy_source_tags_to_restored_resource: bool
        """

        self._copy_source_tags_to_restored_resource = copy_source_tags_to_restored_resource
