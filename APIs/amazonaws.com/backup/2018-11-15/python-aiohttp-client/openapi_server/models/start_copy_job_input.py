# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.lifecycle import Lifecycle
from openapi_server import util


class StartCopyJobInput(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, recovery_point_arn: str=None, source_backup_vault_name: str=None, destination_backup_vault_arn: str=None, iam_role_arn: str=None, idempotency_token: str=None, lifecycle: Lifecycle=None):
        """StartCopyJobInput - a model defined in OpenAPI

        :param recovery_point_arn: The recovery_point_arn of this StartCopyJobInput.
        :param source_backup_vault_name: The source_backup_vault_name of this StartCopyJobInput.
        :param destination_backup_vault_arn: The destination_backup_vault_arn of this StartCopyJobInput.
        :param iam_role_arn: The iam_role_arn of this StartCopyJobInput.
        :param idempotency_token: The idempotency_token of this StartCopyJobInput.
        :param lifecycle: The lifecycle of this StartCopyJobInput.
        """
        self.openapi_types = {
            'recovery_point_arn': str,
            'source_backup_vault_name': str,
            'destination_backup_vault_arn': str,
            'iam_role_arn': str,
            'idempotency_token': str,
            'lifecycle': Lifecycle
        }

        self.attribute_map = {
            'recovery_point_arn': 'RecoveryPointArn',
            'source_backup_vault_name': 'SourceBackupVaultName',
            'destination_backup_vault_arn': 'DestinationBackupVaultArn',
            'iam_role_arn': 'IamRoleArn',
            'idempotency_token': 'IdempotencyToken',
            'lifecycle': 'Lifecycle'
        }

        self._recovery_point_arn = recovery_point_arn
        self._source_backup_vault_name = source_backup_vault_name
        self._destination_backup_vault_arn = destination_backup_vault_arn
        self._iam_role_arn = iam_role_arn
        self._idempotency_token = idempotency_token
        self._lifecycle = lifecycle

    @classmethod
    def from_dict(cls, dikt: dict) -> 'StartCopyJobInput':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The StartCopyJobInput of this StartCopyJobInput.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def recovery_point_arn(self):
        """Gets the recovery_point_arn of this StartCopyJobInput.


        :return: The recovery_point_arn of this StartCopyJobInput.
        :rtype: str
        """
        return self._recovery_point_arn

    @recovery_point_arn.setter
    def recovery_point_arn(self, recovery_point_arn):
        """Sets the recovery_point_arn of this StartCopyJobInput.


        :param recovery_point_arn: The recovery_point_arn of this StartCopyJobInput.
        :type recovery_point_arn: str
        """
        if recovery_point_arn is None:
            raise ValueError("Invalid value for `recovery_point_arn`, must not be `None`")

        self._recovery_point_arn = recovery_point_arn

    @property
    def source_backup_vault_name(self):
        """Gets the source_backup_vault_name of this StartCopyJobInput.


        :return: The source_backup_vault_name of this StartCopyJobInput.
        :rtype: str
        """
        return self._source_backup_vault_name

    @source_backup_vault_name.setter
    def source_backup_vault_name(self, source_backup_vault_name):
        """Sets the source_backup_vault_name of this StartCopyJobInput.


        :param source_backup_vault_name: The source_backup_vault_name of this StartCopyJobInput.
        :type source_backup_vault_name: str
        """
        if source_backup_vault_name is None:
            raise ValueError("Invalid value for `source_backup_vault_name`, must not be `None`")

        self._source_backup_vault_name = source_backup_vault_name

    @property
    def destination_backup_vault_arn(self):
        """Gets the destination_backup_vault_arn of this StartCopyJobInput.


        :return: The destination_backup_vault_arn of this StartCopyJobInput.
        :rtype: str
        """
        return self._destination_backup_vault_arn

    @destination_backup_vault_arn.setter
    def destination_backup_vault_arn(self, destination_backup_vault_arn):
        """Sets the destination_backup_vault_arn of this StartCopyJobInput.


        :param destination_backup_vault_arn: The destination_backup_vault_arn of this StartCopyJobInput.
        :type destination_backup_vault_arn: str
        """
        if destination_backup_vault_arn is None:
            raise ValueError("Invalid value for `destination_backup_vault_arn`, must not be `None`")

        self._destination_backup_vault_arn = destination_backup_vault_arn

    @property
    def iam_role_arn(self):
        """Gets the iam_role_arn of this StartCopyJobInput.


        :return: The iam_role_arn of this StartCopyJobInput.
        :rtype: str
        """
        return self._iam_role_arn

    @iam_role_arn.setter
    def iam_role_arn(self, iam_role_arn):
        """Sets the iam_role_arn of this StartCopyJobInput.


        :param iam_role_arn: The iam_role_arn of this StartCopyJobInput.
        :type iam_role_arn: str
        """
        if iam_role_arn is None:
            raise ValueError("Invalid value for `iam_role_arn`, must not be `None`")

        self._iam_role_arn = iam_role_arn

    @property
    def idempotency_token(self):
        """Gets the idempotency_token of this StartCopyJobInput.


        :return: The idempotency_token of this StartCopyJobInput.
        :rtype: str
        """
        return self._idempotency_token

    @idempotency_token.setter
    def idempotency_token(self, idempotency_token):
        """Sets the idempotency_token of this StartCopyJobInput.


        :param idempotency_token: The idempotency_token of this StartCopyJobInput.
        :type idempotency_token: str
        """

        self._idempotency_token = idempotency_token

    @property
    def lifecycle(self):
        """Gets the lifecycle of this StartCopyJobInput.


        :return: The lifecycle of this StartCopyJobInput.
        :rtype: Lifecycle
        """
        return self._lifecycle

    @lifecycle.setter
    def lifecycle(self, lifecycle):
        """Sets the lifecycle of this StartCopyJobInput.


        :param lifecycle: The lifecycle of this StartCopyJobInput.
        :type lifecycle: Lifecycle
        """

        self._lifecycle = lifecycle
