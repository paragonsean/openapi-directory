# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.get_backup_plan_output_backup_plan import GetBackupPlanOutputBackupPlan
from openapi_server import util


class GetBackupPlanFromJSONOutput(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, backup_plan: GetBackupPlanOutputBackupPlan=None):
        """GetBackupPlanFromJSONOutput - a model defined in OpenAPI

        :param backup_plan: The backup_plan of this GetBackupPlanFromJSONOutput.
        """
        self.openapi_types = {
            'backup_plan': GetBackupPlanOutputBackupPlan
        }

        self.attribute_map = {
            'backup_plan': 'BackupPlan'
        }

        self._backup_plan = backup_plan

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GetBackupPlanFromJSONOutput':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The GetBackupPlanFromJSONOutput of this GetBackupPlanFromJSONOutput.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def backup_plan(self):
        """Gets the backup_plan of this GetBackupPlanFromJSONOutput.


        :return: The backup_plan of this GetBackupPlanFromJSONOutput.
        :rtype: GetBackupPlanOutputBackupPlan
        """
        return self._backup_plan

    @backup_plan.setter
    def backup_plan(self, backup_plan):
        """Sets the backup_plan of this GetBackupPlanFromJSONOutput.


        :param backup_plan: The backup_plan of this GetBackupPlanFromJSONOutput.
        :type backup_plan: GetBackupPlanOutputBackupPlan
        """

        self._backup_plan = backup_plan
