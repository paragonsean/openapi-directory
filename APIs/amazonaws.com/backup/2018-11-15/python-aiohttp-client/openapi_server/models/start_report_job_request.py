# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class StartReportJobRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, idempotency_token: str=None):
        """StartReportJobRequest - a model defined in OpenAPI

        :param idempotency_token: The idempotency_token of this StartReportJobRequest.
        """
        self.openapi_types = {
            'idempotency_token': str
        }

        self.attribute_map = {
            'idempotency_token': 'IdempotencyToken'
        }

        self._idempotency_token = idempotency_token

    @classmethod
    def from_dict(cls, dikt: dict) -> 'StartReportJobRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The StartReportJob_request of this StartReportJobRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def idempotency_token(self):
        """Gets the idempotency_token of this StartReportJobRequest.

        A customer-chosen string that you can use to distinguish between otherwise identical calls to <code>StartReportJobInput</code>. Retrying a successful request with the same idempotency token results in a success message with no action taken.

        :return: The idempotency_token of this StartReportJobRequest.
        :rtype: str
        """
        return self._idempotency_token

    @idempotency_token.setter
    def idempotency_token(self, idempotency_token):
        """Sets the idempotency_token of this StartReportJobRequest.

        A customer-chosen string that you can use to distinguish between otherwise identical calls to <code>StartReportJobInput</code>. Retrying a successful request with the same idempotency token results in a success message with no action taken.

        :param idempotency_token: The idempotency_token of this StartReportJobRequest.
        :type idempotency_token: str
        """

        self._idempotency_token = idempotency_token
