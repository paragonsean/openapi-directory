# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.create_backup_plan_request_backup_plan import CreateBackupPlanRequestBackupPlan
from openapi_server import util


class CreateBackupPlanRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, backup_plan: CreateBackupPlanRequestBackupPlan=None, backup_plan_tags: Dict[str, str]=None, creator_request_id: str=None):
        """CreateBackupPlanRequest - a model defined in OpenAPI

        :param backup_plan: The backup_plan of this CreateBackupPlanRequest.
        :param backup_plan_tags: The backup_plan_tags of this CreateBackupPlanRequest.
        :param creator_request_id: The creator_request_id of this CreateBackupPlanRequest.
        """
        self.openapi_types = {
            'backup_plan': CreateBackupPlanRequestBackupPlan,
            'backup_plan_tags': Dict[str, str],
            'creator_request_id': str
        }

        self.attribute_map = {
            'backup_plan': 'BackupPlan',
            'backup_plan_tags': 'BackupPlanTags',
            'creator_request_id': 'CreatorRequestId'
        }

        self._backup_plan = backup_plan
        self._backup_plan_tags = backup_plan_tags
        self._creator_request_id = creator_request_id

    @classmethod
    def from_dict(cls, dikt: dict) -> 'CreateBackupPlanRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The CreateBackupPlan_request of this CreateBackupPlanRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def backup_plan(self):
        """Gets the backup_plan of this CreateBackupPlanRequest.


        :return: The backup_plan of this CreateBackupPlanRequest.
        :rtype: CreateBackupPlanRequestBackupPlan
        """
        return self._backup_plan

    @backup_plan.setter
    def backup_plan(self, backup_plan):
        """Sets the backup_plan of this CreateBackupPlanRequest.


        :param backup_plan: The backup_plan of this CreateBackupPlanRequest.
        :type backup_plan: CreateBackupPlanRequestBackupPlan
        """
        if backup_plan is None:
            raise ValueError("Invalid value for `backup_plan`, must not be `None`")

        self._backup_plan = backup_plan

    @property
    def backup_plan_tags(self):
        """Gets the backup_plan_tags of this CreateBackupPlanRequest.

        To help organize your resources, you can assign your own metadata to the resources that you create. Each tag is a key-value pair. The specified tags are assigned to all backups created with this plan.

        :return: The backup_plan_tags of this CreateBackupPlanRequest.
        :rtype: Dict[str, str]
        """
        return self._backup_plan_tags

    @backup_plan_tags.setter
    def backup_plan_tags(self, backup_plan_tags):
        """Sets the backup_plan_tags of this CreateBackupPlanRequest.

        To help organize your resources, you can assign your own metadata to the resources that you create. Each tag is a key-value pair. The specified tags are assigned to all backups created with this plan.

        :param backup_plan_tags: The backup_plan_tags of this CreateBackupPlanRequest.
        :type backup_plan_tags: Dict[str, str]
        """

        self._backup_plan_tags = backup_plan_tags

    @property
    def creator_request_id(self):
        """Gets the creator_request_id of this CreateBackupPlanRequest.

        <p>Identifies the request and allows failed requests to be retried without the risk of running the operation twice. If the request includes a <code>CreatorRequestId</code> that matches an existing backup plan, that plan is returned. This parameter is optional.</p> <p>If used, this parameter must contain 1 to 50 alphanumeric or '-_.' characters.</p>

        :return: The creator_request_id of this CreateBackupPlanRequest.
        :rtype: str
        """
        return self._creator_request_id

    @creator_request_id.setter
    def creator_request_id(self, creator_request_id):
        """Sets the creator_request_id of this CreateBackupPlanRequest.

        <p>Identifies the request and allows failed requests to be retried without the risk of running the operation twice. If the request includes a <code>CreatorRequestId</code> that matches an existing backup plan, that plan is returned. This parameter is optional.</p> <p>If used, this parameter must contain 1 to 50 alphanumeric or '-_.' characters.</p>

        :param creator_request_id: The creator_request_id of this CreateBackupPlanRequest.
        :type creator_request_id: str
        """

        self._creator_request_id = creator_request_id
