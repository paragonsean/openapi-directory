# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class CreateFrameworkOutput(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, framework_name: str=None, framework_arn: str=None):
        """CreateFrameworkOutput - a model defined in OpenAPI

        :param framework_name: The framework_name of this CreateFrameworkOutput.
        :param framework_arn: The framework_arn of this CreateFrameworkOutput.
        """
        self.openapi_types = {
            'framework_name': str,
            'framework_arn': str
        }

        self.attribute_map = {
            'framework_name': 'FrameworkName',
            'framework_arn': 'FrameworkArn'
        }

        self._framework_name = framework_name
        self._framework_arn = framework_arn

    @classmethod
    def from_dict(cls, dikt: dict) -> 'CreateFrameworkOutput':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The CreateFrameworkOutput of this CreateFrameworkOutput.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def framework_name(self):
        """Gets the framework_name of this CreateFrameworkOutput.


        :return: The framework_name of this CreateFrameworkOutput.
        :rtype: str
        """
        return self._framework_name

    @framework_name.setter
    def framework_name(self, framework_name):
        """Sets the framework_name of this CreateFrameworkOutput.


        :param framework_name: The framework_name of this CreateFrameworkOutput.
        :type framework_name: str
        """

        self._framework_name = framework_name

    @property
    def framework_arn(self):
        """Gets the framework_arn of this CreateFrameworkOutput.


        :return: The framework_arn of this CreateFrameworkOutput.
        :rtype: str
        """
        return self._framework_arn

    @framework_arn.setter
    def framework_arn(self, framework_arn):
        """Sets the framework_arn of this CreateFrameworkOutput.


        :param framework_arn: The framework_arn of this CreateFrameworkOutput.
        :type framework_arn: str
        """

        self._framework_arn = framework_arn
