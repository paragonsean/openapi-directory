# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class DescribeFrameworkOutput(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, framework_name: str=None, framework_arn: str=None, framework_description: str=None, framework_controls: List=None, creation_time: datetime=None, deployment_status: str=None, framework_status: str=None, idempotency_token: str=None):
        """DescribeFrameworkOutput - a model defined in OpenAPI

        :param framework_name: The framework_name of this DescribeFrameworkOutput.
        :param framework_arn: The framework_arn of this DescribeFrameworkOutput.
        :param framework_description: The framework_description of this DescribeFrameworkOutput.
        :param framework_controls: The framework_controls of this DescribeFrameworkOutput.
        :param creation_time: The creation_time of this DescribeFrameworkOutput.
        :param deployment_status: The deployment_status of this DescribeFrameworkOutput.
        :param framework_status: The framework_status of this DescribeFrameworkOutput.
        :param idempotency_token: The idempotency_token of this DescribeFrameworkOutput.
        """
        self.openapi_types = {
            'framework_name': str,
            'framework_arn': str,
            'framework_description': str,
            'framework_controls': List,
            'creation_time': datetime,
            'deployment_status': str,
            'framework_status': str,
            'idempotency_token': str
        }

        self.attribute_map = {
            'framework_name': 'FrameworkName',
            'framework_arn': 'FrameworkArn',
            'framework_description': 'FrameworkDescription',
            'framework_controls': 'FrameworkControls',
            'creation_time': 'CreationTime',
            'deployment_status': 'DeploymentStatus',
            'framework_status': 'FrameworkStatus',
            'idempotency_token': 'IdempotencyToken'
        }

        self._framework_name = framework_name
        self._framework_arn = framework_arn
        self._framework_description = framework_description
        self._framework_controls = framework_controls
        self._creation_time = creation_time
        self._deployment_status = deployment_status
        self._framework_status = framework_status
        self._idempotency_token = idempotency_token

    @classmethod
    def from_dict(cls, dikt: dict) -> 'DescribeFrameworkOutput':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The DescribeFrameworkOutput of this DescribeFrameworkOutput.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def framework_name(self):
        """Gets the framework_name of this DescribeFrameworkOutput.


        :return: The framework_name of this DescribeFrameworkOutput.
        :rtype: str
        """
        return self._framework_name

    @framework_name.setter
    def framework_name(self, framework_name):
        """Sets the framework_name of this DescribeFrameworkOutput.


        :param framework_name: The framework_name of this DescribeFrameworkOutput.
        :type framework_name: str
        """

        self._framework_name = framework_name

    @property
    def framework_arn(self):
        """Gets the framework_arn of this DescribeFrameworkOutput.


        :return: The framework_arn of this DescribeFrameworkOutput.
        :rtype: str
        """
        return self._framework_arn

    @framework_arn.setter
    def framework_arn(self, framework_arn):
        """Sets the framework_arn of this DescribeFrameworkOutput.


        :param framework_arn: The framework_arn of this DescribeFrameworkOutput.
        :type framework_arn: str
        """

        self._framework_arn = framework_arn

    @property
    def framework_description(self):
        """Gets the framework_description of this DescribeFrameworkOutput.


        :return: The framework_description of this DescribeFrameworkOutput.
        :rtype: str
        """
        return self._framework_description

    @framework_description.setter
    def framework_description(self, framework_description):
        """Sets the framework_description of this DescribeFrameworkOutput.


        :param framework_description: The framework_description of this DescribeFrameworkOutput.
        :type framework_description: str
        """

        self._framework_description = framework_description

    @property
    def framework_controls(self):
        """Gets the framework_controls of this DescribeFrameworkOutput.


        :return: The framework_controls of this DescribeFrameworkOutput.
        :rtype: List
        """
        return self._framework_controls

    @framework_controls.setter
    def framework_controls(self, framework_controls):
        """Sets the framework_controls of this DescribeFrameworkOutput.


        :param framework_controls: The framework_controls of this DescribeFrameworkOutput.
        :type framework_controls: List
        """

        self._framework_controls = framework_controls

    @property
    def creation_time(self):
        """Gets the creation_time of this DescribeFrameworkOutput.


        :return: The creation_time of this DescribeFrameworkOutput.
        :rtype: datetime
        """
        return self._creation_time

    @creation_time.setter
    def creation_time(self, creation_time):
        """Sets the creation_time of this DescribeFrameworkOutput.


        :param creation_time: The creation_time of this DescribeFrameworkOutput.
        :type creation_time: datetime
        """

        self._creation_time = creation_time

    @property
    def deployment_status(self):
        """Gets the deployment_status of this DescribeFrameworkOutput.


        :return: The deployment_status of this DescribeFrameworkOutput.
        :rtype: str
        """
        return self._deployment_status

    @deployment_status.setter
    def deployment_status(self, deployment_status):
        """Sets the deployment_status of this DescribeFrameworkOutput.


        :param deployment_status: The deployment_status of this DescribeFrameworkOutput.
        :type deployment_status: str
        """

        self._deployment_status = deployment_status

    @property
    def framework_status(self):
        """Gets the framework_status of this DescribeFrameworkOutput.


        :return: The framework_status of this DescribeFrameworkOutput.
        :rtype: str
        """
        return self._framework_status

    @framework_status.setter
    def framework_status(self, framework_status):
        """Sets the framework_status of this DescribeFrameworkOutput.


        :param framework_status: The framework_status of this DescribeFrameworkOutput.
        :type framework_status: str
        """

        self._framework_status = framework_status

    @property
    def idempotency_token(self):
        """Gets the idempotency_token of this DescribeFrameworkOutput.


        :return: The idempotency_token of this DescribeFrameworkOutput.
        :rtype: str
        """
        return self._idempotency_token

    @idempotency_token.setter
    def idempotency_token(self, idempotency_token):
        """Sets the idempotency_token of this DescribeFrameworkOutput.


        :param idempotency_token: The idempotency_token of this DescribeFrameworkOutput.
        :type idempotency_token: str
        """

        self._idempotency_token = idempotency_token
