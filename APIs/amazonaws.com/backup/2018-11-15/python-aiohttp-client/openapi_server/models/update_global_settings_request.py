# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class UpdateGlobalSettingsRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, global_settings: Dict[str, str]=None):
        """UpdateGlobalSettingsRequest - a model defined in OpenAPI

        :param global_settings: The global_settings of this UpdateGlobalSettingsRequest.
        """
        self.openapi_types = {
            'global_settings': Dict[str, str]
        }

        self.attribute_map = {
            'global_settings': 'GlobalSettings'
        }

        self._global_settings = global_settings

    @classmethod
    def from_dict(cls, dikt: dict) -> 'UpdateGlobalSettingsRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The UpdateGlobalSettings_request of this UpdateGlobalSettingsRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def global_settings(self):
        """Gets the global_settings of this UpdateGlobalSettingsRequest.

        A value for <code>isCrossAccountBackupEnabled</code> and a Region. Example: <code>update-global-settings --global-settings isCrossAccountBackupEnabled=false --region us-west-2</code>.

        :return: The global_settings of this UpdateGlobalSettingsRequest.
        :rtype: Dict[str, str]
        """
        return self._global_settings

    @global_settings.setter
    def global_settings(self, global_settings):
        """Sets the global_settings of this UpdateGlobalSettingsRequest.

        A value for <code>isCrossAccountBackupEnabled</code> and a Region. Example: <code>update-global-settings --global-settings isCrossAccountBackupEnabled=false --region us-west-2</code>.

        :param global_settings: The global_settings of this UpdateGlobalSettingsRequest.
        :type global_settings: Dict[str, str]
        """

        self._global_settings = global_settings
