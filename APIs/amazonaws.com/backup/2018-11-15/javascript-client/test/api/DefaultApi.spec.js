/**
 * AWS Backup
 * <fullname>Backup</fullname> <p>Backup is a unified backup service designed to protect Amazon Web Services services and their associated data. Backup simplifies the creation, migration, restoration, and deletion of backups, while also providing reporting and auditing.</p>
 *
 * The version of the OpenAPI document: 2018-11-15
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.AwsBackup);
  }
}(this, function(expect, AwsBackup) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new AwsBackup.DefaultApi();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('DefaultApi', function() {
    describe('cancelLegalHold', function() {
      it('should call cancelLegalHold successfully', function(done) {
        //uncomment below and update the code to test cancelLegalHold
        //instance.cancelLegalHold(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('createBackupPlan', function() {
      it('should call createBackupPlan successfully', function(done) {
        //uncomment below and update the code to test createBackupPlan
        //instance.createBackupPlan(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('createBackupSelection', function() {
      it('should call createBackupSelection successfully', function(done) {
        //uncomment below and update the code to test createBackupSelection
        //instance.createBackupSelection(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('createBackupVault', function() {
      it('should call createBackupVault successfully', function(done) {
        //uncomment below and update the code to test createBackupVault
        //instance.createBackupVault(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('createFramework', function() {
      it('should call createFramework successfully', function(done) {
        //uncomment below and update the code to test createFramework
        //instance.createFramework(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('createLegalHold', function() {
      it('should call createLegalHold successfully', function(done) {
        //uncomment below and update the code to test createLegalHold
        //instance.createLegalHold(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('createReportPlan', function() {
      it('should call createReportPlan successfully', function(done) {
        //uncomment below and update the code to test createReportPlan
        //instance.createReportPlan(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deleteBackupPlan', function() {
      it('should call deleteBackupPlan successfully', function(done) {
        //uncomment below and update the code to test deleteBackupPlan
        //instance.deleteBackupPlan(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deleteBackupSelection', function() {
      it('should call deleteBackupSelection successfully', function(done) {
        //uncomment below and update the code to test deleteBackupSelection
        //instance.deleteBackupSelection(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deleteBackupVault', function() {
      it('should call deleteBackupVault successfully', function(done) {
        //uncomment below and update the code to test deleteBackupVault
        //instance.deleteBackupVault(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deleteBackupVaultAccessPolicy', function() {
      it('should call deleteBackupVaultAccessPolicy successfully', function(done) {
        //uncomment below and update the code to test deleteBackupVaultAccessPolicy
        //instance.deleteBackupVaultAccessPolicy(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deleteBackupVaultLockConfiguration', function() {
      it('should call deleteBackupVaultLockConfiguration successfully', function(done) {
        //uncomment below and update the code to test deleteBackupVaultLockConfiguration
        //instance.deleteBackupVaultLockConfiguration(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deleteBackupVaultNotifications', function() {
      it('should call deleteBackupVaultNotifications successfully', function(done) {
        //uncomment below and update the code to test deleteBackupVaultNotifications
        //instance.deleteBackupVaultNotifications(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deleteFramework', function() {
      it('should call deleteFramework successfully', function(done) {
        //uncomment below and update the code to test deleteFramework
        //instance.deleteFramework(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deleteRecoveryPoint', function() {
      it('should call deleteRecoveryPoint successfully', function(done) {
        //uncomment below and update the code to test deleteRecoveryPoint
        //instance.deleteRecoveryPoint(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deleteReportPlan', function() {
      it('should call deleteReportPlan successfully', function(done) {
        //uncomment below and update the code to test deleteReportPlan
        //instance.deleteReportPlan(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('describeBackupJob', function() {
      it('should call describeBackupJob successfully', function(done) {
        //uncomment below and update the code to test describeBackupJob
        //instance.describeBackupJob(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('describeBackupVault', function() {
      it('should call describeBackupVault successfully', function(done) {
        //uncomment below and update the code to test describeBackupVault
        //instance.describeBackupVault(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('describeCopyJob', function() {
      it('should call describeCopyJob successfully', function(done) {
        //uncomment below and update the code to test describeCopyJob
        //instance.describeCopyJob(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('describeFramework', function() {
      it('should call describeFramework successfully', function(done) {
        //uncomment below and update the code to test describeFramework
        //instance.describeFramework(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('describeGlobalSettings', function() {
      it('should call describeGlobalSettings successfully', function(done) {
        //uncomment below and update the code to test describeGlobalSettings
        //instance.describeGlobalSettings(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('describeProtectedResource', function() {
      it('should call describeProtectedResource successfully', function(done) {
        //uncomment below and update the code to test describeProtectedResource
        //instance.describeProtectedResource(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('describeRecoveryPoint', function() {
      it('should call describeRecoveryPoint successfully', function(done) {
        //uncomment below and update the code to test describeRecoveryPoint
        //instance.describeRecoveryPoint(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('describeRegionSettings', function() {
      it('should call describeRegionSettings successfully', function(done) {
        //uncomment below and update the code to test describeRegionSettings
        //instance.describeRegionSettings(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('describeReportJob', function() {
      it('should call describeReportJob successfully', function(done) {
        //uncomment below and update the code to test describeReportJob
        //instance.describeReportJob(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('describeReportPlan', function() {
      it('should call describeReportPlan successfully', function(done) {
        //uncomment below and update the code to test describeReportPlan
        //instance.describeReportPlan(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('describeRestoreJob', function() {
      it('should call describeRestoreJob successfully', function(done) {
        //uncomment below and update the code to test describeRestoreJob
        //instance.describeRestoreJob(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('disassociateRecoveryPoint', function() {
      it('should call disassociateRecoveryPoint successfully', function(done) {
        //uncomment below and update the code to test disassociateRecoveryPoint
        //instance.disassociateRecoveryPoint(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('disassociateRecoveryPointFromParent', function() {
      it('should call disassociateRecoveryPointFromParent successfully', function(done) {
        //uncomment below and update the code to test disassociateRecoveryPointFromParent
        //instance.disassociateRecoveryPointFromParent(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('exportBackupPlanTemplate', function() {
      it('should call exportBackupPlanTemplate successfully', function(done) {
        //uncomment below and update the code to test exportBackupPlanTemplate
        //instance.exportBackupPlanTemplate(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getBackupPlan', function() {
      it('should call getBackupPlan successfully', function(done) {
        //uncomment below and update the code to test getBackupPlan
        //instance.getBackupPlan(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getBackupPlanFromJSON', function() {
      it('should call getBackupPlanFromJSON successfully', function(done) {
        //uncomment below and update the code to test getBackupPlanFromJSON
        //instance.getBackupPlanFromJSON(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getBackupPlanFromTemplate', function() {
      it('should call getBackupPlanFromTemplate successfully', function(done) {
        //uncomment below and update the code to test getBackupPlanFromTemplate
        //instance.getBackupPlanFromTemplate(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getBackupSelection', function() {
      it('should call getBackupSelection successfully', function(done) {
        //uncomment below and update the code to test getBackupSelection
        //instance.getBackupSelection(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getBackupVaultAccessPolicy', function() {
      it('should call getBackupVaultAccessPolicy successfully', function(done) {
        //uncomment below and update the code to test getBackupVaultAccessPolicy
        //instance.getBackupVaultAccessPolicy(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getBackupVaultNotifications', function() {
      it('should call getBackupVaultNotifications successfully', function(done) {
        //uncomment below and update the code to test getBackupVaultNotifications
        //instance.getBackupVaultNotifications(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getLegalHold', function() {
      it('should call getLegalHold successfully', function(done) {
        //uncomment below and update the code to test getLegalHold
        //instance.getLegalHold(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getRecoveryPointRestoreMetadata', function() {
      it('should call getRecoveryPointRestoreMetadata successfully', function(done) {
        //uncomment below and update the code to test getRecoveryPointRestoreMetadata
        //instance.getRecoveryPointRestoreMetadata(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getSupportedResourceTypes', function() {
      it('should call getSupportedResourceTypes successfully', function(done) {
        //uncomment below and update the code to test getSupportedResourceTypes
        //instance.getSupportedResourceTypes(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('listBackupJobs', function() {
      it('should call listBackupJobs successfully', function(done) {
        //uncomment below and update the code to test listBackupJobs
        //instance.listBackupJobs(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('listBackupPlanTemplates', function() {
      it('should call listBackupPlanTemplates successfully', function(done) {
        //uncomment below and update the code to test listBackupPlanTemplates
        //instance.listBackupPlanTemplates(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('listBackupPlanVersions', function() {
      it('should call listBackupPlanVersions successfully', function(done) {
        //uncomment below and update the code to test listBackupPlanVersions
        //instance.listBackupPlanVersions(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('listBackupPlans', function() {
      it('should call listBackupPlans successfully', function(done) {
        //uncomment below and update the code to test listBackupPlans
        //instance.listBackupPlans(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('listBackupSelections', function() {
      it('should call listBackupSelections successfully', function(done) {
        //uncomment below and update the code to test listBackupSelections
        //instance.listBackupSelections(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('listBackupVaults', function() {
      it('should call listBackupVaults successfully', function(done) {
        //uncomment below and update the code to test listBackupVaults
        //instance.listBackupVaults(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('listCopyJobs', function() {
      it('should call listCopyJobs successfully', function(done) {
        //uncomment below and update the code to test listCopyJobs
        //instance.listCopyJobs(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('listFrameworks', function() {
      it('should call listFrameworks successfully', function(done) {
        //uncomment below and update the code to test listFrameworks
        //instance.listFrameworks(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('listLegalHolds', function() {
      it('should call listLegalHolds successfully', function(done) {
        //uncomment below and update the code to test listLegalHolds
        //instance.listLegalHolds(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('listProtectedResources', function() {
      it('should call listProtectedResources successfully', function(done) {
        //uncomment below and update the code to test listProtectedResources
        //instance.listProtectedResources(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('listRecoveryPointsByBackupVault', function() {
      it('should call listRecoveryPointsByBackupVault successfully', function(done) {
        //uncomment below and update the code to test listRecoveryPointsByBackupVault
        //instance.listRecoveryPointsByBackupVault(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('listRecoveryPointsByLegalHold', function() {
      it('should call listRecoveryPointsByLegalHold successfully', function(done) {
        //uncomment below and update the code to test listRecoveryPointsByLegalHold
        //instance.listRecoveryPointsByLegalHold(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('listRecoveryPointsByResource', function() {
      it('should call listRecoveryPointsByResource successfully', function(done) {
        //uncomment below and update the code to test listRecoveryPointsByResource
        //instance.listRecoveryPointsByResource(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('listReportJobs', function() {
      it('should call listReportJobs successfully', function(done) {
        //uncomment below and update the code to test listReportJobs
        //instance.listReportJobs(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('listReportPlans', function() {
      it('should call listReportPlans successfully', function(done) {
        //uncomment below and update the code to test listReportPlans
        //instance.listReportPlans(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('listRestoreJobs', function() {
      it('should call listRestoreJobs successfully', function(done) {
        //uncomment below and update the code to test listRestoreJobs
        //instance.listRestoreJobs(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('listTags', function() {
      it('should call listTags successfully', function(done) {
        //uncomment below and update the code to test listTags
        //instance.listTags(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('putBackupVaultAccessPolicy', function() {
      it('should call putBackupVaultAccessPolicy successfully', function(done) {
        //uncomment below and update the code to test putBackupVaultAccessPolicy
        //instance.putBackupVaultAccessPolicy(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('putBackupVaultLockConfiguration', function() {
      it('should call putBackupVaultLockConfiguration successfully', function(done) {
        //uncomment below and update the code to test putBackupVaultLockConfiguration
        //instance.putBackupVaultLockConfiguration(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('putBackupVaultNotifications', function() {
      it('should call putBackupVaultNotifications successfully', function(done) {
        //uncomment below and update the code to test putBackupVaultNotifications
        //instance.putBackupVaultNotifications(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('startBackupJob', function() {
      it('should call startBackupJob successfully', function(done) {
        //uncomment below and update the code to test startBackupJob
        //instance.startBackupJob(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('startCopyJob', function() {
      it('should call startCopyJob successfully', function(done) {
        //uncomment below and update the code to test startCopyJob
        //instance.startCopyJob(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('startReportJob', function() {
      it('should call startReportJob successfully', function(done) {
        //uncomment below and update the code to test startReportJob
        //instance.startReportJob(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('startRestoreJob', function() {
      it('should call startRestoreJob successfully', function(done) {
        //uncomment below and update the code to test startRestoreJob
        //instance.startRestoreJob(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('stopBackupJob', function() {
      it('should call stopBackupJob successfully', function(done) {
        //uncomment below and update the code to test stopBackupJob
        //instance.stopBackupJob(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('tagResource', function() {
      it('should call tagResource successfully', function(done) {
        //uncomment below and update the code to test tagResource
        //instance.tagResource(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('untagResource', function() {
      it('should call untagResource successfully', function(done) {
        //uncomment below and update the code to test untagResource
        //instance.untagResource(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('updateBackupPlan', function() {
      it('should call updateBackupPlan successfully', function(done) {
        //uncomment below and update the code to test updateBackupPlan
        //instance.updateBackupPlan(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('updateFramework', function() {
      it('should call updateFramework successfully', function(done) {
        //uncomment below and update the code to test updateFramework
        //instance.updateFramework(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('updateGlobalSettings', function() {
      it('should call updateGlobalSettings successfully', function(done) {
        //uncomment below and update the code to test updateGlobalSettings
        //instance.updateGlobalSettings(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('updateRecoveryPointLifecycle', function() {
      it('should call updateRecoveryPointLifecycle successfully', function(done) {
        //uncomment below and update the code to test updateRecoveryPointLifecycle
        //instance.updateRecoveryPointLifecycle(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('updateRegionSettings', function() {
      it('should call updateRegionSettings successfully', function(done) {
        //uncomment below and update the code to test updateRegionSettings
        //instance.updateRegionSettings(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('updateReportPlan', function() {
      it('should call updateReportPlan successfully', function(done) {
        //uncomment below and update the code to test updateReportPlan
        //instance.updateReportPlan(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
  });

}));
