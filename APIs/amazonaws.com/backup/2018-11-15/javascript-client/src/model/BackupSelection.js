/**
 * AWS Backup
 * <fullname>Backup</fullname> <p>Backup is a unified backup service designed to protect Amazon Web Services services and their associated data. Backup simplifies the creation, migration, restoration, and deletion of backups, while also providing reporting and auditing.</p>
 *
 * The version of the OpenAPI document: 2018-11-15
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import CreateBackupSelectionRequestBackupSelectionConditions from './CreateBackupSelectionRequestBackupSelectionConditions';

/**
 * The BackupSelection model module.
 * @module model/BackupSelection
 * @version 2018-11-15
 */
class BackupSelection {
    /**
     * Constructs a new <code>BackupSelection</code>.
     * &lt;p&gt;Used to specify a set of resources to a backup plan.&lt;/p&gt; &lt;p&gt;Specifying your desired &lt;code&gt;Conditions&lt;/code&gt;, &lt;code&gt;ListOfTags&lt;/code&gt;, &lt;code&gt;NotResources&lt;/code&gt;, and/or &lt;code&gt;Resources&lt;/code&gt; is recommended. If none of these are specified, Backup will attempt to select all supported and opted-in storage resources, which could have unintended cost implications.&lt;/p&gt;
     * @alias module:model/BackupSelection
     * @param selectionName {String} 
     * @param iamRoleArn {String} 
     */
    constructor(selectionName, iamRoleArn) { 
        
        BackupSelection.initialize(this, selectionName, iamRoleArn);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, selectionName, iamRoleArn) { 
        obj['SelectionName'] = selectionName;
        obj['IamRoleArn'] = iamRoleArn;
    }

    /**
     * Constructs a <code>BackupSelection</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/BackupSelection} obj Optional instance to populate.
     * @return {module:model/BackupSelection} The populated <code>BackupSelection</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new BackupSelection();

            if (data.hasOwnProperty('SelectionName')) {
                obj['SelectionName'] = ApiClient.convertToType(data['SelectionName'], 'String');
            }
            if (data.hasOwnProperty('IamRoleArn')) {
                obj['IamRoleArn'] = ApiClient.convertToType(data['IamRoleArn'], 'String');
            }
            if (data.hasOwnProperty('Resources')) {
                obj['Resources'] = ApiClient.convertToType(data['Resources'], Array);
            }
            if (data.hasOwnProperty('ListOfTags')) {
                obj['ListOfTags'] = ApiClient.convertToType(data['ListOfTags'], Array);
            }
            if (data.hasOwnProperty('NotResources')) {
                obj['NotResources'] = ApiClient.convertToType(data['NotResources'], Array);
            }
            if (data.hasOwnProperty('Conditions')) {
                obj['Conditions'] = CreateBackupSelectionRequestBackupSelectionConditions.constructFromObject(data['Conditions']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>BackupSelection</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>BackupSelection</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of BackupSelection.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // validate the optional field `SelectionName`
        if (data['SelectionName']) { // data not null
          String.validateJSON(data['SelectionName']);
        }
        // validate the optional field `IamRoleArn`
        if (data['IamRoleArn']) { // data not null
          String.validateJSON(data['IamRoleArn']);
        }
        // validate the optional field `Resources`
        if (data['Resources']) { // data not null
          Array.validateJSON(data['Resources']);
        }
        // validate the optional field `ListOfTags`
        if (data['ListOfTags']) { // data not null
          Array.validateJSON(data['ListOfTags']);
        }
        // validate the optional field `NotResources`
        if (data['NotResources']) { // data not null
          Array.validateJSON(data['NotResources']);
        }
        // validate the optional field `Conditions`
        if (data['Conditions']) { // data not null
          CreateBackupSelectionRequestBackupSelectionConditions.validateJSON(data['Conditions']);
        }

        return true;
    }


}

BackupSelection.RequiredProperties = ["SelectionName", "IamRoleArn"];

/**
 * @member {String} SelectionName
 */
BackupSelection.prototype['SelectionName'] = undefined;

/**
 * @member {String} IamRoleArn
 */
BackupSelection.prototype['IamRoleArn'] = undefined;

/**
 * @member {Array} Resources
 */
BackupSelection.prototype['Resources'] = undefined;

/**
 * @member {Array} ListOfTags
 */
BackupSelection.prototype['ListOfTags'] = undefined;

/**
 * @member {Array} NotResources
 */
BackupSelection.prototype['NotResources'] = undefined;

/**
 * @member {module:model/CreateBackupSelectionRequestBackupSelectionConditions} Conditions
 */
BackupSelection.prototype['Conditions'] = undefined;






export default BackupSelection;

