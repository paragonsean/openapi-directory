/**
 * AWS Backup
 * <fullname>Backup</fullname> <p>Backup is a unified backup service designed to protect Amazon Web Services services and their associated data. Backup simplifies the creation, migration, restoration, and deletion of backups, while also providing reporting and auditing.</p>
 *
 * The version of the OpenAPI document: 2018-11-15
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import CreateReportPlanInputReportDeliveryChannel from './CreateReportPlanInputReportDeliveryChannel';
import CreateReportPlanInputReportSetting from './CreateReportPlanInputReportSetting';

/**
 * The CreateReportPlanInput model module.
 * @module model/CreateReportPlanInput
 * @version 2018-11-15
 */
class CreateReportPlanInput {
    /**
     * Constructs a new <code>CreateReportPlanInput</code>.
     * @alias module:model/CreateReportPlanInput
     * @param reportPlanName {String} 
     * @param reportDeliveryChannel {module:model/CreateReportPlanInputReportDeliveryChannel} 
     * @param reportSetting {module:model/CreateReportPlanInputReportSetting} 
     */
    constructor(reportPlanName, reportDeliveryChannel, reportSetting) { 
        
        CreateReportPlanInput.initialize(this, reportPlanName, reportDeliveryChannel, reportSetting);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, reportPlanName, reportDeliveryChannel, reportSetting) { 
        obj['ReportPlanName'] = reportPlanName;
        obj['ReportDeliveryChannel'] = reportDeliveryChannel;
        obj['ReportSetting'] = reportSetting;
    }

    /**
     * Constructs a <code>CreateReportPlanInput</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/CreateReportPlanInput} obj Optional instance to populate.
     * @return {module:model/CreateReportPlanInput} The populated <code>CreateReportPlanInput</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new CreateReportPlanInput();

            if (data.hasOwnProperty('ReportPlanName')) {
                obj['ReportPlanName'] = ApiClient.convertToType(data['ReportPlanName'], 'String');
            }
            if (data.hasOwnProperty('ReportPlanDescription')) {
                obj['ReportPlanDescription'] = ApiClient.convertToType(data['ReportPlanDescription'], 'String');
            }
            if (data.hasOwnProperty('ReportDeliveryChannel')) {
                obj['ReportDeliveryChannel'] = CreateReportPlanInputReportDeliveryChannel.constructFromObject(data['ReportDeliveryChannel']);
            }
            if (data.hasOwnProperty('ReportSetting')) {
                obj['ReportSetting'] = CreateReportPlanInputReportSetting.constructFromObject(data['ReportSetting']);
            }
            if (data.hasOwnProperty('ReportPlanTags')) {
                obj['ReportPlanTags'] = ApiClient.convertToType(data['ReportPlanTags'], Object);
            }
            if (data.hasOwnProperty('IdempotencyToken')) {
                obj['IdempotencyToken'] = ApiClient.convertToType(data['IdempotencyToken'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>CreateReportPlanInput</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>CreateReportPlanInput</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of CreateReportPlanInput.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // validate the optional field `ReportPlanName`
        if (data['ReportPlanName']) { // data not null
          String.validateJSON(data['ReportPlanName']);
        }
        // validate the optional field `ReportPlanDescription`
        if (data['ReportPlanDescription']) { // data not null
          String.validateJSON(data['ReportPlanDescription']);
        }
        // validate the optional field `ReportDeliveryChannel`
        if (data['ReportDeliveryChannel']) { // data not null
          CreateReportPlanInputReportDeliveryChannel.validateJSON(data['ReportDeliveryChannel']);
        }
        // validate the optional field `ReportSetting`
        if (data['ReportSetting']) { // data not null
          CreateReportPlanInputReportSetting.validateJSON(data['ReportSetting']);
        }
        // validate the optional field `ReportPlanTags`
        if (data['ReportPlanTags']) { // data not null
          Object.validateJSON(data['ReportPlanTags']);
        }
        // validate the optional field `IdempotencyToken`
        if (data['IdempotencyToken']) { // data not null
          String.validateJSON(data['IdempotencyToken']);
        }

        return true;
    }


}

CreateReportPlanInput.RequiredProperties = ["ReportPlanName", "ReportDeliveryChannel", "ReportSetting"];

/**
 * @member {String} ReportPlanName
 */
CreateReportPlanInput.prototype['ReportPlanName'] = undefined;

/**
 * @member {String} ReportPlanDescription
 */
CreateReportPlanInput.prototype['ReportPlanDescription'] = undefined;

/**
 * @member {module:model/CreateReportPlanInputReportDeliveryChannel} ReportDeliveryChannel
 */
CreateReportPlanInput.prototype['ReportDeliveryChannel'] = undefined;

/**
 * @member {module:model/CreateReportPlanInputReportSetting} ReportSetting
 */
CreateReportPlanInput.prototype['ReportSetting'] = undefined;

/**
 * @member {Object} ReportPlanTags
 */
CreateReportPlanInput.prototype['ReportPlanTags'] = undefined;

/**
 * @member {String} IdempotencyToken
 */
CreateReportPlanInput.prototype['IdempotencyToken'] = undefined;






export default CreateReportPlanInput;

