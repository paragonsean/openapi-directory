/**
 * AWS Backup
 * <fullname>Backup</fullname> <p>Backup is a unified backup service designed to protect Amazon Web Services services and their associated data. Backup simplifies the creation, migration, restoration, and deletion of backups, while also providing reporting and auditing.</p>
 *
 * The version of the OpenAPI document: 2018-11-15
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import ControlScope from './ControlScope';

/**
 * The FrameworkControlControlScope model module.
 * @module model/FrameworkControlControlScope
 * @version 2018-11-15
 */
class FrameworkControlControlScope {
    /**
     * Constructs a new <code>FrameworkControlControlScope</code>.
     * @alias module:model/FrameworkControlControlScope
     * @implements module:model/ControlScope
     */
    constructor() { 
        ControlScope.initialize(this);
        FrameworkControlControlScope.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>FrameworkControlControlScope</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/FrameworkControlControlScope} obj Optional instance to populate.
     * @return {module:model/FrameworkControlControlScope} The populated <code>FrameworkControlControlScope</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new FrameworkControlControlScope();
            ControlScope.constructFromObject(data, obj);

            if (data.hasOwnProperty('ComplianceResourceIds')) {
                obj['ComplianceResourceIds'] = ApiClient.convertToType(data['ComplianceResourceIds'], Array);
            }
            if (data.hasOwnProperty('ComplianceResourceTypes')) {
                obj['ComplianceResourceTypes'] = ApiClient.convertToType(data['ComplianceResourceTypes'], Array);
            }
            if (data.hasOwnProperty('Tags')) {
                obj['Tags'] = ApiClient.convertToType(data['Tags'], Object);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>FrameworkControlControlScope</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>FrameworkControlControlScope</code>.
     */
    static validateJSON(data) {
        // validate the optional field `ComplianceResourceIds`
        if (data['ComplianceResourceIds']) { // data not null
          Array.validateJSON(data['ComplianceResourceIds']);
        }
        // validate the optional field `ComplianceResourceTypes`
        if (data['ComplianceResourceTypes']) { // data not null
          Array.validateJSON(data['ComplianceResourceTypes']);
        }
        // validate the optional field `Tags`
        if (data['Tags']) { // data not null
          Object.validateJSON(data['Tags']);
        }

        return true;
    }


}



/**
 * @member {Array} ComplianceResourceIds
 */
FrameworkControlControlScope.prototype['ComplianceResourceIds'] = undefined;

/**
 * @member {Array} ComplianceResourceTypes
 */
FrameworkControlControlScope.prototype['ComplianceResourceTypes'] = undefined;

/**
 * @member {Object} Tags
 */
FrameworkControlControlScope.prototype['Tags'] = undefined;


// Implement ControlScope interface:
/**
 * @member {Array} ComplianceResourceIds
 */
ControlScope.prototype['ComplianceResourceIds'] = undefined;
/**
 * @member {Array} ComplianceResourceTypes
 */
ControlScope.prototype['ComplianceResourceTypes'] = undefined;
/**
 * @member {Object} Tags
 */
ControlScope.prototype['Tags'] = undefined;




export default FrameworkControlControlScope;

