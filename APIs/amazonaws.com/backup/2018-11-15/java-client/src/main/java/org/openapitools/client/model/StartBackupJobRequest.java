/*
 * AWS Backup
 * <fullname>Backup</fullname> <p>Backup is a unified backup service designed to protect Amazon Web Services services and their associated data. Backup simplifies the creation, migration, restoration, and deletion of backups, while also providing reporting and auditing.</p>
 *
 * The version of the OpenAPI document: 2018-11-15
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;
import java.util.HashMap;
import java.util.Map;
import org.openapitools.client.model.UpdateRecoveryPointLifecycleRequestLifecycle;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * StartBackupJobRequest
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T12:06:47.732009-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class StartBackupJobRequest {
  public static final String SERIALIZED_NAME_BACKUP_VAULT_NAME = "BackupVaultName";
  @SerializedName(SERIALIZED_NAME_BACKUP_VAULT_NAME)
  private String backupVaultName;

  public static final String SERIALIZED_NAME_RESOURCE_ARN = "ResourceArn";
  @SerializedName(SERIALIZED_NAME_RESOURCE_ARN)
  private String resourceArn;

  public static final String SERIALIZED_NAME_IAM_ROLE_ARN = "IamRoleArn";
  @SerializedName(SERIALIZED_NAME_IAM_ROLE_ARN)
  private String iamRoleArn;

  public static final String SERIALIZED_NAME_IDEMPOTENCY_TOKEN = "IdempotencyToken";
  @SerializedName(SERIALIZED_NAME_IDEMPOTENCY_TOKEN)
  private String idempotencyToken;

  public static final String SERIALIZED_NAME_START_WINDOW_MINUTES = "StartWindowMinutes";
  @SerializedName(SERIALIZED_NAME_START_WINDOW_MINUTES)
  private Integer startWindowMinutes;

  public static final String SERIALIZED_NAME_COMPLETE_WINDOW_MINUTES = "CompleteWindowMinutes";
  @SerializedName(SERIALIZED_NAME_COMPLETE_WINDOW_MINUTES)
  private Integer completeWindowMinutes;

  public static final String SERIALIZED_NAME_LIFECYCLE = "Lifecycle";
  @SerializedName(SERIALIZED_NAME_LIFECYCLE)
  private UpdateRecoveryPointLifecycleRequestLifecycle lifecycle;

  public static final String SERIALIZED_NAME_RECOVERY_POINT_TAGS = "RecoveryPointTags";
  @SerializedName(SERIALIZED_NAME_RECOVERY_POINT_TAGS)
  private Map<String, String> recoveryPointTags = new HashMap<>();

  public static final String SERIALIZED_NAME_BACKUP_OPTIONS = "BackupOptions";
  @SerializedName(SERIALIZED_NAME_BACKUP_OPTIONS)
  private Map<String, String> backupOptions = new HashMap<>();

  public StartBackupJobRequest() {
  }

  public StartBackupJobRequest backupVaultName(String backupVaultName) {
    this.backupVaultName = backupVaultName;
    return this;
  }

  /**
   * The name of a logical container where backups are stored. Backup vaults are identified by names that are unique to the account used to create them and the Amazon Web Services Region where they are created. They consist of lowercase letters, numbers, and hyphens.
   * @return backupVaultName
   */
  @javax.annotation.Nonnull
  public String getBackupVaultName() {
    return backupVaultName;
  }

  public void setBackupVaultName(String backupVaultName) {
    this.backupVaultName = backupVaultName;
  }


  public StartBackupJobRequest resourceArn(String resourceArn) {
    this.resourceArn = resourceArn;
    return this;
  }

  /**
   * An Amazon Resource Name (ARN) that uniquely identifies a resource. The format of the ARN depends on the resource type.
   * @return resourceArn
   */
  @javax.annotation.Nonnull
  public String getResourceArn() {
    return resourceArn;
  }

  public void setResourceArn(String resourceArn) {
    this.resourceArn = resourceArn;
  }


  public StartBackupJobRequest iamRoleArn(String iamRoleArn) {
    this.iamRoleArn = iamRoleArn;
    return this;
  }

  /**
   * Specifies the IAM role ARN used to create the target recovery point; for example, &lt;code&gt;arn:aws:iam::123456789012:role/S3Access&lt;/code&gt;.
   * @return iamRoleArn
   */
  @javax.annotation.Nonnull
  public String getIamRoleArn() {
    return iamRoleArn;
  }

  public void setIamRoleArn(String iamRoleArn) {
    this.iamRoleArn = iamRoleArn;
  }


  public StartBackupJobRequest idempotencyToken(String idempotencyToken) {
    this.idempotencyToken = idempotencyToken;
    return this;
  }

  /**
   * A customer-chosen string that you can use to distinguish between otherwise identical calls to &lt;code&gt;StartBackupJob&lt;/code&gt;. Retrying a successful request with the same idempotency token results in a success message with no action taken.
   * @return idempotencyToken
   */
  @javax.annotation.Nullable
  public String getIdempotencyToken() {
    return idempotencyToken;
  }

  public void setIdempotencyToken(String idempotencyToken) {
    this.idempotencyToken = idempotencyToken;
  }


  public StartBackupJobRequest startWindowMinutes(Integer startWindowMinutes) {
    this.startWindowMinutes = startWindowMinutes;
    return this;
  }

  /**
   * &lt;p&gt;A value in minutes after a backup is scheduled before a job will be canceled if it doesn&#39;t start successfully. This value is optional, and the default is 8 hours. If this value is included, it must be at least 60 minutes to avoid errors.&lt;/p&gt; &lt;p&gt;During the start window, the backup job status remains in &lt;code&gt;CREATED&lt;/code&gt; status until it has successfully begun or until the start window time has run out. If within the start window time Backup receives an error that allows the job to be retried, Backup will automatically retry to begin the job at least every 10 minutes until the backup successfully begins (the job status changes to &lt;code&gt;RUNNING&lt;/code&gt;) or until the job status changes to &lt;code&gt;EXPIRED&lt;/code&gt; (which is expected to occur when the start window time is over).&lt;/p&gt;
   * @return startWindowMinutes
   */
  @javax.annotation.Nullable
  public Integer getStartWindowMinutes() {
    return startWindowMinutes;
  }

  public void setStartWindowMinutes(Integer startWindowMinutes) {
    this.startWindowMinutes = startWindowMinutes;
  }


  public StartBackupJobRequest completeWindowMinutes(Integer completeWindowMinutes) {
    this.completeWindowMinutes = completeWindowMinutes;
    return this;
  }

  /**
   * A value in minutes during which a successfully started backup must complete, or else Backup will cancel the job. This value is optional. This value begins counting down from when the backup was scheduled. It does not add additional time for &lt;code&gt;StartWindowMinutes&lt;/code&gt;, or if the backup started later than scheduled.
   * @return completeWindowMinutes
   */
  @javax.annotation.Nullable
  public Integer getCompleteWindowMinutes() {
    return completeWindowMinutes;
  }

  public void setCompleteWindowMinutes(Integer completeWindowMinutes) {
    this.completeWindowMinutes = completeWindowMinutes;
  }


  public StartBackupJobRequest lifecycle(UpdateRecoveryPointLifecycleRequestLifecycle lifecycle) {
    this.lifecycle = lifecycle;
    return this;
  }

  /**
   * Get lifecycle
   * @return lifecycle
   */
  @javax.annotation.Nullable
  public UpdateRecoveryPointLifecycleRequestLifecycle getLifecycle() {
    return lifecycle;
  }

  public void setLifecycle(UpdateRecoveryPointLifecycleRequestLifecycle lifecycle) {
    this.lifecycle = lifecycle;
  }


  public StartBackupJobRequest recoveryPointTags(Map<String, String> recoveryPointTags) {
    this.recoveryPointTags = recoveryPointTags;
    return this;
  }

  public StartBackupJobRequest putRecoveryPointTagsItem(String key, String recoveryPointTagsItem) {
    if (this.recoveryPointTags == null) {
      this.recoveryPointTags = new HashMap<>();
    }
    this.recoveryPointTags.put(key, recoveryPointTagsItem);
    return this;
  }

  /**
   * To help organize your resources, you can assign your own metadata to the resources that you create. Each tag is a key-value pair.
   * @return recoveryPointTags
   */
  @javax.annotation.Nullable
  public Map<String, String> getRecoveryPointTags() {
    return recoveryPointTags;
  }

  public void setRecoveryPointTags(Map<String, String> recoveryPointTags) {
    this.recoveryPointTags = recoveryPointTags;
  }


  public StartBackupJobRequest backupOptions(Map<String, String> backupOptions) {
    this.backupOptions = backupOptions;
    return this;
  }

  public StartBackupJobRequest putBackupOptionsItem(String key, String backupOptionsItem) {
    if (this.backupOptions == null) {
      this.backupOptions = new HashMap<>();
    }
    this.backupOptions.put(key, backupOptionsItem);
    return this;
  }

  /**
   * &lt;p&gt;Specifies the backup option for a selected resource. This option is only available for Windows Volume Shadow Copy Service (VSS) backup jobs.&lt;/p&gt; &lt;p&gt;Valid values: Set to &lt;code&gt;\&quot;WindowsVSS\&quot;:\&quot;enabled\&quot;&lt;/code&gt; to enable the &lt;code&gt;WindowsVSS&lt;/code&gt; backup option and create a Windows VSS backup. Set to &lt;code&gt;\&quot;WindowsVSS\&quot;\&quot;disabled\&quot;&lt;/code&gt; to create a regular backup. The &lt;code&gt;WindowsVSS&lt;/code&gt; option is not enabled by default.&lt;/p&gt;
   * @return backupOptions
   */
  @javax.annotation.Nullable
  public Map<String, String> getBackupOptions() {
    return backupOptions;
  }

  public void setBackupOptions(Map<String, String> backupOptions) {
    this.backupOptions = backupOptions;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    StartBackupJobRequest startBackupJobRequest = (StartBackupJobRequest) o;
    return Objects.equals(this.backupVaultName, startBackupJobRequest.backupVaultName) &&
        Objects.equals(this.resourceArn, startBackupJobRequest.resourceArn) &&
        Objects.equals(this.iamRoleArn, startBackupJobRequest.iamRoleArn) &&
        Objects.equals(this.idempotencyToken, startBackupJobRequest.idempotencyToken) &&
        Objects.equals(this.startWindowMinutes, startBackupJobRequest.startWindowMinutes) &&
        Objects.equals(this.completeWindowMinutes, startBackupJobRequest.completeWindowMinutes) &&
        Objects.equals(this.lifecycle, startBackupJobRequest.lifecycle) &&
        Objects.equals(this.recoveryPointTags, startBackupJobRequest.recoveryPointTags) &&
        Objects.equals(this.backupOptions, startBackupJobRequest.backupOptions);
  }

  @Override
  public int hashCode() {
    return Objects.hash(backupVaultName, resourceArn, iamRoleArn, idempotencyToken, startWindowMinutes, completeWindowMinutes, lifecycle, recoveryPointTags, backupOptions);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class StartBackupJobRequest {\n");
    sb.append("    backupVaultName: ").append(toIndentedString(backupVaultName)).append("\n");
    sb.append("    resourceArn: ").append(toIndentedString(resourceArn)).append("\n");
    sb.append("    iamRoleArn: ").append(toIndentedString(iamRoleArn)).append("\n");
    sb.append("    idempotencyToken: ").append(toIndentedString(idempotencyToken)).append("\n");
    sb.append("    startWindowMinutes: ").append(toIndentedString(startWindowMinutes)).append("\n");
    sb.append("    completeWindowMinutes: ").append(toIndentedString(completeWindowMinutes)).append("\n");
    sb.append("    lifecycle: ").append(toIndentedString(lifecycle)).append("\n");
    sb.append("    recoveryPointTags: ").append(toIndentedString(recoveryPointTags)).append("\n");
    sb.append("    backupOptions: ").append(toIndentedString(backupOptions)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("BackupVaultName");
    openapiFields.add("ResourceArn");
    openapiFields.add("IamRoleArn");
    openapiFields.add("IdempotencyToken");
    openapiFields.add("StartWindowMinutes");
    openapiFields.add("CompleteWindowMinutes");
    openapiFields.add("Lifecycle");
    openapiFields.add("RecoveryPointTags");
    openapiFields.add("BackupOptions");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
    openapiRequiredFields.add("BackupVaultName");
    openapiRequiredFields.add("ResourceArn");
    openapiRequiredFields.add("IamRoleArn");
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to StartBackupJobRequest
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!StartBackupJobRequest.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in StartBackupJobRequest is not found in the empty JSON string", StartBackupJobRequest.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!StartBackupJobRequest.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `StartBackupJobRequest` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }

      // check to make sure all required properties/fields are present in the JSON string
      for (String requiredField : StartBackupJobRequest.openapiRequiredFields) {
        if (jsonElement.getAsJsonObject().get(requiredField) == null) {
          throw new IllegalArgumentException(String.format("The required field `%s` is not found in the JSON string: %s", requiredField, jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if (!jsonObj.get("BackupVaultName").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `BackupVaultName` to be a primitive type in the JSON string but got `%s`", jsonObj.get("BackupVaultName").toString()));
      }
      if (!jsonObj.get("ResourceArn").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `ResourceArn` to be a primitive type in the JSON string but got `%s`", jsonObj.get("ResourceArn").toString()));
      }
      if (!jsonObj.get("IamRoleArn").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `IamRoleArn` to be a primitive type in the JSON string but got `%s`", jsonObj.get("IamRoleArn").toString()));
      }
      if ((jsonObj.get("IdempotencyToken") != null && !jsonObj.get("IdempotencyToken").isJsonNull()) && !jsonObj.get("IdempotencyToken").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `IdempotencyToken` to be a primitive type in the JSON string but got `%s`", jsonObj.get("IdempotencyToken").toString()));
      }
      // validate the optional field `Lifecycle`
      if (jsonObj.get("Lifecycle") != null && !jsonObj.get("Lifecycle").isJsonNull()) {
        UpdateRecoveryPointLifecycleRequestLifecycle.validateJsonElement(jsonObj.get("Lifecycle"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!StartBackupJobRequest.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'StartBackupJobRequest' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<StartBackupJobRequest> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(StartBackupJobRequest.class));

       return (TypeAdapter<T>) new TypeAdapter<StartBackupJobRequest>() {
           @Override
           public void write(JsonWriter out, StartBackupJobRequest value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public StartBackupJobRequest read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of StartBackupJobRequest given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of StartBackupJobRequest
   * @throws IOException if the JSON string is invalid with respect to StartBackupJobRequest
   */
  public static StartBackupJobRequest fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, StartBackupJobRequest.class);
  }

  /**
   * Convert an instance of StartBackupJobRequest to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

