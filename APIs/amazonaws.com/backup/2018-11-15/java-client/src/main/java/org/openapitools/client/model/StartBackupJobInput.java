/*
 * AWS Backup
 * <fullname>Backup</fullname> <p>Backup is a unified backup service designed to protect Amazon Web Services services and their associated data. Backup simplifies the creation, migration, restoration, and deletion of backups, while also providing reporting and auditing.</p>
 *
 * The version of the OpenAPI document: 2018-11-15
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;
import java.util.Map;
import org.openapitools.client.model.StartBackupJobInputLifecycle;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * StartBackupJobInput
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T12:06:47.732009-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class StartBackupJobInput {
  public static final String SERIALIZED_NAME_BACKUP_VAULT_NAME = "BackupVaultName";
  @SerializedName(SERIALIZED_NAME_BACKUP_VAULT_NAME)
  private String backupVaultName;

  public static final String SERIALIZED_NAME_RESOURCE_ARN = "ResourceArn";
  @SerializedName(SERIALIZED_NAME_RESOURCE_ARN)
  private String resourceArn;

  public static final String SERIALIZED_NAME_IAM_ROLE_ARN = "IamRoleArn";
  @SerializedName(SERIALIZED_NAME_IAM_ROLE_ARN)
  private String iamRoleArn;

  public static final String SERIALIZED_NAME_IDEMPOTENCY_TOKEN = "IdempotencyToken";
  @SerializedName(SERIALIZED_NAME_IDEMPOTENCY_TOKEN)
  private String idempotencyToken;

  public static final String SERIALIZED_NAME_START_WINDOW_MINUTES = "StartWindowMinutes";
  @SerializedName(SERIALIZED_NAME_START_WINDOW_MINUTES)
  private Integer startWindowMinutes;

  public static final String SERIALIZED_NAME_COMPLETE_WINDOW_MINUTES = "CompleteWindowMinutes";
  @SerializedName(SERIALIZED_NAME_COMPLETE_WINDOW_MINUTES)
  private Integer completeWindowMinutes;

  public static final String SERIALIZED_NAME_LIFECYCLE = "Lifecycle";
  @SerializedName(SERIALIZED_NAME_LIFECYCLE)
  private StartBackupJobInputLifecycle lifecycle;

  public static final String SERIALIZED_NAME_RECOVERY_POINT_TAGS = "RecoveryPointTags";
  @SerializedName(SERIALIZED_NAME_RECOVERY_POINT_TAGS)
  private Map recoveryPointTags;

  public static final String SERIALIZED_NAME_BACKUP_OPTIONS = "BackupOptions";
  @SerializedName(SERIALIZED_NAME_BACKUP_OPTIONS)
  private Map backupOptions;

  public StartBackupJobInput() {
  }

  public StartBackupJobInput backupVaultName(String backupVaultName) {
    this.backupVaultName = backupVaultName;
    return this;
  }

  /**
   * Get backupVaultName
   * @return backupVaultName
   */
  @javax.annotation.Nonnull
  public String getBackupVaultName() {
    return backupVaultName;
  }

  public void setBackupVaultName(String backupVaultName) {
    this.backupVaultName = backupVaultName;
  }


  public StartBackupJobInput resourceArn(String resourceArn) {
    this.resourceArn = resourceArn;
    return this;
  }

  /**
   * Get resourceArn
   * @return resourceArn
   */
  @javax.annotation.Nonnull
  public String getResourceArn() {
    return resourceArn;
  }

  public void setResourceArn(String resourceArn) {
    this.resourceArn = resourceArn;
  }


  public StartBackupJobInput iamRoleArn(String iamRoleArn) {
    this.iamRoleArn = iamRoleArn;
    return this;
  }

  /**
   * Get iamRoleArn
   * @return iamRoleArn
   */
  @javax.annotation.Nonnull
  public String getIamRoleArn() {
    return iamRoleArn;
  }

  public void setIamRoleArn(String iamRoleArn) {
    this.iamRoleArn = iamRoleArn;
  }


  public StartBackupJobInput idempotencyToken(String idempotencyToken) {
    this.idempotencyToken = idempotencyToken;
    return this;
  }

  /**
   * Get idempotencyToken
   * @return idempotencyToken
   */
  @javax.annotation.Nullable
  public String getIdempotencyToken() {
    return idempotencyToken;
  }

  public void setIdempotencyToken(String idempotencyToken) {
    this.idempotencyToken = idempotencyToken;
  }


  public StartBackupJobInput startWindowMinutes(Integer startWindowMinutes) {
    this.startWindowMinutes = startWindowMinutes;
    return this;
  }

  /**
   * Get startWindowMinutes
   * @return startWindowMinutes
   */
  @javax.annotation.Nullable
  public Integer getStartWindowMinutes() {
    return startWindowMinutes;
  }

  public void setStartWindowMinutes(Integer startWindowMinutes) {
    this.startWindowMinutes = startWindowMinutes;
  }


  public StartBackupJobInput completeWindowMinutes(Integer completeWindowMinutes) {
    this.completeWindowMinutes = completeWindowMinutes;
    return this;
  }

  /**
   * Get completeWindowMinutes
   * @return completeWindowMinutes
   */
  @javax.annotation.Nullable
  public Integer getCompleteWindowMinutes() {
    return completeWindowMinutes;
  }

  public void setCompleteWindowMinutes(Integer completeWindowMinutes) {
    this.completeWindowMinutes = completeWindowMinutes;
  }


  public StartBackupJobInput lifecycle(StartBackupJobInputLifecycle lifecycle) {
    this.lifecycle = lifecycle;
    return this;
  }

  /**
   * Get lifecycle
   * @return lifecycle
   */
  @javax.annotation.Nullable
  public StartBackupJobInputLifecycle getLifecycle() {
    return lifecycle;
  }

  public void setLifecycle(StartBackupJobInputLifecycle lifecycle) {
    this.lifecycle = lifecycle;
  }


  public StartBackupJobInput recoveryPointTags(Map recoveryPointTags) {
    this.recoveryPointTags = recoveryPointTags;
    return this;
  }

  /**
   * Get recoveryPointTags
   * @return recoveryPointTags
   */
  @javax.annotation.Nullable
  public Map getRecoveryPointTags() {
    return recoveryPointTags;
  }

  public void setRecoveryPointTags(Map recoveryPointTags) {
    this.recoveryPointTags = recoveryPointTags;
  }


  public StartBackupJobInput backupOptions(Map backupOptions) {
    this.backupOptions = backupOptions;
    return this;
  }

  /**
   * Get backupOptions
   * @return backupOptions
   */
  @javax.annotation.Nullable
  public Map getBackupOptions() {
    return backupOptions;
  }

  public void setBackupOptions(Map backupOptions) {
    this.backupOptions = backupOptions;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    StartBackupJobInput startBackupJobInput = (StartBackupJobInput) o;
    return Objects.equals(this.backupVaultName, startBackupJobInput.backupVaultName) &&
        Objects.equals(this.resourceArn, startBackupJobInput.resourceArn) &&
        Objects.equals(this.iamRoleArn, startBackupJobInput.iamRoleArn) &&
        Objects.equals(this.idempotencyToken, startBackupJobInput.idempotencyToken) &&
        Objects.equals(this.startWindowMinutes, startBackupJobInput.startWindowMinutes) &&
        Objects.equals(this.completeWindowMinutes, startBackupJobInput.completeWindowMinutes) &&
        Objects.equals(this.lifecycle, startBackupJobInput.lifecycle) &&
        Objects.equals(this.recoveryPointTags, startBackupJobInput.recoveryPointTags) &&
        Objects.equals(this.backupOptions, startBackupJobInput.backupOptions);
  }

  @Override
  public int hashCode() {
    return Objects.hash(backupVaultName, resourceArn, iamRoleArn, idempotencyToken, startWindowMinutes, completeWindowMinutes, lifecycle, recoveryPointTags, backupOptions);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class StartBackupJobInput {\n");
    sb.append("    backupVaultName: ").append(toIndentedString(backupVaultName)).append("\n");
    sb.append("    resourceArn: ").append(toIndentedString(resourceArn)).append("\n");
    sb.append("    iamRoleArn: ").append(toIndentedString(iamRoleArn)).append("\n");
    sb.append("    idempotencyToken: ").append(toIndentedString(idempotencyToken)).append("\n");
    sb.append("    startWindowMinutes: ").append(toIndentedString(startWindowMinutes)).append("\n");
    sb.append("    completeWindowMinutes: ").append(toIndentedString(completeWindowMinutes)).append("\n");
    sb.append("    lifecycle: ").append(toIndentedString(lifecycle)).append("\n");
    sb.append("    recoveryPointTags: ").append(toIndentedString(recoveryPointTags)).append("\n");
    sb.append("    backupOptions: ").append(toIndentedString(backupOptions)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("BackupVaultName");
    openapiFields.add("ResourceArn");
    openapiFields.add("IamRoleArn");
    openapiFields.add("IdempotencyToken");
    openapiFields.add("StartWindowMinutes");
    openapiFields.add("CompleteWindowMinutes");
    openapiFields.add("Lifecycle");
    openapiFields.add("RecoveryPointTags");
    openapiFields.add("BackupOptions");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
    openapiRequiredFields.add("BackupVaultName");
    openapiRequiredFields.add("ResourceArn");
    openapiRequiredFields.add("IamRoleArn");
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to StartBackupJobInput
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!StartBackupJobInput.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in StartBackupJobInput is not found in the empty JSON string", StartBackupJobInput.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!StartBackupJobInput.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `StartBackupJobInput` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }

      // check to make sure all required properties/fields are present in the JSON string
      for (String requiredField : StartBackupJobInput.openapiRequiredFields) {
        if (jsonElement.getAsJsonObject().get(requiredField) == null) {
          throw new IllegalArgumentException(String.format("The required field `%s` is not found in the JSON string: %s", requiredField, jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // validate the required field `BackupVaultName`
      String.validateJsonElement(jsonObj.get("BackupVaultName"));
      // validate the required field `ResourceArn`
      String.validateJsonElement(jsonObj.get("ResourceArn"));
      // validate the required field `IamRoleArn`
      String.validateJsonElement(jsonObj.get("IamRoleArn"));
      // validate the optional field `IdempotencyToken`
      if (jsonObj.get("IdempotencyToken") != null && !jsonObj.get("IdempotencyToken").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("IdempotencyToken"));
      }
      // validate the optional field `StartWindowMinutes`
      if (jsonObj.get("StartWindowMinutes") != null && !jsonObj.get("StartWindowMinutes").isJsonNull()) {
        Integer.validateJsonElement(jsonObj.get("StartWindowMinutes"));
      }
      // validate the optional field `CompleteWindowMinutes`
      if (jsonObj.get("CompleteWindowMinutes") != null && !jsonObj.get("CompleteWindowMinutes").isJsonNull()) {
        Integer.validateJsonElement(jsonObj.get("CompleteWindowMinutes"));
      }
      // validate the optional field `Lifecycle`
      if (jsonObj.get("Lifecycle") != null && !jsonObj.get("Lifecycle").isJsonNull()) {
        StartBackupJobInputLifecycle.validateJsonElement(jsonObj.get("Lifecycle"));
      }
      // validate the optional field `RecoveryPointTags`
      if (jsonObj.get("RecoveryPointTags") != null && !jsonObj.get("RecoveryPointTags").isJsonNull()) {
        Map.validateJsonElement(jsonObj.get("RecoveryPointTags"));
      }
      // validate the optional field `BackupOptions`
      if (jsonObj.get("BackupOptions") != null && !jsonObj.get("BackupOptions").isJsonNull()) {
        Map.validateJsonElement(jsonObj.get("BackupOptions"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!StartBackupJobInput.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'StartBackupJobInput' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<StartBackupJobInput> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(StartBackupJobInput.class));

       return (TypeAdapter<T>) new TypeAdapter<StartBackupJobInput>() {
           @Override
           public void write(JsonWriter out, StartBackupJobInput value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public StartBackupJobInput read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of StartBackupJobInput given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of StartBackupJobInput
   * @throws IOException if the JSON string is invalid with respect to StartBackupJobInput
   */
  public static StartBackupJobInput fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, StartBackupJobInput.class);
  }

  /**
   * Convert an instance of StartBackupJobInput to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

