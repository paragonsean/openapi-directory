/*
 * AWS Backup
 * <fullname>Backup</fullname> <p>Backup is a unified backup service designed to protect Amazon Web Services services and their associated data. Backup simplifies the creation, migration, restoration, and deletion of backups, while also providing reporting and auditing.</p>
 *
 * The version of the OpenAPI document: 2018-11-15
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.time.OffsetDateTime;
import java.util.Arrays;
import java.util.Map;
import org.openapitools.client.model.CopyJobState;
import org.openapitools.client.model.RecoveryPointCreator;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * Contains detailed information about a copy job.
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T12:06:47.732009-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class CopyJob {
  public static final String SERIALIZED_NAME_ACCOUNT_ID = "AccountId";
  @SerializedName(SERIALIZED_NAME_ACCOUNT_ID)
  private String accountId;

  public static final String SERIALIZED_NAME_COPY_JOB_ID = "CopyJobId";
  @SerializedName(SERIALIZED_NAME_COPY_JOB_ID)
  private String copyJobId;

  public static final String SERIALIZED_NAME_SOURCE_BACKUP_VAULT_ARN = "SourceBackupVaultArn";
  @SerializedName(SERIALIZED_NAME_SOURCE_BACKUP_VAULT_ARN)
  private String sourceBackupVaultArn;

  public static final String SERIALIZED_NAME_SOURCE_RECOVERY_POINT_ARN = "SourceRecoveryPointArn";
  @SerializedName(SERIALIZED_NAME_SOURCE_RECOVERY_POINT_ARN)
  private String sourceRecoveryPointArn;

  public static final String SERIALIZED_NAME_DESTINATION_BACKUP_VAULT_ARN = "DestinationBackupVaultArn";
  @SerializedName(SERIALIZED_NAME_DESTINATION_BACKUP_VAULT_ARN)
  private String destinationBackupVaultArn;

  public static final String SERIALIZED_NAME_DESTINATION_RECOVERY_POINT_ARN = "DestinationRecoveryPointArn";
  @SerializedName(SERIALIZED_NAME_DESTINATION_RECOVERY_POINT_ARN)
  private String destinationRecoveryPointArn;

  public static final String SERIALIZED_NAME_RESOURCE_ARN = "ResourceArn";
  @SerializedName(SERIALIZED_NAME_RESOURCE_ARN)
  private String resourceArn;

  public static final String SERIALIZED_NAME_CREATION_DATE = "CreationDate";
  @SerializedName(SERIALIZED_NAME_CREATION_DATE)
  private OffsetDateTime creationDate;

  public static final String SERIALIZED_NAME_COMPLETION_DATE = "CompletionDate";
  @SerializedName(SERIALIZED_NAME_COMPLETION_DATE)
  private OffsetDateTime completionDate;

  public static final String SERIALIZED_NAME_STATE = "State";
  @SerializedName(SERIALIZED_NAME_STATE)
  private CopyJobState state;

  public static final String SERIALIZED_NAME_STATUS_MESSAGE = "StatusMessage";
  @SerializedName(SERIALIZED_NAME_STATUS_MESSAGE)
  private String statusMessage;

  public static final String SERIALIZED_NAME_BACKUP_SIZE_IN_BYTES = "BackupSizeInBytes";
  @SerializedName(SERIALIZED_NAME_BACKUP_SIZE_IN_BYTES)
  private Integer backupSizeInBytes;

  public static final String SERIALIZED_NAME_IAM_ROLE_ARN = "IamRoleArn";
  @SerializedName(SERIALIZED_NAME_IAM_ROLE_ARN)
  private String iamRoleArn;

  public static final String SERIALIZED_NAME_CREATED_BY = "CreatedBy";
  @SerializedName(SERIALIZED_NAME_CREATED_BY)
  private RecoveryPointCreator createdBy;

  public static final String SERIALIZED_NAME_RESOURCE_TYPE = "ResourceType";
  @SerializedName(SERIALIZED_NAME_RESOURCE_TYPE)
  private String resourceType;

  public static final String SERIALIZED_NAME_PARENT_JOB_ID = "ParentJobId";
  @SerializedName(SERIALIZED_NAME_PARENT_JOB_ID)
  private String parentJobId;

  public static final String SERIALIZED_NAME_IS_PARENT = "IsParent";
  @SerializedName(SERIALIZED_NAME_IS_PARENT)
  private Boolean isParent;

  public static final String SERIALIZED_NAME_COMPOSITE_MEMBER_IDENTIFIER = "CompositeMemberIdentifier";
  @SerializedName(SERIALIZED_NAME_COMPOSITE_MEMBER_IDENTIFIER)
  private String compositeMemberIdentifier;

  public static final String SERIALIZED_NAME_NUMBER_OF_CHILD_JOBS = "NumberOfChildJobs";
  @SerializedName(SERIALIZED_NAME_NUMBER_OF_CHILD_JOBS)
  private Integer numberOfChildJobs;

  public static final String SERIALIZED_NAME_CHILD_JOBS_IN_STATE = "ChildJobsInState";
  @SerializedName(SERIALIZED_NAME_CHILD_JOBS_IN_STATE)
  private Map childJobsInState;

  public static final String SERIALIZED_NAME_RESOURCE_NAME = "ResourceName";
  @SerializedName(SERIALIZED_NAME_RESOURCE_NAME)
  private String resourceName;

  public CopyJob() {
  }

  public CopyJob accountId(String accountId) {
    this.accountId = accountId;
    return this;
  }

  /**
   * Get accountId
   * @return accountId
   */
  @javax.annotation.Nullable
  public String getAccountId() {
    return accountId;
  }

  public void setAccountId(String accountId) {
    this.accountId = accountId;
  }


  public CopyJob copyJobId(String copyJobId) {
    this.copyJobId = copyJobId;
    return this;
  }

  /**
   * Get copyJobId
   * @return copyJobId
   */
  @javax.annotation.Nullable
  public String getCopyJobId() {
    return copyJobId;
  }

  public void setCopyJobId(String copyJobId) {
    this.copyJobId = copyJobId;
  }


  public CopyJob sourceBackupVaultArn(String sourceBackupVaultArn) {
    this.sourceBackupVaultArn = sourceBackupVaultArn;
    return this;
  }

  /**
   * Get sourceBackupVaultArn
   * @return sourceBackupVaultArn
   */
  @javax.annotation.Nullable
  public String getSourceBackupVaultArn() {
    return sourceBackupVaultArn;
  }

  public void setSourceBackupVaultArn(String sourceBackupVaultArn) {
    this.sourceBackupVaultArn = sourceBackupVaultArn;
  }


  public CopyJob sourceRecoveryPointArn(String sourceRecoveryPointArn) {
    this.sourceRecoveryPointArn = sourceRecoveryPointArn;
    return this;
  }

  /**
   * Get sourceRecoveryPointArn
   * @return sourceRecoveryPointArn
   */
  @javax.annotation.Nullable
  public String getSourceRecoveryPointArn() {
    return sourceRecoveryPointArn;
  }

  public void setSourceRecoveryPointArn(String sourceRecoveryPointArn) {
    this.sourceRecoveryPointArn = sourceRecoveryPointArn;
  }


  public CopyJob destinationBackupVaultArn(String destinationBackupVaultArn) {
    this.destinationBackupVaultArn = destinationBackupVaultArn;
    return this;
  }

  /**
   * Get destinationBackupVaultArn
   * @return destinationBackupVaultArn
   */
  @javax.annotation.Nullable
  public String getDestinationBackupVaultArn() {
    return destinationBackupVaultArn;
  }

  public void setDestinationBackupVaultArn(String destinationBackupVaultArn) {
    this.destinationBackupVaultArn = destinationBackupVaultArn;
  }


  public CopyJob destinationRecoveryPointArn(String destinationRecoveryPointArn) {
    this.destinationRecoveryPointArn = destinationRecoveryPointArn;
    return this;
  }

  /**
   * Get destinationRecoveryPointArn
   * @return destinationRecoveryPointArn
   */
  @javax.annotation.Nullable
  public String getDestinationRecoveryPointArn() {
    return destinationRecoveryPointArn;
  }

  public void setDestinationRecoveryPointArn(String destinationRecoveryPointArn) {
    this.destinationRecoveryPointArn = destinationRecoveryPointArn;
  }


  public CopyJob resourceArn(String resourceArn) {
    this.resourceArn = resourceArn;
    return this;
  }

  /**
   * Get resourceArn
   * @return resourceArn
   */
  @javax.annotation.Nullable
  public String getResourceArn() {
    return resourceArn;
  }

  public void setResourceArn(String resourceArn) {
    this.resourceArn = resourceArn;
  }


  public CopyJob creationDate(OffsetDateTime creationDate) {
    this.creationDate = creationDate;
    return this;
  }

  /**
   * Get creationDate
   * @return creationDate
   */
  @javax.annotation.Nullable
  public OffsetDateTime getCreationDate() {
    return creationDate;
  }

  public void setCreationDate(OffsetDateTime creationDate) {
    this.creationDate = creationDate;
  }


  public CopyJob completionDate(OffsetDateTime completionDate) {
    this.completionDate = completionDate;
    return this;
  }

  /**
   * Get completionDate
   * @return completionDate
   */
  @javax.annotation.Nullable
  public OffsetDateTime getCompletionDate() {
    return completionDate;
  }

  public void setCompletionDate(OffsetDateTime completionDate) {
    this.completionDate = completionDate;
  }


  public CopyJob state(CopyJobState state) {
    this.state = state;
    return this;
  }

  /**
   * Get state
   * @return state
   */
  @javax.annotation.Nullable
  public CopyJobState getState() {
    return state;
  }

  public void setState(CopyJobState state) {
    this.state = state;
  }


  public CopyJob statusMessage(String statusMessage) {
    this.statusMessage = statusMessage;
    return this;
  }

  /**
   * Get statusMessage
   * @return statusMessage
   */
  @javax.annotation.Nullable
  public String getStatusMessage() {
    return statusMessage;
  }

  public void setStatusMessage(String statusMessage) {
    this.statusMessage = statusMessage;
  }


  public CopyJob backupSizeInBytes(Integer backupSizeInBytes) {
    this.backupSizeInBytes = backupSizeInBytes;
    return this;
  }

  /**
   * Get backupSizeInBytes
   * @return backupSizeInBytes
   */
  @javax.annotation.Nullable
  public Integer getBackupSizeInBytes() {
    return backupSizeInBytes;
  }

  public void setBackupSizeInBytes(Integer backupSizeInBytes) {
    this.backupSizeInBytes = backupSizeInBytes;
  }


  public CopyJob iamRoleArn(String iamRoleArn) {
    this.iamRoleArn = iamRoleArn;
    return this;
  }

  /**
   * Get iamRoleArn
   * @return iamRoleArn
   */
  @javax.annotation.Nullable
  public String getIamRoleArn() {
    return iamRoleArn;
  }

  public void setIamRoleArn(String iamRoleArn) {
    this.iamRoleArn = iamRoleArn;
  }


  public CopyJob createdBy(RecoveryPointCreator createdBy) {
    this.createdBy = createdBy;
    return this;
  }

  /**
   * Get createdBy
   * @return createdBy
   */
  @javax.annotation.Nullable
  public RecoveryPointCreator getCreatedBy() {
    return createdBy;
  }

  public void setCreatedBy(RecoveryPointCreator createdBy) {
    this.createdBy = createdBy;
  }


  public CopyJob resourceType(String resourceType) {
    this.resourceType = resourceType;
    return this;
  }

  /**
   * Get resourceType
   * @return resourceType
   */
  @javax.annotation.Nullable
  public String getResourceType() {
    return resourceType;
  }

  public void setResourceType(String resourceType) {
    this.resourceType = resourceType;
  }


  public CopyJob parentJobId(String parentJobId) {
    this.parentJobId = parentJobId;
    return this;
  }

  /**
   * Get parentJobId
   * @return parentJobId
   */
  @javax.annotation.Nullable
  public String getParentJobId() {
    return parentJobId;
  }

  public void setParentJobId(String parentJobId) {
    this.parentJobId = parentJobId;
  }


  public CopyJob isParent(Boolean isParent) {
    this.isParent = isParent;
    return this;
  }

  /**
   * Get isParent
   * @return isParent
   */
  @javax.annotation.Nullable
  public Boolean getIsParent() {
    return isParent;
  }

  public void setIsParent(Boolean isParent) {
    this.isParent = isParent;
  }


  public CopyJob compositeMemberIdentifier(String compositeMemberIdentifier) {
    this.compositeMemberIdentifier = compositeMemberIdentifier;
    return this;
  }

  /**
   * Get compositeMemberIdentifier
   * @return compositeMemberIdentifier
   */
  @javax.annotation.Nullable
  public String getCompositeMemberIdentifier() {
    return compositeMemberIdentifier;
  }

  public void setCompositeMemberIdentifier(String compositeMemberIdentifier) {
    this.compositeMemberIdentifier = compositeMemberIdentifier;
  }


  public CopyJob numberOfChildJobs(Integer numberOfChildJobs) {
    this.numberOfChildJobs = numberOfChildJobs;
    return this;
  }

  /**
   * Get numberOfChildJobs
   * @return numberOfChildJobs
   */
  @javax.annotation.Nullable
  public Integer getNumberOfChildJobs() {
    return numberOfChildJobs;
  }

  public void setNumberOfChildJobs(Integer numberOfChildJobs) {
    this.numberOfChildJobs = numberOfChildJobs;
  }


  public CopyJob childJobsInState(Map childJobsInState) {
    this.childJobsInState = childJobsInState;
    return this;
  }

  /**
   * Get childJobsInState
   * @return childJobsInState
   */
  @javax.annotation.Nullable
  public Map getChildJobsInState() {
    return childJobsInState;
  }

  public void setChildJobsInState(Map childJobsInState) {
    this.childJobsInState = childJobsInState;
  }


  public CopyJob resourceName(String resourceName) {
    this.resourceName = resourceName;
    return this;
  }

  /**
   * Get resourceName
   * @return resourceName
   */
  @javax.annotation.Nullable
  public String getResourceName() {
    return resourceName;
  }

  public void setResourceName(String resourceName) {
    this.resourceName = resourceName;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CopyJob copyJob = (CopyJob) o;
    return Objects.equals(this.accountId, copyJob.accountId) &&
        Objects.equals(this.copyJobId, copyJob.copyJobId) &&
        Objects.equals(this.sourceBackupVaultArn, copyJob.sourceBackupVaultArn) &&
        Objects.equals(this.sourceRecoveryPointArn, copyJob.sourceRecoveryPointArn) &&
        Objects.equals(this.destinationBackupVaultArn, copyJob.destinationBackupVaultArn) &&
        Objects.equals(this.destinationRecoveryPointArn, copyJob.destinationRecoveryPointArn) &&
        Objects.equals(this.resourceArn, copyJob.resourceArn) &&
        Objects.equals(this.creationDate, copyJob.creationDate) &&
        Objects.equals(this.completionDate, copyJob.completionDate) &&
        Objects.equals(this.state, copyJob.state) &&
        Objects.equals(this.statusMessage, copyJob.statusMessage) &&
        Objects.equals(this.backupSizeInBytes, copyJob.backupSizeInBytes) &&
        Objects.equals(this.iamRoleArn, copyJob.iamRoleArn) &&
        Objects.equals(this.createdBy, copyJob.createdBy) &&
        Objects.equals(this.resourceType, copyJob.resourceType) &&
        Objects.equals(this.parentJobId, copyJob.parentJobId) &&
        Objects.equals(this.isParent, copyJob.isParent) &&
        Objects.equals(this.compositeMemberIdentifier, copyJob.compositeMemberIdentifier) &&
        Objects.equals(this.numberOfChildJobs, copyJob.numberOfChildJobs) &&
        Objects.equals(this.childJobsInState, copyJob.childJobsInState) &&
        Objects.equals(this.resourceName, copyJob.resourceName);
  }

  @Override
  public int hashCode() {
    return Objects.hash(accountId, copyJobId, sourceBackupVaultArn, sourceRecoveryPointArn, destinationBackupVaultArn, destinationRecoveryPointArn, resourceArn, creationDate, completionDate, state, statusMessage, backupSizeInBytes, iamRoleArn, createdBy, resourceType, parentJobId, isParent, compositeMemberIdentifier, numberOfChildJobs, childJobsInState, resourceName);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CopyJob {\n");
    sb.append("    accountId: ").append(toIndentedString(accountId)).append("\n");
    sb.append("    copyJobId: ").append(toIndentedString(copyJobId)).append("\n");
    sb.append("    sourceBackupVaultArn: ").append(toIndentedString(sourceBackupVaultArn)).append("\n");
    sb.append("    sourceRecoveryPointArn: ").append(toIndentedString(sourceRecoveryPointArn)).append("\n");
    sb.append("    destinationBackupVaultArn: ").append(toIndentedString(destinationBackupVaultArn)).append("\n");
    sb.append("    destinationRecoveryPointArn: ").append(toIndentedString(destinationRecoveryPointArn)).append("\n");
    sb.append("    resourceArn: ").append(toIndentedString(resourceArn)).append("\n");
    sb.append("    creationDate: ").append(toIndentedString(creationDate)).append("\n");
    sb.append("    completionDate: ").append(toIndentedString(completionDate)).append("\n");
    sb.append("    state: ").append(toIndentedString(state)).append("\n");
    sb.append("    statusMessage: ").append(toIndentedString(statusMessage)).append("\n");
    sb.append("    backupSizeInBytes: ").append(toIndentedString(backupSizeInBytes)).append("\n");
    sb.append("    iamRoleArn: ").append(toIndentedString(iamRoleArn)).append("\n");
    sb.append("    createdBy: ").append(toIndentedString(createdBy)).append("\n");
    sb.append("    resourceType: ").append(toIndentedString(resourceType)).append("\n");
    sb.append("    parentJobId: ").append(toIndentedString(parentJobId)).append("\n");
    sb.append("    isParent: ").append(toIndentedString(isParent)).append("\n");
    sb.append("    compositeMemberIdentifier: ").append(toIndentedString(compositeMemberIdentifier)).append("\n");
    sb.append("    numberOfChildJobs: ").append(toIndentedString(numberOfChildJobs)).append("\n");
    sb.append("    childJobsInState: ").append(toIndentedString(childJobsInState)).append("\n");
    sb.append("    resourceName: ").append(toIndentedString(resourceName)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("AccountId");
    openapiFields.add("CopyJobId");
    openapiFields.add("SourceBackupVaultArn");
    openapiFields.add("SourceRecoveryPointArn");
    openapiFields.add("DestinationBackupVaultArn");
    openapiFields.add("DestinationRecoveryPointArn");
    openapiFields.add("ResourceArn");
    openapiFields.add("CreationDate");
    openapiFields.add("CompletionDate");
    openapiFields.add("State");
    openapiFields.add("StatusMessage");
    openapiFields.add("BackupSizeInBytes");
    openapiFields.add("IamRoleArn");
    openapiFields.add("CreatedBy");
    openapiFields.add("ResourceType");
    openapiFields.add("ParentJobId");
    openapiFields.add("IsParent");
    openapiFields.add("CompositeMemberIdentifier");
    openapiFields.add("NumberOfChildJobs");
    openapiFields.add("ChildJobsInState");
    openapiFields.add("ResourceName");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to CopyJob
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!CopyJob.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in CopyJob is not found in the empty JSON string", CopyJob.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!CopyJob.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `CopyJob` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // validate the optional field `AccountId`
      if (jsonObj.get("AccountId") != null && !jsonObj.get("AccountId").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("AccountId"));
      }
      // validate the optional field `CopyJobId`
      if (jsonObj.get("CopyJobId") != null && !jsonObj.get("CopyJobId").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("CopyJobId"));
      }
      // validate the optional field `SourceBackupVaultArn`
      if (jsonObj.get("SourceBackupVaultArn") != null && !jsonObj.get("SourceBackupVaultArn").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("SourceBackupVaultArn"));
      }
      // validate the optional field `SourceRecoveryPointArn`
      if (jsonObj.get("SourceRecoveryPointArn") != null && !jsonObj.get("SourceRecoveryPointArn").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("SourceRecoveryPointArn"));
      }
      // validate the optional field `DestinationBackupVaultArn`
      if (jsonObj.get("DestinationBackupVaultArn") != null && !jsonObj.get("DestinationBackupVaultArn").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("DestinationBackupVaultArn"));
      }
      // validate the optional field `DestinationRecoveryPointArn`
      if (jsonObj.get("DestinationRecoveryPointArn") != null && !jsonObj.get("DestinationRecoveryPointArn").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("DestinationRecoveryPointArn"));
      }
      // validate the optional field `ResourceArn`
      if (jsonObj.get("ResourceArn") != null && !jsonObj.get("ResourceArn").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("ResourceArn"));
      }
      // validate the optional field `CreationDate`
      if (jsonObj.get("CreationDate") != null && !jsonObj.get("CreationDate").isJsonNull()) {
        OffsetDateTime.validateJsonElement(jsonObj.get("CreationDate"));
      }
      // validate the optional field `CompletionDate`
      if (jsonObj.get("CompletionDate") != null && !jsonObj.get("CompletionDate").isJsonNull()) {
        OffsetDateTime.validateJsonElement(jsonObj.get("CompletionDate"));
      }
      // validate the optional field `State`
      if (jsonObj.get("State") != null && !jsonObj.get("State").isJsonNull()) {
        CopyJobState.validateJsonElement(jsonObj.get("State"));
      }
      // validate the optional field `StatusMessage`
      if (jsonObj.get("StatusMessage") != null && !jsonObj.get("StatusMessage").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("StatusMessage"));
      }
      // validate the optional field `BackupSizeInBytes`
      if (jsonObj.get("BackupSizeInBytes") != null && !jsonObj.get("BackupSizeInBytes").isJsonNull()) {
        Integer.validateJsonElement(jsonObj.get("BackupSizeInBytes"));
      }
      // validate the optional field `IamRoleArn`
      if (jsonObj.get("IamRoleArn") != null && !jsonObj.get("IamRoleArn").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("IamRoleArn"));
      }
      // validate the optional field `CreatedBy`
      if (jsonObj.get("CreatedBy") != null && !jsonObj.get("CreatedBy").isJsonNull()) {
        RecoveryPointCreator.validateJsonElement(jsonObj.get("CreatedBy"));
      }
      // validate the optional field `ResourceType`
      if (jsonObj.get("ResourceType") != null && !jsonObj.get("ResourceType").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("ResourceType"));
      }
      // validate the optional field `ParentJobId`
      if (jsonObj.get("ParentJobId") != null && !jsonObj.get("ParentJobId").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("ParentJobId"));
      }
      // validate the optional field `IsParent`
      if (jsonObj.get("IsParent") != null && !jsonObj.get("IsParent").isJsonNull()) {
        Boolean.validateJsonElement(jsonObj.get("IsParent"));
      }
      // validate the optional field `CompositeMemberIdentifier`
      if (jsonObj.get("CompositeMemberIdentifier") != null && !jsonObj.get("CompositeMemberIdentifier").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("CompositeMemberIdentifier"));
      }
      // validate the optional field `NumberOfChildJobs`
      if (jsonObj.get("NumberOfChildJobs") != null && !jsonObj.get("NumberOfChildJobs").isJsonNull()) {
        Integer.validateJsonElement(jsonObj.get("NumberOfChildJobs"));
      }
      // validate the optional field `ChildJobsInState`
      if (jsonObj.get("ChildJobsInState") != null && !jsonObj.get("ChildJobsInState").isJsonNull()) {
        Map.validateJsonElement(jsonObj.get("ChildJobsInState"));
      }
      // validate the optional field `ResourceName`
      if (jsonObj.get("ResourceName") != null && !jsonObj.get("ResourceName").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("ResourceName"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!CopyJob.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'CopyJob' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<CopyJob> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(CopyJob.class));

       return (TypeAdapter<T>) new TypeAdapter<CopyJob>() {
           @Override
           public void write(JsonWriter out, CopyJob value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public CopyJob read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of CopyJob given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of CopyJob
   * @throws IOException if the JSON string is invalid with respect to CopyJob
   */
  public static CopyJob fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, CopyJob.class);
  }

  /**
   * Convert an instance of CopyJob to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

