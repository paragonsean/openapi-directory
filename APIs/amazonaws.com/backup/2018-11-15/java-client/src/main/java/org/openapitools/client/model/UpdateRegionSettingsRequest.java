/*
 * AWS Backup
 * <fullname>Backup</fullname> <p>Backup is a unified backup service designed to protect Amazon Web Services services and their associated data. Backup simplifies the creation, migration, restoration, and deletion of backups, while also providing reporting and auditing.</p>
 *
 * The version of the OpenAPI document: 2018-11-15
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;
import java.util.HashMap;
import java.util.Map;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * UpdateRegionSettingsRequest
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T12:06:47.732009-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class UpdateRegionSettingsRequest {
  public static final String SERIALIZED_NAME_RESOURCE_TYPE_OPT_IN_PREFERENCE = "ResourceTypeOptInPreference";
  @SerializedName(SERIALIZED_NAME_RESOURCE_TYPE_OPT_IN_PREFERENCE)
  private Map<String, Boolean> resourceTypeOptInPreference = new HashMap<>();

  public static final String SERIALIZED_NAME_RESOURCE_TYPE_MANAGEMENT_PREFERENCE = "ResourceTypeManagementPreference";
  @SerializedName(SERIALIZED_NAME_RESOURCE_TYPE_MANAGEMENT_PREFERENCE)
  private Map<String, Boolean> resourceTypeManagementPreference = new HashMap<>();

  public UpdateRegionSettingsRequest() {
  }

  public UpdateRegionSettingsRequest resourceTypeOptInPreference(Map<String, Boolean> resourceTypeOptInPreference) {
    this.resourceTypeOptInPreference = resourceTypeOptInPreference;
    return this;
  }

  public UpdateRegionSettingsRequest putResourceTypeOptInPreferenceItem(String key, Boolean resourceTypeOptInPreferenceItem) {
    if (this.resourceTypeOptInPreference == null) {
      this.resourceTypeOptInPreference = new HashMap<>();
    }
    this.resourceTypeOptInPreference.put(key, resourceTypeOptInPreferenceItem);
    return this;
  }

  /**
   * Updates the list of services along with the opt-in preferences for the Region.
   * @return resourceTypeOptInPreference
   */
  @javax.annotation.Nullable
  public Map<String, Boolean> getResourceTypeOptInPreference() {
    return resourceTypeOptInPreference;
  }

  public void setResourceTypeOptInPreference(Map<String, Boolean> resourceTypeOptInPreference) {
    this.resourceTypeOptInPreference = resourceTypeOptInPreference;
  }


  public UpdateRegionSettingsRequest resourceTypeManagementPreference(Map<String, Boolean> resourceTypeManagementPreference) {
    this.resourceTypeManagementPreference = resourceTypeManagementPreference;
    return this;
  }

  public UpdateRegionSettingsRequest putResourceTypeManagementPreferenceItem(String key, Boolean resourceTypeManagementPreferenceItem) {
    if (this.resourceTypeManagementPreference == null) {
      this.resourceTypeManagementPreference = new HashMap<>();
    }
    this.resourceTypeManagementPreference.put(key, resourceTypeManagementPreferenceItem);
    return this;
  }

  /**
   * Enables or disables full Backup management of backups for a resource type. To enable full Backup management for DynamoDB along with &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/aws-backup/latest/devguide/advanced-ddb-backup.html\&quot;&gt; Backup&#39;s advanced DynamoDB backup features&lt;/a&gt;, follow the procedure to &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/aws-backup/latest/devguide/advanced-ddb-backup.html#advanced-ddb-backup-enable-cli\&quot;&gt; enable advanced DynamoDB backup programmatically&lt;/a&gt;.
   * @return resourceTypeManagementPreference
   */
  @javax.annotation.Nullable
  public Map<String, Boolean> getResourceTypeManagementPreference() {
    return resourceTypeManagementPreference;
  }

  public void setResourceTypeManagementPreference(Map<String, Boolean> resourceTypeManagementPreference) {
    this.resourceTypeManagementPreference = resourceTypeManagementPreference;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    UpdateRegionSettingsRequest updateRegionSettingsRequest = (UpdateRegionSettingsRequest) o;
    return Objects.equals(this.resourceTypeOptInPreference, updateRegionSettingsRequest.resourceTypeOptInPreference) &&
        Objects.equals(this.resourceTypeManagementPreference, updateRegionSettingsRequest.resourceTypeManagementPreference);
  }

  @Override
  public int hashCode() {
    return Objects.hash(resourceTypeOptInPreference, resourceTypeManagementPreference);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class UpdateRegionSettingsRequest {\n");
    sb.append("    resourceTypeOptInPreference: ").append(toIndentedString(resourceTypeOptInPreference)).append("\n");
    sb.append("    resourceTypeManagementPreference: ").append(toIndentedString(resourceTypeManagementPreference)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("ResourceTypeOptInPreference");
    openapiFields.add("ResourceTypeManagementPreference");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to UpdateRegionSettingsRequest
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!UpdateRegionSettingsRequest.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in UpdateRegionSettingsRequest is not found in the empty JSON string", UpdateRegionSettingsRequest.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!UpdateRegionSettingsRequest.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `UpdateRegionSettingsRequest` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!UpdateRegionSettingsRequest.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'UpdateRegionSettingsRequest' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<UpdateRegionSettingsRequest> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(UpdateRegionSettingsRequest.class));

       return (TypeAdapter<T>) new TypeAdapter<UpdateRegionSettingsRequest>() {
           @Override
           public void write(JsonWriter out, UpdateRegionSettingsRequest value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public UpdateRegionSettingsRequest read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of UpdateRegionSettingsRequest given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of UpdateRegionSettingsRequest
   * @throws IOException if the JSON string is invalid with respect to UpdateRegionSettingsRequest
   */
  public static UpdateRegionSettingsRequest fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, UpdateRegionSettingsRequest.class);
  }

  /**
   * Convert an instance of UpdateRegionSettingsRequest to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

