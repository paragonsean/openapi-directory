/*
 * AWS Backup
 * <fullname>Backup</fullname> <p>Backup is a unified backup service designed to protect Amazon Web Services services and their associated data. Backup simplifies the creation, migration, restoration, and deletion of backups, while also providing reporting and auditing.</p>
 *
 * The version of the OpenAPI document: 2018-11-15
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.BackupVaultEvent;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * PutBackupVaultNotificationsRequest
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T12:06:47.732009-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class PutBackupVaultNotificationsRequest {
  public static final String SERIALIZED_NAME_SN_S_TOPIC_ARN = "SNSTopicArn";
  @SerializedName(SERIALIZED_NAME_SN_S_TOPIC_ARN)
  private String snSTopicArn;

  public static final String SERIALIZED_NAME_BACKUP_VAULT_EVENTS = "BackupVaultEvents";
  @SerializedName(SERIALIZED_NAME_BACKUP_VAULT_EVENTS)
  private List<BackupVaultEvent> backupVaultEvents = new ArrayList<>();

  public PutBackupVaultNotificationsRequest() {
  }

  public PutBackupVaultNotificationsRequest snSTopicArn(String snSTopicArn) {
    this.snSTopicArn = snSTopicArn;
    return this;
  }

  /**
   * The Amazon Resource Name (ARN) that specifies the topic for a backup vaultâ€™s events; for example, &lt;code&gt;arn:aws:sns:us-west-2:111122223333:MyVaultTopic&lt;/code&gt;.
   * @return snSTopicArn
   */
  @javax.annotation.Nonnull
  public String getSnSTopicArn() {
    return snSTopicArn;
  }

  public void setSnSTopicArn(String snSTopicArn) {
    this.snSTopicArn = snSTopicArn;
  }


  public PutBackupVaultNotificationsRequest backupVaultEvents(List<BackupVaultEvent> backupVaultEvents) {
    this.backupVaultEvents = backupVaultEvents;
    return this;
  }

  public PutBackupVaultNotificationsRequest addBackupVaultEventsItem(BackupVaultEvent backupVaultEventsItem) {
    if (this.backupVaultEvents == null) {
      this.backupVaultEvents = new ArrayList<>();
    }
    this.backupVaultEvents.add(backupVaultEventsItem);
    return this;
  }

  /**
   * &lt;p&gt;An array of events that indicate the status of jobs to back up resources to the backup vault.&lt;/p&gt; &lt;p&gt;For common use cases and code samples, see &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/aws-backup/latest/devguide/sns-notifications.html\&quot;&gt;Using Amazon SNS to track Backup events&lt;/a&gt;.&lt;/p&gt; &lt;p&gt;The following events are supported:&lt;/p&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt; &lt;code&gt;BACKUP_JOB_STARTED&lt;/code&gt; | &lt;code&gt;BACKUP_JOB_COMPLETED&lt;/code&gt; &lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt; &lt;code&gt;COPY_JOB_STARTED&lt;/code&gt; | &lt;code&gt;COPY_JOB_SUCCESSFUL&lt;/code&gt; | &lt;code&gt;COPY_JOB_FAILED&lt;/code&gt; &lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt; &lt;code&gt;RESTORE_JOB_STARTED&lt;/code&gt; | &lt;code&gt;RESTORE_JOB_COMPLETED&lt;/code&gt; | &lt;code&gt;RECOVERY_POINT_MODIFIED&lt;/code&gt; &lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt; &lt;code&gt;S3_BACKUP_OBJECT_FAILED&lt;/code&gt; | &lt;code&gt;S3_RESTORE_OBJECT_FAILED&lt;/code&gt; &lt;/p&gt; &lt;/li&gt; &lt;/ul&gt; &lt;note&gt; &lt;p&gt;The list below shows items that are deprecated events (for reference) and are no longer in use. They are no longer supported and will not return statuses or notifications. Refer to the list above for current supported events.&lt;/p&gt; &lt;/note&gt;
   * @return backupVaultEvents
   */
  @javax.annotation.Nonnull
  public List<BackupVaultEvent> getBackupVaultEvents() {
    return backupVaultEvents;
  }

  public void setBackupVaultEvents(List<BackupVaultEvent> backupVaultEvents) {
    this.backupVaultEvents = backupVaultEvents;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    PutBackupVaultNotificationsRequest putBackupVaultNotificationsRequest = (PutBackupVaultNotificationsRequest) o;
    return Objects.equals(this.snSTopicArn, putBackupVaultNotificationsRequest.snSTopicArn) &&
        Objects.equals(this.backupVaultEvents, putBackupVaultNotificationsRequest.backupVaultEvents);
  }

  @Override
  public int hashCode() {
    return Objects.hash(snSTopicArn, backupVaultEvents);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class PutBackupVaultNotificationsRequest {\n");
    sb.append("    snSTopicArn: ").append(toIndentedString(snSTopicArn)).append("\n");
    sb.append("    backupVaultEvents: ").append(toIndentedString(backupVaultEvents)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("SNSTopicArn");
    openapiFields.add("BackupVaultEvents");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
    openapiRequiredFields.add("SNSTopicArn");
    openapiRequiredFields.add("BackupVaultEvents");
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to PutBackupVaultNotificationsRequest
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!PutBackupVaultNotificationsRequest.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in PutBackupVaultNotificationsRequest is not found in the empty JSON string", PutBackupVaultNotificationsRequest.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!PutBackupVaultNotificationsRequest.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `PutBackupVaultNotificationsRequest` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }

      // check to make sure all required properties/fields are present in the JSON string
      for (String requiredField : PutBackupVaultNotificationsRequest.openapiRequiredFields) {
        if (jsonElement.getAsJsonObject().get(requiredField) == null) {
          throw new IllegalArgumentException(String.format("The required field `%s` is not found in the JSON string: %s", requiredField, jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if (!jsonObj.get("SNSTopicArn").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `SNSTopicArn` to be a primitive type in the JSON string but got `%s`", jsonObj.get("SNSTopicArn").toString()));
      }
      // ensure the required json array is present
      if (jsonObj.get("BackupVaultEvents") == null) {
        throw new IllegalArgumentException("Expected the field `linkedContent` to be an array in the JSON string but got `null`");
      } else if (!jsonObj.get("BackupVaultEvents").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `BackupVaultEvents` to be an array in the JSON string but got `%s`", jsonObj.get("BackupVaultEvents").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!PutBackupVaultNotificationsRequest.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'PutBackupVaultNotificationsRequest' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<PutBackupVaultNotificationsRequest> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(PutBackupVaultNotificationsRequest.class));

       return (TypeAdapter<T>) new TypeAdapter<PutBackupVaultNotificationsRequest>() {
           @Override
           public void write(JsonWriter out, PutBackupVaultNotificationsRequest value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public PutBackupVaultNotificationsRequest read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of PutBackupVaultNotificationsRequest given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of PutBackupVaultNotificationsRequest
   * @throws IOException if the JSON string is invalid with respect to PutBackupVaultNotificationsRequest
   */
  public static PutBackupVaultNotificationsRequest fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, PutBackupVaultNotificationsRequest.class);
  }

  /**
   * Convert an instance of PutBackupVaultNotificationsRequest to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

