/*
 * AWS Backup
 * <fullname>Backup</fullname> <p>Backup is a unified backup service designed to protect Amazon Web Services services and their associated data. Backup simplifies the creation, migration, restoration, and deletion of backups, while also providing reporting and auditing.</p>
 *
 * The version of the OpenAPI document: 2018-11-15
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.time.OffsetDateTime;
import java.util.Arrays;
import java.util.Map;
import org.openapitools.client.model.BackupJobCreatedBy;
import org.openapitools.client.model.BackupJobState;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * Contains detailed information about a backup job.
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T12:06:47.732009-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class BackupJob {
  public static final String SERIALIZED_NAME_ACCOUNT_ID = "AccountId";
  @SerializedName(SERIALIZED_NAME_ACCOUNT_ID)
  private String accountId;

  public static final String SERIALIZED_NAME_BACKUP_JOB_ID = "BackupJobId";
  @SerializedName(SERIALIZED_NAME_BACKUP_JOB_ID)
  private String backupJobId;

  public static final String SERIALIZED_NAME_BACKUP_VAULT_NAME = "BackupVaultName";
  @SerializedName(SERIALIZED_NAME_BACKUP_VAULT_NAME)
  private String backupVaultName;

  public static final String SERIALIZED_NAME_BACKUP_VAULT_ARN = "BackupVaultArn";
  @SerializedName(SERIALIZED_NAME_BACKUP_VAULT_ARN)
  private String backupVaultArn;

  public static final String SERIALIZED_NAME_RECOVERY_POINT_ARN = "RecoveryPointArn";
  @SerializedName(SERIALIZED_NAME_RECOVERY_POINT_ARN)
  private String recoveryPointArn;

  public static final String SERIALIZED_NAME_RESOURCE_ARN = "ResourceArn";
  @SerializedName(SERIALIZED_NAME_RESOURCE_ARN)
  private String resourceArn;

  public static final String SERIALIZED_NAME_CREATION_DATE = "CreationDate";
  @SerializedName(SERIALIZED_NAME_CREATION_DATE)
  private OffsetDateTime creationDate;

  public static final String SERIALIZED_NAME_COMPLETION_DATE = "CompletionDate";
  @SerializedName(SERIALIZED_NAME_COMPLETION_DATE)
  private OffsetDateTime completionDate;

  public static final String SERIALIZED_NAME_STATE = "State";
  @SerializedName(SERIALIZED_NAME_STATE)
  private BackupJobState state;

  public static final String SERIALIZED_NAME_STATUS_MESSAGE = "StatusMessage";
  @SerializedName(SERIALIZED_NAME_STATUS_MESSAGE)
  private String statusMessage;

  public static final String SERIALIZED_NAME_PERCENT_DONE = "PercentDone";
  @SerializedName(SERIALIZED_NAME_PERCENT_DONE)
  private String percentDone;

  public static final String SERIALIZED_NAME_BACKUP_SIZE_IN_BYTES = "BackupSizeInBytes";
  @SerializedName(SERIALIZED_NAME_BACKUP_SIZE_IN_BYTES)
  private Integer backupSizeInBytes;

  public static final String SERIALIZED_NAME_IAM_ROLE_ARN = "IamRoleArn";
  @SerializedName(SERIALIZED_NAME_IAM_ROLE_ARN)
  private String iamRoleArn;

  public static final String SERIALIZED_NAME_CREATED_BY = "CreatedBy";
  @SerializedName(SERIALIZED_NAME_CREATED_BY)
  private BackupJobCreatedBy createdBy;

  public static final String SERIALIZED_NAME_EXPECTED_COMPLETION_DATE = "ExpectedCompletionDate";
  @SerializedName(SERIALIZED_NAME_EXPECTED_COMPLETION_DATE)
  private OffsetDateTime expectedCompletionDate;

  public static final String SERIALIZED_NAME_START_BY = "StartBy";
  @SerializedName(SERIALIZED_NAME_START_BY)
  private OffsetDateTime startBy;

  public static final String SERIALIZED_NAME_RESOURCE_TYPE = "ResourceType";
  @SerializedName(SERIALIZED_NAME_RESOURCE_TYPE)
  private String resourceType;

  public static final String SERIALIZED_NAME_BYTES_TRANSFERRED = "BytesTransferred";
  @SerializedName(SERIALIZED_NAME_BYTES_TRANSFERRED)
  private Integer bytesTransferred;

  public static final String SERIALIZED_NAME_BACKUP_OPTIONS = "BackupOptions";
  @SerializedName(SERIALIZED_NAME_BACKUP_OPTIONS)
  private Map backupOptions;

  public static final String SERIALIZED_NAME_BACKUP_TYPE = "BackupType";
  @SerializedName(SERIALIZED_NAME_BACKUP_TYPE)
  private String backupType;

  public static final String SERIALIZED_NAME_PARENT_JOB_ID = "ParentJobId";
  @SerializedName(SERIALIZED_NAME_PARENT_JOB_ID)
  private String parentJobId;

  public static final String SERIALIZED_NAME_IS_PARENT = "IsParent";
  @SerializedName(SERIALIZED_NAME_IS_PARENT)
  private Boolean isParent;

  public static final String SERIALIZED_NAME_RESOURCE_NAME = "ResourceName";
  @SerializedName(SERIALIZED_NAME_RESOURCE_NAME)
  private String resourceName;

  public BackupJob() {
  }

  public BackupJob accountId(String accountId) {
    this.accountId = accountId;
    return this;
  }

  /**
   * Get accountId
   * @return accountId
   */
  @javax.annotation.Nullable
  public String getAccountId() {
    return accountId;
  }

  public void setAccountId(String accountId) {
    this.accountId = accountId;
  }


  public BackupJob backupJobId(String backupJobId) {
    this.backupJobId = backupJobId;
    return this;
  }

  /**
   * Get backupJobId
   * @return backupJobId
   */
  @javax.annotation.Nullable
  public String getBackupJobId() {
    return backupJobId;
  }

  public void setBackupJobId(String backupJobId) {
    this.backupJobId = backupJobId;
  }


  public BackupJob backupVaultName(String backupVaultName) {
    this.backupVaultName = backupVaultName;
    return this;
  }

  /**
   * Get backupVaultName
   * @return backupVaultName
   */
  @javax.annotation.Nullable
  public String getBackupVaultName() {
    return backupVaultName;
  }

  public void setBackupVaultName(String backupVaultName) {
    this.backupVaultName = backupVaultName;
  }


  public BackupJob backupVaultArn(String backupVaultArn) {
    this.backupVaultArn = backupVaultArn;
    return this;
  }

  /**
   * Get backupVaultArn
   * @return backupVaultArn
   */
  @javax.annotation.Nullable
  public String getBackupVaultArn() {
    return backupVaultArn;
  }

  public void setBackupVaultArn(String backupVaultArn) {
    this.backupVaultArn = backupVaultArn;
  }


  public BackupJob recoveryPointArn(String recoveryPointArn) {
    this.recoveryPointArn = recoveryPointArn;
    return this;
  }

  /**
   * Get recoveryPointArn
   * @return recoveryPointArn
   */
  @javax.annotation.Nullable
  public String getRecoveryPointArn() {
    return recoveryPointArn;
  }

  public void setRecoveryPointArn(String recoveryPointArn) {
    this.recoveryPointArn = recoveryPointArn;
  }


  public BackupJob resourceArn(String resourceArn) {
    this.resourceArn = resourceArn;
    return this;
  }

  /**
   * Get resourceArn
   * @return resourceArn
   */
  @javax.annotation.Nullable
  public String getResourceArn() {
    return resourceArn;
  }

  public void setResourceArn(String resourceArn) {
    this.resourceArn = resourceArn;
  }


  public BackupJob creationDate(OffsetDateTime creationDate) {
    this.creationDate = creationDate;
    return this;
  }

  /**
   * Get creationDate
   * @return creationDate
   */
  @javax.annotation.Nullable
  public OffsetDateTime getCreationDate() {
    return creationDate;
  }

  public void setCreationDate(OffsetDateTime creationDate) {
    this.creationDate = creationDate;
  }


  public BackupJob completionDate(OffsetDateTime completionDate) {
    this.completionDate = completionDate;
    return this;
  }

  /**
   * Get completionDate
   * @return completionDate
   */
  @javax.annotation.Nullable
  public OffsetDateTime getCompletionDate() {
    return completionDate;
  }

  public void setCompletionDate(OffsetDateTime completionDate) {
    this.completionDate = completionDate;
  }


  public BackupJob state(BackupJobState state) {
    this.state = state;
    return this;
  }

  /**
   * Get state
   * @return state
   */
  @javax.annotation.Nullable
  public BackupJobState getState() {
    return state;
  }

  public void setState(BackupJobState state) {
    this.state = state;
  }


  public BackupJob statusMessage(String statusMessage) {
    this.statusMessage = statusMessage;
    return this;
  }

  /**
   * Get statusMessage
   * @return statusMessage
   */
  @javax.annotation.Nullable
  public String getStatusMessage() {
    return statusMessage;
  }

  public void setStatusMessage(String statusMessage) {
    this.statusMessage = statusMessage;
  }


  public BackupJob percentDone(String percentDone) {
    this.percentDone = percentDone;
    return this;
  }

  /**
   * Get percentDone
   * @return percentDone
   */
  @javax.annotation.Nullable
  public String getPercentDone() {
    return percentDone;
  }

  public void setPercentDone(String percentDone) {
    this.percentDone = percentDone;
  }


  public BackupJob backupSizeInBytes(Integer backupSizeInBytes) {
    this.backupSizeInBytes = backupSizeInBytes;
    return this;
  }

  /**
   * Get backupSizeInBytes
   * @return backupSizeInBytes
   */
  @javax.annotation.Nullable
  public Integer getBackupSizeInBytes() {
    return backupSizeInBytes;
  }

  public void setBackupSizeInBytes(Integer backupSizeInBytes) {
    this.backupSizeInBytes = backupSizeInBytes;
  }


  public BackupJob iamRoleArn(String iamRoleArn) {
    this.iamRoleArn = iamRoleArn;
    return this;
  }

  /**
   * Get iamRoleArn
   * @return iamRoleArn
   */
  @javax.annotation.Nullable
  public String getIamRoleArn() {
    return iamRoleArn;
  }

  public void setIamRoleArn(String iamRoleArn) {
    this.iamRoleArn = iamRoleArn;
  }


  public BackupJob createdBy(BackupJobCreatedBy createdBy) {
    this.createdBy = createdBy;
    return this;
  }

  /**
   * Get createdBy
   * @return createdBy
   */
  @javax.annotation.Nullable
  public BackupJobCreatedBy getCreatedBy() {
    return createdBy;
  }

  public void setCreatedBy(BackupJobCreatedBy createdBy) {
    this.createdBy = createdBy;
  }


  public BackupJob expectedCompletionDate(OffsetDateTime expectedCompletionDate) {
    this.expectedCompletionDate = expectedCompletionDate;
    return this;
  }

  /**
   * Get expectedCompletionDate
   * @return expectedCompletionDate
   */
  @javax.annotation.Nullable
  public OffsetDateTime getExpectedCompletionDate() {
    return expectedCompletionDate;
  }

  public void setExpectedCompletionDate(OffsetDateTime expectedCompletionDate) {
    this.expectedCompletionDate = expectedCompletionDate;
  }


  public BackupJob startBy(OffsetDateTime startBy) {
    this.startBy = startBy;
    return this;
  }

  /**
   * Get startBy
   * @return startBy
   */
  @javax.annotation.Nullable
  public OffsetDateTime getStartBy() {
    return startBy;
  }

  public void setStartBy(OffsetDateTime startBy) {
    this.startBy = startBy;
  }


  public BackupJob resourceType(String resourceType) {
    this.resourceType = resourceType;
    return this;
  }

  /**
   * Get resourceType
   * @return resourceType
   */
  @javax.annotation.Nullable
  public String getResourceType() {
    return resourceType;
  }

  public void setResourceType(String resourceType) {
    this.resourceType = resourceType;
  }


  public BackupJob bytesTransferred(Integer bytesTransferred) {
    this.bytesTransferred = bytesTransferred;
    return this;
  }

  /**
   * Get bytesTransferred
   * @return bytesTransferred
   */
  @javax.annotation.Nullable
  public Integer getBytesTransferred() {
    return bytesTransferred;
  }

  public void setBytesTransferred(Integer bytesTransferred) {
    this.bytesTransferred = bytesTransferred;
  }


  public BackupJob backupOptions(Map backupOptions) {
    this.backupOptions = backupOptions;
    return this;
  }

  /**
   * Get backupOptions
   * @return backupOptions
   */
  @javax.annotation.Nullable
  public Map getBackupOptions() {
    return backupOptions;
  }

  public void setBackupOptions(Map backupOptions) {
    this.backupOptions = backupOptions;
  }


  public BackupJob backupType(String backupType) {
    this.backupType = backupType;
    return this;
  }

  /**
   * Get backupType
   * @return backupType
   */
  @javax.annotation.Nullable
  public String getBackupType() {
    return backupType;
  }

  public void setBackupType(String backupType) {
    this.backupType = backupType;
  }


  public BackupJob parentJobId(String parentJobId) {
    this.parentJobId = parentJobId;
    return this;
  }

  /**
   * Get parentJobId
   * @return parentJobId
   */
  @javax.annotation.Nullable
  public String getParentJobId() {
    return parentJobId;
  }

  public void setParentJobId(String parentJobId) {
    this.parentJobId = parentJobId;
  }


  public BackupJob isParent(Boolean isParent) {
    this.isParent = isParent;
    return this;
  }

  /**
   * Get isParent
   * @return isParent
   */
  @javax.annotation.Nullable
  public Boolean getIsParent() {
    return isParent;
  }

  public void setIsParent(Boolean isParent) {
    this.isParent = isParent;
  }


  public BackupJob resourceName(String resourceName) {
    this.resourceName = resourceName;
    return this;
  }

  /**
   * Get resourceName
   * @return resourceName
   */
  @javax.annotation.Nullable
  public String getResourceName() {
    return resourceName;
  }

  public void setResourceName(String resourceName) {
    this.resourceName = resourceName;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    BackupJob backupJob = (BackupJob) o;
    return Objects.equals(this.accountId, backupJob.accountId) &&
        Objects.equals(this.backupJobId, backupJob.backupJobId) &&
        Objects.equals(this.backupVaultName, backupJob.backupVaultName) &&
        Objects.equals(this.backupVaultArn, backupJob.backupVaultArn) &&
        Objects.equals(this.recoveryPointArn, backupJob.recoveryPointArn) &&
        Objects.equals(this.resourceArn, backupJob.resourceArn) &&
        Objects.equals(this.creationDate, backupJob.creationDate) &&
        Objects.equals(this.completionDate, backupJob.completionDate) &&
        Objects.equals(this.state, backupJob.state) &&
        Objects.equals(this.statusMessage, backupJob.statusMessage) &&
        Objects.equals(this.percentDone, backupJob.percentDone) &&
        Objects.equals(this.backupSizeInBytes, backupJob.backupSizeInBytes) &&
        Objects.equals(this.iamRoleArn, backupJob.iamRoleArn) &&
        Objects.equals(this.createdBy, backupJob.createdBy) &&
        Objects.equals(this.expectedCompletionDate, backupJob.expectedCompletionDate) &&
        Objects.equals(this.startBy, backupJob.startBy) &&
        Objects.equals(this.resourceType, backupJob.resourceType) &&
        Objects.equals(this.bytesTransferred, backupJob.bytesTransferred) &&
        Objects.equals(this.backupOptions, backupJob.backupOptions) &&
        Objects.equals(this.backupType, backupJob.backupType) &&
        Objects.equals(this.parentJobId, backupJob.parentJobId) &&
        Objects.equals(this.isParent, backupJob.isParent) &&
        Objects.equals(this.resourceName, backupJob.resourceName);
  }

  @Override
  public int hashCode() {
    return Objects.hash(accountId, backupJobId, backupVaultName, backupVaultArn, recoveryPointArn, resourceArn, creationDate, completionDate, state, statusMessage, percentDone, backupSizeInBytes, iamRoleArn, createdBy, expectedCompletionDate, startBy, resourceType, bytesTransferred, backupOptions, backupType, parentJobId, isParent, resourceName);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class BackupJob {\n");
    sb.append("    accountId: ").append(toIndentedString(accountId)).append("\n");
    sb.append("    backupJobId: ").append(toIndentedString(backupJobId)).append("\n");
    sb.append("    backupVaultName: ").append(toIndentedString(backupVaultName)).append("\n");
    sb.append("    backupVaultArn: ").append(toIndentedString(backupVaultArn)).append("\n");
    sb.append("    recoveryPointArn: ").append(toIndentedString(recoveryPointArn)).append("\n");
    sb.append("    resourceArn: ").append(toIndentedString(resourceArn)).append("\n");
    sb.append("    creationDate: ").append(toIndentedString(creationDate)).append("\n");
    sb.append("    completionDate: ").append(toIndentedString(completionDate)).append("\n");
    sb.append("    state: ").append(toIndentedString(state)).append("\n");
    sb.append("    statusMessage: ").append(toIndentedString(statusMessage)).append("\n");
    sb.append("    percentDone: ").append(toIndentedString(percentDone)).append("\n");
    sb.append("    backupSizeInBytes: ").append(toIndentedString(backupSizeInBytes)).append("\n");
    sb.append("    iamRoleArn: ").append(toIndentedString(iamRoleArn)).append("\n");
    sb.append("    createdBy: ").append(toIndentedString(createdBy)).append("\n");
    sb.append("    expectedCompletionDate: ").append(toIndentedString(expectedCompletionDate)).append("\n");
    sb.append("    startBy: ").append(toIndentedString(startBy)).append("\n");
    sb.append("    resourceType: ").append(toIndentedString(resourceType)).append("\n");
    sb.append("    bytesTransferred: ").append(toIndentedString(bytesTransferred)).append("\n");
    sb.append("    backupOptions: ").append(toIndentedString(backupOptions)).append("\n");
    sb.append("    backupType: ").append(toIndentedString(backupType)).append("\n");
    sb.append("    parentJobId: ").append(toIndentedString(parentJobId)).append("\n");
    sb.append("    isParent: ").append(toIndentedString(isParent)).append("\n");
    sb.append("    resourceName: ").append(toIndentedString(resourceName)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("AccountId");
    openapiFields.add("BackupJobId");
    openapiFields.add("BackupVaultName");
    openapiFields.add("BackupVaultArn");
    openapiFields.add("RecoveryPointArn");
    openapiFields.add("ResourceArn");
    openapiFields.add("CreationDate");
    openapiFields.add("CompletionDate");
    openapiFields.add("State");
    openapiFields.add("StatusMessage");
    openapiFields.add("PercentDone");
    openapiFields.add("BackupSizeInBytes");
    openapiFields.add("IamRoleArn");
    openapiFields.add("CreatedBy");
    openapiFields.add("ExpectedCompletionDate");
    openapiFields.add("StartBy");
    openapiFields.add("ResourceType");
    openapiFields.add("BytesTransferred");
    openapiFields.add("BackupOptions");
    openapiFields.add("BackupType");
    openapiFields.add("ParentJobId");
    openapiFields.add("IsParent");
    openapiFields.add("ResourceName");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to BackupJob
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!BackupJob.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in BackupJob is not found in the empty JSON string", BackupJob.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!BackupJob.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `BackupJob` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // validate the optional field `AccountId`
      if (jsonObj.get("AccountId") != null && !jsonObj.get("AccountId").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("AccountId"));
      }
      // validate the optional field `BackupJobId`
      if (jsonObj.get("BackupJobId") != null && !jsonObj.get("BackupJobId").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("BackupJobId"));
      }
      // validate the optional field `BackupVaultName`
      if (jsonObj.get("BackupVaultName") != null && !jsonObj.get("BackupVaultName").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("BackupVaultName"));
      }
      // validate the optional field `BackupVaultArn`
      if (jsonObj.get("BackupVaultArn") != null && !jsonObj.get("BackupVaultArn").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("BackupVaultArn"));
      }
      // validate the optional field `RecoveryPointArn`
      if (jsonObj.get("RecoveryPointArn") != null && !jsonObj.get("RecoveryPointArn").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("RecoveryPointArn"));
      }
      // validate the optional field `ResourceArn`
      if (jsonObj.get("ResourceArn") != null && !jsonObj.get("ResourceArn").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("ResourceArn"));
      }
      // validate the optional field `CreationDate`
      if (jsonObj.get("CreationDate") != null && !jsonObj.get("CreationDate").isJsonNull()) {
        OffsetDateTime.validateJsonElement(jsonObj.get("CreationDate"));
      }
      // validate the optional field `CompletionDate`
      if (jsonObj.get("CompletionDate") != null && !jsonObj.get("CompletionDate").isJsonNull()) {
        OffsetDateTime.validateJsonElement(jsonObj.get("CompletionDate"));
      }
      // validate the optional field `State`
      if (jsonObj.get("State") != null && !jsonObj.get("State").isJsonNull()) {
        BackupJobState.validateJsonElement(jsonObj.get("State"));
      }
      // validate the optional field `StatusMessage`
      if (jsonObj.get("StatusMessage") != null && !jsonObj.get("StatusMessage").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("StatusMessage"));
      }
      // validate the optional field `PercentDone`
      if (jsonObj.get("PercentDone") != null && !jsonObj.get("PercentDone").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("PercentDone"));
      }
      // validate the optional field `BackupSizeInBytes`
      if (jsonObj.get("BackupSizeInBytes") != null && !jsonObj.get("BackupSizeInBytes").isJsonNull()) {
        Integer.validateJsonElement(jsonObj.get("BackupSizeInBytes"));
      }
      // validate the optional field `IamRoleArn`
      if (jsonObj.get("IamRoleArn") != null && !jsonObj.get("IamRoleArn").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("IamRoleArn"));
      }
      // validate the optional field `CreatedBy`
      if (jsonObj.get("CreatedBy") != null && !jsonObj.get("CreatedBy").isJsonNull()) {
        BackupJobCreatedBy.validateJsonElement(jsonObj.get("CreatedBy"));
      }
      // validate the optional field `ExpectedCompletionDate`
      if (jsonObj.get("ExpectedCompletionDate") != null && !jsonObj.get("ExpectedCompletionDate").isJsonNull()) {
        OffsetDateTime.validateJsonElement(jsonObj.get("ExpectedCompletionDate"));
      }
      // validate the optional field `StartBy`
      if (jsonObj.get("StartBy") != null && !jsonObj.get("StartBy").isJsonNull()) {
        OffsetDateTime.validateJsonElement(jsonObj.get("StartBy"));
      }
      // validate the optional field `ResourceType`
      if (jsonObj.get("ResourceType") != null && !jsonObj.get("ResourceType").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("ResourceType"));
      }
      // validate the optional field `BytesTransferred`
      if (jsonObj.get("BytesTransferred") != null && !jsonObj.get("BytesTransferred").isJsonNull()) {
        Integer.validateJsonElement(jsonObj.get("BytesTransferred"));
      }
      // validate the optional field `BackupOptions`
      if (jsonObj.get("BackupOptions") != null && !jsonObj.get("BackupOptions").isJsonNull()) {
        Map.validateJsonElement(jsonObj.get("BackupOptions"));
      }
      // validate the optional field `BackupType`
      if (jsonObj.get("BackupType") != null && !jsonObj.get("BackupType").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("BackupType"));
      }
      // validate the optional field `ParentJobId`
      if (jsonObj.get("ParentJobId") != null && !jsonObj.get("ParentJobId").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("ParentJobId"));
      }
      // validate the optional field `IsParent`
      if (jsonObj.get("IsParent") != null && !jsonObj.get("IsParent").isJsonNull()) {
        Boolean.validateJsonElement(jsonObj.get("IsParent"));
      }
      // validate the optional field `ResourceName`
      if (jsonObj.get("ResourceName") != null && !jsonObj.get("ResourceName").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("ResourceName"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!BackupJob.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'BackupJob' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<BackupJob> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(BackupJob.class));

       return (TypeAdapter<T>) new TypeAdapter<BackupJob>() {
           @Override
           public void write(JsonWriter out, BackupJob value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public BackupJob read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of BackupJob given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of BackupJob
   * @throws IOException if the JSON string is invalid with respect to BackupJob
   */
  public static BackupJob fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, BackupJob.class);
  }

  /**
   * Convert an instance of BackupJob to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

