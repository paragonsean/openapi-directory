/*
 * AWS Backup
 * <fullname>Backup</fullname> <p>Backup is a unified backup service designed to protect Amazon Web Services services and their associated data. Backup simplifies the creation, migration, restoration, and deletion of backups, while also providing reporting and auditing.</p>
 *
 * The version of the OpenAPI document: 2018-11-15
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.time.OffsetDateTime;
import java.util.Arrays;
import org.openapitools.client.model.RestoreJobStatus;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * DescribeRestoreJobOutput
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T12:06:47.732009-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class DescribeRestoreJobOutput {
  public static final String SERIALIZED_NAME_ACCOUNT_ID = "AccountId";
  @SerializedName(SERIALIZED_NAME_ACCOUNT_ID)
  private String accountId;

  public static final String SERIALIZED_NAME_RESTORE_JOB_ID = "RestoreJobId";
  @SerializedName(SERIALIZED_NAME_RESTORE_JOB_ID)
  private String restoreJobId;

  public static final String SERIALIZED_NAME_RECOVERY_POINT_ARN = "RecoveryPointArn";
  @SerializedName(SERIALIZED_NAME_RECOVERY_POINT_ARN)
  private String recoveryPointArn;

  public static final String SERIALIZED_NAME_CREATION_DATE = "CreationDate";
  @SerializedName(SERIALIZED_NAME_CREATION_DATE)
  private OffsetDateTime creationDate;

  public static final String SERIALIZED_NAME_COMPLETION_DATE = "CompletionDate";
  @SerializedName(SERIALIZED_NAME_COMPLETION_DATE)
  private OffsetDateTime completionDate;

  public static final String SERIALIZED_NAME_STATUS = "Status";
  @SerializedName(SERIALIZED_NAME_STATUS)
  private RestoreJobStatus status;

  public static final String SERIALIZED_NAME_STATUS_MESSAGE = "StatusMessage";
  @SerializedName(SERIALIZED_NAME_STATUS_MESSAGE)
  private String statusMessage;

  public static final String SERIALIZED_NAME_PERCENT_DONE = "PercentDone";
  @SerializedName(SERIALIZED_NAME_PERCENT_DONE)
  private String percentDone;

  public static final String SERIALIZED_NAME_BACKUP_SIZE_IN_BYTES = "BackupSizeInBytes";
  @SerializedName(SERIALIZED_NAME_BACKUP_SIZE_IN_BYTES)
  private Integer backupSizeInBytes;

  public static final String SERIALIZED_NAME_IAM_ROLE_ARN = "IamRoleArn";
  @SerializedName(SERIALIZED_NAME_IAM_ROLE_ARN)
  private String iamRoleArn;

  public static final String SERIALIZED_NAME_EXPECTED_COMPLETION_TIME_MINUTES = "ExpectedCompletionTimeMinutes";
  @SerializedName(SERIALIZED_NAME_EXPECTED_COMPLETION_TIME_MINUTES)
  private Integer expectedCompletionTimeMinutes;

  public static final String SERIALIZED_NAME_CREATED_RESOURCE_ARN = "CreatedResourceArn";
  @SerializedName(SERIALIZED_NAME_CREATED_RESOURCE_ARN)
  private String createdResourceArn;

  public static final String SERIALIZED_NAME_RESOURCE_TYPE = "ResourceType";
  @SerializedName(SERIALIZED_NAME_RESOURCE_TYPE)
  private String resourceType;

  public DescribeRestoreJobOutput() {
  }

  public DescribeRestoreJobOutput accountId(String accountId) {
    this.accountId = accountId;
    return this;
  }

  /**
   * Get accountId
   * @return accountId
   */
  @javax.annotation.Nullable
  public String getAccountId() {
    return accountId;
  }

  public void setAccountId(String accountId) {
    this.accountId = accountId;
  }


  public DescribeRestoreJobOutput restoreJobId(String restoreJobId) {
    this.restoreJobId = restoreJobId;
    return this;
  }

  /**
   * Get restoreJobId
   * @return restoreJobId
   */
  @javax.annotation.Nullable
  public String getRestoreJobId() {
    return restoreJobId;
  }

  public void setRestoreJobId(String restoreJobId) {
    this.restoreJobId = restoreJobId;
  }


  public DescribeRestoreJobOutput recoveryPointArn(String recoveryPointArn) {
    this.recoveryPointArn = recoveryPointArn;
    return this;
  }

  /**
   * Get recoveryPointArn
   * @return recoveryPointArn
   */
  @javax.annotation.Nullable
  public String getRecoveryPointArn() {
    return recoveryPointArn;
  }

  public void setRecoveryPointArn(String recoveryPointArn) {
    this.recoveryPointArn = recoveryPointArn;
  }


  public DescribeRestoreJobOutput creationDate(OffsetDateTime creationDate) {
    this.creationDate = creationDate;
    return this;
  }

  /**
   * Get creationDate
   * @return creationDate
   */
  @javax.annotation.Nullable
  public OffsetDateTime getCreationDate() {
    return creationDate;
  }

  public void setCreationDate(OffsetDateTime creationDate) {
    this.creationDate = creationDate;
  }


  public DescribeRestoreJobOutput completionDate(OffsetDateTime completionDate) {
    this.completionDate = completionDate;
    return this;
  }

  /**
   * Get completionDate
   * @return completionDate
   */
  @javax.annotation.Nullable
  public OffsetDateTime getCompletionDate() {
    return completionDate;
  }

  public void setCompletionDate(OffsetDateTime completionDate) {
    this.completionDate = completionDate;
  }


  public DescribeRestoreJobOutput status(RestoreJobStatus status) {
    this.status = status;
    return this;
  }

  /**
   * Get status
   * @return status
   */
  @javax.annotation.Nullable
  public RestoreJobStatus getStatus() {
    return status;
  }

  public void setStatus(RestoreJobStatus status) {
    this.status = status;
  }


  public DescribeRestoreJobOutput statusMessage(String statusMessage) {
    this.statusMessage = statusMessage;
    return this;
  }

  /**
   * Get statusMessage
   * @return statusMessage
   */
  @javax.annotation.Nullable
  public String getStatusMessage() {
    return statusMessage;
  }

  public void setStatusMessage(String statusMessage) {
    this.statusMessage = statusMessage;
  }


  public DescribeRestoreJobOutput percentDone(String percentDone) {
    this.percentDone = percentDone;
    return this;
  }

  /**
   * Get percentDone
   * @return percentDone
   */
  @javax.annotation.Nullable
  public String getPercentDone() {
    return percentDone;
  }

  public void setPercentDone(String percentDone) {
    this.percentDone = percentDone;
  }


  public DescribeRestoreJobOutput backupSizeInBytes(Integer backupSizeInBytes) {
    this.backupSizeInBytes = backupSizeInBytes;
    return this;
  }

  /**
   * Get backupSizeInBytes
   * @return backupSizeInBytes
   */
  @javax.annotation.Nullable
  public Integer getBackupSizeInBytes() {
    return backupSizeInBytes;
  }

  public void setBackupSizeInBytes(Integer backupSizeInBytes) {
    this.backupSizeInBytes = backupSizeInBytes;
  }


  public DescribeRestoreJobOutput iamRoleArn(String iamRoleArn) {
    this.iamRoleArn = iamRoleArn;
    return this;
  }

  /**
   * Get iamRoleArn
   * @return iamRoleArn
   */
  @javax.annotation.Nullable
  public String getIamRoleArn() {
    return iamRoleArn;
  }

  public void setIamRoleArn(String iamRoleArn) {
    this.iamRoleArn = iamRoleArn;
  }


  public DescribeRestoreJobOutput expectedCompletionTimeMinutes(Integer expectedCompletionTimeMinutes) {
    this.expectedCompletionTimeMinutes = expectedCompletionTimeMinutes;
    return this;
  }

  /**
   * Get expectedCompletionTimeMinutes
   * @return expectedCompletionTimeMinutes
   */
  @javax.annotation.Nullable
  public Integer getExpectedCompletionTimeMinutes() {
    return expectedCompletionTimeMinutes;
  }

  public void setExpectedCompletionTimeMinutes(Integer expectedCompletionTimeMinutes) {
    this.expectedCompletionTimeMinutes = expectedCompletionTimeMinutes;
  }


  public DescribeRestoreJobOutput createdResourceArn(String createdResourceArn) {
    this.createdResourceArn = createdResourceArn;
    return this;
  }

  /**
   * Get createdResourceArn
   * @return createdResourceArn
   */
  @javax.annotation.Nullable
  public String getCreatedResourceArn() {
    return createdResourceArn;
  }

  public void setCreatedResourceArn(String createdResourceArn) {
    this.createdResourceArn = createdResourceArn;
  }


  public DescribeRestoreJobOutput resourceType(String resourceType) {
    this.resourceType = resourceType;
    return this;
  }

  /**
   * Get resourceType
   * @return resourceType
   */
  @javax.annotation.Nullable
  public String getResourceType() {
    return resourceType;
  }

  public void setResourceType(String resourceType) {
    this.resourceType = resourceType;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    DescribeRestoreJobOutput describeRestoreJobOutput = (DescribeRestoreJobOutput) o;
    return Objects.equals(this.accountId, describeRestoreJobOutput.accountId) &&
        Objects.equals(this.restoreJobId, describeRestoreJobOutput.restoreJobId) &&
        Objects.equals(this.recoveryPointArn, describeRestoreJobOutput.recoveryPointArn) &&
        Objects.equals(this.creationDate, describeRestoreJobOutput.creationDate) &&
        Objects.equals(this.completionDate, describeRestoreJobOutput.completionDate) &&
        Objects.equals(this.status, describeRestoreJobOutput.status) &&
        Objects.equals(this.statusMessage, describeRestoreJobOutput.statusMessage) &&
        Objects.equals(this.percentDone, describeRestoreJobOutput.percentDone) &&
        Objects.equals(this.backupSizeInBytes, describeRestoreJobOutput.backupSizeInBytes) &&
        Objects.equals(this.iamRoleArn, describeRestoreJobOutput.iamRoleArn) &&
        Objects.equals(this.expectedCompletionTimeMinutes, describeRestoreJobOutput.expectedCompletionTimeMinutes) &&
        Objects.equals(this.createdResourceArn, describeRestoreJobOutput.createdResourceArn) &&
        Objects.equals(this.resourceType, describeRestoreJobOutput.resourceType);
  }

  @Override
  public int hashCode() {
    return Objects.hash(accountId, restoreJobId, recoveryPointArn, creationDate, completionDate, status, statusMessage, percentDone, backupSizeInBytes, iamRoleArn, expectedCompletionTimeMinutes, createdResourceArn, resourceType);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class DescribeRestoreJobOutput {\n");
    sb.append("    accountId: ").append(toIndentedString(accountId)).append("\n");
    sb.append("    restoreJobId: ").append(toIndentedString(restoreJobId)).append("\n");
    sb.append("    recoveryPointArn: ").append(toIndentedString(recoveryPointArn)).append("\n");
    sb.append("    creationDate: ").append(toIndentedString(creationDate)).append("\n");
    sb.append("    completionDate: ").append(toIndentedString(completionDate)).append("\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("    statusMessage: ").append(toIndentedString(statusMessage)).append("\n");
    sb.append("    percentDone: ").append(toIndentedString(percentDone)).append("\n");
    sb.append("    backupSizeInBytes: ").append(toIndentedString(backupSizeInBytes)).append("\n");
    sb.append("    iamRoleArn: ").append(toIndentedString(iamRoleArn)).append("\n");
    sb.append("    expectedCompletionTimeMinutes: ").append(toIndentedString(expectedCompletionTimeMinutes)).append("\n");
    sb.append("    createdResourceArn: ").append(toIndentedString(createdResourceArn)).append("\n");
    sb.append("    resourceType: ").append(toIndentedString(resourceType)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("AccountId");
    openapiFields.add("RestoreJobId");
    openapiFields.add("RecoveryPointArn");
    openapiFields.add("CreationDate");
    openapiFields.add("CompletionDate");
    openapiFields.add("Status");
    openapiFields.add("StatusMessage");
    openapiFields.add("PercentDone");
    openapiFields.add("BackupSizeInBytes");
    openapiFields.add("IamRoleArn");
    openapiFields.add("ExpectedCompletionTimeMinutes");
    openapiFields.add("CreatedResourceArn");
    openapiFields.add("ResourceType");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to DescribeRestoreJobOutput
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!DescribeRestoreJobOutput.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in DescribeRestoreJobOutput is not found in the empty JSON string", DescribeRestoreJobOutput.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!DescribeRestoreJobOutput.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `DescribeRestoreJobOutput` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // validate the optional field `AccountId`
      if (jsonObj.get("AccountId") != null && !jsonObj.get("AccountId").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("AccountId"));
      }
      // validate the optional field `RestoreJobId`
      if (jsonObj.get("RestoreJobId") != null && !jsonObj.get("RestoreJobId").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("RestoreJobId"));
      }
      // validate the optional field `RecoveryPointArn`
      if (jsonObj.get("RecoveryPointArn") != null && !jsonObj.get("RecoveryPointArn").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("RecoveryPointArn"));
      }
      // validate the optional field `CreationDate`
      if (jsonObj.get("CreationDate") != null && !jsonObj.get("CreationDate").isJsonNull()) {
        OffsetDateTime.validateJsonElement(jsonObj.get("CreationDate"));
      }
      // validate the optional field `CompletionDate`
      if (jsonObj.get("CompletionDate") != null && !jsonObj.get("CompletionDate").isJsonNull()) {
        OffsetDateTime.validateJsonElement(jsonObj.get("CompletionDate"));
      }
      // validate the optional field `Status`
      if (jsonObj.get("Status") != null && !jsonObj.get("Status").isJsonNull()) {
        RestoreJobStatus.validateJsonElement(jsonObj.get("Status"));
      }
      // validate the optional field `StatusMessage`
      if (jsonObj.get("StatusMessage") != null && !jsonObj.get("StatusMessage").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("StatusMessage"));
      }
      // validate the optional field `PercentDone`
      if (jsonObj.get("PercentDone") != null && !jsonObj.get("PercentDone").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("PercentDone"));
      }
      // validate the optional field `BackupSizeInBytes`
      if (jsonObj.get("BackupSizeInBytes") != null && !jsonObj.get("BackupSizeInBytes").isJsonNull()) {
        Integer.validateJsonElement(jsonObj.get("BackupSizeInBytes"));
      }
      // validate the optional field `IamRoleArn`
      if (jsonObj.get("IamRoleArn") != null && !jsonObj.get("IamRoleArn").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("IamRoleArn"));
      }
      // validate the optional field `ExpectedCompletionTimeMinutes`
      if (jsonObj.get("ExpectedCompletionTimeMinutes") != null && !jsonObj.get("ExpectedCompletionTimeMinutes").isJsonNull()) {
        Integer.validateJsonElement(jsonObj.get("ExpectedCompletionTimeMinutes"));
      }
      // validate the optional field `CreatedResourceArn`
      if (jsonObj.get("CreatedResourceArn") != null && !jsonObj.get("CreatedResourceArn").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("CreatedResourceArn"));
      }
      // validate the optional field `ResourceType`
      if (jsonObj.get("ResourceType") != null && !jsonObj.get("ResourceType").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("ResourceType"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!DescribeRestoreJobOutput.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'DescribeRestoreJobOutput' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<DescribeRestoreJobOutput> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(DescribeRestoreJobOutput.class));

       return (TypeAdapter<T>) new TypeAdapter<DescribeRestoreJobOutput>() {
           @Override
           public void write(JsonWriter out, DescribeRestoreJobOutput value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public DescribeRestoreJobOutput read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of DescribeRestoreJobOutput given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of DescribeRestoreJobOutput
   * @throws IOException if the JSON string is invalid with respect to DescribeRestoreJobOutput
   */
  public static DescribeRestoreJobOutput fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, DescribeRestoreJobOutput.class);
  }

  /**
   * Convert an instance of DescribeRestoreJobOutput to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

