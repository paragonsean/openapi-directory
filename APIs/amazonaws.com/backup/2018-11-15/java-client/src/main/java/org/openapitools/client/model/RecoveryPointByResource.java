/*
 * AWS Backup
 * <fullname>Backup</fullname> <p>Backup is a unified backup service designed to protect Amazon Web Services services and their associated data. Backup simplifies the creation, migration, restoration, and deletion of backups, while also providing reporting and auditing.</p>
 *
 * The version of the OpenAPI document: 2018-11-15
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.time.OffsetDateTime;
import java.util.Arrays;
import org.openapitools.client.model.RecoveryPointStatus;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * Contains detailed information about a saved recovery point.
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T12:06:47.732009-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class RecoveryPointByResource {
  public static final String SERIALIZED_NAME_RECOVERY_POINT_ARN = "RecoveryPointArn";
  @SerializedName(SERIALIZED_NAME_RECOVERY_POINT_ARN)
  private String recoveryPointArn;

  public static final String SERIALIZED_NAME_CREATION_DATE = "CreationDate";
  @SerializedName(SERIALIZED_NAME_CREATION_DATE)
  private OffsetDateTime creationDate;

  public static final String SERIALIZED_NAME_STATUS = "Status";
  @SerializedName(SERIALIZED_NAME_STATUS)
  private RecoveryPointStatus status;

  public static final String SERIALIZED_NAME_STATUS_MESSAGE = "StatusMessage";
  @SerializedName(SERIALIZED_NAME_STATUS_MESSAGE)
  private String statusMessage;

  public static final String SERIALIZED_NAME_ENCRYPTION_KEY_ARN = "EncryptionKeyArn";
  @SerializedName(SERIALIZED_NAME_ENCRYPTION_KEY_ARN)
  private String encryptionKeyArn;

  public static final String SERIALIZED_NAME_BACKUP_SIZE_BYTES = "BackupSizeBytes";
  @SerializedName(SERIALIZED_NAME_BACKUP_SIZE_BYTES)
  private Integer backupSizeBytes;

  public static final String SERIALIZED_NAME_BACKUP_VAULT_NAME = "BackupVaultName";
  @SerializedName(SERIALIZED_NAME_BACKUP_VAULT_NAME)
  private String backupVaultName;

  public static final String SERIALIZED_NAME_IS_PARENT = "IsParent";
  @SerializedName(SERIALIZED_NAME_IS_PARENT)
  private Boolean isParent;

  public static final String SERIALIZED_NAME_PARENT_RECOVERY_POINT_ARN = "ParentRecoveryPointArn";
  @SerializedName(SERIALIZED_NAME_PARENT_RECOVERY_POINT_ARN)
  private String parentRecoveryPointArn;

  public static final String SERIALIZED_NAME_RESOURCE_NAME = "ResourceName";
  @SerializedName(SERIALIZED_NAME_RESOURCE_NAME)
  private String resourceName;

  public RecoveryPointByResource() {
  }

  public RecoveryPointByResource recoveryPointArn(String recoveryPointArn) {
    this.recoveryPointArn = recoveryPointArn;
    return this;
  }

  /**
   * Get recoveryPointArn
   * @return recoveryPointArn
   */
  @javax.annotation.Nullable
  public String getRecoveryPointArn() {
    return recoveryPointArn;
  }

  public void setRecoveryPointArn(String recoveryPointArn) {
    this.recoveryPointArn = recoveryPointArn;
  }


  public RecoveryPointByResource creationDate(OffsetDateTime creationDate) {
    this.creationDate = creationDate;
    return this;
  }

  /**
   * Get creationDate
   * @return creationDate
   */
  @javax.annotation.Nullable
  public OffsetDateTime getCreationDate() {
    return creationDate;
  }

  public void setCreationDate(OffsetDateTime creationDate) {
    this.creationDate = creationDate;
  }


  public RecoveryPointByResource status(RecoveryPointStatus status) {
    this.status = status;
    return this;
  }

  /**
   * Get status
   * @return status
   */
  @javax.annotation.Nullable
  public RecoveryPointStatus getStatus() {
    return status;
  }

  public void setStatus(RecoveryPointStatus status) {
    this.status = status;
  }


  public RecoveryPointByResource statusMessage(String statusMessage) {
    this.statusMessage = statusMessage;
    return this;
  }

  /**
   * Get statusMessage
   * @return statusMessage
   */
  @javax.annotation.Nullable
  public String getStatusMessage() {
    return statusMessage;
  }

  public void setStatusMessage(String statusMessage) {
    this.statusMessage = statusMessage;
  }


  public RecoveryPointByResource encryptionKeyArn(String encryptionKeyArn) {
    this.encryptionKeyArn = encryptionKeyArn;
    return this;
  }

  /**
   * Get encryptionKeyArn
   * @return encryptionKeyArn
   */
  @javax.annotation.Nullable
  public String getEncryptionKeyArn() {
    return encryptionKeyArn;
  }

  public void setEncryptionKeyArn(String encryptionKeyArn) {
    this.encryptionKeyArn = encryptionKeyArn;
  }


  public RecoveryPointByResource backupSizeBytes(Integer backupSizeBytes) {
    this.backupSizeBytes = backupSizeBytes;
    return this;
  }

  /**
   * Get backupSizeBytes
   * @return backupSizeBytes
   */
  @javax.annotation.Nullable
  public Integer getBackupSizeBytes() {
    return backupSizeBytes;
  }

  public void setBackupSizeBytes(Integer backupSizeBytes) {
    this.backupSizeBytes = backupSizeBytes;
  }


  public RecoveryPointByResource backupVaultName(String backupVaultName) {
    this.backupVaultName = backupVaultName;
    return this;
  }

  /**
   * Get backupVaultName
   * @return backupVaultName
   */
  @javax.annotation.Nullable
  public String getBackupVaultName() {
    return backupVaultName;
  }

  public void setBackupVaultName(String backupVaultName) {
    this.backupVaultName = backupVaultName;
  }


  public RecoveryPointByResource isParent(Boolean isParent) {
    this.isParent = isParent;
    return this;
  }

  /**
   * Get isParent
   * @return isParent
   */
  @javax.annotation.Nullable
  public Boolean getIsParent() {
    return isParent;
  }

  public void setIsParent(Boolean isParent) {
    this.isParent = isParent;
  }


  public RecoveryPointByResource parentRecoveryPointArn(String parentRecoveryPointArn) {
    this.parentRecoveryPointArn = parentRecoveryPointArn;
    return this;
  }

  /**
   * Get parentRecoveryPointArn
   * @return parentRecoveryPointArn
   */
  @javax.annotation.Nullable
  public String getParentRecoveryPointArn() {
    return parentRecoveryPointArn;
  }

  public void setParentRecoveryPointArn(String parentRecoveryPointArn) {
    this.parentRecoveryPointArn = parentRecoveryPointArn;
  }


  public RecoveryPointByResource resourceName(String resourceName) {
    this.resourceName = resourceName;
    return this;
  }

  /**
   * Get resourceName
   * @return resourceName
   */
  @javax.annotation.Nullable
  public String getResourceName() {
    return resourceName;
  }

  public void setResourceName(String resourceName) {
    this.resourceName = resourceName;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    RecoveryPointByResource recoveryPointByResource = (RecoveryPointByResource) o;
    return Objects.equals(this.recoveryPointArn, recoveryPointByResource.recoveryPointArn) &&
        Objects.equals(this.creationDate, recoveryPointByResource.creationDate) &&
        Objects.equals(this.status, recoveryPointByResource.status) &&
        Objects.equals(this.statusMessage, recoveryPointByResource.statusMessage) &&
        Objects.equals(this.encryptionKeyArn, recoveryPointByResource.encryptionKeyArn) &&
        Objects.equals(this.backupSizeBytes, recoveryPointByResource.backupSizeBytes) &&
        Objects.equals(this.backupVaultName, recoveryPointByResource.backupVaultName) &&
        Objects.equals(this.isParent, recoveryPointByResource.isParent) &&
        Objects.equals(this.parentRecoveryPointArn, recoveryPointByResource.parentRecoveryPointArn) &&
        Objects.equals(this.resourceName, recoveryPointByResource.resourceName);
  }

  @Override
  public int hashCode() {
    return Objects.hash(recoveryPointArn, creationDate, status, statusMessage, encryptionKeyArn, backupSizeBytes, backupVaultName, isParent, parentRecoveryPointArn, resourceName);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class RecoveryPointByResource {\n");
    sb.append("    recoveryPointArn: ").append(toIndentedString(recoveryPointArn)).append("\n");
    sb.append("    creationDate: ").append(toIndentedString(creationDate)).append("\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("    statusMessage: ").append(toIndentedString(statusMessage)).append("\n");
    sb.append("    encryptionKeyArn: ").append(toIndentedString(encryptionKeyArn)).append("\n");
    sb.append("    backupSizeBytes: ").append(toIndentedString(backupSizeBytes)).append("\n");
    sb.append("    backupVaultName: ").append(toIndentedString(backupVaultName)).append("\n");
    sb.append("    isParent: ").append(toIndentedString(isParent)).append("\n");
    sb.append("    parentRecoveryPointArn: ").append(toIndentedString(parentRecoveryPointArn)).append("\n");
    sb.append("    resourceName: ").append(toIndentedString(resourceName)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("RecoveryPointArn");
    openapiFields.add("CreationDate");
    openapiFields.add("Status");
    openapiFields.add("StatusMessage");
    openapiFields.add("EncryptionKeyArn");
    openapiFields.add("BackupSizeBytes");
    openapiFields.add("BackupVaultName");
    openapiFields.add("IsParent");
    openapiFields.add("ParentRecoveryPointArn");
    openapiFields.add("ResourceName");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to RecoveryPointByResource
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!RecoveryPointByResource.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in RecoveryPointByResource is not found in the empty JSON string", RecoveryPointByResource.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!RecoveryPointByResource.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `RecoveryPointByResource` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // validate the optional field `RecoveryPointArn`
      if (jsonObj.get("RecoveryPointArn") != null && !jsonObj.get("RecoveryPointArn").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("RecoveryPointArn"));
      }
      // validate the optional field `CreationDate`
      if (jsonObj.get("CreationDate") != null && !jsonObj.get("CreationDate").isJsonNull()) {
        OffsetDateTime.validateJsonElement(jsonObj.get("CreationDate"));
      }
      // validate the optional field `Status`
      if (jsonObj.get("Status") != null && !jsonObj.get("Status").isJsonNull()) {
        RecoveryPointStatus.validateJsonElement(jsonObj.get("Status"));
      }
      // validate the optional field `StatusMessage`
      if (jsonObj.get("StatusMessage") != null && !jsonObj.get("StatusMessage").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("StatusMessage"));
      }
      // validate the optional field `EncryptionKeyArn`
      if (jsonObj.get("EncryptionKeyArn") != null && !jsonObj.get("EncryptionKeyArn").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("EncryptionKeyArn"));
      }
      // validate the optional field `BackupSizeBytes`
      if (jsonObj.get("BackupSizeBytes") != null && !jsonObj.get("BackupSizeBytes").isJsonNull()) {
        Integer.validateJsonElement(jsonObj.get("BackupSizeBytes"));
      }
      // validate the optional field `BackupVaultName`
      if (jsonObj.get("BackupVaultName") != null && !jsonObj.get("BackupVaultName").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("BackupVaultName"));
      }
      // validate the optional field `IsParent`
      if (jsonObj.get("IsParent") != null && !jsonObj.get("IsParent").isJsonNull()) {
        Boolean.validateJsonElement(jsonObj.get("IsParent"));
      }
      // validate the optional field `ParentRecoveryPointArn`
      if (jsonObj.get("ParentRecoveryPointArn") != null && !jsonObj.get("ParentRecoveryPointArn").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("ParentRecoveryPointArn"));
      }
      // validate the optional field `ResourceName`
      if (jsonObj.get("ResourceName") != null && !jsonObj.get("ResourceName").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("ResourceName"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!RecoveryPointByResource.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'RecoveryPointByResource' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<RecoveryPointByResource> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(RecoveryPointByResource.class));

       return (TypeAdapter<T>) new TypeAdapter<RecoveryPointByResource>() {
           @Override
           public void write(JsonWriter out, RecoveryPointByResource value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public RecoveryPointByResource read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of RecoveryPointByResource given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of RecoveryPointByResource
   * @throws IOException if the JSON string is invalid with respect to RecoveryPointByResource
   */
  public static RecoveryPointByResource fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, RecoveryPointByResource.class);
  }

  /**
   * Convert an instance of RecoveryPointByResource to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

