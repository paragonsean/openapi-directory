/*
 * AWS Backup
 * <fullname>Backup</fullname> <p>Backup is a unified backup service designed to protect Amazon Web Services services and their associated data. Backup simplifies the creation, migration, restoration, and deletion of backups, while also providing reporting and auditing.</p>
 *
 * The version of the OpenAPI document: 2018-11-15
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;
import org.openapitools.client.model.UpdateRecoveryPointLifecycleRequestLifecycle;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * StartCopyJobRequest
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T12:06:47.732009-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class StartCopyJobRequest {
  public static final String SERIALIZED_NAME_RECOVERY_POINT_ARN = "RecoveryPointArn";
  @SerializedName(SERIALIZED_NAME_RECOVERY_POINT_ARN)
  private String recoveryPointArn;

  public static final String SERIALIZED_NAME_SOURCE_BACKUP_VAULT_NAME = "SourceBackupVaultName";
  @SerializedName(SERIALIZED_NAME_SOURCE_BACKUP_VAULT_NAME)
  private String sourceBackupVaultName;

  public static final String SERIALIZED_NAME_DESTINATION_BACKUP_VAULT_ARN = "DestinationBackupVaultArn";
  @SerializedName(SERIALIZED_NAME_DESTINATION_BACKUP_VAULT_ARN)
  private String destinationBackupVaultArn;

  public static final String SERIALIZED_NAME_IAM_ROLE_ARN = "IamRoleArn";
  @SerializedName(SERIALIZED_NAME_IAM_ROLE_ARN)
  private String iamRoleArn;

  public static final String SERIALIZED_NAME_IDEMPOTENCY_TOKEN = "IdempotencyToken";
  @SerializedName(SERIALIZED_NAME_IDEMPOTENCY_TOKEN)
  private String idempotencyToken;

  public static final String SERIALIZED_NAME_LIFECYCLE = "Lifecycle";
  @SerializedName(SERIALIZED_NAME_LIFECYCLE)
  private UpdateRecoveryPointLifecycleRequestLifecycle lifecycle;

  public StartCopyJobRequest() {
  }

  public StartCopyJobRequest recoveryPointArn(String recoveryPointArn) {
    this.recoveryPointArn = recoveryPointArn;
    return this;
  }

  /**
   * An ARN that uniquely identifies a recovery point to use for the copy job; for example, arn:aws:backup:us-east-1:123456789012:recovery-point:1EB3B5E7-9EB0-435A-A80B-108B488B0D45. 
   * @return recoveryPointArn
   */
  @javax.annotation.Nonnull
  public String getRecoveryPointArn() {
    return recoveryPointArn;
  }

  public void setRecoveryPointArn(String recoveryPointArn) {
    this.recoveryPointArn = recoveryPointArn;
  }


  public StartCopyJobRequest sourceBackupVaultName(String sourceBackupVaultName) {
    this.sourceBackupVaultName = sourceBackupVaultName;
    return this;
  }

  /**
   * The name of a logical source container where backups are stored. Backup vaults are identified by names that are unique to the account used to create them and the Amazon Web Services Region where they are created. They consist of lowercase letters, numbers, and hyphens.
   * @return sourceBackupVaultName
   */
  @javax.annotation.Nonnull
  public String getSourceBackupVaultName() {
    return sourceBackupVaultName;
  }

  public void setSourceBackupVaultName(String sourceBackupVaultName) {
    this.sourceBackupVaultName = sourceBackupVaultName;
  }


  public StartCopyJobRequest destinationBackupVaultArn(String destinationBackupVaultArn) {
    this.destinationBackupVaultArn = destinationBackupVaultArn;
    return this;
  }

  /**
   * An Amazon Resource Name (ARN) that uniquely identifies a destination backup vault to copy to; for example, &lt;code&gt;arn:aws:backup:us-east-1:123456789012:vault:aBackupVault&lt;/code&gt;.
   * @return destinationBackupVaultArn
   */
  @javax.annotation.Nonnull
  public String getDestinationBackupVaultArn() {
    return destinationBackupVaultArn;
  }

  public void setDestinationBackupVaultArn(String destinationBackupVaultArn) {
    this.destinationBackupVaultArn = destinationBackupVaultArn;
  }


  public StartCopyJobRequest iamRoleArn(String iamRoleArn) {
    this.iamRoleArn = iamRoleArn;
    return this;
  }

  /**
   * Specifies the IAM role ARN used to copy the target recovery point; for example, &lt;code&gt;arn:aws:iam::123456789012:role/S3Access&lt;/code&gt;.
   * @return iamRoleArn
   */
  @javax.annotation.Nonnull
  public String getIamRoleArn() {
    return iamRoleArn;
  }

  public void setIamRoleArn(String iamRoleArn) {
    this.iamRoleArn = iamRoleArn;
  }


  public StartCopyJobRequest idempotencyToken(String idempotencyToken) {
    this.idempotencyToken = idempotencyToken;
    return this;
  }

  /**
   * A customer-chosen string that you can use to distinguish between otherwise identical calls to &lt;code&gt;StartCopyJob&lt;/code&gt;. Retrying a successful request with the same idempotency token results in a success message with no action taken.
   * @return idempotencyToken
   */
  @javax.annotation.Nullable
  public String getIdempotencyToken() {
    return idempotencyToken;
  }

  public void setIdempotencyToken(String idempotencyToken) {
    this.idempotencyToken = idempotencyToken;
  }


  public StartCopyJobRequest lifecycle(UpdateRecoveryPointLifecycleRequestLifecycle lifecycle) {
    this.lifecycle = lifecycle;
    return this;
  }

  /**
   * Get lifecycle
   * @return lifecycle
   */
  @javax.annotation.Nullable
  public UpdateRecoveryPointLifecycleRequestLifecycle getLifecycle() {
    return lifecycle;
  }

  public void setLifecycle(UpdateRecoveryPointLifecycleRequestLifecycle lifecycle) {
    this.lifecycle = lifecycle;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    StartCopyJobRequest startCopyJobRequest = (StartCopyJobRequest) o;
    return Objects.equals(this.recoveryPointArn, startCopyJobRequest.recoveryPointArn) &&
        Objects.equals(this.sourceBackupVaultName, startCopyJobRequest.sourceBackupVaultName) &&
        Objects.equals(this.destinationBackupVaultArn, startCopyJobRequest.destinationBackupVaultArn) &&
        Objects.equals(this.iamRoleArn, startCopyJobRequest.iamRoleArn) &&
        Objects.equals(this.idempotencyToken, startCopyJobRequest.idempotencyToken) &&
        Objects.equals(this.lifecycle, startCopyJobRequest.lifecycle);
  }

  @Override
  public int hashCode() {
    return Objects.hash(recoveryPointArn, sourceBackupVaultName, destinationBackupVaultArn, iamRoleArn, idempotencyToken, lifecycle);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class StartCopyJobRequest {\n");
    sb.append("    recoveryPointArn: ").append(toIndentedString(recoveryPointArn)).append("\n");
    sb.append("    sourceBackupVaultName: ").append(toIndentedString(sourceBackupVaultName)).append("\n");
    sb.append("    destinationBackupVaultArn: ").append(toIndentedString(destinationBackupVaultArn)).append("\n");
    sb.append("    iamRoleArn: ").append(toIndentedString(iamRoleArn)).append("\n");
    sb.append("    idempotencyToken: ").append(toIndentedString(idempotencyToken)).append("\n");
    sb.append("    lifecycle: ").append(toIndentedString(lifecycle)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("RecoveryPointArn");
    openapiFields.add("SourceBackupVaultName");
    openapiFields.add("DestinationBackupVaultArn");
    openapiFields.add("IamRoleArn");
    openapiFields.add("IdempotencyToken");
    openapiFields.add("Lifecycle");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
    openapiRequiredFields.add("RecoveryPointArn");
    openapiRequiredFields.add("SourceBackupVaultName");
    openapiRequiredFields.add("DestinationBackupVaultArn");
    openapiRequiredFields.add("IamRoleArn");
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to StartCopyJobRequest
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!StartCopyJobRequest.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in StartCopyJobRequest is not found in the empty JSON string", StartCopyJobRequest.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!StartCopyJobRequest.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `StartCopyJobRequest` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }

      // check to make sure all required properties/fields are present in the JSON string
      for (String requiredField : StartCopyJobRequest.openapiRequiredFields) {
        if (jsonElement.getAsJsonObject().get(requiredField) == null) {
          throw new IllegalArgumentException(String.format("The required field `%s` is not found in the JSON string: %s", requiredField, jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if (!jsonObj.get("RecoveryPointArn").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `RecoveryPointArn` to be a primitive type in the JSON string but got `%s`", jsonObj.get("RecoveryPointArn").toString()));
      }
      if (!jsonObj.get("SourceBackupVaultName").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `SourceBackupVaultName` to be a primitive type in the JSON string but got `%s`", jsonObj.get("SourceBackupVaultName").toString()));
      }
      if (!jsonObj.get("DestinationBackupVaultArn").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `DestinationBackupVaultArn` to be a primitive type in the JSON string but got `%s`", jsonObj.get("DestinationBackupVaultArn").toString()));
      }
      if (!jsonObj.get("IamRoleArn").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `IamRoleArn` to be a primitive type in the JSON string but got `%s`", jsonObj.get("IamRoleArn").toString()));
      }
      if ((jsonObj.get("IdempotencyToken") != null && !jsonObj.get("IdempotencyToken").isJsonNull()) && !jsonObj.get("IdempotencyToken").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `IdempotencyToken` to be a primitive type in the JSON string but got `%s`", jsonObj.get("IdempotencyToken").toString()));
      }
      // validate the optional field `Lifecycle`
      if (jsonObj.get("Lifecycle") != null && !jsonObj.get("Lifecycle").isJsonNull()) {
        UpdateRecoveryPointLifecycleRequestLifecycle.validateJsonElement(jsonObj.get("Lifecycle"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!StartCopyJobRequest.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'StartCopyJobRequest' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<StartCopyJobRequest> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(StartCopyJobRequest.class));

       return (TypeAdapter<T>) new TypeAdapter<StartCopyJobRequest>() {
           @Override
           public void write(JsonWriter out, StartCopyJobRequest value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public StartCopyJobRequest read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of StartCopyJobRequest given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of StartCopyJobRequest
   * @throws IOException if the JSON string is invalid with respect to StartCopyJobRequest
   */
  public static StartCopyJobRequest fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, StartCopyJobRequest.class);
  }

  /**
   * Convert an instance of StartCopyJobRequest to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

