/*
 * AWS Backup
 * <fullname>Backup</fullname> <p>Backup is a unified backup service designed to protect Amazon Web Services services and their associated data. Backup simplifies the creation, migration, restoration, and deletion of backups, while also providing reporting and auditing.</p>
 *
 * The version of the OpenAPI document: 2018-11-15
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.CreateBackupSelectionRequestBackupSelectionConditions;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * &lt;p&gt;Used to specify a set of resources to a backup plan.&lt;/p&gt; &lt;p&gt;Specifying your desired &lt;code&gt;Conditions&lt;/code&gt;, &lt;code&gt;ListOfTags&lt;/code&gt;, &lt;code&gt;NotResources&lt;/code&gt;, and/or &lt;code&gt;Resources&lt;/code&gt; is recommended. If none of these are specified, Backup will attempt to select all supported and opted-in storage resources, which could have unintended cost implications.&lt;/p&gt;
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T12:06:47.732009-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class CreateBackupSelectionRequestBackupSelection {
  public static final String SERIALIZED_NAME_SELECTION_NAME = "SelectionName";
  @SerializedName(SERIALIZED_NAME_SELECTION_NAME)
  private String selectionName;

  public static final String SERIALIZED_NAME_IAM_ROLE_ARN = "IamRoleArn";
  @SerializedName(SERIALIZED_NAME_IAM_ROLE_ARN)
  private String iamRoleArn;

  public static final String SERIALIZED_NAME_RESOURCES = "Resources";
  @SerializedName(SERIALIZED_NAME_RESOURCES)
  private List resources;

  public static final String SERIALIZED_NAME_LIST_OF_TAGS = "ListOfTags";
  @SerializedName(SERIALIZED_NAME_LIST_OF_TAGS)
  private List listOfTags;

  public static final String SERIALIZED_NAME_NOT_RESOURCES = "NotResources";
  @SerializedName(SERIALIZED_NAME_NOT_RESOURCES)
  private List notResources;

  public static final String SERIALIZED_NAME_CONDITIONS = "Conditions";
  @SerializedName(SERIALIZED_NAME_CONDITIONS)
  private CreateBackupSelectionRequestBackupSelectionConditions conditions;

  public CreateBackupSelectionRequestBackupSelection() {
  }

  public CreateBackupSelectionRequestBackupSelection selectionName(String selectionName) {
    this.selectionName = selectionName;
    return this;
  }

  /**
   * Get selectionName
   * @return selectionName
   */
  @javax.annotation.Nullable
  public String getSelectionName() {
    return selectionName;
  }

  public void setSelectionName(String selectionName) {
    this.selectionName = selectionName;
  }


  public CreateBackupSelectionRequestBackupSelection iamRoleArn(String iamRoleArn) {
    this.iamRoleArn = iamRoleArn;
    return this;
  }

  /**
   * Get iamRoleArn
   * @return iamRoleArn
   */
  @javax.annotation.Nullable
  public String getIamRoleArn() {
    return iamRoleArn;
  }

  public void setIamRoleArn(String iamRoleArn) {
    this.iamRoleArn = iamRoleArn;
  }


  public CreateBackupSelectionRequestBackupSelection resources(List resources) {
    this.resources = resources;
    return this;
  }

  /**
   * Get resources
   * @return resources
   */
  @javax.annotation.Nullable
  public List getResources() {
    return resources;
  }

  public void setResources(List resources) {
    this.resources = resources;
  }


  public CreateBackupSelectionRequestBackupSelection listOfTags(List listOfTags) {
    this.listOfTags = listOfTags;
    return this;
  }

  /**
   * Get listOfTags
   * @return listOfTags
   */
  @javax.annotation.Nullable
  public List getListOfTags() {
    return listOfTags;
  }

  public void setListOfTags(List listOfTags) {
    this.listOfTags = listOfTags;
  }


  public CreateBackupSelectionRequestBackupSelection notResources(List notResources) {
    this.notResources = notResources;
    return this;
  }

  /**
   * Get notResources
   * @return notResources
   */
  @javax.annotation.Nullable
  public List getNotResources() {
    return notResources;
  }

  public void setNotResources(List notResources) {
    this.notResources = notResources;
  }


  public CreateBackupSelectionRequestBackupSelection conditions(CreateBackupSelectionRequestBackupSelectionConditions conditions) {
    this.conditions = conditions;
    return this;
  }

  /**
   * Get conditions
   * @return conditions
   */
  @javax.annotation.Nullable
  public CreateBackupSelectionRequestBackupSelectionConditions getConditions() {
    return conditions;
  }

  public void setConditions(CreateBackupSelectionRequestBackupSelectionConditions conditions) {
    this.conditions = conditions;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CreateBackupSelectionRequestBackupSelection createBackupSelectionRequestBackupSelection = (CreateBackupSelectionRequestBackupSelection) o;
    return Objects.equals(this.selectionName, createBackupSelectionRequestBackupSelection.selectionName) &&
        Objects.equals(this.iamRoleArn, createBackupSelectionRequestBackupSelection.iamRoleArn) &&
        Objects.equals(this.resources, createBackupSelectionRequestBackupSelection.resources) &&
        Objects.equals(this.listOfTags, createBackupSelectionRequestBackupSelection.listOfTags) &&
        Objects.equals(this.notResources, createBackupSelectionRequestBackupSelection.notResources) &&
        Objects.equals(this.conditions, createBackupSelectionRequestBackupSelection.conditions);
  }

  @Override
  public int hashCode() {
    return Objects.hash(selectionName, iamRoleArn, resources, listOfTags, notResources, conditions);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CreateBackupSelectionRequestBackupSelection {\n");
    sb.append("    selectionName: ").append(toIndentedString(selectionName)).append("\n");
    sb.append("    iamRoleArn: ").append(toIndentedString(iamRoleArn)).append("\n");
    sb.append("    resources: ").append(toIndentedString(resources)).append("\n");
    sb.append("    listOfTags: ").append(toIndentedString(listOfTags)).append("\n");
    sb.append("    notResources: ").append(toIndentedString(notResources)).append("\n");
    sb.append("    conditions: ").append(toIndentedString(conditions)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("SelectionName");
    openapiFields.add("IamRoleArn");
    openapiFields.add("Resources");
    openapiFields.add("ListOfTags");
    openapiFields.add("NotResources");
    openapiFields.add("Conditions");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to CreateBackupSelectionRequestBackupSelection
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!CreateBackupSelectionRequestBackupSelection.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in CreateBackupSelectionRequestBackupSelection is not found in the empty JSON string", CreateBackupSelectionRequestBackupSelection.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!CreateBackupSelectionRequestBackupSelection.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `CreateBackupSelectionRequestBackupSelection` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // validate the optional field `SelectionName`
      if (jsonObj.get("SelectionName") != null && !jsonObj.get("SelectionName").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("SelectionName"));
      }
      // validate the optional field `IamRoleArn`
      if (jsonObj.get("IamRoleArn") != null && !jsonObj.get("IamRoleArn").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("IamRoleArn"));
      }
      // validate the optional field `Resources`
      if (jsonObj.get("Resources") != null && !jsonObj.get("Resources").isJsonNull()) {
        List.validateJsonElement(jsonObj.get("Resources"));
      }
      // validate the optional field `ListOfTags`
      if (jsonObj.get("ListOfTags") != null && !jsonObj.get("ListOfTags").isJsonNull()) {
        List.validateJsonElement(jsonObj.get("ListOfTags"));
      }
      // validate the optional field `NotResources`
      if (jsonObj.get("NotResources") != null && !jsonObj.get("NotResources").isJsonNull()) {
        List.validateJsonElement(jsonObj.get("NotResources"));
      }
      // validate the optional field `Conditions`
      if (jsonObj.get("Conditions") != null && !jsonObj.get("Conditions").isJsonNull()) {
        CreateBackupSelectionRequestBackupSelectionConditions.validateJsonElement(jsonObj.get("Conditions"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!CreateBackupSelectionRequestBackupSelection.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'CreateBackupSelectionRequestBackupSelection' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<CreateBackupSelectionRequestBackupSelection> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(CreateBackupSelectionRequestBackupSelection.class));

       return (TypeAdapter<T>) new TypeAdapter<CreateBackupSelectionRequestBackupSelection>() {
           @Override
           public void write(JsonWriter out, CreateBackupSelectionRequestBackupSelection value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public CreateBackupSelectionRequestBackupSelection read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of CreateBackupSelectionRequestBackupSelection given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of CreateBackupSelectionRequestBackupSelection
   * @throws IOException if the JSON string is invalid with respect to CreateBackupSelectionRequestBackupSelection
   */
  public static CreateBackupSelectionRequestBackupSelection fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, CreateBackupSelectionRequestBackupSelection.class);
  }

  /**
   * Convert an instance of CreateBackupSelectionRequestBackupSelection to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

